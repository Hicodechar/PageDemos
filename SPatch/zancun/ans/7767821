
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v3,2/2] x86_64: enable SWIOTLB if system has SRAT memory regions above MAX_DMA32_PFN - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v3,2/2] x86_64: enable SWIOTLB if system has SRAT memory regions above MAX_DMA32_PFN</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=26722">Igor Mammedov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 4, 2015, 1:07 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1449234426-273049-3-git-send-email-imammedo@redhat.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7767821/mbox/"
   >mbox</a>
|
   <a href="/patch/7767821/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7767821/">/patch/7767821/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id E68FFBEEE1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  4 Dec 2015 13:07:33 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 20C5C20481
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  4 Dec 2015 13:07:33 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 29927205B4
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  4 Dec 2015 13:07:32 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1756026AbbLDNHW (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 4 Dec 2015 08:07:22 -0500
Received: from mx1.redhat.com ([209.132.183.28]:33588 &quot;EHLO mx1.redhat.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751901AbbLDNHS (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 4 Dec 2015 08:07:18 -0500
Received: from int-mx14.intmail.prod.int.phx2.redhat.com
	(int-mx14.intmail.prod.int.phx2.redhat.com [10.5.11.27])
	by mx1.redhat.com (Postfix) with ESMTPS id E5000325DC6;
	Fri,  4 Dec 2015 13:07:17 +0000 (UTC)
Received: from dell-r430-03.lab.eng.brq.redhat.com
	(dell-r430-03.lab.eng.brq.redhat.com [10.34.112.60])
	by int-mx14.intmail.prod.int.phx2.redhat.com (8.14.4/8.14.4) with
	ESMTP id tB4D79Yw002303; Fri, 4 Dec 2015 08:07:15 -0500
From: Igor Mammedov &lt;imammedo@redhat.com&gt;
To: linux-kernel@vger.kernel.org
Cc: tglx@linutronix.de, mingo@redhat.com, hpa@zytor.com,
	konrad.wilk@oracle.com, imammedo@redhat.com, akataria@vmware.com,
	fujita.tomonori@lab.ntt.co.jp, revers@redhat.com, riel@redhat.com,
	pbonzini@redhat.com
Subject: [PATCH v3 2/2] x86_64: enable SWIOTLB if system has SRAT memory
	regions above MAX_DMA32_PFN
Date: Fri,  4 Dec 2015 14:07:06 +0100
Message-Id: &lt;1449234426-273049-3-git-send-email-imammedo@redhat.com&gt;
In-Reply-To: &lt;1449234426-273049-1-git-send-email-imammedo@redhat.com&gt;
References: &lt;1449234426-273049-1-git-send-email-imammedo@redhat.com&gt;
X-Scanned-By: MIMEDefang 2.68 on 10.5.11.27
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=26722">Igor Mammedov</a> - Dec. 4, 2015, 1:07 p.m.</div>
<pre class="content">
when memory hotplug enabled system is booted with less
than 4GB of RAM and then later more RAM is hotplugged
32-bit devices stop functioning with following error:

 nommu_map_single: overflow 327b4f8c0+1522 of device mask ffffffff

the reason for this is that if x86_64 system were booted
with RAM less than 4GB, it doesn&#39;t enable SWIOTLB and
when memory is hotplugged beyond MAX_DMA32_PFN, devices
that expect 32-bit addresses can&#39;t handle 64-bit addresses.

Fix it by tracking max possible PFN when parsing
memory affinity structures from SRAT ACPI table and
enable SWIOTLB if there is hotpluggable memory
regions beyond MAX_DMA32_PFN.

It fixes KVM guests when they use emulated devices
(reproduces with ata_piix, e1000 and usb devices,
 RHBZ: 1275941, 1275977, 1271527)
It also fixes the HyperV, VMWare with emulated devices
which are affected by this issue as well.
<span class="signed-off-by">
Signed-off-by: Igor Mammedov &lt;imammedo@redhat.com&gt;</span>
---
v3:
 - moved &#39;max_possible_pfn&#39; tracking hunk to the patch
   that introduces it.
---
 arch/x86/kernel/pci-swiotlb.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/kernel/pci-swiotlb.c b/arch/x86/kernel/pci-swiotlb.c</span>
<span class="p_header">index adf0392..7c577a1 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-swiotlb.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-swiotlb.c</span>
<span class="p_chunk">@@ -88,7 +88,7 @@</span> <span class="p_context"> int __init pci_swiotlb_detect_4gb(void)</span>
 {
 	/* don&#39;t initialize swiotlb if iommu=off (no_iommu=1) */
 #ifdef CONFIG_X86_64
<span class="p_del">-	if (!no_iommu &amp;&amp; max_pfn &gt; MAX_DMA32_PFN)</span>
<span class="p_add">+	if (!no_iommu &amp;&amp; max_possible_pfn &gt; MAX_DMA32_PFN)</span>
 		swiotlb = 1;
 #endif
 	return swiotlb;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



