
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2] arch/sparc: Avoid DCTI Couples - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2] arch/sparc: Avoid DCTI Couples</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=146821">Babu Moger</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 17, 2017, 8:52 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1489783941-509645-1-git-send-email-babu.moger@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9631579/mbox/"
   >mbox</a>
|
   <a href="/patch/9631579/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9631579/">/patch/9631579/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	AE21760249 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 17 Mar 2017 20:53:03 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9756E28464
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 17 Mar 2017 20:53:03 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 86712285D4; Fri, 17 Mar 2017 20:53:03 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	UNPARSEABLE_RELAY autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C542528464
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 17 Mar 2017 20:53:02 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751277AbdCQUwy (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 17 Mar 2017 16:52:54 -0400
Received: from aserp1040.oracle.com ([141.146.126.69]:38131 &quot;EHLO
	aserp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751129AbdCQUww (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 17 Mar 2017 16:52:52 -0400
Received: from userv0021.oracle.com (userv0021.oracle.com [156.151.31.71])
	by aserp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2) with
	ESMTP id v2HKqSs2001276
	(version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Fri, 17 Mar 2017 20:52:28 GMT
Received: from userv0121.oracle.com (userv0121.oracle.com [156.151.31.72])
	by userv0021.oracle.com (8.14.4/8.14.4) with ESMTP id v2HKqSZW021106
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Fri, 17 Mar 2017 20:52:28 GMT
Received: from abhmp0008.oracle.com (abhmp0008.oracle.com [141.146.116.14])
	by userv0121.oracle.com (8.14.4/8.13.8) with ESMTP id
	v2HKqRYi003738; Fri, 17 Mar 2017 20:52:27 GMT
Received: from brm-t84-02.us.oracle.com (/10.80.150.81)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Fri, 17 Mar 2017 13:52:26 -0700
From: Babu Moger &lt;babu.moger@oracle.com&gt;
To: davem@davemloft.net
Cc: rob.gardner@oracle.com, khalid.aziz@oracle.com,
	babu.moger@oracle.com, allen.pais@oracle.com,
	viro@zeniv.linux.org.uk, sparclinux@vger.kernel.org,
	linux-kernel@vger.kernel.org
Subject: [PATCH v2] arch/sparc: Avoid DCTI Couples
Date: Fri, 17 Mar 2017 14:52:21 -0600
Message-Id: &lt;1489783941-509645-1-git-send-email-babu.moger@oracle.com&gt;
X-Mailer: git-send-email 1.7.1
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-Source-IP: userv0021.oracle.com [156.151.31.71]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=146821">Babu Moger</a> - March 17, 2017, 8:52 p.m.</div>
<pre class="content">
Avoid un-intended DCTI Couples. Use of DCTI couples is deprecated.
Also address the &quot;Programming Note&quot; for optimal performance.

Here is the complete text from Oracle SPARC Architecture Specs.

6.3.4.7 DCTI Couples
&quot;A delayed control transfer instruction (DCTI) in the delay slot of
another DCTI is referred to as a “DCTI couple”. The use of DCTI couples
is deprecated in the Oracle SPARC Architecture; no new software should
place a DCTI in the delay slot of another DCTI, because on future Oracle
SPARC Architecture implementations DCTI couples may execute either
slowly or differently than the programmer assumes it will.

SPARC V8 and SPARC V9 Compatibility Note
The SPARC V8 architecture left behavior undefined for a DCTI couple. The
SPARC V9 architecture defined behavior in that case, but as of
UltraSPARC Architecture 2005, use of DCTI couples was deprecated.
Software should not expect high performance from DCTI couples, and
performance of DCTI couples should be expected to decline further in
future processors.

Programming Note
As noted in TABLE 6-5 on page 115, an annulled branch-always
(branch-always with a = 1) instruction is not architecturally a DCTI.
However, since not all implementations make that distinction, for
optimal performance, a DCTI should not be placed in the instruction word
immediately following an annulled branch-always instruction (BA,A or
BPA,A).&quot;
<span class="signed-off-by">
Signed-off-by: Babu Moger &lt;babu.moger@oracle.com&gt;</span>
<span class="reviewed-by">Reviewed-by: Rob Gardner &lt;rob.gardner@oracle.com&gt;</span>
---
 arch/sparc/kernel/head_64.S        |    4 ++++
 arch/sparc/kernel/misctrap.S       |    1 +
 arch/sparc/kernel/rtrap_64.S       |    1 +
 arch/sparc/kernel/spiterrs.S       |    1 +
 arch/sparc/kernel/sun4v_tlb_miss.S |    1 +
 arch/sparc/kernel/urtt_fill.S      |    1 +
 arch/sparc/kernel/winfixup.S       |    2 ++
 arch/sparc/lib/NG2memcpy.S         |    4 ++++
 arch/sparc/lib/NG4memcpy.S         |    1 +
 arch/sparc/lib/NG4memset.S         |    1 +
 arch/sparc/lib/NGmemcpy.S          |    1 +
 11 files changed, 18 insertions(+), 0 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=129">David Miller</a> - March 28, 2017, 4:52 a.m.</div>
<pre class="content">
<span class="from">From: Babu Moger &lt;babu.moger@oracle.com&gt;</span>
Date: Fri, 17 Mar 2017 14:52:21 -0600
<span class="quote">
&gt; Avoid un-intended DCTI Couples. Use of DCTI couples is deprecated.</span>
<span class="quote">&gt; Also address the &quot;Programming Note&quot; for optimal performance.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Here is the complete text from Oracle SPARC Architecture Specs.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; 6.3.4.7 DCTI Couples</span>
<span class="quote">&gt; &quot;A delayed control transfer instruction (DCTI) in the delay slot of</span>
<span class="quote">&gt; another DCTI is referred to as a “DCTI couple”. The use of DCTI couples</span>
<span class="quote">&gt; is deprecated in the Oracle SPARC Architecture; no new software should</span>
<span class="quote">&gt; place a DCTI in the delay slot of another DCTI, because on future Oracle</span>
<span class="quote">&gt; SPARC Architecture implementations DCTI couples may execute either</span>
<span class="quote">&gt; slowly or differently than the programmer assumes it will.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; SPARC V8 and SPARC V9 Compatibility Note</span>
<span class="quote">&gt; The SPARC V8 architecture left behavior undefined for a DCTI couple. The</span>
<span class="quote">&gt; SPARC V9 architecture defined behavior in that case, but as of</span>
<span class="quote">&gt; UltraSPARC Architecture 2005, use of DCTI couples was deprecated.</span>
<span class="quote">&gt; Software should not expect high performance from DCTI couples, and</span>
<span class="quote">&gt; performance of DCTI couples should be expected to decline further in</span>
<span class="quote">&gt; future processors.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Programming Note</span>
<span class="quote">&gt; As noted in TABLE 6-5 on page 115, an annulled branch-always</span>
<span class="quote">&gt; (branch-always with a = 1) instruction is not architecturally a DCTI.</span>
<span class="quote">&gt; However, since not all implementations make that distinction, for</span>
<span class="quote">&gt; optimal performance, a DCTI should not be placed in the instruction word</span>
<span class="quote">&gt; immediately following an annulled branch-always instruction (BA,A or</span>
<span class="quote">&gt; BPA,A).&quot;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Babu Moger &lt;babu.moger@oracle.com&gt;</span>
<span class="quote">&gt; Reviewed-by: Rob Gardner &lt;rob.gardner@oracle.com&gt;</span>

Applied, thanks.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/sparc/kernel/head_64.S b/arch/sparc/kernel/head_64.S</span>
<span class="p_header">index 6aa3da1..4410119 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/head_64.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/head_64.S</span>
<span class="p_chunk">@@ -96,6 +96,7 @@</span> <span class="p_context"> sparc64_boot:</span>
 	andn	%g1, PSTATE_AM, %g1
 	wrpr	%g1, 0x0, %pstate
 	ba,a,pt	%xcc, 1f
<span class="p_add">+	 nop</span>
 
 	.globl	prom_finddev_name, prom_chosen_path, prom_root_node
 	.globl	prom_getprop_name, prom_mmu_name, prom_peer_name
<span class="p_chunk">@@ -613,6 +614,7 @@</span> <span class="p_context"> niagara_tlb_fixup:</span>
 	 nop
 
 	ba,a,pt	%xcc, 80f
<span class="p_add">+	 nop</span>
 niagara4_patch:
 	call	niagara4_patch_copyops
 	 nop
<span class="p_chunk">@@ -622,6 +624,7 @@</span> <span class="p_context"> niagara4_patch:</span>
 	 nop
 
 	ba,a,pt	%xcc, 80f
<span class="p_add">+	 nop</span>
 
 niagara2_patch:
 	call	niagara2_patch_copyops
<span class="p_chunk">@@ -632,6 +635,7 @@</span> <span class="p_context"> niagara2_patch:</span>
 	 nop
 
 	ba,a,pt	%xcc, 80f
<span class="p_add">+	 nop</span>
 
 niagara_patch:
 	call	niagara_patch_copyops
<span class="p_header">diff --git a/arch/sparc/kernel/misctrap.S b/arch/sparc/kernel/misctrap.S</span>
<span class="p_header">index 34b4933..9276d2f 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/misctrap.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/misctrap.S</span>
<span class="p_chunk">@@ -82,6 +82,7 @@</span> <span class="p_context"> do_stdfmna:</span>
 	call		handle_stdfmna
 	 add		%sp, PTREGS_OFF, %o0
 	ba,a,pt		%xcc, rtrap
<span class="p_add">+	 nop</span>
 	.size		do_stdfmna,.-do_stdfmna
 
 	.type		breakpoint_trap,#function
<span class="p_header">diff --git a/arch/sparc/kernel/rtrap_64.S b/arch/sparc/kernel/rtrap_64.S</span>
<span class="p_header">index 216948c..709a82e 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/rtrap_64.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/rtrap_64.S</span>
<span class="p_chunk">@@ -237,6 +237,7 @@</span> <span class="p_context"> rt_continue:	ldx			[%sp + PTREGS_OFF + PT_V9_G1], %g1</span>
 		bne,pt			%xcc, user_rtt_fill_32bit
 		 wrpr			%g1, %cwp
 		ba,a,pt			%xcc, user_rtt_fill_64bit
<span class="p_add">+		 nop</span>
 
 user_rtt_fill_fixup_dax:
 		ba,pt	%xcc, user_rtt_fill_fixup_common
<span class="p_header">diff --git a/arch/sparc/kernel/spiterrs.S b/arch/sparc/kernel/spiterrs.S</span>
<span class="p_header">index 4a73009..d7e5408 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/spiterrs.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/spiterrs.S</span>
<span class="p_chunk">@@ -86,6 +86,7 @@</span> <span class="p_context"> __spitfire_cee_trap_continue:</span>
 	 rd		%pc, %g7
 
 	ba,a,pt		%xcc, 2f
<span class="p_add">+	 nop</span>
 
 1:	ba,pt		%xcc, etrap_irq
 	 rd		%pc, %g7
<span class="p_header">diff --git a/arch/sparc/kernel/sun4v_tlb_miss.S b/arch/sparc/kernel/sun4v_tlb_miss.S</span>
<span class="p_header">index 6179e19..c19f352 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/sun4v_tlb_miss.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/sun4v_tlb_miss.S</span>
<span class="p_chunk">@@ -352,6 +352,7 @@</span> <span class="p_context"> sun4v_mna:</span>
 	call	sun4v_do_mna
 	 add	%sp, PTREGS_OFF, %o0
 	ba,a,pt	%xcc, rtrap
<span class="p_add">+	 nop</span>
 
 	/* Privileged Action.  */
 sun4v_privact:
<span class="p_header">diff --git a/arch/sparc/kernel/urtt_fill.S b/arch/sparc/kernel/urtt_fill.S</span>
<span class="p_header">index 5604a2b..364af32 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/urtt_fill.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/urtt_fill.S</span>
<span class="p_chunk">@@ -92,6 +92,7 @@</span> <span class="p_context"> user_rtt_fill_fixup_common:</span>
 		call	sun4v_data_access_exception
 		 nop
 		ba,a,pt	%xcc, rtrap
<span class="p_add">+		 nop</span>
 
 1:		call	spitfire_data_access_exception
 		 nop
<span class="p_header">diff --git a/arch/sparc/kernel/winfixup.S b/arch/sparc/kernel/winfixup.S</span>
<span class="p_header">index 855019a..1ee173c 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/winfixup.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/winfixup.S</span>
<span class="p_chunk">@@ -152,6 +152,8 @@</span> <span class="p_context"> fill_fixup_dax:</span>
 	call	sun4v_data_access_exception
 	 nop
 	ba,a,pt	%xcc, rtrap
<span class="p_add">+	 nop</span>
 1:	call	spitfire_data_access_exception
 	 nop
 	ba,a,pt	%xcc, rtrap
<span class="p_add">+	 nop</span>
<span class="p_header">diff --git a/arch/sparc/lib/NG2memcpy.S b/arch/sparc/lib/NG2memcpy.S</span>
<span class="p_header">index c629dbd..64dcd6c 100644</span>
<span class="p_header">--- a/arch/sparc/lib/NG2memcpy.S</span>
<span class="p_header">+++ b/arch/sparc/lib/NG2memcpy.S</span>
<span class="p_chunk">@@ -326,11 +326,13 @@</span> <span class="p_context"> FUNC_NAME:	/* %o0=dst, %o1=src, %o2=len */</span>
 	blu		170f
 	 nop
 	ba,a,pt		%xcc, 180f
<span class="p_add">+	 nop</span>
 
 4:	/* 32 &lt;= low bits &lt; 48 */
 	blu		150f
 	 nop
 	ba,a,pt		%xcc, 160f
<span class="p_add">+	 nop</span>
 5:	/* 0 &lt; low bits &lt; 32 */
 	blu,a		6f
 	 cmp		%g2, 8
<span class="p_chunk">@@ -338,6 +340,7 @@</span> <span class="p_context"> FUNC_NAME:	/* %o0=dst, %o1=src, %o2=len */</span>
 	blu		130f
 	 nop
 	ba,a,pt		%xcc, 140f
<span class="p_add">+	 nop</span>
 6:	/* 0 &lt; low bits &lt; 16 */
 	bgeu		120f
 	 nop
<span class="p_chunk">@@ -475,6 +478,7 @@</span> <span class="p_context"> FUNC_NAME:	/* %o0=dst, %o1=src, %o2=len */</span>
 	brz,pt		%o2, 85f
 	 sub		%o0, %o1, GLOBAL_SPARE
 	ba,a,pt		%XCC, 90f
<span class="p_add">+	 nop</span>
 
 	.align		64
 75: /* 16 &lt; len &lt;= 64 */
<span class="p_header">diff --git a/arch/sparc/lib/NG4memcpy.S b/arch/sparc/lib/NG4memcpy.S</span>
<span class="p_header">index 75bb93b..78ea962 100644</span>
<span class="p_header">--- a/arch/sparc/lib/NG4memcpy.S</span>
<span class="p_header">+++ b/arch/sparc/lib/NG4memcpy.S</span>
<span class="p_chunk">@@ -530,4 +530,5 @@</span> <span class="p_context"> FUNC_NAME:	/* %o0=dst, %o1=src, %o2=len */</span>
 	bne,pt		%icc, 1b
 	 EX_ST(STORE(stb, %g1, %o0 - 0x01), NG4_retl_o2_plus_1)
 	ba,a,pt		%icc, .Lexit
<span class="p_add">+	 nop</span>
 	.size		FUNC_NAME, .-FUNC_NAME
<span class="p_header">diff --git a/arch/sparc/lib/NG4memset.S b/arch/sparc/lib/NG4memset.S</span>
<span class="p_header">index 41da4bd..7c0c81f 100644</span>
<span class="p_header">--- a/arch/sparc/lib/NG4memset.S</span>
<span class="p_header">+++ b/arch/sparc/lib/NG4memset.S</span>
<span class="p_chunk">@@ -102,4 +102,5 @@</span> <span class="p_context"> NG4bzero:</span>
 	bne,pt		%icc, 1b
 	 add		%o0, 0x30, %o0
 	ba,a,pt		%icc, .Lpostloop
<span class="p_add">+	 nop</span>
 	.size		NG4bzero,.-NG4bzero
<span class="p_header">diff --git a/arch/sparc/lib/NGmemcpy.S b/arch/sparc/lib/NGmemcpy.S</span>
<span class="p_header">index d88c4ed..cd654a7 100644</span>
<span class="p_header">--- a/arch/sparc/lib/NGmemcpy.S</span>
<span class="p_header">+++ b/arch/sparc/lib/NGmemcpy.S</span>
<span class="p_chunk">@@ -394,6 +394,7 @@</span> <span class="p_context"> FUNC_NAME:	/* %i0=dst, %i1=src, %i2=len */</span>
 	brz,pt		%i2, 85f
 	 sub		%o0, %i1, %i3
 	ba,a,pt		%XCC, 90f
<span class="p_add">+	 nop</span>
 
 	.align		64
 70: /* 16 &lt; len &lt;= 64 */

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



