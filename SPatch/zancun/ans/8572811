
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[5/7] KVM: Replace smp_mb() with smp_load_acquire() in the kvm_flush_remote_tlbs() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [5/7] KVM: Replace smp_mb() with smp_load_acquire() in the kvm_flush_remote_tlbs()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=27472">lan,Tianyu</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 13, 2016, 3:10 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1457838631-26775-6-git-send-email-tianyu.lan@intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8572811/mbox/"
   >mbox</a>
|
   <a href="/patch/8572811/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8572811/">/patch/8572811/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id BE2649F54C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 13 Mar 2016 03:28:06 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 30CDD202E5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 13 Mar 2016 03:28:06 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 875AE201C0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 13 Mar 2016 03:28:05 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932382AbcCMD1s (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sat, 12 Mar 2016 22:27:48 -0500
Received: from mga02.intel.com ([134.134.136.20]:49262 &quot;EHLO mga02.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753930AbcCMD1E (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sat, 12 Mar 2016 22:27:04 -0500
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
	by orsmga101.jf.intel.com with ESMTP; 12 Mar 2016 19:27:00 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.24,328,1455004800&quot;; d=&quot;scan&#39;208&quot;;a=&quot;935757782&quot;
Received: from lantianyu-ws.sh.intel.com (HELO localhost) ([10.239.159.159])
	by fmsmga002.fm.intel.com with ESMTP; 12 Mar 2016 19:26:59 -0800
From: Lan Tianyu &lt;tianyu.lan@intel.com&gt;
To: gleb@kernel.org, pbonzini@redhat.com,
	guangrong.xiao@linux.intel.com
Cc: Lan Tianyu &lt;tianyu.lan@intel.com&gt;, kvm@vger.kernel.org,
	linux-kernel@vger.kernel.org
Subject: [PATCH 5/7] KVM: Replace smp_mb() with smp_load_acquire() in the
	kvm_flush_remote_tlbs()
Date: Sun, 13 Mar 2016 11:10:28 +0800
Message-Id: &lt;1457838631-26775-6-git-send-email-tianyu.lan@intel.com&gt;
X-Mailer: git-send-email 1.7.9.5
In-Reply-To: &lt;1457838631-26775-1-git-send-email-tianyu.lan@intel.com&gt;
References: &lt;1457838631-26775-1-git-send-email-tianyu.lan@intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=27472">lan,Tianyu</a> - March 13, 2016, 3:10 a.m.</div>
<pre class="content">
smp_load_acquire() is enough here and it&#39;s cheaper than smp_mb().
Adding a comment about reusing memory barrier of kvm_make_all_cpus_request()
here to keep order between modifications to the page tables and reading mode.
<span class="signed-off-by">
Signed-off-by: Lan Tianyu &lt;tianyu.lan@intel.com&gt;</span>
---
 virt/kvm/kvm_main.c | 18 ++++++++++++++++--
 1 file changed, 16 insertions(+), 2 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c</span>
<span class="p_header">index ec5aa8d..39ebee9a 100644</span>
<span class="p_header">--- a/virt/kvm/kvm_main.c</span>
<span class="p_header">+++ b/virt/kvm/kvm_main.c</span>
<span class="p_chunk">@@ -191,9 +191,23 @@</span> <span class="p_context"> bool kvm_make_all_cpus_request(struct kvm *kvm, unsigned int req)</span>
 #ifndef CONFIG_HAVE_KVM_ARCH_TLB_FLUSH_ALL
 void kvm_flush_remote_tlbs(struct kvm *kvm)
 {
<span class="p_del">-	long dirty_count = kvm-&gt;tlbs_dirty;</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Read tlbs_dirty before setting KVM_REQ_TLB_FLUSH in</span>
<span class="p_add">+	 * kvm_make_all_cpus_request.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	long dirty_count = smp_load_acquire(&amp;kvm-&gt;tlbs_dirty);</span>
 
<span class="p_del">-	smp_mb();</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * We want to publish modifications to the page tables before reading</span>
<span class="p_add">+	 * mode. Pairs with a memory barrier in arch-specific code.</span>
<span class="p_add">+	 * - x86: smp_mb__after_srcu_read_unlock in vcpu_enter_guest</span>
<span class="p_add">+	 * and smp_mb in walk_shadow_page_lockless_begin/end.</span>
<span class="p_add">+	 * - powerpc: smp_mb in kvmppc_prepare_to_enter.</span>
<span class="p_add">+	 *</span>
<span class="p_add">+	 * There is already an smp_mb__after_atomic() before</span>
<span class="p_add">+	 * kvm_make_all_cpus_request() reads vcpu-&gt;mode. We reuse that</span>
<span class="p_add">+	 * barrier here.</span>
<span class="p_add">+	 */</span>
 	if (kvm_make_all_cpus_request(kvm, KVM_REQ_TLB_FLUSH))
 		++kvm-&gt;stat.remote_tlb_flush;
 	cmpxchg(&amp;kvm-&gt;tlbs_dirty, dirty_count, 0);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



