
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.4,31/37] kaiser: kaiser_flush_tlb_on_return_to_user() check PCID - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.4,31/37] kaiser: kaiser_flush_tlb_on_return_to_user() check PCID</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 3, 2018, 8:11 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180103195058.455720196@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10143269/mbox/"
   >mbox</a>
|
   <a href="/patch/10143269/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10143269/">/patch/10143269/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	65FB96034B for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  3 Jan 2018 20:27:50 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5A9CF2928B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  3 Jan 2018 20:27:50 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 4F7C9292DD; Wed,  3 Jan 2018 20:27:50 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id BF41C2928B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  3 Jan 2018 20:27:49 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752118AbeACUNQ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 3 Jan 2018 15:13:16 -0500
Received: from mail.linuxfoundation.org ([140.211.169.12]:32940 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751119AbeACUNN (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 3 Jan 2018 15:13:13 -0500
Received: from localhost (LFbn-1-12258-90.w90-92.abo.wanadoo.fr
	[90.92.71.90])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id C0F6E89F;
	Wed,  3 Jan 2018 20:13:12 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, Hugh Dickins &lt;hughd@google.com&gt;,
	Jiri Kosina &lt;jkosina@suse.cz&gt;
Subject: [PATCH 4.4 31/37] kaiser: kaiser_flush_tlb_on_return_to_user()
	check PCID
Date: Wed,  3 Jan 2018 21:11:37 +0100
Message-Id: &lt;20180103195058.455720196@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.15.1
In-Reply-To: &lt;20180103195056.837404126@linuxfoundation.org&gt;
References: &lt;20180103195056.837404126@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Jan. 3, 2018, 8:11 p.m.</div>
<pre class="content">
4.4-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: Hugh Dickins &lt;hughd@google.com&gt;</span>


Let kaiser_flush_tlb_on_return_to_user() do the X86_FEATURE_PCID
check, instead of each caller doing it inline first: nobody needs
to optimize for the noPCID case, it&#39;s clearer this way, and better
suits later changes.  Replace those no-op X86_CR3_PCID_KERN_FLUSH lines
by a BUILD_BUG_ON() in load_new_mm_cr3(), in case something changes.
<span class="signed-off-by">
Signed-off-by: Hugh Dickins &lt;hughd@google.com&gt;</span>
<span class="acked-by">Acked-by: Jiri Kosina &lt;jkosina@suse.cz&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>
---
 arch/x86/include/asm/tlbflush.h |    4 ++--
 arch/x86/mm/kaiser.c            |    6 +++---
 arch/x86/mm/tlb.c               |    8 ++++----
 3 files changed, 9 insertions(+), 9 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_chunk">@@ -157,7 +157,7 @@</span> <span class="p_context"> static inline void __native_flush_tlb(vo</span>
 	 * back:
 	 */
 	preempt_disable();
<span class="p_del">-	if (kaiser_enabled &amp;&amp; this_cpu_has(X86_FEATURE_PCID))</span>
<span class="p_add">+	if (kaiser_enabled)</span>
 		kaiser_flush_tlb_on_return_to_user();
 	native_write_cr3(native_read_cr3());
 	preempt_enable();
<span class="p_chunk">@@ -216,7 +216,7 @@</span> <span class="p_context"> static inline void __native_flush_tlb_si</span>
 	 */
 
 	if (!this_cpu_has(X86_FEATURE_INVPCID_SINGLE)) {
<span class="p_del">-		if (kaiser_enabled &amp;&amp; this_cpu_has(X86_FEATURE_PCID))</span>
<span class="p_add">+		if (kaiser_enabled)</span>
 			kaiser_flush_tlb_on_return_to_user();
 		asm volatile(&quot;invlpg (%0)&quot; ::&quot;r&quot; (addr) : &quot;memory&quot;);
 		return;
<span class="p_header">--- a/arch/x86/mm/kaiser.c</span>
<span class="p_header">+++ b/arch/x86/mm/kaiser.c</span>
<span class="p_chunk">@@ -436,12 +436,12 @@</span> <span class="p_context"> void kaiser_setup_pcid(void)</span>
 
 /*
  * Make a note that this cpu will need to flush USER tlb on return to user.
<span class="p_del">- * Caller checks whether this_cpu_has(X86_FEATURE_PCID) before calling:</span>
<span class="p_del">- * if cpu does not, then the NOFLUSH bit will never have been set.</span>
<span class="p_add">+ * If cpu does not have PCID, then the NOFLUSH bit will never have been set.</span>
  */
 void kaiser_flush_tlb_on_return_to_user(void)
 {
<span class="p_del">-	this_cpu_write(x86_cr3_pcid_user,</span>
<span class="p_add">+	if (this_cpu_has(X86_FEATURE_PCID))</span>
<span class="p_add">+		this_cpu_write(x86_cr3_pcid_user,</span>
 			X86_CR3_PCID_USER_FLUSH | KAISER_SHADOW_PGD_OFFSET);
 }
 EXPORT_SYMBOL(kaiser_flush_tlb_on_return_to_user);
<span class="p_header">--- a/arch/x86/mm/tlb.c</span>
<span class="p_header">+++ b/arch/x86/mm/tlb.c</span>
<span class="p_chunk">@@ -39,7 +39,7 @@</span> <span class="p_context"> static void load_new_mm_cr3(pgd_t *pgdir</span>
 {
 	unsigned long new_mm_cr3 = __pa(pgdir);
 
<span class="p_del">-	if (kaiser_enabled &amp;&amp; this_cpu_has(X86_FEATURE_PCID)) {</span>
<span class="p_add">+	if (kaiser_enabled) {</span>
 		/*
 		 * We reuse the same PCID for different tasks, so we must
 		 * flush all the entries for the PCID out when we change tasks.
<span class="p_chunk">@@ -50,10 +50,10 @@</span> <span class="p_context"> static void load_new_mm_cr3(pgd_t *pgdir</span>
 		 * do it here, but can only be used if X86_FEATURE_INVPCID is
 		 * available - and many machines support pcid without invpcid.
 		 *
<span class="p_del">-		 * The line below is a no-op: X86_CR3_PCID_KERN_FLUSH is now 0;</span>
<span class="p_del">-		 * but keep that line in there in case something changes.</span>
<span class="p_add">+		 * If X86_CR3_PCID_KERN_FLUSH actually added something, then it</span>
<span class="p_add">+		 * would be needed in the write_cr3() below - if PCIDs enabled.</span>
 		 */
<span class="p_del">-		new_mm_cr3 |= X86_CR3_PCID_KERN_FLUSH;</span>
<span class="p_add">+		BUILD_BUG_ON(X86_CR3_PCID_KERN_FLUSH);</span>
 		kaiser_flush_tlb_on_return_to_user();
 	}
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



