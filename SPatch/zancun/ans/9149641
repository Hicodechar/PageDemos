
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[1/4] mm/hugetlb: Simplify hugetlb unmap - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [1/4] mm/hugetlb: Simplify hugetlb unmap</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=1141">Aneesh Kumar K.V</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 2, 2016, 9:39 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1464860389-29019-1-git-send-email-aneesh.kumar@linux.vnet.ibm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9149641/mbox/"
   >mbox</a>
|
   <a href="/patch/9149641/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9149641/">/patch/9149641/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	6837760751 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  2 Jun 2016 09:40:20 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 55664263DC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  2 Jun 2016 09:40:20 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 46EFE269DA; Thu,  2 Jun 2016 09:40:20 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3813D263DC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  2 Jun 2016 09:40:19 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932565AbcFBJkM (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 2 Jun 2016 05:40:12 -0400
Received: from e17.ny.us.ibm.com ([129.33.205.207]:36118 &quot;EHLO
	e17.ny.us.ibm.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932166AbcFBJkK (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 2 Jun 2016 05:40:10 -0400
Received: from localhost
	by e17.ny.us.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use
	Only! Violators will be prosecuted
	for &lt;linux-kernel@vger.kernel.org&gt; from
	&lt;aneesh.kumar@linux.vnet.ibm.com&gt;; Thu, 2 Jun 2016 05:40:09 -0400
Received: from d01dlp01.pok.ibm.com (9.56.250.166)
	by e17.ny.us.ibm.com (146.89.104.204) with IBM ESMTP SMTP Gateway:
	Authorized Use Only! Violators will be prosecuted; 
	Thu, 2 Jun 2016 05:40:06 -0400
X-IBM-Helo: d01dlp01.pok.ibm.com
X-IBM-MailFrom: aneesh.kumar@linux.vnet.ibm.com
X-IBM-RcptTo: mpe@ellerman.id.au; linux-mm@kvack.org;
	akpm@linux-foundation.org; linux-kernel@vger.kernel.org
Received: from b01cxnp23032.gho.pok.ibm.com (b01cxnp23032.gho.pok.ibm.com
	[9.57.198.27])
	by d01dlp01.pok.ibm.com (Postfix) with ESMTP id E430C38C804A;
	Thu,  2 Jun 2016 05:40:05 -0400 (EDT)
Received: from b01ledav001.gho.pok.ibm.com (b01ledav001.gho.pok.ibm.com
	[9.57.199.106])
	by b01cxnp23032.gho.pok.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP
	id u529e6vd31326318; Thu, 2 Jun 2016 09:40:06 GMT
Received: from b01ledav001.gho.pok.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id B744428041;
	Thu,  2 Jun 2016 05:40:05 -0400 (EDT)
Received: from skywalker.in.ibm.com (unknown [9.124.35.108])
	by b01ledav001.gho.pok.ibm.com (Postfix) with ESMTP id 535D12803F;
	Thu,  2 Jun 2016 05:40:04 -0400 (EDT)
From: &quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;
To: akpm@linux-foundation.org, mpe@ellerman.id.au
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
	&quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;
Subject: [PATCH 1/4] mm/hugetlb: Simplify hugetlb unmap
Date: Thu,  2 Jun 2016 15:09:46 +0530
Message-Id: &lt;1464860389-29019-1-git-send-email-aneesh.kumar@linux.vnet.ibm.com&gt;
X-Mailer: git-send-email 2.7.4
X-TM-AS-GCONF: 00
X-Content-Scanned: Fidelis XPS MAILER
x-cbid: 16060209-0041-0000-0000-0000044B82D0
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1141">Aneesh Kumar K.V</a> - June 2, 2016, 9:39 a.m.</div>
<pre class="content">
For hugetlb like THP (and unlike regular page), we do tlb flush after
dropping ptl. Because of the above, we don&#39;t need to track force_flush
like we do now. Instead we can simply call tlb_remove_page() which
will do the flush if needed.

No functionality change in this patch.
<span class="signed-off-by">
Signed-off-by: Aneesh Kumar K.V &lt;aneesh.kumar@linux.vnet.ibm.com&gt;</span>
---
 mm/hugetlb.c | 54 +++++++++++++++++++++---------------------------------
 1 file changed, 21 insertions(+), 33 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index e4168484f249..8dd91cd5571c 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -3138,7 +3138,6 @@</span> <span class="p_context"> void __unmap_hugepage_range(struct mmu_gather *tlb, struct vm_area_struct *vma,</span>
 			    unsigned long start, unsigned long end,
 			    struct page *ref_page)
 {
<span class="p_del">-	int force_flush = 0;</span>
 	struct mm_struct *mm = vma-&gt;vm_mm;
 	unsigned long address;
 	pte_t *ptep;
<span class="p_chunk">@@ -3157,19 +3156,22 @@</span> <span class="p_context"> void __unmap_hugepage_range(struct mmu_gather *tlb, struct vm_area_struct *vma,</span>
 	tlb_start_vma(tlb, vma);
 	mmu_notifier_invalidate_range_start(mm, mmun_start, mmun_end);
 	address = start;
<span class="p_del">-again:</span>
 	for (; address &lt; end; address += sz) {
 		ptep = huge_pte_offset(mm, address);
 		if (!ptep)
 			continue;
 
 		ptl = huge_pte_lock(h, mm, ptep);
<span class="p_del">-		if (huge_pmd_unshare(mm, &amp;address, ptep))</span>
<span class="p_del">-			goto unlock;</span>
<span class="p_add">+		if (huge_pmd_unshare(mm, &amp;address, ptep)) {</span>
<span class="p_add">+			spin_unlock(ptl);</span>
<span class="p_add">+			continue;</span>
<span class="p_add">+		}</span>
 
 		pte = huge_ptep_get(ptep);
<span class="p_del">-		if (huge_pte_none(pte))</span>
<span class="p_del">-			goto unlock;</span>
<span class="p_add">+		if (huge_pte_none(pte)) {</span>
<span class="p_add">+			spin_unlock(ptl);</span>
<span class="p_add">+			continue;</span>
<span class="p_add">+		}</span>
 
 		/*
 		 * Migrating hugepage or HWPoisoned hugepage is already
<span class="p_chunk">@@ -3177,7 +3179,8 @@</span> <span class="p_context"> again:</span>
 		 */
 		if (unlikely(!pte_present(pte))) {
 			huge_pte_clear(mm, address, ptep);
<span class="p_del">-			goto unlock;</span>
<span class="p_add">+			spin_unlock(ptl);</span>
<span class="p_add">+			continue;</span>
 		}
 
 		page = pte_page(pte);
<span class="p_chunk">@@ -3187,9 +3190,10 @@</span> <span class="p_context"> again:</span>
 		 * are about to unmap is the actual page of interest.
 		 */
 		if (ref_page) {
<span class="p_del">-			if (page != ref_page)</span>
<span class="p_del">-				goto unlock;</span>
<span class="p_del">-</span>
<span class="p_add">+			if (page != ref_page) {</span>
<span class="p_add">+				spin_unlock(ptl);</span>
<span class="p_add">+				continue;</span>
<span class="p_add">+			}</span>
 			/*
 			 * Mark the VMA as having unmapped its page so that
 			 * future faults in this VMA will fail rather than
<span class="p_chunk">@@ -3205,30 +3209,14 @@</span> <span class="p_context"> again:</span>
 
 		hugetlb_count_sub(pages_per_huge_page(h), mm);
 		page_remove_rmap(page, true);
<span class="p_del">-		force_flush = !__tlb_remove_page(tlb, page);</span>
<span class="p_del">-		if (force_flush) {</span>
<span class="p_del">-			address += sz;</span>
<span class="p_del">-			spin_unlock(ptl);</span>
<span class="p_del">-			break;</span>
<span class="p_del">-		}</span>
<span class="p_del">-		/* Bail out after unmapping reference page if supplied */</span>
<span class="p_del">-		if (ref_page) {</span>
<span class="p_del">-			spin_unlock(ptl);</span>
<span class="p_del">-			break;</span>
<span class="p_del">-		}</span>
<span class="p_del">-unlock:</span>
<span class="p_add">+</span>
 		spin_unlock(ptl);
<span class="p_del">-	}</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * mmu_gather ran out of room to batch pages, we break out of</span>
<span class="p_del">-	 * the PTE lock to avoid doing the potential expensive TLB invalidate</span>
<span class="p_del">-	 * and page-free while holding it.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	if (force_flush) {</span>
<span class="p_del">-		force_flush = 0;</span>
<span class="p_del">-		tlb_flush_mmu(tlb);</span>
<span class="p_del">-		if (address &lt; end &amp;&amp; !ref_page)</span>
<span class="p_del">-			goto again;</span>
<span class="p_add">+		tlb_remove_page(tlb, page);</span>
<span class="p_add">+		/*</span>
<span class="p_add">+		 * Bail out after unmapping reference page if supplied</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		if (ref_page)</span>
<span class="p_add">+			break;</span>
 	}
 	mmu_notifier_invalidate_range_end(mm, mmun_start, mmun_end);
 	tlb_end_vma(tlb, vma);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



