
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v4,6/9] KVM: arm/arm64: Add support for tracking guest TLB operations - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v4,6/9] KVM: arm/arm64: Add support for tracking guest TLB operations</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=58591">Punit Agrawal</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 31, 2017, 5:16 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170131171630.26898-7-punit.agrawal@arm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9547819/mbox/"
   >mbox</a>
|
   <a href="/patch/9547819/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9547819/">/patch/9547819/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	ABDA26016C for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 31 Jan 2017 17:18:54 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9CB1F283E1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 31 Jan 2017 17:18:54 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 8F3D528408; Tue, 31 Jan 2017 17:18:54 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 17559283E1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 31 Jan 2017 17:18:54 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751629AbdAaRSr (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 31 Jan 2017 12:18:47 -0500
Received: from foss.arm.com ([217.140.101.70]:42854 &quot;EHLO foss.arm.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751272AbdAaRSY (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 31 Jan 2017 12:18:24 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
	by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id A98E7164F;
	Tue, 31 Jan 2017 09:17:41 -0800 (PST)
Received: from localhost (e105922-lin.cambridge.arm.com [10.1.195.25])
	by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id
	7B4FD3F24D; Tue, 31 Jan 2017 09:17:41 -0800 (PST)
From: Punit Agrawal &lt;punit.agrawal@arm.com&gt;
To: kvmarm@lists.cs.columbia.edu, linux-arm-kernel@lists.infradead.org
Cc: Punit Agrawal &lt;punit.agrawal@arm.com&gt;,
	linux-kernel@vger.kernel.org, kvm@vger.kernel.org,
	Christoffer Dall &lt;christoffer.dall@linaro.org&gt;,
	Marc Zyngier &lt;marc.zyngier@arm.com&gt;,
	Peter Zijlstra &lt;peterz@infradead.org&gt;, Will Deacon &lt;will.deacon@arm.com&gt;,
	Mark Rutland &lt;mark.rutland@arm.com&gt;
Subject: [PATCH v4 6/9] KVM: arm/arm64: Add support for tracking guest TLB
	operations
Date: Tue, 31 Jan 2017 17:16:27 +0000
Message-Id: &lt;20170131171630.26898-7-punit.agrawal@arm.com&gt;
X-Mailer: git-send-email 2.11.0
In-Reply-To: &lt;20170131171630.26898-1-punit.agrawal@arm.com&gt;
References: &lt;20170131171630.26898-1-punit.agrawal@arm.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=58591">Punit Agrawal</a> - Jan. 31, 2017, 5:16 p.m.</div>
<pre class="content">
The host pmu supports monitoring of VM operations. Register a host pmu
and provide the necessary callbacks to enable monitoring TLB operations.
<span class="signed-off-by">
Signed-off-by: Punit Agrawal &lt;punit.agrawal@arm.com&gt;</span>
Cc: Christoffer Dall &lt;christoffer.dall@linaro.org&gt;
Cc: Marc Zyngier &lt;marc.zyngier@arm.com&gt;
---
 virt/kvm/arm/host_pmu_events.c | 82 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 82 insertions(+)
 create mode 100644 virt/kvm/arm/host_pmu_events.c
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/virt/kvm/arm/host_pmu_events.c b/virt/kvm/arm/host_pmu_events.c</span>
new file mode 100644
<span class="p_header">index 000000000000..a5f097a6fb21</span>
<span class="p_header">--- /dev/null</span>
<span class="p_header">+++ b/virt/kvm/arm/host_pmu_events.c</span>
<span class="p_chunk">@@ -0,0 +1,82 @@</span> <span class="p_context"></span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Copyright (C) 2017 ARM Ltd.</span>
<span class="p_add">+ * Author: Punit Agrawal &lt;punit.agrawal@arm.com&gt;</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * This program is free software; you can redistribute it and/or modify</span>
<span class="p_add">+ * it under the terms of the GNU General Public License version 2 as</span>
<span class="p_add">+ * published by the Free Software Foundation.</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * This program is distributed in the hope that it will be useful,</span>
<span class="p_add">+ * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<span class="p_add">+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<span class="p_add">+ * GNU General Public License for more details.</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * You should have received a copy of the GNU General Public License</span>
<span class="p_add">+ * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>
<span class="p_add">+ */</span>
<span class="p_add">+#include &lt;kvm/host_pmu.h&gt;</span>
<span class="p_add">+#include &lt;linux/device.h&gt;</span>
<span class="p_add">+#include &lt;linux/kernel.h&gt;</span>
<span class="p_add">+#include &lt;linux/kvm_host.h&gt;</span>
<span class="p_add">+#include &lt;linux/sysfs.h&gt;</span>
<span class="p_add">+#include &lt;linux/types.h&gt;</span>
<span class="p_add">+</span>
<span class="p_add">+#include &lt;asm/kvm_emulate.h&gt;</span>
<span class="p_add">+</span>
<span class="p_add">+enum host_pmu_events {</span>
<span class="p_add">+	tlb_invalidate,</span>
<span class="p_add">+	MAX_EVENTS,</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+static u64 get_tlb_invalidate_count(struct kvm_vcpu *vcpu)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return vcpu-&gt;stat.tlb_invalidate;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static void configure_tlb_invalidate(struct kvm_vcpu *vcpu, bool enable)</span>
<span class="p_add">+{</span>
<span class="p_add">+	unsigned long hcr;</span>
<span class="p_add">+</span>
<span class="p_add">+	hcr = vcpu_get_hcr(vcpu);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (enable)</span>
<span class="p_add">+		hcr |= HCR_TTLB;</span>
<span class="p_add">+	else</span>
<span class="p_add">+		hcr &amp;= ~HCR_TTLB;</span>
<span class="p_add">+</span>
<span class="p_add">+	vcpu_set_hcr(vcpu, hcr);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static ssize_t events_sysfs_show(struct device *dev,</span>
<span class="p_add">+				 struct device_attribute *attr, char *page)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct perf_pmu_events_attr *pmu_attr;</span>
<span class="p_add">+</span>
<span class="p_add">+	pmu_attr = container_of(attr, struct perf_pmu_events_attr, attr);</span>
<span class="p_add">+</span>
<span class="p_add">+	return sprintf(page, &quot;event=0x%03llx\n&quot;, pmu_attr-&gt;id);</span>
<span class="p_add">+}</span>
<span class="p_add">+PMU_EVENT_ATTR(tlb_invalidate, event_attr_tlb_invalidate, tlb_invalidate,</span>
<span class="p_add">+	       events_sysfs_show);</span>
<span class="p_add">+</span>
<span class="p_add">+static struct attribute *event_attrs[] = {</span>
<span class="p_add">+	&amp;event_attr_tlb_invalidate.attr.attr,</span>
<span class="p_add">+	NULL,</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+static struct kvm_event_cb event_callbacks[] = {</span>
<span class="p_add">+	{</span>
<span class="p_add">+		.get_event_count = get_tlb_invalidate_count,</span>
<span class="p_add">+		.configure_event = configure_tlb_invalidate,</span>
<span class="p_add">+	},</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+int arm_host_pmu_init(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return kvm_host_pmu_register(MAX_EVENTS, event_callbacks, event_attrs);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+void arm_host_pmu_teardown(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	kvm_host_pmu_unregister();</span>
<span class="p_add">+}</span>

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



