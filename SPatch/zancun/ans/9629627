
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,0/5] mm: support parallel free of memory - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,0/5] mm: support parallel free of memory</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=45931">Aaron Lu</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 17, 2017, 3:10 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170317031048.GC18964@aaronlu.sh.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9629627/mbox/"
   >mbox</a>
|
   <a href="/patch/9629627/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9629627/">/patch/9629627/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	CCB2060249 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 17 Mar 2017 03:11:26 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B353F285EB
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 17 Mar 2017 03:11:26 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A750528654; Fri, 17 Mar 2017 03:11:26 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 2BFA5285EB
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 17 Mar 2017 03:11:26 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752710AbdCQDLN (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 16 Mar 2017 23:11:13 -0400
Received: from mga06.intel.com ([134.134.136.31]:61712 &quot;EHLO mga06.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751389AbdCQDLL (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 16 Mar 2017 23:11:11 -0400
Received: from fmsmga006.fm.intel.com ([10.253.24.20])
	by orsmga104.jf.intel.com with ESMTP; 16 Mar 2017 20:10:39 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.36,175,1486454400&quot;; d=&quot;scan&#39;208&quot;;a=&quot;78047872&quot;
Received: from aaronlu.sh.intel.com ([10.239.13.99])
	by fmsmga006.fm.intel.com with ESMTP; 16 Mar 2017 20:10:37 -0700
Date: Fri, 17 Mar 2017 11:10:48 +0800
From: Aaron Lu &lt;aaron.lu@intel.com&gt;
To: Vlastimil Babka &lt;vbabka@suse.cz&gt;
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
	Dave Hansen &lt;dave.hansen@intel.com&gt;, Tim Chen &lt;tim.c.chen@intel.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Ying Huang &lt;ying.huang@intel.com&gt;
Subject: Re: [PATCH v2 0/5] mm: support parallel free of memory
Message-ID: &lt;20170317031048.GC18964@aaronlu.sh.intel.com&gt;
References: &lt;1489568404-7817-1-git-send-email-aaron.lu@intel.com&gt;
	&lt;c2e172b1-fb2a-57a0-0074-a07a61693e6c@suse.cz&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: &lt;c2e172b1-fb2a-57a0-0074-a07a61693e6c@suse.cz&gt;
User-Agent: Mutt/1.8.0 (2017-02-23)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=45931">Aaron Lu</a> - March 17, 2017, 3:10 a.m.</div>
<pre class="content">
On Wed, Mar 15, 2017 at 03:56:02PM +0100, Vlastimil Babka wrote:
<span class="quote">&gt; I wonder if the difference would be larger if the parallelism was done</span>
<span class="quote">&gt; on a higher level, something around unmap_page_range(). IIUC the current</span>

I guess I misunderstand you in my last email - doing it at
unmap_page_range() level is essentially doing it at a per-VMA level
since it is the main function used in unmap_single_vma(). We have tried
that and felt that it&#39;s not flexible as the proposed approach since
it wouldn&#39;t parallize well for:
1 work load that uses only 1 or very few huge VMA;
2 work load that has a lot of small VMAs.

The code is nice and easy though(developed at v4.9 time frame):

From f6d5cfde888b9e0356719fabe8754fdfe6fe236b Mon Sep 17 00:00:00 2001
<span class="from">From: Aaron Lu &lt;aaron.lu@intel.com&gt;</span>
Date: Wed, 11 Jan 2017 15:56:06 +0800
Subject: [PATCH] mm: async free vma

---
 include/linux/mm_types.h |  6 ++++++
 mm/memory.c              | 23 ++++++++++++++++++++++-
 2 files changed, 28 insertions(+), 1 deletion(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/linux/mm_types.h b/include/linux/mm_types.h</span>
<span class="p_header">index 4a8acedf4b7d..d10d2ce8f8f4 100644</span>
<span class="p_header">--- a/include/linux/mm_types.h</span>
<span class="p_header">+++ b/include/linux/mm_types.h</span>
<span class="p_chunk">@@ -358,6 +358,12 @@</span> <span class="p_context"> struct vm_area_struct {</span>
 	struct mempolicy *vm_policy;	/* NUMA policy for the VMA */
 #endif
 	struct vm_userfaultfd_ctx vm_userfaultfd_ctx;
<span class="p_add">+</span>
<span class="p_add">+	struct vma_free_ctx {</span>
<span class="p_add">+		unsigned long start_addr;</span>
<span class="p_add">+		unsigned long end_addr;</span>
<span class="p_add">+		struct work_struct work;</span>
<span class="p_add">+	} free_ctx;</span>
 };
 
 struct core_thread {
<span class="p_header">diff --git a/mm/memory.c b/mm/memory.c</span>
<span class="p_header">index e18c57bdc75c..0fe4e45a044b 100644</span>
<span class="p_header">--- a/mm/memory.c</span>
<span class="p_header">+++ b/mm/memory.c</span>
<span class="p_chunk">@@ -1345,6 +1345,17 @@</span> <span class="p_context"> static void unmap_single_vma(struct mmu_gather *tlb,</span>
 	}
 }
 
<span class="p_add">+static void unmap_single_vma_work(struct work_struct *work)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct vma_free_ctx *ctx = container_of(work, struct vma_free_ctx, work);</span>
<span class="p_add">+	struct vm_area_struct *vma = container_of(ctx, struct vm_area_struct, free_ctx);</span>
<span class="p_add">+	struct mmu_gather tlb;</span>
<span class="p_add">+</span>
<span class="p_add">+	tlb_gather_mmu(&amp;tlb, vma-&gt;vm_mm, ctx-&gt;start_addr, ctx-&gt;end_addr);</span>
<span class="p_add">+	unmap_single_vma(&amp;tlb, vma, ctx-&gt;start_addr, ctx-&gt;end_addr, NULL);</span>
<span class="p_add">+	tlb_finish_mmu(&amp;tlb, ctx-&gt;start_addr, ctx-&gt;end_addr);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 /**
  * unmap_vmas - unmap a range of memory covered by a list of vma&#39;s
  * @tlb: address of the caller&#39;s struct mmu_gather
<span class="p_chunk">@@ -1368,10 +1379,20 @@</span> <span class="p_context"> void unmap_vmas(struct mmu_gather *tlb,</span>
 		unsigned long end_addr)
 {
 	struct mm_struct *mm = vma-&gt;vm_mm;
<span class="p_add">+	struct vma_free_ctx *ctx;</span>
<span class="p_add">+	struct vm_area_struct *tmp = vma;</span>
 
 	mmu_notifier_invalidate_range_start(mm, start_addr, end_addr);
<span class="p_add">+	for ( ; vma &amp;&amp; vma-&gt;vm_start &lt; end_addr; vma = vma-&gt;vm_next) {</span>
<span class="p_add">+		ctx = &amp;vma-&gt;free_ctx;</span>
<span class="p_add">+		ctx-&gt;start_addr = start_addr;</span>
<span class="p_add">+		ctx-&gt;end_addr = end_addr;</span>
<span class="p_add">+		INIT_WORK(&amp;ctx-&gt;work, unmap_single_vma_work);</span>
<span class="p_add">+		queue_work(system_unbound_wq, &amp;ctx-&gt;work);</span>
<span class="p_add">+	}</span>
<span class="p_add">+	vma = tmp;</span>
 	for ( ; vma &amp;&amp; vma-&gt;vm_start &lt; end_addr; vma = vma-&gt;vm_next)
<span class="p_del">-		unmap_single_vma(tlb, vma, start_addr, end_addr, NULL);</span>
<span class="p_add">+		flush_work(&amp;vma-&gt;free_ctx.work);</span>
 	mmu_notifier_invalidate_range_end(mm, start_addr, end_addr);
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



