
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v6,3/7] Revert &quot;mm: numa: defer TLB flush for THP migration as long as possible&quot; - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v6,3/7] Revert &quot;mm: numa: defer TLB flush for THP migration as long as possible&quot;</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=159401">Nadav Amit</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 2, 2017, 12:08 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170802000818.4760-4-namit@vmware.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9876101/mbox/"
   >mbox</a>
|
   <a href="/patch/9876101/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9876101/">/patch/9876101/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	5ADFF60390 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  2 Aug 2017 07:33:49 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4DACD286BE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  2 Aug 2017 07:33:49 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 4088C2875B; Wed,  2 Aug 2017 07:33:49 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-5.4 required=2.0 tests=BAYES_00, DATE_IN_PAST_06_12,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id AEB1A286BE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  2 Aug 2017 07:33:48 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751963AbdHBHdq (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 2 Aug 2017 03:33:46 -0400
Received: from ex13-edg-ou-001.vmware.com ([208.91.0.189]:39623 &quot;EHLO
	EX13-EDG-OU-001.vmware.com&quot; rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1751104AbdHBHdp (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 2 Aug 2017 03:33:45 -0400
X-Greylist: delayed 901 seconds by postgrey-1.27 at vger.kernel.org;
	Wed, 02 Aug 2017 03:33:44 EDT
Received: from sc9-mailhost3.vmware.com (10.113.161.73) by
	EX13-EDG-OU-001.vmware.com (10.113.208.155) with Microsoft SMTP
	Server id 15.0.1156.6; Wed, 2 Aug 2017 00:18:15 -0700
Received: from sc2-haas01-esx0118.eng.vmware.com
	(sc2-haas01-esx0118.eng.vmware.com [10.172.44.118])
	by sc9-mailhost3.vmware.com (Postfix) with ESMTP id 92EE9405FF;
	Wed,  2 Aug 2017 00:18:42 -0700 (PDT)
From: Nadav Amit &lt;namit@vmware.com&gt;
To: &lt;linux-mm@kvack.org&gt;
CC: &lt;nadav.amit@gmail.com&gt;, &lt;linux-kernel@vger.kernel.org&gt;,
	&lt;akpm@linux-foundation.org&gt;, Nadav Amit &lt;namit@vmware.com&gt;,
	Minchan Kim &lt;minchan@kernel.org&gt;,
	Sergey Senozhatsky &lt;sergey.senozhatsky@gmail.com&gt;,
	Andy Lutomirski &lt;luto@kernel.org&gt;
Subject: [PATCH v6 3/7] Revert &quot;mm: numa: defer TLB flush for THP migration
	as long as possible&quot;
Date: Tue, 1 Aug 2017 17:08:14 -0700
Message-ID: &lt;20170802000818.4760-4-namit@vmware.com&gt;
X-Mailer: git-send-email 2.11.0
In-Reply-To: &lt;20170802000818.4760-1-namit@vmware.com&gt;
References: &lt;20170802000818.4760-1-namit@vmware.com&gt;
MIME-Version: 1.0
Content-Type: text/plain
Received-SPF: None (EX13-EDG-OU-001.vmware.com: namit@vmware.com does not
	designate permitted sender hosts)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=159401">Nadav Amit</a> - Aug. 2, 2017, 12:08 a.m.</div>
<pre class="content">
While deferring TLB flushes is a good practice, the reverted patch
caused pending TLB flushes to be checked while the page-table lock is
not taken. As a result, in architectures with weak memory model (PPC),
Linux may miss a memory-barrier, miss the fact TLB flushes are pending,
and cause (in theory) a memory corruption.

Since the alternative of using smp_mb__after_unlock_lock() was
considered a bit open-coded, and the performance impact is expected to
be small, the previous patch is reverted.

This reverts commit b0943d61b8fa420180f92f64ef67662b4f6cc493.

Suggested-by: Mel Gorman &lt;mgorman@suse.de&gt;
Cc: Minchan Kim &lt;minchan@kernel.org&gt;
Cc: Sergey Senozhatsky &lt;sergey.senozhatsky@gmail.com&gt;
Cc: Andy Lutomirski &lt;luto@kernel.org&gt;
<span class="signed-off-by">Signed-off-by: Nadav Amit &lt;namit@vmware.com&gt;</span>
<span class="acked-by">Acked-by: Mel Gorman &lt;mgorman@suse.de&gt;</span>
<span class="acked-by">Acked-by: Rik van Riel &lt;riel@redhat.com&gt;</span>
---
 mm/huge_memory.c | 7 +++++++
 mm/migrate.c     | 6 ------
 2 files changed, 7 insertions(+), 6 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a> - Aug. 11, 2017, 10:50 a.m.</div>
<pre class="content">
On Tue, Aug 01, 2017 at 05:08:14PM -0700, Nadav Amit wrote:
<span class="quote">&gt; While deferring TLB flushes is a good practice, the reverted patch</span>
<span class="quote">&gt; caused pending TLB flushes to be checked while the page-table lock is</span>
<span class="quote">&gt; not taken. As a result, in architectures with weak memory model (PPC),</span>
<span class="quote">&gt; Linux may miss a memory-barrier, miss the fact TLB flushes are pending,</span>
<span class="quote">&gt; and cause (in theory) a memory corruption.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Since the alternative of using smp_mb__after_unlock_lock() was</span>
<span class="quote">&gt; considered a bit open-coded, and the performance impact is expected to</span>
<span class="quote">&gt; be small, the previous patch is reverted.</span>

FWIW this Changelog sucks arse; you completely fail to explain the
broken ordering.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/huge_memory.c b/mm/huge_memory.c</span>
<span class="p_header">index 88c6167f194d..b51d83e410eb 100644</span>
<span class="p_header">--- a/mm/huge_memory.c</span>
<span class="p_header">+++ b/mm/huge_memory.c</span>
<span class="p_chunk">@@ -1496,6 +1496,13 @@</span> <span class="p_context"> int do_huge_pmd_numa_page(struct vm_fault *vmf, pmd_t pmd)</span>
 	}
 
 	/*
<span class="p_add">+	 * The page_table_lock above provides a memory barrier</span>
<span class="p_add">+	 * with change_protection_range.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	if (mm_tlb_flush_pending(vma-&gt;vm_mm))</span>
<span class="p_add">+		flush_tlb_range(vma, haddr, haddr + HPAGE_PMD_SIZE);</span>
<span class="p_add">+</span>
<span class="p_add">+	/*</span>
 	 * Migrate the THP to the requested node, returns with page unlocked
 	 * and access rights restored.
 	 */
<span class="p_header">diff --git a/mm/migrate.c b/mm/migrate.c</span>
<span class="p_header">index 89a0a1707f4c..1f6c2f41b3cb 100644</span>
<span class="p_header">--- a/mm/migrate.c</span>
<span class="p_header">+++ b/mm/migrate.c</span>
<span class="p_chunk">@@ -1935,12 +1935,6 @@</span> <span class="p_context"> int migrate_misplaced_transhuge_page(struct mm_struct *mm,</span>
 		put_page(new_page);
 		goto out_fail;
 	}
<span class="p_del">-	/*</span>
<span class="p_del">-	 * We are not sure a pending tlb flush here is for a huge page</span>
<span class="p_del">-	 * mapping or not. Hence use the tlb range variant</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	if (mm_tlb_flush_pending(mm))</span>
<span class="p_del">-		flush_tlb_range(vma, mmun_start, mmun_end);</span>
 
 	/* Prepare a page as a migration target */
 	__SetPageLocked(new_page);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



