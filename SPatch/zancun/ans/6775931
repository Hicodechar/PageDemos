
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[3/4] mm/balloon: apply mobile page migratable into balloon - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [3/4] mm/balloon: apply mobile page migratable into balloon</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=72386">???</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 13, 2015, 8:35 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1436776519-17337-4-git-send-email-gioh.kim@lge.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6775931/mbox/"
   >mbox</a>
|
   <a href="/patch/6775931/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6775931/">/patch/6775931/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id D4CF39F2F0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 13 Jul 2015 08:34:42 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 99A602063C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 13 Jul 2015 08:34:41 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 34DAE20676
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 13 Jul 2015 08:34:40 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752105AbbGMIeh (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 13 Jul 2015 04:34:37 -0400
Received: from lgeamrelo01.lge.com ([156.147.1.125]:58175 &quot;EHLO
	lgeamrelo01.lge.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751989AbbGMIeO (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 13 Jul 2015 04:34:14 -0400
Received: from unknown (HELO swc-osl.156.147.1.1) (165.186.175.39)
	by 156.147.1.125 with ESMTP; 13 Jul 2015 17:34:13 +0900
X-Original-SENDERIP: 165.186.175.39
X-Original-MAILFROM: gioh.kim@lge.com
From: Gioh Kim &lt;gioh.kim@lge.com&gt;
To: jlayton@poochiereds.net, bfields@fieldses.org, vbabka@suse.cz,
	iamjoonsoo.kim@lge.com, viro@zeniv.linux.org.uk, mst@redhat.com,
	koct9i@gmail.com, minchan@kernel.org, aquini@redhat.com,
	linux-fsdevel@vger.kernel.org, virtualization@lists.linux-foundation.org,
	linux-kernel@vger.kernel.org, linux-api@vger.kernel.org,
	linux-mm@kvack.org
Cc: dri-devel@lists.freedesktop.org, akpm@linux-foundation.org,
	Gioh Kim &lt;gurugio@hanmail.net&gt;, Gioh Kim &lt;gioh.kim@lge.com&gt;
Subject: [PATCH 3/4] mm/balloon: apply mobile page migratable into balloon
Date: Mon, 13 Jul 2015 17:35:18 +0900
Message-Id: &lt;1436776519-17337-4-git-send-email-gioh.kim@lge.com&gt;
X-Mailer: git-send-email 1.7.9.5
In-Reply-To: &lt;1436776519-17337-1-git-send-email-gioh.kim@lge.com&gt;
References: &lt;1436776519-17337-1-git-send-email-gioh.kim@lge.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-8.3 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72386">???</a> - July 13, 2015, 8:35 a.m.</div>
<pre class="content">
<span class="from">From: Gioh Kim &lt;gurugio@hanmail.net&gt;</span>

Apply mobile page migration into balloon driver.
The balloong driver has an anonymous inode that manages
address_space_operation for page migration.
Compaction calls interfaces of mobile page migration
instead of calling balloon migration directly.
<span class="signed-off-by">
Signed-off-by: Gioh Kim &lt;gioh.kim@lge.com&gt;</span>
<span class="acked-by">Acked-by: Rafael Aquini &lt;aquini@redhat.com&gt;</span>
---
 drivers/virtio/virtio_balloon.c    |  3 ++
 include/linux/balloon_compaction.h | 15 ++++++--
 mm/balloon_compaction.c            | 72 ++++++++++++--------------------------
 mm/compaction.c                    |  8 ++---
 mm/migrate.c                       | 21 ++++++-----
 5 files changed, 54 insertions(+), 65 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/virtio/virtio_balloon.c b/drivers/virtio/virtio_balloon.c</span>
<span class="p_header">index 82e80e0..ef5b9b5 100644</span>
<span class="p_header">--- a/drivers/virtio/virtio_balloon.c</span>
<span class="p_header">+++ b/drivers/virtio/virtio_balloon.c</span>
<span class="p_chunk">@@ -30,6 +30,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/balloon_compaction.h&gt;
 #include &lt;linux/oom.h&gt;
 #include &lt;linux/wait.h&gt;
<span class="p_add">+#include &lt;linux/anon_inodes.h&gt;</span>
 
 /*
  * Balloon device works in 4K page units.  So each page is pointed to by
<span class="p_chunk">@@ -505,6 +506,8 @@</span> <span class="p_context"> static int virtballoon_probe(struct virtio_device *vdev)</span>
 	balloon_devinfo_init(&amp;vb-&gt;vb_dev_info);
 #ifdef CONFIG_BALLOON_COMPACTION
 	vb-&gt;vb_dev_info.migratepage = virtballoon_migratepage;
<span class="p_add">+	vb-&gt;vb_dev_info.inode = anon_inode_new();</span>
<span class="p_add">+	vb-&gt;vb_dev_info.inode-&gt;i_mapping-&gt;a_ops = &amp;balloon_aops;</span>
 #endif
 
 	err = init_vqs(vb);
<span class="p_header">diff --git a/include/linux/balloon_compaction.h b/include/linux/balloon_compaction.h</span>
<span class="p_header">index 9b0a15d..a9e0bde 100644</span>
<span class="p_header">--- a/include/linux/balloon_compaction.h</span>
<span class="p_header">+++ b/include/linux/balloon_compaction.h</span>
<span class="p_chunk">@@ -48,6 +48,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/migrate.h&gt;
 #include &lt;linux/gfp.h&gt;
 #include &lt;linux/err.h&gt;
<span class="p_add">+#include &lt;linux/fs.h&gt;</span>
 
 /*
  * Balloon device information descriptor.
<span class="p_chunk">@@ -62,6 +63,7 @@</span> <span class="p_context"> struct balloon_dev_info {</span>
 	struct list_head pages;		/* Pages enqueued &amp; handled to Host */
 	int (*migratepage)(struct balloon_dev_info *, struct page *newpage,
 			struct page *page, enum migrate_mode mode);
<span class="p_add">+	struct inode *inode;</span>
 };
 
 extern struct page *balloon_page_enqueue(struct balloon_dev_info *b_dev_info);
<span class="p_chunk">@@ -73,12 +75,16 @@</span> <span class="p_context"> static inline void balloon_devinfo_init(struct balloon_dev_info *balloon)</span>
 	spin_lock_init(&amp;balloon-&gt;pages_lock);
 	INIT_LIST_HEAD(&amp;balloon-&gt;pages);
 	balloon-&gt;migratepage = NULL;
<span class="p_add">+	balloon-&gt;inode = NULL;</span>
 }
 
 #ifdef CONFIG_BALLOON_COMPACTION
<span class="p_del">-extern bool balloon_page_isolate(struct page *page);</span>
<span class="p_add">+extern const struct address_space_operations balloon_aops;</span>
<span class="p_add">+extern bool balloon_page_isolate(struct page *page,</span>
<span class="p_add">+				 isolate_mode_t mode);</span>
 extern void balloon_page_putback(struct page *page);
<span class="p_del">-extern int balloon_page_migrate(struct page *newpage,</span>
<span class="p_add">+extern int balloon_page_migrate(struct address_space *mapping,</span>
<span class="p_add">+				struct page *newpage,</span>
 				struct page *page, enum migrate_mode mode);
 
 /*
<span class="p_chunk">@@ -124,6 +130,7 @@</span> <span class="p_context"> static inline void balloon_page_insert(struct balloon_dev_info *balloon,</span>
 				       struct page *page)
 {
 	__SetPageBalloon(page);
<span class="p_add">+	page-&gt;mapping = balloon-&gt;inode-&gt;i_mapping;</span>
 	SetPagePrivate(page);
 	set_page_private(page, (unsigned long)balloon);
 	list_add(&amp;page-&gt;lru, &amp;balloon-&gt;pages);
<span class="p_chunk">@@ -140,6 +147,7 @@</span> <span class="p_context"> static inline void balloon_page_insert(struct balloon_dev_info *balloon,</span>
 static inline void balloon_page_delete(struct page *page)
 {
 	__ClearPageBalloon(page);
<span class="p_add">+	page-&gt;mapping = NULL;</span>
 	set_page_private(page, 0);
 	if (PagePrivate(page)) {
 		ClearPagePrivate(page);
<span class="p_chunk">@@ -191,7 +199,8 @@</span> <span class="p_context"> static inline bool isolated_balloon_page(struct page *page)</span>
 	return false;
 }
 
<span class="p_del">-static inline bool balloon_page_isolate(struct page *page)</span>
<span class="p_add">+static inline bool balloon_page_isolate(struct page *page,</span>
<span class="p_add">+					isolate_mode_t mode)</span>
 {
 	return false;
 }
<span class="p_header">diff --git a/mm/balloon_compaction.c b/mm/balloon_compaction.c</span>
<span class="p_header">index fcad832..8fbcf9c 100644</span>
<span class="p_header">--- a/mm/balloon_compaction.c</span>
<span class="p_header">+++ b/mm/balloon_compaction.c</span>
<span class="p_chunk">@@ -131,43 +131,16 @@</span> <span class="p_context"> static inline void __putback_balloon_page(struct page *page)</span>
 }
 
 /* __isolate_lru_page() counterpart for a ballooned page */
<span class="p_del">-bool balloon_page_isolate(struct page *page)</span>
<span class="p_add">+bool balloon_page_isolate(struct page *page, isolate_mode_t mode)</span>
 {
 	/*
<span class="p_del">-	 * Avoid burning cycles with pages that are yet under __free_pages(),</span>
<span class="p_del">-	 * or just got freed under us.</span>
<span class="p_del">-	 *</span>
<span class="p_del">-	 * In case we &#39;win&#39; a race for a balloon page being freed under us and</span>
<span class="p_del">-	 * raise its refcount preventing __free_pages() from doing its job</span>
<span class="p_del">-	 * the put_page() at the end of this block will take care of</span>
<span class="p_del">-	 * release this page, thus avoiding a nasty leakage.</span>
<span class="p_add">+	 * A ballooned page, by default, has PagePrivate set.</span>
<span class="p_add">+	 * Prevent concurrent compaction threads from isolating</span>
<span class="p_add">+	 * an already isolated balloon page by clearing it.</span>
 	 */
<span class="p_del">-	if (likely(get_page_unless_zero(page))) {</span>
<span class="p_del">-		/*</span>
<span class="p_del">-		 * As balloon pages are not isolated from LRU lists, concurrent</span>
<span class="p_del">-		 * compaction threads can race against page migration functions</span>
<span class="p_del">-		 * as well as race against the balloon driver releasing a page.</span>
<span class="p_del">-		 *</span>
<span class="p_del">-		 * In order to avoid having an already isolated balloon page</span>
<span class="p_del">-		 * being (wrongly) re-isolated while it is under migration,</span>
<span class="p_del">-		 * or to avoid attempting to isolate pages being released by</span>
<span class="p_del">-		 * the balloon driver, lets be sure we have the page lock</span>
<span class="p_del">-		 * before proceeding with the balloon page isolation steps.</span>
<span class="p_del">-		 */</span>
<span class="p_del">-		if (likely(trylock_page(page))) {</span>
<span class="p_del">-			/*</span>
<span class="p_del">-			 * A ballooned page, by default, has PagePrivate set.</span>
<span class="p_del">-			 * Prevent concurrent compaction threads from isolating</span>
<span class="p_del">-			 * an already isolated balloon page by clearing it.</span>
<span class="p_del">-			 */</span>
<span class="p_del">-			if (balloon_page_movable(page)) {</span>
<span class="p_del">-				__isolate_balloon_page(page);</span>
<span class="p_del">-				unlock_page(page);</span>
<span class="p_del">-				return true;</span>
<span class="p_del">-			}</span>
<span class="p_del">-			unlock_page(page);</span>
<span class="p_del">-		}</span>
<span class="p_del">-		put_page(page);</span>
<span class="p_add">+	if (balloon_page_movable(page)) {</span>
<span class="p_add">+		__isolate_balloon_page(page);</span>
<span class="p_add">+		return true;</span>
 	}
 	return false;
 }
<span class="p_chunk">@@ -175,37 +148,31 @@</span> <span class="p_context"> bool balloon_page_isolate(struct page *page)</span>
 /* putback_lru_page() counterpart for a ballooned page */
 void balloon_page_putback(struct page *page)
 {
<span class="p_del">-	/*</span>
<span class="p_del">-	 * &#39;lock_page()&#39; stabilizes the page and prevents races against</span>
<span class="p_del">-	 * concurrent isolation threads attempting to re-isolate it.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	lock_page(page);</span>
<span class="p_add">+	if (!isolated_balloon_page(page))</span>
<span class="p_add">+		return;</span>
 
 	if (__is_movable_balloon_page(page)) {
 		__putback_balloon_page(page);
<span class="p_del">-		/* drop the extra ref count taken for page isolation */</span>
<span class="p_del">-		put_page(page);</span>
 	} else {
 		WARN_ON(1);
 		dump_page(page, &quot;not movable balloon page&quot;);
 	}
<span class="p_del">-	unlock_page(page);</span>
 }
 
 /* move_to_new_page() counterpart for a ballooned page */
<span class="p_del">-int balloon_page_migrate(struct page *newpage,</span>
<span class="p_add">+int balloon_page_migrate(struct address_space *mapping,</span>
<span class="p_add">+			 struct page *newpage,</span>
 			 struct page *page, enum migrate_mode mode)
 {
 	struct balloon_dev_info *balloon = balloon_page_device(page);
 	int rc = -EAGAIN;
 
<span class="p_add">+	if (!isolated_balloon_page(page))</span>
<span class="p_add">+		return rc;</span>
<span class="p_add">+</span>
 	/*
<span class="p_del">-	 * Block others from accessing the &#39;newpage&#39; when we get around to</span>
<span class="p_del">-	 * establishing additional references. We should be the only one</span>
<span class="p_del">-	 * holding a reference to the &#39;newpage&#39; at this point.</span>
<span class="p_add">+	 * newpage and page should be already locked.</span>
 	 */
<span class="p_del">-	BUG_ON(!trylock_page(newpage));</span>
<span class="p_del">-</span>
 	if (WARN_ON(!__is_movable_balloon_page(page))) {
 		dump_page(page, &quot;not movable balloon page&quot;);
 		unlock_page(newpage);
<span class="p_chunk">@@ -215,7 +182,14 @@</span> <span class="p_context"> int balloon_page_migrate(struct page *newpage,</span>
 	if (balloon &amp;&amp; balloon-&gt;migratepage)
 		rc = balloon-&gt;migratepage(balloon, newpage, page, mode);
 
<span class="p_del">-	unlock_page(newpage);</span>
 	return rc;
 }
<span class="p_add">+</span>
<span class="p_add">+/* define the balloon_mapping-&gt;a_ops callback to allow balloon page migration */</span>
<span class="p_add">+const struct address_space_operations balloon_aops = {</span>
<span class="p_add">+	.migratepage = balloon_page_migrate,</span>
<span class="p_add">+	.isolatepage = balloon_page_isolate,</span>
<span class="p_add">+	.putbackpage = balloon_page_putback,</span>
<span class="p_add">+};</span>
<span class="p_add">+EXPORT_SYMBOL_GPL(balloon_aops);</span>
 #endif /* CONFIG_BALLOON_COMPACTION */
<span class="p_header">diff --git a/mm/compaction.c b/mm/compaction.c</span>
<span class="p_header">index 018f08d..60e4cbb 100644</span>
<span class="p_header">--- a/mm/compaction.c</span>
<span class="p_header">+++ b/mm/compaction.c</span>
<span class="p_chunk">@@ -14,7 +14,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/backing-dev.h&gt;
 #include &lt;linux/sysctl.h&gt;
 #include &lt;linux/sysfs.h&gt;
<span class="p_del">-#include &lt;linux/balloon_compaction.h&gt;</span>
<span class="p_add">+#include &lt;linux/compaction.h&gt;</span>
 #include &lt;linux/page-isolation.h&gt;
 #include &lt;linux/kasan.h&gt;
 #include &quot;internal.h&quot;
<span class="p_chunk">@@ -714,12 +714,12 @@</span> <span class="p_context"> isolate_migratepages_block(struct compact_control *cc, unsigned long low_pfn,</span>
 
 		/*
 		 * Check may be lockless but that&#39;s ok as we recheck later.
<span class="p_del">-		 * It&#39;s possible to migrate LRU pages and balloon pages</span>
<span class="p_add">+		 * It&#39;s possible to migrate LRU pages and mobile pages</span>
 		 * Skip any other type of page
 		 */
 		if (!PageLRU(page)) {
<span class="p_del">-			if (unlikely(balloon_page_movable(page))) {</span>
<span class="p_del">-				if (balloon_page_isolate(page)) {</span>
<span class="p_add">+			if (unlikely(mobile_page(page))) {</span>
<span class="p_add">+				if (isolate_mobilepage(page, isolate_mode)) {</span>
 					/* Successfully isolated */
 					goto isolate_success;
 				}
<span class="p_header">diff --git a/mm/migrate.c b/mm/migrate.c</span>
<span class="p_header">index ee401e4..53f0081d 100644</span>
<span class="p_header">--- a/mm/migrate.c</span>
<span class="p_header">+++ b/mm/migrate.c</span>
<span class="p_chunk">@@ -35,7 +35,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/hugetlb.h&gt;
 #include &lt;linux/hugetlb_cgroup.h&gt;
 #include &lt;linux/gfp.h&gt;
<span class="p_del">-#include &lt;linux/balloon_compaction.h&gt;</span>
<span class="p_add">+#include &lt;linux/compaction.h&gt;</span>
 #include &lt;linux/mmu_notifier.h&gt;
 
 #include &lt;asm/tlbflush.h&gt;
<span class="p_chunk">@@ -76,7 +76,7 @@</span> <span class="p_context"> int migrate_prep_local(void)</span>
  * from where they were once taken off for compaction/migration.
  *
  * This function shall be used whenever the isolated pageset has been
<span class="p_del">- * built from lru, balloon, hugetlbfs page. See isolate_migratepages_range()</span>
<span class="p_add">+ * built from lru, mobile, hugetlbfs page. See isolate_migratepages_range()</span>
  * and isolate_huge_page().
  */
 void putback_movable_pages(struct list_head *l)
<span class="p_chunk">@@ -92,8 +92,8 @@</span> <span class="p_context"> void putback_movable_pages(struct list_head *l)</span>
 		list_del(&amp;page-&gt;lru);
 		dec_zone_page_state(page, NR_ISOLATED_ANON +
 				page_is_file_cache(page));
<span class="p_del">-		if (unlikely(isolated_balloon_page(page)))</span>
<span class="p_del">-			balloon_page_putback(page);</span>
<span class="p_add">+		if (unlikely(mobile_page(page)))</span>
<span class="p_add">+			putback_mobilepage(page);</span>
 		else
 			putback_lru_page(page);
 	}
<span class="p_chunk">@@ -844,15 +844,18 @@</span> <span class="p_context"> static int __unmap_and_move(struct page *page, struct page *newpage,</span>
 		}
 	}
 
<span class="p_del">-	if (unlikely(isolated_balloon_page(page))) {</span>
<span class="p_add">+	if (unlikely(mobile_page(page))) {</span>
 		/*
<span class="p_del">-		 * A ballooned page does not need any special attention from</span>
<span class="p_add">+		 * A mobile page does not need any special attention from</span>
 		 * physical to virtual reverse mapping procedures.
 		 * Skip any attempt to unmap PTEs or to remap swap cache,
 		 * in order to avoid burning cycles at rmap level, and perform
 		 * the page migration right away (proteced by page lock).
 		 */
<span class="p_del">-		rc = balloon_page_migrate(newpage, page, mode);</span>
<span class="p_add">+		lock_page(newpage);</span>
<span class="p_add">+		rc = page-&gt;mapping-&gt;a_ops-&gt;migratepage(page-&gt;mapping,</span>
<span class="p_add">+						       newpage, page, mode);</span>
<span class="p_add">+		unlock_page(newpage);</span>
 		goto out_unlock;
 	}
 
<span class="p_chunk">@@ -962,8 +965,8 @@</span> <span class="p_context"> out:</span>
 	if (rc != MIGRATEPAGE_SUCCESS &amp;&amp; put_new_page) {
 		ClearPageSwapBacked(newpage);
 		put_new_page(newpage, private);
<span class="p_del">-	} else if (unlikely(__is_movable_balloon_page(newpage))) {</span>
<span class="p_del">-		/* drop our reference, page already in the balloon */</span>
<span class="p_add">+	} else if (unlikely(mobile_page(newpage))) {</span>
<span class="p_add">+		/* drop our reference */</span>
 		put_page(newpage);
 	} else
 		putback_lru_page(newpage);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



