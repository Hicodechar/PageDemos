
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v3] mm,thp: reduce ifdef&#39;ery for THP in generic code - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v3] mm,thp: reduce ifdef&#39;ery for THP in generic code</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=48431">Vineet Gupta</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 9, 2015, 11:43 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1444391029-25332-1-git-send-email-vgupta@synopsys.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7361041/mbox/"
   >mbox</a>
|
   <a href="/patch/7361041/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7361041/">/patch/7361041/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 32FAABEEA4
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  9 Oct 2015 11:44:55 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 14D432061B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  9 Oct 2015 11:44:54 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 625C920848
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  9 Oct 2015 11:44:52 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S965724AbbJILot (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 9 Oct 2015 07:44:49 -0400
Received: from smtprelay2.synopsys.com ([198.182.60.111]:45589 &quot;EHLO
	smtprelay.synopsys.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1750854AbbJILos (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 9 Oct 2015 07:44:48 -0400
Received: from us02secmta1.synopsys.com (us02secmta1.synopsys.com
	[10.12.235.96])
	by smtprelay.synopsys.com (Postfix) with ESMTP id CBE2910C0F0C;
	Fri,  9 Oct 2015 04:44:47 -0700 (PDT)
Received: from us02secmta1.internal.synopsys.com
	(us02secmta1.internal.synopsys.com [127.0.0.1])
	by us02secmta1.internal.synopsys.com (Service) with ESMTP id
	BDF8A4E202; Fri,  9 Oct 2015 04:44:47 -0700 (PDT)
Received: from mailhost.synopsys.com (mailhost3.synopsys.com [10.12.238.238])
	by us02secmta1.internal.synopsys.com (Service) with ESMTP id
	83D5C4E218; Fri,  9 Oct 2015 04:44:47 -0700 (PDT)
Received: from mailhost.synopsys.com (localhost [127.0.0.1])
	by mailhost.synopsys.com (Postfix) with ESMTP id 68A9BA8A;
	Fri,  9 Oct 2015 04:44:47 -0700 (PDT)
Received: from US01WEHTC2.internal.synopsys.com
	(us01wehtc2-vip.internal.synopsys.com [10.12.239.238])
	by mailhost.synopsys.com (Postfix) with ESMTP id 5E07CA88;
	Fri,  9 Oct 2015 04:44:47 -0700 (PDT)
Received: from IN01WEHTCB.internal.synopsys.com (10.144.199.106) by
	US01WEHTC2.internal.synopsys.com (10.12.239.237) with Microsoft SMTP
	Server (TLS) id 14.3.195.1; Fri, 9 Oct 2015 04:44:20 -0700
Received: from IN01WEHTCA.internal.synopsys.com (10.144.199.103) by
	IN01WEHTCB.internal.synopsys.com (10.144.199.105) with Microsoft SMTP
	Server (TLS) id 14.3.195.1; Fri, 9 Oct 2015 17:14:18 +0530
Received: from vineetg-E7440.internal.synopsys.com (10.12.197.182) by
	IN01WEHTCA.internal.synopsys.com (10.144.199.243) with Microsoft SMTP
	Server (TLS) id 14.3.195.1; Fri, 9 Oct 2015 17:14:16 +0530
From: Vineet Gupta &lt;Vineet.Gupta1@synopsys.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
CC: &lt;linux-kernel@vger.kernel.org&gt;, &lt;linux-mm@kvack.org&gt;,
	Vineet Gupta &lt;Vineet.Gupta1@synopsys.com&gt;
Subject: [PATCH v3] mm,thp: reduce ifdef&#39;ery for THP in generic code
Date: Fri, 9 Oct 2015 17:13:49 +0530
Message-ID: &lt;1444391029-25332-1-git-send-email-vgupta@synopsys.com&gt;
X-Mailer: git-send-email 1.9.1
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [10.12.197.182]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=48431">Vineet Gupta</a> - Oct. 9, 2015, 11:43 a.m.</div>
<pre class="content">
- pgtable-generic.c: Fold individual #ifdef for each helper into a top
  level #ifdef. Makes code more readable

- Converted the stub helpers for !THP to BUILD_BUG() vs. runtime BUG()
<span class="signed-off-by">
Signed-off-by: Vineet Gupta &lt;vgupta@synopsys.com&gt;</span>
---
Somehow the msg didn&#39;t make it to mailing list !
---
 include/asm-generic/pgtable.h | 37 ++++++++++++++++++++++++++++++-------
 mm/pgtable-generic.c          | 24 +++---------------------
 2 files changed, 33 insertions(+), 28 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=48431">Vineet Gupta</a> - Oct. 9, 2015, 1:04 p.m.</div>
<pre class="content">
On Friday 09 October 2015 05:13 PM, Vineet Gupta wrote:
<span class="quote">&gt; - pgtable-generic.c: Fold individual #ifdef for each helper into a top</span>
<span class="quote">&gt;   level #ifdef. Makes code more readable</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; - Converted the stub helpers for !THP to BUILD_BUG() vs. runtime BUG()</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Vineet Gupta &lt;vgupta@synopsys.com&gt;</span>

Sorry for sounding pushy - an Ack here will unblock me from dumping boat load of
patches into linux-next via my tree !

Thx,
-Vineet
<span class="quote">
&gt; ---</span>
<span class="quote">&gt; Somehow the msg didn&#39;t make it to mailing list !</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  include/asm-generic/pgtable.h | 37 ++++++++++++++++++++++++++++++-------</span>
<span class="quote">&gt;  mm/pgtable-generic.c          | 24 +++---------------------</span>
<span class="quote">&gt;  2 files changed, 33 insertions(+), 28 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/include/asm-generic/pgtable.h b/include/asm-generic/pgtable.h</span>
<span class="quote">&gt; index 29c57b2cb344..3eabbbbfd578 100644</span>
<span class="quote">&gt; --- a/include/asm-generic/pgtable.h</span>
<span class="quote">&gt; +++ b/include/asm-generic/pgtable.h</span>
<span class="quote">&gt; @@ -30,9 +30,19 @@ extern int ptep_set_access_flags(struct vm_area_struct *vma,</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #ifndef __HAVE_ARCH_PMDP_SET_ACCESS_FLAGS</span>
<span class="quote">&gt; +#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="quote">&gt;  extern int pmdp_set_access_flags(struct vm_area_struct *vma,</span>
<span class="quote">&gt;  				 unsigned long address, pmd_t *pmdp,</span>
<span class="quote">&gt;  				 pmd_t entry, int dirty);</span>
<span class="quote">&gt; +#else</span>
<span class="quote">&gt; +static inline int pmdp_set_access_flags(struct vm_area_struct *vma,</span>
<span class="quote">&gt; +					unsigned long address, pmd_t *pmdp,</span>
<span class="quote">&gt; +					pmd_t entry, int dirty)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	BUILD_BUG();</span>
<span class="quote">&gt; +	return 0;</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #ifndef __HAVE_ARCH_PTEP_TEST_AND_CLEAR_YOUNG</span>
<span class="quote">&gt; @@ -64,12 +74,12 @@ static inline int pmdp_test_and_clear_young(struct vm_area_struct *vma,</span>
<span class="quote">&gt;  		set_pmd_at(vma-&gt;vm_mm, address, pmdp, pmd_mkold(pmd));</span>
<span class="quote">&gt;  	return r;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -#else /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt; +#else</span>
<span class="quote">&gt;  static inline int pmdp_test_and_clear_young(struct vm_area_struct *vma,</span>
<span class="quote">&gt;  					    unsigned long address,</span>
<span class="quote">&gt;  					    pmd_t *pmdp)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -	BUG();</span>
<span class="quote">&gt; +	BUILD_BUG();</span>
<span class="quote">&gt;  	return 0;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  #endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt; @@ -81,8 +91,21 @@ int ptep_clear_flush_young(struct vm_area_struct *vma,</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #ifndef __HAVE_ARCH_PMDP_CLEAR_YOUNG_FLUSH</span>
<span class="quote">&gt; -int pmdp_clear_flush_young(struct vm_area_struct *vma,</span>
<span class="quote">&gt; -			   unsigned long address, pmd_t *pmdp);</span>
<span class="quote">&gt; +#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="quote">&gt; +extern int pmdp_clear_flush_young(struct vm_area_struct *vma,</span>
<span class="quote">&gt; +				  unsigned long address, pmd_t *pmdp);</span>
<span class="quote">&gt; +#else</span>
<span class="quote">&gt; +/*</span>
<span class="quote">&gt; + * Despite relevant to THP only, this API is called from generic rmap code</span>
<span class="quote">&gt; + * under PageTransHuge(), hence needs a dummy implementation for !THP</span>
<span class="quote">&gt; + */</span>
<span class="quote">&gt; +static inline int pmdp_clear_flush_young(struct vm_area_struct *vma,</span>
<span class="quote">&gt; +					 unsigned long address, pmd_t *pmdp)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	BUILD_BUG();</span>
<span class="quote">&gt; +	return 0;</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #ifndef __HAVE_ARCH_PTEP_GET_AND_CLEAR</span>
<span class="quote">&gt; @@ -175,11 +198,11 @@ static inline void pmdp_set_wrprotect(struct mm_struct *mm,</span>
<span class="quote">&gt;  	pmd_t old_pmd = *pmdp;</span>
<span class="quote">&gt;  	set_pmd_at(mm, address, pmdp, pmd_wrprotect(old_pmd));</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -#else /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt; +#else</span>
<span class="quote">&gt;  static inline void pmdp_set_wrprotect(struct mm_struct *mm,</span>
<span class="quote">&gt;  				      unsigned long address, pmd_t *pmdp)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -	BUG();</span>
<span class="quote">&gt; +	BUILD_BUG();</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  #endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt; @@ -248,7 +271,7 @@ static inline int pmd_same(pmd_t pmd_a, pmd_t pmd_b)</span>
<span class="quote">&gt;  #else /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt;  static inline int pmd_same(pmd_t pmd_a, pmd_t pmd_b)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -	BUG();</span>
<span class="quote">&gt; +	BUILD_BUG();</span>
<span class="quote">&gt;  	return 0;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  #endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt; diff --git a/mm/pgtable-generic.c b/mm/pgtable-generic.c</span>
<span class="quote">&gt; index 48851894e699..c9c59bb75a17 100644</span>
<span class="quote">&gt; --- a/mm/pgtable-generic.c</span>
<span class="quote">&gt; +++ b/mm/pgtable-generic.c</span>
<span class="quote">&gt; @@ -82,12 +82,13 @@ pte_t ptep_clear_flush(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  #ifndef __HAVE_ARCH_PMDP_SET_ACCESS_FLAGS</span>
<span class="quote">&gt;  int pmdp_set_access_flags(struct vm_area_struct *vma,</span>
<span class="quote">&gt;  			  unsigned long address, pmd_t *pmdp,</span>
<span class="quote">&gt;  			  pmd_t entry, int dirty)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="quote">&gt;  	int changed = !pmd_same(*pmdp, entry);</span>
<span class="quote">&gt;  	VM_BUG_ON(address &amp; ~HPAGE_PMD_MASK);</span>
<span class="quote">&gt;  	if (changed) {</span>
<span class="quote">&gt; @@ -95,10 +96,6 @@ int pmdp_set_access_flags(struct vm_area_struct *vma,</span>
<span class="quote">&gt;  		flush_tlb_range(vma, address, address + HPAGE_PMD_SIZE);</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt;  	return changed;</span>
<span class="quote">&gt; -#else /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt; -	BUG();</span>
<span class="quote">&gt; -	return 0;</span>
<span class="quote">&gt; -#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; @@ -107,11 +104,7 @@ int pmdp_clear_flush_young(struct vm_area_struct *vma,</span>
<span class="quote">&gt;  			   unsigned long address, pmd_t *pmdp)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	int young;</span>
<span class="quote">&gt; -#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="quote">&gt;  	VM_BUG_ON(address &amp; ~HPAGE_PMD_MASK);</span>
<span class="quote">&gt; -#else</span>
<span class="quote">&gt; -	BUG();</span>
<span class="quote">&gt; -#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt;  	young = pmdp_test_and_clear_young(vma, address, pmdp);</span>
<span class="quote">&gt;  	if (young)</span>
<span class="quote">&gt;  		flush_tlb_range(vma, address, address + HPAGE_PMD_SIZE);</span>
<span class="quote">&gt; @@ -120,7 +113,6 @@ int pmdp_clear_flush_young(struct vm_area_struct *vma,</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #ifndef __HAVE_ARCH_PMDP_HUGE_CLEAR_FLUSH</span>
<span class="quote">&gt; -#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="quote">&gt;  pmd_t pmdp_huge_clear_flush(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt;  			    pmd_t *pmdp)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; @@ -131,11 +123,9 @@ pmd_t pmdp_huge_clear_flush(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt;  	flush_tlb_range(vma, address, address + HPAGE_PMD_SIZE);</span>
<span class="quote">&gt;  	return pmd;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #ifndef __HAVE_ARCH_PMDP_SPLITTING_FLUSH</span>
<span class="quote">&gt; -#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="quote">&gt;  void pmdp_splitting_flush(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt;  			  pmd_t *pmdp)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; @@ -145,11 +135,9 @@ void pmdp_splitting_flush(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt;  	/* tlb flush only to serialize against gup-fast */</span>
<span class="quote">&gt;  	flush_tlb_range(vma, address, address + HPAGE_PMD_SIZE);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #ifndef __HAVE_ARCH_PGTABLE_DEPOSIT</span>
<span class="quote">&gt; -#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="quote">&gt;  void pgtable_trans_huge_deposit(struct mm_struct *mm, pmd_t *pmdp,</span>
<span class="quote">&gt;  				pgtable_t pgtable)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; @@ -162,11 +150,9 @@ void pgtable_trans_huge_deposit(struct mm_struct *mm, pmd_t *pmdp,</span>
<span class="quote">&gt;  		list_add(&amp;pgtable-&gt;lru, &amp;pmd_huge_pte(mm, pmdp)-&gt;lru);</span>
<span class="quote">&gt;  	pmd_huge_pte(mm, pmdp) = pgtable;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #ifndef __HAVE_ARCH_PGTABLE_WITHDRAW</span>
<span class="quote">&gt; -#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="quote">&gt;  /* no &quot;address&quot; argument so destroys page coloring of some arch */</span>
<span class="quote">&gt;  pgtable_t pgtable_trans_huge_withdraw(struct mm_struct *mm, pmd_t *pmdp)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; @@ -185,11 +171,9 @@ pgtable_t pgtable_trans_huge_withdraw(struct mm_struct *mm, pmd_t *pmdp)</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt;  	return pgtable;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #ifndef __HAVE_ARCH_PMDP_INVALIDATE</span>
<span class="quote">&gt; -#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="quote">&gt;  void pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt;  		     pmd_t *pmdp)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; @@ -197,11 +181,9 @@ void pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt;  	set_pmd_at(vma-&gt;vm_mm, address, pmdp, pmd_mknotpresent(entry));</span>
<span class="quote">&gt;  	flush_tlb_range(vma, address, address + HPAGE_PMD_SIZE);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #ifndef pmdp_collapse_flush</span>
<span class="quote">&gt; -#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="quote">&gt;  pmd_t pmdp_collapse_flush(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt;  			  pmd_t *pmdp)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; @@ -217,5 +199,5 @@ pmd_t pmdp_collapse_flush(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt;  	flush_tlb_range(vma, address, address + HPAGE_PMD_SIZE);</span>
<span class="quote">&gt;  	return pmd;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt; +#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="quote">&gt; </span>

--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=874">Kirill A. Shutemov</a> - Oct. 9, 2015, 1:34 p.m.</div>
<pre class="content">
On Fri, Oct 09, 2015 at 06:34:10PM +0530, Vineet Gupta wrote:
<span class="quote">&gt; On Friday 09 October 2015 05:13 PM, Vineet Gupta wrote:</span>
<span class="quote">&gt; &gt; - pgtable-generic.c: Fold individual #ifdef for each helper into a top</span>
<span class="quote">&gt; &gt;   level #ifdef. Makes code more readable</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; - Converted the stub helpers for !THP to BUILD_BUG() vs. runtime BUG()</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Signed-off-by: Vineet Gupta &lt;vgupta@synopsys.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Sorry for sounding pushy - an Ack here will unblock me from dumping boat load of</span>
<span class="quote">&gt; patches into linux-next via my tree !</span>

I hope you&#39;ve tested it with different .configs...
<span class="acked-by">
Acked-by: Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=48431">Vineet Gupta</a> - Oct. 9, 2015, 1:39 p.m.</div>
<pre class="content">
On Friday 09 October 2015 07:04 PM, Kirill A. Shutemov wrote:

On Fri, Oct 09, 2015 at 06:34:10PM +0530, Vineet Gupta wrote:
<span class="quote">

&gt; On Friday 09 October 2015 05:13 PM, Vineet Gupta wrote:</span>
<span class="quote">

&gt; &gt; - pgtable-generic.c: Fold individual #ifdef for each helper into a top</span>
<span class="quote">&gt; &gt;   level #ifdef. Makes code more readable</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; - Converted the stub helpers for !THP to BUILD_BUG() vs. runtime BUG()</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; Signed-off-by: Vineet Gupta &lt;vgupta@synopsys.com&gt;&lt;mailto:vgupta@synopsys.com&gt;</span>
<span class="quote">

&gt;</span>
<span class="quote">&gt; Sorry for sounding pushy - an Ack here will unblock me from dumping boat load of</span>
<span class="quote">&gt; patches into linux-next via my tree !</span>


I hope you&#39;ve tested it with different .configs...
<span class="acked-by">
Acked-by: Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt;&lt;mailto:kirill.shutemov@linux.intel.com&gt;</span>

Atleast 2 configs with CONFIG_TRANSPARENT_HUGEPAGE on and off - for ARC !

I can test some more if u point me to.


--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/asm-generic/pgtable.h b/include/asm-generic/pgtable.h</span>
<span class="p_header">index 29c57b2cb344..3eabbbbfd578 100644</span>
<span class="p_header">--- a/include/asm-generic/pgtable.h</span>
<span class="p_header">+++ b/include/asm-generic/pgtable.h</span>
<span class="p_chunk">@@ -30,9 +30,19 @@</span> <span class="p_context"> extern int ptep_set_access_flags(struct vm_area_struct *vma,</span>
 #endif
 
 #ifndef __HAVE_ARCH_PMDP_SET_ACCESS_FLAGS
<span class="p_add">+#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
 extern int pmdp_set_access_flags(struct vm_area_struct *vma,
 				 unsigned long address, pmd_t *pmdp,
 				 pmd_t entry, int dirty);
<span class="p_add">+#else</span>
<span class="p_add">+static inline int pmdp_set_access_flags(struct vm_area_struct *vma,</span>
<span class="p_add">+					unsigned long address, pmd_t *pmdp,</span>
<span class="p_add">+					pmd_t entry, int dirty)</span>
<span class="p_add">+{</span>
<span class="p_add">+	BUILD_BUG();</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
 #endif
 
 #ifndef __HAVE_ARCH_PTEP_TEST_AND_CLEAR_YOUNG
<span class="p_chunk">@@ -64,12 +74,12 @@</span> <span class="p_context"> static inline int pmdp_test_and_clear_young(struct vm_area_struct *vma,</span>
 		set_pmd_at(vma-&gt;vm_mm, address, pmdp, pmd_mkold(pmd));
 	return r;
 }
<span class="p_del">-#else /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="p_add">+#else</span>
 static inline int pmdp_test_and_clear_young(struct vm_area_struct *vma,
 					    unsigned long address,
 					    pmd_t *pmdp)
 {
<span class="p_del">-	BUG();</span>
<span class="p_add">+	BUILD_BUG();</span>
 	return 0;
 }
 #endif /* CONFIG_TRANSPARENT_HUGEPAGE */
<span class="p_chunk">@@ -81,8 +91,21 @@</span> <span class="p_context"> int ptep_clear_flush_young(struct vm_area_struct *vma,</span>
 #endif
 
 #ifndef __HAVE_ARCH_PMDP_CLEAR_YOUNG_FLUSH
<span class="p_del">-int pmdp_clear_flush_young(struct vm_area_struct *vma,</span>
<span class="p_del">-			   unsigned long address, pmd_t *pmdp);</span>
<span class="p_add">+#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="p_add">+extern int pmdp_clear_flush_young(struct vm_area_struct *vma,</span>
<span class="p_add">+				  unsigned long address, pmd_t *pmdp);</span>
<span class="p_add">+#else</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Despite relevant to THP only, this API is called from generic rmap code</span>
<span class="p_add">+ * under PageTransHuge(), hence needs a dummy implementation for !THP</span>
<span class="p_add">+ */</span>
<span class="p_add">+static inline int pmdp_clear_flush_young(struct vm_area_struct *vma,</span>
<span class="p_add">+					 unsigned long address, pmd_t *pmdp)</span>
<span class="p_add">+{</span>
<span class="p_add">+	BUILD_BUG();</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
 #endif
 
 #ifndef __HAVE_ARCH_PTEP_GET_AND_CLEAR
<span class="p_chunk">@@ -175,11 +198,11 @@</span> <span class="p_context"> static inline void pmdp_set_wrprotect(struct mm_struct *mm,</span>
 	pmd_t old_pmd = *pmdp;
 	set_pmd_at(mm, address, pmdp, pmd_wrprotect(old_pmd));
 }
<span class="p_del">-#else /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="p_add">+#else</span>
 static inline void pmdp_set_wrprotect(struct mm_struct *mm,
 				      unsigned long address, pmd_t *pmdp)
 {
<span class="p_del">-	BUG();</span>
<span class="p_add">+	BUILD_BUG();</span>
 }
 #endif /* CONFIG_TRANSPARENT_HUGEPAGE */
 #endif
<span class="p_chunk">@@ -248,7 +271,7 @@</span> <span class="p_context"> static inline int pmd_same(pmd_t pmd_a, pmd_t pmd_b)</span>
 #else /* CONFIG_TRANSPARENT_HUGEPAGE */
 static inline int pmd_same(pmd_t pmd_a, pmd_t pmd_b)
 {
<span class="p_del">-	BUG();</span>
<span class="p_add">+	BUILD_BUG();</span>
 	return 0;
 }
 #endif /* CONFIG_TRANSPARENT_HUGEPAGE */
<span class="p_header">diff --git a/mm/pgtable-generic.c b/mm/pgtable-generic.c</span>
<span class="p_header">index 48851894e699..c9c59bb75a17 100644</span>
<span class="p_header">--- a/mm/pgtable-generic.c</span>
<span class="p_header">+++ b/mm/pgtable-generic.c</span>
<span class="p_chunk">@@ -82,12 +82,13 @@</span> <span class="p_context"> pte_t ptep_clear_flush(struct vm_area_struct *vma, unsigned long address,</span>
 }
 #endif
 
<span class="p_add">+#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="p_add">+</span>
 #ifndef __HAVE_ARCH_PMDP_SET_ACCESS_FLAGS
 int pmdp_set_access_flags(struct vm_area_struct *vma,
 			  unsigned long address, pmd_t *pmdp,
 			  pmd_t entry, int dirty)
 {
<span class="p_del">-#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
 	int changed = !pmd_same(*pmdp, entry);
 	VM_BUG_ON(address &amp; ~HPAGE_PMD_MASK);
 	if (changed) {
<span class="p_chunk">@@ -95,10 +96,6 @@</span> <span class="p_context"> int pmdp_set_access_flags(struct vm_area_struct *vma,</span>
 		flush_tlb_range(vma, address, address + HPAGE_PMD_SIZE);
 	}
 	return changed;
<span class="p_del">-#else /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
<span class="p_del">-	BUG();</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
 }
 #endif
 
<span class="p_chunk">@@ -107,11 +104,7 @@</span> <span class="p_context"> int pmdp_clear_flush_young(struct vm_area_struct *vma,</span>
 			   unsigned long address, pmd_t *pmdp)
 {
 	int young;
<span class="p_del">-#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
 	VM_BUG_ON(address &amp; ~HPAGE_PMD_MASK);
<span class="p_del">-#else</span>
<span class="p_del">-	BUG();</span>
<span class="p_del">-#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
 	young = pmdp_test_and_clear_young(vma, address, pmdp);
 	if (young)
 		flush_tlb_range(vma, address, address + HPAGE_PMD_SIZE);
<span class="p_chunk">@@ -120,7 +113,6 @@</span> <span class="p_context"> int pmdp_clear_flush_young(struct vm_area_struct *vma,</span>
 #endif
 
 #ifndef __HAVE_ARCH_PMDP_HUGE_CLEAR_FLUSH
<span class="p_del">-#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
 pmd_t pmdp_huge_clear_flush(struct vm_area_struct *vma, unsigned long address,
 			    pmd_t *pmdp)
 {
<span class="p_chunk">@@ -131,11 +123,9 @@</span> <span class="p_context"> pmd_t pmdp_huge_clear_flush(struct vm_area_struct *vma, unsigned long address,</span>
 	flush_tlb_range(vma, address, address + HPAGE_PMD_SIZE);
 	return pmd;
 }
<span class="p_del">-#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
 #endif
 
 #ifndef __HAVE_ARCH_PMDP_SPLITTING_FLUSH
<span class="p_del">-#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
 void pmdp_splitting_flush(struct vm_area_struct *vma, unsigned long address,
 			  pmd_t *pmdp)
 {
<span class="p_chunk">@@ -145,11 +135,9 @@</span> <span class="p_context"> void pmdp_splitting_flush(struct vm_area_struct *vma, unsigned long address,</span>
 	/* tlb flush only to serialize against gup-fast */
 	flush_tlb_range(vma, address, address + HPAGE_PMD_SIZE);
 }
<span class="p_del">-#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
 #endif
 
 #ifndef __HAVE_ARCH_PGTABLE_DEPOSIT
<span class="p_del">-#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
 void pgtable_trans_huge_deposit(struct mm_struct *mm, pmd_t *pmdp,
 				pgtable_t pgtable)
 {
<span class="p_chunk">@@ -162,11 +150,9 @@</span> <span class="p_context"> void pgtable_trans_huge_deposit(struct mm_struct *mm, pmd_t *pmdp,</span>
 		list_add(&amp;pgtable-&gt;lru, &amp;pmd_huge_pte(mm, pmdp)-&gt;lru);
 	pmd_huge_pte(mm, pmdp) = pgtable;
 }
<span class="p_del">-#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
 #endif
 
 #ifndef __HAVE_ARCH_PGTABLE_WITHDRAW
<span class="p_del">-#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
 /* no &quot;address&quot; argument so destroys page coloring of some arch */
 pgtable_t pgtable_trans_huge_withdraw(struct mm_struct *mm, pmd_t *pmdp)
 {
<span class="p_chunk">@@ -185,11 +171,9 @@</span> <span class="p_context"> pgtable_t pgtable_trans_huge_withdraw(struct mm_struct *mm, pmd_t *pmdp)</span>
 	}
 	return pgtable;
 }
<span class="p_del">-#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
 #endif
 
 #ifndef __HAVE_ARCH_PMDP_INVALIDATE
<span class="p_del">-#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
 void pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,
 		     pmd_t *pmdp)
 {
<span class="p_chunk">@@ -197,11 +181,9 @@</span> <span class="p_context"> void pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
 	set_pmd_at(vma-&gt;vm_mm, address, pmdp, pmd_mknotpresent(entry));
 	flush_tlb_range(vma, address, address + HPAGE_PMD_SIZE);
 }
<span class="p_del">-#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
 #endif
 
 #ifndef pmdp_collapse_flush
<span class="p_del">-#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
 pmd_t pmdp_collapse_flush(struct vm_area_struct *vma, unsigned long address,
 			  pmd_t *pmdp)
 {
<span class="p_chunk">@@ -217,5 +199,5 @@</span> <span class="p_context"> pmd_t pmdp_collapse_flush(struct vm_area_struct *vma, unsigned long address,</span>
 	flush_tlb_range(vma, address, address + HPAGE_PMD_SIZE);
 	return pmd;
 }
<span class="p_del">-#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
 #endif
<span class="p_add">+#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



