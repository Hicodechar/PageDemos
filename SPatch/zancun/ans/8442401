
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RT,01/10] ARM: smp: Move clear_tasks_mm_cpumask() call to __cpu_die() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RT,01/10] ARM: smp: Move clear_tasks_mm_cpumask() call to __cpu_die()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=310">Steven Rostedt</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 26, 2016, 9:41 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20160226214118.878342331@goodmis.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8442401/mbox/"
   >mbox</a>
|
   <a href="/patch/8442401/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8442401/">/patch/8442401/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 1BF49C0553
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 26 Feb 2016 22:20:19 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 106DF203E3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 26 Feb 2016 22:20:18 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id ACC87203ED
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 26 Feb 2016 22:20:16 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755391AbcBZWTz (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 26 Feb 2016 17:19:55 -0500
Received: from mail.kernel.org ([198.145.29.136]:51559 &quot;EHLO mail.kernel.org&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S933954AbcBZWTw (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 26 Feb 2016 17:19:52 -0500
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id C6AB0203E9;
	Fri, 26 Feb 2016 22:19:50 +0000 (UTC)
Received: from gandalf.local.home (cpe-67-246-153-56.stny.res.rr.com
	[67.246.153.56])
	(using TLSv1.2 with cipher AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by mail.kernel.org (Postfix) with ESMTPSA id 8380D203EB;
	Fri, 26 Feb 2016 22:19:49 +0000 (UTC)
Received: from rostedt by gandalf.local.home with local (Exim 4.86)
	(envelope-from &lt;rostedt@goodmis.org&gt;)
	id 1aZQ8U-00053X-Uv; Fri, 26 Feb 2016 16:41:18 -0500
Message-Id: &lt;20160226214118.878342331@goodmis.org&gt;
User-Agent: quilt/0.61-1
Date: Fri, 26 Feb 2016 16:41:01 -0500
From: Steven Rostedt &lt;rostedt@goodmis.org&gt;
To: linux-kernel@vger.kernel.org,
	linux-rt-users &lt;linux-rt-users@vger.kernel.org&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;, Carsten Emde &lt;C.Emde@osadl.org&gt;,
	Sebastian Andrzej Siewior &lt;bigeasy@linutronix.de&gt;,
	John Kacur &lt;jkacur@redhat.com&gt;,
	Paul Gortmaker &lt;paul.gortmaker@windriver.com&gt;,
	Grygorii Strashko &lt;grygorii.strashko@ti.com&gt;,
	&lt;linux-arm-kernel@lists.infradead.org&gt;, Sekhar Nori &lt;nsekhar@ti.com&gt;,
	Austin Schuh &lt;austin@peloton-tech.com&gt;,
	&lt;philipp@peloton-tech.com&gt;, Russell King &lt;linux@arm.linux.org.uk&gt;,
	&lt;stable-rt@vger.kernel.org&gt;
Subject: [PATCH RT 01/10] ARM: smp: Move clear_tasks_mm_cpumask() call to
	__cpu_die()
References: &lt;20160226214100.390136141@goodmis.org&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-15
Content-Disposition: inline;
	filename=0001-ARM-smp-Move-clear_tasks_mm_cpumask-call-to-__cpu_di.patch
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=310">Steven Rostedt</a> - Feb. 26, 2016, 9:41 p.m.</div>
<pre class="content">
3.10.97-rt106-rc1 stable review patch.
If anyone has any objections, please let me know.

------------------
<span class="from">
From: Grygorii Strashko &lt;grygorii.strashko@ti.com&gt;</span>

When running with the RT-kernel (4.1.5-rt5) on TI OMAP dra7-evm and trying
to do Suspend to RAM, the following backtrace occurs:

 Disabling non-boot CPUs ...
 PM: noirq suspend of devices complete after 7.295 msecs
 Disabling non-boot CPUs ...
 BUG: sleeping function called from invalid context at kernel/locking/rtmutex.c:917
 in_atomic(): 1, irqs_disabled(): 128, pid: 18, name: migration/1
 INFO: lockdep is turned off.
 irq event stamp: 122
 hardirqs last  enabled at (121): [&lt;c06ac0ac&gt;] _raw_spin_unlock_irqrestore+0x88/0x90
 hardirqs last disabled at (122): [&lt;c06abed0&gt;] _raw_spin_lock_irq+0x28/0x5c
 softirqs last  enabled at (0): [&lt;c003d294&gt;] copy_process.part.52+0x410/0x19d8
 softirqs last disabled at (0): [&lt;  (null)&gt;]   (null)
 Preemption disabled at:[&lt;  (null)&gt;]   (null)
  CPU: 1 PID: 18 Comm: migration/1 Tainted: G        W       4.1.4-rt3-01046-g96ac8da #204
 Hardware name: Generic DRA74X (Flattened Device Tree)
 [&lt;c0019134&gt;] (unwind_backtrace) from [&lt;c0014774&gt;] (show_stack+0x20/0x24)
 [&lt;c0014774&gt;] (show_stack) from [&lt;c06a70f4&gt;] (dump_stack+0x88/0xdc)
 [&lt;c06a70f4&gt;] (dump_stack) from [&lt;c006cab8&gt;] (___might_sleep+0x198/0x2a8)
 [&lt;c006cab8&gt;] (___might_sleep) from [&lt;c06ac4dc&gt;] (rt_spin_lock+0x30/0x70)
 [&lt;c06ac4dc&gt;] (rt_spin_lock) from [&lt;c013f790&gt;] (find_lock_task_mm+0x9c/0x174)
 [&lt;c013f790&gt;] (find_lock_task_mm) from [&lt;c00409ac&gt;] (clear_tasks_mm_cpumask+0xb4/0x1ac)
 [&lt;c00409ac&gt;] (clear_tasks_mm_cpumask) from [&lt;c00166a4&gt;] (__cpu_disable+0x98/0xbc)
 [&lt;c00166a4&gt;] (__cpu_disable) from [&lt;c06a2e8c&gt;] (take_cpu_down+0x1c/0x50)
 [&lt;c06a2e8c&gt;] (take_cpu_down) from [&lt;c00f2600&gt;] (multi_cpu_stop+0x11c/0x158)
 [&lt;c00f2600&gt;] (multi_cpu_stop) from [&lt;c00f2a9c&gt;] (cpu_stopper_thread+0xc4/0x184)
 [&lt;c00f2a9c&gt;] (cpu_stopper_thread) from [&lt;c0069058&gt;] (smpboot_thread_fn+0x18c/0x324)
 [&lt;c0069058&gt;] (smpboot_thread_fn) from [&lt;c00649c4&gt;] (kthread+0xe8/0x104)
 [&lt;c00649c4&gt;] (kthread) from [&lt;c0010058&gt;] (ret_from_fork+0x14/0x3c)
 CPU1: shutdown
 PM: Calling sched_clock_suspend+0x0/0x40
 PM: Calling timekeeping_suspend+0x0/0x2e0
 PM: Calling irq_gc_suspend+0x0/0x68
 PM: Calling fw_suspend+0x0/0x2c
 PM: Calling cpu_pm_suspend+0x0/0x28

Also, sometimes system stucks right after displaying &quot;Disabling non-boot
CPUs ...&quot;. The root cause of above backtrace is task_lock() which takes
a sleeping lock on -RT.

To fix the issue, move clear_tasks_mm_cpumask() call from __cpu_disable()
to __cpu_die() which is called on the thread which is asking for a target
CPU to be shutdown. In addition, this change restores CPUhotplug functionality
on TI OMAP dra7-evm and CPU1 can be unplugged/plugged many times.
<span class="signed-off-by">
Signed-off-by: Grygorii Strashko &lt;grygorii.strashko@ti.com&gt;</span>
Cc: Steven Rostedt &lt;rostedt@goodmis.org&gt;
Cc: &lt;linux-arm-kernel@lists.infradead.org&gt;
Cc: Sekhar Nori &lt;nsekhar@ti.com&gt;
Cc: Austin Schuh &lt;austin@peloton-tech.com&gt;
Cc: &lt;philipp@peloton-tech.com&gt;
Cc: Russell King &lt;linux@arm.linux.org.uk&gt;
Cc: &lt;bigeasy@linutronix.de&gt;
Cc: stable-rt@vger.kernel.org
Link: http://lkml.kernel.org/r/1441995683-30817-1-git-send-email-grygorii.strashko@ti.com
<span class="signed-off-by">Signed-off-by: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>
<span class="signed-off-by">Signed-off-by: Steven Rostedt &lt;rostedt@goodmis.org&gt;</span>
---
 arch/arm/kernel/smp.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm/kernel/smp.c b/arch/arm/kernel/smp.c</span>
<span class="p_header">index 5919eb451bb9..7ad24aa57040 100644</span>
<span class="p_header">--- a/arch/arm/kernel/smp.c</span>
<span class="p_header">+++ b/arch/arm/kernel/smp.c</span>
<span class="p_chunk">@@ -192,8 +192,6 @@</span> <span class="p_context"> int __cpuinit __cpu_disable(void)</span>
 	flush_cache_louis();
 	local_flush_tlb_all();
 
<span class="p_del">-	clear_tasks_mm_cpumask(cpu);</span>
<span class="p_del">-</span>
 	return 0;
 }
 
<span class="p_chunk">@@ -209,6 +207,9 @@</span> <span class="p_context"> void __cpuinit __cpu_die(unsigned int cpu)</span>
 		pr_err(&quot;CPU%u: cpu didn&#39;t die\n&quot;, cpu);
 		return;
 	}
<span class="p_add">+</span>
<span class="p_add">+	clear_tasks_mm_cpumask(cpu);</span>
<span class="p_add">+</span>
 	printk(KERN_NOTICE &quot;CPU%u: shutdown\n&quot;, cpu);
 
 	/*

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



