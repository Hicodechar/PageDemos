
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[10/10] arch/x86/platform/uv: BAU UV4 add version-specific functions - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [10/10] arch/x86/platform/uv: BAU UV4 add version-specific functions</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=148501">Andrew Banman</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 21, 2016, 4:09 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1474474161-265604-11-git-send-email-abanman@sgi.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9343811/mbox/"
   >mbox</a>
|
   <a href="/patch/9343811/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9343811/">/patch/9343811/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	A596E60B16 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 21 Sep 2016 16:10:10 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 87A602A7EE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 21 Sep 2016 16:10:10 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 7C7642A7F3; Wed, 21 Sep 2016 16:10:10 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id A826C2A7F3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 21 Sep 2016 16:10:08 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S935283AbcIUQJ5 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 21 Sep 2016 12:09:57 -0400
Received: from relay3.sgi.com ([192.48.152.1]:48666 &quot;EHLO relay.sgi.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S934301AbcIUQJy (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 21 Sep 2016 12:09:54 -0400
Received: from stormcage.americas.sgi.com (stormcage.americas.sgi.com
	[128.162.236.70])
	by relay3.corp.sgi.com (Postfix) with ESMTP id 12C0CAC008;
	Wed, 21 Sep 2016 09:09:53 -0700 (PDT)
Received: by stormcage.americas.sgi.com (Postfix, from userid 200151)
	id DA3142056DAD0; Wed, 21 Sep 2016 11:09:52 -0500 (CDT)
From: Andrew Banman &lt;abanman@sgi.com&gt;
To: mingo@redhat.com
Cc: akpm@linux-foundation.org, tglx@linutronix.de, hpa@zytor.com,
	travis@sgi.com, rja@sgi.com, sivanich@sgi.com, x86@kernel.org,
	linux-kernel@vger.kernel.org, abanman@sgi.com
Subject: [PATCH 10/10] arch/x86/platform/uv: BAU UV4 add version-specific
	functions
Date: Wed, 21 Sep 2016 11:09:21 -0500
Message-Id: &lt;1474474161-265604-11-git-send-email-abanman@sgi.com&gt;
X-Mailer: git-send-email 1.8.5.6
In-Reply-To: &lt;1474474161-265604-1-git-send-email-abanman@sgi.com&gt;
References: &lt;1474410720-82890-1-git-send-email-abanman@sgi.com&gt;
	&lt;1474474161-265604-1-git-send-email-abanman@sgi.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=148501">Andrew Banman</a> - Sept. 21, 2016, 4:09 p.m.</div>
<pre class="content">
Add the UV4-specific function definitions and define an operations struct
to implement them in the BAU driver.

Many BAU MMRs, although functionally the same, have new addresses on UV4
due to hardware changes. Each MMR requires new read/write functions, but
their implementation in the driver does not change. Thus, it is enough to
enumerate them in the operations struct for the changes to take effect.
<span class="signed-off-by">
Signed-off-by: Andrew Banman &lt;abanman@sgi.com&gt;</span>
<span class="acked-by">Acked-by: Mike Travis &lt;travis@sgi.com&gt;</span>
<span class="acked-by">Acked-by: Dimitri Sivanich &lt;sivanich@sgi.com&gt;</span>
<span class="acked-by">Acked-by: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>
---
 arch/x86/include/asm/uv/uv_bau.h | 30 ++++++++++++++++++++++++++++++
 arch/x86/platform/uv/tlb_uv.c    | 15 ++++++++++++++-
 2 files changed, 44 insertions(+), 1 deletion(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/uv/uv_bau.h b/arch/x86/include/asm/uv/uv_bau.h</span>
<span class="p_header">index a7a93a5..57ab86d 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/uv/uv_bau.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/uv/uv_bau.h</span>
<span class="p_chunk">@@ -664,6 +664,16 @@</span> <span class="p_context"> static inline void write_gmmr_activation(int pnode, unsigned long mmr_image)</span>
 	write_gmmr(pnode, UVH_LB_BAU_SB_ACTIVATION_CONTROL, mmr_image);
 }
 
<span class="p_add">+static inline void write_mmr_proc_payload_first(int pnode, unsigned long mmr_image)</span>
<span class="p_add">+{</span>
<span class="p_add">+	write_gmmr(pnode, UV4H_LB_PROC_INTD_QUEUE_FIRST, mmr_image);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline void write_mmr_proc_payload_last(int pnode, unsigned long mmr_image)</span>
<span class="p_add">+{</span>
<span class="p_add">+	write_gmmr(pnode, UV4H_LB_PROC_INTD_QUEUE_LAST, mmr_image);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static inline void write_mmr_payload_first(int pnode, unsigned long mmr_image)
 {
 	write_gmmr(pnode, UVH_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST, mmr_image);
<span class="p_chunk">@@ -709,6 +719,26 @@</span> <span class="p_context"> static inline unsigned long read_gmmr_sw_ack(int pnode)</span>
 	return read_gmmr(pnode, UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE);
 }
 
<span class="p_add">+static inline void write_mmr_proc_sw_ack(unsigned long mr)</span>
<span class="p_add">+{</span>
<span class="p_add">+	uv_write_local_mmr(UV4H_LB_PROC_INTD_SOFT_ACK_CLEAR, mr);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline void write_gmmr_proc_sw_ack(int pnode, unsigned long mr)</span>
<span class="p_add">+{</span>
<span class="p_add">+	write_gmmr(pnode, UV4H_LB_PROC_INTD_SOFT_ACK_CLEAR, mr);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline unsigned long read_mmr_proc_sw_ack(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return read_lmmr(UV4H_LB_PROC_INTD_SOFT_ACK_PENDING);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline unsigned long read_gmmr_proc_sw_ack(int pnode)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return read_gmmr(pnode, UV4H_LB_PROC_INTD_SOFT_ACK_PENDING);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static inline void write_mmr_data_config(int pnode, unsigned long mr)
 {
 	uv_write_global_mmr64(pnode, UVH_BAU_DATA_CONFIG, mr);
<span class="p_header">diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">index 7ca0e5c..56c5a3a 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_chunk">@@ -36,6 +36,17 @@</span> <span class="p_context"> static struct bau_operations uv123_bau_ops = {</span>
 	.write_payload_last      = write_mmr_payload_last,
 };
 
<span class="p_add">+static struct bau_operations uv4_bau_ops = {</span>
<span class="p_add">+	.bau_gpa_to_offset       = uv_gpa_to_soc_phys_ram,</span>
<span class="p_add">+	.read_l_sw_ack           = read_mmr_proc_sw_ack,</span>
<span class="p_add">+	.read_g_sw_ack           = read_gmmr_proc_sw_ack,</span>
<span class="p_add">+	.write_l_sw_ack          = write_mmr_proc_sw_ack,</span>
<span class="p_add">+	.write_g_sw_ack          = write_gmmr_proc_sw_ack,</span>
<span class="p_add">+	.write_payload_first     = write_mmr_proc_payload_first,</span>
<span class="p_add">+	.write_payload_last      = write_mmr_proc_payload_last,</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
 /* timeouts in nanoseconds (indexed by UVH_AGING_PRESCALE_SEL urgency7 30:28) */
 static int timeout_base_ns[] = {
 		20,
<span class="p_chunk">@@ -2158,7 +2169,9 @@</span> <span class="p_context"> static int __init uv_bau_init(void)</span>
 	if (!is_uv_system())
 		return 0;
 
<span class="p_del">-	if (is_uv3_hub())</span>
<span class="p_add">+	if (is_uv4_hub())</span>
<span class="p_add">+		ops = uv4_bau_ops;</span>
<span class="p_add">+	else if (is_uv3_hub())</span>
 		ops = uv123_bau_ops;
 	else if (is_uv2_hub())
 		ops = uv123_bau_ops;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



