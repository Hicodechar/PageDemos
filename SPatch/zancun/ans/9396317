
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/5] mm: Update mmu_gather range correctly - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/5] mm: Update mmu_gather range correctly</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=1141">Aneesh Kumar K.V</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 26, 2016, 8:48 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161026084839.27299-3-aneesh.kumar@linux.vnet.ibm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9396317/mbox/"
   >mbox</a>
|
   <a href="/patch/9396317/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9396317/">/patch/9396317/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	F329160236 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 26 Oct 2016 08:50:41 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id ADFC229904
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 26 Oct 2016 08:50:41 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A09FB2990E; Wed, 26 Oct 2016 08:50:41 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 26A4529904
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 26 Oct 2016 08:50:41 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754982AbcJZIue (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 26 Oct 2016 04:50:34 -0400
Received: from mx0a-001b2d01.pphosted.com ([148.163.156.1]:50910 &quot;EHLO
	mx0a-001b2d01.pphosted.com&quot; rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1754235AbcJZIt2 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 26 Oct 2016 04:49:28 -0400
Received: from pps.filterd (m0098404.ppops.net [127.0.0.1])
	by mx0a-001b2d01.pphosted.com (8.16.0.17/8.16.0.17) with SMTP id
	u9Q8n0rb066540
	for &lt;linux-kernel@vger.kernel.org&gt;; Wed, 26 Oct 2016 04:49:27 -0400
Received: from e36.co.us.ibm.com (e36.co.us.ibm.com [32.97.110.154])
	by mx0a-001b2d01.pphosted.com with ESMTP id 26apkk0cnd-1
	(version=TLSv1.2 cipher=AES256-SHA bits=256 verify=NOT)
	for &lt;linux-kernel@vger.kernel.org&gt;; Wed, 26 Oct 2016 04:49:26 -0400
Received: from localhost
	by e36.co.us.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use
	Only! Violators will be prosecuted
	for &lt;linux-kernel@vger.kernel.org&gt; from
	&lt;aneesh.kumar@linux.vnet.ibm.com&gt;; Wed, 26 Oct 2016 02:49:26 -0600
Received: from d03dlp02.boulder.ibm.com (9.17.202.178)
	by e36.co.us.ibm.com (192.168.1.136) with IBM ESMTP SMTP Gateway:
	Authorized Use Only! Violators will be prosecuted; 
	Wed, 26 Oct 2016 02:49:23 -0600
Received: from b03cxnp07029.gho.boulder.ibm.com
	(b03cxnp07029.gho.boulder.ibm.com [9.17.130.16])
	by d03dlp02.boulder.ibm.com (Postfix) with ESMTP id 3CC873E4003E;
	Wed, 26 Oct 2016 02:49:23 -0600 (MDT)
Received: from b03ledav003.gho.boulder.ibm.com
	(b03ledav003.gho.boulder.ibm.com [9.17.130.234])
	by b03cxnp07029.gho.boulder.ibm.com (8.14.9/8.14.9/NCO v10.0) with
	ESMTP id u9Q8nM1414811554; Wed, 26 Oct 2016 01:49:23 -0700
Received: from b03ledav003.gho.boulder.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 127136A057;
	Wed, 26 Oct 2016 02:49:23 -0600 (MDT)
Received: from skywalker.in.ibm.com (unknown [9.199.45.199])
	by b03ledav003.gho.boulder.ibm.com (Postfix) with ESMTP id AF92E6A03B;
	Wed, 26 Oct 2016 02:49:21 -0600 (MDT)
From: &quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;
To: akpm@linux-foundation.org
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
	&quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;
Subject: [PATCH 2/5] mm: Update mmu_gather range correctly
Date: Wed, 26 Oct 2016 14:18:36 +0530
X-Mailer: git-send-email 2.10.1
In-Reply-To: &lt;20161026084839.27299-1-aneesh.kumar@linux.vnet.ibm.com&gt;
References: &lt;20161026084839.27299-1-aneesh.kumar@linux.vnet.ibm.com&gt;
X-TM-AS-GCONF: 00
X-Content-Scanned: Fidelis XPS MAILER
x-cbid: 16102608-0020-0000-0000-00000A1AFA55
X-IBM-SpamModules-Scores: 
X-IBM-SpamModules-Versions: BY=3.00005981; HX=3.00000240; KW=3.00000007;
	PH=3.00000004; SC=3.00000188; SDB=6.00772924; UDB=6.00371059;
	IPR=6.00549750; 
	BA=6.00004834; NDR=6.00000001; ZLA=6.00000005; ZF=6.00000009;
	ZB=6.00000000; 
	ZP=6.00000000; ZH=6.00000000; ZU=6.00000002; MB=3.00013106;
	XFM=3.00000011; UTC=2016-10-26 08:49:25
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 16102608-0021-0000-0000-000056C0204D
Message-Id: &lt;20161026084839.27299-3-aneesh.kumar@linux.vnet.ibm.com&gt;
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10432:, ,
	definitions=2016-10-26_01:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
	spamscore=0 suspectscore=4
	malwarescore=0 phishscore=0 adultscore=0 bulkscore=0 classifier=spam
	adjust=0 reason=mlx scancount=1 engine=8.0.1-1609300000
	definitions=main-1610260153
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1141">Aneesh Kumar K.V</a> - Oct. 26, 2016, 8:48 a.m.</div>
<pre class="content">
We use __tlb_adjust_range to update range convered by mmu_gather struct.
We later use the &#39;start&#39; and &#39;end&#39; to do a mmu_notifier_invalidate_range
in tlb_flush_mmu_tlbonly(). Update the &#39;end&#39; correctly in
__tlb_adjust_range so that we call mmu_notifier_invalidate_range with the
correct range values.

W.r.t to tlbflush, this should not have any impact, because a flush with
correct start address will flush tlb mapping for the range.

Also add comment w.r.t updating the range when we free pagetable pages.
For now we don&#39;t support a range based page table cache flush.
<span class="signed-off-by">
Signed-off-by: Aneesh Kumar K.V &lt;aneesh.kumar@linux.vnet.ibm.com&gt;</span>
---
 include/asm-generic/tlb.h | 43 +++++++++++++++++++++++++++++++------------
 1 file changed, 31 insertions(+), 12 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/asm-generic/tlb.h b/include/asm-generic/tlb.h</span>
<span class="p_header">index c6d667187608..dba727becd5f 100644</span>
<span class="p_header">--- a/include/asm-generic/tlb.h</span>
<span class="p_header">+++ b/include/asm-generic/tlb.h</span>
<span class="p_chunk">@@ -125,10 +125,11 @@</span> <span class="p_context"> extern bool __tlb_remove_page_size(struct mmu_gather *tlb, struct page *page,</span>
 				   int page_size);
 
 static inline void __tlb_adjust_range(struct mmu_gather *tlb,
<span class="p_del">-				      unsigned long address)</span>
<span class="p_add">+				      unsigned long address,</span>
<span class="p_add">+				      unsigned int range_size)</span>
 {
 	tlb-&gt;start = min(tlb-&gt;start, address);
<span class="p_del">-	tlb-&gt;end = max(tlb-&gt;end, address + PAGE_SIZE);</span>
<span class="p_add">+	tlb-&gt;end = max(tlb-&gt;end, address + range_size);</span>
 	/*
 	 * Track the last address with which we adjusted the range. This
 	 * will be used later to adjust again after a mmu_flush due to
<span class="p_chunk">@@ -153,7 +154,7 @@</span> <span class="p_context"> static inline void tlb_remove_page_size(struct mmu_gather *tlb,</span>
 	if (__tlb_remove_page_size(tlb, page, page_size)) {
 		tlb_flush_mmu(tlb);
 		tlb-&gt;page_size = page_size;
<span class="p_del">-		__tlb_adjust_range(tlb, tlb-&gt;addr);</span>
<span class="p_add">+		__tlb_adjust_range(tlb, tlb-&gt;addr, page_size);</span>
 		__tlb_remove_page_size(tlb, page, page_size);
 	}
 }
<span class="p_chunk">@@ -177,7 +178,7 @@</span> <span class="p_context"> static inline bool __tlb_remove_pte_page(struct mmu_gather *tlb, struct page *pa</span>
 	/* active-&gt;nr should be zero when we call this */
 	VM_BUG_ON_PAGE(tlb-&gt;active-&gt;nr, page);
 	tlb-&gt;page_size = PAGE_SIZE;
<span class="p_del">-	__tlb_adjust_range(tlb, tlb-&gt;addr);</span>
<span class="p_add">+	__tlb_adjust_range(tlb, tlb-&gt;addr, PAGE_SIZE);</span>
 	return __tlb_remove_page(tlb, page);
 }
 
<span class="p_chunk">@@ -215,7 +216,7 @@</span> <span class="p_context"> static inline bool __tlb_remove_pte_page(struct mmu_gather *tlb, struct page *pa</span>
  */
 #define tlb_remove_tlb_entry(tlb, ptep, address)		\
 	do {							\
<span class="p_del">-		__tlb_adjust_range(tlb, address);		\</span>
<span class="p_add">+		__tlb_adjust_range(tlb, address, PAGE_SIZE);	\</span>
 		__tlb_remove_tlb_entry(tlb, ptep, address);	\
 	} while (0)
 
<span class="p_chunk">@@ -227,29 +228,47 @@</span> <span class="p_context"> static inline bool __tlb_remove_pte_page(struct mmu_gather *tlb, struct page *pa</span>
 #define __tlb_remove_pmd_tlb_entry(tlb, pmdp, address) do {} while (0)
 #endif
 
<span class="p_del">-#define tlb_remove_pmd_tlb_entry(tlb, pmdp, address)		\</span>
<span class="p_del">-	do {							\</span>
<span class="p_del">-		__tlb_adjust_range(tlb, address);		\</span>
<span class="p_del">-		__tlb_remove_pmd_tlb_entry(tlb, pmdp, address);	\</span>
<span class="p_add">+#define tlb_remove_pmd_tlb_entry(tlb, pmdp, address)			\</span>
<span class="p_add">+	do {								\</span>
<span class="p_add">+		__tlb_adjust_range(tlb, address, HPAGE_PMD_SIZE);	\</span>
<span class="p_add">+		__tlb_remove_pmd_tlb_entry(tlb, pmdp, address);		\</span>
 	} while (0)
 
<span class="p_add">+/*</span>
<span class="p_add">+ * For things like page tables caches (ie caching addresses &quot;inside&quot; the</span>
<span class="p_add">+ * page tables, like x86 does), for legacy reasons, flushing an</span>
<span class="p_add">+ * individual page had better flush the page table caches behind it. This</span>
<span class="p_add">+ * is definitely how x86 works, for example. And if you have an</span>
<span class="p_add">+ * architected non-legacy page table cache (which I&#39;m not aware of</span>
<span class="p_add">+ * anybody actually doing), you&#39;re going to have some architecturally</span>
<span class="p_add">+ * explicit flushing for that, likely *separate* from a regular TLB entry</span>
<span class="p_add">+ * flush, and thus you&#39;d need more than just some range expansion..</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * So if we ever find an architecture</span>
<span class="p_add">+ * that would want something that odd, I think it is up to that</span>
<span class="p_add">+ * architecture to do its own odd thing, not cause pain for others</span>
<span class="p_add">+ * http://lkml.kernel.org/r/CA+55aFzBggoXtNXQeng5d_mRoDnaMBE5Y+URs+PHR67nUpMtaw@mail.gmail.com</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * For now w.r.t page table cache, mark the range_size as PAGE_SIZE</span>
<span class="p_add">+ */</span>
<span class="p_add">+</span>
 #define pte_free_tlb(tlb, ptep, address)			\
 	do {							\
<span class="p_del">-		__tlb_adjust_range(tlb, address);		\</span>
<span class="p_add">+		__tlb_adjust_range(tlb, address, PAGE_SIZE);	\</span>
 		__pte_free_tlb(tlb, ptep, address);		\
 	} while (0)
 
 #ifndef __ARCH_HAS_4LEVEL_HACK
 #define pud_free_tlb(tlb, pudp, address)			\
 	do {							\
<span class="p_del">-		__tlb_adjust_range(tlb, address);		\</span>
<span class="p_add">+		__tlb_adjust_range(tlb, address, PAGE_SIZE);	\</span>
 		__pud_free_tlb(tlb, pudp, address);		\
 	} while (0)
 #endif
 
 #define pmd_free_tlb(tlb, pmdp, address)			\
 	do {							\
<span class="p_del">-		__tlb_adjust_range(tlb, address);		\</span>
<span class="p_add">+		__tlb_adjust_range(tlb, address, PAGE_SIZE);	\</span>
 		__pmd_free_tlb(tlb, pmdp, address);		\
 	} while (0)
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



