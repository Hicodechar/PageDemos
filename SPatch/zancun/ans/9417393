
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v6,2/7] iommu/exynos: Remove dead code - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v6,2/7] iommu/exynos: Remove dead code</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=2061">Marek Szyprowski</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 8, 2016, 1:29 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1478611764-6473-3-git-send-email-m.szyprowski@samsung.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9417393/mbox/"
   >mbox</a>
|
   <a href="/patch/9417393/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9417393/">/patch/9417393/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	516A260585 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  8 Nov 2016 13:32:11 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 41F6628B71
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  8 Nov 2016 13:32:11 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 356BE28AD9; Tue,  8 Nov 2016 13:32:11 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id A0AE528AD9
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  8 Nov 2016 13:32:10 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752472AbcKHNb6 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 8 Nov 2016 08:31:58 -0500
Received: from mailout1.w1.samsung.com ([210.118.77.11]:11982 &quot;EHLO
	mailout1.w1.samsung.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751736AbcKHNaV (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 8 Nov 2016 08:30:21 -0500
Received: from eucas1p2.samsung.com (unknown [182.198.249.207])
	by mailout1.w1.samsung.com
	(Oracle Communications Messaging Server 7.0.5.31.0 64bit (built May 5
	2014))
	with ESMTP id &lt;0OGB0014SS6GLF40@mailout1.w1.samsung.com&gt;; Tue,
	08 Nov 2016 13:30:16 +0000 (GMT)
Received: from eusmges4.samsung.com (unknown [203.254.199.244])
	by     eucas1p2.samsung.com (KnoxPortal) with ESMTP id
	20161108133016eucas1p2c027356e9c5d22e2e9ae41aff0e1a872~FFZzkv8kx0098300983eucas1p2g;
	Tue,  8 Nov 2016 13:30:16 +0000 (GMT)
Received: from eucas1p2.samsung.com ( [182.198.249.207])
	by eusmges4.samsung.com (EUCPMTA) with SMTP id EC.7F.28332.763D1285;
	Tue, 8      Nov 2016 13:30:15 +0000 (GMT)
Received: from eusmgms1.samsung.com (unknown [182.198.249.179])
	by     eucas1p2.samsung.com (KnoxPortal) with ESMTP id
	20161108133015eucas1p234c8c7076bcda5020ae8b78e87a0203d~FFZy7I2sb0086500865eucas1p2H;
	Tue,  8 Nov 2016 13:30:15 +0000 (GMT)
X-AuditID: cbfec7f4-f791c6d000006eac-ac-5821d3677d80
Received: from eusync1.samsung.com ( [203.254.199.211])
	by eusmgms1.samsung.com (EUCPMTA) with SMTP id F8.97.07726.663D1285;
	Tue, 8      Nov 2016 13:30:14 +0000 (GMT)
Received: from AMDC2765.digital.local ([106.116.147.25])
	by eusync1.samsung.com (Oracle Communications Messaging Server
	7.0.5.31.0 64bit  (built May  5 2014))
	with ESMTPA id &lt;0OGB005BFS5J9G30@eusync1.samsung.com&gt;; Tue,
	08 Nov 2016 13:30:15 +0000 (GMT)
From: Marek Szyprowski &lt;m.szyprowski@samsung.com&gt;
To: linux-pm@vger.kernel.org, linux-kernel@vger.kernel.org,
	iommu@lists.linux-foundation.org,
	linux-samsung-soc@vger.kernel.org, Joerg Roedel &lt;joro@8bytes.org&gt;
Cc: Marek Szyprowski &lt;m.szyprowski@samsung.com&gt;,
	Inki Dae &lt;inki.dae@samsung.com&gt;, Kukjin Kim &lt;kgene@kernel.org&gt;,
	Krzysztof Kozlowski &lt;krzk@kernel.org&gt;,
	Bartlomiej Zolnierkiewicz &lt;b.zolnierkie@samsung.com&gt;,
	&quot;Rafael J. Wysocki&quot; &lt;rjw@rjwysocki.net&gt;, Mark Brown &lt;broonie@kernel.org&gt;,
	&quot;Luis R. Rodriguez&quot; &lt;mcgrof@kernel.org&gt;,
	Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	Tomeu Vizoso &lt;tomeu.vizoso@collabora.com&gt;,
	Lukas Wunner &lt;lukas@wunner.de&gt;, Kevin Hilman &lt;khilman@kernel.org&gt;,
	Tobias Jakobi &lt;tjakobi@math.uni-bielefeld.de&gt;,
	Tomasz Figa &lt;tomasz.figa@gmail.com&gt;
Subject: [PATCH v6 2/7] iommu/exynos: Remove dead code
Date: Tue, 08 Nov 2016 14:29:19 +0100
Message-id: &lt;1478611764-6473-3-git-send-email-m.szyprowski@samsung.com&gt;
X-Mailer: git-send-email 1.9.1
In-reply-to: &lt;1478611764-6473-1-git-send-email-m.szyprowski@samsung.com&gt;
X-Brightmail-Tracker: H4sIAAAAAAAAAzWSa0hTcRjG/e+cnXNcrQ7z0h81zZEQRqYg+s9JJEgeCKRPKhLm0sO0nNqm
	ln4I8+7IO6vhLdO0mpqlaziLvLJ5Ce+WkZbmJS8Ikhp2QdKd+e338D7P+/DCS2GiWr4DFRuf
	xCripXFiQoDrjb9HzskmXMM8Dff90WtNCx+p5xcJlFnXQqDSb8U4qumUoPyKVyQqWljH0FLb
	Ag+NjOzLiY5KAm0V9AGkGXnPQys/HFFz3yyJpouXAPowNM5HOY2bfKTt+AdQYfM4ccmGWeyu
	5jHts08BYyifJZlWbT7BdFY1kUzZ9DPA7BlJRjeVizOFOi1gtlqdGU2unn/1SLjAP5qNi01h
	FecvRgpiGts1/ESj293h6gEyHfx0VgFrCtLesHd5DuPYHo5+bSFUQECJ6HoAH86YLGILQMOX
	B+AwUdX9EnCDBgDbP6ktIp0H24YG+QcugvaCqg2VOW5L1wHYX/GRdyAwuguHqyUL5kYb2geu
	ZT4xJ3DaDVZ+nyIOWEgHQf3ftzyuzxkOGMvMHmuagf3P582LIL1DwsKS5v1ual+chK1dlisC
	Yc+gmuTYBq6ZdBZ2gvl53ZadRQBmZJ/lWAPg8IaQYwnsNY2ZuzD6GCzVP8K49UKYlyPiLAyc
	e7OKcxwAs+f/4Nz1FQDu7ZjwYuBUA6y0wJZNVsplrNLbQymVK5PjZR5RCfJWsP85Q3um7XZQ
	Z/TrATQFxEeFK0WnwkR8aYoyVd4DIIWJbYUTw65hImG0NDWNVSRcVyTHscoe4Ejh4hPCdzWT
	oSJaJk1ib7FsIqs4nPIoa4d0cCZjSHabCoYRLl06QmKVzUSFGO69QF1Yk/u679iNrDSBXZLt
	5qx41662KGt5V5UxFhi/mqo73vAr/HR9wXaEOtTtcYDf1pQwwPfaRIfkZrZ8smH6sqIpgRxN
	0tmHCFy6L9yhDcWeHT6NmW7HagTlu+6fB/SFwVdmdtUDkqBIMa6MkXq5Ywql9D95fJOgNQMA
	AA==
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFjrIIsWRmVeSWpSXmKPExsVy+t/xy7pplxUjDGYv17XYOGM9q8XUh0/Y
	LJoXr2ezmHR/AovFgv3WFp2zN7Bb9D9+zWzxdPNjJovz54Hcy7vmsFl87j3CaDHj/D4mixfP
	pS3WHrnLbnFjwlNGizOnL7FatK3+wGqxatcfRou+tZfYHIQ9nhycx+Sx4+4SRo+ds+6ye2xa
	1cnmsX/uGnaPyTeWM3r8O8buseVqO4tH35ZVjB6fN8l5zGjfxhrAHeVmk5GamJJapJCal5yf
	kpmXbqsUGuKma6GkkJeYm2qrFKHrGxKkpFCWmFMK5BkZoAEH5wD3YCV9uwS3jNU7ZrAWHFOt
	ODfvJHsD4ye5LkZODgkBE4m5B9cxQthiEhfurWcDsYUEljBK9B6u6WLkArKbmCQ6/kxhAUmw
	CRhKdL3tYgNJiAgsZpRoODSFEcRhFjjGIrG45yAzSJWwgJnEq+aFrCA2i4CqxJxHV8HG8gq4
	S2z7vZsJYp2cxMljk8FqOAU8JE6seMgEsdpd4teGZ+wTGHkXMDKsYhRJLS3OTc8tNtQrTswt
	Ls1L10vOz93ECIy+bcd+bt7BeGlj8CFGAQ5GJR7eF/0KEUKsiWXFlbmHGCU4mJVEeC+fU4wQ
	4k1JrKxKLcqPLyrNSS0+xGgKdNREZinR5HxgYsgriTc0MTS3NDQytrAwNzJSEuct+XAlXEgg
	PbEkNTs1tSC1CKaPiYNTqoFRkfW9hvyOsrWsr54Wdi3P/cjtMMmJRbxyemm999rfN28qa5xo
	3i+y7J20iPPec5PMb+3tKNlnumWigdpD7aq1PIKLnm15rXJ9rlPG3bAHcUITkg+uUZ7J7JRp
	tIJZTiHWMTP5q3utTonOhru6LYLzOEJC41PsFn6cvPh7vuPPy1x/Tm3OeMqrxFKckWioxVxU
	nAgARwz4mtQCAAA=
X-MTR: 20000000000000000@CPGS
X-CMS-MailID: 20161108133015eucas1p234c8c7076bcda5020ae8b78e87a0203d
X-Msg-Generator: CA
X-Sender-IP: 182.198.249.179
X-Local-Sender: =?UTF-8?B?TWFyZWsgU3p5cHJvd3NraRtTUlBPTC1LZXJuZWwgKFRQKRs=?=
	=?UTF-8?B?7IK87ISx7KCE7J6QG1NlbmlvciBTb2Z0d2FyZSBFbmdpbmVlcg==?=
X-Global-Sender: =?UTF-8?B?TWFyZWsgU3p5cHJvd3NraRtTUlBPTC1LZXJuZWwgKFRQKRtT?=
	=?UTF-8?B?YW1zdW5nIEVsZWN0cm9uaWNzG1NlbmlvciBTb2Z0d2FyZSBFbmdpbmVlcg==?=
X-Sender-Code: =?UTF-8?B?QzEwG0VIURtDMTBDRDAyQ0QwMjczOTI=?=
CMS-TYPE: 201P
X-HopCount: 7
X-CMS-RootMailID: 20161108133015eucas1p234c8c7076bcda5020ae8b78e87a0203d
X-RootMTR: 20161108133015eucas1p234c8c7076bcda5020ae8b78e87a0203d
References: &lt;1478611764-6473-1-git-send-email-m.szyprowski@samsung.com&gt;
	&lt;CGME20161108133015eucas1p234c8c7076bcda5020ae8b78e87a0203d@eucas1p2.samsung.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2061">Marek Szyprowski</a> - Nov. 8, 2016, 1:29 p.m.</div>
<pre class="content">
__sysmmu_enable/disable functions were designed to do ref-count based
operations, but current code always calls them only once, so the code for
checking the conditions and invalid conditions can be simply removed
without any influence to the driver operation.
<span class="signed-off-by">
Signed-off-by: Marek Szyprowski &lt;m.szyprowski@samsung.com&gt;</span>
---
 drivers/iommu/exynos-iommu.c | 65 ++++++++++++--------------------------------
 1 file changed, 17 insertions(+), 48 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/iommu/exynos-iommu.c b/drivers/iommu/exynos-iommu.c</span>
<span class="p_header">index 8ba0d60..4056228 100644</span>
<span class="p_header">--- a/drivers/iommu/exynos-iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/exynos-iommu.c</span>
<span class="p_chunk">@@ -460,9 +460,6 @@</span> <span class="p_context"> static bool __sysmmu_disable(struct sysmmu_drvdata *data)</span>
 		__sysmmu_disable_nocount(data);
 
 		dev_dbg(data-&gt;sysmmu, &quot;Disabled\n&quot;);
<span class="p_del">-	} else  {</span>
<span class="p_del">-		dev_dbg(data-&gt;sysmmu, &quot;%d times left to disable\n&quot;,</span>
<span class="p_del">-					data-&gt;activations);</span>
 	}
 
 	spin_unlock_irqrestore(&amp;data-&gt;lock, flags);
<span class="p_chunk">@@ -508,29 +505,18 @@</span> <span class="p_context"> static void __sysmmu_enable_nocount(struct sysmmu_drvdata *data)</span>
 static int __sysmmu_enable(struct sysmmu_drvdata *data, phys_addr_t pgtable,
 			   struct exynos_iommu_domain *domain)
 {
<span class="p_del">-	int ret = 0;</span>
 	unsigned long flags;
 
 	spin_lock_irqsave(&amp;data-&gt;lock, flags);
 	if (set_sysmmu_active(data)) {
 		data-&gt;pgtable = pgtable;
 		data-&gt;domain = domain;
<span class="p_del">-</span>
 		__sysmmu_enable_nocount(data);
<span class="p_del">-</span>
 		dev_dbg(data-&gt;sysmmu, &quot;Enabled\n&quot;);
<span class="p_del">-	} else {</span>
<span class="p_del">-		ret = (pgtable == data-&gt;pgtable) ? 1 : -EBUSY;</span>
<span class="p_del">-</span>
<span class="p_del">-		dev_dbg(data-&gt;sysmmu, &quot;already enabled\n&quot;);</span>
 	}
<span class="p_del">-</span>
<span class="p_del">-	if (WARN_ON(ret &lt; 0))</span>
<span class="p_del">-		set_sysmmu_inactive(data); /* decrement count */</span>
<span class="p_del">-</span>
 	spin_unlock_irqrestore(&amp;data-&gt;lock, flags);
 
<span class="p_del">-	return ret;</span>
<span class="p_add">+	return 0;</span>
 }
 
 static void sysmmu_tlb_invalidate_flpdcache(struct sysmmu_drvdata *data,
<span class="p_chunk">@@ -793,8 +779,8 @@</span> <span class="p_context"> static void exynos_iommu_domain_free(struct iommu_domain *iommu_domain)</span>
 	spin_lock_irqsave(&amp;domain-&gt;lock, flags);
 
 	list_for_each_entry_safe(data, next, &amp;domain-&gt;clients, domain_node) {
<span class="p_del">-		if (__sysmmu_disable(data))</span>
<span class="p_del">-			data-&gt;master = NULL;</span>
<span class="p_add">+		__sysmmu_disable(data);</span>
<span class="p_add">+		data-&gt;master = NULL;</span>
 		list_del_init(&amp;data-&gt;domain_node);
 	}
 
<span class="p_chunk">@@ -829,31 +815,23 @@</span> <span class="p_context"> static void exynos_iommu_detach_device(struct iommu_domain *iommu_domain,</span>
 	phys_addr_t pagetable = virt_to_phys(domain-&gt;pgtable);
 	struct sysmmu_drvdata *data, *next;
 	unsigned long flags;
<span class="p_del">-	bool found = false;</span>
 
 	if (!has_sysmmu(dev) || owner-&gt;domain != iommu_domain)
 		return;
 
 	spin_lock_irqsave(&amp;domain-&gt;lock, flags);
 	list_for_each_entry_safe(data, next, &amp;domain-&gt;clients, domain_node) {
<span class="p_del">-		if (data-&gt;master == dev) {</span>
<span class="p_del">-			if (__sysmmu_disable(data)) {</span>
<span class="p_del">-				data-&gt;master = NULL;</span>
<span class="p_del">-				list_del_init(&amp;data-&gt;domain_node);</span>
<span class="p_del">-			}</span>
<span class="p_del">-			pm_runtime_put(data-&gt;sysmmu);</span>
<span class="p_del">-			found = true;</span>
<span class="p_del">-		}</span>
<span class="p_add">+		__sysmmu_disable(data);</span>
<span class="p_add">+		data-&gt;master = NULL;</span>
<span class="p_add">+		list_del_init(&amp;data-&gt;domain_node);</span>
<span class="p_add">+		pm_runtime_put(data-&gt;sysmmu);</span>
 	}
 	spin_unlock_irqrestore(&amp;domain-&gt;lock, flags);
 
 	owner-&gt;domain = NULL;
 
<span class="p_del">-	if (found)</span>
<span class="p_del">-		dev_dbg(dev, &quot;%s: Detached IOMMU with pgtable %pa\n&quot;,</span>
<span class="p_del">-					__func__, &amp;pagetable);</span>
<span class="p_del">-	else</span>
<span class="p_del">-		dev_err(dev, &quot;%s: No IOMMU is attached\n&quot;, __func__);</span>
<span class="p_add">+	dev_dbg(dev, &quot;%s: Detached IOMMU with pgtable %pa\n&quot;, __func__,</span>
<span class="p_add">+		&amp;pagetable);</span>
 }
 
 static int exynos_iommu_attach_device(struct iommu_domain *iommu_domain,
<span class="p_chunk">@@ -864,7 +842,6 @@</span> <span class="p_context"> static int exynos_iommu_attach_device(struct iommu_domain *iommu_domain,</span>
 	struct sysmmu_drvdata *data;
 	phys_addr_t pagetable = virt_to_phys(domain-&gt;pgtable);
 	unsigned long flags;
<span class="p_del">-	int ret = -ENODEV;</span>
 
 	if (!has_sysmmu(dev))
 		return -ENODEV;
<span class="p_chunk">@@ -874,27 +851,19 @@</span> <span class="p_context"> static int exynos_iommu_attach_device(struct iommu_domain *iommu_domain,</span>
 
 	list_for_each_entry(data, &amp;owner-&gt;controllers, owner_node) {
 		pm_runtime_get_sync(data-&gt;sysmmu);
<span class="p_del">-		ret = __sysmmu_enable(data, pagetable, domain);</span>
<span class="p_del">-		if (ret &gt;= 0) {</span>
<span class="p_del">-			data-&gt;master = dev;</span>
<span class="p_add">+		__sysmmu_enable(data, pagetable, domain);</span>
<span class="p_add">+		data-&gt;master = dev;</span>
 
<span class="p_del">-			spin_lock_irqsave(&amp;domain-&gt;lock, flags);</span>
<span class="p_del">-			list_add_tail(&amp;data-&gt;domain_node, &amp;domain-&gt;clients);</span>
<span class="p_del">-			spin_unlock_irqrestore(&amp;domain-&gt;lock, flags);</span>
<span class="p_del">-		}</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	if (ret &lt; 0) {</span>
<span class="p_del">-		dev_err(dev, &quot;%s: Failed to attach IOMMU with pgtable %pa\n&quot;,</span>
<span class="p_del">-					__func__, &amp;pagetable);</span>
<span class="p_del">-		return ret;</span>
<span class="p_add">+		spin_lock_irqsave(&amp;domain-&gt;lock, flags);</span>
<span class="p_add">+		list_add_tail(&amp;data-&gt;domain_node, &amp;domain-&gt;clients);</span>
<span class="p_add">+		spin_unlock_irqrestore(&amp;domain-&gt;lock, flags);</span>
 	}
 
 	owner-&gt;domain = iommu_domain;
<span class="p_del">-	dev_dbg(dev, &quot;%s: Attached IOMMU with pgtable %pa %s\n&quot;,</span>
<span class="p_del">-		__func__, &amp;pagetable, (ret == 0) ? &quot;&quot; : &quot;, again&quot;);</span>
<span class="p_add">+	dev_dbg(dev, &quot;%s: Attached IOMMU with pgtable %pa\n&quot;, __func__,</span>
<span class="p_add">+		&amp;pagetable);</span>
 
<span class="p_del">-	return ret;</span>
<span class="p_add">+	return 0;</span>
 }
 
 static sysmmu_pte_t *alloc_lv2entry(struct exynos_iommu_domain *domain,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



