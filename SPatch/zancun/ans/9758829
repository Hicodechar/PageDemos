
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v1,8/9] mm: hugetlb: delete dequeue_hwpoisoned_huge_page() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v1,8/9] mm: hugetlb: delete dequeue_hwpoisoned_huge_page()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=4407">Naoya Horiguchi</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 1, 2017, 8:16 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1496305019-5493-9-git-send-email-n-horiguchi@ah.jp.nec.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9758829/mbox/"
   >mbox</a>
|
   <a href="/patch/9758829/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9758829/">/patch/9758829/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	A7CC66038E for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  1 Jun 2017 08:17:47 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 976A728503
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  1 Jun 2017 08:17:47 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 8C34D28509; Thu,  1 Jun 2017 08:17:47 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.3 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI, RCVD_IN_SORBS_SPAM,
	T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1E7C228503
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  1 Jun 2017 08:17:47 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751620AbdFAIRn (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 1 Jun 2017 04:17:43 -0400
Received: from mail-io0-f194.google.com ([209.85.223.194]:34630 &quot;EHLO
	mail-io0-f194.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751054AbdFAIRe (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 1 Jun 2017 04:17:34 -0400
Received: by mail-io0-f194.google.com with SMTP id 12so4190411iol.1
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Thu, 01 Jun 2017 01:17:28 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=sender:from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=ebm3hWWaDhBkc3NnIUyiy9jNOeEbbXJUkdiSpZNQVsU=;
	b=NJX1Mn/YmrKrShBsqrqarf7YCERsNWSq4t49auzAUyqRUtfeDOjlyvipbcWcf/VyqZ
	v8FwWLV7ohrKomcOJ2c8/9lwf6pWVUnureK9Wg7k4xGAdTXBHScVIdRcYCx7rh2WOO36
	zUzvnuHpxEkmgujQmCQM/vmh/0oQy/QHDzyyJwWSlw3npXXS5Wroy8lEx1GnTyo53/Z0
	P3L2DZkbmRy8RN6xRH1eaDKIhUKb0GsarI/wp7Hmnhej3QGKFKCJ6W/WhK1Uz11YTKjx
	llau45soTyBBUaMzl2EIaJm6KUZ3vwOlNjvqHxrU5DwsEX9J4h09foGDwSXQ/WnXcfTz
	ffzA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:sender:from:to:cc:subject:date:message-id
	:in-reply-to:references;
	bh=ebm3hWWaDhBkc3NnIUyiy9jNOeEbbXJUkdiSpZNQVsU=;
	b=UBXtrRnN0TghBENzxI/d/zaqZgoeeV1hfiETixS4g4U42D2tDgZMleyad3UilNyltP
	DEUMXfssMXNrbinAaDUUaVbb6xTF96+XlQooigfSnJeTkefHGGx9JAAl0G6kyVH3RPHO
	cpqiu6HFyDvkmHSr9vPJmZb4tLgW1RgRh0u2PNUTu/SRzmYLkEeO/ShEriSq8kQcAG0G
	oGGpwNMIcylD49qTwBRLXOs9jRk3gUlbhMPJTliw9kvolMFhhBKZ5yOjDyojgaQ0uRUu
	jliSygUmy8gIY1ExjynsdPyAQoEiDQqgbTgENdzx6dl0ccAXMQQSqNS/JgqP1uaNno4Z
	jryw==
X-Gm-Message-State: AODbwcA5fQADZqiT4GSrI+q6Z6j7p7+dZ5irKp0CgcUa4ZJylnhue0Yy
	fKch8BlU7+De6lvL
X-Received: by 10.98.178.72 with SMTP id x69mr167380pfe.74.1496305043401;
	Thu, 01 Jun 2017 01:17:23 -0700 (PDT)
Received: from www9186uo.sakura.ne.jp (www9186uo.sakura.ne.jp.
	[153.121.56.200]) by smtp.gmail.com with ESMTPSA id
	n24sm33553022pfb.14.2017.06.01.01.17.21
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Thu, 01 Jun 2017 01:17:22 -0700 (PDT)
From: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;
To: linux-mm@kvack.org
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Michal Hocko &lt;mhocko@kernel.org&gt;,
	&quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;,
	Anshuman Khandual &lt;khandual@linux.vnet.ibm.com&gt;,
	linux-kernel@vger.kernel.org, Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;
Subject: [PATCH v1 8/9] mm: hugetlb: delete dequeue_hwpoisoned_huge_page()
Date: Thu,  1 Jun 2017 17:16:58 +0900
Message-Id: &lt;1496305019-5493-9-git-send-email-n-horiguchi@ah.jp.nec.com&gt;
X-Mailer: git-send-email 2.7.0
In-Reply-To: &lt;1496305019-5493-1-git-send-email-n-horiguchi@ah.jp.nec.com&gt;
References: &lt;1496305019-5493-1-git-send-email-n-horiguchi@ah.jp.nec.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=4407">Naoya Horiguchi</a> - June 1, 2017, 8:16 a.m.</div>
<pre class="content">
dequeue_hwpoisoned_huge_page() is no longer used, so let&#39;s remove it.
<span class="signed-off-by">
Signed-off-by: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>
---
 include/linux/hugetlb.h |  6 ------
 mm/hugetlb.c            | 34 ----------------------------------
 mm/memory-failure.c     | 11 -----------
 3 files changed, 51 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git v4.12-rc3/include/linux/hugetlb.h v4.12-rc3_patched/include/linux/hugetlb.h</span>
<span class="p_header">index 89afe40..b81931b 100644</span>
<span class="p_header">--- v4.12-rc3/include/linux/hugetlb.h</span>
<span class="p_header">+++ v4.12-rc3_patched/include/linux/hugetlb.h</span>
<span class="p_chunk">@@ -92,7 +92,6 @@</span> <span class="p_context"> int hugetlb_reserve_pages(struct inode *inode, long from, long to,</span>
 						vm_flags_t vm_flags);
 long hugetlb_unreserve_pages(struct inode *inode, long start, long end,
 						long freed);
<span class="p_del">-int dequeue_hwpoisoned_huge_page(struct page *page);</span>
 bool isolate_huge_page(struct page *page, struct list_head *list);
 void putback_active_hugepage(struct page *page);
 void free_huge_page(struct page *page);
<span class="p_chunk">@@ -158,11 +157,6 @@</span> <span class="p_context"> static inline void hugetlb_show_meminfo(void)</span>
 #define hugetlb_mcopy_atomic_pte(dst_mm, dst_pte, dst_vma, dst_addr, \
 				src_addr, pagep)	({ BUG(); 0; })
 #define huge_pte_offset(mm, address)	0
<span class="p_del">-static inline int dequeue_hwpoisoned_huge_page(struct page *page)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline bool isolate_huge_page(struct page *page, struct list_head *list)
 {
 	return false;
<span class="p_header">diff --git v4.12-rc3/mm/hugetlb.c v4.12-rc3_patched/mm/hugetlb.c</span>
<span class="p_header">index 41c37ed..17f5f0f 100644</span>
<span class="p_header">--- v4.12-rc3/mm/hugetlb.c</span>
<span class="p_header">+++ v4.12-rc3_patched/mm/hugetlb.c</span>
<span class="p_chunk">@@ -4701,40 +4701,6 @@</span> <span class="p_context"> follow_huge_pud(struct mm_struct *mm, unsigned long address,</span>
 	return pte_page(*(pte_t *)pud) + ((address &amp; ~PUD_MASK) &gt;&gt; PAGE_SHIFT);
 }
 
<span class="p_del">-#ifdef CONFIG_MEMORY_FAILURE</span>
<span class="p_del">-</span>
<span class="p_del">-/*</span>
<span class="p_del">- * This function is called from memory failure code.</span>
<span class="p_del">- */</span>
<span class="p_del">-int dequeue_hwpoisoned_huge_page(struct page *hpage)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct hstate *h = page_hstate(hpage);</span>
<span class="p_del">-	int nid = page_to_nid(hpage);</span>
<span class="p_del">-	int ret = -EBUSY;</span>
<span class="p_del">-</span>
<span class="p_del">-	spin_lock(&amp;hugetlb_lock);</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * Just checking !page_huge_active is not enough, because that could be</span>
<span class="p_del">-	 * an isolated/hwpoisoned hugepage (which have &gt;0 refcount).</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	if (!page_huge_active(hpage) &amp;&amp; !page_count(hpage)) {</span>
<span class="p_del">-		/*</span>
<span class="p_del">-		 * Hwpoisoned hugepage isn&#39;t linked to activelist or freelist,</span>
<span class="p_del">-		 * but dangling hpage-&gt;lru can trigger list-debug warnings</span>
<span class="p_del">-		 * (this happens when we call unpoison_memory() on it),</span>
<span class="p_del">-		 * so let it point to itself with list_del_init().</span>
<span class="p_del">-		 */</span>
<span class="p_del">-		list_del_init(&amp;hpage-&gt;lru);</span>
<span class="p_del">-		set_page_refcounted(hpage);</span>
<span class="p_del">-		h-&gt;free_huge_pages--;</span>
<span class="p_del">-		h-&gt;free_huge_pages_node[nid]--;</span>
<span class="p_del">-		ret = 0;</span>
<span class="p_del">-	}</span>
<span class="p_del">-	spin_unlock(&amp;hugetlb_lock);</span>
<span class="p_del">-	return ret;</span>
<span class="p_del">-}</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
 bool isolate_huge_page(struct page *page, struct list_head *list)
 {
 	bool ret = true;
<span class="p_header">diff --git v4.12-rc3/mm/memory-failure.c v4.12-rc3_patched/mm/memory-failure.c</span>
<span class="p_header">index 047867b..85009ead 100644</span>
<span class="p_header">--- v4.12-rc3/mm/memory-failure.c</span>
<span class="p_header">+++ v4.12-rc3_patched/mm/memory-failure.c</span>
<span class="p_chunk">@@ -1458,17 +1458,6 @@</span> <span class="p_context"> int unpoison_memory(unsigned long pfn)</span>
 	}
 
 	if (!get_hwpoison_page(p)) {
<span class="p_del">-		/*</span>
<span class="p_del">-		 * Since HWPoisoned hugepage should have non-zero refcount,</span>
<span class="p_del">-		 * race between memory failure and unpoison seems to happen.</span>
<span class="p_del">-		 * In such case unpoison fails and memory failure runs</span>
<span class="p_del">-		 * to the end.</span>
<span class="p_del">-		 */</span>
<span class="p_del">-		if (PageHuge(page)) {</span>
<span class="p_del">-			unpoison_pr_info(&quot;Unpoison: Memory failure is now running on free hugepage %#lx\n&quot;,</span>
<span class="p_del">-					 pfn, &amp;unpoison_rs);</span>
<span class="p_del">-			return 0;</span>
<span class="p_del">-		}</span>
 		if (TestClearPageHWPoison(p))
 			num_poisoned_pages_dec();
 		unpoison_pr_info(&quot;Unpoison: Software-unpoisoned free page %#lx\n&quot;,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



