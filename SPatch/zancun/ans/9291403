
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[1/2] ia64: remove extraneous white space - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [1/2] ia64: remove extraneous white space</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=73191">Al Stone</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 19, 2016, 11:28 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1471649330-32415-2-git-send-email-ahs3@redhat.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9291403/mbox/"
   >mbox</a>
|
   <a href="/patch/9291403/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9291403/">/patch/9291403/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	E57E36086A for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 19 Aug 2016 23:29:01 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C33A329580
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 19 Aug 2016 23:29:01 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A779A295D6; Fri, 19 Aug 2016 23:29:01 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 52FD329580
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 19 Aug 2016 23:29:01 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932489AbcHSX26 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 19 Aug 2016 19:28:58 -0400
Received: from mx1.redhat.com ([209.132.183.28]:60194 &quot;EHLO mx1.redhat.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753576AbcHSX24 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 19 Aug 2016 19:28:56 -0400
Received: from int-mx13.intmail.prod.int.phx2.redhat.com
	(int-mx13.intmail.prod.int.phx2.redhat.com [10.5.11.26])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256
	bits)) (No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id B682B37E64;
	Fri, 19 Aug 2016 23:28:55 +0000 (UTC)
Received: from fidelio.ahs3.com (ovpn-116-175.phx2.redhat.com [10.3.116.175])
	by int-mx13.intmail.prod.int.phx2.redhat.com (8.14.4/8.14.4) with
	ESMTP id u7JNSqHm012594; Fri, 19 Aug 2016 19:28:55 -0400
From: Al Stone &lt;ahs3@redhat.com&gt;
To: linux-ia64@vger.kernel.org, linux-kernel@vger.kernel.org
Cc: ahs3@redhat.com, Tony Luck &lt;tony.luck@intel.com&gt;,
	Fenghua Yu &lt;fenghua.yu@intel.com&gt;, trivial@kernel.org
Subject: [PATCH 1/2] ia64: remove extraneous white space
Date: Fri, 19 Aug 2016 17:28:49 -0600
Message-Id: &lt;1471649330-32415-2-git-send-email-ahs3@redhat.com&gt;
In-Reply-To: &lt;1471649330-32415-1-git-send-email-ahs3@redhat.com&gt;
References: &lt;1471649330-32415-1-git-send-email-ahs3@redhat.com&gt;
X-Scanned-By: MIMEDefang 2.68 on 10.5.11.26
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.29]);
	Fri, 19 Aug 2016 23:28:55 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=73191">Al Stone</a> - Aug. 19, 2016, 11:28 p.m.</div>
<pre class="content">
<span class="signed-off-by">Signed-off-by: Al Stone &lt;ahs3@redhat.com&gt;</span>
---
 arch/ia64/sn/kernel/sn2/sn2_smp.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/ia64/sn/kernel/sn2/sn2_smp.c b/arch/ia64/sn/kernel/sn2/sn2_smp.c</span>
<span class="p_header">index c98dc96..8701b2f 100644</span>
<span class="p_header">--- a/arch/ia64/sn/kernel/sn2/sn2_smp.c</span>
<span class="p_header">+++ b/arch/ia64/sn/kernel/sn2/sn2_smp.c</span>
<span class="p_chunk">@@ -234,11 +234,11 @@</span> <span class="p_context"> sn2_global_tlb_purge(struct mm_struct *mm, unsigned long start,</span>
 		data0 = (1UL &lt;&lt; SH2_PTC_A_SHFT) |
 			(nbits &lt;&lt; SH2_PTC_PS_SHFT) |
 		    	(1UL &lt;&lt; SH2_PTC_START_SHFT);
<span class="p_del">-		ptc0 = (long *)GLOBAL_MMR_PHYS_ADDR(0, SH2_PTC + </span>
<span class="p_add">+		ptc0 = (long *)GLOBAL_MMR_PHYS_ADDR(0, SH2_PTC +</span>
 			(rr_value &lt;&lt; SH2_PTC_RID_SHFT));
 		ptc1 = NULL;
 	}
<span class="p_del">-	</span>
<span class="p_add">+</span>
 
 	mynasid = get_nasid();
 	use_cpu_ptcga = local_node_uses_ptc_ga(shub1);
<span class="p_chunk">@@ -322,7 +322,7 @@</span> <span class="p_context"> done:</span>
 /*
  * sn2_ptc_deadlock_recovery
  *
<span class="p_del">- * Recover from PTC deadlocks conditions. Recovery requires stepping thru each </span>
<span class="p_add">+ * Recover from PTC deadlocks conditions. Recovery requires stepping thru each</span>
  * TLB flush transaction.  The recovery sequence is somewhat tricky &amp; is
  * coded in assembly language.
  */
<span class="p_chunk">@@ -417,7 +417,7 @@</span> <span class="p_context"> EXPORT_SYMBOL(sn_send_IPI_phys);</span>
  * @redirect: redirect the IPI?
  *
  * Sends an IPI (InterProcessor Interrupt) to the processor specified by
<span class="p_del">- * @cpuid.  @vector specifies the command to send, while @delivery_mode can </span>
<span class="p_add">+ * @cpuid.  @vector specifies the command to send, while @delivery_mode can</span>
  * be one of the following
  *
  * %IA64_IPI_DM_INT - pend an interrupt

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



