
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,3/9] iommu: Introduce iommu do invalidate API function - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,3/9] iommu: Introduce iommu do invalidate API function</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=7040">Jacob Pan</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 14, 2017, 10:22 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1497478983-77580-4-git-send-email-jacob.jun.pan@linux.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9787547/mbox/"
   >mbox</a>
|
   <a href="/patch/9787547/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9787547/">/patch/9787547/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	55EE8602D9 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 14 Jun 2017 22:22:28 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4A3AF28472
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 14 Jun 2017 22:22:28 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 3E79D28542; Wed, 14 Jun 2017 22:22:28 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D4E3A28472
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 14 Jun 2017 22:22:27 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752893AbdFNWWR (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 14 Jun 2017 18:22:17 -0400
Received: from mga02.intel.com ([134.134.136.20]:35949 &quot;EHLO mga02.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752870AbdFNWWP (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 14 Jun 2017 18:22:15 -0400
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
	by orsmga101.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
	14 Jun 2017 15:21:55 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.39,341,1493708400&quot;; d=&quot;scan&#39;208&quot;;a=&quot;1160605256&quot;
Received: from jacob-builder.jf.intel.com ([10.7.199.158])
	by fmsmga001.fm.intel.com with ESMTP; 14 Jun 2017 15:21:53 -0700
From: Jacob Pan &lt;jacob.jun.pan@linux.intel.com&gt;
To: iommu@lists.linux-foundation.org, LKML &lt;linux-kernel@vger.kernel.org&gt;,
	Joerg Roedel &lt;joro@8bytes.org&gt;, David Woodhouse &lt;dwmw2@infradead.org&gt;
Cc: &quot;Liu, Yi L&quot; &lt;yi.l.liu@intel.com&gt;, Lan Tianyu &lt;tianyu.lan@intel.com&gt;,
	&quot;Tian, Kevin&quot; &lt;kevin.tian@intel.com&gt;, Raj Ashok &lt;ashok.raj@intel.com&gt;,
	Alex Williamson &lt;alex.williamson@redhat.com&gt;,
	Jean Delvare &lt;khali@linux-fr.org&gt;,
	&quot;Liu, Yi L&quot; &lt;yi.l.liu@linux.intel.com&gt;, Liu@vger.kernel.org,
	Jacob Pan &lt;jacob.jun.pan@linux.intel.com&gt;
Subject: [RFC 3/9] iommu: Introduce iommu do invalidate API function
Date: Wed, 14 Jun 2017 15:22:57 -0700
Message-Id: &lt;1497478983-77580-4-git-send-email-jacob.jun.pan@linux.intel.com&gt;
X-Mailer: git-send-email 2.7.4
In-Reply-To: &lt;1497478983-77580-1-git-send-email-jacob.jun.pan@linux.intel.com&gt;
References: &lt;1497478983-77580-1-git-send-email-jacob.jun.pan@linux.intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7040">Jacob Pan</a> - June 14, 2017, 10:22 p.m.</div>
<pre class="content">
<span class="from">From: &quot;Liu, Yi L&quot; &lt;yi.l.liu@linux.intel.com&gt;</span>

When a SVM capable device is assigned to a guest, the first level page
tables are owned by the guest and the guest PASID table pointer is
linked to the device context entry of the physical IOMMU.

Host IOMMU driver has no knowledge of caching structure updates unless
the guest invalidation activities are passed down to the host. The
primary usage is derived from emulated IOMMU in the guest, where QEMU
can trap invalidation activities before pass them down the
host/physical IOMMU. There are IOMMU architectural specific actions
need to be taken which requires the generic APIs introduced in this
patch to have opaque data in the tlb_invalidate_info argument.
<span class="signed-off-by">
Signed-off-by: Liu, Yi L &lt;yi.l.liu@linux.intel.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Jacob Pan &lt;jacob.jun.pan@linux.intel.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Ashok Raj &lt;ashok.raj@intel.com&gt;</span>
---
 drivers/iommu/iommu.c      | 13 +++++++++++++
 include/linux/iommu.h      | 11 +++++++++++
 include/uapi/linux/iommu.h |  4 ++++
 3 files changed, 28 insertions(+)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7781">Alex Williamson</a> - June 22, 2017, 10:52 p.m.</div>
<pre class="content">
On Wed, 14 Jun 2017 15:22:57 -0700
Jacob Pan &lt;jacob.jun.pan@linux.intel.com&gt; wrote:
<span class="quote">
&gt; From: &quot;Liu, Yi L&quot; &lt;yi.l.liu@linux.intel.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; When a SVM capable device is assigned to a guest, the first level page</span>
<span class="quote">&gt; tables are owned by the guest and the guest PASID table pointer is</span>
<span class="quote">&gt; linked to the device context entry of the physical IOMMU.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Host IOMMU driver has no knowledge of caching structure updates unless</span>
<span class="quote">&gt; the guest invalidation activities are passed down to the host. The</span>
<span class="quote">&gt; primary usage is derived from emulated IOMMU in the guest, where QEMU</span>
<span class="quote">&gt; can trap invalidation activities before pass them down the</span>
<span class="quote">&gt; host/physical IOMMU. There are IOMMU architectural specific actions</span>
<span class="quote">&gt; need to be taken which requires the generic APIs introduced in this</span>
<span class="quote">&gt; patch to have opaque data in the tlb_invalidate_info argument.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Liu, Yi L &lt;yi.l.liu@linux.intel.com&gt;</span>
<span class="quote">&gt; Signed-off-by: Jacob Pan &lt;jacob.jun.pan@linux.intel.com&gt;</span>
<span class="quote">&gt; Signed-off-by: Ashok Raj &lt;ashok.raj@intel.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  drivers/iommu/iommu.c      | 13 +++++++++++++</span>
<span class="quote">&gt;  include/linux/iommu.h      | 11 +++++++++++</span>
<span class="quote">&gt;  include/uapi/linux/iommu.h |  4 ++++</span>
<span class="quote">&gt;  3 files changed, 28 insertions(+)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/drivers/iommu/iommu.c b/drivers/iommu/iommu.c</span>
<span class="quote">&gt; index 494309b..c786370 100644</span>
<span class="quote">&gt; --- a/drivers/iommu/iommu.c</span>
<span class="quote">&gt; +++ b/drivers/iommu/iommu.c</span>
<span class="quote">&gt; @@ -1347,6 +1347,19 @@ int iommu_unbind_pasid_table(struct iommu_domain *domain, struct device *dev)</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  EXPORT_SYMBOL_GPL(iommu_unbind_pasid_table);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +int iommu_do_invalidate(struct iommu_domain *domain,</span>
<span class="quote">&gt; +		struct device *dev, struct tlb_invalidate_info *inv_info)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	int ret = 0;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	if (unlikely(domain-&gt;ops-&gt;do_invalidate == NULL))</span>
<span class="quote">&gt; +		return -ENODEV;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	ret = domain-&gt;ops-&gt;do_invalidate(domain, dev, inv_info);</span>
<span class="quote">&gt; +	return ret;</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +EXPORT_SYMBOL_GPL(iommu_do_invalidate);</span>


s/do_invalidate/invalidate/?  &#39;do_invalidate&#39; seems like something
&#39;invalidate&#39; might call, not the exported interface.  Invalidate what?
Is that entirely buried in the opaque data?  It seems like there are
plenty of things to be invalidated that could be common.
<span class="quote">

&gt; +</span>
<span class="quote">&gt;  static void __iommu_detach_device(struct iommu_domain *domain,</span>
<span class="quote">&gt;  				  struct device *dev)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; diff --git a/include/linux/iommu.h b/include/linux/iommu.h</span>
<span class="quote">&gt; index 7122add..2cdbaa3 100644</span>
<span class="quote">&gt; --- a/include/linux/iommu.h</span>
<span class="quote">&gt; +++ b/include/linux/iommu.h</span>
<span class="quote">&gt; @@ -232,6 +232,8 @@ struct iommu_ops {</span>
<span class="quote">&gt;  				struct pasid_table_info *pasidt_binfo);</span>
<span class="quote">&gt;  	int (*unbind_pasid_table)(struct iommu_domain *domain,</span>
<span class="quote">&gt;  				struct device *dev);</span>
<span class="quote">&gt; +	int (*do_invalidate)(struct iommu_domain *domain,</span>
<span class="quote">&gt; +		struct device *dev, struct tlb_invalidate_info *inv_info);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	unsigned long pgsize_bitmap;</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt; @@ -293,6 +295,9 @@ extern int iommu_bind_pasid_table(struct iommu_domain *domain,</span>
<span class="quote">&gt;  		struct device *dev, struct pasid_table_info *pasidt_binfo);</span>
<span class="quote">&gt;  extern int iommu_unbind_pasid_table(struct iommu_domain *domain,</span>
<span class="quote">&gt;  				struct device *dev);</span>
<span class="quote">&gt; +extern int iommu_do_invalidate(struct iommu_domain *domain,</span>
<span class="quote">&gt; +		struct device *dev, struct tlb_invalidate_info *inv_info);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  extern struct iommu_domain *iommu_get_domain_for_dev(struct device *dev);</span>
<span class="quote">&gt;  extern int iommu_map(struct iommu_domain *domain, unsigned long iova,</span>
<span class="quote">&gt;  		     phys_addr_t paddr, size_t size, int prot);</span>
<span class="quote">&gt; @@ -660,6 +665,12 @@ int iommu_unbind_pasid_table(struct iommu_domain *domain, struct device *dev)</span>
<span class="quote">&gt;  	return -EINVAL;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +static inline int iommu_do_invalidate(struct iommu_domain *domain,</span>
<span class="quote">&gt; +		struct device *dev, struct tlb_invalidate_info *inv_info)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	return -EINVAL;</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  #endif /* CONFIG_IOMMU_API */</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #endif /* __LINUX_IOMMU_H */</span>
<span class="quote">&gt; diff --git a/include/uapi/linux/iommu.h b/include/uapi/linux/iommu.h</span>
<span class="quote">&gt; index 5ef0e7c..fcee18f 100644</span>
<span class="quote">&gt; --- a/include/uapi/linux/iommu.h</span>
<span class="quote">&gt; +++ b/include/uapi/linux/iommu.h</span>
<span class="quote">&gt; @@ -29,5 +29,9 @@ struct pasid_table_info {</span>
<span class="quote">&gt;  	__u8	opaque[];</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +struct tlb_invalidate_info {</span>
<span class="quote">&gt; +	__u32	model;</span>
<span class="quote">&gt; +	__u8	opaque[];</span>

Why did we specify a length (and then not use it anyway) of opaque data
field in pasid_table_info but not here?
<span class="quote">
&gt; +};</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #endif /* _UAPI_IOMMU_H */</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/iommu/iommu.c b/drivers/iommu/iommu.c</span>
<span class="p_header">index 494309b..c786370 100644</span>
<span class="p_header">--- a/drivers/iommu/iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/iommu.c</span>
<span class="p_chunk">@@ -1347,6 +1347,19 @@</span> <span class="p_context"> int iommu_unbind_pasid_table(struct iommu_domain *domain, struct device *dev)</span>
 }
 EXPORT_SYMBOL_GPL(iommu_unbind_pasid_table);
 
<span class="p_add">+int iommu_do_invalidate(struct iommu_domain *domain,</span>
<span class="p_add">+		struct device *dev, struct tlb_invalidate_info *inv_info)</span>
<span class="p_add">+{</span>
<span class="p_add">+	int ret = 0;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (unlikely(domain-&gt;ops-&gt;do_invalidate == NULL))</span>
<span class="p_add">+		return -ENODEV;</span>
<span class="p_add">+</span>
<span class="p_add">+	ret = domain-&gt;ops-&gt;do_invalidate(domain, dev, inv_info);</span>
<span class="p_add">+	return ret;</span>
<span class="p_add">+}</span>
<span class="p_add">+EXPORT_SYMBOL_GPL(iommu_do_invalidate);</span>
<span class="p_add">+</span>
 static void __iommu_detach_device(struct iommu_domain *domain,
 				  struct device *dev)
 {
<span class="p_header">diff --git a/include/linux/iommu.h b/include/linux/iommu.h</span>
<span class="p_header">index 7122add..2cdbaa3 100644</span>
<span class="p_header">--- a/include/linux/iommu.h</span>
<span class="p_header">+++ b/include/linux/iommu.h</span>
<span class="p_chunk">@@ -232,6 +232,8 @@</span> <span class="p_context"> struct iommu_ops {</span>
 				struct pasid_table_info *pasidt_binfo);
 	int (*unbind_pasid_table)(struct iommu_domain *domain,
 				struct device *dev);
<span class="p_add">+	int (*do_invalidate)(struct iommu_domain *domain,</span>
<span class="p_add">+		struct device *dev, struct tlb_invalidate_info *inv_info);</span>
 
 	unsigned long pgsize_bitmap;
 };
<span class="p_chunk">@@ -293,6 +295,9 @@</span> <span class="p_context"> extern int iommu_bind_pasid_table(struct iommu_domain *domain,</span>
 		struct device *dev, struct pasid_table_info *pasidt_binfo);
 extern int iommu_unbind_pasid_table(struct iommu_domain *domain,
 				struct device *dev);
<span class="p_add">+extern int iommu_do_invalidate(struct iommu_domain *domain,</span>
<span class="p_add">+		struct device *dev, struct tlb_invalidate_info *inv_info);</span>
<span class="p_add">+</span>
 extern struct iommu_domain *iommu_get_domain_for_dev(struct device *dev);
 extern int iommu_map(struct iommu_domain *domain, unsigned long iova,
 		     phys_addr_t paddr, size_t size, int prot);
<span class="p_chunk">@@ -660,6 +665,12 @@</span> <span class="p_context"> int iommu_unbind_pasid_table(struct iommu_domain *domain, struct device *dev)</span>
 	return -EINVAL;
 }
 
<span class="p_add">+static inline int iommu_do_invalidate(struct iommu_domain *domain,</span>
<span class="p_add">+		struct device *dev, struct tlb_invalidate_info *inv_info)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return -EINVAL;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 #endif /* CONFIG_IOMMU_API */
 
 #endif /* __LINUX_IOMMU_H */
<span class="p_header">diff --git a/include/uapi/linux/iommu.h b/include/uapi/linux/iommu.h</span>
<span class="p_header">index 5ef0e7c..fcee18f 100644</span>
<span class="p_header">--- a/include/uapi/linux/iommu.h</span>
<span class="p_header">+++ b/include/uapi/linux/iommu.h</span>
<span class="p_chunk">@@ -29,5 +29,9 @@</span> <span class="p_context"> struct pasid_table_info {</span>
 	__u8	opaque[];
 };
 
<span class="p_add">+struct tlb_invalidate_info {</span>
<span class="p_add">+	__u32	model;</span>
<span class="p_add">+	__u8	opaque[];</span>
<span class="p_add">+};</span>
 
 #endif /* _UAPI_IOMMU_H */

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



