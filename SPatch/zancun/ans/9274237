
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2] arm: apply more __ro_after_init - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2] arm: apply more __ro_after_init</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=38541">Kees Cook</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 10, 2016, 9:43 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20160810214313.GA10337@www.outflux.net&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9274237/mbox/"
   >mbox</a>
|
   <a href="/patch/9274237/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9274237/">/patch/9274237/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	ED967600CA for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Aug 2016 21:43:21 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id DCA5126785
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Aug 2016 21:43:21 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D0FCA2840F; Wed, 10 Aug 2016 21:43:21 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 483A726785
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Aug 2016 21:43:21 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932270AbcHJVnS (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 10 Aug 2016 17:43:18 -0400
Received: from mail-pf0-f182.google.com ([209.85.192.182]:35326 &quot;EHLO
	mail-pf0-f182.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751529AbcHJVnQ (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 10 Aug 2016 17:43:16 -0400
Received: by mail-pf0-f182.google.com with SMTP id x72so19611265pfd.2
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Wed, 10 Aug 2016 14:43:15 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=chromium.org; s=google;
	h=date:from:to:cc:subject:message-id:mime-version:content-disposition;
	bh=ieZovGD+YwGEQhtPR2f+Gt7bhNO+o7sGl3XHqLWFUm4=;
	b=UdGxenaoPzS1f612I9h82N2BpkeicEmdSnwnZctWLaG5mYasmAuSw2DQFnBMTqaKCK
	mbxTKause+dw5PEQMzToreCdgnmy75Upw6Z7c+Pc3Ehey8x1WMxiyT7fscB56Yie+omn
	7eRmH9QHpH8k7hlAEz2V+ftfftECi100+OVpM=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20130820;
	h=x-gm-message-state:date:from:to:cc:subject:message-id:mime-version
	:content-disposition;
	bh=ieZovGD+YwGEQhtPR2f+Gt7bhNO+o7sGl3XHqLWFUm4=;
	b=bFeR7hXBmaRWkacPBDvdLoFXES5N+5WgaEbuIKLohP6uvgLPp7EdA8eiedmSv6NUkd
	nJEom4c3Y9QzJiM1BYJRCkUy2TeJQbNyFpBc8ZMaJ1aFhqQA3CFfDcU5zzyQas37QAyw
	vRvL5BZ298R1qD7AXAUGWHibdHuKb6c/FkBT3LTvTJe3wOYIIWW1f5p/OxsMVYjIkaOG
	Rvx9G55IhvViTqps1OXBDbgQgw7vx4giBprtuLJihljPuGwILEbd7LtT+ZOp8FmgLlZP
	PIR4iosPB0TlIQ883Izr/V5KpFBq6Lrt0r5iP2IGvLe3P9LOTdhqNjGaCGnqBd2Dwb7N
	hz+Q==
X-Gm-Message-State: AEkoouvHnLI/3H702wEn8o1XIqfOLMcaAraeE2hAjPUtf/OPs8T9o8DOdLu7elZFxTtMYgbM
X-Received: by 10.98.78.138 with SMTP id c132mr10785685pfb.67.1470865395458; 
	Wed, 10 Aug 2016 14:43:15 -0700 (PDT)
Received: from www.outflux.net
	(173-164-112-133-Oregon.hfc.comcastbusiness.net. [173.164.112.133])
	by smtp.gmail.com with ESMTPSA id
	vt10sm66376171pab.43.2016.08.10.14.43.14
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Wed, 10 Aug 2016 14:43:14 -0700 (PDT)
Date: Wed, 10 Aug 2016 14:43:13 -0700
From: Kees Cook &lt;keescook@chromium.org&gt;
To: linux-arm-kernel@lists.infradead.org
Cc: Russell King &lt;linux@armlinux.org.uk&gt;,
	Arnd Bergmann &lt;arnd@arndb.de&gt;, linux-kernel@vger.kernel.org
Subject: [PATCH v2] arm: apply more __ro_after_init
Message-ID: &lt;20160810214313.GA10337@www.outflux.net&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=38541">Kees Cook</a> - Aug. 10, 2016, 9:43 p.m.</div>
<pre class="content">
Guided by grsecurity&#39;s analogous __read_only markings in arch/arm,
this applies several uses of __ro_after_init to structures that are
only updated during __init.
<span class="signed-off-by">
Signed-off-by: Kees Cook &lt;keescook@chromium.org&gt;</span>
---
v2:
- drop vector table for now due to FIQ updates, rmk
---
 arch/arm/kernel/cpuidle.c |  2 +-
 arch/arm/kernel/setup.c   | 10 +++++-----
 arch/arm/kernel/smp.c     |  2 +-
 arch/arm/lib/delay.c      |  2 +-
 arch/arm/mm/mmu.c         |  9 ++-------
 5 files changed, 10 insertions(+), 15 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm/kernel/cpuidle.c b/arch/arm/kernel/cpuidle.c</span>
<span class="p_header">index a44b268e12e1..d574708ea20c 100644</span>
<span class="p_header">--- a/arch/arm/kernel/cpuidle.c</span>
<span class="p_header">+++ b/arch/arm/kernel/cpuidle.c</span>
<span class="p_chunk">@@ -19,7 +19,7 @@</span> <span class="p_context"> extern struct of_cpuidle_method __cpuidle_method_of_table[];</span>
 static const struct of_cpuidle_method __cpuidle_method_of_table_sentinel
 	__used __section(__cpuidle_method_of_table_end);
 
<span class="p_del">-static struct cpuidle_ops cpuidle_ops[NR_CPUS];</span>
<span class="p_add">+static struct cpuidle_ops cpuidle_ops[NR_CPUS] __ro_after_init;</span>
 
 /**
  * arm_cpuidle_simple_enter() - a wrapper to cpu_do_idle()
<span class="p_header">diff --git a/arch/arm/kernel/setup.c b/arch/arm/kernel/setup.c</span>
<span class="p_header">index 7b5350060612..38196e581d0a 100644</span>
<span class="p_header">--- a/arch/arm/kernel/setup.c</span>
<span class="p_header">+++ b/arch/arm/kernel/setup.c</span>
<span class="p_chunk">@@ -115,19 +115,19 @@</span> <span class="p_context"> EXPORT_SYMBOL(elf_hwcap2);</span>
 
 
 #ifdef MULTI_CPU
<span class="p_del">-struct processor processor __read_mostly;</span>
<span class="p_add">+struct processor processor __ro_after_init;</span>
 #endif
 #ifdef MULTI_TLB
<span class="p_del">-struct cpu_tlb_fns cpu_tlb __read_mostly;</span>
<span class="p_add">+struct cpu_tlb_fns cpu_tlb __ro_after_init;</span>
 #endif
 #ifdef MULTI_USER
<span class="p_del">-struct cpu_user_fns cpu_user __read_mostly;</span>
<span class="p_add">+struct cpu_user_fns cpu_user __ro_after_init;</span>
 #endif
 #ifdef MULTI_CACHE
<span class="p_del">-struct cpu_cache_fns cpu_cache __read_mostly;</span>
<span class="p_add">+struct cpu_cache_fns cpu_cache __ro_after_init;</span>
 #endif
 #ifdef CONFIG_OUTER_CACHE
<span class="p_del">-struct outer_cache_fns outer_cache __read_mostly;</span>
<span class="p_add">+struct outer_cache_fns outer_cache __ro_after_init;</span>
 EXPORT_SYMBOL(outer_cache);
 #endif
 
<span class="p_header">diff --git a/arch/arm/kernel/smp.c b/arch/arm/kernel/smp.c</span>
<span class="p_header">index 861521606c6d..937c8920d741 100644</span>
<span class="p_header">--- a/arch/arm/kernel/smp.c</span>
<span class="p_header">+++ b/arch/arm/kernel/smp.c</span>
<span class="p_chunk">@@ -82,7 +82,7 @@</span> <span class="p_context"> enum ipi_msg_type {</span>
 
 static DECLARE_COMPLETION(cpu_running);
 
<span class="p_del">-static struct smp_operations smp_ops;</span>
<span class="p_add">+static struct smp_operations smp_ops __ro_after_init;</span>
 
 void __init smp_set_ops(const struct smp_operations *ops)
 {
<span class="p_header">diff --git a/arch/arm/lib/delay.c b/arch/arm/lib/delay.c</span>
<span class="p_header">index 8044591dca72..2cef11884857 100644</span>
<span class="p_header">--- a/arch/arm/lib/delay.c</span>
<span class="p_header">+++ b/arch/arm/lib/delay.c</span>
<span class="p_chunk">@@ -29,7 +29,7 @@</span> <span class="p_context"></span>
 /*
  * Default to the loop-based delay implementation.
  */
<span class="p_del">-struct arm_delay_ops arm_delay_ops = {</span>
<span class="p_add">+struct arm_delay_ops arm_delay_ops __ro_after_init = {</span>
 	.delay		= __loop_delay,
 	.const_udelay	= __loop_const_udelay,
 	.udelay		= __loop_udelay,
<span class="p_header">diff --git a/arch/arm/mm/mmu.c b/arch/arm/mm/mmu.c</span>
<span class="p_header">index 62f4d01941f7..5e2acc78175e 100644</span>
<span class="p_header">--- a/arch/arm/mm/mmu.c</span>
<span class="p_header">+++ b/arch/arm/mm/mmu.c</span>
<span class="p_chunk">@@ -243,7 +243,7 @@</span> <span class="p_context"> __setup(&quot;noalign&quot;, noalign_setup);</span>
 #define PROT_PTE_S2_DEVICE	PROT_PTE_DEVICE
 #define PROT_SECT_DEVICE	PMD_TYPE_SECT|PMD_SECT_AP_WRITE
 
<span class="p_del">-static struct mem_type mem_types[] = {</span>
<span class="p_add">+static struct mem_type mem_types[] __ro_after_init = {</span>
 	[MT_DEVICE] = {		  /* Strongly ordered / ARMv6 shared device */
 		.prot_pte	= PROT_PTE_DEVICE | L_PTE_MT_DEV_SHARED |
 				  L_PTE_SHARED,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



