
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[03/10] mm: make hugetlb.c explicitly non-modular - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [03/10] mm: make hugetlb.c explicitly non-modular</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=1553">Paul Gortmaker</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 24, 2015, 10:14 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1440454482-12250-4-git-send-email-paul.gortmaker@windriver.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7067031/mbox/"
   >mbox</a>
|
   <a href="/patch/7067031/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7067031/">/patch/7067031/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 3E0329F344
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 24 Aug 2015 22:16:12 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 561162061C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 24 Aug 2015 22:16:11 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 53C79207AA
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 24 Aug 2015 22:16:10 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754700AbbHXWP5 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 24 Aug 2015 18:15:57 -0400
Received: from mail.windriver.com ([147.11.1.11]:44049 &quot;EHLO
	mail.windriver.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754275AbbHXWPy (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 24 Aug 2015 18:15:54 -0400
Received: from ALA-HCA.corp.ad.wrs.com (ala-hca.corp.ad.wrs.com
	[147.11.189.40])
	by mail.windriver.com (8.15.2/8.15.1) with ESMTPS id t7OMFj8B004461
	(version=TLSv1 cipher=AES128-SHA bits=128 verify=FAIL);
	Mon, 24 Aug 2015 15:15:45 -0700 (PDT)
Received: from yow-lpgnfs-02.corp.ad.wrs.com (128.224.149.8) by
	ALA-HCA.corp.ad.wrs.com (147.11.189.40) with Microsoft SMTP Server id
	14.3.235.1; Mon, 24 Aug 2015 15:15:45 -0700
From: Paul Gortmaker &lt;paul.gortmaker@windriver.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
CC: &lt;linux-mm@kvack.org&gt;, &lt;linux-kernel@vger.kernel.org&gt;,
	Paul Gortmaker &lt;paul.gortmaker@windriver.com&gt;,
	Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;,
	Mike Kravetz &lt;mike.kravetz@oracle.com&gt;,
	David Rientjes &lt;rientjes@google.com&gt;,
	Hillf Danton &lt;hillf.zj@alibaba-inc.com&gt;,
	Davidlohr Bueso &lt;dave@stgolabs.net&gt;
Subject: [PATCH 03/10] mm: make hugetlb.c explicitly non-modular
Date: Mon, 24 Aug 2015 18:14:35 -0400
Message-ID: &lt;1440454482-12250-4-git-send-email-paul.gortmaker@windriver.com&gt;
X-Mailer: git-send-email 2.5.0
In-Reply-To: &lt;1440454482-12250-1-git-send-email-paul.gortmaker@windriver.com&gt;
References: &lt;1440454482-12250-1-git-send-email-paul.gortmaker@windriver.com&gt;
MIME-Version: 1.0
Content-Type: text/plain
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-8.3 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1553">Paul Gortmaker</a> - Aug. 24, 2015, 10:14 p.m.</div>
<pre class="content">
The Kconfig currently controlling compilation of this code is:

config HUGETLBFS
        bool &quot;HugeTLB file system support&quot;

...meaning that it currently is not being built as a module by anyone.

Lets remove the modular code that is essentially orphaned, so that
when reading the file there is no doubt it is builtin-only.

Since module_init translates to device_initcall in the non-modular
case, the init ordering remains unchanged with this commit.  However
one could argue that fs_initcall() would make more sense here.

Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;
Cc: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
Cc: David Rientjes &lt;rientjes@google.com&gt;
Cc: Hillf Danton &lt;hillf.zj@alibaba-inc.com&gt;
Cc: Davidlohr Bueso &lt;dave@stgolabs.net&gt;
Cc: linux-mm@kvack.org
<span class="signed-off-by">Signed-off-by: Paul Gortmaker &lt;paul.gortmaker@windriver.com&gt;</span>
---
 mm/hugetlb.c | 39 +--------------------------------------
 1 file changed, 1 insertion(+), 38 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - Aug. 26, 2015, 4:47 p.m.</div>
<pre class="content">
On 08/24/2015 03:14 PM, Paul Gortmaker wrote:
<span class="quote">&gt; The Kconfig currently controlling compilation of this code is:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; config HUGETLBFS</span>
<span class="quote">&gt;         bool &quot;HugeTLB file system support&quot;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; ...meaning that it currently is not being built as a module by anyone.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Lets remove the modular code that is essentially orphaned, so that</span>
<span class="quote">&gt; when reading the file there is no doubt it is builtin-only.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Since module_init translates to device_initcall in the non-modular</span>
<span class="quote">&gt; case, the init ordering remains unchanged with this commit.  However</span>
<span class="quote">&gt; one could argue that fs_initcall() would make more sense here.</span>

I would prefer that it NOT be changed to fs_initcall() as this is more
about generic mm code than fs code.  If this was in a hugetlbfs specific
file, fs_initcall() might make more sense.

More about changing initcall below.
<span class="quote">
&gt; Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;</span>
<span class="quote">&gt; Cc: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>
<span class="quote">&gt; Cc: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="quote">&gt; Cc: David Rientjes &lt;rientjes@google.com&gt;</span>
<span class="quote">&gt; Cc: Hillf Danton &lt;hillf.zj@alibaba-inc.com&gt;</span>
<span class="quote">&gt; Cc: Davidlohr Bueso &lt;dave@stgolabs.net&gt;</span>
<span class="quote">&gt; Cc: linux-mm@kvack.org</span>
<span class="quote">&gt; Signed-off-by: Paul Gortmaker &lt;paul.gortmaker@windriver.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  mm/hugetlb.c | 39 +--------------------------------------</span>
<span class="quote">&gt;  1 file changed, 1 insertion(+), 38 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="quote">&gt; index 586aa69df900..1154152c8b99 100644</span>
<span class="quote">&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt; @@ -4,7 +4,6 @@</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt;  #include &lt;linux/list.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/init.h&gt;</span>
<span class="quote">&gt; -#include &lt;linux/module.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/mm.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/seq_file.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/sysctl.h&gt;</span>
<span class="quote">&gt; @@ -2439,25 +2438,6 @@ static void hugetlb_unregister_node(struct node *node)</span>
<span class="quote">&gt;  	nhs-&gt;hugepages_kobj = NULL;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -/*</span>
<span class="quote">&gt; - * hugetlb module exit:  unregister hstate attributes from node devices</span>
<span class="quote">&gt; - * that have them.</span>
<span class="quote">&gt; - */</span>
<span class="quote">&gt; -static void hugetlb_unregister_all_nodes(void)</span>
<span class="quote">&gt; -{</span>
<span class="quote">&gt; -	int nid;</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	/*</span>
<span class="quote">&gt; -	 * disable node device registrations.</span>
<span class="quote">&gt; -	 */</span>
<span class="quote">&gt; -	register_hugetlbfs_with_node(NULL, NULL);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	/*</span>
<span class="quote">&gt; -	 * remove hstate attributes from any nodes that have them.</span>
<span class="quote">&gt; -	 */</span>
<span class="quote">&gt; -	for (nid = 0; nid &lt; nr_node_ids; nid++)</span>
<span class="quote">&gt; -		hugetlb_unregister_node(node_devices[nid]);</span>
<span class="quote">&gt; -}</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * Register hstate attributes for a single node device.</span>
<span class="quote">&gt; @@ -2522,27 +2502,10 @@ static struct hstate *kobj_to_node_hstate(struct kobject *kobj, int *nidp)</span>
<span class="quote">&gt;  	return NULL;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -static void hugetlb_unregister_all_nodes(void) { }</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  static void hugetlb_register_all_nodes(void) { }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -static void __exit hugetlb_exit(void)</span>
<span class="quote">&gt; -{</span>
<span class="quote">&gt; -	struct hstate *h;</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	hugetlb_unregister_all_nodes();</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	for_each_hstate(h) {</span>
<span class="quote">&gt; -		kobject_put(hstate_kobjs[hstate_index(h)]);</span>
<span class="quote">&gt; -	}</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	kobject_put(hugepages_kobj);</span>
<span class="quote">&gt; -	kfree(hugetlb_fault_mutex_table);</span>
<span class="quote">&gt; -}</span>
<span class="quote">&gt; -module_exit(hugetlb_exit);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  static int __init hugetlb_init(void)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	int i;</span>
<span class="quote">&gt; @@ -2580,7 +2543,7 @@ static int __init hugetlb_init(void)</span>
<span class="quote">&gt;  		mutex_init(&amp;hugetlb_fault_mutex_table[i]);</span>
<span class="quote">&gt;  	return 0;</span>
<span class="quote">&gt;  }</span>

I am all for removal of the module_exit and associated code.  It is
dead and is not used today.  It would be a good idea to remove this
in any case.
<span class="quote">
&gt; -module_init(hugetlb_init);</span>
<span class="quote">&gt; +device_initcall(hugetlb_init);</span>

Other more experienced people have opinions on your staged approach
to changing these init calls.  If the consensus is to take this
approach, I would have no objections.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 586aa69df900..1154152c8b99 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -4,7 +4,6 @@</span> <span class="p_context"></span>
  */
 #include &lt;linux/list.h&gt;
 #include &lt;linux/init.h&gt;
<span class="p_del">-#include &lt;linux/module.h&gt;</span>
 #include &lt;linux/mm.h&gt;
 #include &lt;linux/seq_file.h&gt;
 #include &lt;linux/sysctl.h&gt;
<span class="p_chunk">@@ -2439,25 +2438,6 @@</span> <span class="p_context"> static void hugetlb_unregister_node(struct node *node)</span>
 	nhs-&gt;hugepages_kobj = NULL;
 }
 
<span class="p_del">-/*</span>
<span class="p_del">- * hugetlb module exit:  unregister hstate attributes from node devices</span>
<span class="p_del">- * that have them.</span>
<span class="p_del">- */</span>
<span class="p_del">-static void hugetlb_unregister_all_nodes(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	int nid;</span>
<span class="p_del">-</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * disable node device registrations.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	register_hugetlbfs_with_node(NULL, NULL);</span>
<span class="p_del">-</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * remove hstate attributes from any nodes that have them.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	for (nid = 0; nid &lt; nr_node_ids; nid++)</span>
<span class="p_del">-		hugetlb_unregister_node(node_devices[nid]);</span>
<span class="p_del">-}</span>
 
 /*
  * Register hstate attributes for a single node device.
<span class="p_chunk">@@ -2522,27 +2502,10 @@</span> <span class="p_context"> static struct hstate *kobj_to_node_hstate(struct kobject *kobj, int *nidp)</span>
 	return NULL;
 }
 
<span class="p_del">-static void hugetlb_unregister_all_nodes(void) { }</span>
<span class="p_del">-</span>
 static void hugetlb_register_all_nodes(void) { }
 
 #endif
 
<span class="p_del">-static void __exit hugetlb_exit(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct hstate *h;</span>
<span class="p_del">-</span>
<span class="p_del">-	hugetlb_unregister_all_nodes();</span>
<span class="p_del">-</span>
<span class="p_del">-	for_each_hstate(h) {</span>
<span class="p_del">-		kobject_put(hstate_kobjs[hstate_index(h)]);</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	kobject_put(hugepages_kobj);</span>
<span class="p_del">-	kfree(hugetlb_fault_mutex_table);</span>
<span class="p_del">-}</span>
<span class="p_del">-module_exit(hugetlb_exit);</span>
<span class="p_del">-</span>
 static int __init hugetlb_init(void)
 {
 	int i;
<span class="p_chunk">@@ -2580,7 +2543,7 @@</span> <span class="p_context"> static int __init hugetlb_init(void)</span>
 		mutex_init(&amp;hugetlb_fault_mutex_table[i]);
 	return 0;
 }
<span class="p_del">-module_init(hugetlb_init);</span>
<span class="p_add">+device_initcall(hugetlb_init);</span>
 
 /* Should be called on processing a hugepagesz=... option */
 void __init hugetlb_add_hstate(unsigned order)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



