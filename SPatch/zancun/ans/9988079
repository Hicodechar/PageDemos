
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,15/16] iommu: introduce page response function - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,15/16] iommu: introduce page response function</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=7040">Jacob Pan</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 5, 2017, 11:03 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1507244624-39189-16-git-send-email-jacob.jun.pan@linux.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9988079/mbox/"
   >mbox</a>
|
   <a href="/patch/9988079/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9988079/">/patch/9988079/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	BCFB96029B for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  5 Oct 2017 23:01:31 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id AEAA328D56
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  5 Oct 2017 23:01:31 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A348D28D58; Thu,  5 Oct 2017 23:01:31 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3FD6D28D56
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  5 Oct 2017 23:01:31 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752293AbdJEXB3 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 5 Oct 2017 19:01:29 -0400
Received: from mga05.intel.com ([192.55.52.43]:56372 &quot;EHLO mga05.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752150AbdJEXBY (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 5 Oct 2017 19:01:24 -0400
Received: from orsmga004.jf.intel.com ([10.7.209.38])
	by fmsmga105.fm.intel.com with ESMTP; 05 Oct 2017 16:01:22 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.42,482,1500966000&quot;; d=&quot;scan&#39;208&quot;;a=&quot;135681935&quot;
Received: from jacob-builder.jf.intel.com ([10.7.199.158])
	by orsmga004.jf.intel.com with ESMTP; 05 Oct 2017 16:01:21 -0700
From: Jacob Pan &lt;jacob.jun.pan@linux.intel.com&gt;
To: iommu@lists.linux-foundation.org, LKML &lt;linux-kernel@vger.kernel.org&gt;,
	Joerg Roedel &lt;joro@8bytes.org&gt;, David Woodhouse &lt;dwmw2@infradead.org&gt;,
	Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	Rafael Wysocki &lt;rafael.j.wysocki@intel.com&gt;,
	Jean-Philippe Brucker &lt;jean-philippe.brucker@arm.com&gt;
Cc: &quot;Liu, Yi L&quot; &lt;yi.l.liu@intel.com&gt;, Lan Tianyu &lt;tianyu.lan@intel.com&gt;,
	&quot;Tian, Kevin&quot; &lt;kevin.tian@intel.com&gt;, Raj Ashok &lt;ashok.raj@intel.com&gt;,
	Alex Williamson &lt;alex.williamson@redhat.com&gt;,
	Jacob Pan &lt;jacob.jun.pan@linux.intel.com&gt;
Subject: [PATCH v2 15/16] iommu: introduce page response function
Date: Thu,  5 Oct 2017 16:03:43 -0700
Message-Id: &lt;1507244624-39189-16-git-send-email-jacob.jun.pan@linux.intel.com&gt;
X-Mailer: git-send-email 2.7.4
In-Reply-To: &lt;1507244624-39189-1-git-send-email-jacob.jun.pan@linux.intel.com&gt;
References: &lt;1507244624-39189-1-git-send-email-jacob.jun.pan@linux.intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7040">Jacob Pan</a> - Oct. 5, 2017, 11:03 p.m.</div>
<pre class="content">
When nested translation is turned on and guest owns the
first level page tables, device page request can be forwared
to the guest for handling faults. As the page response returns
by the guest, IOMMU driver on the host need to process the
response which informs the device and completes the page request
transaction.

This patch introduces generic API function for page response
passing from the guest or other in-kernel users. The definitions of
the generic data is based on PCI ATS specification not limited to
any vendor.
<span class="signed-off-by">
Signed-off-by: Jacob Pan &lt;jacob.jun.pan@linux.intel.com&gt;</span>
---
 drivers/iommu/iommu.c | 14 ++++++++++++++
 include/linux/iommu.h | 42 ++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 56 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/iommu/iommu.c b/drivers/iommu/iommu.c</span>
<span class="p_header">index 0b058e2..b1c9a0e 100644</span>
<span class="p_header">--- a/drivers/iommu/iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/iommu.c</span>
<span class="p_chunk">@@ -1409,6 +1409,20 @@</span> <span class="p_context"> int iommu_invalidate(struct iommu_domain *domain,</span>
 }
 EXPORT_SYMBOL_GPL(iommu_invalidate);
 
<span class="p_add">+int iommu_page_response(struct iommu_domain *domain, struct device *dev,</span>
<span class="p_add">+			struct page_response_msg *msg)</span>
<span class="p_add">+{</span>
<span class="p_add">+	int ret = 0;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (unlikely(!domain-&gt;ops-&gt;page_response))</span>
<span class="p_add">+		return -ENODEV;</span>
<span class="p_add">+</span>
<span class="p_add">+	ret = domain-&gt;ops-&gt;page_response(domain, dev, msg);</span>
<span class="p_add">+</span>
<span class="p_add">+	return ret;</span>
<span class="p_add">+}</span>
<span class="p_add">+EXPORT_SYMBOL_GPL(iommu_page_response);</span>
<span class="p_add">+</span>
 static void __iommu_detach_device(struct iommu_domain *domain,
 				  struct device *dev)
 {
<span class="p_header">diff --git a/include/linux/iommu.h b/include/linux/iommu.h</span>
<span class="p_header">index a675775..c289760 100644</span>
<span class="p_header">--- a/include/linux/iommu.h</span>
<span class="p_header">+++ b/include/linux/iommu.h</span>
<span class="p_chunk">@@ -161,6 +161,43 @@</span> <span class="p_context"> struct iommu_resv_region {</span>
 
 #ifdef CONFIG_IOMMU_API
 
<span class="p_add">+enum page_response_type {</span>
<span class="p_add">+	IOMMU_PAGE_STREAM_RESP = 1,</span>
<span class="p_add">+	IOMMU_PAGE_GROUP_RESP,</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+/**</span>
<span class="p_add">+ * Generic page response information based on PCI ATS and PASID spec.</span>
<span class="p_add">+ * @paddr: servicing page address</span>
<span class="p_add">+ * @pasid: contains process address space ID, used in shared virtual memory(SVM)</span>
<span class="p_add">+ * @rid: requestor ID</span>
<span class="p_add">+ * @did: destination device ID</span>
<span class="p_add">+ * @last_req: last request in a page request group</span>
<span class="p_add">+ * @resp_code: response code</span>
<span class="p_add">+ * @page_req_group_id: page request group index</span>
<span class="p_add">+ * @prot: page access protection flag, e.g. IOMMU_READ, IOMMU_WRITE</span>
<span class="p_add">+ * @type: group or stream response</span>
<span class="p_add">+ * @private_data: uniquely identify device-specific private data for an</span>
<span class="p_add">+ *                individual page response</span>
<span class="p_add">+</span>
<span class="p_add">+ */</span>
<span class="p_add">+struct page_response_msg {</span>
<span class="p_add">+	u64 paddr;</span>
<span class="p_add">+	u32 pasid;</span>
<span class="p_add">+	u32 rid:16;</span>
<span class="p_add">+	u32 did:16;</span>
<span class="p_add">+	u32 resp_code:4;</span>
<span class="p_add">+	u32 last_req:1;</span>
<span class="p_add">+	u32 pasid_present:1;</span>
<span class="p_add">+#define IOMMU_PAGE_RESP_SUCCESS	0</span>
<span class="p_add">+#define IOMMU_PAGE_RESP_INVALID	1</span>
<span class="p_add">+#define IOMMU_PAGE_RESP_FAILURE	0xF</span>
<span class="p_add">+	u32 page_req_group_id : 9;</span>
<span class="p_add">+	u32 prot;</span>
<span class="p_add">+	enum page_response_type type;</span>
<span class="p_add">+	u32 private_data;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 /**
  * struct iommu_ops - iommu ops and capabilities
  * @capable: check capability
<span class="p_chunk">@@ -194,6 +231,7 @@</span> <span class="p_context"> struct iommu_resv_region {</span>
  * @bind_pasid_table: bind pasid table pointer for guest SVM
  * @unbind_pasid_table: unbind pasid table pointer and restore defaults
  * @invalidate: invalidate translation caches
<span class="p_add">+ * @page_response: handle page request response</span>
  */
 struct iommu_ops {
 	bool (*capable)(enum iommu_cap);
<span class="p_chunk">@@ -249,6 +287,8 @@</span> <span class="p_context"> struct iommu_ops {</span>
 				struct device *dev);
 	int (*invalidate)(struct iommu_domain *domain,
 		struct device *dev, struct tlb_invalidate_info *inv_info);
<span class="p_add">+	int (*page_response)(struct iommu_domain *domain, struct device *dev,</span>
<span class="p_add">+			struct page_response_msg *msg);</span>
 
 	unsigned long pgsize_bitmap;
 };
<span class="p_chunk">@@ -424,6 +464,8 @@</span> <span class="p_context"> extern int iommu_unregister_device_fault_handler(struct device *dev);</span>
 
 extern int iommu_report_device_fault(struct device *dev, struct iommu_fault_event *evt);
 
<span class="p_add">+extern int iommu_page_response(struct iommu_domain *domain, struct device *dev,</span>
<span class="p_add">+			struct page_response_msg *msg);</span>
 extern int iommu_group_id(struct iommu_group *group);
 extern struct iommu_group *iommu_group_get_for_dev(struct device *dev);
 extern struct iommu_domain *iommu_group_default_domain(struct iommu_group *);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



