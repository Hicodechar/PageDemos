
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[mm,v2,14/26] arch/mips: Add option to skip DMA sync as a part of map and unmap - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [mm,v2,14/26] arch/mips: Add option to skip DMA sync as a part of map and unmap</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=1465">Duyck, Alexander H</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 2, 2016, 11:14 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161102111437.79519.6389.stgit@ahduyck-blue-test.jf.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9409615/mbox/"
   >mbox</a>
|
   <a href="/patch/9409615/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9409615/">/patch/9409615/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	DE72F60722 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  2 Nov 2016 17:15:50 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id CCA362A417
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  2 Nov 2016 17:15:50 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id C15782A4A4; Wed,  2 Nov 2016 17:15:50 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-5.4 required=2.0 tests=BAYES_00, DATE_IN_PAST_06_12,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id CC0A52A4A5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  2 Nov 2016 17:15:49 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932748AbcKBRPl (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 2 Nov 2016 13:15:41 -0400
Received: from mga11.intel.com ([192.55.52.93]:13686 &quot;EHLO mga11.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S932973AbcKBRPh (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 2 Nov 2016 13:15:37 -0400
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
	by fmsmga102.fm.intel.com with ESMTP; 02 Nov 2016 10:15:37 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.31,583,1473145200&quot;; d=&quot;scan&#39;208&quot;;a=&quot;1079642656&quot;
Received: from ahduyck-blue-test.jf.intel.com ([134.134.2.201])
	by fmsmga002.fm.intel.com with ESMTP; 02 Nov 2016 10:15:36 -0700
Subject: [mm PATCH v2 14/26] arch/mips: Add option to skip DMA sync as a
	part of map and unmap
From: Alexander Duyck &lt;alexander.h.duyck@intel.com&gt;
To: linux-mm@kvack.org, akpm@linux-foundation.org
Cc: linux-mips@linux-mips.org, Keguang Zhang &lt;keguang.zhang@gmail.com&gt;,
	linux-kernel@vger.kernel.org, Ralf Baechle &lt;ralf@linux-mips.org&gt;,
	netdev@vger.kernel.org
Date: Wed, 02 Nov 2016 07:14:39 -0400
Message-ID: &lt;20161102111437.79519.6389.stgit@ahduyck-blue-test.jf.intel.com&gt;
In-Reply-To: &lt;20161102111031.79519.14741.stgit@ahduyck-blue-test.jf.intel.com&gt;
References: &lt;20161102111031.79519.14741.stgit@ahduyck-blue-test.jf.intel.com&gt;
User-Agent: StGit/0.17.1-dirty
MIME-Version: 1.0
Content-Type: text/plain; charset=&quot;utf-8&quot;
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1465">Duyck, Alexander H</a> - Nov. 2, 2016, 11:14 a.m.</div>
<pre class="content">
This change allows us to pass DMA_ATTR_SKIP_CPU_SYNC which allows us to
avoid invoking cache line invalidation if the driver will just handle it
via a sync_for_cpu or sync_for_device call.

Cc: Ralf Baechle &lt;ralf@linux-mips.org&gt;
Cc: Keguang Zhang &lt;keguang.zhang@gmail.com&gt;
Cc: linux-mips@linux-mips.org
<span class="signed-off-by">Signed-off-by: Alexander Duyck &lt;alexander.h.duyck@intel.com&gt;</span>
---
 arch/mips/loongson64/common/dma-swiotlb.c |    2 +-
 arch/mips/mm/dma-default.c                |    8 +++++---
 2 files changed, 6 insertions(+), 4 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/mips/loongson64/common/dma-swiotlb.c b/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="p_header">index 1a80b6f..aab4fd6 100644</span>
<span class="p_header">--- a/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="p_header">+++ b/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="p_chunk">@@ -61,7 +61,7 @@</span> <span class="p_context"> static int loongson_dma_map_sg(struct device *dev, struct scatterlist *sg,</span>
 				int nents, enum dma_data_direction dir,
 				unsigned long attrs)
 {
<span class="p_del">-	int r = swiotlb_map_sg_attrs(dev, sg, nents, dir, 0);</span>
<span class="p_add">+	int r = swiotlb_map_sg_attrs(dev, sg, nents, dir, attrs);</span>
 	mb();
 
 	return r;
<span class="p_header">diff --git a/arch/mips/mm/dma-default.c b/arch/mips/mm/dma-default.c</span>
<span class="p_header">index 46d5696..a39c36a 100644</span>
<span class="p_header">--- a/arch/mips/mm/dma-default.c</span>
<span class="p_header">+++ b/arch/mips/mm/dma-default.c</span>
<span class="p_chunk">@@ -293,7 +293,7 @@</span> <span class="p_context"> static inline void __dma_sync(struct page *page,</span>
 static void mips_dma_unmap_page(struct device *dev, dma_addr_t dma_addr,
 	size_t size, enum dma_data_direction direction, unsigned long attrs)
 {
<span class="p_del">-	if (cpu_needs_post_dma_flush(dev))</span>
<span class="p_add">+	if (cpu_needs_post_dma_flush(dev) &amp;&amp; !(attrs &amp; DMA_ATTR_SKIP_CPU_SYNC))</span>
 		__dma_sync(dma_addr_to_page(dev, dma_addr),
 			   dma_addr &amp; ~PAGE_MASK, size, direction);
 	plat_post_dma_flush(dev);
<span class="p_chunk">@@ -307,7 +307,8 @@</span> <span class="p_context"> static int mips_dma_map_sg(struct device *dev, struct scatterlist *sglist,</span>
 	struct scatterlist *sg;
 
 	for_each_sg(sglist, sg, nents, i) {
<span class="p_del">-		if (!plat_device_is_coherent(dev))</span>
<span class="p_add">+		if (!plat_device_is_coherent(dev) &amp;&amp;</span>
<span class="p_add">+		    !(attrs &amp; DMA_ATTR_SKIP_CPU_SYNC))</span>
 			__dma_sync(sg_page(sg), sg-&gt;offset, sg-&gt;length,
 				   direction);
 #ifdef CONFIG_NEED_SG_DMA_LENGTH
<span class="p_chunk">@@ -324,7 +325,7 @@</span> <span class="p_context"> static dma_addr_t mips_dma_map_page(struct device *dev, struct page *page,</span>
 	unsigned long offset, size_t size, enum dma_data_direction direction,
 	unsigned long attrs)
 {
<span class="p_del">-	if (!plat_device_is_coherent(dev))</span>
<span class="p_add">+	if (!plat_device_is_coherent(dev) &amp;&amp; !(attrs &amp; DMA_ATTR_SKIP_CPU_SYNC))</span>
 		__dma_sync(page, offset, size, direction);
 
 	return plat_map_dma_mem_page(dev, page) + offset;
<span class="p_chunk">@@ -339,6 +340,7 @@</span> <span class="p_context"> static void mips_dma_unmap_sg(struct device *dev, struct scatterlist *sglist,</span>
 
 	for_each_sg(sglist, sg, nhwentries, i) {
 		if (!plat_device_is_coherent(dev) &amp;&amp;
<span class="p_add">+		    !(attrs &amp; DMA_ATTR_SKIP_CPU_SYNC) &amp;&amp;</span>
 		    direction != DMA_TO_DEVICE)
 			__dma_sync(sg_page(sg), sg-&gt;offset, sg-&gt;length,
 				   direction);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



