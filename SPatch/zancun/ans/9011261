
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[tip:x86/platform] x86/platform/UV: Move blade local processor ID to the per cpu info struct - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [tip:x86/platform] x86/platform/UV: Move blade local processor ID to the per cpu info struct</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>May 4, 2016, 7:19 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;tip-5627a8251f7861175b193a44dc3d8cb478d1135a@git.kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9011261/mbox/"
   >mbox</a>
|
   <a href="/patch/9011261/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9011261/">/patch/9011261/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 2EBA5BF29F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  4 May 2016 07:20:29 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 2FAD72038D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  4 May 2016 07:20:28 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 514F120374
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  4 May 2016 07:20:26 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1757516AbcEDHUV (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 4 May 2016 03:20:21 -0400
Received: from terminus.zytor.com ([198.137.202.10]:37758 &quot;EHLO
	terminus.zytor.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1756844AbcEDHUS (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 4 May 2016 03:20:18 -0400
Received: from terminus.zytor.com (localhost [127.0.0.1])
	by terminus.zytor.com (8.15.2/8.15.2) with ESMTP id u447JCQB005429;
	Wed, 4 May 2016 00:19:17 -0700
Received: (from tipbot@localhost)
	by terminus.zytor.com (8.15.2/8.15.2/Submit) id u447JCAE005425;
	Wed, 4 May 2016 00:19:12 -0700
Date: Wed, 4 May 2016 00:19:12 -0700
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to
	tipbot@zytor.com using -f
From: tip-bot for Mike Travis &lt;tipbot@zytor.com&gt;
Message-ID: &lt;tip-5627a8251f7861175b193a44dc3d8cb478d1135a@git.kernel.org&gt;
Cc: brgerst@gmail.com, gfk@sgi.com, peterz@infradead.org,
	luto@amacapital.net, estabrook@sgi.com, tglx@linutronix.de,
	len.brown@intel.com, abanman@sgi.com, bp@alien8.de,
	mingo@kernel.org, dvlasenk@redhat.com, rja@sgi.com, travis@sgi.com,
	nzimmer@sgi.com, sivanich@sgi.com, linux-kernel@vger.kernel.org,
	torvalds@linux-foundation.org, akpm@linux-foundation.org, hpa@zytor.com
Reply-To: mingo@kernel.org, travis@sgi.com, rja@sgi.com,
	dvlasenk@redhat.com, nzimmer@sgi.com, sivanich@sgi.com,
	linux-kernel@vger.kernel.org, torvalds@linux-foundation.org,
	akpm@linux-foundation.org, hpa@zytor.com, brgerst@gmail.com,
	gfk@sgi.com, peterz@infradead.org, luto@amacapital.net,
	estabrook@sgi.com, tglx@linutronix.de, len.brown@intel.com,
	abanman@sgi.com, bp@alien8.de
In-Reply-To: &lt;20160429215404.644173122@asylum.americas.sgi.com&gt;
References: &lt;20160429215404.644173122@asylum.americas.sgi.com&gt;
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/platform] x86/platform/UV: Move blade local processor ID
	to the per cpu info struct
Git-Commit-ID: 5627a8251f7861175b193a44dc3d8cb478d1135a
X-Mailer: tip-git-log-daemon
Robot-ID: &lt;tip-bot.git.kernel.org&gt;
Robot-Unsubscribe: Contact &lt;mailto:hpa@kernel.org&gt; to get blacklisted from
	these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=-9.0 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a> - May 4, 2016, 7:19 a.m.</div>
<pre class="content">
Commit-ID:  5627a8251f7861175b193a44dc3d8cb478d1135a
Gitweb:     http://git.kernel.org/tip/5627a8251f7861175b193a44dc3d8cb478d1135a
Author:     Mike Travis &lt;travis@sgi.com&gt;
AuthorDate: Fri, 29 Apr 2016 16:54:14 -0500
Committer:  Ingo Molnar &lt;mingo@kernel.org&gt;
CommitDate: Wed, 4 May 2016 08:48:49 +0200

x86/platform/UV: Move blade local processor ID to the per cpu info struct

Move references to blade local processor ID to the new per cpu info
structs.  Create an access function that makes this move, and other
potential moves opaque to callers of this function.  Define a flag
that indicates to callers in external GPL modules that this function
replaces any local definition.  This allows calling source code to be
built for both pre-UV4 kernels as well as post-UV4 kernels.
<span class="tested-by">
Tested-by: John Estabrook &lt;estabrook@sgi.com&gt;</span>
<span class="tested-by">Tested-by: Gary Kroening &lt;gfk@sgi.com&gt;</span>
<span class="tested-by">Tested-by: Nathan Zimmer &lt;nzimmer@sgi.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Mike Travis &lt;travis@sgi.com&gt;</span>
<span class="reviewed-by">Reviewed-by: Dimitri Sivanich &lt;sivanich@sgi.com&gt;</span>
Cc: Andrew Banman &lt;abanman@sgi.com&gt;
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Andy Lutomirski &lt;luto@amacapital.net&gt;
Cc: Borislav Petkov &lt;bp@alien8.de&gt;
Cc: Brian Gerst &lt;brgerst@gmail.com&gt;
Cc: Denys Vlasenko &lt;dvlasenk@redhat.com&gt;
Cc: H. Peter Anvin &lt;hpa@zytor.com&gt;
Cc: Len Brown &lt;len.brown@intel.com&gt;
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: Russ Anderson &lt;rja@sgi.com&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Link: http://lkml.kernel.org/r/20160429215404.644173122@asylum.americas.sgi.com
<span class="signed-off-by">Signed-off-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
---
 arch/x86/include/asm/uv/uv_hub.h   | 10 ++++++++--
 arch/x86/kernel/apic/x2apic_uv_x.c |  2 +-
 arch/x86/platform/uv/tlb_uv.c      |  3 ++-
 arch/x86/platform/uv/uv_time.c     |  6 +++---
 4 files changed, 14 insertions(+), 7 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/uv/uv_hub.h b/arch/x86/include/asm/uv/uv_hub.h</span>
<span class="p_header">index b8c5a61..4a6f02a 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/uv/uv_hub.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/uv/uv_hub.h</span>
<span class="p_chunk">@@ -159,7 +159,6 @@</span> <span class="p_context"> struct uv_hub_info_s {</span>
 	unsigned short		pnode_mask;
 	unsigned short		coherency_domain_number;
 	unsigned short		numa_blade_id;
<span class="p_del">-	unsigned char		blade_processor_id;</span>
 	unsigned char		m_val;
 	unsigned char		n_val;
 };
<span class="p_chunk">@@ -572,9 +571,16 @@</span> <span class="p_context"> extern short uv_possible_blades;</span>
 /* Blade-local cpu number of current cpu. Numbered 0 .. &lt;# cpus on the blade&gt; */
 static inline int uv_blade_processor_id(void)
 {
<span class="p_del">-	return uv_hub_info-&gt;blade_processor_id;</span>
<span class="p_add">+	return uv_cpu_info-&gt;blade_cpu_id;</span>
 }
 
<span class="p_add">+/* Blade-local cpu number of cpu N. Numbered 0 .. &lt;# cpus on the blade&gt; */</span>
<span class="p_add">+static inline int uv_cpu_blade_processor_id(int cpu)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return uv_cpu_info_per(cpu)-&gt;blade_cpu_id;</span>
<span class="p_add">+}</span>
<span class="p_add">+#define _uv_cpu_blade_processor_id 1	/* indicate function available */</span>
<span class="p_add">+</span>
 /* Blade number of current cpu. Numnbered 0 .. &lt;#blades -1&gt; */
 static inline int uv_numa_blade_id(void)
 {
<span class="p_header">diff --git a/arch/x86/kernel/apic/x2apic_uv_x.c b/arch/x86/kernel/apic/x2apic_uv_x.c</span>
<span class="p_header">index c8acda9..69aa2a9 100644</span>
<span class="p_header">--- a/arch/x86/kernel/apic/x2apic_uv_x.c</span>
<span class="p_header">+++ b/arch/x86/kernel/apic/x2apic_uv_x.c</span>
<span class="p_chunk">@@ -1055,12 +1055,12 @@</span> <span class="p_context"> void __init uv_system_init(void)</span>
 
 		uv_cpu_hub_info(cpu)-&gt;numa_blade_id = blade;
 		uv_cpu_hub_info(cpu)-&gt;pnode = pnode;
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;blade_processor_id = lcpu;</span>
 		uv_node_to_blade[nodeid] = blade;
 		uv_cpu_to_blade[cpu] = blade;
 
 		/* Initialize per cpu info list */
 		uv_cpu_info_per(cpu)-&gt;p_uv_hub_info = uv_cpu_hub_info(cpu);
<span class="p_add">+		uv_cpu_info_per(cpu)-&gt;blade_cpu_id = lcpu;</span>
 		uv_cpu_info_per(cpu)-&gt;scir.offset = uv_scir_offset(apicid);
 	}
 
<span class="p_header">diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">index 534ab94..fdb4d42 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_chunk">@@ -2040,7 +2040,8 @@</span> <span class="p_context"> static int scan_sock(struct socket_desc *sdp, struct uvhub_desc *bdp,</span>
 			return 1;
 		}
 		bcp-&gt;uvhub_master = *hmasterp;
<span class="p_del">-		bcp-&gt;uvhub_cpu = uv_cpu_hub_info(cpu)-&gt;blade_processor_id;</span>
<span class="p_add">+		bcp-&gt;uvhub_cpu = uv_cpu_blade_processor_id(cpu);</span>
<span class="p_add">+</span>
 		if (bcp-&gt;uvhub_cpu &gt;= MAX_CPUS_PER_UVHUB) {
 			printk(KERN_EMERG &quot;%d cpus per uvhub invalid\n&quot;,
 				bcp-&gt;uvhub_cpu);
<span class="p_header">diff --git a/arch/x86/platform/uv/uv_time.c b/arch/x86/platform/uv/uv_time.c</span>
<span class="p_header">index 2b158a9..b333fc4 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/uv_time.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/uv_time.c</span>
<span class="p_chunk">@@ -165,7 +165,7 @@</span> <span class="p_context"> static __init int uv_rtc_allocate_timers(void)</span>
 	for_each_present_cpu(cpu) {
 		int nid = cpu_to_node(cpu);
 		int bid = uv_cpu_to_blade_id(cpu);
<span class="p_del">-		int bcpu = uv_cpu_hub_info(cpu)-&gt;blade_processor_id;</span>
<span class="p_add">+		int bcpu = uv_cpu_blade_processor_id(cpu);</span>
 		struct uv_rtc_timer_head *head = blade_info[bid];
 
 		if (!head) {
<span class="p_chunk">@@ -226,7 +226,7 @@</span> <span class="p_context"> static int uv_rtc_set_timer(int cpu, u64 expires)</span>
 	int pnode = uv_cpu_to_pnode(cpu);
 	int bid = uv_cpu_to_blade_id(cpu);
 	struct uv_rtc_timer_head *head = blade_info[bid];
<span class="p_del">-	int bcpu = uv_cpu_hub_info(cpu)-&gt;blade_processor_id;</span>
<span class="p_add">+	int bcpu = uv_cpu_blade_processor_id(cpu);</span>
 	u64 *t = &amp;head-&gt;cpu[bcpu].expires;
 	unsigned long flags;
 	int next_cpu;
<span class="p_chunk">@@ -262,7 +262,7 @@</span> <span class="p_context"> static int uv_rtc_unset_timer(int cpu, int force)</span>
 	int pnode = uv_cpu_to_pnode(cpu);
 	int bid = uv_cpu_to_blade_id(cpu);
 	struct uv_rtc_timer_head *head = blade_info[bid];
<span class="p_del">-	int bcpu = uv_cpu_hub_info(cpu)-&gt;blade_processor_id;</span>
<span class="p_add">+	int bcpu = uv_cpu_blade_processor_id(cpu);</span>
 	u64 *t = &amp;head-&gt;cpu[bcpu].expires;
 	unsigned long flags;
 	int rc = 0;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



