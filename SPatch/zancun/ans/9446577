
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[3.12,001/127] Revert &quot;KVM: MIPS: Drop other CPU ASIDs on guest MMU changes&quot; - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [3.12,001/127] Revert &quot;KVM: MIPS: Drop other CPU ASIDs on guest MMU changes&quot;</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=887">Jiri Slaby</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 25, 2016, 8:28 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;f668f2eee98250a2073a4beafdb7f6d1e21c528e.1480062521.git.jslaby@suse.cz&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9446577/mbox/"
   >mbox</a>
|
   <a href="/patch/9446577/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9446577/">/patch/9446577/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	5637960235 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 25 Nov 2016 08:31:27 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4248C27FB6
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 25 Nov 2016 08:31:27 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 322FD2808F; Fri, 25 Nov 2016 08:31:27 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id AF27727FB6
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 25 Nov 2016 08:31:22 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751858AbcKYIaz (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 25 Nov 2016 03:30:55 -0500
Received: from mx2.suse.de ([195.135.220.15]:45190 &quot;EHLO mx2.suse.de&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1750765AbcKYIan (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 25 Nov 2016 03:30:43 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (charybdis-ext.suse.de [195.135.220.254])
	by mx2.suse.de (Postfix) with ESMTP id 5EEBCAE00;
	Fri, 25 Nov 2016 08:30:41 +0000 (UTC)
From: Jiri Slaby &lt;jslaby@suse.cz&gt;
To: stable@vger.kernel.org
Cc: linux-kernel@vger.kernel.org, Jiri Slaby &lt;jslaby@suse.cz&gt;,
	James Hogan &lt;james.hogan@imgtec.com&gt;
Subject: [PATCH 3.12 001/127] Revert &quot;KVM: MIPS: Drop other CPU ASIDs on
	guest MMU changes&quot;
Date: Fri, 25 Nov 2016 09:28:34 +0100
Message-Id: &lt;f668f2eee98250a2073a4beafdb7f6d1e21c528e.1480062521.git.jslaby@suse.cz&gt;
X-Mailer: git-send-email 2.10.2
In-Reply-To: &lt;cover.1480062521.git.jslaby@suse.cz&gt;
References: &lt;cover.1480062521.git.jslaby@suse.cz&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=887">Jiri Slaby</a> - Nov. 25, 2016, 8:28 a.m.</div>
<pre class="content">
3.12-stable review patch.  If anyone has any objections, please let me know.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
===============

This reverts commit 168e5ebbd63eaf2557b5e37be1afb8c143de2380, which is
upstream commit 91e4f1b6073dd680d86cdb7e42d7cccca9db39d8. It caused
build failures as it was improperly backported. New version is
approaching, so revert this bad one.

Signed-off-by: Jiri Slaby &lt;jslaby@suse.cz&gt;
Cc: James Hogan &lt;james.hogan@imgtec.com&gt;
<span class="p_del">---</span>
 arch/mips/kvm/kvm_mips_emul.c | 57 +++----------------------------------------
 1 file changed, 4 insertions(+), 53 deletions(-)

<span class="p_header">diff --git a/arch/mips/kvm/kvm_mips_emul.c b/arch/mips/kvm/kvm_mips_emul.c</span>
<span class="p_header">index 8ab9958767bb..9f7643874fba 100644</span>
<span class="p_header">--- a/arch/mips/kvm/kvm_mips_emul.c</span>
<span class="p_header">+++ b/arch/mips/kvm/kvm_mips_emul.c</span>
<span class="p_chunk">@@ -310,47 +310,6 @@</span> <span class="p_context"> enum emulation_result kvm_mips_emul_tlbr(struct kvm_vcpu *vcpu)</span>
 	return er;
 }
 
<span class="p_del">-/**</span>
<span class="p_del">- * kvm_mips_invalidate_guest_tlb() - Indicates a change in guest MMU map.</span>
<span class="p_del">- * @vcpu:	VCPU with changed mappings.</span>
<span class="p_del">- * @tlb:	TLB entry being removed.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This is called to indicate a single change in guest MMU mappings, so that we</span>
<span class="p_del">- * can arrange TLB flushes on this and other CPUs.</span>
<span class="p_del">- */</span>
<span class="p_del">-static void kvm_mips_invalidate_guest_tlb(struct kvm_vcpu *vcpu,</span>
<span class="p_del">-					  struct kvm_mips_tlb *tlb)</span>
<span class="p_del">-{</span>
<span class="p_del">-	int cpu, i;</span>
<span class="p_del">-	bool user;</span>
<span class="p_del">-</span>
<span class="p_del">-	/* No need to flush for entries which are already invalid */</span>
<span class="p_del">-	if (!((tlb-&gt;tlb_lo[0] | tlb-&gt;tlb_lo[1]) &amp; ENTRYLO_V))</span>
<span class="p_del">-		return;</span>
<span class="p_del">-	/* User address space doesn&#39;t need flushing for KSeg2/3 changes */</span>
<span class="p_del">-	user = tlb-&gt;tlb_hi &lt; KVM_GUEST_KSEG0;</span>
<span class="p_del">-</span>
<span class="p_del">-	preempt_disable();</span>
<span class="p_del">-</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * Probe the shadow host TLB for the entry being overwritten, if one</span>
<span class="p_del">-	 * matches, invalidate it</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	kvm_mips_host_tlb_inv(vcpu, tlb-&gt;tlb_hi);</span>
<span class="p_del">-</span>
<span class="p_del">-	/* Invalidate the whole ASID on other CPUs */</span>
<span class="p_del">-	cpu = smp_processor_id();</span>
<span class="p_del">-	for_each_possible_cpu(i) {</span>
<span class="p_del">-		if (i == cpu)</span>
<span class="p_del">-			continue;</span>
<span class="p_del">-		if (user)</span>
<span class="p_del">-			vcpu-&gt;arch.guest_user_asid[i] = 0;</span>
<span class="p_del">-		vcpu-&gt;arch.guest_kernel_asid[i] = 0;</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	preempt_enable();</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 /* Write Guest TLB Entry @ Index */
 enum emulation_result kvm_mips_emul_tlbwi(struct kvm_vcpu *vcpu)
 {
<span class="p_chunk">@@ -373,8 +332,8 @@</span> <span class="p_context"> enum emulation_result kvm_mips_emul_tlbwi(struct kvm_vcpu *vcpu)</span>
 
 	tlb = &amp;vcpu-&gt;arch.guest_tlb[index];
 #if 1
<span class="p_del">-</span>
<span class="p_del">-	kvm_mips_invalidate_guest_tlb(vcpu, tlb);</span>
<span class="p_add">+	/* Probe the shadow host TLB for the entry being overwritten, if one matches, invalidate it */</span>
<span class="p_add">+	kvm_mips_host_tlb_inv(vcpu, tlb-&gt;tlb_hi);</span>
 #endif
 
 	tlb-&gt;tlb_mask = kvm_read_c0_guest_pagemask(cop0);
<span class="p_chunk">@@ -415,7 +374,8 @@</span> <span class="p_context"> enum emulation_result kvm_mips_emul_tlbwr(struct kvm_vcpu *vcpu)</span>
 	tlb = &amp;vcpu-&gt;arch.guest_tlb[index];
 
 #if 1
<span class="p_del">-	kvm_mips_invalidate_guest_tlb(vcpu, tlb);</span>
<span class="p_add">+	/* Probe the shadow host TLB for the entry being overwritten, if one matches, invalidate it */</span>
<span class="p_add">+	kvm_mips_host_tlb_inv(vcpu, tlb-&gt;tlb_hi);</span>
 #endif
 
 	tlb-&gt;tlb_mask = kvm_read_c0_guest_pagemask(cop0);
<span class="p_chunk">@@ -459,7 +419,6 @@</span> <span class="p_context"> kvm_mips_emulate_CP0(uint32_t inst, uint32_t *opc, uint32_t cause,</span>
 	int32_t rt, rd, copz, sel, co_bit, op;
 	uint32_t pc = vcpu-&gt;arch.pc;
 	unsigned long curr_pc;
<span class="p_del">-	int cpu, i;</span>
 
 	/*
 	 * Update PC and hold onto current PC in case there is
<span class="p_chunk">@@ -579,16 +538,8 @@</span> <span class="p_context"> kvm_mips_emulate_CP0(uint32_t inst, uint32_t *opc, uint32_t cause,</span>
 					     ASID_MASK,
 					     vcpu-&gt;arch.gprs[rt] &amp; ASID_MASK);
 
<span class="p_del">-					preempt_disable();</span>
 					/* Blow away the shadow host TLBs */
 					kvm_mips_flush_host_tlb(1);
<span class="p_del">-					cpu = smp_processor_id();</span>
<span class="p_del">-					for_each_possible_cpu(i)</span>
<span class="p_del">-						if (i != cpu) {</span>
<span class="p_del">-							vcpu-&gt;arch.guest_user_asid[i] = 0;</span>
<span class="p_del">-							vcpu-&gt;arch.guest_kernel_asid[i] = 0;</span>
<span class="p_del">-						}</span>
<span class="p_del">-					preempt_enable();</span>
 				}
 				kvm_write_c0_guest_entryhi(cop0,
 							   vcpu-&gt;arch.gprs[rt]);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



