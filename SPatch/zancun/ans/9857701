
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2] mm/mremap: Fail map duplication attempts for private mappings - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2] mm/mremap: Fail map duplication attempts for private mappings</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 21, 2017, 9:18 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;cb9d9f6a-7095-582f-15a5-62643d65c736@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9857701/mbox/"
   >mbox</a>
|
   <a href="/patch/9857701/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9857701/">/patch/9857701/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	9E4CD600F5 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 21 Jul 2017 21:19:31 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 905D920499
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 21 Jul 2017 21:19:31 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 8505A204C2; Fri, 21 Jul 2017 21:19:31 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 0C80A20499
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 21 Jul 2017 21:19:30 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754518AbdGUVTZ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 21 Jul 2017 17:19:25 -0400
Received: from aserp1040.oracle.com ([141.146.126.69]:41815 &quot;EHLO
	aserp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752048AbdGUVTY (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 21 Jul 2017 17:19:24 -0400
Received: from userv0022.oracle.com (userv0022.oracle.com [156.151.31.74])
	by aserp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2) with
	ESMTP id v6LLIe1v010478
	(version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Fri, 21 Jul 2017 21:18:41 GMT
Received: from aserv0121.oracle.com (aserv0121.oracle.com [141.146.126.235])
	by userv0022.oracle.com (8.14.4/8.14.4) with ESMTP id
	v6LLIcGM026043
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Fri, 21 Jul 2017 21:18:39 GMT
Received: from abhmp0011.oracle.com (abhmp0011.oracle.com [141.146.116.17])
	by aserv0121.oracle.com (8.13.8/8.13.8) with ESMTP id
	v6LLIXaB010768; Fri, 21 Jul 2017 21:18:38 GMT
Received: from [192.168.1.164] (/50.188.161.229)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Fri, 21 Jul 2017 14:18:32 -0700
Subject: Re: [PATCH v2] mm/mremap: Fail map duplication attempts for private
	mappings
To: Michal Hocko &lt;mhocko@kernel.org&gt;
References: &lt;20170720082058.GF9058@dhcp22.suse.cz&gt;
	&lt;1500583079-26504-1-git-send-email-mike.kravetz@oracle.com&gt;
	&lt;20170721143644.GC5944@dhcp22.suse.cz&gt;
Cc: linux-mm@kvack.org, Linux API &lt;linux-api@vger.kernel.org&gt;,
	linux-kernel@vger.kernel.org, Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Andrea Arcangeli &lt;aarcange@redhat.com&gt;, Aaron Lu &lt;aaron.lu@intel.com&gt;,
	&quot;Kirill A . Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Vlastimil Babka &lt;vbabka@suse.cz&gt;,
	Anshuman Khandual &lt;khandual@linux.vnet.ibm.com&gt;
From: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
Message-ID: &lt;cb9d9f6a-7095-582f-15a5-62643d65c736@oracle.com&gt;
Date: Fri, 21 Jul 2017 14:18:31 -0700
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101
	Thunderbird/45.8.0
MIME-Version: 1.0
In-Reply-To: &lt;20170721143644.GC5944@dhcp22.suse.cz&gt;
Content-Type: text/plain; charset=windows-1252
Content-Transfer-Encoding: 7bit
X-Source-IP: userv0022.oracle.com [156.151.31.74]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - July 21, 2017, 9:18 p.m.</div>
<pre class="content">
On 07/21/2017 07:36 AM, Michal Hocko wrote:
<span class="quote">&gt; On Thu 20-07-17 13:37:59, Mike Kravetz wrote:</span>
<span class="quote">&gt;&gt; mremap will create a &#39;duplicate&#39; mapping if old_size == 0 is</span>
<span class="quote">&gt;&gt; specified.  Such duplicate mappings make no sense for private</span>
<span class="quote">&gt;&gt; mappings.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; sorry for the nit picking but this is not true strictly speaking.</span>
<span class="quote">&gt; It makes some sense, arguably (e.g. take an atomic snapshot of the</span>
<span class="quote">&gt; mapping). It doesn&#39;t make any sense with the _current_ implementation.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;&gt; If duplication is attempted for a private mapping,</span>
<span class="quote">&gt;&gt; mremap creates a separate private mapping unrelated to the</span>
<span class="quote">&gt;&gt; original mapping and makes no modifications to the original.</span>
<span class="quote">&gt;&gt; This is contrary to the purpose of mremap which should return</span>
<span class="quote">&gt;&gt; a mapping which is in some way related to the original.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Therefore, return EINVAL in the case where if an attempt is</span>
<span class="quote">&gt;&gt; made to duplicate a private mapping.  Also, print a warning</span>
<span class="quote">&gt;&gt; message (once) if such an attempt is made.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I do not insist on the comment update suggested</span>
<span class="quote">&gt; http://lkml.kernel.org/r/20170720082058.GF9058@dhcp22.suse.cz</span>
<span class="quote">&gt; but I would appreciate it...</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Other than that looks reasonably to me</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Acked-by: Michal Hocko &lt;mhocko@suse.com&gt;</span>

My apologies.  I overlooked your comment about the comment when
creating the patch.  Below is the patch with commit message and
comment updated.

From 5c4a1602bd6a942544ed011dc0a72fd258e874b2 Mon Sep 17 00:00:00 2001
<span class="from">From: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
Date: Wed, 12 Jul 2017 13:52:47 -0700
Subject: [PATCH] mm/mremap: Fail map duplication attempts for private mappings

mremap will attempt to create a &#39;duplicate&#39; mapping if old_size
== 0 is specified.  In the case of private mappings, mremap
will actually create a fresh separate private mapping unrelated
to the original.  This does not fit with the design semantics of
mremap as the intention is to create a new mapping based on the
original.

Therefore, return EINVAL in the case where an attempt is made
to duplicate a private mapping.  Also, print a warning message
(once) if such an attempt is made.
<span class="signed-off-by">
Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
---
 mm/mremap.c | 13 +++++++++++++
 1 file changed, 13 insertions(+)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137061">Michal Hocko</a> - July 24, 2017, 8:50 a.m.</div>
<pre class="content">
On Fri 21-07-17 14:18:31, Mike Kravetz wrote:
[...]
<span class="quote">&gt; &gt;From 5c4a1602bd6a942544ed011dc0a72fd258e874b2 Mon Sep 17 00:00:00 2001</span>
<span class="quote">&gt; From: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="quote">&gt; Date: Wed, 12 Jul 2017 13:52:47 -0700</span>
<span class="quote">&gt; Subject: [PATCH] mm/mremap: Fail map duplication attempts for private mappings</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; mremap will attempt to create a &#39;duplicate&#39; mapping if old_size</span>
<span class="quote">&gt; == 0 is specified.  In the case of private mappings, mremap</span>
<span class="quote">&gt; will actually create a fresh separate private mapping unrelated</span>
<span class="quote">&gt; to the original.  This does not fit with the design semantics of</span>
<span class="quote">&gt; mremap as the intention is to create a new mapping based on the</span>
<span class="quote">&gt; original.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Therefore, return EINVAL in the case where an attempt is made</span>
<span class="quote">&gt; to duplicate a private mapping.  Also, print a warning message</span>
<span class="quote">&gt; (once) if such an attempt is made.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="acked-by">
Acked-by: Michal Hocko &lt;mhocko@suse.com&gt;</span>

Thanks!
<span class="quote">
&gt; ---</span>
<span class="quote">&gt;  mm/mremap.c | 13 +++++++++++++</span>
<span class="quote">&gt;  1 file changed, 13 insertions(+)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/mm/mremap.c b/mm/mremap.c</span>
<span class="quote">&gt; index cd8a1b1..75b167d 100644</span>
<span class="quote">&gt; --- a/mm/mremap.c</span>
<span class="quote">&gt; +++ b/mm/mremap.c</span>
<span class="quote">&gt; @@ -383,6 +383,19 @@ static struct vm_area_struct *vma_to_resize(unsigned long addr,</span>
<span class="quote">&gt;  	if (!vma || vma-&gt;vm_start &gt; addr)</span>
<span class="quote">&gt;  		return ERR_PTR(-EFAULT);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +	/*</span>
<span class="quote">&gt; +	 * !old_len is a special case where an attempt is made to &#39;duplicate&#39;</span>
<span class="quote">&gt; +	 * a mapping.  This makes no sense for private mappings as it will</span>
<span class="quote">&gt; +	 * instead create a fresh/new mapping unrelated to the original.  This</span>
<span class="quote">&gt; +	 * is contrary to the basic idea of mremap which creates new mappings</span>
<span class="quote">&gt; +	 * based on the original.  There are no known use cases for this</span>
<span class="quote">&gt; +	 * behavior.  As a result, fail such attempts.</span>
<span class="quote">&gt; +	 */</span>
<span class="quote">&gt; +	if (!old_len &amp;&amp; !(vma-&gt;vm_flags &amp; (VM_SHARED | VM_MAYSHARE))) {</span>
<span class="quote">&gt; +		pr_warn_once(&quot;%s (%d): attempted to duplicate a private mapping with mremap.  This is not supported.\n&quot;, current-&gt;comm, current-&gt;pid);</span>
<span class="quote">&gt; +		return ERR_PTR(-EINVAL);</span>
<span class="quote">&gt; +	}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  	if (is_vm_hugetlb_page(vma))</span>
<span class="quote">&gt;  		return ERR_PTR(-EINVAL);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -- </span>
<span class="quote">&gt; 2.7.5</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/mremap.c b/mm/mremap.c</span>
<span class="p_header">index cd8a1b1..75b167d 100644</span>
<span class="p_header">--- a/mm/mremap.c</span>
<span class="p_header">+++ b/mm/mremap.c</span>
<span class="p_chunk">@@ -383,6 +383,19 @@</span> <span class="p_context"> static struct vm_area_struct *vma_to_resize(unsigned long addr,</span>
 	if (!vma || vma-&gt;vm_start &gt; addr)
 		return ERR_PTR(-EFAULT);
 
<span class="p_add">+	/*</span>
<span class="p_add">+	 * !old_len is a special case where an attempt is made to &#39;duplicate&#39;</span>
<span class="p_add">+	 * a mapping.  This makes no sense for private mappings as it will</span>
<span class="p_add">+	 * instead create a fresh/new mapping unrelated to the original.  This</span>
<span class="p_add">+	 * is contrary to the basic idea of mremap which creates new mappings</span>
<span class="p_add">+	 * based on the original.  There are no known use cases for this</span>
<span class="p_add">+	 * behavior.  As a result, fail such attempts.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	if (!old_len &amp;&amp; !(vma-&gt;vm_flags &amp; (VM_SHARED | VM_MAYSHARE))) {</span>
<span class="p_add">+		pr_warn_once(&quot;%s (%d): attempted to duplicate a private mapping with mremap.  This is not supported.\n&quot;, current-&gt;comm, current-&gt;pid);</span>
<span class="p_add">+		return ERR_PTR(-EINVAL);</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	if (is_vm_hugetlb_page(vma))
 		return ERR_PTR(-EINVAL);
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



