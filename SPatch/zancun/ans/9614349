
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[net/bpf] 3051bf36c2 BUG: unable to handle kernel paging request at 0000a7cf - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [net/bpf] 3051bf36c2 BUG: unable to handle kernel paging request at 0000a7cf</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=57321">Borislav Petkov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 9, 2017, 11:44 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170309234411.wec53iexfz6skmpl@pd.tnic&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9614349/mbox/"
   >mbox</a>
|
   <a href="/patch/9614349/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9614349/">/patch/9614349/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	A836660417 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  9 Mar 2017 23:44:51 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 98D15286E6
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  9 Mar 2017 23:44:51 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 8D6D5286EB; Thu,  9 Mar 2017 23:44:51 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3436C286E6
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  9 Mar 2017 23:44:51 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754049AbdCIXog (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 9 Mar 2017 18:44:36 -0500
Received: from mx2.suse.de ([195.135.220.15]:59330 &quot;EHLO mx2.suse.de&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752943AbdCIXoe (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 9 Mar 2017 18:44:34 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (charybdis-ext.suse.de [195.135.220.254])
	by mx2.suse.de (Postfix) with ESMTP id D97F7AB5D;
	Thu,  9 Mar 2017 23:44:31 +0000 (UTC)
Date: Fri, 10 Mar 2017 00:44:11 +0100
From: Borislav Petkov &lt;bp@suse.de&gt;
To: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Daniel Borkmann &lt;daniel@iogearbox.net&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;, Kees Cook &lt;keescook@chromium.org&gt;,
	Laura Abbott &lt;labbott@redhat.com&gt;,
	Ingo Molnar &lt;mingo@kernel.org&gt;, Peter Anvin &lt;hpa@zytor.com&gt;,
	Fengguang Wu &lt;fengguang.wu@intel.com&gt;,
	Network Development &lt;netdev@vger.kernel.org&gt;,
	LKML &lt;linux-kernel@vger.kernel.org&gt;, LKP &lt;lkp@01.org&gt;,
	ast@fb.com, the arch/x86 maintainers &lt;x86@kernel.org&gt;,
	&quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;
Subject: Re: [net/bpf] 3051bf36c2 BUG: unable to handle kernel paging request
	at 0000a7cf
Message-ID: &lt;20170309234411.wec53iexfz6skmpl@pd.tnic&gt;
References: &lt;58C19607.6000605@iogearbox.net&gt;
	&lt;CA+55aFyxM--wyvxXGhBOqdJHcdC_kKvGYpv-C5SpYvRNkbEmGw@mail.gmail.com&gt;
	&lt;CA+55aFyu-LHqMaZBaa7VNamxhUR99F4Xr+nL9esLDUBhotopVg@mail.gmail.com&gt;
	&lt;58C19F67.3040509@iogearbox.net&gt; &lt;58C1C9DC.7070509@iogearbox.net&gt;
	&lt;20170309215547.jmdzznlkzaxwu2pf@pd.tnic&gt;
	&lt;20170309220732.ufqoqlawktsi2gao@pd.tnic&gt;
	&lt;58C1D305.8090802@iogearbox.net&gt;
	&lt;20170309224820.5invcnhvr2tl3ges@pd.tnic&gt;
	&lt;CA+55aFy5vi3af5VBuG6ZOdTeKNxqGSq64J-EkrjaRhGVKXPy0A@mail.gmail.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: &lt;CA+55aFy5vi3af5VBuG6ZOdTeKNxqGSq64J-EkrjaRhGVKXPy0A@mail.gmail.com&gt;
User-Agent: NeoMutt/20170113 (1.7.2)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=57321">Borislav Petkov</a> - March 9, 2017, 11:44 p.m.</div>
<pre class="content">
On Thu, Mar 09, 2017 at 03:26:02PM -0800, Linus Torvalds wrote:
<span class="quote">&gt; So should all of commit (&quot;c109bf95992b x86/cpufeature: Remove</span>
<span class="quote">&gt; cpu_has_pge&quot;) just be reverted (and then marked for stable)?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Or do we have some alternate plan?</span>

I think we want to do this:

---

but it is late here so I&#39;d prefer to do a real patch tomorrow when I&#39;m
not almost sleeping on the keyboard. Unless Daniel wants to write one
and test it now.
<span class="quote">
&gt; This has apparently been going on for a long while (it got merged into</span>
<span class="quote">&gt; 4.7), but presumably it only actually _matters_ if lguest is enabled</span>
<span class="quote">&gt; and used and we&#39;ve triggered that lguest_arch_host_init() code.</span>

That&#39;s what I gather too, yes.

What sane code would go and clear X86_FEATURE_PGE?!? :-)))
<span class="quote">
&gt; Maybe it&#39;s the lguest games with PGE that need to be removed?</span>

Well, as far as I can read the comment in lguest_arch_host_init(), it
does some monkey business with switching to the guest kernel where
global pages are not present anymore... or something. So it sounds to me
like lguest would break if we removed the games but I have no idea what
it does with that.

And besides, the small hunk above restores the situation before
(&quot;c109bf95992b x86/cpufeature: Remove cpu_has_pge&quot;) so applying it would
actually be a no-brainer.

Thanks.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=123431">Daniel Borkmann</a> - March 10, 2017, 12:13 a.m.</div>
<pre class="content">
On 03/10/2017 12:44 AM, Borislav Petkov wrote:
<span class="quote">&gt; On Thu, Mar 09, 2017 at 03:26:02PM -0800, Linus Torvalds wrote:</span>
<span class="quote">&gt;&gt; So should all of commit (&quot;c109bf95992b x86/cpufeature: Remove</span>
<span class="quote">&gt;&gt; cpu_has_pge&quot;) just be reverted (and then marked for stable)?</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Or do we have some alternate plan?</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; I think we want to do this:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; diff --git a/arch/x86/include/asm/tlbflush.h b/arch/x86/include/asm/tlbflush.h</span>
<span class="quote">&gt; index 6fa85944af83..fc5abff9b7fd 100644</span>
<span class="quote">&gt; --- a/arch/x86/include/asm/tlbflush.h</span>
<span class="quote">&gt; +++ b/arch/x86/include/asm/tlbflush.h</span>
<span class="quote">&gt; @@ -188,7 +188,7 @@ static inline void __native_flush_tlb_single(unsigned long addr)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static inline void __flush_tlb_all(void)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt; -	if (static_cpu_has(X86_FEATURE_PGE))</span>
<span class="quote">&gt; +	if (boot_cpu_has(X86_FEATURE_PGE))</span>
<span class="quote">&gt;   		__flush_tlb_global();</span>
<span class="quote">&gt;   	else</span>
<span class="quote">&gt;   		__flush_tlb();</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; but it is late here so I&#39;d prefer to do a real patch tomorrow when I&#39;m</span>
<span class="quote">&gt; not almost sleeping on the keyboard. Unless Daniel wants to write one</span>
<span class="quote">&gt; and test it now.</span>

I think we&#39;re in the same time zone. ;) I could send something
official tomorrow cooking a changelog with analysis, but I don&#39;t
mind at all if you want to go ahead with that either. Feel free
to add my SoB or Tested-by to it.
<span class="quote">
&gt;&gt; This has apparently been going on for a long while (it got merged into</span>
<span class="quote">&gt;&gt; 4.7), but presumably it only actually _matters_ if lguest is enabled</span>
<span class="quote">&gt;&gt; and used and we&#39;ve triggered that lguest_arch_host_init() code.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; That&#39;s what I gather too, yes.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; What sane code would go and clear X86_FEATURE_PGE?!? :-)))</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; Maybe it&#39;s the lguest games with PGE that need to be removed?</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Well, as far as I can read the comment in lguest_arch_host_init(), it</span>
<span class="quote">&gt; does some monkey business with switching to the guest kernel where</span>
<span class="quote">&gt; global pages are not present anymore... or something. So it sounds to me</span>
<span class="quote">&gt; like lguest would break if we removed the games but I have no idea what</span>
<span class="quote">&gt; it does with that.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; And besides, the small hunk above restores the situation before</span>
<span class="quote">&gt; (&quot;c109bf95992b x86/cpufeature: Remove cpu_has_pge&quot;) so applying it would</span>
<span class="quote">&gt; actually be a no-brainer.</span>

Agree, looks only that hunk changed in behavior from c109bf95992b
(&quot;x86/cpufeature: Remove cpu_has_pge&quot;).
<span class="quote">
&gt; Thanks.</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/tlbflush.h b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">index 6fa85944af83..fc5abff9b7fd 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_chunk">@@ -188,7 +188,7 @@</span> <span class="p_context"> static inline void __native_flush_tlb_single(unsigned long addr)</span>
 
 static inline void __flush_tlb_all(void)
 {
<span class="p_del">-	if (static_cpu_has(X86_FEATURE_PGE))</span>
<span class="p_add">+	if (boot_cpu_has(X86_FEATURE_PGE))</span>
 		__flush_tlb_global();
 	else
 		__flush_tlb();

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



