
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[3.10,046/319] x86/mm: Disable preemption during CR3 read+write - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [3.10,046/319] x86/mm: Disable preemption during CR3 read+write</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=197">Willy Tarreau</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 5, 2017, 7:20 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1486322486-8024-17-git-send-email-w@1wt.eu&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9556817/mbox/"
   >mbox</a>
|
   <a href="/patch/9556817/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9556817/">/patch/9556817/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	56BD560424 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun,  5 Feb 2017 20:14:31 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4871C205F7
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun,  5 Feb 2017 20:14:31 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 3CE6025EF7; Sun,  5 Feb 2017 20:14:31 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5CE88205F7
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun,  5 Feb 2017 20:14:30 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754180AbdBEUO2 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 5 Feb 2017 15:14:28 -0500
Received: from wtarreau.pck.nerim.net ([62.212.114.60]:27774 &quot;EHLO 1wt.eu&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753357AbdBETYD (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 5 Feb 2017 14:24:03 -0500
Received: (from willy@localhost)
	by pcw.home.local (8.15.2/8.15.2/Submit) id v15JLbcs008151;
	Sun, 5 Feb 2017 20:21:37 +0100
From: Willy Tarreau &lt;w@1wt.eu&gt;
To: linux-kernel@vger.kernel.org, stable@vger.kernel.org, linux@roeck-us.net
Cc: Sebastian Andrzej Siewior &lt;bigeasy@linutronix.de&gt;,
	Borislav Petkov &lt;bp@alien8.de&gt;, Borislav Petkov &lt;bp@suse.de&gt;,
	Brian Gerst &lt;brgerst@gmail.com&gt;, Denys Vlasenko &lt;dvlasenk@redhat.com&gt;,
	&quot;H . Peter Anvin&quot; &lt;hpa@zytor.com&gt;, Josh Poimboeuf &lt;jpoimboe@redhat.com&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Mel Gorman &lt;mgorman@suse.de&gt;, Peter Zijlstra &lt;a.p.zijlstra@chello.nl&gt;,
	Peter Zijlstra &lt;peterz@infradead.org&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;, linux-mm@kvack.org,
	Ingo Molnar &lt;mingo@kernel.org&gt;, Willy Tarreau &lt;w@1wt.eu&gt;
Subject: [PATCH 3.10 046/319] x86/mm: Disable preemption during CR3
	read+write
Date: Sun,  5 Feb 2017 20:20:33 +0100
Message-Id: &lt;1486322486-8024-17-git-send-email-w@1wt.eu&gt;
X-Mailer: git-send-email 2.8.0.rc2.1.gbe9624a
In-Reply-To: &lt;1486322486-8024-1-git-send-email-w@1wt.eu&gt;
References: &lt;1486322486-8024-1-git-send-email-w@1wt.eu&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=latin1
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=197">Willy Tarreau</a> - Feb. 5, 2017, 7:20 p.m.</div>
<pre class="content">
<span class="from">From: Sebastian Andrzej Siewior &lt;bigeasy@linutronix.de&gt;</span>

commit 5cf0791da5c162ebc14b01eb01631cfa7ed4fa6e upstream.

There&#39;s a subtle preemption race on UP kernels:

Usually current-&gt;mm (and therefore mm-&gt;pgd) stays the same during the
lifetime of a task so it does not matter if a task gets preempted during
the read and write of the CR3.

But then, there is this scenario on x86-UP:

TaskA is in do_exit() and exit_mm() sets current-&gt;mm = NULL followed by:

 -&gt; mmput()
 -&gt; exit_mmap()
 -&gt; tlb_finish_mmu()
 -&gt; tlb_flush_mmu()
 -&gt; tlb_flush_mmu_tlbonly()
 -&gt; tlb_flush()
 -&gt; flush_tlb_mm_range()
 -&gt; __flush_tlb_up()
 -&gt; __flush_tlb()
 -&gt;  __native_flush_tlb()

At this point current-&gt;mm is NULL but current-&gt;active_mm still points to
the &quot;old&quot; mm.

Let&#39;s preempt taskA _after_ native_read_cr3() by taskB. TaskB has its
own mm so CR3 has changed.

Now preempt back to taskA. TaskA has no -&gt;mm set so it borrows taskB&#39;s
mm and so CR3 remains unchanged. Once taskA gets active it continues
where it was interrupted and that means it writes its old CR3 value
back. Everything is fine because userland won&#39;t need its memory
anymore.

Now the fun part:

Let&#39;s preempt taskA one more time and get back to taskB. This
time switch_mm() won&#39;t do a thing because oldmm (-&gt;active_mm)
is the same as mm (as per context_switch()). So we remain
with a bad CR3 / PGD and return to userland.

The next thing that happens is handle_mm_fault() with an address for
the execution of its code in userland. handle_mm_fault() realizes that
it has a PTE with proper rights so it returns doing nothing. But the
CPU looks at the wrong PGD and insists that something is wrong and
faults again. And again. And one more timeâ¦

This pagefault circle continues until the scheduler gets tired of it and
puts another task on the CPU. It gets little difficult if the task is a
RT task with a high priority. The system will either freeze or it gets
fixed by the software watchdog thread which usually runs at RT-max prio.
But waiting for the watchdog will increase the latency of the RT task
which is no good.

Fix this by disabling preemption across the critical code section.
<span class="signed-off-by">
Signed-off-by: Sebastian Andrzej Siewior &lt;bigeasy@linutronix.de&gt;</span>
<span class="acked-by">Acked-by: Peter Zijlstra (Intel) &lt;peterz@infradead.org&gt;</span>
<span class="acked-by">Acked-by: Rik van Riel &lt;riel@redhat.com&gt;</span>
<span class="acked-by">Acked-by: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
Cc: Borislav Petkov &lt;bp@alien8.de&gt;
Cc: Borislav Petkov &lt;bp@suse.de&gt;
Cc: Brian Gerst &lt;brgerst@gmail.com&gt;
Cc: Denys Vlasenko &lt;dvlasenk@redhat.com&gt;
Cc: H. Peter Anvin &lt;hpa@zytor.com&gt;
Cc: Josh Poimboeuf &lt;jpoimboe@redhat.com&gt;
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Mel Gorman &lt;mgorman@suse.de&gt;
Cc: Peter Zijlstra &lt;a.p.zijlstra@chello.nl&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Cc: linux-mm@kvack.org
Link: http://lkml.kernel.org/r/1470404259-26290-1-git-send-email-bigeasy@linutronix.de
[ Prettified the changelog. ]
<span class="signed-off-by">Signed-off-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
<span class="signed-off-by">Signed-off-by: Willy Tarreau &lt;w@1wt.eu&gt;</span>
---
 arch/x86/include/asm/tlbflush.h | 7 +++++++
 1 file changed, 7 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/tlbflush.h b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">index 50a7fc0..fb32858 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_chunk">@@ -17,7 +17,14 @@</span> <span class="p_context"></span>
 
 static inline void __native_flush_tlb(void)
 {
<span class="p_add">+	/*</span>
<span class="p_add">+	 * If current-&gt;mm == NULL then we borrow a mm which may change during a</span>
<span class="p_add">+	 * task switch and therefore we must not be preempted while we write CR3</span>
<span class="p_add">+	 * back:</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	preempt_disable();</span>
 	native_write_cr3(native_read_cr3());
<span class="p_add">+	preempt_enable();</span>
 }
 
 static inline void __native_flush_tlb_global_irq_disabled(void)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



