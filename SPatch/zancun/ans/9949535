
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[PATCHv3,08/11] sparc64: update pmdp_invalidate to return old pmd value - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [PATCHv3,08/11] sparc64: update pmdp_invalidate to return old pmd value</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=40781">Kirill A. Shutemov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 12, 2017, 3:39 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170912153941.47012-9-kirill.shutemov@linux.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9949535/mbox/"
   >mbox</a>
|
   <a href="/patch/9949535/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9949535/">/patch/9949535/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	AA8706038F for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 12 Sep 2017 15:41:34 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9F89329019
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 12 Sep 2017 15:41:34 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 93ED42901B; Tue, 12 Sep 2017 15:41:34 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 12AAC29019
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 12 Sep 2017 15:41:34 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751587AbdILPlb (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 12 Sep 2017 11:41:31 -0400
Received: from mga03.intel.com ([134.134.136.65]:55326 &quot;EHLO mga03.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751695AbdILPj7 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 12 Sep 2017 11:39:59 -0400
Received: from orsmga003.jf.intel.com ([10.7.209.27])
	by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
	12 Sep 2017 08:39:58 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.42,383,1500966000&quot;; d=&quot;scan&#39;208&quot;;a=&quot;1013630751&quot;
Received: from black.fi.intel.com ([10.237.72.28])
	by orsmga003.jf.intel.com with ESMTP; 12 Sep 2017 08:39:52 -0700
Received: by black.fi.intel.com (Postfix, from userid 1000)
	id 9481E721; Tue, 12 Sep 2017 18:39:47 +0300 (EEST)
From: &quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Vlastimil Babka &lt;vbabka@suse.cz&gt;, Vineet Gupta &lt;vgupta@synopsys.com&gt;,
	Russell King &lt;linux@armlinux.org.uk&gt;, Will Deacon &lt;will.deacon@arm.com&gt;,
	Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	Ralf Baechle &lt;ralf@linux-mips.org&gt;,
	&quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;,
	&quot;Aneesh Kumar K . V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;,
	Martin Schwidefsky &lt;schwidefsky@de.ibm.com&gt;,
	Heiko Carstens &lt;heiko.carstens@de.ibm.com&gt;,
	Andrea Arcangeli &lt;aarcange@redhat.com&gt;
Cc: linux-arch@vger.kernel.org, linux-mm@kvack.org,
	linux-kernel@vger.kernel.org, Nitin Gupta &lt;nitin.m.gupta@oracle.com&gt;,
	&quot;Kirill A . Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
Subject: [PATCHv3 08/11] sparc64: update pmdp_invalidate to return old pmd
	value
Date: Tue, 12 Sep 2017 18:39:38 +0300
Message-Id: &lt;20170912153941.47012-9-kirill.shutemov@linux.intel.com&gt;
X-Mailer: git-send-email 2.14.1
In-Reply-To: &lt;20170912153941.47012-1-kirill.shutemov@linux.intel.com&gt;
References: &lt;20170912153941.47012-1-kirill.shutemov@linux.intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=40781">Kirill A. Shutemov</a> - Sept. 12, 2017, 3:39 p.m.</div>
<pre class="content">
<span class="from">From: &quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;</span>

It&#39;s required to avoid loosing dirty and accessed bits.
<span class="signed-off-by">
Signed-off-by: Nitin Gupta &lt;nitin.m.gupta@oracle.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt;</span>
---
 arch/sparc/include/asm/pgtable_64.h |  2 +-
 arch/sparc/mm/tlb.c                 | 23 ++++++++++++++++++-----
 2 files changed, 19 insertions(+), 6 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1141">Aneesh Kumar K.V</a> - Sept. 13, 2017, 5:06 a.m.</div>
<pre class="content">
&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt; writes:
<span class="quote">
&gt; From: &quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;</span>


You got the author wrong there.
<span class="quote">
&gt;</span>
<span class="quote">&gt; It&#39;s required to avoid loosing dirty and accessed bits.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Signed-off-by: Nitin Gupta &lt;nitin.m.gupta@oracle.com&gt;</span>
<span class="quote">&gt; Signed-off-by: Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/sparc/include/asm/pgtable_64.h |  2 +-</span>
<span class="quote">&gt;  arch/sparc/mm/tlb.c                 | 23 ++++++++++++++++++-----</span>
<span class="quote">&gt;  2 files changed, 19 insertions(+), 6 deletions(-)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; diff --git a/arch/sparc/include/asm/pgtable_64.h b/arch/sparc/include/asm/pgtable_64.h</span>
<span class="quote">&gt; index 4fefe3762083..83b06c98bb94 100644</span>
<span class="quote">&gt; --- a/arch/sparc/include/asm/pgtable_64.h</span>
<span class="quote">&gt; +++ b/arch/sparc/include/asm/pgtable_64.h</span>
<span class="quote">&gt; @@ -979,7 +979,7 @@ void update_mmu_cache_pmd(struct vm_area_struct *vma, unsigned long addr,</span>
<span class="quote">&gt;  			  pmd_t *pmd);</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;  #define __HAVE_ARCH_PMDP_INVALIDATE</span>
<span class="quote">&gt; -extern void pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt; +extern pmd_t pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt;  			    pmd_t *pmdp);</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;  #define __HAVE_ARCH_PGTABLE_DEPOSIT</span>
<span class="quote">&gt; diff --git a/arch/sparc/mm/tlb.c b/arch/sparc/mm/tlb.c</span>
<span class="quote">&gt; index ee8066c3d96c..d36c65fc55cf 100644</span>
<span class="quote">&gt; --- a/arch/sparc/mm/tlb.c</span>
<span class="quote">&gt; +++ b/arch/sparc/mm/tlb.c</span>
<span class="quote">&gt; @@ -218,17 +218,28 @@ void set_pmd_at(struct mm_struct *mm, unsigned long addr,</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; +static inline pmd_t pmdp_establish(struct vm_area_struct *vma,</span>
<span class="quote">&gt; +		unsigned long address, pmd_t *pmdp, pmd_t pmd)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	pmd_t old;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	{</span>
<span class="quote">&gt; +		old = *pmdp;</span>
<span class="quote">&gt; +	} while (cmpxchg64(&amp;pmdp-&gt;pmd, old.pmd, pmd.pmd) != old.pmd);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	return old;</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * This routine is only called when splitting a THP</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; -void pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt; +pmd_t pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt;  		     pmd_t *pmdp)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -	pmd_t entry = *pmdp;</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	pmd_val(entry) &amp;= ~_PAGE_VALID;</span>
<span class="quote">&gt; +	pmd_t old, entry;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; -	set_pmd_at(vma-&gt;vm_mm, address, pmdp, entry);</span>
<span class="quote">&gt; +	entry = __pmd(pmd_val(*pmdp) &amp; ~_PAGE_VALID);</span>
<span class="quote">&gt; +	old = pmdp_establish(vma, address, pmdp, entry);</span>
<span class="quote">&gt;  	flush_tlb_range(vma, address, address + HPAGE_PMD_SIZE);</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;  	/*</span>
<span class="quote">&gt; @@ -239,6 +250,8 @@ void pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt;  	if ((pmd_val(entry) &amp; _PAGE_PMD_HUGE) &amp;&amp;</span>
<span class="quote">&gt;  	    !is_huge_zero_page(pmd_page(entry)))</span>
<span class="quote">&gt;  		(vma-&gt;vm_mm)-&gt;context.thp_pte_count--;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	return old;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;  void pgtable_trans_huge_deposit(struct mm_struct *mm, pmd_t *pmdp,</span>
<span class="quote">&gt; -- </span>
<span class="quote">&gt; 2.14.1</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/sparc/include/asm/pgtable_64.h b/arch/sparc/include/asm/pgtable_64.h</span>
<span class="p_header">index 4fefe3762083..83b06c98bb94 100644</span>
<span class="p_header">--- a/arch/sparc/include/asm/pgtable_64.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/pgtable_64.h</span>
<span class="p_chunk">@@ -979,7 +979,7 @@</span> <span class="p_context"> void update_mmu_cache_pmd(struct vm_area_struct *vma, unsigned long addr,</span>
 			  pmd_t *pmd);
 
 #define __HAVE_ARCH_PMDP_INVALIDATE
<span class="p_del">-extern void pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
<span class="p_add">+extern pmd_t pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
 			    pmd_t *pmdp);
 
 #define __HAVE_ARCH_PGTABLE_DEPOSIT
<span class="p_header">diff --git a/arch/sparc/mm/tlb.c b/arch/sparc/mm/tlb.c</span>
<span class="p_header">index ee8066c3d96c..d36c65fc55cf 100644</span>
<span class="p_header">--- a/arch/sparc/mm/tlb.c</span>
<span class="p_header">+++ b/arch/sparc/mm/tlb.c</span>
<span class="p_chunk">@@ -218,17 +218,28 @@</span> <span class="p_context"> void set_pmd_at(struct mm_struct *mm, unsigned long addr,</span>
 	}
 }
 
<span class="p_add">+static inline pmd_t pmdp_establish(struct vm_area_struct *vma,</span>
<span class="p_add">+		unsigned long address, pmd_t *pmdp, pmd_t pmd)</span>
<span class="p_add">+{</span>
<span class="p_add">+	pmd_t old;</span>
<span class="p_add">+</span>
<span class="p_add">+	{</span>
<span class="p_add">+		old = *pmdp;</span>
<span class="p_add">+	} while (cmpxchg64(&amp;pmdp-&gt;pmd, old.pmd, pmd.pmd) != old.pmd);</span>
<span class="p_add">+</span>
<span class="p_add">+	return old;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 /*
  * This routine is only called when splitting a THP
  */
<span class="p_del">-void pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
<span class="p_add">+pmd_t pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
 		     pmd_t *pmdp)
 {
<span class="p_del">-	pmd_t entry = *pmdp;</span>
<span class="p_del">-</span>
<span class="p_del">-	pmd_val(entry) &amp;= ~_PAGE_VALID;</span>
<span class="p_add">+	pmd_t old, entry;</span>
 
<span class="p_del">-	set_pmd_at(vma-&gt;vm_mm, address, pmdp, entry);</span>
<span class="p_add">+	entry = __pmd(pmd_val(*pmdp) &amp; ~_PAGE_VALID);</span>
<span class="p_add">+	old = pmdp_establish(vma, address, pmdp, entry);</span>
 	flush_tlb_range(vma, address, address + HPAGE_PMD_SIZE);
 
 	/*
<span class="p_chunk">@@ -239,6 +250,8 @@</span> <span class="p_context"> void pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
 	if ((pmd_val(entry) &amp; _PAGE_PMD_HUGE) &amp;&amp;
 	    !is_huge_zero_page(pmd_page(entry)))
 		(vma-&gt;vm_mm)-&gt;context.thp_pte_count--;
<span class="p_add">+</span>
<span class="p_add">+	return old;</span>
 }
 
 void pgtable_trans_huge_deposit(struct mm_struct *mm, pmd_t *pmdp,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



