
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[1/5] dma-mapping: consolidate dma_{alloc,free}_{attrs,coherent} - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [1/5] dma-mapping: consolidate dma_{alloc,free}_{attrs,coherent}</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 17, 2015, 7:06 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1439795216-32189-2-git-send-email-hch@lst.de&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7023591/mbox/"
   >mbox</a>
|
   <a href="/patch/7023591/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7023591/">/patch/7023591/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 1DA41C05AC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 17 Aug 2015 07:11:29 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 99DD620546
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 17 Aug 2015 07:11:26 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 7A31F205FF
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 17 Aug 2015 07:11:22 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753631AbbHQHK4 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 17 Aug 2015 03:10:56 -0400
Received: from bombadil.infradead.org ([198.137.202.9]:41035 &quot;EHLO
	bombadil.infradead.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753142AbbHQHKu (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 17 Aug 2015 03:10:50 -0400
Received: from 212095007050.public.telering.at ([212.95.7.50] helo=localhost)
	by bombadil.infradead.org with esmtpsa (Exim 4.80.1 #2 (Red Hat
	Linux)) id 1ZREYQ-0000sC-Ko; Mon, 17 Aug 2015 07:10:00 +0000
From: Christoph Hellwig &lt;hch@lst.de&gt;
To: akpm@linux-foundation.org
Cc: arnd@arndb.de, linux@arm.linux.org.uk, catalin.marinas@arm.com,
	will.deacon@arm.com, ysato@users.sourceforge.jp, monstr@monstr.eu,
	jonas@southpole.se, cmetcalf@ezchip.com, gxt@mprc.pku.edu.cn,
	x86@kernel.org, linux-alpha@vger.kernel.org,
	linux-hexagon@vger.kernel.org, linux-ia64@vger.kernel.org,
	linux-mips@linux-mips.org, linuxppc-dev@lists.ozlabs.org,
	linux-s390@vger.kernel.org, linux-sh@vger.kernel.org,
	sparclinux@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH 1/5] dma-mapping: consolidate dma_{alloc, free}_{attrs,
	coherent}
Date: Mon, 17 Aug 2015 09:06:52 +0200
Message-Id: &lt;1439795216-32189-2-git-send-email-hch@lst.de&gt;
X-Mailer: git-send-email 1.9.1
In-Reply-To: &lt;1439795216-32189-1-git-send-email-hch@lst.de&gt;
References: &lt;1439795216-32189-1-git-send-email-hch@lst.de&gt;
X-SRS-Rewrite: SMTP reverse-path rewritten from &lt;hch@infradead.org&gt; by
	bombadil.infradead.org See http://www.infradead.org/rpr.html
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.5 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a> - Aug. 17, 2015, 7:06 a.m.</div>
<pre class="content">
The coherent DMA allocator works the same over all architectures supporting
dma_map operations.

This patch consolidates them and converges the minor differences:

 - the debug_dma helpers are now called from all architectures, including
   those that were previously missing them
 - dma_alloc_from_coherent and dma_release_from_coherent are now always
   called from the generic alloc/free routines instead of the ops
   dma-mapping-common.h always includes dma-coherent.h to get the defintions
   for them, or the stubs if the architecture doesn&#39;t support this feature
 - checks for -&gt;alloc / -&gt;free presence are removed.  There is only one
   magic instead of dma_map_ops without them (mic_dma_ops) and that one
   is x86 only anyway.

Besides that only x86 needs special treatment to replace a default devices
if none is passed and tweak the gfp_flags.  An optional arch hook is provided
for that.
<span class="signed-off-by">
Signed-off-by: Christoph Hellwig &lt;hch@lst.de&gt;</span>
---
 arch/alpha/include/asm/dma-mapping.h      | 18 ----------
 arch/arm/include/asm/dma-mapping.h        | 29 ----------------
 arch/arm/mm/dma-mapping.c                 | 11 ------
 arch/arm64/include/asm/dma-mapping.h      | 33 ------------------
 arch/h8300/include/asm/dma-mapping.h      | 26 --------------
 arch/hexagon/include/asm/dma-mapping.h    | 33 ------------------
 arch/ia64/include/asm/dma-mapping.h       | 25 -------------
 arch/microblaze/include/asm/dma-mapping.h | 31 -----------------
 arch/mips/cavium-octeon/dma-octeon.c      |  8 -----
 arch/mips/include/asm/dma-mapping.h       | 31 -----------------
 arch/mips/loongson64/common/dma-swiotlb.c |  8 -----
 arch/mips/mm/dma-default.c                |  7 ----
 arch/mips/netlogic/common/nlm-dma.c       |  8 -----
 arch/openrisc/include/asm/dma-mapping.h   | 30 ----------------
 arch/powerpc/include/asm/dma-mapping.h    | 33 ------------------
 arch/s390/include/asm/dma-mapping.h       | 31 -----------------
 arch/sh/include/asm/dma-mapping.h         | 37 --------------------
 arch/sparc/include/asm/dma-mapping.h      | 26 --------------
 arch/tile/include/asm/dma-mapping.h       | 27 --------------
 arch/unicore32/include/asm/dma-mapping.h  | 24 -------------
 arch/x86/include/asm/dma-mapping.h        | 16 ++-------
 arch/x86/kernel/pci-dma.c                 | 49 +++++---------------------
 drivers/xen/swiotlb-xen.c                 |  6 ----
 include/asm-generic/dma-mapping-common.h  | 58 +++++++++++++++++++++++++++++++
 24 files changed, 70 insertions(+), 535 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/alpha/include/asm/dma-mapping.h b/arch/alpha/include/asm/dma-mapping.h</span>
<span class="p_header">index dfa32f0..9fef5bd 100644</span>
<span class="p_header">--- a/arch/alpha/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/alpha/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -12,24 +12,6 @@</span> <span class="p_context"> static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 
 #include &lt;asm-generic/dma-mapping-common.h&gt;
 
<span class="p_del">-#define dma_alloc_coherent(d,s,h,f)	dma_alloc_attrs(d,s,h,f,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				    dma_addr_t *dma_handle, gfp_t gfp,</span>
<span class="p_del">-				    struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return get_dma_ops(dev)-&gt;alloc(dev, size, dma_handle, gfp, attrs);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-#define dma_free_coherent(d,s,c,h) dma_free_attrs(d,s,c,h,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				  void *vaddr, dma_addr_t dma_handle,</span>
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	get_dma_ops(dev)-&gt;free(dev, size, vaddr, dma_handle, attrs);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
 {
 	return get_dma_ops(dev)-&gt;mapping_error(dev, dma_addr);
<span class="p_header">diff --git a/arch/arm/include/asm/dma-mapping.h b/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_header">index b52101d..2ae3424 100644</span>
<span class="p_header">--- a/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -8,7 +8,6 @@</span> <span class="p_context"></span>
 #include &lt;linux/dma-attrs.h&gt;
 #include &lt;linux/dma-debug.h&gt;
 
<span class="p_del">-#include &lt;asm-generic/dma-coherent.h&gt;</span>
 #include &lt;asm/memory.h&gt;
 
 #include &lt;xen/xen.h&gt;
<span class="p_chunk">@@ -209,21 +208,6 @@</span> <span class="p_context"> extern int arm_dma_set_mask(struct device *dev, u64 dma_mask);</span>
 extern void *arm_dma_alloc(struct device *dev, size_t size, dma_addr_t *handle,
 			   gfp_t gfp, struct dma_attrs *attrs);
 
<span class="p_del">-#define dma_alloc_coherent(d, s, h, f) dma_alloc_attrs(d, s, h, f, NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				       dma_addr_t *dma_handle, gfp_t flag,</span>
<span class="p_del">-				       struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-	void *cpu_addr;</span>
<span class="p_del">-	BUG_ON(!ops);</span>
<span class="p_del">-</span>
<span class="p_del">-	cpu_addr = ops-&gt;alloc(dev, size, dma_handle, flag, attrs);</span>
<span class="p_del">-	debug_dma_alloc_coherent(dev, size, *dma_handle, cpu_addr);</span>
<span class="p_del">-	return cpu_addr;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 /**
  * arm_dma_free - free memory allocated by arm_dma_alloc
  * @dev: valid struct device pointer, or NULL for ISA and EISA-like devices
<span class="p_chunk">@@ -241,19 +225,6 @@</span> <span class="p_context"> static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
 extern void arm_dma_free(struct device *dev, size_t size, void *cpu_addr,
 			 dma_addr_t handle, struct dma_attrs *attrs);
 
<span class="p_del">-#define dma_free_coherent(d, s, c, h) dma_free_attrs(d, s, c, h, NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				     void *cpu_addr, dma_addr_t dma_handle,</span>
<span class="p_del">-				     struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-	BUG_ON(!ops);</span>
<span class="p_del">-</span>
<span class="p_del">-	debug_dma_free_coherent(dev, size, cpu_addr, dma_handle);</span>
<span class="p_del">-	ops-&gt;free(dev, size, cpu_addr, dma_handle, attrs);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 /**
  * arm_dma_mmap - map a coherent DMA allocation into user space
  * @dev: valid struct device pointer, or NULL for ISA and EISA-like devices
<span class="p_header">diff --git a/arch/arm/mm/dma-mapping.c b/arch/arm/mm/dma-mapping.c</span>
<span class="p_header">index cba12f3..e556e0e 100644</span>
<span class="p_header">--- a/arch/arm/mm/dma-mapping.c</span>
<span class="p_header">+++ b/arch/arm/mm/dma-mapping.c</span>
<span class="p_chunk">@@ -671,10 +671,6 @@</span> <span class="p_context"> void *arm_dma_alloc(struct device *dev, size_t size, dma_addr_t *handle,</span>
 		    gfp_t gfp, struct dma_attrs *attrs)
 {
 	pgprot_t prot = __get_dma_pgprot(attrs, PAGE_KERNEL);
<span class="p_del">-	void *memory;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (dma_alloc_from_coherent(dev, size, handle, &amp;memory))</span>
<span class="p_del">-		return memory;</span>
 
 	return __dma_alloc(dev, size, handle, gfp, prot, false,
 			   attrs, __builtin_return_address(0));
<span class="p_chunk">@@ -684,10 +680,6 @@</span> <span class="p_context"> static void *arm_coherent_dma_alloc(struct device *dev, size_t size,</span>
 	dma_addr_t *handle, gfp_t gfp, struct dma_attrs *attrs)
 {
 	pgprot_t prot = __get_dma_pgprot(attrs, PAGE_KERNEL);
<span class="p_del">-	void *memory;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (dma_alloc_from_coherent(dev, size, handle, &amp;memory))</span>
<span class="p_del">-		return memory;</span>
 
 	return __dma_alloc(dev, size, handle, gfp, prot, true,
 			   attrs, __builtin_return_address(0));
<span class="p_chunk">@@ -748,9 +740,6 @@</span> <span class="p_context"> static void __arm_dma_free(struct device *dev, size_t size, void *cpu_addr,</span>
 	struct page *page = pfn_to_page(dma_to_pfn(dev, handle));
 	bool want_vaddr = !dma_get_attr(DMA_ATTR_NO_KERNEL_MAPPING, attrs);
 
<span class="p_del">-	if (dma_release_from_coherent(dev, get_order(size), cpu_addr))</span>
<span class="p_del">-		return;</span>
<span class="p_del">-</span>
 	size = PAGE_ALIGN(size);
 
 	if (is_coherent || nommu()) {
<span class="p_header">diff --git a/arch/arm64/include/asm/dma-mapping.h b/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_header">index f0d6d0b..5e11b3f 100644</span>
<span class="p_header">--- a/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -22,8 +22,6 @@</span> <span class="p_context"></span>
 #include &lt;linux/types.h&gt;
 #include &lt;linux/vmalloc.h&gt;
 
<span class="p_del">-#include &lt;asm-generic/dma-coherent.h&gt;</span>
<span class="p_del">-</span>
 #include &lt;xen/xen.h&gt;
 #include &lt;asm/xen/hypervisor.h&gt;
 
<span class="p_chunk">@@ -120,37 +118,6 @@</span> <span class="p_context"> static inline void dma_mark_clean(void *addr, size_t size)</span>
 {
 }
 
<span class="p_del">-#define dma_alloc_coherent(d, s, h, f)	dma_alloc_attrs(d, s, h, f, NULL)</span>
<span class="p_del">-#define dma_free_coherent(d, s, h, f)	dma_free_attrs(d, s, h, f, NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				    dma_addr_t *dma_handle, gfp_t flags,</span>
<span class="p_del">-				    struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-	void *vaddr;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (dma_alloc_from_coherent(dev, size, dma_handle, &amp;vaddr))</span>
<span class="p_del">-		return vaddr;</span>
<span class="p_del">-</span>
<span class="p_del">-	vaddr = ops-&gt;alloc(dev, size, dma_handle, flags, attrs);</span>
<span class="p_del">-	debug_dma_alloc_coherent(dev, size, *dma_handle, vaddr);</span>
<span class="p_del">-	return vaddr;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				  void *vaddr, dma_addr_t dev_addr,</span>
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (dma_release_from_coherent(dev, get_order(size), vaddr))</span>
<span class="p_del">-		return;</span>
<span class="p_del">-</span>
<span class="p_del">-	debug_dma_free_coherent(dev, size, vaddr, dev_addr);</span>
<span class="p_del">-	ops-&gt;free(dev, size, vaddr, dev_addr, attrs);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 /*
  * There is no dma_cache_sync() implementation, so just return NULL here.
  */
<span class="p_header">diff --git a/arch/h8300/include/asm/dma-mapping.h b/arch/h8300/include/asm/dma-mapping.h</span>
<span class="p_header">index 6e67a909..826aa9b 100644</span>
<span class="p_header">--- a/arch/h8300/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/h8300/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -1,8 +1,6 @@</span> <span class="p_context"></span>
 #ifndef _H8300_DMA_MAPPING_H
 #define _H8300_DMA_MAPPING_H
 
<span class="p_del">-#include &lt;asm-generic/dma-coherent.h&gt;</span>
<span class="p_del">-</span>
 extern struct dma_map_ops h8300_dma_map_ops;
 
 static inline struct dma_map_ops *get_dma_ops(struct device *dev)
<span class="p_chunk">@@ -25,30 +23,6 @@</span> <span class="p_context"> static inline int dma_set_mask(struct device *dev, u64 mask)</span>
 #define dma_alloc_noncoherent(d, s, h, f) dma_alloc_coherent(d, s, h, f)
 #define dma_free_noncoherent(d, s, v, h) dma_free_coherent(d, s, v, h)
 
<span class="p_del">-#define dma_alloc_coherent(d, s, h, f) dma_alloc_attrs(d, s, h, f, NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				    dma_addr_t *dma_handle, gfp_t flag,</span>
<span class="p_del">-				    struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-	void *memory;</span>
<span class="p_del">-</span>
<span class="p_del">-	memory = ops-&gt;alloc(dev, size, dma_handle, flag, attrs);</span>
<span class="p_del">-	return memory;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-#define dma_free_coherent(d, s, c, h) dma_free_attrs(d, s, c, h, NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				  void *cpu_addr, dma_addr_t dma_handle,</span>
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	ops-&gt;free(dev, size, cpu_addr, dma_handle, attrs);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
 {
 	return 0;
<span class="p_header">diff --git a/arch/hexagon/include/asm/dma-mapping.h b/arch/hexagon/include/asm/dma-mapping.h</span>
<span class="p_header">index 1696542..c20d3ca 100644</span>
<span class="p_header">--- a/arch/hexagon/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/hexagon/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -70,37 +70,4 @@</span> <span class="p_context"> static inline int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)</span>
 	return (dma_addr == bad_dma_address);
 }
 
<span class="p_del">-#define dma_alloc_coherent(d,s,h,f)	dma_alloc_attrs(d,s,h,f,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				    dma_addr_t *dma_handle, gfp_t flag,</span>
<span class="p_del">-				    struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	void *ret;</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	BUG_ON(!dma_ops);</span>
<span class="p_del">-</span>
<span class="p_del">-	ret = ops-&gt;alloc(dev, size, dma_handle, flag, attrs);</span>
<span class="p_del">-</span>
<span class="p_del">-	debug_dma_alloc_coherent(dev, size, *dma_handle, ret);</span>
<span class="p_del">-</span>
<span class="p_del">-	return ret;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-#define dma_free_coherent(d,s,c,h) dma_free_attrs(d,s,c,h,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				  void *cpu_addr, dma_addr_t dma_handle,</span>
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *dma_ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	BUG_ON(!dma_ops);</span>
<span class="p_del">-</span>
<span class="p_del">-	dma_ops-&gt;free(dev, size, cpu_addr, dma_handle, attrs);</span>
<span class="p_del">-</span>
<span class="p_del">-	debug_dma_free_coherent(dev, size, cpu_addr, dma_handle);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 #endif
<span class="p_header">diff --git a/arch/ia64/include/asm/dma-mapping.h b/arch/ia64/include/asm/dma-mapping.h</span>
<span class="p_header">index cf3ab7e..d36f83c 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -23,31 +23,6 @@</span> <span class="p_context"> extern void machvec_dma_sync_single(struct device *, dma_addr_t, size_t,</span>
 extern void machvec_dma_sync_sg(struct device *, struct scatterlist *, int,
 				enum dma_data_direction);
 
<span class="p_del">-#define dma_alloc_coherent(d,s,h,f)	dma_alloc_attrs(d,s,h,f,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				    dma_addr_t *daddr, gfp_t gfp,</span>
<span class="p_del">-				    struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = platform_dma_get_ops(dev);</span>
<span class="p_del">-	void *caddr;</span>
<span class="p_del">-</span>
<span class="p_del">-	caddr = ops-&gt;alloc(dev, size, daddr, gfp, attrs);</span>
<span class="p_del">-	debug_dma_alloc_coherent(dev, size, *daddr, caddr);</span>
<span class="p_del">-	return caddr;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-#define dma_free_coherent(d,s,c,h) dma_free_attrs(d,s,c,h,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				  void *caddr, dma_addr_t daddr,</span>
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = platform_dma_get_ops(dev);</span>
<span class="p_del">-	debug_dma_free_coherent(dev, size, caddr, daddr);</span>
<span class="p_del">-	ops-&gt;free(dev, size, caddr, daddr, attrs);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 #define dma_alloc_noncoherent(d, s, h, f) dma_alloc_coherent(d, s, h, f)
 #define dma_free_noncoherent(d, s, v, h) dma_free_coherent(d, s, v, h)
 
<span class="p_header">diff --git a/arch/microblaze/include/asm/dma-mapping.h b/arch/microblaze/include/asm/dma-mapping.h</span>
<span class="p_header">index ab35372..801dbe2 100644</span>
<span class="p_header">--- a/arch/microblaze/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/microblaze/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -27,7 +27,6 @@</span> <span class="p_context"></span>
 #include &lt;linux/dma-debug.h&gt;
 #include &lt;linux/dma-attrs.h&gt;
 #include &lt;asm/io.h&gt;
<span class="p_del">-#include &lt;asm-generic/dma-coherent.h&gt;</span>
 #include &lt;asm/cacheflush.h&gt;
 
 #define DMA_ERROR_CODE		(~(dma_addr_t)0x0)
<span class="p_chunk">@@ -102,36 +101,6 @@</span> <span class="p_context"> static inline int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)</span>
 #define dma_alloc_noncoherent(d, s, h, f) dma_alloc_coherent(d, s, h, f)
 #define dma_free_noncoherent(d, s, v, h) dma_free_coherent(d, s, v, h)
 
<span class="p_del">-#define dma_alloc_coherent(d, s, h, f) dma_alloc_attrs(d, s, h, f, NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				    dma_addr_t *dma_handle, gfp_t flag,</span>
<span class="p_del">-				    struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-	void *memory;</span>
<span class="p_del">-</span>
<span class="p_del">-	BUG_ON(!ops);</span>
<span class="p_del">-</span>
<span class="p_del">-	memory = ops-&gt;alloc(dev, size, dma_handle, flag, attrs);</span>
<span class="p_del">-</span>
<span class="p_del">-	debug_dma_alloc_coherent(dev, size, *dma_handle, memory);</span>
<span class="p_del">-	return memory;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-#define dma_free_coherent(d,s,c,h) dma_free_attrs(d, s, c, h, NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				  void *cpu_addr, dma_addr_t dma_handle,</span>
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	BUG_ON(!ops);</span>
<span class="p_del">-	debug_dma_free_coherent(dev, size, cpu_addr, dma_handle);</span>
<span class="p_del">-	ops-&gt;free(dev, size, cpu_addr, dma_handle, attrs);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline void dma_cache_sync(struct device *dev, void *vaddr, size_t size,
 		enum dma_data_direction direction)
 {
<span class="p_header">diff --git a/arch/mips/cavium-octeon/dma-octeon.c b/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="p_header">index d8960d4..2cd45f5 100644</span>
<span class="p_header">--- a/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="p_header">+++ b/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="p_chunk">@@ -161,9 +161,6 @@</span> <span class="p_context"> static void *octeon_dma_alloc_coherent(struct device *dev, size_t size,</span>
 {
 	void *ret;
 
<span class="p_del">-	if (dma_alloc_from_coherent(dev, size, dma_handle, &amp;ret))</span>
<span class="p_del">-		return ret;</span>
<span class="p_del">-</span>
 	/* ignore region specifiers */
 	gfp &amp;= ~(__GFP_DMA | __GFP_DMA32 | __GFP_HIGHMEM);
 
<span class="p_chunk">@@ -194,11 +191,6 @@</span> <span class="p_context"> static void *octeon_dma_alloc_coherent(struct device *dev, size_t size,</span>
 static void octeon_dma_free_coherent(struct device *dev, size_t size,
 	void *vaddr, dma_addr_t dma_handle, struct dma_attrs *attrs)
 {
<span class="p_del">-	int order = get_order(size);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (dma_release_from_coherent(dev, order, vaddr))</span>
<span class="p_del">-		return;</span>
<span class="p_del">-</span>
 	swiotlb_free_coherent(dev, size, vaddr, dma_handle);
 }
 
<span class="p_header">diff --git a/arch/mips/include/asm/dma-mapping.h b/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_header">index 360b338..b197595 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -4,7 +4,6 @@</span> <span class="p_context"></span>
 #include &lt;linux/scatterlist.h&gt;
 #include &lt;asm/dma-coherence.h&gt;
 #include &lt;asm/cache.h&gt;
<span class="p_del">-#include &lt;asm-generic/dma-coherent.h&gt;</span>
 
 #ifndef CONFIG_SGI_IP27 /* Kludge to fix 2.6.39 build for IP27 */
 #include &lt;dma-coherence.h&gt;
<span class="p_chunk">@@ -65,36 +64,6 @@</span> <span class="p_context"> dma_set_mask(struct device *dev, u64 mask)</span>
 extern void dma_cache_sync(struct device *dev, void *vaddr, size_t size,
 	       enum dma_data_direction direction);
 
<span class="p_del">-#define dma_alloc_coherent(d,s,h,f)	dma_alloc_attrs(d,s,h,f,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				    dma_addr_t *dma_handle, gfp_t gfp,</span>
<span class="p_del">-				    struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	void *ret;</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	ret = ops-&gt;alloc(dev, size, dma_handle, gfp, attrs);</span>
<span class="p_del">-</span>
<span class="p_del">-	debug_dma_alloc_coherent(dev, size, *dma_handle, ret);</span>
<span class="p_del">-</span>
<span class="p_del">-	return ret;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-#define dma_free_coherent(d,s,c,h) dma_free_attrs(d,s,c,h,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				  void *vaddr, dma_addr_t dma_handle,</span>
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	ops-&gt;free(dev, size, vaddr, dma_handle, attrs);</span>
<span class="p_del">-</span>
<span class="p_del">-	debug_dma_free_coherent(dev, size, vaddr, dma_handle);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
 void *dma_alloc_noncoherent(struct device *dev, size_t size,
 			   dma_addr_t *dma_handle, gfp_t flag);
 
<span class="p_header">diff --git a/arch/mips/loongson64/common/dma-swiotlb.c b/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="p_header">index 2c6b989..ef9da3b 100644</span>
<span class="p_header">--- a/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="p_header">+++ b/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="p_chunk">@@ -14,9 +14,6 @@</span> <span class="p_context"> static void *loongson_dma_alloc_coherent(struct device *dev, size_t size,</span>
 {
 	void *ret;
 
<span class="p_del">-	if (dma_alloc_from_coherent(dev, size, dma_handle, &amp;ret))</span>
<span class="p_del">-		return ret;</span>
<span class="p_del">-</span>
 	/* ignore region specifiers */
 	gfp &amp;= ~(__GFP_DMA | __GFP_DMA32 | __GFP_HIGHMEM);
 
<span class="p_chunk">@@ -46,11 +43,6 @@</span> <span class="p_context"> static void *loongson_dma_alloc_coherent(struct device *dev, size_t size,</span>
 static void loongson_dma_free_coherent(struct device *dev, size_t size,
 		void *vaddr, dma_addr_t dma_handle, struct dma_attrs *attrs)
 {
<span class="p_del">-	int order = get_order(size);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (dma_release_from_coherent(dev, order, vaddr))</span>
<span class="p_del">-		return;</span>
<span class="p_del">-</span>
 	swiotlb_free_coherent(dev, size, vaddr, dma_handle);
 }
 
<span class="p_header">diff --git a/arch/mips/mm/dma-default.c b/arch/mips/mm/dma-default.c</span>
<span class="p_header">index eeaf024..8cad422 100644</span>
<span class="p_header">--- a/arch/mips/mm/dma-default.c</span>
<span class="p_header">+++ b/arch/mips/mm/dma-default.c</span>
<span class="p_chunk">@@ -137,9 +137,6 @@</span> <span class="p_context"> static void *mips_dma_alloc_coherent(struct device *dev, size_t size,</span>
 	struct page *page = NULL;
 	unsigned int count = PAGE_ALIGN(size) &gt;&gt; PAGE_SHIFT;
 
<span class="p_del">-	if (dma_alloc_from_coherent(dev, size, dma_handle, &amp;ret))</span>
<span class="p_del">-		return ret;</span>
<span class="p_del">-</span>
 	gfp = massage_gfp_flags(dev, gfp);
 
 	if (IS_ENABLED(CONFIG_DMA_CMA) &amp;&amp; !(gfp &amp; GFP_ATOMIC))
<span class="p_chunk">@@ -176,13 +173,9 @@</span> <span class="p_context"> static void mips_dma_free_coherent(struct device *dev, size_t size, void *vaddr,</span>
 	dma_addr_t dma_handle, struct dma_attrs *attrs)
 {
 	unsigned long addr = (unsigned long) vaddr;
<span class="p_del">-	int order = get_order(size);</span>
 	unsigned int count = PAGE_ALIGN(size) &gt;&gt; PAGE_SHIFT;
 	struct page *page = NULL;
 
<span class="p_del">-	if (dma_release_from_coherent(dev, order, vaddr))</span>
<span class="p_del">-		return;</span>
<span class="p_del">-</span>
 	plat_unmap_dma_mem(dev, dma_handle, size, DMA_BIDIRECTIONAL);
 
 	if (!plat_device_is_coherent(dev) &amp;&amp; !hw_coherentio)
<span class="p_header">diff --git a/arch/mips/netlogic/common/nlm-dma.c b/arch/mips/netlogic/common/nlm-dma.c</span>
<span class="p_header">index f3d4ae8..3e4f3bb 100644</span>
<span class="p_header">--- a/arch/mips/netlogic/common/nlm-dma.c</span>
<span class="p_header">+++ b/arch/mips/netlogic/common/nlm-dma.c</span>
<span class="p_chunk">@@ -49,9 +49,6 @@</span> <span class="p_context"> static void *nlm_dma_alloc_coherent(struct device *dev, size_t size,</span>
 {
 	void *ret;
 
<span class="p_del">-	if (dma_alloc_from_coherent(dev, size, dma_handle, &amp;ret))</span>
<span class="p_del">-		return ret;</span>
<span class="p_del">-</span>
 	/* ignore region specifiers */
 	gfp &amp;= ~(__GFP_DMA | __GFP_DMA32 | __GFP_HIGHMEM);
 
<span class="p_chunk">@@ -69,11 +66,6 @@</span> <span class="p_context"> static void *nlm_dma_alloc_coherent(struct device *dev, size_t size,</span>
 static void nlm_dma_free_coherent(struct device *dev, size_t size,
 	void *vaddr, dma_addr_t dma_handle, struct dma_attrs *attrs)
 {
<span class="p_del">-	int order = get_order(size);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (dma_release_from_coherent(dev, order, vaddr))</span>
<span class="p_del">-		return;</span>
<span class="p_del">-</span>
 	swiotlb_free_coherent(dev, size, vaddr, dma_handle);
 }
 
<span class="p_header">diff --git a/arch/openrisc/include/asm/dma-mapping.h b/arch/openrisc/include/asm/dma-mapping.h</span>
<span class="p_header">index fab8628..a81d6f6 100644</span>
<span class="p_header">--- a/arch/openrisc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/openrisc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -23,7 +23,6 @@</span> <span class="p_context"></span>
  */
 
 #include &lt;linux/dma-debug.h&gt;
<span class="p_del">-#include &lt;asm-generic/dma-coherent.h&gt;</span>
 #include &lt;linux/kmemcheck.h&gt;
 #include &lt;linux/dma-mapping.h&gt;
 
<span class="p_chunk">@@ -38,35 +37,6 @@</span> <span class="p_context"> static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 
 #include &lt;asm-generic/dma-mapping-common.h&gt;
 
<span class="p_del">-#define dma_alloc_coherent(d,s,h,f) dma_alloc_attrs(d,s,h,f,NULL) </span>
<span class="p_del">-</span>
<span class="p_del">-static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				    dma_addr_t *dma_handle, gfp_t gfp,</span>
<span class="p_del">-				    struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-	void *memory;</span>
<span class="p_del">-</span>
<span class="p_del">-	memory = ops-&gt;alloc(dev, size, dma_handle, gfp, attrs);</span>
<span class="p_del">-</span>
<span class="p_del">-	debug_dma_alloc_coherent(dev, size, *dma_handle, memory);</span>
<span class="p_del">-</span>
<span class="p_del">-	return memory;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-#define dma_free_coherent(d,s,c,h) dma_free_attrs(d,s,c,h,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				  void *cpu_addr, dma_addr_t dma_handle,</span>
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	debug_dma_free_coherent(dev, size, cpu_addr, dma_handle);</span>
<span class="p_del">-</span>
<span class="p_del">-	ops-&gt;free(dev, size, cpu_addr, dma_handle, attrs);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline void *dma_alloc_noncoherent(struct device *dev, size_t size,
 					  dma_addr_t *dma_handle, gfp_t gfp)
 {
<span class="p_header">diff --git a/arch/powerpc/include/asm/dma-mapping.h b/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_header">index 9103687..846c630 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -137,39 +137,6 @@</span> <span class="p_context"> extern int dma_set_mask(struct device *dev, u64 dma_mask);</span>
 extern int __dma_set_mask(struct device *dev, u64 dma_mask);
 extern u64 __dma_get_required_mask(struct device *dev);
 
<span class="p_del">-#define dma_alloc_coherent(d,s,h,f)	dma_alloc_attrs(d,s,h,f,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				    dma_addr_t *dma_handle, gfp_t flag,</span>
<span class="p_del">-				    struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *dma_ops = get_dma_ops(dev);</span>
<span class="p_del">-	void *cpu_addr;</span>
<span class="p_del">-</span>
<span class="p_del">-	BUG_ON(!dma_ops);</span>
<span class="p_del">-</span>
<span class="p_del">-	cpu_addr = dma_ops-&gt;alloc(dev, size, dma_handle, flag, attrs);</span>
<span class="p_del">-</span>
<span class="p_del">-	debug_dma_alloc_coherent(dev, size, *dma_handle, cpu_addr);</span>
<span class="p_del">-</span>
<span class="p_del">-	return cpu_addr;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-#define dma_free_coherent(d,s,c,h) dma_free_attrs(d,s,c,h,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				  void *cpu_addr, dma_addr_t dma_handle,</span>
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *dma_ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	BUG_ON(!dma_ops);</span>
<span class="p_del">-</span>
<span class="p_del">-	debug_dma_free_coherent(dev, size, cpu_addr, dma_handle);</span>
<span class="p_del">-</span>
<span class="p_del">-	dma_ops-&gt;free(dev, size, cpu_addr, dma_handle, attrs);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
 {
 	struct dma_map_ops *dma_ops = get_dma_ops(dev);
<span class="p_header">diff --git a/arch/s390/include/asm/dma-mapping.h b/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_header">index 9d39596..c29c9c7 100644</span>
<span class="p_header">--- a/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -56,35 +56,4 @@</span> <span class="p_context"> static inline int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)</span>
 	return dma_addr == DMA_ERROR_CODE;
 }
 
<span class="p_del">-#define dma_alloc_coherent(d, s, h, f) dma_alloc_attrs(d, s, h, f, NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				    dma_addr_t *dma_handle, gfp_t flags,</span>
<span class="p_del">-				    struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-	void *cpu_addr;</span>
<span class="p_del">-</span>
<span class="p_del">-	BUG_ON(!ops);</span>
<span class="p_del">-</span>
<span class="p_del">-	cpu_addr = ops-&gt;alloc(dev, size, dma_handle, flags, attrs);</span>
<span class="p_del">-	debug_dma_alloc_coherent(dev, size, *dma_handle, cpu_addr);</span>
<span class="p_del">-</span>
<span class="p_del">-	return cpu_addr;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-#define dma_free_coherent(d, s, c, h) dma_free_attrs(d, s, c, h, NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				  void *cpu_addr, dma_addr_t dma_handle,</span>
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	BUG_ON(!ops);</span>
<span class="p_del">-</span>
<span class="p_del">-	debug_dma_free_coherent(dev, size, cpu_addr, dma_handle);</span>
<span class="p_del">-	ops-&gt;free(dev, size, cpu_addr, dma_handle, attrs);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 #endif /* _ASM_S390_DMA_MAPPING_H */
<span class="p_header">diff --git a/arch/sh/include/asm/dma-mapping.h b/arch/sh/include/asm/dma-mapping.h</span>
<span class="p_header">index b437f2c..3c78059 100644</span>
<span class="p_header">--- a/arch/sh/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/sh/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -9,7 +9,6 @@</span> <span class="p_context"> static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 	return dma_ops;
 }
 
<span class="p_del">-#include &lt;asm-generic/dma-coherent.h&gt;</span>
 #include &lt;asm-generic/dma-mapping-common.h&gt;
 
 static inline int dma_supported(struct device *dev, u64 mask)
<span class="p_chunk">@@ -53,42 +52,6 @@</span> <span class="p_context"> static inline int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)</span>
 	return dma_addr == 0;
 }
 
<span class="p_del">-#define dma_alloc_coherent(d,s,h,f)	dma_alloc_attrs(d,s,h,f,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				    dma_addr_t *dma_handle, gfp_t gfp,</span>
<span class="p_del">-				    struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-	void *memory;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (dma_alloc_from_coherent(dev, size, dma_handle, &amp;memory))</span>
<span class="p_del">-		return memory;</span>
<span class="p_del">-	if (!ops-&gt;alloc)</span>
<span class="p_del">-		return NULL;</span>
<span class="p_del">-</span>
<span class="p_del">-	memory = ops-&gt;alloc(dev, size, dma_handle, gfp, attrs);</span>
<span class="p_del">-	debug_dma_alloc_coherent(dev, size, *dma_handle, memory);</span>
<span class="p_del">-</span>
<span class="p_del">-	return memory;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-#define dma_free_coherent(d,s,c,h) dma_free_attrs(d,s,c,h,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				  void *vaddr, dma_addr_t dma_handle,</span>
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (dma_release_from_coherent(dev, get_order(size), vaddr))</span>
<span class="p_del">-		return;</span>
<span class="p_del">-</span>
<span class="p_del">-	debug_dma_free_coherent(dev, size, vaddr, dma_handle);</span>
<span class="p_del">-	if (ops-&gt;free)</span>
<span class="p_del">-		ops-&gt;free(dev, size, vaddr, dma_handle, attrs);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 /* arch/sh/mm/consistent.c */
 extern void *dma_generic_alloc_coherent(struct device *dev, size_t size,
 					dma_addr_t *dma_addr, gfp_t flag,
<span class="p_header">diff --git a/arch/sparc/include/asm/dma-mapping.h b/arch/sparc/include/asm/dma-mapping.h</span>
<span class="p_header">index 7e064c6..a8c6784 100644</span>
<span class="p_header">--- a/arch/sparc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -41,32 +41,6 @@</span> <span class="p_context"> static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 
 #include &lt;asm-generic/dma-mapping-common.h&gt;
 
<span class="p_del">-#define dma_alloc_coherent(d,s,h,f)	dma_alloc_attrs(d,s,h,f,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				    dma_addr_t *dma_handle, gfp_t flag,</span>
<span class="p_del">-				    struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-	void *cpu_addr;</span>
<span class="p_del">-</span>
<span class="p_del">-	cpu_addr = ops-&gt;alloc(dev, size, dma_handle, flag, attrs);</span>
<span class="p_del">-	debug_dma_alloc_coherent(dev, size, *dma_handle, cpu_addr);</span>
<span class="p_del">-	return cpu_addr;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-#define dma_free_coherent(d,s,c,h) dma_free_attrs(d,s,c,h,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				  void *cpu_addr, dma_addr_t dma_handle,</span>
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	debug_dma_free_coherent(dev, size, cpu_addr, dma_handle);</span>
<span class="p_del">-	ops-&gt;free(dev, size, cpu_addr, dma_handle, attrs);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
 {
 	debug_dma_mapping_error(dev, dma_addr);
<span class="p_header">diff --git a/arch/tile/include/asm/dma-mapping.h b/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_header">index 1eae359..4aba10e 100644</span>
<span class="p_header">--- a/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -116,34 +116,7 @@</span> <span class="p_context"> dma_set_mask(struct device *dev, u64 mask)</span>
 	return 0;
 }
 
<span class="p_del">-static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				    dma_addr_t *dma_handle, gfp_t flag,</span>
<span class="p_del">-				    struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *dma_ops = get_dma_ops(dev);</span>
<span class="p_del">-	void *cpu_addr;</span>
<span class="p_del">-</span>
<span class="p_del">-	cpu_addr = dma_ops-&gt;alloc(dev, size, dma_handle, flag, attrs);</span>
<span class="p_del">-</span>
<span class="p_del">-	debug_dma_alloc_coherent(dev, size, *dma_handle, cpu_addr);</span>
<span class="p_del">-</span>
<span class="p_del">-	return cpu_addr;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				  void *cpu_addr, dma_addr_t dma_handle,</span>
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *dma_ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	debug_dma_free_coherent(dev, size, cpu_addr, dma_handle);</span>
<span class="p_del">-</span>
<span class="p_del">-	dma_ops-&gt;free(dev, size, cpu_addr, dma_handle, attrs);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-#define dma_alloc_coherent(d, s, h, f) dma_alloc_attrs(d, s, h, f, NULL)</span>
 #define dma_alloc_noncoherent(d, s, h, f) dma_alloc_attrs(d, s, h, f, NULL)
<span class="p_del">-#define dma_free_coherent(d, s, v, h) dma_free_attrs(d, s, v, h, NULL)</span>
 #define dma_free_noncoherent(d, s, v, h) dma_free_attrs(d, s, v, h, NULL)
 
 /*
<span class="p_header">diff --git a/arch/unicore32/include/asm/dma-mapping.h b/arch/unicore32/include/asm/dma-mapping.h</span>
<span class="p_header">index 366460a..5294d03 100644</span>
<span class="p_header">--- a/arch/unicore32/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/unicore32/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -18,8 +18,6 @@</span> <span class="p_context"></span>
 #include &lt;linux/scatterlist.h&gt;
 #include &lt;linux/swiotlb.h&gt;
 
<span class="p_del">-#include &lt;asm-generic/dma-coherent.h&gt;</span>
<span class="p_del">-</span>
 #include &lt;asm/memory.h&gt;
 #include &lt;asm/cacheflush.h&gt;
 
<span class="p_chunk">@@ -82,28 +80,6 @@</span> <span class="p_context"> static inline int dma_set_mask(struct device *dev, u64 dma_mask)</span>
 	return 0;
 }
 
<span class="p_del">-#define dma_alloc_coherent(d,s,h,f)	dma_alloc_attrs(d,s,h,f,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				    dma_addr_t *dma_handle, gfp_t flag,</span>
<span class="p_del">-				    struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *dma_ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	return dma_ops-&gt;alloc(dev, size, dma_handle, flag, attrs);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-#define dma_free_coherent(d,s,c,h) dma_free_attrs(d,s,c,h,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-				  void *cpu_addr, dma_addr_t dma_handle,</span>
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *dma_ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	dma_ops-&gt;free(dev, size, cpu_addr, dma_handle, attrs);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 #define dma_alloc_noncoherent(d, s, h, f) dma_alloc_coherent(d, s, h, f)
 #define dma_free_noncoherent(d, s, v, h) dma_free_coherent(d, s, v, h)
 
<span class="p_header">diff --git a/arch/x86/include/asm/dma-mapping.h b/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_header">index 1f5b728..f9b1b6c 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -12,7 +12,6 @@</span> <span class="p_context"></span>
 #include &lt;linux/dma-attrs.h&gt;
 #include &lt;asm/io.h&gt;
 #include &lt;asm/swiotlb.h&gt;
<span class="p_del">-#include &lt;asm-generic/dma-coherent.h&gt;</span>
 #include &lt;linux/dma-contiguous.h&gt;
 
 #ifdef CONFIG_ISA
<span class="p_chunk">@@ -41,6 +40,9 @@</span> <span class="p_context"> static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 #endif
 }
 
<span class="p_add">+bool arch_dma_alloc_attrs(struct device **dev, gfp_t *gfp);</span>
<span class="p_add">+#define arch_dma_alloc_attrs arch_dma_alloc_attrs</span>
<span class="p_add">+</span>
 #include &lt;asm-generic/dma-mapping-common.h&gt;
 
 /* Make sure we keep the same behaviour */
<span class="p_chunk">@@ -125,16 +127,4 @@</span> <span class="p_context"> static inline gfp_t dma_alloc_coherent_gfp_flags(struct device *dev, gfp_t gfp)</span>
        return gfp;
 }
 
<span class="p_del">-#define dma_alloc_coherent(d,s,h,f)	dma_alloc_attrs(d,s,h,f,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-void *</span>
<span class="p_del">-dma_alloc_attrs(struct device *dev, size_t size, dma_addr_t *dma_handle,</span>
<span class="p_del">-		gfp_t gfp, struct dma_attrs *attrs);</span>
<span class="p_del">-</span>
<span class="p_del">-#define dma_free_coherent(d,s,c,h) dma_free_attrs(d,s,c,h,NULL)</span>
<span class="p_del">-</span>
<span class="p_del">-void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-		    void *vaddr, dma_addr_t bus,</span>
<span class="p_del">-		    struct dma_attrs *attrs);</span>
<span class="p_del">-</span>
 #endif
<span class="p_header">diff --git a/arch/x86/kernel/pci-dma.c b/arch/x86/kernel/pci-dma.c</span>
<span class="p_header">index 353972c..bd23971 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-dma.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-dma.c</span>
<span class="p_chunk">@@ -140,50 +140,19 @@</span> <span class="p_context"> void dma_generic_free_coherent(struct device *dev, size_t size, void *vaddr,</span>
 		free_pages((unsigned long)vaddr, get_order(size));
 }
 
<span class="p_del">-void *dma_alloc_attrs(struct device *dev, size_t size, dma_addr_t *dma_handle,</span>
<span class="p_del">-		      gfp_t gfp, struct dma_attrs *attrs)</span>
<span class="p_add">+bool arch_dma_alloc_attrs(struct device **dev, gfp_t *gfp)</span>
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-	void *memory;</span>
<span class="p_del">-</span>
<span class="p_del">-	gfp &amp;= ~(__GFP_DMA | __GFP_HIGHMEM | __GFP_DMA32);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (dma_alloc_from_coherent(dev, size, dma_handle, &amp;memory))</span>
<span class="p_del">-		return memory;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (!dev)</span>
<span class="p_del">-		dev = &amp;x86_dma_fallback_dev;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (!is_device_dma_capable(dev))</span>
<span class="p_del">-		return NULL;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (!ops-&gt;alloc)</span>
<span class="p_del">-		return NULL;</span>
<span class="p_del">-</span>
<span class="p_del">-	memory = ops-&gt;alloc(dev, size, dma_handle,</span>
<span class="p_del">-			    dma_alloc_coherent_gfp_flags(dev, gfp), attrs);</span>
<span class="p_del">-	debug_dma_alloc_coherent(dev, size, *dma_handle, memory);</span>
<span class="p_del">-</span>
<span class="p_del">-	return memory;</span>
<span class="p_del">-}</span>
<span class="p_del">-EXPORT_SYMBOL(dma_alloc_attrs);</span>
<span class="p_del">-</span>
<span class="p_del">-void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_del">-		    void *vaddr, dma_addr_t bus,</span>
<span class="p_del">-		    struct dma_attrs *attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	WARN_ON(irqs_disabled());       /* for portability */</span>
<span class="p_add">+	*gfp = dma_alloc_coherent_gfp_flags(*dev, *gfp);</span>
<span class="p_add">+	*gfp &amp;= ~(__GFP_DMA | __GFP_HIGHMEM | __GFP_DMA32);</span>
 
<span class="p_del">-	if (dma_release_from_coherent(dev, get_order(size), vaddr))</span>
<span class="p_del">-		return;</span>
<span class="p_add">+	if (!*dev)</span>
<span class="p_add">+		*dev = &amp;x86_dma_fallback_dev;</span>
<span class="p_add">+	if (!is_device_dma_capable(*dev))</span>
<span class="p_add">+		return false;</span>
<span class="p_add">+	return true;</span>
 
<span class="p_del">-	debug_dma_free_coherent(dev, size, vaddr, bus);</span>
<span class="p_del">-	if (ops-&gt;free)</span>
<span class="p_del">-		ops-&gt;free(dev, size, vaddr, bus, attrs);</span>
 }
<span class="p_del">-EXPORT_SYMBOL(dma_free_attrs);</span>
<span class="p_add">+EXPORT_SYMBOL(arch_dma_alloc_attrs);</span>
 
 /*
  * See &lt;Documentation/x86/x86_64/boot-options.txt&gt; for the iommu kernel
<span class="p_header">diff --git a/drivers/xen/swiotlb-xen.c b/drivers/xen/swiotlb-xen.c</span>
<span class="p_header">index 4c54932..da1029e 100644</span>
<span class="p_header">--- a/drivers/xen/swiotlb-xen.c</span>
<span class="p_header">+++ b/drivers/xen/swiotlb-xen.c</span>
<span class="p_chunk">@@ -311,9 +311,6 @@</span> <span class="p_context"> xen_swiotlb_alloc_coherent(struct device *hwdev, size_t size,</span>
 	*/
 	flags &amp;= ~(__GFP_DMA | __GFP_HIGHMEM);
 
<span class="p_del">-	if (dma_alloc_from_coherent(hwdev, size, dma_handle, &amp;ret))</span>
<span class="p_del">-		return ret;</span>
<span class="p_del">-</span>
 	/* On ARM this function returns an ioremap&#39;ped virtual address for
 	 * which virt_to_phys doesn&#39;t return the corresponding physical
 	 * address. In fact on ARM virt_to_phys only works for kernel direct
<span class="p_chunk">@@ -356,9 +353,6 @@</span> <span class="p_context"> xen_swiotlb_free_coherent(struct device *hwdev, size_t size, void *vaddr,</span>
 	phys_addr_t phys;
 	u64 dma_mask = DMA_BIT_MASK(32);
 
<span class="p_del">-	if (dma_release_from_coherent(hwdev, order, vaddr))</span>
<span class="p_del">-		return;</span>
<span class="p_del">-</span>
 	if (hwdev &amp;&amp; hwdev-&gt;coherent_dma_mask)
 		dma_mask = hwdev-&gt;coherent_dma_mask;
 
<span class="p_header">diff --git a/include/asm-generic/dma-mapping-common.h b/include/asm-generic/dma-mapping-common.h</span>
<span class="p_header">index 940d5ec..56dd9ea 100644</span>
<span class="p_header">--- a/include/asm-generic/dma-mapping-common.h</span>
<span class="p_header">+++ b/include/asm-generic/dma-mapping-common.h</span>
<span class="p_chunk">@@ -6,6 +6,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/scatterlist.h&gt;
 #include &lt;linux/dma-debug.h&gt;
 #include &lt;linux/dma-attrs.h&gt;
<span class="p_add">+#include &lt;asm-generic/dma-coherent.h&gt;</span>
 
 static inline dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr,
 					      size_t size,
<span class="p_chunk">@@ -237,4 +238,61 @@</span> <span class="p_context"> dma_get_sgtable_attrs(struct device *dev, struct sg_table *sgt, void *cpu_addr,</span>
 
 #define dma_get_sgtable(d, t, v, h, s) dma_get_sgtable_attrs(d, t, v, h, s, NULL)
 
<span class="p_add">+#ifndef arch_dma_alloc_attrs</span>
<span class="p_add">+#define arch_dma_alloc_attrs(dev, flag)	(true)</span>
<span class="p_add">+#endif</span>
<span class="p_add">+</span>
<span class="p_add">+static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
<span class="p_add">+				       dma_addr_t *dma_handle, gfp_t flag,</span>
<span class="p_add">+				       struct dma_attrs *attrs)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	void *cpu_addr;</span>
<span class="p_add">+</span>
<span class="p_add">+	BUG_ON(!ops);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (dma_alloc_from_coherent(dev, size, dma_handle, &amp;cpu_addr))</span>
<span class="p_add">+		return cpu_addr;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (!arch_dma_alloc_attrs(&amp;dev, &amp;flag))</span>
<span class="p_add">+		return NULL;</span>
<span class="p_add">+	if (!ops-&gt;alloc)</span>
<span class="p_add">+		return NULL;</span>
<span class="p_add">+</span>
<span class="p_add">+	cpu_addr = ops-&gt;alloc(dev, size, dma_handle, flag, attrs);</span>
<span class="p_add">+	debug_dma_alloc_coherent(dev, size, *dma_handle, cpu_addr);</span>
<span class="p_add">+	return cpu_addr;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline void dma_free_attrs(struct device *dev, size_t size,</span>
<span class="p_add">+				     void *cpu_addr, dma_addr_t dma_handle,</span>
<span class="p_add">+				     struct dma_attrs *attrs)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+</span>
<span class="p_add">+	BUG_ON(!ops);</span>
<span class="p_add">+	WARN_ON(irqs_disabled());</span>
<span class="p_add">+</span>
<span class="p_add">+	if (dma_release_from_coherent(dev, get_order(size), cpu_addr))</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (!ops-&gt;free)</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	debug_dma_free_coherent(dev, size, cpu_addr, dma_handle);</span>
<span class="p_add">+	ops-&gt;free(dev, size, cpu_addr, dma_handle, attrs);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline void *dma_alloc_coherent(struct device *dev, size_t size,</span>
<span class="p_add">+		dma_addr_t *dma_handle, gfp_t flag)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return dma_alloc_attrs(dev, size, dma_handle, flag, NULL);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline void dma_free_coherent(struct device *dev, size_t size,</span>
<span class="p_add">+		void *cpu_addr, dma_addr_t dma_handle)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return dma_free_attrs(dev, size, cpu_addr, dma_handle, NULL);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 #endif

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



