
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[11/14] swiotlb: remove swiotlb_set_mem_attributes - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [11/14] swiotlb: remove swiotlb_set_mem_attributes</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 14, 2018, 5:52 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180314175213.20256-12-hch@lst.de&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10283141/mbox/"
   >mbox</a>
|
   <a href="/patch/10283141/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10283141/">/patch/10283141/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	D31CC60621 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 14 Mar 2018 17:53:23 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3361F2852E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 14 Mar 2018 17:53:15 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 2842028534; Wed, 14 Mar 2018 17:53:15 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 89AD42853A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 14 Mar 2018 17:53:14 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752439AbeCNRxM (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 14 Mar 2018 13:53:12 -0400
Received: from bombadil.infradead.org ([198.137.202.133]:55418 &quot;EHLO
	bombadil.infradead.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751543AbeCNRxJ (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 14 Mar 2018 13:53:09 -0400
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=infradead.org; s=bombadil.20170209;
	h=References:In-Reply-To:Message-Id:
	Date:Subject:Cc:To:From:Sender:Reply-To:MIME-Version:Content-Type:
	Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
	Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
	List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
	bh=pHbz/qKLGiJw17lujLBmyI08j+h4vV3IY3gC6ydQ6wo=;
	b=aNl8w1m6yWaCrTM1pre3k8DnN
	CShZ4UGnPmuxDEkbyHF+bphJ9YjkjXCCd3HZhWRDDWv6h9N72lSaMbGXiU5NAzHE3QyKqHiaT4hNA
	/NmJRIkwhYdQA1syfXBrmTLUgOpt7G2wMuKPQWi9TmrUs6hGmqIhAD+p6cmt758FhsYEDLZg1TLCj
	4RBxqn7zk+H1O6qwJgzMWiEQXOeREiWItIe5NV8ZAkySNvKUQ153vjmoV61o0vewK76GtYArwnPG4
	hCzMDNi+Aw2odqEpSxqnZBbWob5rTDvRDM7lLPvqbKf+hVqG18+tfOs1HKGtgSzBvqJ+WyOGZ0AUy
	UcbnfnVUw==;
Received: from 178.114.241.23.wireless.dyn.drei.com ([178.114.241.23]
	helo=localhost)
	by bombadil.infradead.org with esmtpsa (Exim 4.90_1 #2 (Red Hat
	Linux)) id 1ewAaD-0000Oh-BS; Wed, 14 Mar 2018 17:53:02 +0000
From: Christoph Hellwig &lt;hch@lst.de&gt;
To: x86@kernel.org
Cc: Konrad Rzeszutek Wilk &lt;konrad.wilk@oracle.com&gt;,
	Tom Lendacky &lt;thomas.lendacky@amd.com&gt;,
	David Woodhouse &lt;dwmw2@infradead.org&gt;, Muli Ben-Yehuda &lt;mulix@mulix.org&gt;,
	Jon Mason &lt;jdmason@kudzu.us&gt;, Joerg Roedel &lt;joro@8bytes.org&gt;,
	iommu@lists.linux-foundation.org, linux-kernel@vger.kernel.org
Subject: [PATCH 11/14] swiotlb: remove swiotlb_set_mem_attributes
Date: Wed, 14 Mar 2018 18:52:10 +0100
Message-Id: &lt;20180314175213.20256-12-hch@lst.de&gt;
X-Mailer: git-send-email 2.14.2
In-Reply-To: &lt;20180314175213.20256-1-hch@lst.de&gt;
References: &lt;20180314175213.20256-1-hch@lst.de&gt;
X-SRS-Rewrite: SMTP reverse-path rewritten from &lt;hch@infradead.org&gt; by
	bombadil.infradead.org. See http://www.infradead.org/rpr.html
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a> - March 14, 2018, 5:52 p.m.</div>
<pre class="content">
Now that set_memory_decrypted is always available we can just call it
directly.
<span class="signed-off-by">
Signed-off-by: Christoph Hellwig &lt;hch@lst.de&gt;</span>
---
 arch/x86/include/asm/mem_encrypt.h |  2 --
 arch/x86/mm/mem_encrypt.c          |  9 ---------
 lib/swiotlb.c                      | 12 ++++++------
 3 files changed, 6 insertions(+), 17 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/mem_encrypt.h b/arch/x86/include/asm/mem_encrypt.h</span>
<span class="p_header">index 22c5f3e6f820..9da0b63c8fc7 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/mem_encrypt.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/mem_encrypt.h</span>
<span class="p_chunk">@@ -48,8 +48,6 @@</span> <span class="p_context"> int __init early_set_memory_encrypted(unsigned long vaddr, unsigned long size);</span>
 /* Architecture __weak replacement functions */
 void __init mem_encrypt_init(void);
 
<span class="p_del">-void swiotlb_set_mem_attributes(void *vaddr, unsigned long size);</span>
<span class="p_del">-</span>
 bool sme_active(void);
 bool sev_active(void);
 
<span class="p_header">diff --git a/arch/x86/mm/mem_encrypt.c b/arch/x86/mm/mem_encrypt.c</span>
<span class="p_header">index 66beedc8fe3d..d3b80d5f9828 100644</span>
<span class="p_header">--- a/arch/x86/mm/mem_encrypt.c</span>
<span class="p_header">+++ b/arch/x86/mm/mem_encrypt.c</span>
<span class="p_chunk">@@ -446,15 +446,6 @@</span> <span class="p_context"> void __init mem_encrypt_init(void)</span>
 			     : &quot;Secure Memory Encryption (SME)&quot;);
 }
 
<span class="p_del">-void swiotlb_set_mem_attributes(void *vaddr, unsigned long size)</span>
<span class="p_del">-{</span>
<span class="p_del">-	WARN(PAGE_ALIGN(size) != size,</span>
<span class="p_del">-	     &quot;size is not page-aligned (%#lx)\n&quot;, size);</span>
<span class="p_del">-</span>
<span class="p_del">-	/* Make the SWIOTLB buffer area decrypted */</span>
<span class="p_del">-	set_memory_decrypted((unsigned long)vaddr, size &gt;&gt; PAGE_SHIFT);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 struct sme_populate_pgd_data {
 	void	*pgtable_area;
 	pgd_t	*pgd;
<span class="p_header">diff --git a/lib/swiotlb.c b/lib/swiotlb.c</span>
<span class="p_header">index c43ec2271469..005d1d87bb2e 100644</span>
<span class="p_header">--- a/lib/swiotlb.c</span>
<span class="p_header">+++ b/lib/swiotlb.c</span>
<span class="p_chunk">@@ -31,6 +31,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/gfp.h&gt;
 #include &lt;linux/scatterlist.h&gt;
 #include &lt;linux/mem_encrypt.h&gt;
<span class="p_add">+#include &lt;linux/set_memory.h&gt;</span>
 
 #include &lt;asm/io.h&gt;
 #include &lt;asm/dma.h&gt;
<span class="p_chunk">@@ -156,8 +157,6 @@</span> <span class="p_context"> unsigned long swiotlb_size_or_default(void)</span>
 	return size ? size : (IO_TLB_DEFAULT_SIZE);
 }
 
<span class="p_del">-void __weak swiotlb_set_mem_attributes(void *vaddr, unsigned long size) { }</span>
<span class="p_del">-</span>
 /* For swiotlb, clear memory encryption mask from dma addresses */
 static dma_addr_t swiotlb_phys_to_dma(struct device *hwdev,
 				      phys_addr_t address)
<span class="p_chunk">@@ -209,12 +208,12 @@</span> <span class="p_context"> void __init swiotlb_update_mem_attributes(void)</span>
 
 	vaddr = phys_to_virt(io_tlb_start);
 	bytes = PAGE_ALIGN(io_tlb_nslabs &lt;&lt; IO_TLB_SHIFT);
<span class="p_del">-	swiotlb_set_mem_attributes(vaddr, bytes);</span>
<span class="p_add">+	set_memory_decrypted((unsigned long)vaddr, bytes &gt;&gt; PAGE_SHIFT);</span>
 	memset(vaddr, 0, bytes);
 
 	vaddr = phys_to_virt(io_tlb_overflow_buffer);
 	bytes = PAGE_ALIGN(io_tlb_overflow);
<span class="p_del">-	swiotlb_set_mem_attributes(vaddr, bytes);</span>
<span class="p_add">+	set_memory_decrypted((unsigned long)vaddr, bytes &gt;&gt; PAGE_SHIFT);</span>
 	memset(vaddr, 0, bytes);
 }
 
<span class="p_chunk">@@ -355,7 +354,7 @@</span> <span class="p_context"> swiotlb_late_init_with_tbl(char *tlb, unsigned long nslabs)</span>
 	io_tlb_start = virt_to_phys(tlb);
 	io_tlb_end = io_tlb_start + bytes;
 
<span class="p_del">-	swiotlb_set_mem_attributes(tlb, bytes);</span>
<span class="p_add">+	set_memory_decrypted((unsigned long)tlb, bytes &gt;&gt; PAGE_SHIFT);</span>
 	memset(tlb, 0, bytes);
 
 	/*
<span class="p_chunk">@@ -366,7 +365,8 @@</span> <span class="p_context"> swiotlb_late_init_with_tbl(char *tlb, unsigned long nslabs)</span>
 	if (!v_overflow_buffer)
 		goto cleanup2;
 
<span class="p_del">-	swiotlb_set_mem_attributes(v_overflow_buffer, io_tlb_overflow);</span>
<span class="p_add">+	set_memory_decrypted((unsigned long)v_overflow_buffer,</span>
<span class="p_add">+			io_tlb_overflow &gt;&gt; PAGE_SHIFT);</span>
 	memset(v_overflow_buffer, 0, io_tlb_overflow);
 	io_tlb_overflow_buffer = virt_to_phys(v_overflow_buffer);
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



