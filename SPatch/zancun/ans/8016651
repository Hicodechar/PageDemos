
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[tip:x86/asm] mm: Add a vm_special_mapping.fault() method - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [tip:x86/asm] mm: Add a vm_special_mapping.fault() method</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 12, 2016, 12:02 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;tip-f872f5400cc01373d8e29d9c7a5296ccfaf4ccf3@git.kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8016651/mbox/"
   >mbox</a>
|
   <a href="/patch/8016651/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8016651/">/patch/8016651/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id EB32D9F1C0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 12 Jan 2016 12:04:01 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 55E0820390
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 12 Jan 2016 12:03:56 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 5100F20340
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 12 Jan 2016 12:03:55 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S965494AbcALMDw (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 12 Jan 2016 07:03:52 -0500
Received: from terminus.zytor.com ([198.137.202.10]:58037 &quot;EHLO
	terminus.zytor.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S965478AbcALMDs (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 12 Jan 2016 07:03:48 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
	by terminus.zytor.com (8.14.8/8.14.7) with ESMTP id u0CC2bXB032566;
	Tue, 12 Jan 2016 04:02:42 -0800
Received: (from tipbot@localhost)
	by terminus.zytor.com (8.14.8/8.14.7/Submit) id u0CC2br8032561;
	Tue, 12 Jan 2016 04:02:37 -0800
Date: Tue, 12 Jan 2016 04:02:37 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to
	tipbot@zytor.com using -f
From: tip-bot for Andy Lutomirski &lt;tipbot@zytor.com&gt;
Message-ID: &lt;tip-f872f5400cc01373d8e29d9c7a5296ccfaf4ccf3@git.kernel.org&gt;
Cc: luto@kernel.org, tglx@linutronix.de, mingo@kernel.org,
	luto@amacapital.net, keescook@chromium.org, hpa@zytor.com,
	oleg@redhat.com, fenghua.yu@intel.com,
	torvalds@linux-foundation.org, quentin.casasnovas@oracle.com,
	linux-kernel@vger.kernel.org, peterz@infradead.org, bp@alien8.de,
	dave.hansen@linux.intel.com
Reply-To: oleg@redhat.com, hpa@zytor.com, keescook@chromium.org,
	mingo@kernel.org, luto@amacapital.net, luto@kernel.org,
	tglx@linutronix.de, bp@alien8.de, dave.hansen@linux.intel.com,
	peterz@infradead.org, linux-kernel@vger.kernel.org,
	quentin.casasnovas@oracle.com, torvalds@linux-foundation.org,
	fenghua.yu@intel.com
In-Reply-To: &lt;a26d1677c0bc7e774c33f469451a78ca31e9e6af.1451446564.git.luto@kernel.org&gt;
References: &lt;a26d1677c0bc7e774c33f469451a78ca31e9e6af.1451446564.git.luto@kernel.org&gt;
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/asm] mm: Add a vm_special_mapping.fault() method
Git-Commit-ID: f872f5400cc01373d8e29d9c7a5296ccfaf4ccf3
X-Mailer: tip-git-log-daemon
Robot-ID: &lt;tip-bot.git.kernel.org&gt;
Robot-Unsubscribe: Contact &lt;mailto:hpa@kernel.org&gt;
	to get blacklisted from these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a> - Jan. 12, 2016, 12:02 p.m.</div>
<pre class="content">
Commit-ID:  f872f5400cc01373d8e29d9c7a5296ccfaf4ccf3
Gitweb:     http://git.kernel.org/tip/f872f5400cc01373d8e29d9c7a5296ccfaf4ccf3
Author:     Andy Lutomirski &lt;luto@amacapital.net&gt;
AuthorDate: Tue, 29 Dec 2015 20:12:19 -0800
Committer:  Ingo Molnar &lt;mingo@kernel.org&gt;
CommitDate: Tue, 12 Jan 2016 11:59:34 +0100

mm: Add a vm_special_mapping.fault() method

Requiring special mappings to give a list of struct pages is
inflexible: it prevents sane use of IO memory in a special
mapping, it&#39;s inefficient (it requires arch code to initialize a
list of struct pages, and it requires the mm core to walk the
entire list just to figure out how long it is), and it prevents
arch code from doing anything fancy when a special mapping fault
occurs.

Add a .fault method as an alternative to filling in a .pages
array.

Looks-OK-to: Andrew Morton &lt;akpm@linux-foundation.org&gt;
<span class="signed-off-by">Signed-off-by: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
<span class="reviewed-by">Reviewed-by: Kees Cook &lt;keescook@chromium.org&gt;</span>
Cc: Andy Lutomirski &lt;luto@amacapital.net&gt;
Cc: Borislav Petkov &lt;bp@alien8.de&gt;
Cc: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;
Cc: Fenghua Yu &lt;fenghua.yu@intel.com&gt;
Cc: H. Peter Anvin &lt;hpa@zytor.com&gt;
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Oleg Nesterov &lt;oleg@redhat.com&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: Quentin Casasnovas &lt;quentin.casasnovas@oracle.com&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Link: http://lkml.kernel.org/r/a26d1677c0bc7e774c33f469451a78ca31e9e6af.1451446564.git.luto@kernel.org
<span class="signed-off-by">Signed-off-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
---
 include/linux/mm_types.h | 22 +++++++++++++++++++---
 mm/mmap.c                | 13 +++++++++----
 2 files changed, 28 insertions(+), 7 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/linux/mm_types.h b/include/linux/mm_types.h</span>
<span class="p_header">index f8d1492..c88e48a 100644</span>
<span class="p_header">--- a/include/linux/mm_types.h</span>
<span class="p_header">+++ b/include/linux/mm_types.h</span>
<span class="p_chunk">@@ -568,10 +568,26 @@</span> <span class="p_context"> static inline void clear_tlb_flush_pending(struct mm_struct *mm)</span>
 }
 #endif
 
<span class="p_del">-struct vm_special_mapping</span>
<span class="p_del">-{</span>
<span class="p_del">-	const char *name;</span>
<span class="p_add">+struct vm_fault;</span>
<span class="p_add">+</span>
<span class="p_add">+struct vm_special_mapping {</span>
<span class="p_add">+	const char *name;	/* The name, e.g. &quot;[vdso]&quot;. */</span>
<span class="p_add">+</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * If .fault is not provided, this points to a</span>
<span class="p_add">+	 * NULL-terminated array of pages that back the special mapping.</span>
<span class="p_add">+	 *</span>
<span class="p_add">+	 * This must not be NULL unless .fault is provided.</span>
<span class="p_add">+	 */</span>
 	struct page **pages;
<span class="p_add">+</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * If non-NULL, then this is called to resolve page faults</span>
<span class="p_add">+	 * on the special mapping.  If used, .pages is not checked.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	int (*fault)(const struct vm_special_mapping *sm,</span>
<span class="p_add">+		     struct vm_area_struct *vma,</span>
<span class="p_add">+		     struct vm_fault *vmf);</span>
 };
 
 enum tlb_flush_reason {
<span class="p_header">diff --git a/mm/mmap.c b/mm/mmap.c</span>
<span class="p_header">index 2ce04a6..f717453 100644</span>
<span class="p_header">--- a/mm/mmap.c</span>
<span class="p_header">+++ b/mm/mmap.c</span>
<span class="p_chunk">@@ -3030,11 +3030,16 @@</span> <span class="p_context"> static int special_mapping_fault(struct vm_area_struct *vma,</span>
 	pgoff_t pgoff;
 	struct page **pages;
 
<span class="p_del">-	if (vma-&gt;vm_ops == &amp;legacy_special_mapping_vmops)</span>
<span class="p_add">+	if (vma-&gt;vm_ops == &amp;legacy_special_mapping_vmops) {</span>
 		pages = vma-&gt;vm_private_data;
<span class="p_del">-	else</span>
<span class="p_del">-		pages = ((struct vm_special_mapping *)vma-&gt;vm_private_data)-&gt;</span>
<span class="p_del">-			pages;</span>
<span class="p_add">+	} else {</span>
<span class="p_add">+		struct vm_special_mapping *sm = vma-&gt;vm_private_data;</span>
<span class="p_add">+</span>
<span class="p_add">+		if (sm-&gt;fault)</span>
<span class="p_add">+			return sm-&gt;fault(sm, vma, vmf);</span>
<span class="p_add">+</span>
<span class="p_add">+		pages = sm-&gt;pages;</span>
<span class="p_add">+	}</span>
 
 	for (pgoff = vmf-&gt;pgoff; pgoff &amp;&amp; *pages; ++pages)
 		pgoff--;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



