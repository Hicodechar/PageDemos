
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v4,1/2] mm: hugetlb: proc: add HugetlbPages field to /proc/PID/smaps - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v4,1/2] mm: hugetlb: proc: add HugetlbPages field to /proc/PID/smaps</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=4407">Naoya Horiguchi</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 12, 2015, 7:45 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1439365520-12605-1-git-send-email-n-horiguchi@ah.jp.nec.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6997571/mbox/"
   >mbox</a>
|
   <a href="/patch/6997571/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6997571/">/patch/6997571/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id D901DC05AD
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 12 Aug 2015 07:48:52 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 48CBE20668
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 12 Aug 2015 07:48:52 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 8A80220667
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 12 Aug 2015 07:48:51 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S933787AbbHLHsq (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 12 Aug 2015 03:48:46 -0400
Received: from TYO202.gate.nec.co.jp ([210.143.35.52]:35228 &quot;EHLO
	tyo202.gate.nec.co.jp&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753852AbbHLHso (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 12 Aug 2015 03:48:44 -0400
Received: from mailgate3.nec.co.jp ([10.7.69.195])
	by tyo202.gate.nec.co.jp (8.13.8/8.13.4) with ESMTP id t7C7mRjd014522;
	Wed, 12 Aug 2015 16:48:27 +0900 (JST)
Received: from mailsv4.nec.co.jp (imss61.nec.co.jp [10.7.69.156]) by
	mailgate3.nec.co.jp (8.11.7/3.7W-MAILGATE-NEC) with ESMTP
	id t7C7mRe07711; Wed, 12 Aug 2015 16:48:27 +0900 (JST)
Received: from mail02.kamome.nec.co.jp (mail02.kamome.nec.co.jp [10.25.43.5])
	by mailsv4.nec.co.jp (8.13.8/8.13.4) with ESMTP id t7C7mQ03013277;
	Wed, 12 Aug 2015 16:48:26 +0900 (JST)
Received: from bpxc99gp.gisp.nec.co.jp ([10.38.151.151] [10.38.151.151]) by
	mail03.kamome.nec.co.jp with ESMTP id BT-MMP-1167326;
	Wed, 12 Aug 2015 16:45:28 +0900
Received: from BPXM23GP.gisp.nec.co.jp ([169.254.2.176]) by
	BPXC23GP.gisp.nec.co.jp ([10.38.151.151]) with mapi id 14.03.0224.002;
	Wed, 12 Aug 2015 16:45:27 +0900
From: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	David Rientjes &lt;rientjes@google.com&gt;,
	=?utf-8?B?SsO2cm4gRW5nZWw=?= &lt;joern@purestorage.com&gt;
CC: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;,
	&quot;linux-mm@kvack.org&quot; &lt;linux-mm@kvack.org&gt;,
	&quot;linux-kernel@vger.kernel.org&quot; &lt;linux-kernel@vger.kernel.org&gt;,
	Naoya Horiguchi &lt;nao.horiguchi@gmail.com&gt;,
	Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;
Subject: [PATCH v4 1/2] mm: hugetlb: proc: add HugetlbPages field to
	/proc/PID/smaps
Thread-Topic: [PATCH v4 1/2] mm: hugetlb: proc: add HugetlbPages field to
	/proc/PID/smaps
Thread-Index: AQHQ1NLaFNXGSknAiE+PeDUoKgd+HQ==
Date: Wed, 12 Aug 2015 07:45:27 +0000
Message-ID: &lt;1439365520-12605-1-git-send-email-n-horiguchi@ah.jp.nec.com&gt;
References: &lt;20150812000336.GB32192@hori1.linux.bs1.fc.nec.co.jp&gt;
In-Reply-To: &lt;20150812000336.GB32192@hori1.linux.bs1.fc.nec.co.jp&gt;
Accept-Language: ja-JP, en-US
Content-Language: ja-JP
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.128.101.24]
Content-Type: text/plain; charset=&quot;utf-8&quot;
Content-Transfer-Encoding: base64
MIME-Version: 1.0
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=4407">Naoya Horiguchi</a> - Aug. 12, 2015, 7:45 a.m.</div>
<pre class="content">
Currently /proc/PID/smaps provides no usage info for vma(VM_HUGETLB), which
is inconvenient when we want to know per-task or per-vma base hugetlb usage.
To solve this, this patch adds a new line for hugetlb usage like below:

  Size:              20480 kB
  Rss:                   0 kB
  Pss:                   0 kB
  Shared_Clean:          0 kB
  Shared_Dirty:          0 kB
  Private_Clean:         0 kB
  Private_Dirty:         0 kB
  Referenced:            0 kB
  Anonymous:             0 kB
  AnonHugePages:         0 kB
  HugetlbPages:      18432 kB
  Swap:                  0 kB
  KernelPageSize:     2048 kB
  MMUPageSize:        2048 kB
  Locked:                0 kB
  VmFlags: rd wr mr mw me de ht
<span class="signed-off-by">
Signed-off-by: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>
---
v3 -&gt; v4:
- suspend Acked-by tag because v3-&gt;v4 change is not trivial
- I stated in previous discussion that HugetlbPages line can contain page
  size info, but that&#39;s not necessary because we already have KernelPageSize
  info.
- merged documentation update, where the current documentation doesn&#39;t mention
  AnonHugePages, so it&#39;s also added.
---
 Documentation/filesystems/proc.txt |  7 +++++--
 fs/proc/task_mmu.c                 | 29 +++++++++++++++++++++++++++++
 2 files changed, 34 insertions(+), 2 deletions(-)

-- 
2.4.3
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=579">David Rientjes</a> - Aug. 12, 2015, 8:25 p.m.</div>
<pre class="content">
On Wed, 12 Aug 2015, Naoya Horiguchi wrote:
<span class="quote">
&gt; Currently /proc/PID/smaps provides no usage info for vma(VM_HUGETLB), which</span>
<span class="quote">&gt; is inconvenient when we want to know per-task or per-vma base hugetlb usage.</span>
<span class="quote">&gt; To solve this, this patch adds a new line for hugetlb usage like below:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;   Size:              20480 kB</span>
<span class="quote">&gt;   Rss:                   0 kB</span>
<span class="quote">&gt;   Pss:                   0 kB</span>
<span class="quote">&gt;   Shared_Clean:          0 kB</span>
<span class="quote">&gt;   Shared_Dirty:          0 kB</span>
<span class="quote">&gt;   Private_Clean:         0 kB</span>
<span class="quote">&gt;   Private_Dirty:         0 kB</span>
<span class="quote">&gt;   Referenced:            0 kB</span>
<span class="quote">&gt;   Anonymous:             0 kB</span>
<span class="quote">&gt;   AnonHugePages:         0 kB</span>
<span class="quote">&gt;   HugetlbPages:      18432 kB</span>
<span class="quote">&gt;   Swap:                  0 kB</span>
<span class="quote">&gt;   KernelPageSize:     2048 kB</span>
<span class="quote">&gt;   MMUPageSize:        2048 kB</span>
<span class="quote">&gt;   Locked:                0 kB</span>
<span class="quote">&gt;   VmFlags: rd wr mr mw me de ht</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>
<span class="acked-by">
Acked-by: David Rientjes &lt;rientjes@google.com&gt;</span>
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=579">David Rientjes</a> - Aug. 12, 2015, 8:30 p.m.</div>
<pre class="content">
On Wed, 12 Aug 2015, Naoya Horiguchi wrote:
<span class="quote">
&gt; Currently there&#39;s no easy way to get per-process usage of hugetlb pages, which</span>
<span class="quote">&gt; is inconvenient because userspace applications which use hugetlb typically want</span>
<span class="quote">&gt; to control their processes on the basis of how much memory (including hugetlb)</span>
<span class="quote">&gt; they use. So this patch simply provides easy access to the info via</span>
<span class="quote">&gt; /proc/PID/status.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; With this patch, for example, /proc/PID/status shows a line like this:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;   HugetlbPages:      20480 kB (10x2048kB)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; If your system supports and enables multiple hugepage sizes, the line looks</span>
<span class="quote">&gt; like this:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;   HugetlbPages:    1069056 kB (1x1048576kB 10x2048kB)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; , so you can easily know how many hugepages in which pagesize are used by a</span>
<span class="quote">&gt; process.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>

I&#39;m happy with this and thanks very much for going the extra mile and 
breaking the usage down by hstate size.

I&#39;d be interested in the comments of others, though, to see if there is 
any reservation about the hstate size breakdown.  It may actually find no 
current customer who is interested in parsing it.  (If we keep it, I would 
suggest the &#39;x&#39; change to &#39;*&#39; similar to per-order breakdowns in 
show_mem()).  It may also be possible to add it later if a definitive 
usecase is presented.

But overall I&#39;m very happy with the new addition and think it&#39;s a good 
solution to the problem.
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137441">Jörn Engel</a> - Aug. 13, 2015, 9:13 p.m.</div>
<pre class="content">
On Wed, Aug 12, 2015 at 01:30:27PM -0700, David Rientjes wrote:
<span class="quote">&gt; </span>
<span class="quote">&gt; I&#39;d be interested in the comments of others, though, to see if there is </span>
<span class="quote">&gt; any reservation about the hstate size breakdown.  It may actually find no </span>
<span class="quote">&gt; current customer who is interested in parsing it.  (If we keep it, I would </span>
<span class="quote">&gt; suggest the &#39;x&#39; change to &#39;*&#39; similar to per-order breakdowns in </span>
<span class="quote">&gt; show_mem()).  It may also be possible to add it later if a definitive </span>
<span class="quote">&gt; usecase is presented.</span>

I have no interest in parsing the size breakdown today.  I might change
my mind tomorrow and having the extra information hurts very little, so
I won&#39;t argue against it either.
<span class="quote">
&gt; But overall I&#39;m very happy with the new addition and think it&#39;s a good </span>
<span class="quote">&gt; solution to the problem.</span>

Agreed.  Thank you!

Jörn

--
One of the painful things about our time is that those who feel certainty
are stupid, and those with any imagination and understanding are filled
with doubt and indecision.
-- Bertrand Russell
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137441">Jörn Engel</a> - Aug. 13, 2015, 9:14 p.m.</div>
<pre class="content">
On Thu, Aug 13, 2015 at 12:45:33AM +0000, Naoya Horiguchi wrote:
<span class="quote">&gt; From: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>
<span class="quote">&gt; Subject: [PATCH] mm: hugetlb: proc: add HugetlbPages field to /proc/PID/status</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Currently there&#39;s no easy way to get per-process usage of hugetlb pages, which</span>
<span class="quote">&gt; is inconvenient because userspace applications which use hugetlb typically want</span>
<span class="quote">&gt; to control their processes on the basis of how much memory (including hugetlb)</span>
<span class="quote">&gt; they use. So this patch simply provides easy access to the info via</span>
<span class="quote">&gt; /proc/PID/status.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; With this patch, for example, /proc/PID/status shows a line like this:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;   HugetlbPages:      20480 kB (10*2048kB)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; If your system supports and enables multiple hugepage sizes, the line looks</span>
<span class="quote">&gt; like this:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;   HugetlbPages:    1069056 kB (1*1048576kB 10*2048kB)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; , so you can easily know how many hugepages in which pagesize are used by a</span>
<span class="quote">&gt; process.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>
<span class="acked-by">
Acked-by: Joern Engel &lt;joern@logfs.org&gt;</span>

Jörn

--
Computer system analysis is like child-rearing; you can do grievous damage,
but you cannot ensure success.&quot;
-- Tom DeMarco
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137441">Jörn Engel</a> - Aug. 13, 2015, 9:14 p.m.</div>
<pre class="content">
On Wed, Aug 12, 2015 at 01:25:59PM -0700, David Rientjes wrote:
<span class="quote">&gt; On Wed, 12 Aug 2015, Naoya Horiguchi wrote:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; Currently /proc/PID/smaps provides no usage info for vma(VM_HUGETLB), which</span>
<span class="quote">&gt; &gt; is inconvenient when we want to know per-task or per-vma base hugetlb usage.</span>
<span class="quote">&gt; &gt; To solve this, this patch adds a new line for hugetlb usage like below:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;   Size:              20480 kB</span>
<span class="quote">&gt; &gt;   Rss:                   0 kB</span>
<span class="quote">&gt; &gt;   Pss:                   0 kB</span>
<span class="quote">&gt; &gt;   Shared_Clean:          0 kB</span>
<span class="quote">&gt; &gt;   Shared_Dirty:          0 kB</span>
<span class="quote">&gt; &gt;   Private_Clean:         0 kB</span>
<span class="quote">&gt; &gt;   Private_Dirty:         0 kB</span>
<span class="quote">&gt; &gt;   Referenced:            0 kB</span>
<span class="quote">&gt; &gt;   Anonymous:             0 kB</span>
<span class="quote">&gt; &gt;   AnonHugePages:         0 kB</span>
<span class="quote">&gt; &gt;   HugetlbPages:      18432 kB</span>
<span class="quote">&gt; &gt;   Swap:                  0 kB</span>
<span class="quote">&gt; &gt;   KernelPageSize:     2048 kB</span>
<span class="quote">&gt; &gt;   MMUPageSize:        2048 kB</span>
<span class="quote">&gt; &gt;   Locked:                0 kB</span>
<span class="quote">&gt; &gt;   VmFlags: rd wr mr mw me de ht</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Signed-off-by: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Acked-by: David Rientjes &lt;rientjes@google.com&gt;</span>
<span class="acked-by">
Acked-by: Joern Engel &lt;joern@logfs.org&gt;</span>

Jörn

--
One of my most productive days was throwing away 1000 lines of code.
-- Ken Thompson.
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=579">David Rientjes</a> - Aug. 17, 2015, 9:28 p.m.</div>
<pre class="content">
On Wed, 12 Aug 2015, David Rientjes wrote:
<span class="quote">
&gt; I&#39;m happy with this and thanks very much for going the extra mile and </span>
<span class="quote">&gt; breaking the usage down by hstate size.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I&#39;d be interested in the comments of others, though, to see if there is </span>
<span class="quote">&gt; any reservation about the hstate size breakdown.  It may actually find no </span>
<span class="quote">&gt; current customer who is interested in parsing it.  (If we keep it, I would </span>
<span class="quote">&gt; suggest the &#39;x&#39; change to &#39;*&#39; similar to per-order breakdowns in </span>
<span class="quote">&gt; show_mem()).  It may also be possible to add it later if a definitive </span>
<span class="quote">&gt; usecase is presented.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; But overall I&#39;m very happy with the new addition and think it&#39;s a good </span>
<span class="quote">&gt; solution to the problem.</span>
<span class="quote">&gt; </span>

No objections from anybody else, so
<span class="acked-by">
Acked-by: David Rientjes &lt;rientjes@google.com&gt;</span>

Thanks Naoya!
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git v4.2-rc4.orig/Documentation/filesystems/proc.txt v4.2-rc4/Documentation/filesystems/proc.txt</span>
<span class="p_header">index 6f7fafde0884..22e40211ef64 100644</span>
<span class="p_header">--- v4.2-rc4.orig/Documentation/filesystems/proc.txt</span>
<span class="p_header">+++ v4.2-rc4/Documentation/filesystems/proc.txt</span>
<span class="p_chunk">@@ -423,6 +423,8 @@</span> <span class="p_context"> Private_Clean:         0 kB</span>
 Private_Dirty:         0 kB
 Referenced:          892 kB
 Anonymous:             0 kB
<span class="p_add">+AnonHugePages:         0 kB</span>
<span class="p_add">+HugetlbPages:          0 kB</span>
 Swap:                  0 kB
 KernelPageSize:        4 kB
 MMUPageSize:           4 kB
<span class="p_chunk">@@ -440,8 +442,9 @@</span> <span class="p_context"> indicates the amount of memory currently marked as referenced or accessed.</span>
 &quot;Anonymous&quot; shows the amount of memory that does not belong to any file.  Even
 a mapping associated with a file may contain anonymous pages: when MAP_PRIVATE
 and a page is modified, the file page is replaced by a private anonymous copy.
<span class="p_del">-&quot;Swap&quot; shows how much would-be-anonymous memory is also used, but out on</span>
<span class="p_del">-swap.</span>
<span class="p_add">+&quot;AnonHugePages&quot; shows the ammount of memory backed by transparent hugepage.</span>
<span class="p_add">+&quot;HugetlbPages&quot; shows the ammount of memory backed by hugetlbfs page.</span>
<span class="p_add">+&quot;Swap&quot; shows how much would-be-anonymous memory is also used, but out on swap.</span>
 
 &quot;VmFlags&quot; field deserves a separate description. This member represents the kernel
 flags associated with the particular virtual memory area in two letter encoded
<span class="p_header">diff --git v4.2-rc4.orig/fs/proc/task_mmu.c v4.2-rc4/fs/proc/task_mmu.c</span>
<span class="p_header">index ca1e091881d4..2c37938b82ee 100644</span>
<span class="p_header">--- v4.2-rc4.orig/fs/proc/task_mmu.c</span>
<span class="p_header">+++ v4.2-rc4/fs/proc/task_mmu.c</span>
<span class="p_chunk">@@ -445,6 +445,7 @@</span> <span class="p_context"> struct mem_size_stats {</span>
 	unsigned long anonymous;
 	unsigned long anonymous_thp;
 	unsigned long swap;
<span class="p_add">+	unsigned long hugetlb;</span>
 	u64 pss;
 };
 
<span class="p_chunk">@@ -610,12 +611,38 @@</span> <span class="p_context"> static void show_smap_vma_flags(struct seq_file *m, struct vm_area_struct *vma)</span>
 	seq_putc(m, &#39;\n&#39;);
 }
 
<span class="p_add">+#ifdef CONFIG_HUGETLB_PAGE</span>
<span class="p_add">+static int smaps_hugetlb_range(pte_t *pte, unsigned long hmask,</span>
<span class="p_add">+				 unsigned long addr, unsigned long end,</span>
<span class="p_add">+				 struct mm_walk *walk)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct mem_size_stats *mss = walk-&gt;private;</span>
<span class="p_add">+	struct vm_area_struct *vma = walk-&gt;vma;</span>
<span class="p_add">+	struct page *page = NULL;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (pte_present(*pte)) {</span>
<span class="p_add">+		page = vm_normal_page(vma, addr, *pte);</span>
<span class="p_add">+	} else if (is_swap_pte(*pte)) {</span>
<span class="p_add">+		swp_entry_t swpent = pte_to_swp_entry(*pte);</span>
<span class="p_add">+</span>
<span class="p_add">+		if (is_migration_entry(swpent))</span>
<span class="p_add">+			page = migration_entry_to_page(swpent);</span>
<span class="p_add">+	}</span>
<span class="p_add">+	if (page)</span>
<span class="p_add">+		mss-&gt;hugetlb += huge_page_size(hstate_vma(vma));</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+#endif /* HUGETLB_PAGE */</span>
<span class="p_add">+</span>
 static int show_smap(struct seq_file *m, void *v, int is_pid)
 {
 	struct vm_area_struct *vma = v;
 	struct mem_size_stats mss;
 	struct mm_walk smaps_walk = {
 		.pmd_entry = smaps_pte_range,
<span class="p_add">+#ifdef CONFIG_HUGETLB_PAGE</span>
<span class="p_add">+		.hugetlb_entry = smaps_hugetlb_range,</span>
<span class="p_add">+#endif</span>
 		.mm = vma-&gt;vm_mm,
 		.private = &amp;mss,
 	};
<span class="p_chunk">@@ -637,6 +664,7 @@</span> <span class="p_context"> static int show_smap(struct seq_file *m, void *v, int is_pid)</span>
 		   &quot;Referenced:     %8lu kB\n&quot;
 		   &quot;Anonymous:      %8lu kB\n&quot;
 		   &quot;AnonHugePages:  %8lu kB\n&quot;
<span class="p_add">+		   &quot;HugetlbPages:   %8lu kB\n&quot;</span>
 		   &quot;Swap:           %8lu kB\n&quot;
 		   &quot;KernelPageSize: %8lu kB\n&quot;
 		   &quot;MMUPageSize:    %8lu kB\n&quot;
<span class="p_chunk">@@ -651,6 +679,7 @@</span> <span class="p_context"> static int show_smap(struct seq_file *m, void *v, int is_pid)</span>
 		   mss.referenced &gt;&gt; 10,
 		   mss.anonymous &gt;&gt; 10,
 		   mss.anonymous_thp &gt;&gt; 10,
<span class="p_add">+		   mss.hugetlb &gt;&gt; 10,</span>
 		   mss.swap &gt;&gt; 10,
 		   vma_kernel_pagesize(vma) &gt;&gt; 10,
 		   vma_mmu_pagesize(vma) &gt;&gt; 10,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



