
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.2.y-ckt,037/206] arm/arm64: KVM: Enforce Break-Before-Make on Stage-2 page tables - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.2.y-ckt,037/206] arm/arm64: KVM: Enforce Break-Before-Make on Stage-2 page tables</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=7718">Kamal Mostafa</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 9, 2016, 9:14 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1465507015-23052-38-git-send-email-kamal@canonical.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9168463/mbox/"
   >mbox</a>
|
   <a href="/patch/9168463/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9168463/">/patch/9168463/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	3002C604DB for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  9 Jun 2016 22:11:20 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 211E428319
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  9 Jun 2016 22:11:20 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 15F9028359; Thu,  9 Jun 2016 22:11:20 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7B2C028319
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  9 Jun 2016 22:11:19 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932784AbcFIWLL (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 9 Jun 2016 18:11:11 -0400
Received: from youngberry.canonical.com ([91.189.89.112]:50731 &quot;EHLO
	youngberry.canonical.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932343AbcFIVRu (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 9 Jun 2016 17:17:50 -0400
Received: from 1.general.kamal.us.vpn ([10.172.68.52] helo=fourier)
	by youngberry.canonical.com with esmtpsa
	(TLS1.0:RSA_AES_128_CBC_SHA1:16) (Exim 4.76)
	(envelope-from &lt;kamal@canonical.com&gt;)
	id 1bB7Km-0005Ab-LC; Thu, 09 Jun 2016 21:17:48 +0000
Received: from kamal by fourier with local (Exim 4.86_2)
	(envelope-from &lt;kamal@whence.com&gt;)
	id 1bB7Kj-00066r-V7; Thu, 09 Jun 2016 14:17:45 -0700
From: Kamal Mostafa &lt;kamal@canonical.com&gt;
To: linux-kernel@vger.kernel.org, stable@vger.kernel.org,
	kernel-team@lists.ubuntu.com
Cc: Marc Zyngier &lt;marc.zyngier@arm.com&gt;,
	Christoffer Dall &lt;christoffer.dall@linaro.org&gt;,
	Kamal Mostafa &lt;kamal@canonical.com&gt;
Subject: [PATCH 4.2.y-ckt 037/206] arm/arm64: KVM: Enforce Break-Before-Make
	on Stage-2 page tables
Date: Thu,  9 Jun 2016 14:14:06 -0700
Message-Id: &lt;1465507015-23052-38-git-send-email-kamal@canonical.com&gt;
X-Mailer: git-send-email 2.7.4
In-Reply-To: &lt;1465507015-23052-1-git-send-email-kamal@canonical.com&gt;
References: &lt;1465507015-23052-1-git-send-email-kamal@canonical.com&gt;
X-Extended-Stable: 4.2
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7718">Kamal Mostafa</a> - June 9, 2016, 9:14 p.m.</div>
<pre class="content">
4.2.8-ckt12 -stable review patch.  If anyone has any objections, please let me know.

---8&lt;------------------------------------------------------------
<span class="from">
From: Marc Zyngier &lt;marc.zyngier@arm.com&gt;</span>

commit d4b9e0790aa764c0b01e18d4e8d33e93ba36d51f upstream.

The ARM architecture mandates that when changing a page table entry
from a valid entry to another valid entry, an invalid entry is first
written, TLB invalidated, and only then the new entry being written.

The current code doesn&#39;t respect this, directly writing the new
entry and only then invalidating TLBs. Let&#39;s fix it up.

Reported-by: Christoffer Dall &lt;christoffer.dall@linaro.org&gt;
<span class="signed-off-by">Signed-off-by: Marc Zyngier &lt;marc.zyngier@arm.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Christoffer Dall &lt;christoffer.dall@linaro.org&gt;</span>
<span class="signed-off-by">Signed-off-by: Kamal Mostafa &lt;kamal@canonical.com&gt;</span>
---
 arch/arm/kvm/mmu.c | 17 +++++++++++------
 1 file changed, 11 insertions(+), 6 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm/kvm/mmu.c b/arch/arm/kvm/mmu.c</span>
<span class="p_header">index 61d96a6..12d727fa 100644</span>
<span class="p_header">--- a/arch/arm/kvm/mmu.c</span>
<span class="p_header">+++ b/arch/arm/kvm/mmu.c</span>
<span class="p_chunk">@@ -886,11 +886,14 @@</span> <span class="p_context"> static int stage2_set_pmd_huge(struct kvm *kvm, struct kvm_mmu_memory_cache</span>
 	VM_BUG_ON(pmd_present(*pmd) &amp;&amp; pmd_pfn(*pmd) != pmd_pfn(*new_pmd));
 
 	old_pmd = *pmd;
<span class="p_del">-	kvm_set_pmd(pmd, *new_pmd);</span>
<span class="p_del">-	if (pmd_present(old_pmd))</span>
<span class="p_add">+	if (pmd_present(old_pmd)) {</span>
<span class="p_add">+		pmd_clear(pmd);</span>
 		kvm_tlb_flush_vmid_ipa(kvm, addr);
<span class="p_del">-	else</span>
<span class="p_add">+	} else {</span>
 		get_page(virt_to_page(pmd));
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	kvm_set_pmd(pmd, *new_pmd);</span>
 	return 0;
 }
 
<span class="p_chunk">@@ -939,12 +942,14 @@</span> <span class="p_context"> static int stage2_set_pte(struct kvm *kvm, struct kvm_mmu_memory_cache *cache,</span>
 
 	/* Create 2nd stage page table mapping - Level 3 */
 	old_pte = *pte;
<span class="p_del">-	kvm_set_pte(pte, *new_pte);</span>
<span class="p_del">-	if (pte_present(old_pte))</span>
<span class="p_add">+	if (pte_present(old_pte)) {</span>
<span class="p_add">+		kvm_set_pte(pte, __pte(0));</span>
 		kvm_tlb_flush_vmid_ipa(kvm, addr);
<span class="p_del">-	else</span>
<span class="p_add">+	} else {</span>
 		get_page(virt_to_page(pte));
<span class="p_add">+	}</span>
 
<span class="p_add">+	kvm_set_pte(pte, *new_pte);</span>
 	return 0;
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



