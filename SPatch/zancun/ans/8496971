
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[1/4] mm: Convert pr_warning to pr_warn - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [1/4] mm: Convert pr_warning to pr_warn</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=325">Joe Perches</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 3, 2016, 11:25 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;4d7b3004d1715ddf86c821527a334615ac2dfdf4.1457047399.git.joe@perches.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8496971/mbox/"
   >mbox</a>
|
   <a href="/patch/8496971/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8496971/">/patch/8496971/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 39CCEC0553
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  3 Mar 2016 23:26:23 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 68D3820396
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  3 Mar 2016 23:26:22 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 8219420392
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  3 Mar 2016 23:26:21 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1758631AbcCCX0H (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 3 Mar 2016 18:26:07 -0500
Received: from smtprelay0083.hostedemail.com ([216.40.44.83]:56752 &quot;EHLO
	smtprelay.hostedemail.com&quot; rhost-flags-OK-OK-OK-FAIL)
	by vger.kernel.org with ESMTP id S1758440AbcCCX0D (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 3 Mar 2016 18:26:03 -0500
Received: from filter.hostedemail.com (unknown [216.40.38.60])
	by smtprelay04.hostedemail.com (Postfix) with ESMTP id 64EF5352044;
	Thu,  3 Mar 2016 23:26:01 +0000 (UTC)
X-Session-Marker: 6A6F6540706572636865732E636F6D
X-Spam-Summary: 2, 0, 0, , d41d8cd98f00b204, joe@perches.com, :::::::::::,
	RULES_HIT:2:41:355:379:541:800:960:973:988:989:1260:1345:1359:1437:1535:1606:1730:1747:1777:1792:2198:2199:2393:2553:2559:2562:2731:3138:3139:3140:3141:3142:3355:3865:3866:3867:3868:3870:3871:3872:3874:4117:4250:4321:5007:6119:6261:8603:10004:10848:11026:11473:11658:11914:12043:12048:12296:12438:12517:12519:12555:12679:13146:13161:13229:13230:14394:21080:30054:30090,
	0, RBL:none, CacheIP:none, Bayesian:0.5, 0.5, 0.5,
	Netcheck:none, DomainCache:0, MSF:not bulk, SPF:fn, MSBL:0,
	DNSBL:none, Custom_rules:0:0:0, LFtime:1, LUA_SUMMARY:none
X-HE-Tag: songs33_5186fffa6dc0a
X-Filterd-Recvd-Size: 6483
Received: from joe-laptop.perches.com
	(pool-173-51-221-2.lsanca.fios.verizon.net [173.51.221.2])
	(Authenticated sender: joe@perches.com)
	by omf11.hostedemail.com (Postfix) with ESMTPA;
	Thu,  3 Mar 2016 23:26:00 +0000 (UTC)
From: Joe Perches &lt;joe@perches.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Catalin Marinas &lt;catalin.marinas@arm.com&gt;, Tejun Heo &lt;tj@kernel.org&gt;,
	Christoph Lameter &lt;cl@linux-foundation.org&gt;
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org
Subject: [PATCH 1/4] mm: Convert pr_warning to pr_warn
Date: Thu,  3 Mar 2016 15:25:31 -0800
Message-Id: &lt;4d7b3004d1715ddf86c821527a334615ac2dfdf4.1457047399.git.joe@perches.com&gt;
X-Mailer: git-send-email 2.6.3.368.gf34be46
In-Reply-To: &lt;cover.1457047399.git.joe@perches.com&gt;
References: &lt;cover.1457047399.git.joe@perches.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=325">Joe Perches</a> - March 3, 2016, 11:25 p.m.</div>
<pre class="content">
There are a mixture of pr_warning and pr_warn uses in mm.
Use pr_warn consistently.

Miscellanea:

o Coalesce formats
o Realign arguments
<span class="signed-off-by">
Signed-off-by: Joe Perches &lt;joe@perches.com&gt;</span>
---
 mm/hugetlb.c  |  9 ++++-----
 mm/kmemleak.c | 14 +++++++-------
 mm/percpu.c   | 15 +++++++--------
 3 files changed, 18 insertions(+), 20 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=482">Tejun Heo</a> - March 4, 2016, 12:41 p.m.</div>
<pre class="content">
On Thu, Mar 03, 2016 at 03:25:31PM -0800, Joe Perches wrote:
<span class="quote">&gt; There are a mixture of pr_warning and pr_warn uses in mm.</span>
<span class="quote">&gt; Use pr_warn consistently.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Miscellanea:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; o Coalesce formats</span>
<span class="quote">&gt; o Realign arguments</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Joe Perches &lt;joe@perches.com&gt;</span>

For percpu,
<span class="acked-by">
 Acked-by: Tejun Heo &lt;tj@kernel.org&gt;</span>

Thanks.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 01f2b48..547e429 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -2665,7 +2665,7 @@</span> <span class="p_context"> void __init hugetlb_add_hstate(unsigned int order)</span>
 	unsigned long i;
 
 	if (size_to_hstate(PAGE_SIZE &lt;&lt; order)) {
<span class="p_del">-		pr_warning(&quot;hugepagesz= specified twice, ignoring\n&quot;);</span>
<span class="p_add">+		pr_warn(&quot;hugepagesz= specified twice, ignoring\n&quot;);</span>
 		return;
 	}
 	BUG_ON(hugetlb_max_hstate &gt;= HUGE_MAX_HSTATE);
<span class="p_chunk">@@ -2701,8 +2701,7 @@</span> <span class="p_context"> static int __init hugetlb_nrpages_setup(char *s)</span>
 		mhp = &amp;parsed_hstate-&gt;max_huge_pages;
 
 	if (mhp == last_mhp) {
<span class="p_del">-		pr_warning(&quot;hugepages= specified twice without &quot;</span>
<span class="p_del">-			   &quot;interleaving hugepagesz=, ignoring\n&quot;);</span>
<span class="p_add">+		pr_warn(&quot;hugepages= specified twice without interleaving hugepagesz=, ignoring\n&quot;);</span>
 		return 1;
 	}
 
<span class="p_chunk">@@ -3502,8 +3501,8 @@</span> <span class="p_context"> static int hugetlb_no_page(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 	 * COW. Warn that such a situation has occurred as it may not be obvious
 	 */
 	if (is_vma_resv_set(vma, HPAGE_RESV_UNMAPPED)) {
<span class="p_del">-		pr_warning(&quot;PID %d killed due to inadequate hugepage pool\n&quot;,</span>
<span class="p_del">-			   current-&gt;pid);</span>
<span class="p_add">+		pr_warn(&quot;PID %d killed due to inadequate hugepage pool\n&quot;,</span>
<span class="p_add">+			current-&gt;pid);</span>
 		return ret;
 	}
 
<span class="p_header">diff --git a/mm/kmemleak.c b/mm/kmemleak.c</span>
<span class="p_header">index 25c0ad3..a81cd76 100644</span>
<span class="p_header">--- a/mm/kmemleak.c</span>
<span class="p_header">+++ b/mm/kmemleak.c</span>
<span class="p_chunk">@@ -276,7 +276,7 @@</span> <span class="p_context"> static void kmemleak_disable(void);</span>
  * Print a warning and dump the stack trace.
  */
 #define kmemleak_warn(x...)	do {		\
<span class="p_del">-	pr_warning(x);				\</span>
<span class="p_add">+	pr_warn(x);				\</span>
 	dump_stack();				\
 	kmemleak_warning = 1;			\
 } while (0)
<span class="p_chunk">@@ -543,7 +543,7 @@</span> <span class="p_context"> static struct kmemleak_object *create_object(unsigned long ptr, size_t size,</span>
 
 	object = kmem_cache_alloc(object_cache, gfp_kmemleak_mask(gfp));
 	if (!object) {
<span class="p_del">-		pr_warning(&quot;Cannot allocate a kmemleak_object structure\n&quot;);</span>
<span class="p_add">+		pr_warn(&quot;Cannot allocate a kmemleak_object structure\n&quot;);</span>
 		kmemleak_disable();
 		return NULL;
 	}
<span class="p_chunk">@@ -764,7 +764,7 @@</span> <span class="p_context"> static void add_scan_area(unsigned long ptr, size_t size, gfp_t gfp)</span>
 
 	area = kmem_cache_alloc(scan_area_cache, gfp_kmemleak_mask(gfp));
 	if (!area) {
<span class="p_del">-		pr_warning(&quot;Cannot allocate a scan area\n&quot;);</span>
<span class="p_add">+		pr_warn(&quot;Cannot allocate a scan area\n&quot;);</span>
 		goto out;
 	}
 
<span class="p_chunk">@@ -1515,7 +1515,7 @@</span> <span class="p_context"> static void start_scan_thread(void)</span>
 		return;
 	scan_thread = kthread_run(kmemleak_scan_thread, NULL, &quot;kmemleak&quot;);
 	if (IS_ERR(scan_thread)) {
<span class="p_del">-		pr_warning(&quot;Failed to create the scan thread\n&quot;);</span>
<span class="p_add">+		pr_warn(&quot;Failed to create the scan thread\n&quot;);</span>
 		scan_thread = NULL;
 	}
 }
<span class="p_chunk">@@ -1874,8 +1874,8 @@</span> <span class="p_context"> void __init kmemleak_init(void)</span>
 	scan_area_cache = KMEM_CACHE(kmemleak_scan_area, SLAB_NOLEAKTRACE);
 
 	if (crt_early_log &gt; ARRAY_SIZE(early_log))
<span class="p_del">-		pr_warning(&quot;Early log buffer exceeded (%d), please increase &quot;</span>
<span class="p_del">-			   &quot;DEBUG_KMEMLEAK_EARLY_LOG_SIZE\n&quot;, crt_early_log);</span>
<span class="p_add">+		pr_warn(&quot;Early log buffer exceeded (%d), please increase DEBUG_KMEMLEAK_EARLY_LOG_SIZE\n&quot;,</span>
<span class="p_add">+			crt_early_log);</span>
 
 	/* the kernel is still in UP mode, so disabling the IRQs is enough */
 	local_irq_save(flags);
<span class="p_chunk">@@ -1960,7 +1960,7 @@</span> <span class="p_context"> static int __init kmemleak_late_init(void)</span>
 	dentry = debugfs_create_file(&quot;kmemleak&quot;, S_IRUGO, NULL, NULL,
 				     &amp;kmemleak_fops);
 	if (!dentry)
<span class="p_del">-		pr_warning(&quot;Failed to create the debugfs kmemleak file\n&quot;);</span>
<span class="p_add">+		pr_warn(&quot;Failed to create the debugfs kmemleak file\n&quot;);</span>
 	mutex_lock(&amp;scan_mutex);
 	start_scan_thread();
 	mutex_unlock(&amp;scan_mutex);
<span class="p_header">diff --git a/mm/percpu.c b/mm/percpu.c</span>
<span class="p_header">index 998607a..847814b 100644</span>
<span class="p_header">--- a/mm/percpu.c</span>
<span class="p_header">+++ b/mm/percpu.c</span>
<span class="p_chunk">@@ -1033,8 +1033,8 @@</span> <span class="p_context"> fail_unlock:</span>
 	spin_unlock_irqrestore(&amp;pcpu_lock, flags);
 fail:
 	if (!is_atomic &amp;&amp; warn_limit) {
<span class="p_del">-		pr_warning(&quot;PERCPU: allocation failed, size=%zu align=%zu atomic=%d, %s\n&quot;,</span>
<span class="p_del">-			   size, align, is_atomic, err);</span>
<span class="p_add">+		pr_warn(&quot;PERCPU: allocation failed, size=%zu align=%zu atomic=%d, %s\n&quot;,</span>
<span class="p_add">+			size, align, is_atomic, err);</span>
 		dump_stack();
 		if (!--warn_limit)
 			pr_info(&quot;PERCPU: limit reached, disable warning\n&quot;);
<span class="p_chunk">@@ -1723,7 +1723,7 @@</span> <span class="p_context"> static int __init percpu_alloc_setup(char *str)</span>
 		pcpu_chosen_fc = PCPU_FC_PAGE;
 #endif
 	else
<span class="p_del">-		pr_warning(&quot;PERCPU: unknown allocator %s specified\n&quot;, str);</span>
<span class="p_add">+		pr_warn(&quot;PERCPU: unknown allocator %s specified\n&quot;, str);</span>
 
 	return 0;
 }
<span class="p_chunk">@@ -2016,9 +2016,8 @@</span> <span class="p_context"> int __init pcpu_embed_first_chunk(size_t reserved_size, size_t dyn_size,</span>
 
 	/* warn if maximum distance is further than 75% of vmalloc space */
 	if (max_distance &gt; VMALLOC_TOTAL * 3 / 4) {
<span class="p_del">-		pr_warning(&quot;PERCPU: max_distance=0x%zx too large for vmalloc &quot;</span>
<span class="p_del">-			   &quot;space 0x%lx\n&quot;, max_distance,</span>
<span class="p_del">-			   VMALLOC_TOTAL);</span>
<span class="p_add">+		pr_warn(&quot;PERCPU: max_distance=0x%zx too large for vmalloc space 0x%lx\n&quot;,</span>
<span class="p_add">+			max_distance, VMALLOC_TOTAL);</span>
 #ifdef CONFIG_NEED_PER_CPU_PAGE_FIRST_CHUNK
 		/* and fail if we have fallback */
 		rc = -EINVAL;
<span class="p_chunk">@@ -2100,8 +2099,8 @@</span> <span class="p_context"> int __init pcpu_page_first_chunk(size_t reserved_size,</span>
 
 			ptr = alloc_fn(cpu, PAGE_SIZE, PAGE_SIZE);
 			if (!ptr) {
<span class="p_del">-				pr_warning(&quot;PERCPU: failed to allocate %s page &quot;</span>
<span class="p_del">-					   &quot;for cpu%u\n&quot;, psize_str, cpu);</span>
<span class="p_add">+				pr_warn(&quot;PERCPU: failed to allocate %s page for cpu%u\n&quot;,</span>
<span class="p_add">+					psize_str, cpu);</span>
 				goto enomem;
 			}
 			/* kmemleak tracks the percpu allocations separately */

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



