
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[V7,1/2] dma-mapping: Rework dma_get_cache_alignment() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [V7,1/2] dma-mapping: Rework dma_get_cache_alignment()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=44471">Huacai Chen</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 25, 2017, 9:46 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1506332766-23966-1-git-send-email-chenhc@lemote.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9969527/mbox/"
   >mbox</a>
|
   <a href="/patch/9969527/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9969527/">/patch/9969527/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	47FD9602D8 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 25 Sep 2017 10:02:33 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3833F20950
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 25 Sep 2017 10:02:33 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 2C441285FD; Mon, 25 Sep 2017 10:02:33 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id DC90220950
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 25 Sep 2017 10:02:31 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S933723AbdIYKC3 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 25 Sep 2017 06:02:29 -0400
Received: from smtpbgau1.qq.com ([54.206.16.166]:36086 &quot;EHLO
	smtpbgau1.qq.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S932698AbdIYKC1 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 25 Sep 2017 06:02:27 -0400
X-QQ-mid: bizesmtp16t1506332677tq5m793f
Received: from software.domain.org (unknown [222.92.8.142])
	by esmtp4.qq.com (ESMTP) with 
	id ; Mon, 25 Sep 2017 17:44:12 +0800 (CST)
X-QQ-SSF: 01100000008000F0FNF0000A0000000
X-QQ-FEAT: 6dXuswn9i1UUXDKWxjTfP3I6xmcvGg2RdgVnuA7f4nK8uILfLqEUlcta7fe9C
	Kdw463f+pCEqPEbkXZZ7bk7RVg1C0GgIKvVGJfOqWJUcqomufiE/YQoFX1iHnHcX5Aer5Sb
	os0NxrgiKYFF5/lJzCNH4BXOQXb7CvBEI3vSAv/Z8aRVvSf35lMnBe4qfV73ZOKx08bhpRy
	ldzIwIp6j7YC0CARJS11e5/eNGtLfgmxa+b8srx2nzVACqGofvLmGcrWeX6GM8oDv5AkqGb
	SOaz0V3ObdgVkQFag3H2A70ukLu8Q77Do2EMmYloSIyh6X
X-QQ-GoodBg: 0
From: Huacai Chen &lt;chenhc@lemote.com&gt;
To: Christoph Hellwig &lt;hch@lst.de&gt;
Cc: Marek Szyprowski &lt;m.szyprowski@samsung.com&gt;,
	Robin Murphy &lt;robin.murphy@arm.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Fuxin Zhang &lt;zhangfx@lemote.com&gt;, linux-kernel@vger.kernel.org,
	Ralf Baechle &lt;ralf@linux-mips.org&gt;, James Hogan &lt;james.hogan@imgtec.com&gt;,
	linux-mips@linux-mips.org,
	&quot;James E . J . Bottomley&quot; &lt;jejb@linux.vnet.ibm.com&gt;,
	&quot;Martin K . Petersen&quot; &lt;martin.petersen@oracle.com&gt;,
	linux-scsi@vger.kernel.org, Roland Dreier &lt;rolandd@cisco.com&gt;,
	Pawel Osciak &lt;pawel@osciak.com&gt;,
	Kyungmin Park &lt;kyungmin.park@samsung.com&gt;,
	Michael Chan &lt;michael.chan@broadcom.com&gt;,
	Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;,
	Ivan Mikhaylov &lt;ivan@ru.ibm.com&gt;, Tariq Toukan &lt;tariqt@mellanox.com&gt;,
	Andy Gross &lt;agross@codeaurora.org&gt;, &quot;Mark A . Greer&quot; &lt;mgreer@mvista.com&gt;,
	Robert Baldyga &lt;r.baldyga@samsung.com&gt;,
	Huacai Chen &lt;chenhc@lemote.com&gt;, stable@vger.kernel.org
Subject: [PATCH V7 1/2] dma-mapping: Rework dma_get_cache_alignment()
Date: Mon, 25 Sep 2017 17:46:05 +0800
Message-Id: &lt;1506332766-23966-1-git-send-email-chenhc@lemote.com&gt;
X-Mailer: git-send-email 2.7.0
X-QQ-SENDSIZE: 520
Feedback-ID: bizesmtp:lemote.com:qybgforeign:qybgforeign2
X-QQ-Bgrelay: 1
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=44471">Huacai Chen</a> - Sept. 25, 2017, 9:46 a.m.</div>
<pre class="content">
Make dma_get_cache_alignment() to accept a &#39;dev&#39; argument. As a result,
it can return different alignments due to different devices&#39; I/O cache
coherency.

Currently, MIPS is the only architecture which support coherent &amp; non-
coherent devices co-exist. This may be changed in the future, so add a
new get_cache_alignment() function pointer in &#39;struct dma_map_ops&#39; as a
generic solution.

For compatibility (always return ARCH_DMA_MINALIGN), make all existing
callers pass a NULL dev argument to dma_get_cache_alignment().

Cc: stable@vger.kernel.org
<span class="signed-off-by">Signed-off-by: Huacai Chen &lt;chenhc@lemote.com&gt;</span>
---
 arch/mips/cavium-octeon/dma-octeon.c           |  3 ++-
 arch/mips/include/asm/dma-mapping.h            |  2 ++
 arch/mips/loongson64/common/dma-swiotlb.c      |  1 +
 arch/mips/mm/dma-default.c                     | 11 ++++++++++-
 arch/mips/netlogic/common/nlm-dma.c            |  3 ++-
 drivers/infiniband/hw/mthca/mthca_main.c       |  2 +-
 drivers/media/v4l2-core/videobuf2-dma-contig.c |  2 +-
 drivers/net/ethernet/broadcom/b44.c            |  2 +-
 drivers/net/ethernet/ibm/emac/core.h           |  2 +-
 drivers/net/ethernet/mellanox/mlx4/main.c      |  2 +-
 drivers/spi/spi-qup.c                          |  4 ++--
 drivers/tty/serial/mpsc.c                      | 16 ++++++++--------
 drivers/tty/serial/samsung.c                   | 14 +++++++-------
 include/linux/dma-mapping.h                    | 17 ++++++++++++-----
 14 files changed, 51 insertions(+), 30 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a> - Sept. 25, 2017, 12:51 p.m.</div>
<pre class="content">
<span class="quote">&gt; index aba7138..e2c5d9e 100644</span>
<span class="quote">&gt; --- a/arch/mips/include/asm/dma-mapping.h</span>
<span class="quote">&gt; +++ b/arch/mips/include/asm/dma-mapping.h</span>
<span class="quote">&gt; @@ -39,4 +39,6 @@ static inline void arch_setup_dma_ops(struct device *dev, u64 dma_base,</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +int mips_get_cache_alignment(struct device *dev);</span>

All the other mips generic dma helpers are prefixed mips_dma_*
so it might make sense to follow that.

Also please don&#39;t add arch-local helpers to asm/dma-mapping.h - this
is a header used by linux/dma-mapping.h and should not contain
implementation details if avoidable.
<span class="quote">
&gt; +					   dma_get_cache_alignment(NULL)) / mdev-&gt;limits.mtt_seg_size;</span>

As said before - please don&#39;t pass NULL to this function but the proper
device, which would be &amp;mdev-&gt;pdev-&gt;dev in this case for example.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=77581">Robin Murphy</a> - Sept. 25, 2017, 12:57 p.m.</div>
<pre class="content">
On 25/09/17 10:46, Huacai Chen wrote:
<span class="quote">&gt; Make dma_get_cache_alignment() to accept a &#39;dev&#39; argument. As a result,</span>
<span class="quote">&gt; it can return different alignments due to different devices&#39; I/O cache</span>
<span class="quote">&gt; coherency.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Currently, MIPS is the only architecture which support coherent &amp; non-</span>
<span class="quote">&gt; coherent devices co-exist. This may be changed in the future, so add a</span>
<span class="quote">&gt; new get_cache_alignment() function pointer in &#39;struct dma_map_ops&#39; as a</span>
<span class="quote">&gt; generic solution.</span>

FWIW, ARM and arm64 have also supported per-device coherency for quite
some time.
<span class="quote">
&gt; For compatibility (always return ARCH_DMA_MINALIGN), make all existing</span>
<span class="quote">&gt; callers pass a NULL dev argument to dma_get_cache_alignment().</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Cc: stable@vger.kernel.org</span>
<span class="quote">&gt; Signed-off-by: Huacai Chen &lt;chenhc@lemote.co&gt; ---</span>
<span class="quote">&gt;  arch/mips/cavium-octeon/dma-octeon.c           |  3 ++-</span>
<span class="quote">&gt;  arch/mips/include/asm/dma-mapping.h            |  2 ++</span>
<span class="quote">&gt;  arch/mips/loongson64/common/dma-swiotlb.c      |  1 +</span>
<span class="quote">&gt;  arch/mips/mm/dma-default.c                     | 11 ++++++++++-</span>
<span class="quote">&gt;  arch/mips/netlogic/common/nlm-dma.c            |  3 ++-</span>
<span class="quote">&gt;  drivers/infiniband/hw/mthca/mthca_main.c       |  2 +-</span>
<span class="quote">&gt;  drivers/media/v4l2-core/videobuf2-dma-contig.c |  2 +-</span>
<span class="quote">&gt;  drivers/net/ethernet/broadcom/b44.c            |  2 +-</span>
<span class="quote">&gt;  drivers/net/ethernet/ibm/emac/core.h           |  2 +-</span>
<span class="quote">&gt;  drivers/net/ethernet/mellanox/mlx4/main.c      |  2 +-</span>
<span class="quote">&gt;  drivers/spi/spi-qup.c                          |  4 ++--</span>
<span class="quote">&gt;  drivers/tty/serial/mpsc.c                      | 16 ++++++++--------</span>
<span class="quote">&gt;  drivers/tty/serial/samsung.c                   | 14 +++++++-------</span>
<span class="quote">&gt;  include/linux/dma-mapping.h                    | 17 ++++++++++++-----</span>
<span class="quote">&gt;  14 files changed, 51 insertions(+), 30 deletions(-)</span>

I think it might be neater to split this into two patches - one making
the treewide prototype change, then introducing the .get_cache_alignemnt
callback separately - but that&#39;s only my personal preference.

Otherwise (and modulo Christoph&#39;s comments), I&#39;d say we&#39;re nearly there.

Thanks,
Robin.
<span class="quote">
&gt; diff --git a/arch/mips/cavium-octeon/dma-octeon.c b/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="quote">&gt; index c64bd87..7978237 100644</span>
<span class="quote">&gt; --- a/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="quote">&gt; +++ b/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="quote">&gt; @@ -324,7 +324,8 @@ static struct octeon_dma_map_ops _octeon_pci_dma_map_ops = {</span>
<span class="quote">&gt;  		.sync_sg_for_cpu = swiotlb_sync_sg_for_cpu,</span>
<span class="quote">&gt;  		.sync_sg_for_device = octeon_dma_sync_sg_for_device,</span>
<span class="quote">&gt;  		.mapping_error = swiotlb_dma_mapping_error,</span>
<span class="quote">&gt; -		.dma_supported = swiotlb_dma_supported</span>
<span class="quote">&gt; +		.dma_supported = swiotlb_dma_supported,</span>
<span class="quote">&gt; +		.get_cache_alignment = mips_get_cache_alignment</span>
<span class="quote">&gt;  	},</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; diff --git a/arch/mips/include/asm/dma-mapping.h b/arch/mips/include/asm/dma-mapping.h</span>
<span class="quote">&gt; index aba7138..e2c5d9e 100644</span>
<span class="quote">&gt; --- a/arch/mips/include/asm/dma-mapping.h</span>
<span class="quote">&gt; +++ b/arch/mips/include/asm/dma-mapping.h</span>
<span class="quote">&gt; @@ -39,4 +39,6 @@ static inline void arch_setup_dma_ops(struct device *dev, u64 dma_base,</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +int mips_get_cache_alignment(struct device *dev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  #endif /* _ASM_DMA_MAPPING_H */</span>
<span class="quote">&gt; diff --git a/arch/mips/loongson64/common/dma-swiotlb.c b/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="quote">&gt; index 34486c1..09cb8a4 100644</span>
<span class="quote">&gt; --- a/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="quote">&gt; +++ b/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="quote">&gt; @@ -119,6 +119,7 @@ static const struct dma_map_ops loongson_dma_map_ops = {</span>
<span class="quote">&gt;  	.sync_sg_for_device = loongson_dma_sync_sg_for_device,</span>
<span class="quote">&gt;  	.mapping_error = swiotlb_dma_mapping_error,</span>
<span class="quote">&gt;  	.dma_supported = loongson_dma_supported,</span>
<span class="quote">&gt; +	.get_cache_alignment = mips_get_cache_alignment</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  void __init plat_swiotlb_setup(void)</span>
<span class="quote">&gt; diff --git a/arch/mips/mm/dma-default.c b/arch/mips/mm/dma-default.c</span>
<span class="quote">&gt; index c01bd20..c49987e 100644</span>
<span class="quote">&gt; --- a/arch/mips/mm/dma-default.c</span>
<span class="quote">&gt; +++ b/arch/mips/mm/dma-default.c</span>
<span class="quote">&gt; @@ -394,6 +394,14 @@ void dma_cache_sync(struct device *dev, void *vaddr, size_t size,</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  EXPORT_SYMBOL(dma_cache_sync);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +int mips_get_cache_alignment(struct device *dev)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	if (plat_device_is_coherent(dev))</span>
<span class="quote">&gt; +		return 1;</span>
<span class="quote">&gt; +	else</span>
<span class="quote">&gt; +		return ARCH_DMA_MINALIGN;</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  static const struct dma_map_ops mips_default_dma_map_ops = {</span>
<span class="quote">&gt;  	.alloc = mips_dma_alloc_coherent,</span>
<span class="quote">&gt;  	.free = mips_dma_free_coherent,</span>
<span class="quote">&gt; @@ -407,7 +415,8 @@ static const struct dma_map_ops mips_default_dma_map_ops = {</span>
<span class="quote">&gt;  	.sync_sg_for_cpu = mips_dma_sync_sg_for_cpu,</span>
<span class="quote">&gt;  	.sync_sg_for_device = mips_dma_sync_sg_for_device,</span>
<span class="quote">&gt;  	.mapping_error = mips_dma_mapping_error,</span>
<span class="quote">&gt; -	.dma_supported = mips_dma_supported</span>
<span class="quote">&gt; +	.dma_supported = mips_dma_supported,</span>
<span class="quote">&gt; +	.get_cache_alignment = mips_get_cache_alignment</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  const struct dma_map_ops *mips_dma_map_ops = &amp;mips_default_dma_map_ops;</span>
<span class="quote">&gt; diff --git a/arch/mips/netlogic/common/nlm-dma.c b/arch/mips/netlogic/common/nlm-dma.c</span>
<span class="quote">&gt; index 0ec9d9d..1e107ac 100644</span>
<span class="quote">&gt; --- a/arch/mips/netlogic/common/nlm-dma.c</span>
<span class="quote">&gt; +++ b/arch/mips/netlogic/common/nlm-dma.c</span>
<span class="quote">&gt; @@ -79,7 +79,8 @@ const struct dma_map_ops nlm_swiotlb_dma_ops = {</span>
<span class="quote">&gt;  	.sync_sg_for_cpu = swiotlb_sync_sg_for_cpu,</span>
<span class="quote">&gt;  	.sync_sg_for_device = swiotlb_sync_sg_for_device,</span>
<span class="quote">&gt;  	.mapping_error = swiotlb_dma_mapping_error,</span>
<span class="quote">&gt; -	.dma_supported = swiotlb_dma_supported</span>
<span class="quote">&gt; +	.dma_supported = swiotlb_dma_supported,</span>
<span class="quote">&gt; +	.get_cache_alignment = mips_get_cache_alignment</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  void __init plat_swiotlb_setup(void)</span>
<span class="quote">&gt; diff --git a/drivers/infiniband/hw/mthca/mthca_main.c b/drivers/infiniband/hw/mthca/mthca_main.c</span>
<span class="quote">&gt; index e36a9bc..cac5fac 100644</span>
<span class="quote">&gt; --- a/drivers/infiniband/hw/mthca/mthca_main.c</span>
<span class="quote">&gt; +++ b/drivers/infiniband/hw/mthca/mthca_main.c</span>
<span class="quote">&gt; @@ -416,7 +416,7 @@ static int mthca_init_icm(struct mthca_dev *mdev,</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	/* CPU writes to non-reserved MTTs, while HCA might DMA to reserved mtts */</span>
<span class="quote">&gt;  	mdev-&gt;limits.reserved_mtts = ALIGN(mdev-&gt;limits.reserved_mtts * mdev-&gt;limits.mtt_seg_size,</span>
<span class="quote">&gt; -					   dma_get_cache_alignment()) / mdev-&gt;limits.mtt_seg_size;</span>
<span class="quote">&gt; +					   dma_get_cache_alignment(NULL)) / mdev-&gt;limits.mtt_seg_size;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	mdev-&gt;mr_table.mtt_table = mthca_alloc_icm_table(mdev, init_hca-&gt;mtt_base,</span>
<span class="quote">&gt;  							 mdev-&gt;limits.mtt_seg_size,</span>
<span class="quote">&gt; diff --git a/drivers/media/v4l2-core/videobuf2-dma-contig.c b/drivers/media/v4l2-core/videobuf2-dma-contig.c</span>
<span class="quote">&gt; index 9f389f3..7f54739 100644</span>
<span class="quote">&gt; --- a/drivers/media/v4l2-core/videobuf2-dma-contig.c</span>
<span class="quote">&gt; +++ b/drivers/media/v4l2-core/videobuf2-dma-contig.c</span>
<span class="quote">&gt; @@ -484,7 +484,7 @@ static void *vb2_dc_get_userptr(struct device *dev, unsigned long vaddr,</span>
<span class="quote">&gt;  	int ret = 0;</span>
<span class="quote">&gt;  	struct sg_table *sgt;</span>
<span class="quote">&gt;  	unsigned long contig_size;</span>
<span class="quote">&gt; -	unsigned long dma_align = dma_get_cache_alignment();</span>
<span class="quote">&gt; +	unsigned long dma_align = dma_get_cache_alignment(NULL);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	/* Only cache aligned DMA transfers are reliable */</span>
<span class="quote">&gt;  	if (!IS_ALIGNED(vaddr | size, dma_align)) {</span>
<span class="quote">&gt; diff --git a/drivers/net/ethernet/broadcom/b44.c b/drivers/net/ethernet/broadcom/b44.c</span>
<span class="quote">&gt; index a1125d1..291d6af 100644</span>
<span class="quote">&gt; --- a/drivers/net/ethernet/broadcom/b44.c</span>
<span class="quote">&gt; +++ b/drivers/net/ethernet/broadcom/b44.c</span>
<span class="quote">&gt; @@ -2587,7 +2587,7 @@ static inline void b44_pci_exit(void)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  static int __init b44_init(void)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -	unsigned int dma_desc_align_size = dma_get_cache_alignment();</span>
<span class="quote">&gt; +	unsigned int dma_desc_align_size = dma_get_cache_alignment(NULL);</span>
<span class="quote">&gt;  	int err;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	/* Setup paramaters for syncing RX/TX DMA descriptors */</span>
<span class="quote">&gt; diff --git a/drivers/net/ethernet/ibm/emac/core.h b/drivers/net/ethernet/ibm/emac/core.h</span>
<span class="quote">&gt; index 369de2c..236bf37 100644</span>
<span class="quote">&gt; --- a/drivers/net/ethernet/ibm/emac/core.h</span>
<span class="quote">&gt; +++ b/drivers/net/ethernet/ibm/emac/core.h</span>
<span class="quote">&gt; @@ -68,7 +68,7 @@ static inline int emac_rx_size(int mtu)</span>
<span class="quote">&gt;  		return mal_rx_size(ETH_DATA_LEN + EMAC_MTU_OVERHEAD);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -#define EMAC_DMA_ALIGN(x)		ALIGN((x), dma_get_cache_alignment())</span>
<span class="quote">&gt; +#define EMAC_DMA_ALIGN(x)		ALIGN((x), dma_get_cache_alignment(NULL))</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define EMAC_RX_SKB_HEADROOM		\</span>
<span class="quote">&gt;  	EMAC_DMA_ALIGN(CONFIG_IBM_EMAC_RX_SKB_HEADROOM)</span>
<span class="quote">&gt; diff --git a/drivers/net/ethernet/mellanox/mlx4/main.c b/drivers/net/ethernet/mellanox/mlx4/main.c</span>
<span class="quote">&gt; index e61c99e..56b1449 100644</span>
<span class="quote">&gt; --- a/drivers/net/ethernet/mellanox/mlx4/main.c</span>
<span class="quote">&gt; +++ b/drivers/net/ethernet/mellanox/mlx4/main.c</span>
<span class="quote">&gt; @@ -1660,7 +1660,7 @@ static int mlx4_init_icm(struct mlx4_dev *dev, struct mlx4_dev_cap *dev_cap,</span>
<span class="quote">&gt;  	 */</span>
<span class="quote">&gt;  	dev-&gt;caps.reserved_mtts =</span>
<span class="quote">&gt;  		ALIGN(dev-&gt;caps.reserved_mtts * dev-&gt;caps.mtt_entry_sz,</span>
<span class="quote">&gt; -		      dma_get_cache_alignment()) / dev-&gt;caps.mtt_entry_sz;</span>
<span class="quote">&gt; +		      dma_get_cache_alignment(NULL)) / dev-&gt;caps.mtt_entry_sz;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	err = mlx4_init_icm_table(dev, &amp;priv-&gt;mr_table.mtt_table,</span>
<span class="quote">&gt;  				  init_hca-&gt;mtt_base,</span>
<span class="quote">&gt; diff --git a/drivers/spi/spi-qup.c b/drivers/spi/spi-qup.c</span>
<span class="quote">&gt; index 974a8ce..0c698c3 100644</span>
<span class="quote">&gt; --- a/drivers/spi/spi-qup.c</span>
<span class="quote">&gt; +++ b/drivers/spi/spi-qup.c</span>
<span class="quote">&gt; @@ -862,7 +862,7 @@ static bool spi_qup_can_dma(struct spi_master *master, struct spi_device *spi,</span>
<span class="quote">&gt;  			    struct spi_transfer *xfer)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	struct spi_qup *qup = spi_master_get_devdata(master);</span>
<span class="quote">&gt; -	size_t dma_align = dma_get_cache_alignment();</span>
<span class="quote">&gt; +	size_t dma_align = dma_get_cache_alignment(NULL);</span>
<span class="quote">&gt;  	int n_words;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	if (xfer-&gt;rx_buf) {</span>
<span class="quote">&gt; @@ -1038,7 +1038,7 @@ static int spi_qup_probe(struct platform_device *pdev)</span>
<span class="quote">&gt;  	master-&gt;transfer_one = spi_qup_transfer_one;</span>
<span class="quote">&gt;  	master-&gt;dev.of_node = pdev-&gt;dev.of_node;</span>
<span class="quote">&gt;  	master-&gt;auto_runtime_pm = true;</span>
<span class="quote">&gt; -	master-&gt;dma_alignment = dma_get_cache_alignment();</span>
<span class="quote">&gt; +	master-&gt;dma_alignment = dma_get_cache_alignment(NULL);</span>
<span class="quote">&gt;  	master-&gt;max_dma_len = SPI_MAX_XFER;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	platform_set_drvdata(pdev, master);</span>
<span class="quote">&gt; diff --git a/drivers/tty/serial/mpsc.c b/drivers/tty/serial/mpsc.c</span>
<span class="quote">&gt; index 67ffecc..e2f792a 100644</span>
<span class="quote">&gt; --- a/drivers/tty/serial/mpsc.c</span>
<span class="quote">&gt; +++ b/drivers/tty/serial/mpsc.c</span>
<span class="quote">&gt; @@ -81,19 +81,19 @@</span>
<span class="quote">&gt;   * Number of Tx &amp; Rx descriptors must be powers of 2.</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt;  #define	MPSC_RXR_ENTRIES	32</span>
<span class="quote">&gt; -#define	MPSC_RXRE_SIZE		dma_get_cache_alignment()</span>
<span class="quote">&gt; +#define	MPSC_RXRE_SIZE		dma_get_cache_alignment(NULL)</span>
<span class="quote">&gt;  #define	MPSC_RXR_SIZE		(MPSC_RXR_ENTRIES * MPSC_RXRE_SIZE)</span>
<span class="quote">&gt; -#define	MPSC_RXBE_SIZE		dma_get_cache_alignment()</span>
<span class="quote">&gt; +#define	MPSC_RXBE_SIZE		dma_get_cache_alignment(NULL)</span>
<span class="quote">&gt;  #define	MPSC_RXB_SIZE		(MPSC_RXR_ENTRIES * MPSC_RXBE_SIZE)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define	MPSC_TXR_ENTRIES	32</span>
<span class="quote">&gt; -#define	MPSC_TXRE_SIZE		dma_get_cache_alignment()</span>
<span class="quote">&gt; +#define	MPSC_TXRE_SIZE		dma_get_cache_alignment(NULL)</span>
<span class="quote">&gt;  #define	MPSC_TXR_SIZE		(MPSC_TXR_ENTRIES * MPSC_TXRE_SIZE)</span>
<span class="quote">&gt; -#define	MPSC_TXBE_SIZE		dma_get_cache_alignment()</span>
<span class="quote">&gt; +#define	MPSC_TXBE_SIZE		dma_get_cache_alignment(NULL)</span>
<span class="quote">&gt;  #define	MPSC_TXB_SIZE		(MPSC_TXR_ENTRIES * MPSC_TXBE_SIZE)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define	MPSC_DMA_ALLOC_SIZE	(MPSC_RXR_SIZE + MPSC_RXB_SIZE + MPSC_TXR_SIZE \</span>
<span class="quote">&gt; -		+ MPSC_TXB_SIZE + dma_get_cache_alignment() /* for alignment */)</span>
<span class="quote">&gt; +		+ MPSC_TXB_SIZE + dma_get_cache_alignment(NULL) /* for alignment */)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /* Rx and Tx Ring entry descriptors -- assume entry size is &lt;= cacheline size */</span>
<span class="quote">&gt;  struct mpsc_rx_desc {</span>
<span class="quote">&gt; @@ -738,7 +738,7 @@ static void mpsc_init_hw(struct mpsc_port_info *pi)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	mpsc_brg_init(pi, pi-&gt;brg_clk_src);</span>
<span class="quote">&gt;  	mpsc_brg_enable(pi);</span>
<span class="quote">&gt; -	mpsc_sdma_init(pi, dma_get_cache_alignment());	/* burst a cacheline */</span>
<span class="quote">&gt; +	mpsc_sdma_init(pi, dma_get_cache_alignment(NULL));	/* burst a cacheline */</span>
<span class="quote">&gt;  	mpsc_sdma_stop(pi);</span>
<span class="quote">&gt;  	mpsc_hw_init(pi);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; @@ -798,8 +798,8 @@ static void mpsc_init_rings(struct mpsc_port_info *pi)</span>
<span class="quote">&gt;  	 * Descriptors &amp; buffers are multiples of cacheline size and must be</span>
<span class="quote">&gt;  	 * cacheline aligned.</span>
<span class="quote">&gt;  	 */</span>
<span class="quote">&gt; -	dp = ALIGN((u32)pi-&gt;dma_region, dma_get_cache_alignment());</span>
<span class="quote">&gt; -	dp_p = ALIGN((u32)pi-&gt;dma_region_p, dma_get_cache_alignment());</span>
<span class="quote">&gt; +	dp = ALIGN((u32)pi-&gt;dma_region, dma_get_cache_alignment(NULL));</span>
<span class="quote">&gt; +	dp_p = ALIGN((u32)pi-&gt;dma_region_p, dma_get_cache_alignment(NULL));</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	/*</span>
<span class="quote">&gt;  	 * Partition dma region into rx ring descriptor, rx buffers,</span>
<span class="quote">&gt; diff --git a/drivers/tty/serial/samsung.c b/drivers/tty/serial/samsung.c</span>
<span class="quote">&gt; index 8aca18c..b40a681 100644</span>
<span class="quote">&gt; --- a/drivers/tty/serial/samsung.c</span>
<span class="quote">&gt; +++ b/drivers/tty/serial/samsung.c</span>
<span class="quote">&gt; @@ -241,7 +241,7 @@ static void enable_tx_dma(struct s3c24xx_uart_port *ourport)</span>
<span class="quote">&gt;  	/* Enable tx dma mode */</span>
<span class="quote">&gt;  	ucon = rd_regl(port, S3C2410_UCON);</span>
<span class="quote">&gt;  	ucon &amp;= ~(S3C64XX_UCON_TXBURST_MASK | S3C64XX_UCON_TXMODE_MASK);</span>
<span class="quote">&gt; -	ucon |= (dma_get_cache_alignment() &gt;= 16) ?</span>
<span class="quote">&gt; +	ucon |= (dma_get_cache_alignment(NULL) &gt;= 16) ?</span>
<span class="quote">&gt;  		S3C64XX_UCON_TXBURST_16 : S3C64XX_UCON_TXBURST_1;</span>
<span class="quote">&gt;  	ucon |= S3C64XX_UCON_TXMODE_DMA;</span>
<span class="quote">&gt;  	wr_regl(port,  S3C2410_UCON, ucon);</span>
<span class="quote">&gt; @@ -292,7 +292,7 @@ static int s3c24xx_serial_start_tx_dma(struct s3c24xx_uart_port *ourport,</span>
<span class="quote">&gt;  	if (ourport-&gt;tx_mode != S3C24XX_TX_DMA)</span>
<span class="quote">&gt;  		enable_tx_dma(ourport);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -	dma-&gt;tx_size = count &amp; ~(dma_get_cache_alignment() - 1);</span>
<span class="quote">&gt; +	dma-&gt;tx_size = count &amp; ~(dma_get_cache_alignment(NULL) - 1);</span>
<span class="quote">&gt;  	dma-&gt;tx_transfer_addr = dma-&gt;tx_addr + xmit-&gt;tail;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	dma_sync_single_for_device(ourport-&gt;port.dev, dma-&gt;tx_transfer_addr,</span>
<span class="quote">&gt; @@ -332,7 +332,7 @@ static void s3c24xx_serial_start_next_tx(struct s3c24xx_uart_port *ourport)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	if (!ourport-&gt;dma || !ourport-&gt;dma-&gt;tx_chan ||</span>
<span class="quote">&gt;  	    count &lt; ourport-&gt;min_dma_size ||</span>
<span class="quote">&gt; -	    xmit-&gt;tail &amp; (dma_get_cache_alignment() - 1))</span>
<span class="quote">&gt; +	    xmit-&gt;tail &amp; (dma_get_cache_alignment(NULL) - 1))</span>
<span class="quote">&gt;  		s3c24xx_serial_start_tx_pio(ourport);</span>
<span class="quote">&gt;  	else</span>
<span class="quote">&gt;  		s3c24xx_serial_start_tx_dma(ourport, count);</span>
<span class="quote">&gt; @@ -718,8 +718,8 @@ static irqreturn_t s3c24xx_serial_tx_chars(int irq, void *id)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	if (ourport-&gt;dma &amp;&amp; ourport-&gt;dma-&gt;tx_chan &amp;&amp;</span>
<span class="quote">&gt;  	    count &gt;= ourport-&gt;min_dma_size) {</span>
<span class="quote">&gt; -		int align = dma_get_cache_alignment() -</span>
<span class="quote">&gt; -			(xmit-&gt;tail &amp; (dma_get_cache_alignment() - 1));</span>
<span class="quote">&gt; +		int align = dma_get_cache_alignment(NULL) -</span>
<span class="quote">&gt; +			(xmit-&gt;tail &amp; (dma_get_cache_alignment(NULL) - 1));</span>
<span class="quote">&gt;  		if (count-align &gt;= ourport-&gt;min_dma_size) {</span>
<span class="quote">&gt;  			dma_count = count-align;</span>
<span class="quote">&gt;  			count = align;</span>
<span class="quote">&gt; @@ -870,7 +870,7 @@ static int s3c24xx_serial_request_dma(struct s3c24xx_uart_port *p)</span>
<span class="quote">&gt;  	dma-&gt;tx_conf.direction		= DMA_MEM_TO_DEV;</span>
<span class="quote">&gt;  	dma-&gt;tx_conf.dst_addr_width	= DMA_SLAVE_BUSWIDTH_1_BYTE;</span>
<span class="quote">&gt;  	dma-&gt;tx_conf.dst_addr		= p-&gt;port.mapbase + S3C2410_UTXH;</span>
<span class="quote">&gt; -	if (dma_get_cache_alignment() &gt;= 16)</span>
<span class="quote">&gt; +	if (dma_get_cache_alignment(NULL) &gt;= 16)</span>
<span class="quote">&gt;  		dma-&gt;tx_conf.dst_maxburst = 16;</span>
<span class="quote">&gt;  	else</span>
<span class="quote">&gt;  		dma-&gt;tx_conf.dst_maxburst = 1;</span>
<span class="quote">&gt; @@ -1849,7 +1849,7 @@ static int s3c24xx_serial_probe(struct platform_device *pdev)</span>
<span class="quote">&gt;  	 * so find minimal transfer size suitable for DMA mode</span>
<span class="quote">&gt;  	 */</span>
<span class="quote">&gt;  	ourport-&gt;min_dma_size = max_t(int, ourport-&gt;port.fifosize,</span>
<span class="quote">&gt; -				    dma_get_cache_alignment());</span>
<span class="quote">&gt; +				    dma_get_cache_alignment(NULL));</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	dbg(&quot;%s: initialising port %p...\n&quot;, __func__, ourport);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; diff --git a/include/linux/dma-mapping.h b/include/linux/dma-mapping.h</span>
<span class="quote">&gt; index 29ce981..1326023 100644</span>
<span class="quote">&gt; --- a/include/linux/dma-mapping.h</span>
<span class="quote">&gt; +++ b/include/linux/dma-mapping.h</span>
<span class="quote">&gt; @@ -131,6 +131,7 @@ struct dma_map_ops {</span>
<span class="quote">&gt;  #ifdef ARCH_HAS_DMA_GET_REQUIRED_MASK</span>
<span class="quote">&gt;  	u64 (*get_required_mask)(struct device *dev);</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt; +	int (*get_cache_alignment)(struct device *dev);</span>
<span class="quote">&gt;  	int is_phys;</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; @@ -697,12 +698,18 @@ static inline void *dma_zalloc_coherent(struct device *dev, size_t size,</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #ifdef CONFIG_HAS_DMA</span>
<span class="quote">&gt; -static inline int dma_get_cache_alignment(void)</span>
<span class="quote">&gt; -{</span>
<span class="quote">&gt; -#ifdef ARCH_DMA_MINALIGN</span>
<span class="quote">&gt; -	return ARCH_DMA_MINALIGN;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +#ifndef ARCH_DMA_MINALIGN</span>
<span class="quote">&gt; +#define ARCH_DMA_MINALIGN 1</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt; -	return 1;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +static inline int dma_get_cache_alignment(struct device *dev)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="quote">&gt; +	if (dev &amp;&amp; ops &amp;&amp; ops-&gt;get_cache_alignment)</span>
<span class="quote">&gt; +		return ops-&gt;get_cache_alignment(dev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	return ARCH_DMA_MINALIGN; /* compatible behavior */</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=44471">Huacai Chen</a> - Sept. 26, 2017, 1:44 a.m.</div>
<pre class="content">
Hi, Robin,

Can ARM/ARM64 use the same implementation as MIPS? Or I just do MIPS things is OK?
 
Huacai
 
------------------ Original ------------------
<span class="from">From:  &quot;Robin Murphy&quot;&lt;robin.murphy@arm.com&gt;;</span>
Date:  Mon, Sep 25, 2017 08:57 PM
To:  &quot;Huacai Chen&quot;&lt;chenhc@lemote.com&gt;; &quot;Christoph Hellwig&quot;&lt;hch@lst.de&gt;; 
Cc:  &quot;Marek Szyprowski&quot;&lt;m.szyprowski@samsung.com&gt;; &quot;Andrew Morton&quot;&lt;akpm@linux-foundation.org&gt;; &quot;Fuxin Zhang&quot;&lt;zhangfx@lemote.com&gt;; &quot;linux-kernel&quot;&lt;linux-kernel@vger.kernel.org&gt;; &quot;Ralf Baechle&quot;&lt;ralf@linux-mips.org&gt;; &quot;James Hogan&quot;&lt;james.hogan@imgtec.com&gt;; &quot;linux-mips&quot;&lt;linux-mips@linux-mips.org&gt;; &quot;James E . J . Bottomley&quot;&lt;jejb@linux.vnet.ibm.com&gt;; &quot;Martin K . Petersen&quot;&lt;martin.petersen@oracle.com&gt;; &quot;linux-scsi&quot;&lt;linux-scsi@vger.kernel.org&gt;; &quot;Roland Dreier&quot;&lt;rolandd@cisco.com&gt;; &quot;Pawel Osciak&quot;&lt;pawel@osciak.com&gt;; &quot;Kyungmin Park&quot;&lt;kyungmin.park@samsung.com&gt;; &quot;Michael Chan&quot;&lt;michael.chan@broadcom.com&gt;; &quot;Benjamin Herrenschmidt&quot;&lt;benh@kernel.crashing.org&gt;; &quot;Ivan Mikhaylov&quot;&lt;ivan@ru.ibm.com&gt;; &quot;Tariq Toukan&quot;&lt;tariqt@mellanox.com&gt;; &quot;Andy Gross&quot;&lt;agross@codeaurora.org&gt;; &quot;Mark A . Greer&quot;&lt;mgreer@mvista.com&gt;; &quot;Robert Baldyga&quot;&lt;r.baldyga@samsung.com&gt;; &quot;stable&quot;&lt;stable@vger.kernel.org&gt;; 
Subject:  Re: [PATCH V7 1/2] dma-mapping: Rework dma_get_cache_alignment()

 
On 25/09/17 10:46, Huacai Chen wrote:
<span class="quote">&gt; Make dma_get_cache_alignment() to accept a &#39;dev&#39; argument. As a result,</span>
<span class="quote">&gt; it can return different alignments due to different devices&#39; I/O cache</span>
<span class="quote">&gt; coherency.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Currently, MIPS is the only architecture which support coherent &amp; non-</span>
<span class="quote">&gt; coherent devices co-exist. This may be changed in the future, so add a</span>
<span class="quote">&gt; new get_cache_alignment() function pointer in &#39;struct dma_map_ops&#39; as a</span>
<span class="quote">&gt; generic solution.</span>

FWIW, ARM and arm64 have also supported per-device coherency for quite
some time.
<span class="quote">
&gt; For compatibility (always return ARCH_DMA_MINALIGN), make all existing</span>
<span class="quote">&gt; callers pass a NULL dev argument to dma_get_cache_alignment().</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Cc: stable@vger.kernel.org</span>
<span class="quote">&gt; Signed-off-by: Huacai Chen &lt;chenhc@lemote.co&gt; ---</span>
<span class="quote">&gt;  arch/mips/cavium-octeon/dma-octeon.c           |  3 ++-</span>
<span class="quote">&gt;  arch/mips/include/asm/dma-mapping.h            |  2 ++</span>
<span class="quote">&gt;  arch/mips/loongson64/common/dma-swiotlb.c      |  1 +</span>
<span class="quote">&gt;  arch/mips/mm/dma-default.c                     | 11 ++++++++++-</span>
<span class="quote">&gt;  arch/mips/netlogic/common/nlm-dma.c            |  3 ++-</span>
<span class="quote">&gt;  drivers/infiniband/hw/mthca/mthca_main.c       |  2 +-</span>
<span class="quote">&gt;  drivers/media/v4l2-core/videobuf2-dma-contig.c |  2 +-</span>
<span class="quote">&gt;  drivers/net/ethernet/broadcom/b44.c            |  2 +-</span>
<span class="quote">&gt;  drivers/net/ethernet/ibm/emac/core.h           |  2 +-</span>
<span class="quote">&gt;  drivers/net/ethernet/mellanox/mlx4/main.c      |  2 +-</span>
<span class="quote">&gt;  drivers/spi/spi-qup.c                          |  4 ++--</span>
<span class="quote">&gt;  drivers/tty/serial/mpsc.c                      | 16 ++++++++--------</span>
<span class="quote">&gt;  drivers/tty/serial/samsung.c                   | 14 +++++++-------</span>
<span class="quote">&gt;  include/linux/dma-mapping.h                    | 17 ++++++++++++-----</span>
<span class="quote">&gt;  14 files changed, 51 insertions(+), 30 deletions(-)</span>

I think it might be neater to split this into two patches - one making
the treewide prototype change, then introducing the .get_cache_alignemnt
callback separately - but that&#39;s only my personal preference.

Otherwise (and modulo Christoph&#39;s comments), I&#39;d say we&#39;re nearly there.

Thanks,
Robin.
<span class="quote">
&gt; diff --git a/arch/mips/cavium-octeon/dma-octeon.c b/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="quote">&gt; index c64bd87..7978237 100644</span>
<span class="quote">&gt; --- a/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="quote">&gt; +++ b/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="quote">&gt; @@ -324,7 +324,8 @@ static struct octeon_dma_map_ops _octeon_pci_dma_map_ops = {</span>
<span class="quote">&gt;  		.sync_sg_for_cpu = swiotlb_sync_sg_for_cpu,</span>
<span class="quote">&gt;  		.sync_sg_for_device = octeon_dma_sync_sg_for_device,</span>
<span class="quote">&gt;  		.mapping_error = swiotlb_dma_mapping_error,</span>
<span class="quote">&gt; -		.dma_supported = swiotlb_dma_supported</span>
<span class="quote">&gt; +		.dma_supported = swiotlb_dma_supported,</span>
<span class="quote">&gt; +		.get_cache_alignment = mips_get_cache_alignment</span>
<span class="quote">&gt;  	},</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; diff --git a/arch/mips/include/asm/dma-mapping.h b/arch/mips/include/asm/dma-mapping.h</span>
<span class="quote">&gt; index aba7138..e2c5d9e 100644</span>
<span class="quote">&gt; --- a/arch/mips/include/asm/dma-mapping.h</span>
<span class="quote">&gt; +++ b/arch/mips/include/asm/dma-mapping.h</span>
<span class="quote">&gt; @@ -39,4 +39,6 @@ static inline void arch_setup_dma_ops(struct device *dev, u64 dma_base,</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +int mips_get_cache_alignment(struct device *dev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  #endif /* _ASM_DMA_MAPPING_H */</span>
<span class="quote">&gt; diff --git a/arch/mips/loongson64/common/dma-swiotlb.c b/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="quote">&gt; index 34486c1..09cb8a4 100644</span>
<span class="quote">&gt; --- a/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="quote">&gt; +++ b/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="quote">&gt; @@ -119,6 +119,7 @@ static const struct dma_map_ops loongson_dma_map_ops = {</span>
<span class="quote">&gt;  	.sync_sg_for_device = loongson_dma_sync_sg_for_device,</span>
<span class="quote">&gt;  	.mapping_error = swiotlb_dma_mapping_error,</span>
<span class="quote">&gt;  	.dma_supported = loongson_dma_supported,</span>
<span class="quote">&gt; +	.get_cache_alignment = mips_get_cache_alignment</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  void __init plat_swiotlb_setup(void)</span>
<span class="quote">&gt; diff --git a/arch/mips/mm/dma-default.c b/arch/mips/mm/dma-default.c</span>
<span class="quote">&gt; index c01bd20..c49987e 100644</span>
<span class="quote">&gt; --- a/arch/mips/mm/dma-default.c</span>
<span class="quote">&gt; +++ b/arch/mips/mm/dma-default.c</span>
<span class="quote">&gt; @@ -394,6 +394,14 @@ void dma_cache_sync(struct device *dev, void *vaddr, size_t size,</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  EXPORT_SYMBOL(dma_cache_sync);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +int mips_get_cache_alignment(struct device *dev)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	if (plat_device_is_coherent(dev))</span>
<span class="quote">&gt; +		return 1;</span>
<span class="quote">&gt; +	else</span>
<span class="quote">&gt; +		return ARCH_DMA_MINALIGN;</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  static const struct dma_map_ops mips_default_dma_map_ops = {</span>
<span class="quote">&gt;  	.alloc = mips_dma_alloc_coherent,</span>
<span class="quote">&gt;  	.free = mips_dma_free_coherent,</span>
<span class="quote">&gt; @@ -407,7 +415,8 @@ static const struct dma_map_ops mips_default_dma_map_ops = {</span>
<span class="quote">&gt;  	.sync_sg_for_cpu = mips_dma_sync_sg_for_cpu,</span>
<span class="quote">&gt;  	.sync_sg_for_device = mips_dma_sync_sg_for_device,</span>
<span class="quote">&gt;  	.mapping_error = mips_dma_mapping_error,</span>
<span class="quote">&gt; -	.dma_supported = mips_dma_supported</span>
<span class="quote">&gt; +	.dma_supported = mips_dma_supported,</span>
<span class="quote">&gt; +	.get_cache_alignment = mips_get_cache_alignment</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  const struct dma_map_ops *mips_dma_map_ops = &amp;mips_default_dma_map_ops;</span>
<span class="quote">&gt; diff --git a/arch/mips/netlogic/common/nlm-dma.c b/arch/mips/netlogic/common/nlm-dma.c</span>
<span class="quote">&gt; index 0ec9d9d..1e107ac 100644</span>
<span class="quote">&gt; --- a/arch/mips/netlogic/common/nlm-dma.c</span>
<span class="quote">&gt; +++ b/arch/mips/netlogic/common/nlm-dma.c</span>
<span class="quote">&gt; @@ -79,7 +79,8 @@ const struct dma_map_ops nlm_swiotlb_dma_ops = {</span>
<span class="quote">&gt;  	.sync_sg_for_cpu = swiotlb_sync_sg_for_cpu,</span>
<span class="quote">&gt;  	.sync_sg_for_device = swiotlb_sync_sg_for_device,</span>
<span class="quote">&gt;  	.mapping_error = swiotlb_dma_mapping_error,</span>
<span class="quote">&gt; -	.dma_supported = swiotlb_dma_supported</span>
<span class="quote">&gt; +	.dma_supported = swiotlb_dma_supported,</span>
<span class="quote">&gt; +	.get_cache_alignment = mips_get_cache_alignment</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  void __init plat_swiotlb_setup(void)</span>
<span class="quote">&gt; diff --git a/drivers/infiniband/hw/mthca/mthca_main.c b/drivers/infiniband/hw/mthca/mthca_main.c</span>
<span class="quote">&gt; index e36a9bc..cac5fac 100644</span>
<span class="quote">&gt; --- a/drivers/infiniband/hw/mthca/mthca_main.c</span>
<span class="quote">&gt; +++ b/drivers/infiniband/hw/mthca/mthca_main.c</span>
<span class="quote">&gt; @@ -416,7 +416,7 @@ static int mthca_init_icm(struct mthca_dev *mdev,</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	/* CPU writes to non-reserved MTTs, while HCA might DMA to reserved mtts */</span>
<span class="quote">&gt;  	mdev-&gt;limits.reserved_mtts = ALIGN(mdev-&gt;limits.reserved_mtts * mdev-&gt;limits.mtt_seg_size,</span>
<span class="quote">&gt; -					   dma_get_cache_alignment()) / mdev-&gt;limits.mtt_seg_size;</span>
<span class="quote">&gt; +					   dma_get_cache_alignment(NULL)) / mdev-&gt;limits.mtt_seg_size;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	mdev-&gt;mr_table.mtt_table = mthca_alloc_icm_table(mdev, init_hca-&gt;mtt_base,</span>
<span class="quote">&gt;  							 mdev-&gt;limits.mtt_seg_size,</span>
<span class="quote">&gt; diff --git a/drivers/media/v4l2-core/videobuf2-dma-contig.c b/drivers/media/v4l2-core/videobuf2-dma-contig.c</span>
<span class="quote">&gt; index 9f389f3..7f54739 100644</span>
<span class="quote">&gt; --- a/drivers/media/v4l2-core/videobuf2-dma-contig.c</span>
<span class="quote">&gt; +++ b/drivers/media/v4l2-core/videobuf2-dma-contig.c</span>
<span class="quote">&gt; @@ -484,7 +484,7 @@ static void *vb2_dc_get_userptr(struct device *dev, unsigned long vaddr,</span>
<span class="quote">&gt;  	int ret = 0;</span>
<span class="quote">&gt;  	struct sg_table *sgt;</span>
<span class="quote">&gt;  	unsigned long contig_size;</span>
<span class="quote">&gt; -	unsigned long dma_align = dma_get_cache_alignment();</span>
<span class="quote">&gt; +	unsigned long dma_align = dma_get_cache_alignment(NULL);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	/* Only cache aligned DMA transfers are reliable */</span>
<span class="quote">&gt;  	if (!IS_ALIGNED(vaddr | size, dma_align)) {</span>
<span class="quote">&gt; diff --git a/drivers/net/ethernet/broadcom/b44.c b/drivers/net/ethernet/broadcom/b44.c</span>
<span class="quote">&gt; index a1125d1..291d6af 100644</span>
<span class="quote">&gt; --- a/drivers/net/ethernet/broadcom/b44.c</span>
<span class="quote">&gt; +++ b/drivers/net/ethernet/broadcom/b44.c</span>
<span class="quote">&gt; @@ -2587,7 +2587,7 @@ static inline void b44_pci_exit(void)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  static int __init b44_init(void)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -	unsigned int dma_desc_align_size = dma_get_cache_alignment();</span>
<span class="quote">&gt; +	unsigned int dma_desc_align_size = dma_get_cache_alignment(NULL);</span>
<span class="quote">&gt;  	int err;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	/* Setup paramaters for syncing RX/TX DMA descriptors */</span>
<span class="quote">&gt; diff --git a/drivers/net/ethernet/ibm/emac/core.h b/drivers/net/ethernet/ibm/emac/core.h</span>
<span class="quote">&gt; index 369de2c..236bf37 100644</span>
<span class="quote">&gt; --- a/drivers/net/ethernet/ibm/emac/core.h</span>
<span class="quote">&gt; +++ b/drivers/net/ethernet/ibm/emac/core.h</span>
<span class="quote">&gt; @@ -68,7 +68,7 @@ static inline int emac_rx_size(int mtu)</span>
<span class="quote">&gt;  		return mal_rx_size(ETH_DATA_LEN + EMAC_MTU_OVERHEAD);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -#define EMAC_DMA_ALIGN(x)		ALIGN((x), dma_get_cache_alignment())</span>
<span class="quote">&gt; +#define EMAC_DMA_ALIGN(x)		ALIGN((x), dma_get_cache_alignment(NULL))</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define EMAC_RX_SKB_HEADROOM		\</span>
<span class="quote">&gt;  	EMAC_DMA_ALIGN(CONFIG_IBM_EMAC_RX_SKB_HEADROOM)</span>
<span class="quote">&gt; diff --git a/drivers/net/ethernet/mellanox/mlx4/main.c b/drivers/net/ethernet/mellanox/mlx4/main.c</span>
<span class="quote">&gt; index e61c99e..56b1449 100644</span>
<span class="quote">&gt; --- a/drivers/net/ethernet/mellanox/mlx4/main.c</span>
<span class="quote">&gt; +++ b/drivers/net/ethernet/mellanox/mlx4/main.c</span>
<span class="quote">&gt; @@ -1660,7 +1660,7 @@ static int mlx4_init_icm(struct mlx4_dev *dev, struct mlx4_dev_cap *dev_cap,</span>
<span class="quote">&gt;  	 */</span>
<span class="quote">&gt;  	dev-&gt;caps.reserved_mtts =</span>
<span class="quote">&gt;  		ALIGN(dev-&gt;caps.reserved_mtts * dev-&gt;caps.mtt_entry_sz,</span>
<span class="quote">&gt; -		      dma_get_cache_alignment()) / dev-&gt;caps.mtt_entry_sz;</span>
<span class="quote">&gt; +		      dma_get_cache_alignment(NULL)) / dev-&gt;caps.mtt_entry_sz;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	err = mlx4_init_icm_table(dev, &amp;priv-&gt;mr_table.mtt_table,</span>
<span class="quote">&gt;  				  init_hca-&gt;mtt_base,</span>
<span class="quote">&gt; diff --git a/drivers/spi/spi-qup.c b/drivers/spi/spi-qup.c</span>
<span class="quote">&gt; index 974a8ce..0c698c3 100644</span>
<span class="quote">&gt; --- a/drivers/spi/spi-qup.c</span>
<span class="quote">&gt; +++ b/drivers/spi/spi-qup.c</span>
<span class="quote">&gt; @@ -862,7 +862,7 @@ static bool spi_qup_can_dma(struct spi_master *master, struct spi_device *spi,</span>
<span class="quote">&gt;  			    struct spi_transfer *xfer)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	struct spi_qup *qup = spi_master_get_devdata(master);</span>
<span class="quote">&gt; -	size_t dma_align = dma_get_cache_alignment();</span>
<span class="quote">&gt; +	size_t dma_align = dma_get_cache_alignment(NULL);</span>
<span class="quote">&gt;  	int n_words;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	if (xfer-&gt;rx_buf) {</span>
<span class="quote">&gt; @@ -1038,7 +1038,7 @@ static int spi_qup_probe(struct platform_device *pdev)</span>
<span class="quote">&gt;  	master-&gt;transfer_one = spi_qup_transfer_one;</span>
<span class="quote">&gt;  	master-&gt;dev.of_node = pdev-&gt;dev.of_node;</span>
<span class="quote">&gt;  	master-&gt;auto_runtime_pm = true;</span>
<span class="quote">&gt; -	master-&gt;dma_alignment = dma_get_cache_alignment();</span>
<span class="quote">&gt; +	master-&gt;dma_alignment = dma_get_cache_alignment(NULL);</span>
<span class="quote">&gt;  	master-&gt;max_dma_len = SPI_MAX_XFER;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	platform_set_drvdata(pdev, master);</span>
<span class="quote">&gt; diff --git a/drivers/tty/serial/mpsc.c b/drivers/tty/serial/mpsc.c</span>
<span class="quote">&gt; index 67ffecc..e2f792a 100644</span>
<span class="quote">&gt; --- a/drivers/tty/serial/mpsc.c</span>
<span class="quote">&gt; +++ b/drivers/tty/serial/mpsc.c</span>
<span class="quote">&gt; @@ -81,19 +81,19 @@</span>
<span class="quote">&gt;   * Number of Tx &amp; Rx descriptors must be powers of 2.</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt;  #define	MPSC_RXR_ENTRIES	32</span>
<span class="quote">&gt; -#define	MPSC_RXRE_SIZE		dma_get_cache_alignment()</span>
<span class="quote">&gt; +#define	MPSC_RXRE_SIZE		dma_get_cache_alignment(NULL)</span>
<span class="quote">&gt;  #define	MPSC_RXR_SIZE		(MPSC_RXR_ENTRIES * MPSC_RXRE_SIZE)</span>
<span class="quote">&gt; -#define	MPSC_RXBE_SIZE		dma_get_cache_alignment()</span>
<span class="quote">&gt; +#define	MPSC_RXBE_SIZE		dma_get_cache_alignment(NULL)</span>
<span class="quote">&gt;  #define	MPSC_RXB_SIZE		(MPSC_RXR_ENTRIES * MPSC_RXBE_SIZE)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define	MPSC_TXR_ENTRIES	32</span>
<span class="quote">&gt; -#define	MPSC_TXRE_SIZE		dma_get_cache_alignment()</span>
<span class="quote">&gt; +#define	MPSC_TXRE_SIZE		dma_get_cache_alignment(NULL)</span>
<span class="quote">&gt;  #define	MPSC_TXR_SIZE		(MPSC_TXR_ENTRIES * MPSC_TXRE_SIZE)</span>
<span class="quote">&gt; -#define	MPSC_TXBE_SIZE		dma_get_cache_alignment()</span>
<span class="quote">&gt; +#define	MPSC_TXBE_SIZE		dma_get_cache_alignment(NULL)</span>
<span class="quote">&gt;  #define	MPSC_TXB_SIZE		(MPSC_TXR_ENTRIES * MPSC_TXBE_SIZE)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define	MPSC_DMA_ALLOC_SIZE	(MPSC_RXR_SIZE + MPSC_RXB_SIZE + MPSC_TXR_SIZE \</span>
<span class="quote">&gt; -		+ MPSC_TXB_SIZE + dma_get_cache_alignment() /* for alignment */)</span>
<span class="quote">&gt; +		+ MPSC_TXB_SIZE + dma_get_cache_alignment(NULL) /* for alignment */)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /* Rx and Tx Ring entry descriptors -- assume entry size is &lt;= cacheline size */</span>
<span class="quote">&gt;  struct mpsc_rx_desc {</span>
<span class="quote">&gt; @@ -738,7 +738,7 @@ static void mpsc_init_hw(struct mpsc_port_info *pi)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	mpsc_brg_init(pi, pi-&gt;brg_clk_src);</span>
<span class="quote">&gt;  	mpsc_brg_enable(pi);</span>
<span class="quote">&gt; -	mpsc_sdma_init(pi, dma_get_cache_alignment());	/* burst a cacheline */</span>
<span class="quote">&gt; +	mpsc_sdma_init(pi, dma_get_cache_alignment(NULL));	/* burst a cacheline */</span>
<span class="quote">&gt;  	mpsc_sdma_stop(pi);</span>
<span class="quote">&gt;  	mpsc_hw_init(pi);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; @@ -798,8 +798,8 @@ static void mpsc_init_rings(struct mpsc_port_info *pi)</span>
<span class="quote">&gt;  	 * Descriptors &amp; buffers are multiples of cacheline size and must be</span>
<span class="quote">&gt;  	 * cacheline aligned.</span>
<span class="quote">&gt;  	 */</span>
<span class="quote">&gt; -	dp = ALIGN((u32)pi-&gt;dma_region, dma_get_cache_alignment());</span>
<span class="quote">&gt; -	dp_p = ALIGN((u32)pi-&gt;dma_region_p, dma_get_cache_alignment());</span>
<span class="quote">&gt; +	dp = ALIGN((u32)pi-&gt;dma_region, dma_get_cache_alignment(NULL));</span>
<span class="quote">&gt; +	dp_p = ALIGN((u32)pi-&gt;dma_region_p, dma_get_cache_alignment(NULL));</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	/*</span>
<span class="quote">&gt;  	 * Partition dma region into rx ring descriptor, rx buffers,</span>
<span class="quote">&gt; diff --git a/drivers/tty/serial/samsung.c b/drivers/tty/serial/samsung.c</span>
<span class="quote">&gt; index 8aca18c..b40a681 100644</span>
<span class="quote">&gt; --- a/drivers/tty/serial/samsung.c</span>
<span class="quote">&gt; +++ b/drivers/tty/serial/samsung.c</span>
<span class="quote">&gt; @@ -241,7 +241,7 @@ static void enable_tx_dma(struct s3c24xx_uart_port *ourport)</span>
<span class="quote">&gt;  	/* Enable tx dma mode */</span>
<span class="quote">&gt;  	ucon = rd_regl(port, S3C2410_UCON);</span>
<span class="quote">&gt;  	ucon &amp;= ~(S3C64XX_UCON_TXBURST_MASK | S3C64XX_UCON_TXMODE_MASK);</span>
<span class="quote">&gt; -	ucon |= (dma_get_cache_alignment() &gt;= 16) ?</span>
<span class="quote">&gt; +	ucon |= (dma_get_cache_alignment(NULL) &gt;= 16) ?</span>
<span class="quote">&gt;  		S3C64XX_UCON_TXBURST_16 : S3C64XX_UCON_TXBURST_1;</span>
<span class="quote">&gt;  	ucon |= S3C64XX_UCON_TXMODE_DMA;</span>
<span class="quote">&gt;  	wr_regl(port,  S3C2410_UCON, ucon);</span>
<span class="quote">&gt; @@ -292,7 +292,7 @@ static int s3c24xx_serial_start_tx_dma(struct s3c24xx_uart_port *ourport,</span>
<span class="quote">&gt;  	if (ourport-&gt;tx_mode != S3C24XX_TX_DMA)</span>
<span class="quote">&gt;  		enable_tx_dma(ourport);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -	dma-&gt;tx_size = count &amp; ~(dma_get_cache_alignment() - 1);</span>
<span class="quote">&gt; +	dma-&gt;tx_size = count &amp; ~(dma_get_cache_alignment(NULL) - 1);</span>
<span class="quote">&gt;  	dma-&gt;tx_transfer_addr = dma-&gt;tx_addr + xmit-&gt;tail;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	dma_sync_single_for_device(ourport-&gt;port.dev, dma-&gt;tx_transfer_addr,</span>
<span class="quote">&gt; @@ -332,7 +332,7 @@ static void s3c24xx_serial_start_next_tx(struct s3c24xx_uart_port *ourport)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	if (!ourport-&gt;dma || !ourport-&gt;dma-&gt;tx_chan ||</span>
<span class="quote">&gt;  	    count &lt; ourport-&gt;min_dma_size ||</span>
<span class="quote">&gt; -	    xmit-&gt;tail &amp; (dma_get_cache_alignment() - 1))</span>
<span class="quote">&gt; +	    xmit-&gt;tail &amp; (dma_get_cache_alignment(NULL) - 1))</span>
<span class="quote">&gt;  		s3c24xx_serial_start_tx_pio(ourport);</span>
<span class="quote">&gt;  	else</span>
<span class="quote">&gt;  		s3c24xx_serial_start_tx_dma(ourport, count);</span>
<span class="quote">&gt; @@ -718,8 +718,8 @@ static irqreturn_t s3c24xx_serial_tx_chars(int irq, void *id)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	if (ourport-&gt;dma &amp;&amp; ourport-&gt;dma-&gt;tx_chan &amp;&amp;</span>
<span class="quote">&gt;  	    count &gt;= ourport-&gt;min_dma_size) {</span>
<span class="quote">&gt; -		int align = dma_get_cache_alignment() -</span>
<span class="quote">&gt; -			(xmit-&gt;tail &amp; (dma_get_cache_alignment() - 1));</span>
<span class="quote">&gt; +		int align = dma_get_cache_alignment(NULL) -</span>
<span class="quote">&gt; +			(xmit-&gt;tail &amp; (dma_get_cache_alignment(NULL) - 1));</span>
<span class="quote">&gt;  		if (count-align &gt;= ourport-&gt;min_dma_size) {</span>
<span class="quote">&gt;  			dma_count = count-align;</span>
<span class="quote">&gt;  			count = align;</span>
<span class="quote">&gt; @@ -870,7 +870,7 @@ static int s3c24xx_serial_request_dma(struct s3c24xx_uart_port *p)</span>
<span class="quote">&gt;  	dma-&gt;tx_conf.direction		= DMA_MEM_TO_DEV;</span>
<span class="quote">&gt;  	dma-&gt;tx_conf.dst_addr_width	= DMA_SLAVE_BUSWIDTH_1_BYTE;</span>
<span class="quote">&gt;  	dma-&gt;tx_conf.dst_addr		= p-&gt;port.mapbase + S3C2410_UTXH;</span>
<span class="quote">&gt; -	if (dma_get_cache_alignment() &gt;= 16)</span>
<span class="quote">&gt; +	if (dma_get_cache_alignment(NULL) &gt;= 16)</span>
<span class="quote">&gt;  		dma-&gt;tx_conf.dst_maxburst = 16;</span>
<span class="quote">&gt;  	else</span>
<span class="quote">&gt;  		dma-&gt;tx_conf.dst_maxburst = 1;</span>
<span class="quote">&gt; @@ -1849,7 +1849,7 @@ static int s3c24xx_serial_probe(struct platform_device *pdev)</span>
<span class="quote">&gt;  	 * so find minimal transfer size suitable for DMA mode</span>
<span class="quote">&gt;  	 */</span>
<span class="quote">&gt;  	ourport-&gt;min_dma_size = max_t(int, ourport-&gt;port.fifosize,</span>
<span class="quote">&gt; -				    dma_get_cache_alignment());</span>
<span class="quote">&gt; +				    dma_get_cache_alignment(NULL));</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	dbg(&quot;%s: initialising port %p...\n&quot;, __func__, ourport);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; diff --git a/include/linux/dma-mapping.h b/include/linux/dma-mapping.h</span>
<span class="quote">&gt; index 29ce981..1326023 100644</span>
<span class="quote">&gt; --- a/include/linux/dma-mapping.h</span>
<span class="quote">&gt; +++ b/include/linux/dma-mapping.h</span>
<span class="quote">&gt; @@ -131,6 +131,7 @@ struct dma_map_ops {</span>
<span class="quote">&gt;  #ifdef ARCH_HAS_DMA_GET_REQUIRED_MASK</span>
<span class="quote">&gt;  	u64 (*get_required_mask)(struct device *dev);</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt; +	int (*get_cache_alignment)(struct device *dev);</span>
<span class="quote">&gt;  	int is_phys;</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; @@ -697,12 +698,18 @@ static inline void *dma_zalloc_coherent(struct device *dev, size_t size,</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #ifdef CONFIG_HAS_DMA</span>
<span class="quote">&gt; -static inline int dma_get_cache_alignment(void)</span>
<span class="quote">&gt; -{</span>
<span class="quote">&gt; -#ifdef ARCH_DMA_MINALIGN</span>
<span class="quote">&gt; -	return ARCH_DMA_MINALIGN;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +#ifndef ARCH_DMA_MINALIGN</span>
<span class="quote">&gt; +#define ARCH_DMA_MINALIGN 1</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt; -	return 1;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +static inline int dma_get_cache_alignment(struct device *dev)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="quote">&gt; +	if (dev &amp;&amp; ops &amp;&amp; ops-&gt;get_cache_alignment)</span>
<span class="quote">&gt; +		return ops-&gt;get_cache_alignment(dev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	return ARCH_DMA_MINALIGN; /* compatible behavior */</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=44471">Huacai Chen</a> - Sept. 26, 2017, 1:48 a.m.</div>
<pre class="content">
Hi, Christoph,

Can I put the declaration in asm/dma-coherence.h?

And, last time you said it is OK to pass a NULL to dma_get_cache_alignment() and cc all driver maintainers. I have do so.

Huacai

------------------ Original ------------------
<span class="from">From:  &quot;Christoph Hellwig&quot;&lt;hch@lst.de&gt;;</span>
Date:  Mon, Sep 25, 2017 08:51 PM
To:  &quot;Huacai Chen&quot;&lt;chenhc@lemote.com&gt;; 
Cc:  &quot;Christoph Hellwig&quot;&lt;hch@lst.de&gt;; &quot;Marek Szyprowski&quot;&lt;m.szyprowski@samsung.com&gt;; &quot;Robin Murphy&quot;&lt;robin.murphy@arm.com&gt;; &quot;Andrew Morton&quot;&lt;akpm@linux-foundation.org&gt;; &quot;Fuxin Zhang&quot;&lt;zhangfx@lemote.com&gt;; &quot;linux-kernel&quot;&lt;linux-kernel@vger.kernel.org&gt;; &quot;Ralf Baechle&quot;&lt;ralf@linux-mips.org&gt;; &quot;James Hogan&quot;&lt;james.hogan@imgtec.com&gt;; &quot;linux-mips&quot;&lt;linux-mips@linux-mips.org&gt;; &quot;James E . J . Bottomley&quot;&lt;jejb@linux.vnet.ibm.com&gt;; &quot;Martin K . Petersen&quot;&lt;martin.petersen@oracle.com&gt;; &quot;linux-scsi&quot;&lt;linux-scsi@vger.kernel.org&gt;; &quot;Roland Dreier&quot;&lt;rolandd@cisco.com&gt;; &quot;Pawel Osciak&quot;&lt;pawel@osciak.com&gt;; &quot;Kyungmin Park&quot;&lt;kyungmin.park@samsung.com&gt;; &quot;Michael Chan&quot;&lt;michael.chan@broadcom.com&gt;; &quot;Benjamin Herrenschmidt&quot;&lt;benh@kernel.crashing.org&gt;; &quot;Ivan Mikhaylov&quot;&lt;ivan@ru.ibm.com&gt;; &quot;Tariq Toukan&quot;&lt;tariqt@mellanox.com&gt;; &quot;Andy Gross&quot;&lt;agross@codeaurora.org&gt;; &quot;Mark A . Greer&quot;&lt;mgreer@mvista.com&gt;; &quot;Robert Baldyga&quot;&lt;r.baldyga@samsung.com&gt;; &quot;stable&quot;&lt;stable@vger.kernel.org&gt;; 
Subject:  Re: [PATCH V7 1/2] dma-mapping: Rework dma_get_cache_alignment()
<span class="quote">
 
&gt; index aba7138..e2c5d9e 100644</span>
<span class="quote">&gt; --- a/arch/mips/include/asm/dma-mapping.h</span>
<span class="quote">&gt; +++ b/arch/mips/include/asm/dma-mapping.h</span>
<span class="quote">&gt; @@ -39,4 +39,6 @@ static inline void arch_setup_dma_ops(struct device *dev, u64 dma_base,</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +int mips_get_cache_alignment(struct device *dev);</span>

All the other mips generic dma helpers are prefixed mips_dma_*
so it might make sense to follow that.

Also please don&#39;t add arch-local helpers to asm/dma-mapping.h - this
is a header used by linux/dma-mapping.h and should not contain
implementation details if avoidable.
<span class="quote">
&gt; +					   dma_get_cache_alignment(NULL)) / mdev-&gt;limits.mtt_seg_size;</span>

As said before - please don&#39;t pass NULL to this function but the proper
device, which would be &amp;mdev-&gt;pdev-&gt;dev in this case for example.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a> - Sept. 26, 2017, 6:10 a.m.</div>
<pre class="content">
On Tue, Sep 26, 2017 at 09:48:01AM +0800, 陈华才 wrote:
<span class="quote">&gt; Hi, Christoph,</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Can I put the declaration in asm/dma-coherence.h?</span>

Generally something not expose to the rest of the kernel (that is not
in arch/mips/include/) would be preferred, but in the end the architecture
maintainer will have to decide.
<span class="quote">
&gt; And, last time you said it is OK to pass a NULL to dma_get_cache_alignment() and cc all driver maintainers. I have do so.</span>

No, I asked you to converted everything to pass the struct device and
cc the driver maintainers.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/mips/cavium-octeon/dma-octeon.c b/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="p_header">index c64bd87..7978237 100644</span>
<span class="p_header">--- a/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="p_header">+++ b/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="p_chunk">@@ -324,7 +324,8 @@</span> <span class="p_context"> static struct octeon_dma_map_ops _octeon_pci_dma_map_ops = {</span>
 		.sync_sg_for_cpu = swiotlb_sync_sg_for_cpu,
 		.sync_sg_for_device = octeon_dma_sync_sg_for_device,
 		.mapping_error = swiotlb_dma_mapping_error,
<span class="p_del">-		.dma_supported = swiotlb_dma_supported</span>
<span class="p_add">+		.dma_supported = swiotlb_dma_supported,</span>
<span class="p_add">+		.get_cache_alignment = mips_get_cache_alignment</span>
 	},
 };
 
<span class="p_header">diff --git a/arch/mips/include/asm/dma-mapping.h b/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_header">index aba7138..e2c5d9e 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -39,4 +39,6 @@</span> <span class="p_context"> static inline void arch_setup_dma_ops(struct device *dev, u64 dma_base,</span>
 #endif
 }
 
<span class="p_add">+int mips_get_cache_alignment(struct device *dev);</span>
<span class="p_add">+</span>
 #endif /* _ASM_DMA_MAPPING_H */
<span class="p_header">diff --git a/arch/mips/loongson64/common/dma-swiotlb.c b/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="p_header">index 34486c1..09cb8a4 100644</span>
<span class="p_header">--- a/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="p_header">+++ b/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="p_chunk">@@ -119,6 +119,7 @@</span> <span class="p_context"> static const struct dma_map_ops loongson_dma_map_ops = {</span>
 	.sync_sg_for_device = loongson_dma_sync_sg_for_device,
 	.mapping_error = swiotlb_dma_mapping_error,
 	.dma_supported = loongson_dma_supported,
<span class="p_add">+	.get_cache_alignment = mips_get_cache_alignment</span>
 };
 
 void __init plat_swiotlb_setup(void)
<span class="p_header">diff --git a/arch/mips/mm/dma-default.c b/arch/mips/mm/dma-default.c</span>
<span class="p_header">index c01bd20..c49987e 100644</span>
<span class="p_header">--- a/arch/mips/mm/dma-default.c</span>
<span class="p_header">+++ b/arch/mips/mm/dma-default.c</span>
<span class="p_chunk">@@ -394,6 +394,14 @@</span> <span class="p_context"> void dma_cache_sync(struct device *dev, void *vaddr, size_t size,</span>
 
 EXPORT_SYMBOL(dma_cache_sync);
 
<span class="p_add">+int mips_get_cache_alignment(struct device *dev)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if (plat_device_is_coherent(dev))</span>
<span class="p_add">+		return 1;</span>
<span class="p_add">+	else</span>
<span class="p_add">+		return ARCH_DMA_MINALIGN;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static const struct dma_map_ops mips_default_dma_map_ops = {
 	.alloc = mips_dma_alloc_coherent,
 	.free = mips_dma_free_coherent,
<span class="p_chunk">@@ -407,7 +415,8 @@</span> <span class="p_context"> static const struct dma_map_ops mips_default_dma_map_ops = {</span>
 	.sync_sg_for_cpu = mips_dma_sync_sg_for_cpu,
 	.sync_sg_for_device = mips_dma_sync_sg_for_device,
 	.mapping_error = mips_dma_mapping_error,
<span class="p_del">-	.dma_supported = mips_dma_supported</span>
<span class="p_add">+	.dma_supported = mips_dma_supported,</span>
<span class="p_add">+	.get_cache_alignment = mips_get_cache_alignment</span>
 };
 
 const struct dma_map_ops *mips_dma_map_ops = &amp;mips_default_dma_map_ops;
<span class="p_header">diff --git a/arch/mips/netlogic/common/nlm-dma.c b/arch/mips/netlogic/common/nlm-dma.c</span>
<span class="p_header">index 0ec9d9d..1e107ac 100644</span>
<span class="p_header">--- a/arch/mips/netlogic/common/nlm-dma.c</span>
<span class="p_header">+++ b/arch/mips/netlogic/common/nlm-dma.c</span>
<span class="p_chunk">@@ -79,7 +79,8 @@</span> <span class="p_context"> const struct dma_map_ops nlm_swiotlb_dma_ops = {</span>
 	.sync_sg_for_cpu = swiotlb_sync_sg_for_cpu,
 	.sync_sg_for_device = swiotlb_sync_sg_for_device,
 	.mapping_error = swiotlb_dma_mapping_error,
<span class="p_del">-	.dma_supported = swiotlb_dma_supported</span>
<span class="p_add">+	.dma_supported = swiotlb_dma_supported,</span>
<span class="p_add">+	.get_cache_alignment = mips_get_cache_alignment</span>
 };
 
 void __init plat_swiotlb_setup(void)
<span class="p_header">diff --git a/drivers/infiniband/hw/mthca/mthca_main.c b/drivers/infiniband/hw/mthca/mthca_main.c</span>
<span class="p_header">index e36a9bc..cac5fac 100644</span>
<span class="p_header">--- a/drivers/infiniband/hw/mthca/mthca_main.c</span>
<span class="p_header">+++ b/drivers/infiniband/hw/mthca/mthca_main.c</span>
<span class="p_chunk">@@ -416,7 +416,7 @@</span> <span class="p_context"> static int mthca_init_icm(struct mthca_dev *mdev,</span>
 
 	/* CPU writes to non-reserved MTTs, while HCA might DMA to reserved mtts */
 	mdev-&gt;limits.reserved_mtts = ALIGN(mdev-&gt;limits.reserved_mtts * mdev-&gt;limits.mtt_seg_size,
<span class="p_del">-					   dma_get_cache_alignment()) / mdev-&gt;limits.mtt_seg_size;</span>
<span class="p_add">+					   dma_get_cache_alignment(NULL)) / mdev-&gt;limits.mtt_seg_size;</span>
 
 	mdev-&gt;mr_table.mtt_table = mthca_alloc_icm_table(mdev, init_hca-&gt;mtt_base,
 							 mdev-&gt;limits.mtt_seg_size,
<span class="p_header">diff --git a/drivers/media/v4l2-core/videobuf2-dma-contig.c b/drivers/media/v4l2-core/videobuf2-dma-contig.c</span>
<span class="p_header">index 9f389f3..7f54739 100644</span>
<span class="p_header">--- a/drivers/media/v4l2-core/videobuf2-dma-contig.c</span>
<span class="p_header">+++ b/drivers/media/v4l2-core/videobuf2-dma-contig.c</span>
<span class="p_chunk">@@ -484,7 +484,7 @@</span> <span class="p_context"> static void *vb2_dc_get_userptr(struct device *dev, unsigned long vaddr,</span>
 	int ret = 0;
 	struct sg_table *sgt;
 	unsigned long contig_size;
<span class="p_del">-	unsigned long dma_align = dma_get_cache_alignment();</span>
<span class="p_add">+	unsigned long dma_align = dma_get_cache_alignment(NULL);</span>
 
 	/* Only cache aligned DMA transfers are reliable */
 	if (!IS_ALIGNED(vaddr | size, dma_align)) {
<span class="p_header">diff --git a/drivers/net/ethernet/broadcom/b44.c b/drivers/net/ethernet/broadcom/b44.c</span>
<span class="p_header">index a1125d1..291d6af 100644</span>
<span class="p_header">--- a/drivers/net/ethernet/broadcom/b44.c</span>
<span class="p_header">+++ b/drivers/net/ethernet/broadcom/b44.c</span>
<span class="p_chunk">@@ -2587,7 +2587,7 @@</span> <span class="p_context"> static inline void b44_pci_exit(void)</span>
 
 static int __init b44_init(void)
 {
<span class="p_del">-	unsigned int dma_desc_align_size = dma_get_cache_alignment();</span>
<span class="p_add">+	unsigned int dma_desc_align_size = dma_get_cache_alignment(NULL);</span>
 	int err;
 
 	/* Setup paramaters for syncing RX/TX DMA descriptors */
<span class="p_header">diff --git a/drivers/net/ethernet/ibm/emac/core.h b/drivers/net/ethernet/ibm/emac/core.h</span>
<span class="p_header">index 369de2c..236bf37 100644</span>
<span class="p_header">--- a/drivers/net/ethernet/ibm/emac/core.h</span>
<span class="p_header">+++ b/drivers/net/ethernet/ibm/emac/core.h</span>
<span class="p_chunk">@@ -68,7 +68,7 @@</span> <span class="p_context"> static inline int emac_rx_size(int mtu)</span>
 		return mal_rx_size(ETH_DATA_LEN + EMAC_MTU_OVERHEAD);
 }
 
<span class="p_del">-#define EMAC_DMA_ALIGN(x)		ALIGN((x), dma_get_cache_alignment())</span>
<span class="p_add">+#define EMAC_DMA_ALIGN(x)		ALIGN((x), dma_get_cache_alignment(NULL))</span>
 
 #define EMAC_RX_SKB_HEADROOM		\
 	EMAC_DMA_ALIGN(CONFIG_IBM_EMAC_RX_SKB_HEADROOM)
<span class="p_header">diff --git a/drivers/net/ethernet/mellanox/mlx4/main.c b/drivers/net/ethernet/mellanox/mlx4/main.c</span>
<span class="p_header">index e61c99e..56b1449 100644</span>
<span class="p_header">--- a/drivers/net/ethernet/mellanox/mlx4/main.c</span>
<span class="p_header">+++ b/drivers/net/ethernet/mellanox/mlx4/main.c</span>
<span class="p_chunk">@@ -1660,7 +1660,7 @@</span> <span class="p_context"> static int mlx4_init_icm(struct mlx4_dev *dev, struct mlx4_dev_cap *dev_cap,</span>
 	 */
 	dev-&gt;caps.reserved_mtts =
 		ALIGN(dev-&gt;caps.reserved_mtts * dev-&gt;caps.mtt_entry_sz,
<span class="p_del">-		      dma_get_cache_alignment()) / dev-&gt;caps.mtt_entry_sz;</span>
<span class="p_add">+		      dma_get_cache_alignment(NULL)) / dev-&gt;caps.mtt_entry_sz;</span>
 
 	err = mlx4_init_icm_table(dev, &amp;priv-&gt;mr_table.mtt_table,
 				  init_hca-&gt;mtt_base,
<span class="p_header">diff --git a/drivers/spi/spi-qup.c b/drivers/spi/spi-qup.c</span>
<span class="p_header">index 974a8ce..0c698c3 100644</span>
<span class="p_header">--- a/drivers/spi/spi-qup.c</span>
<span class="p_header">+++ b/drivers/spi/spi-qup.c</span>
<span class="p_chunk">@@ -862,7 +862,7 @@</span> <span class="p_context"> static bool spi_qup_can_dma(struct spi_master *master, struct spi_device *spi,</span>
 			    struct spi_transfer *xfer)
 {
 	struct spi_qup *qup = spi_master_get_devdata(master);
<span class="p_del">-	size_t dma_align = dma_get_cache_alignment();</span>
<span class="p_add">+	size_t dma_align = dma_get_cache_alignment(NULL);</span>
 	int n_words;
 
 	if (xfer-&gt;rx_buf) {
<span class="p_chunk">@@ -1038,7 +1038,7 @@</span> <span class="p_context"> static int spi_qup_probe(struct platform_device *pdev)</span>
 	master-&gt;transfer_one = spi_qup_transfer_one;
 	master-&gt;dev.of_node = pdev-&gt;dev.of_node;
 	master-&gt;auto_runtime_pm = true;
<span class="p_del">-	master-&gt;dma_alignment = dma_get_cache_alignment();</span>
<span class="p_add">+	master-&gt;dma_alignment = dma_get_cache_alignment(NULL);</span>
 	master-&gt;max_dma_len = SPI_MAX_XFER;
 
 	platform_set_drvdata(pdev, master);
<span class="p_header">diff --git a/drivers/tty/serial/mpsc.c b/drivers/tty/serial/mpsc.c</span>
<span class="p_header">index 67ffecc..e2f792a 100644</span>
<span class="p_header">--- a/drivers/tty/serial/mpsc.c</span>
<span class="p_header">+++ b/drivers/tty/serial/mpsc.c</span>
<span class="p_chunk">@@ -81,19 +81,19 @@</span> <span class="p_context"></span>
  * Number of Tx &amp; Rx descriptors must be powers of 2.
  */
 #define	MPSC_RXR_ENTRIES	32
<span class="p_del">-#define	MPSC_RXRE_SIZE		dma_get_cache_alignment()</span>
<span class="p_add">+#define	MPSC_RXRE_SIZE		dma_get_cache_alignment(NULL)</span>
 #define	MPSC_RXR_SIZE		(MPSC_RXR_ENTRIES * MPSC_RXRE_SIZE)
<span class="p_del">-#define	MPSC_RXBE_SIZE		dma_get_cache_alignment()</span>
<span class="p_add">+#define	MPSC_RXBE_SIZE		dma_get_cache_alignment(NULL)</span>
 #define	MPSC_RXB_SIZE		(MPSC_RXR_ENTRIES * MPSC_RXBE_SIZE)
 
 #define	MPSC_TXR_ENTRIES	32
<span class="p_del">-#define	MPSC_TXRE_SIZE		dma_get_cache_alignment()</span>
<span class="p_add">+#define	MPSC_TXRE_SIZE		dma_get_cache_alignment(NULL)</span>
 #define	MPSC_TXR_SIZE		(MPSC_TXR_ENTRIES * MPSC_TXRE_SIZE)
<span class="p_del">-#define	MPSC_TXBE_SIZE		dma_get_cache_alignment()</span>
<span class="p_add">+#define	MPSC_TXBE_SIZE		dma_get_cache_alignment(NULL)</span>
 #define	MPSC_TXB_SIZE		(MPSC_TXR_ENTRIES * MPSC_TXBE_SIZE)
 
 #define	MPSC_DMA_ALLOC_SIZE	(MPSC_RXR_SIZE + MPSC_RXB_SIZE + MPSC_TXR_SIZE \
<span class="p_del">-		+ MPSC_TXB_SIZE + dma_get_cache_alignment() /* for alignment */)</span>
<span class="p_add">+		+ MPSC_TXB_SIZE + dma_get_cache_alignment(NULL) /* for alignment */)</span>
 
 /* Rx and Tx Ring entry descriptors -- assume entry size is &lt;= cacheline size */
 struct mpsc_rx_desc {
<span class="p_chunk">@@ -738,7 +738,7 @@</span> <span class="p_context"> static void mpsc_init_hw(struct mpsc_port_info *pi)</span>
 
 	mpsc_brg_init(pi, pi-&gt;brg_clk_src);
 	mpsc_brg_enable(pi);
<span class="p_del">-	mpsc_sdma_init(pi, dma_get_cache_alignment());	/* burst a cacheline */</span>
<span class="p_add">+	mpsc_sdma_init(pi, dma_get_cache_alignment(NULL));	/* burst a cacheline */</span>
 	mpsc_sdma_stop(pi);
 	mpsc_hw_init(pi);
 }
<span class="p_chunk">@@ -798,8 +798,8 @@</span> <span class="p_context"> static void mpsc_init_rings(struct mpsc_port_info *pi)</span>
 	 * Descriptors &amp; buffers are multiples of cacheline size and must be
 	 * cacheline aligned.
 	 */
<span class="p_del">-	dp = ALIGN((u32)pi-&gt;dma_region, dma_get_cache_alignment());</span>
<span class="p_del">-	dp_p = ALIGN((u32)pi-&gt;dma_region_p, dma_get_cache_alignment());</span>
<span class="p_add">+	dp = ALIGN((u32)pi-&gt;dma_region, dma_get_cache_alignment(NULL));</span>
<span class="p_add">+	dp_p = ALIGN((u32)pi-&gt;dma_region_p, dma_get_cache_alignment(NULL));</span>
 
 	/*
 	 * Partition dma region into rx ring descriptor, rx buffers,
<span class="p_header">diff --git a/drivers/tty/serial/samsung.c b/drivers/tty/serial/samsung.c</span>
<span class="p_header">index 8aca18c..b40a681 100644</span>
<span class="p_header">--- a/drivers/tty/serial/samsung.c</span>
<span class="p_header">+++ b/drivers/tty/serial/samsung.c</span>
<span class="p_chunk">@@ -241,7 +241,7 @@</span> <span class="p_context"> static void enable_tx_dma(struct s3c24xx_uart_port *ourport)</span>
 	/* Enable tx dma mode */
 	ucon = rd_regl(port, S3C2410_UCON);
 	ucon &amp;= ~(S3C64XX_UCON_TXBURST_MASK | S3C64XX_UCON_TXMODE_MASK);
<span class="p_del">-	ucon |= (dma_get_cache_alignment() &gt;= 16) ?</span>
<span class="p_add">+	ucon |= (dma_get_cache_alignment(NULL) &gt;= 16) ?</span>
 		S3C64XX_UCON_TXBURST_16 : S3C64XX_UCON_TXBURST_1;
 	ucon |= S3C64XX_UCON_TXMODE_DMA;
 	wr_regl(port,  S3C2410_UCON, ucon);
<span class="p_chunk">@@ -292,7 +292,7 @@</span> <span class="p_context"> static int s3c24xx_serial_start_tx_dma(struct s3c24xx_uart_port *ourport,</span>
 	if (ourport-&gt;tx_mode != S3C24XX_TX_DMA)
 		enable_tx_dma(ourport);
 
<span class="p_del">-	dma-&gt;tx_size = count &amp; ~(dma_get_cache_alignment() - 1);</span>
<span class="p_add">+	dma-&gt;tx_size = count &amp; ~(dma_get_cache_alignment(NULL) - 1);</span>
 	dma-&gt;tx_transfer_addr = dma-&gt;tx_addr + xmit-&gt;tail;
 
 	dma_sync_single_for_device(ourport-&gt;port.dev, dma-&gt;tx_transfer_addr,
<span class="p_chunk">@@ -332,7 +332,7 @@</span> <span class="p_context"> static void s3c24xx_serial_start_next_tx(struct s3c24xx_uart_port *ourport)</span>
 
 	if (!ourport-&gt;dma || !ourport-&gt;dma-&gt;tx_chan ||
 	    count &lt; ourport-&gt;min_dma_size ||
<span class="p_del">-	    xmit-&gt;tail &amp; (dma_get_cache_alignment() - 1))</span>
<span class="p_add">+	    xmit-&gt;tail &amp; (dma_get_cache_alignment(NULL) - 1))</span>
 		s3c24xx_serial_start_tx_pio(ourport);
 	else
 		s3c24xx_serial_start_tx_dma(ourport, count);
<span class="p_chunk">@@ -718,8 +718,8 @@</span> <span class="p_context"> static irqreturn_t s3c24xx_serial_tx_chars(int irq, void *id)</span>
 
 	if (ourport-&gt;dma &amp;&amp; ourport-&gt;dma-&gt;tx_chan &amp;&amp;
 	    count &gt;= ourport-&gt;min_dma_size) {
<span class="p_del">-		int align = dma_get_cache_alignment() -</span>
<span class="p_del">-			(xmit-&gt;tail &amp; (dma_get_cache_alignment() - 1));</span>
<span class="p_add">+		int align = dma_get_cache_alignment(NULL) -</span>
<span class="p_add">+			(xmit-&gt;tail &amp; (dma_get_cache_alignment(NULL) - 1));</span>
 		if (count-align &gt;= ourport-&gt;min_dma_size) {
 			dma_count = count-align;
 			count = align;
<span class="p_chunk">@@ -870,7 +870,7 @@</span> <span class="p_context"> static int s3c24xx_serial_request_dma(struct s3c24xx_uart_port *p)</span>
 	dma-&gt;tx_conf.direction		= DMA_MEM_TO_DEV;
 	dma-&gt;tx_conf.dst_addr_width	= DMA_SLAVE_BUSWIDTH_1_BYTE;
 	dma-&gt;tx_conf.dst_addr		= p-&gt;port.mapbase + S3C2410_UTXH;
<span class="p_del">-	if (dma_get_cache_alignment() &gt;= 16)</span>
<span class="p_add">+	if (dma_get_cache_alignment(NULL) &gt;= 16)</span>
 		dma-&gt;tx_conf.dst_maxburst = 16;
 	else
 		dma-&gt;tx_conf.dst_maxburst = 1;
<span class="p_chunk">@@ -1849,7 +1849,7 @@</span> <span class="p_context"> static int s3c24xx_serial_probe(struct platform_device *pdev)</span>
 	 * so find minimal transfer size suitable for DMA mode
 	 */
 	ourport-&gt;min_dma_size = max_t(int, ourport-&gt;port.fifosize,
<span class="p_del">-				    dma_get_cache_alignment());</span>
<span class="p_add">+				    dma_get_cache_alignment(NULL));</span>
 
 	dbg(&quot;%s: initialising port %p...\n&quot;, __func__, ourport);
 
<span class="p_header">diff --git a/include/linux/dma-mapping.h b/include/linux/dma-mapping.h</span>
<span class="p_header">index 29ce981..1326023 100644</span>
<span class="p_header">--- a/include/linux/dma-mapping.h</span>
<span class="p_header">+++ b/include/linux/dma-mapping.h</span>
<span class="p_chunk">@@ -131,6 +131,7 @@</span> <span class="p_context"> struct dma_map_ops {</span>
 #ifdef ARCH_HAS_DMA_GET_REQUIRED_MASK
 	u64 (*get_required_mask)(struct device *dev);
 #endif
<span class="p_add">+	int (*get_cache_alignment)(struct device *dev);</span>
 	int is_phys;
 };
 
<span class="p_chunk">@@ -697,12 +698,18 @@</span> <span class="p_context"> static inline void *dma_zalloc_coherent(struct device *dev, size_t size,</span>
 }
 
 #ifdef CONFIG_HAS_DMA
<span class="p_del">-static inline int dma_get_cache_alignment(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-#ifdef ARCH_DMA_MINALIGN</span>
<span class="p_del">-	return ARCH_DMA_MINALIGN;</span>
<span class="p_add">+</span>
<span class="p_add">+#ifndef ARCH_DMA_MINALIGN</span>
<span class="p_add">+#define ARCH_DMA_MINALIGN 1</span>
 #endif
<span class="p_del">-	return 1;</span>
<span class="p_add">+</span>
<span class="p_add">+static inline int dma_get_cache_alignment(struct device *dev)</span>
<span class="p_add">+{</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	if (dev &amp;&amp; ops &amp;&amp; ops-&gt;get_cache_alignment)</span>
<span class="p_add">+		return ops-&gt;get_cache_alignment(dev);</span>
<span class="p_add">+</span>
<span class="p_add">+	return ARCH_DMA_MINALIGN; /* compatible behavior */</span>
 }
 #endif
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



