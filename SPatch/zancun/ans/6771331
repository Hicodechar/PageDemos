
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/3] arm64, mm: Use flush_tlb_all_local() in flush_context(). - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/3] arm64, mm: Use flush_tlb_all_local() in flush_context().</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=25151">David Daney</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 11, 2015, 8:25 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1436646323-10527-3-git-send-email-ddaney.cavm@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6771331/mbox/"
   >mbox</a>
|
   <a href="/patch/6771331/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6771331/">/patch/6771331/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id ADEC49F319
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 11 Jul 2015 20:26:14 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id E10652066B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 11 Jul 2015 20:26:13 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id C73EE2067D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 11 Jul 2015 20:26:12 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751920AbbGKU0I (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sat, 11 Jul 2015 16:26:08 -0400
Received: from mail-ie0-f174.google.com ([209.85.223.174]:35088 &quot;EHLO
	mail-ie0-f174.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751467AbbGKUZa (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sat, 11 Jul 2015 16:25:30 -0400
Received: by iecuq6 with SMTP id uq6so214720763iec.2
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Sat, 11 Jul 2015 13:25:29 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=It5O9xP04KwBMwv0wRmLp9yfRnAPOMrozPDVmx4czcw=;
	b=bMFGb1kbnjhKGCG/NxSLVqlwqGHX5+tyYU0oVLOUdmarl/biWtxEszyJyEekjWYUbv
	M2Lh/zXzcdh10k1nxn+S7fT0W8r7JfJLUy8tzNKrf2ddp2UvfovTepLRiHS4sEoPO52G
	ZphX8zVD9tASA0JIRvDOQem2u2EUUlMt/SXxDESjXoFfs4c1iWq5is1+CIbJahCqTseU
	Q3Rfgl49aEQkbFgvrlFakcmnqsagvSMxXNVMbfYhetg0gwXMVoYTwOJJv0gLmaGFitbR
	t6n2G+fBM9UxKui75s9TJk0Xitj9LxFgIuv9+1ygIS9kEK+LqPk1J7pGxzKap54prI0B
	5QZw==
X-Received: by 10.107.10.93 with SMTP id u90mr10678532ioi.160.1436646329866; 
	Sat, 11 Jul 2015 13:25:29 -0700 (PDT)
Received: from dl.caveonetworks.com (64.2.3.194.ptr.us.xo.net. [64.2.3.194])
	by smtp.gmail.com with ESMTPSA id
	76sm9206001iom.12.2015.07.11.13.25.27
	(version=TLSv1 cipher=RC4-SHA bits=128/128);
	Sat, 11 Jul 2015 13:25:27 -0700 (PDT)
Received: from dl.caveonetworks.com (localhost.localdomain [127.0.0.1])
	by dl.caveonetworks.com (8.14.5/8.14.5) with ESMTP id t6BKPQKB010571; 
	Sat, 11 Jul 2015 13:25:26 -0700
Received: (from ddaney@localhost)
	by dl.caveonetworks.com (8.14.5/8.14.5/Submit) id t6BKPPIo010570;
	Sat, 11 Jul 2015 13:25:25 -0700
From: David Daney &lt;ddaney.cavm@gmail.com&gt;
To: linux-arm-kernel@lists.infradead.org,
	Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	Will Deacon &lt;will.deacon@arm.com&gt;
Cc: linux-kernel@vger.kernel.org, Robert Richter &lt;rrichter@cavium.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	David Daney &lt;david.daney@cavium.com&gt;
Subject: [PATCH 2/3] arm64, mm: Use flush_tlb_all_local() in flush_context().
Date: Sat, 11 Jul 2015 13:25:22 -0700
Message-Id: &lt;1436646323-10527-3-git-send-email-ddaney.cavm@gmail.com&gt;
X-Mailer: git-send-email 1.7.11.7
In-Reply-To: &lt;1436646323-10527-1-git-send-email-ddaney.cavm@gmail.com&gt;
References: &lt;1436646323-10527-1-git-send-email-ddaney.cavm@gmail.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.3 required=5.0 tests=BAYES_00,
	DKIM_ADSP_CUSTOM_MED, 
	DKIM_SIGNED, FREEMAIL_FROM, RCVD_IN_DNSWL_HI, RP_MATCHES_RCVD,
	T_DKIM_INVALID, 
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=25151">David Daney</a> - July 11, 2015, 8:25 p.m.</div>
<pre class="content">
<span class="from">From: David Daney &lt;david.daney@cavium.com&gt;</span>

When CONFIG_SMP, we end up calling flush_context() on each CPU
(indirectly) from __new_context().  Because of this, doing a broadcast
TLB invalidate is overkill, as all CPUs will be doing a local
invalidation.

Change the scope of the TLB invalidation operation to be local,
resulting in nr_cpus invalidations, rather than nr_cpus^2.

On CPUs with a large ASID space this operation is not often done.
But, when it is, this reduces the overhead.

Benchmarked &quot;time make -j48&quot; kernel build with and without the patch on
Cavium ThunderX system, one run to warm up the caches, and then five
runs measured:

original      with-patch
139.299s      139.0766s
S.D. 0.321    S.D. 0.159

Probably a little faster, but could be measurement noise.
<span class="signed-off-by">
Signed-off-by: David Daney &lt;david.daney@cavium.com&gt;</span>
---
 arch/arm64/mm/context.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/mm/context.c b/arch/arm64/mm/context.c</span>
<span class="p_header">index 76c1e6c..ab5b8d3 100644</span>
<span class="p_header">--- a/arch/arm64/mm/context.c</span>
<span class="p_header">+++ b/arch/arm64/mm/context.c</span>
<span class="p_chunk">@@ -48,7 +48,7 @@</span> <span class="p_context"> static void flush_context(void)</span>
 {
 	/* set the reserved TTBR0 before flushing the TLB */
 	cpu_set_reserved_ttbr0();
<span class="p_del">-	flush_tlb_all();</span>
<span class="p_add">+	flush_tlb_all_local();</span>
 	if (icache_is_aivivt())
 		__flush_icache_all();
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



