
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[3.16,281/306] parisc: Purge TLB before setting PTE - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [3.16,281/306] parisc: Purge TLB before setting PTE</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=131">Ben Hutchings</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 15, 2017, 10:41 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;lsq.1487198501.309887329@decadent.org.uk&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9575981/mbox/"
   >mbox</a>
|
   <a href="/patch/9575981/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9575981/">/patch/9575981/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	A490860209 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 16 Feb 2017 00:21:11 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 978E4285A9
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 16 Feb 2017 00:21:11 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 8C733285AB; Thu, 16 Feb 2017 00:21:11 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id F3144285A9
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 16 Feb 2017 00:21:10 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754959AbdBPAVJ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 15 Feb 2017 19:21:09 -0500
Received: from shadbolt.e.decadent.org.uk ([88.96.1.126]:53697 &quot;EHLO
	shadbolt.e.decadent.org.uk&quot; rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1752457AbdBOXMs (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 15 Feb 2017 18:12:48 -0500
Received: from [2a02:8011:400e:2:6f00:88c8:c921:d332] (helo=deadeye)
	by shadbolt.decadent.org.uk with esmtps
	(TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256) (Exim 4.84_2)
	(envelope-from &lt;ben@decadent.org.uk&gt;)
	id 1ce8Tt-0002J3-4o; Wed, 15 Feb 2017 22:55:26 +0000
Received: from ben by deadeye with local (Exim 4.89)
	(envelope-from &lt;ben@decadent.org.uk&gt;)
	id 1ce8To-0003Gp-Sn; Wed, 15 Feb 2017 22:55:20 +0000
Content-Type: text/plain; charset=&quot;UTF-8&quot;
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
MIME-Version: 1.0
From: Ben Hutchings &lt;ben@decadent.org.uk&gt;
To: linux-kernel@vger.kernel.org, stable@vger.kernel.org
CC: akpm@linux-foundation.org, &quot;John David Anglin&quot; &lt;dave.anglin@bell.net&gt;,
	&quot;Helge Deller&quot; &lt;deller@gmx.de&gt;
Date: Wed, 15 Feb 2017 22:41:41 +0000
Message-ID: &lt;lsq.1487198501.309887329@decadent.org.uk&gt;
X-Mailer: LinuxStableQueue (scripts by bwh)
Subject: [PATCH 3.16 281/306] parisc: Purge TLB before setting PTE
In-Reply-To: &lt;lsq.1487198498.99718322@decadent.org.uk&gt;
X-SA-Exim-Connect-IP: 2a02:8011:400e:2:6f00:88c8:c921:d332
X-SA-Exim-Mail-From: ben@decadent.org.uk
X-SA-Exim-Scanned: No (on shadbolt.decadent.org.uk);
	SAEximRunCond expanded to false
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=131">Ben Hutchings</a> - Feb. 15, 2017, 10:41 p.m.</div>
<pre class="content">
3.16.40-rc1 review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: John David Anglin &lt;dave.anglin@bell.net&gt;</span>

commit c78e710c1c9fbeff43dddc0aa3d0ff458e70b0cc upstream.

The attached change interchanges the order of purging the TLB and
setting the corresponding page table entry.  TLB purges are strongly
ordered.  It occurred to me one night that setting the PTE first might
have subtle ordering issues on SMP machines and cause random memory
corruption.

A TLB lock guards the insertion of user TLB entries.  So after the TLB
is purged, a new entry can&#39;t be inserted until the lock is released.
This ensures that the new PTE value is used when the lock is released.

Since making this change, no random segmentation faults have been
observed on the Debian hppa buildd servers.
<span class="signed-off-by">
Signed-off-by: John David Anglin  &lt;dave.anglin@bell.net&gt;</span>
<span class="signed-off-by">Signed-off-by: Helge Deller &lt;deller@gmx.de&gt;</span>
[bwh: Backported to 3.16: adjust context]
<span class="signed-off-by">Signed-off-by: Ben Hutchings &lt;ben@decadent.org.uk&gt;</span>
---
 arch/parisc/include/asm/pgtable.h | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/parisc/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/parisc/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -48,8 +48,8 @@</span> <span class="p_context"> extern void purge_tlb_entries(struct mm_</span>
 	do {                                                    \
 		unsigned long flags;				\
 		spin_lock_irqsave(&amp;pa_dbit_lock, flags);	\
<span class="p_del">-		set_pte(ptep, pteval);                          \</span>
 		purge_tlb_entries(mm, addr);                    \
<span class="p_add">+		set_pte(ptep, pteval);                          \</span>
 		spin_unlock_irqrestore(&amp;pa_dbit_lock, flags);	\
 	} while (0)
 
<span class="p_chunk">@@ -452,8 +452,8 @@</span> <span class="p_context"> static inline int ptep_test_and_clear_yo</span>
 		spin_unlock_irqrestore(&amp;pa_dbit_lock, flags);
 		return 0;
 	}
<span class="p_del">-	set_pte(ptep, pte_mkold(pte));</span>
 	purge_tlb_entries(vma-&gt;vm_mm, addr);
<span class="p_add">+	set_pte(ptep, pte_mkold(pte));</span>
 	spin_unlock_irqrestore(&amp;pa_dbit_lock, flags);
 	return 1;
 }
<span class="p_chunk">@@ -466,8 +466,8 @@</span> <span class="p_context"> static inline pte_t ptep_get_and_clear(s</span>
 
 	spin_lock_irqsave(&amp;pa_dbit_lock, flags);
 	old_pte = *ptep;
<span class="p_del">-	pte_clear(mm,addr,ptep);</span>
 	purge_tlb_entries(mm, addr);
<span class="p_add">+	pte_clear(mm,addr,ptep);</span>
 	spin_unlock_irqrestore(&amp;pa_dbit_lock, flags);
 
 	return old_pte;
<span class="p_chunk">@@ -477,8 +477,8 @@</span> <span class="p_context"> static inline void ptep_set_wrprotect(st</span>
 {
 	unsigned long flags;
 	spin_lock_irqsave(&amp;pa_dbit_lock, flags);
<span class="p_del">-	set_pte(ptep, pte_wrprotect(*ptep));</span>
 	purge_tlb_entries(mm, addr);
<span class="p_add">+	set_pte(ptep, pte_wrprotect(*ptep));</span>
 	spin_unlock_irqrestore(&amp;pa_dbit_lock, flags);
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



