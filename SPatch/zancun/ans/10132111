
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>x86: xen: remove the use of VLAIS - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    x86: xen: remove the use of VLAIS</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=171273">Nick Desaulniers</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 24, 2017, 6:02 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1514138567-20491-1-git-send-email-nick.desaulniers@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10132111/mbox/"
   >mbox</a>
|
   <a href="/patch/10132111/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10132111/">/patch/10132111/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	170316019C for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 24 Dec 2017 18:03:26 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id EF51228A56
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 24 Dec 2017 18:03:25 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id E17F428A60; Sun, 24 Dec 2017 18:03:25 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,
	DKIM_ADSP_CUSTOM_MED, 
	DKIM_SIGNED, FREEMAIL_FROM, RCVD_IN_DNSWL_HI,
	T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6575628A56
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 24 Dec 2017 18:03:25 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751178AbdLXSDQ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 24 Dec 2017 13:03:16 -0500
Received: from mail-qt0-f195.google.com ([209.85.216.195]:33563 &quot;EHLO
	mail-qt0-f195.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1750733AbdLXSDO (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 24 Dec 2017 13:03:14 -0500
Received: by mail-qt0-f195.google.com with SMTP id e2so41452713qti.0
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Sun, 24 Dec 2017 10:03:14 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=from:to:cc:subject:date:message-id;
	bh=wH4Ha4LQofL+Y1AQbpWWA3u73e5DQAX2QCvoKthylqk=;
	b=IXLQ87HMnM8OwBIZoOggdptmPgmk9C4n/t1yzoOrdPV0Y4tEf5dLDAhSMRT3ggnIXZ
	gFVYweLvWbluyUKCOONsyWmE7uH9ukzlkDfE2M5uQDAFfrPx5J93yNf8LHJMoKF+Xjm0
	LuzQuifHd0PtAPXp+CUTbnSUlxpbOk+je2gg8PjDxJ77OMVFMwy/+1uvVxL9n4hVEEqM
	MSJ6mA1HI+c80TNK+orZJZB7Ocd57ohtybaP0hc50VADMxHgSRMNVcQ8G+W+Ek38j6Er
	pjwDrzlhYxujSf3/HLboxsCaqKnm5vlup1m/YOxfgCO0vgeRgA4eFuoQq5K2NLi04Nl1
	Qqig==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id;
	bh=wH4Ha4LQofL+Y1AQbpWWA3u73e5DQAX2QCvoKthylqk=;
	b=mXUNpm9PoOPvAaueOaRGi6JAbJ7YAJbpP6aX8/nqrKJGNnsXltEBWm4ASbw/jZxeN4
	DRMKGdjcjZfti80+ajeDslRCYMBhwYDJqPlyUEEqze4hPUFttJ1ZI1cDHOzINK8l12ng
	qw640P8uBAhqClsZUSUF+xZJ8OAQiEmGNKC4oeAbvzRTt87+t+G27gyG9pjvdhH3brNc
	CjVV6bSEVGERXV1KTnRFO/YaRFI0+pv9wF4pk0wp5r9i3Gb8Evz7mhiJ836/xgENS1gv
	TQobw4TKDjD9W8mJsoCKOeWZuED9XAMG+z1XzCq7IyN5wUETqBKpcB88M9iU15QE+zOM
	Aexg==
X-Gm-Message-State: AKGB3mIErRlPd54MnAZpR3gO1Vd3SUj0xVtDZ8B+c2oUcgrJe8zjEDgf
	GD4Al7E3CwrHWhIRoqCuzJc=
X-Google-Smtp-Source: ACJfBosNBmBMHSpw0AwSuK6oIKJLLRW3lVDrErUt2MKFaRxN2+MxUUtGH0yiJeOVik+J9sxsR+vOpw==
X-Received: by 10.200.43.24 with SMTP id 24mr26628733qtu.153.1514138593974; 
	Sun, 24 Dec 2017 10:03:13 -0800 (PST)
Received: from nick-Blade-Stealth.frontierlocal.net ([32.208.144.169])
	by smtp.googlemail.com with ESMTPSA id
	t128sm17204616qkh.12.2017.12.24.10.03.11
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Sun, 24 Dec 2017 10:03:13 -0800 (PST)
From: Nick Desaulniers &lt;nick.desaulniers@gmail.com&gt;
Cc: ghackmann@google.com, mka@google.com, kees@google.com,
	srhines@google.com, Nick Desaulniers &lt;nick.desaulniers@gmail.com&gt;,
	Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;,
	Juergen Gross &lt;jgross@suse.com&gt;, Thomas Gleixner &lt;tglx@linutronix.de&gt;,
	Ingo Molnar &lt;mingo@redhat.com&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;, x86@kernel.org,
	xen-devel@lists.xenproject.org, linux-kernel@vger.kernel.org
Subject: [PATCH] x86: xen: remove the use of VLAIS
Date: Sun, 24 Dec 2017 13:02:47 -0500
Message-Id: &lt;1514138567-20491-1-git-send-email-nick.desaulniers@gmail.com&gt;
X-Mailer: git-send-email 2.7.4
To: unlisted-recipients:; (no To-header on input)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=171273">Nick Desaulniers</a> - Dec. 24, 2017, 6:02 p.m.</div>
<pre class="content">
Variable Length Arrays In Structs (VLAIS) is not supported by Clang, and
frowned upon by others.

https://lkml.org/lkml/2013/9/23/500

Here, the VLAIS was used because the size of the bitmap returned from
xen_mc_entry() depended on possibly (based on kernel configuration)
runtime sized data. Rather than declaring args as a VLAIS then calling
sizeof on *args, we can define the variable length array (mask) to be a
pointer, and calculate the appropriate sizeof args manually. Further, we
can get rid of the #ifdef&#39;s and rely on num_possible_cpus() (thanks to a
helpful checkpatch warning from an earlier version of this patch).
<span class="signed-off-by">
Signed-off-by: Nick Desaulniers &lt;nick.desaulniers@gmail.com&gt;</span>
---
 arch/x86/xen/mmu_pv.c | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=100191">Juergen Gross</a> - Jan. 2, 2018, 8:18 a.m.</div>
<pre class="content">
On 24/12/17 19:02, Nick Desaulniers wrote:
<span class="quote">&gt; Variable Length Arrays In Structs (VLAIS) is not supported by Clang, and</span>
<span class="quote">&gt; frowned upon by others.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; https://lkml.org/lkml/2013/9/23/500</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Here, the VLAIS was used because the size of the bitmap returned from</span>
<span class="quote">&gt; xen_mc_entry() depended on possibly (based on kernel configuration)</span>
<span class="quote">&gt; runtime sized data. Rather than declaring args as a VLAIS then calling</span>
<span class="quote">&gt; sizeof on *args, we can define the variable length array (mask) to be a</span>
<span class="quote">&gt; pointer, and calculate the appropriate sizeof args manually. Further, we</span>
<span class="quote">&gt; can get rid of the #ifdef&#39;s and rely on num_possible_cpus() (thanks to a</span>
<span class="quote">&gt; helpful checkpatch warning from an earlier version of this patch).</span>

Using a pointer for mask seems to be wrong, as it is never initialized.

Why don&#39;t you just use:

DECLARE_BITMAP(mask, NR_CPUS);

and drop the #ifdef, while keeping the manual length calculation?


Juergen
<span class="quote">
&gt; </span>
<span class="quote">&gt; Signed-off-by: Nick Desaulniers &lt;nick.desaulniers@gmail.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/x86/xen/mmu_pv.c | 10 ++++------</span>
<span class="quote">&gt;  1 file changed, 4 insertions(+), 6 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/arch/x86/xen/mmu_pv.c b/arch/x86/xen/mmu_pv.c</span>
<span class="quote">&gt; index 4d62c07..966976c 100644</span>
<span class="quote">&gt; --- a/arch/x86/xen/mmu_pv.c</span>
<span class="quote">&gt; +++ b/arch/x86/xen/mmu_pv.c</span>
<span class="quote">&gt; @@ -1325,20 +1325,18 @@ static void xen_flush_tlb_others(const struct cpumask *cpus,</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	struct {</span>
<span class="quote">&gt;  		struct mmuext_op op;</span>
<span class="quote">&gt; -#ifdef CONFIG_SMP</span>
<span class="quote">&gt; -		DECLARE_BITMAP(mask, num_processors);</span>
<span class="quote">&gt; -#else</span>
<span class="quote">&gt; -		DECLARE_BITMAP(mask, NR_CPUS);</span>
<span class="quote">&gt; -#endif</span>
<span class="quote">&gt; +		unsigned long *mask;</span>
<span class="quote">&gt;  	} *args;</span>
<span class="quote">&gt;  	struct multicall_space mcs;</span>
<span class="quote">&gt; +	const size_t mc_entry_size = sizeof(args-&gt;op) +</span>
<span class="quote">&gt; +		sizeof(*args-&gt;mask) * BITS_TO_LONGS(num_possible_cpus());</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	trace_xen_mmu_flush_tlb_others(cpus, info-&gt;mm, info-&gt;start, info-&gt;end);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	if (cpumask_empty(cpus))</span>
<span class="quote">&gt;  		return;		/* nothing to do */</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -	mcs = xen_mc_entry(sizeof(*args));</span>
<span class="quote">&gt; +	mcs = xen_mc_entry(mc_entry_size);</span>
<span class="quote">&gt;  	args = mcs.args;</span>
<span class="quote">&gt;  	args-&gt;op.arg2.vcpumask = to_cpumask(args-&gt;mask);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/xen/mmu_pv.c b/arch/x86/xen/mmu_pv.c</span>
<span class="p_header">index 4d62c07..966976c 100644</span>
<span class="p_header">--- a/arch/x86/xen/mmu_pv.c</span>
<span class="p_header">+++ b/arch/x86/xen/mmu_pv.c</span>
<span class="p_chunk">@@ -1325,20 +1325,18 @@</span> <span class="p_context"> static void xen_flush_tlb_others(const struct cpumask *cpus,</span>
 {
 	struct {
 		struct mmuext_op op;
<span class="p_del">-#ifdef CONFIG_SMP</span>
<span class="p_del">-		DECLARE_BITMAP(mask, num_processors);</span>
<span class="p_del">-#else</span>
<span class="p_del">-		DECLARE_BITMAP(mask, NR_CPUS);</span>
<span class="p_del">-#endif</span>
<span class="p_add">+		unsigned long *mask;</span>
 	} *args;
 	struct multicall_space mcs;
<span class="p_add">+	const size_t mc_entry_size = sizeof(args-&gt;op) +</span>
<span class="p_add">+		sizeof(*args-&gt;mask) * BITS_TO_LONGS(num_possible_cpus());</span>
 
 	trace_xen_mmu_flush_tlb_others(cpus, info-&gt;mm, info-&gt;start, info-&gt;end);
 
 	if (cpumask_empty(cpus))
 		return;		/* nothing to do */
 
<span class="p_del">-	mcs = xen_mc_entry(sizeof(*args));</span>
<span class="p_add">+	mcs = xen_mc_entry(mc_entry_size);</span>
 	args = mcs.args;
 	args-&gt;op.arg2.vcpumask = to_cpumask(args-&gt;mask);
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



