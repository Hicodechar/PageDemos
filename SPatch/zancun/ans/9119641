
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>docs: fix &quot;interruptible&quot; misspellings - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    docs: fix &quot;interruptible&quot; misspellings</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=38541">Kees Cook</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>May 18, 2016, 1:55 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20160518135545.GA13773@www.outflux.net&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9119641/mbox/"
   >mbox</a>
|
   <a href="/patch/9119641/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9119641/">/patch/9119641/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id E3D9BBF29F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 18 May 2016 13:55:56 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id A363E20138
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 18 May 2016 13:55:55 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id B57E120328
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 18 May 2016 13:55:53 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753301AbcERNzt (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 18 May 2016 09:55:49 -0400
Received: from mail-pa0-f41.google.com ([209.85.220.41]:36586 &quot;EHLO
	mail-pa0-f41.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751120AbcERNzr (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 18 May 2016 09:55:47 -0400
Received: by mail-pa0-f41.google.com with SMTP id bt5so18132443pac.3
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Wed, 18 May 2016 06:55:47 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=chromium.org; s=google;
	h=date:from:to:cc:subject:message-id:mime-version:content-disposition;
	bh=qEpiKiJJzXj7Qu2/dac4O7q3Qsno/hM4C7EFlLifccw=;
	b=YiwIiipao1DfMIRFkaCtTm5gbIN76iGWhFjNyS7uKTGvkSaPNGmiplarS5NBZRutfg
	so/yw/CjKYmgggRFPkPn3W/md7jvNilNTPVSGjcGsb097vkp1nFI4/WzYq3GObQ57gBx
	f6BHbGa++sL3kO95o/PBg95Y+TFhC5luKseQ8=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20130820;
	h=x-gm-message-state:date:from:to:cc:subject:message-id:mime-version
	:content-disposition;
	bh=qEpiKiJJzXj7Qu2/dac4O7q3Qsno/hM4C7EFlLifccw=;
	b=CJWZQy4XJ3wihHQspU8S1wzWxCl1jOtVC4Sv9LlLoOtOesBYv8Ni45Y+zbp9eYs2/1
	/FNxnZPRjjmbNSTVbGHz3bW8Vqzexm/3YS3iK0vL+EZDVjXtyYSpzzjlhfVhaquGK1Bv
	c1MTWDKFFLK3oVzGB3YI312gIVublTU+wzpIzkEylNNxV93FFUjon00ZgdmSr3RHWiyk
	StgxdSmv3zUMFBrwc6gAhe4qjPxWdksUVVDAKSC+QW3pbEjYXTbFRB8R+W4PtkERR4Hw
	lZbT452uZjGIqlPEzhzMWJeRdLKJ+kTWqiFVmsBoJ3r//u1KJK+r9Tl7UyOMU+s1EQQc
	pjgg==
X-Gm-Message-State: AOPr4FWRuiYvOBscdCe2CC2FUjMuLMesI/IWghtSf2p+RkgegP8izwEILxObnTjFAc4UpQ==
X-Received: by 10.66.148.230 with SMTP id tv6mr11365553pab.89.1463579746702; 
	Wed, 18 May 2016 06:55:46 -0700 (PDT)
Received: from www.outflux.net (smtp.outflux.net. [198.145.64.163])
	by smtp.gmail.com with ESMTPSA id
	yp9sm12674975pab.42.2016.05.18.06.55.46
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Wed, 18 May 2016 06:55:46 -0700 (PDT)
Date: Wed, 18 May 2016 06:55:45 -0700
From: Kees Cook &lt;keescook@chromium.org&gt;
To: Jonathan Corbet &lt;corbet@lwn.net&gt;
Cc: Randy Dunlap &lt;rdunlap@infradead.org&gt;, linux-doc@vger.kernel.org,
	linux-kernel@vger.kernel.org
Subject: [PATCH] docs: fix &quot;interruptible&quot; misspellings
Message-ID: &lt;20160518135545.GA13773@www.outflux.net&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-8.4 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, RCVD_IN_DNSWL_HI, RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=38541">Kees Cook</a> - May 18, 2016, 1:55 p.m.</div>
<pre class="content">
A common misspelling of &quot;interruptible&quot; is &quot;interruptable&quot;. This fixes
them in the tree and adds the two most common variations to spelling.txt.

Suggested-by: Randy Dunlap &lt;rdunlap@infradead.org&gt;
<span class="signed-off-by">Signed-off-by: Kees Cook &lt;keescook@chromium.org&gt;</span>
---
 Documentation/hid/hiddev.txt          |  2 +-
 Documentation/scsi/ChangeLog.lpfc     |  2 +-
 Documentation/sysrq.txt               |  2 +-
 arch/arc/include/asm/irqflags-arcv2.h |  2 +-
 arch/x86/platform/uv/tlb_uv.c         |  2 +-
 drivers/firmware/qcom_scm-32.c        |  2 +-
 drivers/gpu/drm/radeon/radeon_fence.c | 12 ++++++------
 drivers/hid/Kconfig                   |  2 +-
 drivers/hid/usbhid/Kconfig            |  2 +-
 drivers/input/serio/hil_mlc.c         |  2 +-
 drivers/net/ethernet/amd/nmclan_cs.c  |  4 ++--
 drivers/scsi/aacraid/commsup.c        |  2 +-
 drivers/tty/serial/mux.c              |  2 +-
 fs/ecryptfs/miscdev.c                 |  2 +-
 mm/kmemleak.c                         |  2 +-
 scripts/spelling.txt                  |  2 ++
 sound/soc/intel/atom/sst/sst_pvt.c    |  2 +-
 17 files changed, 24 insertions(+), 22 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=94">Jonathan Corbet</a> - June 9, 2016, 7:29 p.m.</div>
<pre class="content">
On Wed, 18 May 2016 06:55:45 -0700
Kees Cook &lt;keescook@chromium.org&gt; wrote:
<span class="quote">
&gt; A common misspelling of &quot;interruptible&quot; is &quot;interruptable&quot;. This fixes</span>
<span class="quote">&gt; them in the tree and adds the two most common variations to spelling.txt.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Suggested-by: Randy Dunlap &lt;rdunlap@infradead.org&gt;</span>
<span class="quote">&gt; Signed-off-by: Kees Cook &lt;keescook@chromium.org&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  Documentation/hid/hiddev.txt          |  2 +-</span>
<span class="quote">&gt;  Documentation/scsi/ChangeLog.lpfc     |  2 +-</span>
<span class="quote">&gt;  Documentation/sysrq.txt               |  2 +-</span>
<span class="quote">&gt;  arch/arc/include/asm/irqflags-arcv2.h |  2 +-</span>
<span class="quote">&gt;  arch/x86/platform/uv/tlb_uv.c         |  2 +-</span>
<span class="quote">&gt;  drivers/firmware/qcom_scm-32.c        |  2 +-</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/radeon_fence.c | 12 ++++++------</span>
<span class="quote">&gt;  drivers/hid/Kconfig                   |  2 +-</span>
<span class="quote">&gt;  drivers/hid/usbhid/Kconfig            |  2 +-</span>
<span class="quote">&gt;  drivers/input/serio/hil_mlc.c         |  2 +-</span>
<span class="quote">&gt;  drivers/net/ethernet/amd/nmclan_cs.c  |  4 ++--</span>
<span class="quote">&gt;  drivers/scsi/aacraid/commsup.c        |  2 +-</span>
<span class="quote">&gt;  drivers/tty/serial/mux.c              |  2 +-</span>
<span class="quote">&gt;  fs/ecryptfs/miscdev.c                 |  2 +-</span>
<span class="quote">&gt;  mm/kmemleak.c                         |  2 +-</span>
<span class="quote">&gt;  scripts/spelling.txt                  |  2 ++</span>
<span class="quote">&gt;  sound/soc/intel/atom/sst/sst_pvt.c    |  2 +-</span>
<span class="quote">&gt;  17 files changed, 24 insertions(+), 22 deletions(-)</span>

So I&#39;m a bit nervous about taking this one; I don&#39;t normally feel that
the docs tree has the mandate to reach out into the rest of the kernel
this way.  Sending them to maintainers individually wouldn&#39;t be much
fun.  Maybe Jiri (CC&#39;d) can take it for the trivial tree?

Thanks,

jon
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=325">Joe Perches</a> - June 9, 2016, 8:11 p.m.</div>
<pre class="content">
On Thu, 2016-06-09 at 13:29 -0600, Jonathan Corbet wrote:
<span class="quote">&gt; On Wed, 18 May 2016 06:55:45 -0700 Kees Cook &lt;keescook@chromium.org&gt; wrote:</span>
<span class="quote">&gt; &gt; A common misspelling of &quot;interruptible&quot; is &quot;interruptable&quot;. This fixes</span>
<span class="quote">&gt; &gt; them in the tree and adds the two most common variations to spelling.txt.</span>

$ grep --include=*.[ch] -Proh &quot;\b[A-Za-z]+[ai]ble\b&quot; * | \
  tr [:upper:] [:lower:] | sort | uniq

gives several more that could be updated like:

avaiable
avaialable
avaible
available
availible
availlable
avalable
avalaible
avaliable
avalible
avalilable
aviable
avialable
avilable
[]
preemptable
preemptible
preemtible
[]
responsable
responsible
resposible
[]
unwritable
unwriteable
unwrittable
updatable
updateable
upgradable
upgradeable
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=38541">Kees Cook</a> - Jan. 5, 2017, 10:21 p.m.</div>
<pre class="content">
On Thu, Jun 9, 2016 at 12:29 PM, Jonathan Corbet &lt;corbet@lwn.net&gt; wrote:
<span class="quote">&gt; On Wed, 18 May 2016 06:55:45 -0700</span>
<span class="quote">&gt; Kees Cook &lt;keescook@chromium.org&gt; wrote:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; A common misspelling of &quot;interruptible&quot; is &quot;interruptable&quot;. This fixes</span>
<span class="quote">&gt;&gt; them in the tree and adds the two most common variations to spelling.txt.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Suggested-by: Randy Dunlap &lt;rdunlap@infradead.org&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Kees Cook &lt;keescook@chromium.org&gt;</span>
<span class="quote">&gt;&gt; ---</span>
<span class="quote">&gt;&gt;  Documentation/hid/hiddev.txt          |  2 +-</span>
<span class="quote">&gt;&gt;  Documentation/scsi/ChangeLog.lpfc     |  2 +-</span>
<span class="quote">&gt;&gt;  Documentation/sysrq.txt               |  2 +-</span>
<span class="quote">&gt;&gt;  arch/arc/include/asm/irqflags-arcv2.h |  2 +-</span>
<span class="quote">&gt;&gt;  arch/x86/platform/uv/tlb_uv.c         |  2 +-</span>
<span class="quote">&gt;&gt;  drivers/firmware/qcom_scm-32.c        |  2 +-</span>
<span class="quote">&gt;&gt;  drivers/gpu/drm/radeon/radeon_fence.c | 12 ++++++------</span>
<span class="quote">&gt;&gt;  drivers/hid/Kconfig                   |  2 +-</span>
<span class="quote">&gt;&gt;  drivers/hid/usbhid/Kconfig            |  2 +-</span>
<span class="quote">&gt;&gt;  drivers/input/serio/hil_mlc.c         |  2 +-</span>
<span class="quote">&gt;&gt;  drivers/net/ethernet/amd/nmclan_cs.c  |  4 ++--</span>
<span class="quote">&gt;&gt;  drivers/scsi/aacraid/commsup.c        |  2 +-</span>
<span class="quote">&gt;&gt;  drivers/tty/serial/mux.c              |  2 +-</span>
<span class="quote">&gt;&gt;  fs/ecryptfs/miscdev.c                 |  2 +-</span>
<span class="quote">&gt;&gt;  mm/kmemleak.c                         |  2 +-</span>
<span class="quote">&gt;&gt;  scripts/spelling.txt                  |  2 ++</span>
<span class="quote">&gt;&gt;  sound/soc/intel/atom/sst/sst_pvt.c    |  2 +-</span>
<span class="quote">&gt;&gt;  17 files changed, 24 insertions(+), 22 deletions(-)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; So I&#39;m a bit nervous about taking this one; I don&#39;t normally feel that</span>
<span class="quote">&gt; the docs tree has the mandate to reach out into the rest of the kernel</span>
<span class="quote">&gt; this way.  Sending them to maintainers individually wouldn&#39;t be much</span>
<span class="quote">&gt; fun.  Maybe Jiri (CC&#39;d) can take it for the trivial tree?</span>

Thread necromancy!

Since this is all in comments, etc, it seems like it&#39;d be okay to go
via docs, but trivial is fine by me too. Jiri, can you take this, or
should Jon?

Thanks!

-Kees
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=38541">Kees Cook</a> - Jan. 5, 2017, 10:21 p.m.</div>
<pre class="content">
On Thu, Jun 9, 2016 at 1:11 PM, Joe Perches &lt;joe@perches.com&gt; wrote:
<span class="quote">&gt; On Thu, 2016-06-09 at 13:29 -0600, Jonathan Corbet wrote:</span>
<span class="quote">&gt;&gt; On Wed, 18 May 2016 06:55:45 -0700 Kees Cook &lt;keescook@chromium.org&gt; wrote:</span>
<span class="quote">&gt;&gt; &gt; A common misspelling of &quot;interruptible&quot; is &quot;interruptable&quot;. This fixes</span>
<span class="quote">&gt;&gt; &gt; them in the tree and adds the two most common variations to spelling.txt.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; $ grep --include=*.[ch] -Proh &quot;\b[A-Za-z]+[ai]ble\b&quot; * | \</span>
<span class="quote">&gt;   tr [:upper:] [:lower:] | sort | uniq</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; gives several more that could be updated like:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; avaiable</span>
<span class="quote">&gt; avaialable</span>
<span class="quote">&gt; avaible</span>
<span class="quote">&gt; available</span>
<span class="quote">&gt; availible</span>
<span class="quote">&gt; availlable</span>
<span class="quote">&gt; avalable</span>
<span class="quote">&gt; avalaible</span>
<span class="quote">&gt; avaliable</span>
<span class="quote">&gt; avalible</span>
<span class="quote">&gt; avalilable</span>
<span class="quote">&gt; aviable</span>
<span class="quote">&gt; avialable</span>
<span class="quote">&gt; avilable</span>
<span class="quote">&gt; []</span>
<span class="quote">&gt; preemptable</span>
<span class="quote">&gt; preemptible</span>
<span class="quote">&gt; preemtible</span>
<span class="quote">&gt; []</span>
<span class="quote">&gt; responsable</span>
<span class="quote">&gt; responsible</span>
<span class="quote">&gt; resposible</span>
<span class="quote">&gt; []</span>
<span class="quote">&gt; unwritable</span>
<span class="quote">&gt; unwriteable</span>
<span class="quote">&gt; unwrittable</span>
<span class="quote">&gt; updatable</span>
<span class="quote">&gt; updateable</span>
<span class="quote">&gt; upgradable</span>
<span class="quote">&gt; upgradeable</span>

Oooh, yeah, these should get fixed too. Joe, do you have time to build
a full patch for them?

-Kees
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=52131">Randy Dunlap</a> - Jan. 6, 2017, 12:44 a.m.</div>
<pre class="content">
On 01/05/17 14:21, Kees Cook wrote:
<span class="quote">&gt; On Thu, Jun 9, 2016 at 1:11 PM, Joe Perches &lt;joe@perches.com&gt; wrote:</span>
<span class="quote">&gt;&gt; On Thu, 2016-06-09 at 13:29 -0600, Jonathan Corbet wrote:</span>
<span class="quote">&gt;&gt;&gt; On Wed, 18 May 2016 06:55:45 -0700 Kees Cook &lt;keescook@chromium.org&gt; wrote:</span>
<span class="quote">&gt;&gt;&gt;&gt; A common misspelling of &quot;interruptible&quot; is &quot;interruptable&quot;. This fixes</span>
<span class="quote">&gt;&gt;&gt;&gt; them in the tree and adds the two most common variations to spelling.txt.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; $ grep --include=*.[ch] -Proh &quot;\b[A-Za-z]+[ai]ble\b&quot; * | \</span>
<span class="quote">&gt;&gt;   tr [:upper:] [:lower:] | sort | uniq</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; gives several more that could be updated like:</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; avaiable</span>
<span class="quote">&gt;&gt; avaialable</span>
<span class="quote">&gt;&gt; avaible</span>
<span class="quote">&gt;&gt; available</span>
<span class="quote">&gt;&gt; availible</span>
<span class="quote">&gt;&gt; availlable</span>
<span class="quote">&gt;&gt; avalable</span>
<span class="quote">&gt;&gt; avalaible</span>
<span class="quote">&gt;&gt; avaliable</span>
<span class="quote">&gt;&gt; avalible</span>
<span class="quote">&gt;&gt; avalilable</span>
<span class="quote">&gt;&gt; aviable</span>
<span class="quote">&gt;&gt; avialable</span>
<span class="quote">&gt;&gt; avilable</span>
<span class="quote">&gt;&gt; []</span>
<span class="quote">&gt;&gt; preemptable</span>
<span class="quote">&gt;&gt; preemptible</span>
<span class="quote">&gt;&gt; preemtible</span>
<span class="quote">&gt;&gt; []</span>
<span class="quote">&gt;&gt; responsable</span>
<span class="quote">&gt;&gt; responsible</span>
<span class="quote">&gt;&gt; resposible</span>
<span class="quote">&gt;&gt; []</span>
<span class="quote">&gt;&gt; unwritable</span>
<span class="quote">&gt;&gt; unwriteable</span>
<span class="quote">&gt;&gt; unwrittable</span>
<span class="quote">&gt;&gt; updatable</span>
<span class="quote">&gt;&gt; updateable</span>
<span class="quote">&gt;&gt; upgradable</span>
<span class="quote">&gt;&gt; upgradeable</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Oooh, yeah, these should get fixed too. Joe, do you have time to build</span>
<span class="quote">&gt; a full patch for them?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -Kees</span>
<span class="quote">&gt; </span>

and assignement
to correct spelling:
assignment
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/Documentation/hid/hiddev.txt b/Documentation/hid/hiddev.txt</span>
<span class="p_header">index 6e8c9f1d2f22..cf22e3aa5e01 100644</span>
<span class="p_header">--- a/Documentation/hid/hiddev.txt</span>
<span class="p_header">+++ b/Documentation/hid/hiddev.txt</span>
<span class="p_chunk">@@ -5,7 +5,7 @@</span> <span class="p_context"> INTRODUCTION</span>
 In addition to the normal input type HID devices, USB also uses the
 human interface device protocols for things that are not really human
 interfaces, but have similar sorts of communication needs. The two big
<span class="p_del">-examples for this are power devices (especially uninterruptable power</span>
<span class="p_add">+examples for this are power devices (especially uninterruptible power</span>
 supplies) and monitor control on higher end monitors.
 
 To support these disparate requirements, the Linux USB system provides
<span class="p_header">diff --git a/Documentation/scsi/ChangeLog.lpfc b/Documentation/scsi/ChangeLog.lpfc</span>
<span class="p_header">index 2f6d595f95e1..ca4b3fd40552 100644</span>
<span class="p_header">--- a/Documentation/scsi/ChangeLog.lpfc</span>
<span class="p_header">+++ b/Documentation/scsi/ChangeLog.lpfc</span>
<span class="p_chunk">@@ -389,7 +389,7 @@</span> <span class="p_context"> Changes from 20041220 to 20041229</span>
 	  moved to kthread. kthread_stop() is not able to wake up thread
 	  waiting on a semaphore and &quot;modprobe -r lpfc&quot; is not always
 	  (most of the times) able to complete. Fix is in not using
<span class="p_del">-	  semaphore for the interruptable sleep.</span>
<span class="p_add">+	  semaphore for the interruptible sleep.</span>
 	* Small Makefile cleanup - Remove remnants of 2.4 vs. 2.6
 	  determination.
 
<span class="p_header">diff --git a/Documentation/sysrq.txt b/Documentation/sysrq.txt</span>
<span class="p_header">index 13f5619b2203..c0cda0782d98 100644</span>
<span class="p_header">--- a/Documentation/sysrq.txt</span>
<span class="p_header">+++ b/Documentation/sysrq.txt</span>
<span class="p_chunk">@@ -116,7 +116,7 @@</span> <span class="p_context"> On all -  write a character to /proc/sysrq-trigger.  e.g.:</span>
 &#39;v&#39;	- Forcefully restores framebuffer console
 &#39;v&#39;	- Causes ETM buffer dump [ARM-specific]
 
<span class="p_del">-&#39;w&#39;	- Dumps tasks that are in uninterruptable (blocked) state.</span>
<span class="p_add">+&#39;w&#39;	- Dumps tasks that are in uninterruptible (blocked) state.</span>
 
 &#39;x&#39;	- Used by xmon interface on ppc/powerpc platforms.
           Show global PMU Registers on sparc64.
<span class="p_header">diff --git a/arch/arc/include/asm/irqflags-arcv2.h b/arch/arc/include/asm/irqflags-arcv2.h</span>
<span class="p_header">index d1ec7f6b31e0..a411dfd95154 100644</span>
<span class="p_header">--- a/arch/arc/include/asm/irqflags-arcv2.h</span>
<span class="p_header">+++ b/arch/arc/include/asm/irqflags-arcv2.h</span>
<span class="p_chunk">@@ -38,7 +38,7 @@</span> <span class="p_context"></span>
 #define AUX_IRQ_ACT_BIT_U	31
 
 /*
<span class="p_del">- * User space should be interruptable even by lowest prio interrupt</span>
<span class="p_add">+ * User space should be interruptible even by lowest prio interrupt</span>
  * Safe even if actual interrupt priorities is fewer or even one
  */
 #define ARCV2_IRQ_DEF_PRIO	15
<span class="p_header">diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">index fdb4d42b4ce5..1c584226ddf6 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_chunk">@@ -1251,7 +1251,7 @@</span> <span class="p_context"> void process_uv2_message(struct msg_desc *mdp, struct bau_control *bcp)</span>
  *
  * All cores/threads on this hub get this interrupt.
  * The last one to see it does the software ack.
<span class="p_del">- * (the resource will not be freed until noninterruptable cpus see this</span>
<span class="p_add">+ * (the resource will not be freed until noninterruptible cpus see this</span>
  *  interrupt; hardware may timeout the s/w ack and reply ERROR)
  */
 void uv_bau_message_interrupt(struct pt_regs *regs)
<span class="p_header">diff --git a/drivers/firmware/qcom_scm-32.c b/drivers/firmware/qcom_scm-32.c</span>
<span class="p_header">index 0883292f640f..e59000848917 100644</span>
<span class="p_header">--- a/drivers/firmware/qcom_scm-32.c</span>
<span class="p_header">+++ b/drivers/firmware/qcom_scm-32.c</span>
<span class="p_chunk">@@ -317,7 +317,7 @@</span> <span class="p_context"> out:</span>
  * @arg1: first argument
  *
  * This shall only be used with commands that are guaranteed to be
<span class="p_del">- * uninterruptable, atomic and SMP safe.</span>
<span class="p_add">+ * uninterruptible, atomic and SMP safe.</span>
  */
 static s32 qcom_scm_call_atomic1(u32 svc, u32 cmd, u32 arg1)
 {
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/radeon_fence.c b/drivers/gpu/drm/radeon/radeon_fence.c</span>
<span class="p_header">index 7ef075acde9c..0ef25679dcd8 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/radeon_fence.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/radeon_fence.c</span>
<span class="p_chunk">@@ -471,12 +471,12 @@</span> <span class="p_context"> static bool radeon_fence_any_seq_signaled(struct radeon_device *rdev, u64 *seq)</span>
  *
  * @rdev: radeon device pointer
  * @target_seq: sequence number(s) we want to wait for
<span class="p_del">- * @intr: use interruptable sleep</span>
<span class="p_add">+ * @intr: use interruptible sleep</span>
  * @timeout: maximum time to wait, or MAX_SCHEDULE_TIMEOUT for infinite wait
  *
  * Wait for the requested sequence number(s) to be written by any ring
  * (all asics).  Sequnce number array is indexed by ring id.
<span class="p_del">- * @intr selects whether to use interruptable (true) or non-interruptable</span>
<span class="p_add">+ * @intr selects whether to use interruptible (true) or non-interruptible</span>
  * (false) sleep when waiting for the sequence number.  Helper function
  * for radeon_fence_wait_*().
  * Returns remaining time if the sequence number has passed, 0 when
<span class="p_chunk">@@ -533,7 +533,7 @@</span> <span class="p_context"> static long radeon_fence_wait_seq_timeout(struct radeon_device *rdev,</span>
  * @intr: use interruptible sleep
  *
  * Wait for the requested fence to signal (all asics).
<span class="p_del">- * @intr selects whether to use interruptable (true) or non-interruptable</span>
<span class="p_add">+ * @intr selects whether to use interruptible (true) or non-interruptible</span>
  * (false) sleep when waiting for the fence.
  * @timeout: maximum time to wait, or MAX_SCHEDULE_TIMEOUT for infinite wait
  * Returns remaining time if the sequence number has passed, 0 when
<span class="p_chunk">@@ -573,7 +573,7 @@</span> <span class="p_context"> long radeon_fence_wait_timeout(struct radeon_fence *fence, bool intr, long timeo</span>
  * @intr: use interruptible sleep
  *
  * Wait for the requested fence to signal (all asics).
<span class="p_del">- * @intr selects whether to use interruptable (true) or non-interruptable</span>
<span class="p_add">+ * @intr selects whether to use interruptible (true) or non-interruptible</span>
  * (false) sleep when waiting for the fence.
  * Returns 0 if the fence has passed, error for all other cases.
  */
<span class="p_chunk">@@ -592,11 +592,11 @@</span> <span class="p_context"> int radeon_fence_wait(struct radeon_fence *fence, bool intr)</span>
  *
  * @rdev: radeon device pointer
  * @fences: radeon fence object(s)
<span class="p_del">- * @intr: use interruptable sleep</span>
<span class="p_add">+ * @intr: use interruptible sleep</span>
  *
  * Wait for any requested fence to signal (all asics).  Fence
  * array is indexed by ring id.  @intr selects whether to use
<span class="p_del">- * interruptable (true) or non-interruptable (false) sleep when</span>
<span class="p_add">+ * interruptible (true) or non-interruptible (false) sleep when</span>
  * waiting for the fences. Used by the suballocator.
  * Returns 0 if any fence has passed, error for all other cases.
  */
<span class="p_header">diff --git a/drivers/hid/Kconfig b/drivers/hid/Kconfig</span>
<span class="p_header">index 5646ca4b95de..be02c2ccc757 100644</span>
<span class="p_header">--- a/drivers/hid/Kconfig</span>
<span class="p_header">+++ b/drivers/hid/Kconfig</span>
<span class="p_chunk">@@ -41,7 +41,7 @@</span> <span class="p_context"> config HIDRAW</span>
 	---help---
 	Say Y here if you want to support HID devices (from the USB
 	specification standpoint) that aren&#39;t strictly user interface
<span class="p_del">-	devices, like monitor controls and Uninterruptable Power Supplies.</span>
<span class="p_add">+	devices, like monitor controls and Uninterruptible Power Supplies.</span>
 
 	This module supports these devices separately using a separate
 	event interface on /dev/hidraw.
<span class="p_header">diff --git a/drivers/hid/usbhid/Kconfig b/drivers/hid/usbhid/Kconfig</span>
<span class="p_header">index 0108c5991a04..cff755e69919 100644</span>
<span class="p_header">--- a/drivers/hid/usbhid/Kconfig</span>
<span class="p_header">+++ b/drivers/hid/usbhid/Kconfig</span>
<span class="p_chunk">@@ -37,7 +37,7 @@</span> <span class="p_context"> config USB_HIDDEV</span>
 	help
 	  Say Y here if you want to support HID devices (from the USB
 	  specification standpoint) that aren&#39;t strictly user interface
<span class="p_del">-	  devices, like monitor controls and Uninterruptable Power Supplies.</span>
<span class="p_add">+	  devices, like monitor controls and Uninterruptible Power Supplies.</span>
 
 	  This module supports these devices separately using a separate
 	  event interface on /dev/usb/hiddevX (char 180:96 to 180:111).
<span class="p_header">diff --git a/drivers/input/serio/hil_mlc.c b/drivers/input/serio/hil_mlc.c</span>
<span class="p_header">index 65605e4ef3cf..89f69e9410bc 100644</span>
<span class="p_header">--- a/drivers/input/serio/hil_mlc.c</span>
<span class="p_header">+++ b/drivers/input/serio/hil_mlc.c</span>
<span class="p_chunk">@@ -893,7 +893,7 @@</span> <span class="p_context"> static void hil_mlc_serio_close(struct serio *serio)</span>
 
 	serio_set_drvdata(serio, NULL);
 	serio-&gt;drv = NULL;
<span class="p_del">-	/* TODO wake up interruptable */</span>
<span class="p_add">+	/* TODO wake up interruptible */</span>
 }
 
 static const struct serio_device_id hil_mlc_serio_id = {
<span class="p_header">diff --git a/drivers/net/ethernet/amd/nmclan_cs.c b/drivers/net/ethernet/amd/nmclan_cs.c</span>
<span class="p_header">index 2807e181647b..e039e35f3228 100644</span>
<span class="p_header">--- a/drivers/net/ethernet/amd/nmclan_cs.c</span>
<span class="p_header">+++ b/drivers/net/ethernet/amd/nmclan_cs.c</span>
<span class="p_chunk">@@ -479,7 +479,7 @@</span> <span class="p_context"> static void nmclan_detach(struct pcmcia_device *link)</span>
 /* ----------------------------------------------------------------------------
 mace_read
 	Reads a MACE register.  This is bank independent; however, the
<span class="p_del">-	caller must ensure that this call is not interruptable.  We are</span>
<span class="p_add">+	caller must ensure that this call is not interruptible.  We are</span>
 	assuming that during normal operation, the MACE is always in
 	bank 0.
 ---------------------------------------------------------------------------- */
<span class="p_chunk">@@ -506,7 +506,7 @@</span> <span class="p_context"> static int mace_read(mace_private *lp, unsigned int ioaddr, int reg)</span>
 /* ----------------------------------------------------------------------------
 mace_write
 	Writes to a MACE register.  This is bank independent; however,
<span class="p_del">-	the caller must ensure that this call is not interruptable.  We</span>
<span class="p_add">+	the caller must ensure that this call is not interruptible.  We</span>
 	are assuming that during normal operation, the MACE is always in
 	bank 0.
 ---------------------------------------------------------------------------- */
<span class="p_header">diff --git a/drivers/scsi/aacraid/commsup.c b/drivers/scsi/aacraid/commsup.c</span>
<span class="p_header">index 511bbc575062..41716eafbb22 100644</span>
<span class="p_header">--- a/drivers/scsi/aacraid/commsup.c</span>
<span class="p_header">+++ b/drivers/scsi/aacraid/commsup.c</span>
<span class="p_chunk">@@ -607,7 +607,7 @@</span> <span class="p_context"> int aac_fib_send(u16 command, struct fib *fibptr, unsigned long size,</span>
 
 	if (wait) {
 		spin_unlock_irqrestore(&amp;fibptr-&gt;event_lock, flags);
<span class="p_del">-		/* Only set for first known interruptable command */</span>
<span class="p_add">+		/* Only set for first known interruptible command */</span>
 		if (wait &lt; 0) {
 			/*
 			 * *VERY* Dangerous to time out a command, the
<span class="p_header">diff --git a/drivers/tty/serial/mux.c b/drivers/tty/serial/mux.c</span>
<span class="p_header">index 8a4be4b73723..51b9797e3b10 100644</span>
<span class="p_header">--- a/drivers/tty/serial/mux.c</span>
<span class="p_header">+++ b/drivers/tty/serial/mux.c</span>
<span class="p_chunk">@@ -490,7 +490,7 @@</span> <span class="p_context"> static int __init mux_probe(struct parisc_device *dev)</span>
 
 		/* The port-&gt;timeout needs to match what is present in
 		 * uart_wait_until_sent in serial_core.c.  Otherwise
<span class="p_del">-		 * the time spent in msleep_interruptable will be very</span>
<span class="p_add">+		 * the time spent in msleep_interruptible will be very</span>
 		 * long, causing the appearance of a console hang.
 		 */
 		port-&gt;timeout   = HZ / 50;
<span class="p_header">diff --git a/fs/ecryptfs/miscdev.c b/fs/ecryptfs/miscdev.c</span>
<span class="p_header">index e4141f257495..9c49f405cb25 100644</span>
<span class="p_header">--- a/fs/ecryptfs/miscdev.c</span>
<span class="p_header">+++ b/fs/ecryptfs/miscdev.c</span>
<span class="p_chunk">@@ -265,7 +265,7 @@</span> <span class="p_context"> check_list:</span>
 	}
 	if (list_empty(&amp;daemon-&gt;msg_ctx_out_queue)) {
 		/* Something else jumped in since the
<span class="p_del">-		 * wait_event_interruptable() and removed the</span>
<span class="p_add">+		 * wait_event_interruptible() and removed the</span>
 		 * message from the queue; try again */
 		goto check_list;
 	}
<span class="p_header">diff --git a/mm/kmemleak.c b/mm/kmemleak.c</span>
<span class="p_header">index e6429926e957..aa2e3fb654ef 100644</span>
<span class="p_header">--- a/mm/kmemleak.c</span>
<span class="p_header">+++ b/mm/kmemleak.c</span>
<span class="p_chunk">@@ -1137,7 +1137,7 @@</span> <span class="p_context"> static bool update_checksum(struct kmemleak_object *object)</span>
 }
 
 /*
<span class="p_del">- * Memory scanning is a long process and it needs to be interruptable. This</span>
<span class="p_add">+ * Memory scanning is a long process and it needs to be interruptible. This</span>
  * function checks whether such interrupt condition occurred.
  */
 static int scan_should_stop(void)
<span class="p_header">diff --git a/scripts/spelling.txt b/scripts/spelling.txt</span>
<span class="p_header">index 946caf3bd694..34de5e2908f6 100644</span>
<span class="p_header">--- a/scripts/spelling.txt</span>
<span class="p_header">+++ b/scripts/spelling.txt</span>
<span class="p_chunk">@@ -548,6 +548,7 @@</span> <span class="p_context"> interrface||interface</span>
 interrrupt||interrupt
 interrup||interrupt
 interrups||interrupts
<span class="p_add">+interruptable||interruptible</span>
 interruptted||interrupted
 interupted||interrupted
 interupt||interrupt
<span class="p_chunk">@@ -1013,6 +1014,7 @@</span> <span class="p_context"> unexpectd||unexpected</span>
 unexpeted||unexpected
 unfortunatelly||unfortunately
 unifiy||unify
<span class="p_add">+uninterruptable||uninterruptible</span>
 unintialized||uninitialized
 unknonw||unknown
 unknow||unknown
<span class="p_header">diff --git a/sound/soc/intel/atom/sst/sst_pvt.c b/sound/soc/intel/atom/sst/sst_pvt.c</span>
<span class="p_header">index adb32fefd693..4ac6e53a127a 100644</span>
<span class="p_header">--- a/sound/soc/intel/atom/sst/sst_pvt.c</span>
<span class="p_header">+++ b/sound/soc/intel/atom/sst/sst_pvt.c</span>
<span class="p_chunk">@@ -84,7 +84,7 @@</span> <span class="p_context"> void sst_set_fw_state_locked(</span>
  * @sst_drv_ctx: Driver context
  * @block: Driver block to wait on
  *
<span class="p_del">- * This function waits without a timeout (and is interruptable) for a</span>
<span class="p_add">+ * This function waits without a timeout (and is interruptible) for a</span>
  * given block event
  */
 int sst_wait_interruptible(struct intel_sst_drv *sst_drv_ctx,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



