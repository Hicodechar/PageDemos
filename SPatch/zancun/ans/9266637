
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>mm: fix the incorrect hugepages count - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    mm: fix the incorrect hugepages count</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=146341">zhong jiang</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 8, 2016, 2:49 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1470624546-902-1-git-send-email-zhongjiang@huawei.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9266637/mbox/"
   >mbox</a>
|
   <a href="/patch/9266637/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9266637/">/patch/9266637/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	38A396075A for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  8 Aug 2016 02:52:33 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1456B26E69
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  8 Aug 2016 02:52:33 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id E6C9F276AE; Mon,  8 Aug 2016 02:52:32 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id DAE8526E69
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  8 Aug 2016 02:52:31 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752113AbcHHCvT (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 7 Aug 2016 22:51:19 -0400
Received: from szxga02-in.huawei.com ([119.145.14.65]:6914 &quot;EHLO
	szxga02-in.huawei.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751989AbcHHCvS (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 7 Aug 2016 22:51:18 -0400
Received: from 172.24.1.137 (EHLO SZXEML423-HUB.china.huawei.com)
	([172.24.1.137])
	by szxrg02-dlp.huawei.com (MOS 4.3.7-GA FastPath queued)
	with ESMTP id DLK17911; Mon, 08 Aug 2016 10:51:11 +0800 (CST)
Received: from linux-ibm.site (10.175.102.37) by
	SZXEML423-HUB.china.huawei.com (10.82.67.154) with Microsoft SMTP
	Server id 14.3.235.1; Mon, 8 Aug 2016 10:50:10 +0800
From: zhongjiang &lt;zhongjiang@huawei.com&gt;
To: &lt;akpm@linux-foundation.org&gt;
CC: &lt;linux-mm@kvack.org&gt;, &lt;linux-kernel@vger.kernel.org&gt;
Subject: [PATCH] mm: fix the incorrect hugepages count
Date: Mon, 8 Aug 2016 10:49:06 +0800
Message-ID: &lt;1470624546-902-1-git-send-email-zhongjiang@huawei.com&gt;
X-Mailer: git-send-email 1.7.12.4
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [10.175.102.37]
X-CFilter-Loop: Reflected
X-Mirapoint-Virus-RAPID-Raw: score=unknown(0),
	refid=str=0001.0A020202.57A7F3A1.0071, ss=1, re=0.000, recu=0.000,
	reip=0.000, cl=1, cld=1, fgs=0, ip=0.0.0.0,
	so=2013-06-18 04:22:30, dmn=2013-03-21 17:37:32
X-Mirapoint-Loop-Id: c3b773baf83193b88baa7f7ad349cc58
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=146341">zhong jiang</a> - Aug. 8, 2016, 2:49 a.m.</div>
<pre class="content">
<span class="from">From: zhong jiang &lt;zhongjiang@huawei.com&gt;</span>

when memory hotplug enable, free hugepages will be freed if movable node offline.
therefore, /proc/sys/vm/nr_hugepages will be incorrect.

The patch fix it by reduce the max_huge_pages when the node offline.
<span class="signed-off-by">
Signed-off-by: zhong jiang &lt;zhongjiang@huawei.com&gt;</span>
---
 mm/hugetlb.c | 1 +
 1 file changed, 1 insertion(+)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - Aug. 8, 2016, 5:14 p.m.</div>
<pre class="content">
On 08/07/2016 07:49 PM, zhongjiang wrote:
<span class="quote">&gt; From: zhong jiang &lt;zhongjiang@huawei.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; when memory hotplug enable, free hugepages will be freed if movable node offline.</span>
<span class="quote">&gt; therefore, /proc/sys/vm/nr_hugepages will be incorrect.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The patch fix it by reduce the max_huge_pages when the node offline.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: zhong jiang &lt;zhongjiang@huawei.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  mm/hugetlb.c | 1 +</span>
<span class="quote">&gt;  1 file changed, 1 insertion(+)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="quote">&gt; index f904246..3356e3a 100644</span>
<span class="quote">&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt; @@ -1448,6 +1448,7 @@ static void dissolve_free_huge_page(struct page *page)</span>
<span class="quote">&gt;  		list_del(&amp;page-&gt;lru);</span>
<span class="quote">&gt;  		h-&gt;free_huge_pages--;</span>
<span class="quote">&gt;  		h-&gt;free_huge_pages_node[nid]--;</span>
<span class="quote">&gt; +		h-&gt;max_huge_pages--;</span>
<span class="quote">&gt;  		update_and_free_page(h, page);</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt;  	spin_unlock(&amp;hugetlb_lock);</span>
<span class="quote">&gt; </span>

Adding Naoya as he was the original author of this code.

From quick look it appears that the huge page will be migrated (allocated
on another node).  If my understanding is correct, then max_huge_pages
should not be adjusted here.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=146341">zhong jiang</a> - Aug. 9, 2016, 10:32 a.m.</div>
<pre class="content">
On 2016/8/9 1:14, Mike Kravetz wrote:
<span class="quote">&gt; On 08/07/2016 07:49 PM, zhongjiang wrote:</span>
<span class="quote">&gt;&gt; From: zhong jiang &lt;zhongjiang@huawei.com&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; when memory hotplug enable, free hugepages will be freed if movable node offline.</span>
<span class="quote">&gt;&gt; therefore, /proc/sys/vm/nr_hugepages will be incorrect.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; The patch fix it by reduce the max_huge_pages when the node offline.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: zhong jiang &lt;zhongjiang@huawei.com&gt;</span>
<span class="quote">&gt;&gt; ---</span>
<span class="quote">&gt;&gt;  mm/hugetlb.c | 1 +</span>
<span class="quote">&gt;&gt;  1 file changed, 1 insertion(+)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="quote">&gt;&gt; index f904246..3356e3a 100644</span>
<span class="quote">&gt;&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt;&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt;&gt; @@ -1448,6 +1448,7 @@ static void dissolve_free_huge_page(struct page *page)</span>
<span class="quote">&gt;&gt;  		list_del(&amp;page-&gt;lru);</span>
<span class="quote">&gt;&gt;  		h-&gt;free_huge_pages--;</span>
<span class="quote">&gt;&gt;  		h-&gt;free_huge_pages_node[nid]--;</span>
<span class="quote">&gt;&gt; +		h-&gt;max_huge_pages--;</span>
<span class="quote">&gt;&gt;  		update_and_free_page(h, page);</span>
<span class="quote">&gt;&gt;  	}</span>
<span class="quote">&gt;&gt;  	spin_unlock(&amp;hugetlb_lock);</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt; Adding Naoya as he was the original author of this code.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; &gt;From quick look it appears that the huge page will be migrated (allocated</span>
<span class="quote">&gt; on another node).  If my understanding is correct, then max_huge_pages</span>
<span class="quote">&gt; should not be adjusted here.</span>
<span class="quote">&gt;</span>
  we need to take free hugetlb pages into account.  of course, the allocated huge pages is no
  need to reduce.  The patch just reduce the free hugetlb pages count.

  Thanks
 zhongjiang
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=4407">Naoya Horiguchi</a> - Aug. 10, 2016, 12:07 a.m.</div>
<pre class="content">
On Tue, Aug 09, 2016 at 06:32:39PM +0800, zhong jiang wrote:
<span class="quote">&gt; On 2016/8/9 1:14, Mike Kravetz wrote:</span>
<span class="quote">&gt; &gt; On 08/07/2016 07:49 PM, zhongjiang wrote:</span>
<span class="quote">&gt; &gt;&gt; From: zhong jiang &lt;zhongjiang@huawei.com&gt;</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; when memory hotplug enable, free hugepages will be freed if movable node offline.</span>
<span class="quote">&gt; &gt;&gt; therefore, /proc/sys/vm/nr_hugepages will be incorrect.</span>

This sounds a bit odd to me because /proc/sys/vm/nr_hugepages returns
h-&gt;nr_huge_pages or h-&gt;nr_huge_pages_node[nid], which is already
considered in dissolve_free_huge_page (via update_and_free_page).

I think that h-&gt;max_huge_pages effectively means the pool size, and
h-&gt;nr_huge_pages means total hugepage number (which can be greater than
the pool size when there&#39;s overcommiting/surplus.)

dissolve_free_huge_page intends to break a hugepage into buddy, and
the destination hugepage is supposed to be allocated from the pool of
the destination node, so the system-wide pool size is reduced.
So adding h-&gt;max_huge_pages-- makes sense to me.
<span class="acked-by">
Acked-by: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>
<span class="quote">
&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; The patch fix it by reduce the max_huge_pages when the node offline.</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; Signed-off-by: zhong jiang &lt;zhongjiang@huawei.com&gt;</span>
<span class="quote">&gt; &gt;&gt; ---</span>
<span class="quote">&gt; &gt;&gt;  mm/hugetlb.c | 1 +</span>
<span class="quote">&gt; &gt;&gt;  1 file changed, 1 insertion(+)</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="quote">&gt; &gt;&gt; index f904246..3356e3a 100644</span>
<span class="quote">&gt; &gt;&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt; &gt;&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt; &gt;&gt; @@ -1448,6 +1448,7 @@ static void dissolve_free_huge_page(struct page *page)</span>
<span class="quote">&gt; &gt;&gt;  		list_del(&amp;page-&gt;lru);</span>
<span class="quote">&gt; &gt;&gt;  		h-&gt;free_huge_pages--;</span>
<span class="quote">&gt; &gt;&gt;  		h-&gt;free_huge_pages_node[nid]--;</span>
<span class="quote">&gt; &gt;&gt; +		h-&gt;max_huge_pages--;</span>
<span class="quote">&gt; &gt;&gt;  		update_and_free_page(h, page);</span>
<span class="quote">&gt; &gt;&gt;  	}</span>
<span class="quote">&gt; &gt;&gt;  	spin_unlock(&amp;hugetlb_lock);</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt; Adding Naoya as he was the original author of this code.</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; &gt;From quick look it appears that the huge page will be migrated (allocated</span>
<span class="quote">&gt; &gt; on another node).  If my understanding is correct, then max_huge_pages</span>
<span class="quote">&gt; &gt; should not be adjusted here.</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt;   we need to take free hugetlb pages into account.  of course, the allocated huge pages is no</span>
<span class="quote">&gt;   need to reduce.  The patch just reduce the free hugetlb pages count.</span>

I
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index f904246..3356e3a 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -1448,6 +1448,7 @@</span> <span class="p_context"> static void dissolve_free_huge_page(struct page *page)</span>
 		list_del(&amp;page-&gt;lru);
 		h-&gt;free_huge_pages--;
 		h-&gt;free_huge_pages_node[nid]--;
<span class="p_add">+		h-&gt;max_huge_pages--;</span>
 		update_and_free_page(h, page);
 	}
 	spin_unlock(&amp;hugetlb_lock);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



