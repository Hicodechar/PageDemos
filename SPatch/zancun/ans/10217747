
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,V2,21/22] mm/hugetlb: Enable large allocations through gigantic page API - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,V2,21/22] mm/hugetlb: Enable large allocations through gigantic page API</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=960">reinette chatre</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 13, 2018, 3:47 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;cf48eb8469111b3dc5fa33735ff10965c4396a99.1518443616.git.reinette.chatre@intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10217747/mbox/"
   >mbox</a>
|
   <a href="/patch/10217747/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10217747/">/patch/10217747/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	C5BB060329 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 13 Feb 2018 23:51:12 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B83A428CC9
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 13 Feb 2018 23:51:12 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id ACD9328E7D; Tue, 13 Feb 2018 23:51:12 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-5.4 required=2.0 tests=BAYES_00, DATE_IN_PAST_06_12,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3111028CC9
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 13 Feb 2018 23:51:12 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S966331AbeBMXuz (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 13 Feb 2018 18:50:55 -0500
Received: from mga17.intel.com ([192.55.52.151]:53398 &quot;EHLO mga17.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S966235AbeBMXtl (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 13 Feb 2018 18:49:41 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga004.fm.intel.com ([10.253.24.48])
	by fmsmga107.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
	13 Feb 2018 15:49:41 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.46,509,1511856000&quot;; d=&quot;scan&#39;208&quot;;a=&quot;29822373&quot;
Received: from rchatre-s.jf.intel.com ([10.54.70.76])
	by fmsmga004.fm.intel.com with ESMTP; 13 Feb 2018 15:49:39 -0800
From: Reinette Chatre &lt;reinette.chatre@intel.com&gt;
To: tglx@linutronix.de, fenghua.yu@intel.com, tony.luck@intel.com
Cc: gavin.hindman@intel.com, vikas.shivappa@linux.intel.com,
	dave.hansen@intel.com, mingo@redhat.com, hpa@zytor.com,
	x86@kernel.org, linux-kernel@vger.kernel.org,
	Reinette Chatre &lt;reinette.chatre@intel.com&gt;,
	linux-mm@kvack.org, Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Mike Kravetz &lt;mike.kravetz@oracle.com&gt;, Michal Hocko &lt;mhocko@suse.com&gt;,
	Vlastimil Babka &lt;vbabka@suse.cz&gt;
Subject: [RFC PATCH V2 21/22] mm/hugetlb: Enable large allocations through
	gigantic page API
Date: Tue, 13 Feb 2018 07:47:05 -0800
Message-Id: &lt;cf48eb8469111b3dc5fa33735ff10965c4396a99.1518443616.git.reinette.chatre@intel.com&gt;
X-Mailer: git-send-email 2.13.6
In-Reply-To: &lt;cover.1518443616.git.reinette.chatre@intel.com&gt;
References: &lt;cover.1518443616.git.reinette.chatre@intel.com&gt;
In-Reply-To: &lt;cover.1518443616.git.reinette.chatre@intel.com&gt;
References: &lt;cover.1518443616.git.reinette.chatre@intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=960">reinette chatre</a> - Feb. 13, 2018, 3:47 p.m.</div>
<pre class="content">
Memory allocation within the kernel as supported by the SLAB allocators
is limited by the maximum allocatable page order. With the default
maximum page order of 11 it is not possible for the SLAB allocators to
allocate more than 4MB.

Large contiguous allocations are currently possible within the kernel
through the gigantic page support. The creation of which is currently
directed from userspace.

Expose the gigantic page support within the kernel to enable memory
allocations that cannot be fulfilled by the SLAB allocators.

Suggested-by: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;
<span class="signed-off-by">Signed-off-by: Reinette Chatre &lt;reinette.chatre@intel.com&gt;</span>
Cc: linux-mm@kvack.org
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
Cc: Michal Hocko &lt;mhocko@suse.com&gt;
Cc: Vlastimil Babka &lt;vbabka@suse.cz&gt;

---
 include/linux/hugetlb.h |  2 ++
 mm/hugetlb.c            | 10 ++++------
 2 files changed, 6 insertions(+), 6 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/linux/hugetlb.h b/include/linux/hugetlb.h</span>
<span class="p_header">index 82a25880714a..8f2125dc8a86 100644</span>
<span class="p_header">--- a/include/linux/hugetlb.h</span>
<span class="p_header">+++ b/include/linux/hugetlb.h</span>
<span class="p_chunk">@@ -349,6 +349,8 @@</span> <span class="p_context"> struct page *alloc_huge_page_nodemask(struct hstate *h, int preferred_nid,</span>
 				nodemask_t *nmask);
 int huge_add_to_page_cache(struct page *page, struct address_space *mapping,
 			pgoff_t idx);
<span class="p_add">+struct page *alloc_gigantic_page(int nid, unsigned int order, gfp_t gfp_mask);</span>
<span class="p_add">+void free_gigantic_page(struct page *page, unsigned int order);</span>
 
 /* arch callback */
 int __init __alloc_bootmem_huge_page(struct hstate *h);
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 9a334f5fb730..f3f5e4ef3144 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -1060,7 +1060,7 @@</span> <span class="p_context"> static void destroy_compound_gigantic_page(struct page *page,</span>
 	__ClearPageHead(page);
 }
 
<span class="p_del">-static void free_gigantic_page(struct page *page, unsigned int order)</span>
<span class="p_add">+void free_gigantic_page(struct page *page, unsigned int order)</span>
 {
 	free_contig_range(page_to_pfn(page), 1 &lt;&lt; order);
 }
<span class="p_chunk">@@ -1108,17 +1108,15 @@</span> <span class="p_context"> static bool zone_spans_last_pfn(const struct zone *zone,</span>
 	return zone_spans_pfn(zone, last_pfn);
 }
 
<span class="p_del">-static struct page *alloc_gigantic_page(int nid, struct hstate *h)</span>
<span class="p_add">+struct page *alloc_gigantic_page(int nid, unsigned int order, gfp_t gfp_mask)</span>
 {
<span class="p_del">-	unsigned int order = huge_page_order(h);</span>
 	unsigned long nr_pages = 1 &lt;&lt; order;
 	unsigned long ret, pfn, flags;
 	struct zonelist *zonelist;
 	struct zone *zone;
 	struct zoneref *z;
<span class="p_del">-	gfp_t gfp_mask;</span>
 
<span class="p_del">-	gfp_mask = htlb_alloc_mask(h) | __GFP_THISNODE;</span>
<span class="p_add">+	gfp_mask = gfp_mask | __GFP_THISNODE;</span>
 	zonelist = node_zonelist(nid, gfp_mask);
 	for_each_zone_zonelist_nodemask(zone, z, zonelist, gfp_zone(gfp_mask), NULL) {
 		spin_lock_irqsave(&amp;zone-&gt;lock, flags);
<span class="p_chunk">@@ -1155,7 +1153,7 @@</span> <span class="p_context"> static struct page *alloc_fresh_gigantic_page_node(struct hstate *h, int nid)</span>
 {
 	struct page *page;
 
<span class="p_del">-	page = alloc_gigantic_page(nid, h);</span>
<span class="p_add">+	page = alloc_gigantic_page(nid, huge_page_order(h), htlb_alloc_mask(h));</span>
 	if (page) {
 		prep_compound_gigantic_page(page, huge_page_order(h));
 		prep_new_huge_page(h, page, nid);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



