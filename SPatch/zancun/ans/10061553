
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,v11,for,4.15,01/24] Restartable sequences system call - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,v11,for,4.15,01/24] Restartable sequences system call</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=6835">Mathieu Desnoyers</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 16, 2017, 5:09 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1869501326.16653.1510852171734.JavaMail.zimbra@efficios.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10061553/mbox/"
   >mbox</a>
|
   <a href="/patch/10061553/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10061553/">/patch/10061553/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	669C5601AE for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 16 Nov 2017 17:09:07 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4D7DB2AB6A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 16 Nov 2017 17:09:07 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 40E962AB7E; Thu, 16 Nov 2017 17:09:07 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 84C962AB6A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 16 Nov 2017 17:09:06 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S935001AbdKPRJE (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 16 Nov 2017 12:09:04 -0500
Received: from mail.efficios.com ([167.114.142.141]:55147 &quot;EHLO
	mail.efficios.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1759920AbdKPRIn (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 16 Nov 2017 12:08:43 -0500
Received: from localhost (localhost.localdomain [127.0.0.1])
	by mail.efficios.com (Postfix) with ESMTP id BC2B83400F9;
	Thu, 16 Nov 2017 17:09:32 +0000 (UTC)
Received: from mail.efficios.com ([127.0.0.1])
	by localhost (evm-mail-1.efficios.com [127.0.0.1]) (amavisd-new,
	port 10032)
	with ESMTP id 4ItlVEIlNYrb; Thu, 16 Nov 2017 17:09:32 +0000 (UTC)
Received: from localhost (localhost.localdomain [127.0.0.1])
	by mail.efficios.com (Postfix) with ESMTP id 0CAB33403A4;
	Thu, 16 Nov 2017 17:09:32 +0000 (UTC)
X-Virus-Scanned: amavisd-new at efficios.com
Received: from mail.efficios.com ([127.0.0.1])
	by localhost (evm-mail-1.efficios.com [127.0.0.1]) (amavisd-new,
	port 10026)
	with ESMTP id AUPWFxwqfQJM; Thu, 16 Nov 2017 17:09:31 +0000 (UTC)
Received: from evm-mail-1.efficios.com (evm-mail-1.efficios.com
	[167.114.142.141])
	by mail.efficios.com (Postfix) with ESMTP id DB10F3400F9;
	Thu, 16 Nov 2017 17:09:31 +0000 (UTC)
Date: Thu, 16 Nov 2017 17:09:31 +0000 (UTC)
From: Mathieu Desnoyers &lt;mathieu.desnoyers@efficios.com&gt;
To: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: &quot;Paul E. McKenney&quot; &lt;paulmck@linux.vnet.ibm.com&gt;,
	Boqun Feng &lt;boqun.feng@gmail.com&gt;, Andy Lutomirski &lt;luto@amacapital.net&gt;,
	Dave Watson &lt;davejwatson@fb.com&gt;,
	linux-kernel &lt;linux-kernel@vger.kernel.org&gt;,
	linux-api &lt;linux-api@vger.kernel.org&gt;, Paul Turner &lt;pjt@google.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Russell King &lt;linux@arm.linux.org.uk&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;, Andrew Hunter &lt;ahh@google.com&gt;,
	Andi Kleen &lt;andi@firstfloor.org&gt;, Chris Lameter &lt;cl@linux.com&gt;,
	Ben Maurer &lt;bmaurer@fb.com&gt;, rostedt &lt;rostedt@goodmis.org&gt;,
	Josh Triplett &lt;josh@joshtriplett.org&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	Will Deacon &lt;will.deacon@arm.com&gt;,
	Michael Kerrisk &lt;mtk.manpages@gmail.com&gt;,
	Alexander Viro &lt;viro@zeniv.linux.org.uk&gt;
Message-ID: &lt;1869501326.16653.1510852171734.JavaMail.zimbra@efficios.com&gt;
In-Reply-To: &lt;20171116163218.fg4u4bbzfrbxatvz@hirez.programming.kicks-ass.net&gt;
References: &lt;20171114200414.2188-1-mathieu.desnoyers@efficios.com&gt;
	&lt;20171114200414.2188-2-mathieu.desnoyers@efficios.com&gt;
	&lt;20171116161815.dg4hi2z35rkh4u4s@hirez.programming.kicks-ass.net&gt;
	&lt;438349693.16595.1510849627973.JavaMail.zimbra@efficios.com&gt;
	&lt;20171116163218.fg4u4bbzfrbxatvz@hirez.programming.kicks-ass.net&gt;
Subject: Re: [RFC PATCH v11 for 4.15 01/24] Restartable sequences system call
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit
X-Originating-IP: [167.114.142.141]
X-Mailer: Zimbra 8.7.11_GA_1854 (ZimbraWebClient - FF52
	(Linux)/8.7.11_GA_1854)
Thread-Topic: Restartable sequences system call
Thread-Index: 4xxq8vNp7zKyBoHtorSUxYcxIQMEYw==
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=6835">Mathieu Desnoyers</a> - Nov. 16, 2017, 5:09 p.m.</div>
<pre class="content">
----- On Nov 16, 2017, at 11:32 AM, Peter Zijlstra peterz@infradead.org wrote:
<span class="quote">
&gt; On Thu, Nov 16, 2017 at 04:27:07PM +0000, Mathieu Desnoyers wrote:</span>
<span class="quote">&gt;&gt; ----- On Nov 16, 2017, at 11:18 AM, Peter Zijlstra peterz@infradead.org wrote:</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; &gt; On Tue, Nov 14, 2017 at 03:03:51PM -0500, Mathieu Desnoyers wrote:</span>
<span class="quote">&gt;&gt; &gt;&gt; @@ -977,6 +978,13 @@ struct task_struct {</span>
<span class="quote">&gt;&gt; &gt;&gt;  	unsigned long			numa_pages_migrated;</span>
<span class="quote">&gt;&gt; &gt;&gt;  #endif /* CONFIG_NUMA_BALANCING */</span>
<span class="quote">&gt;&gt; &gt;&gt;  </span>
<span class="quote">&gt;&gt; &gt;&gt; +#ifdef CONFIG_RSEQ</span>
<span class="quote">&gt;&gt; &gt;&gt; +	struct rseq __user *rseq;</span>
<span class="quote">&gt;&gt; &gt;&gt; +	u32 rseq_len;</span>
<span class="quote">&gt;&gt; &gt;&gt; +	u32 rseq_sig;</span>
<span class="quote">&gt;&gt; &gt;&gt; +	bool rseq_preempt, rseq_signal, rseq_migrate;</span>
<span class="quote">&gt;&gt; &gt; </span>
<span class="quote">&gt;&gt; &gt; No bool please. Use something that has a defined size in ILP32/LP64.</span>
<span class="quote">&gt;&gt; &gt; _Bool makes it absolutely impossible to speculate on structure layout</span>
<span class="quote">&gt;&gt; &gt; across architectures.</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; I should as well make all those a bitmask within a &quot;u32 rseq_event_mask&quot; then,</span>
<span class="quote">&gt;&gt; sounds fair ?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Sure, whatever works and isn&#39;t _Bool ;-)</span>

So something along those lines should do the trick (including
the mask request from Ben Maurer):
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/linux/sched.h b/include/linux/sched.h</span>
<span class="p_header">index b995a3b..44aef30 100644</span>
<span class="p_header">--- a/include/linux/sched.h</span>
<span class="p_header">+++ b/include/linux/sched.h</span>
<span class="p_chunk">@@ -982,7 +982,7 @@</span> <span class="p_context"> struct task_struct {</span>
        struct rseq __user *rseq;
        u32 rseq_len;
        u32 rseq_sig;
<span class="p_del">-       bool rseq_preempt, rseq_signal, rseq_migrate;</span>
<span class="p_add">+       u32 rseq_event_mask;</span>
 #endif
 
        struct tlbflush_unmap_batch     tlb_ubc;
<span class="p_chunk">@@ -1676,6 +1676,16 @@</span> <span class="p_context"> static inline void set_task_cpu(struct task_struct *p, un</span>
 #endif
 
 #ifdef CONFIG_RSEQ
<span class="p_add">+/*</span>
<span class="p_add">+ * Map the event mask on the user-space ABI enum rseq_cs_flags</span>
<span class="p_add">+ * for direct mask checks.</span>
<span class="p_add">+ */</span>
<span class="p_add">+enum rseq_event_mask {</span>
<span class="p_add">+       RSEQ_EVENT_PREEMPT      = RSEQ_CS_FLAG_NO_RESTART_ON_PREEMPT,</span>
<span class="p_add">+       RSEQ_EVENT_SIGNAL       = RSEQ_CS_FLAG_NO_RESTART_ON_SIGNAL,</span>
<span class="p_add">+       RSEQ_EVENT_MIGRATE      = RSEQ_CS_FLAG_NO_RESTART_ON_MIGRATE,</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 static inline void rseq_set_notify_resume(struct task_struct *t)
 {
        if (t-&gt;rseq)
<span class="p_chunk">@@ -1718,16 +1728,16 @@</span> <span class="p_context"> static inline void rseq_sched_out(struct task_struct *t)</span>
 }
 static inline void rseq_signal_deliver(struct pt_regs *regs)
 {
<span class="p_del">-       current-&gt;rseq_signal = true;</span>
<span class="p_add">+       current-&gt;rseq_event_mask |= RSEQ_EVENT_SIGNAL;</span>
        rseq_handle_notify_resume(regs);
 }
 static inline void rseq_preempt(struct task_struct *t)
 {
<span class="p_del">-       t-&gt;rseq_preempt = true;</span>
<span class="p_add">+       t-&gt;rseq_event_mask |= RSEQ_EVENT_PREEMPT;</span>
 }
 static inline void rseq_migrate(struct task_struct *t)
 {
<span class="p_del">-       t-&gt;rseq_migrate = true;</span>
<span class="p_add">+       t-&gt;rseq_event_mask |= RSEQ_EVENT_MIGRATE;</span>
 }
 #else
 static inline void rseq_set_notify_resume(struct task_struct *t)
<span class="p_header">diff --git a/kernel/rseq.c b/kernel/rseq.c</span>
<span class="p_header">index 6f0d48c..d773003 100644</span>
<span class="p_header">--- a/kernel/rseq.c</span>
<span class="p_header">+++ b/kernel/rseq.c</span>
<span class="p_chunk">@@ -159,7 +159,7 @@</span> <span class="p_context"> static bool rseq_get_rseq_cs(struct task_struct *t,</span>
 static int rseq_need_restart(struct task_struct *t, uint32_t cs_flags)
 {
        bool need_restart = false;
<span class="p_del">-       uint32_t flags;</span>
<span class="p_add">+       uint32_t flags, event_mask;</span>
 
        /* Get thread flags. */
        if (__get_user(flags, &amp;t-&gt;rseq-&gt;flags))
<span class="p_chunk">@@ -174,26 +174,17 @@</span> <span class="p_context"> static int rseq_need_restart(struct task_struct *t, uint32</span>
         * a preempted signal handler could fail to restart the prior
         * execution context on sigreturn.
         */
<span class="p_del">-       if (flags &amp; RSEQ_CS_FLAG_NO_RESTART_ON_SIGNAL) {</span>
<span class="p_del">-               if (!(flags &amp; RSEQ_CS_FLAG_NO_RESTART_ON_MIGRATE))</span>
<span class="p_del">-                       return -EINVAL;</span>
<span class="p_del">-               if (!(flags &amp; RSEQ_CS_FLAG_NO_RESTART_ON_PREEMPT))</span>
<span class="p_add">+       if (unlikely(flags &amp; RSEQ_CS_FLAG_NO_RESTART_ON_SIGNAL)) {</span>
<span class="p_add">+               if ((flags &amp; (RSEQ_CS_FLAG_NO_RESTART_ON_MIGRATE</span>
<span class="p_add">+                               | RSEQ_CS_FLAG_NO_RESTART_ON_PREEMPT))</span>
<span class="p_add">+                       != (RSEQ_CS_FLAG_NO_RESTART_ON_MIGRATE</span>
<span class="p_add">+                                | RSEQ_CS_FLAG_NO_RESTART_ON_PREEMPT))</span>
                        return -EINVAL;
        }
<span class="p_del">-       if (t-&gt;rseq_migrate</span>
<span class="p_del">-                       &amp;&amp; !(flags &amp; RSEQ_CS_FLAG_NO_RESTART_ON_MIGRATE))</span>
<span class="p_del">-               need_restart = true;</span>
<span class="p_del">-       else if (t-&gt;rseq_preempt</span>
<span class="p_del">-                       &amp;&amp; !(flags &amp; RSEQ_CS_FLAG_NO_RESTART_ON_PREEMPT))</span>
<span class="p_del">-               need_restart = true;</span>
<span class="p_del">-       else if (t-&gt;rseq_signal</span>
<span class="p_del">-                       &amp;&amp; !(flags &amp; RSEQ_CS_FLAG_NO_RESTART_ON_SIGNAL))</span>
<span class="p_del">-               need_restart = true;</span>
<span class="p_del">-</span>
<span class="p_del">-       t-&gt;rseq_preempt = false;</span>
<span class="p_del">-       t-&gt;rseq_signal = false;</span>
<span class="p_del">-       t-&gt;rseq_migrate = false;</span>
<span class="p_del">-       if (need_restart)</span>
<span class="p_add">+       event_mask = t-&gt;rseq_event_mask;</span>
<span class="p_add">+       t-&gt;rseq_event_mask = 0;</span>
<span class="p_add">+       event_mask &amp;= ~flags;</span>
<span class="p_add">+       if (event_mask)</span>
                return 1;
        return 0;
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



