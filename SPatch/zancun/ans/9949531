
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[PATCHv3,10/11] mm: Do not loose dirty and access bits in pmdp_invalidate() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [PATCHv3,10/11] mm: Do not loose dirty and access bits in pmdp_invalidate()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=40781">Kirill A. Shutemov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 12, 2017, 3:39 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170912153941.47012-11-kirill.shutemov@linux.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9949531/mbox/"
   >mbox</a>
|
   <a href="/patch/9949531/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9949531/">/patch/9949531/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	CF61D6038F for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 12 Sep 2017 15:40:53 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C49DB29029
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 12 Sep 2017 15:40:53 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id B932A29034; Tue, 12 Sep 2017 15:40:53 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3270E29029
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 12 Sep 2017 15:40:53 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751866AbdILPku (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 12 Sep 2017 11:40:50 -0400
Received: from mga09.intel.com ([134.134.136.24]:4415 &quot;EHLO mga09.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751824AbdILPk2 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 12 Sep 2017 11:40:28 -0400
Received: from orsmga001.jf.intel.com ([10.7.209.18])
	by orsmga102.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
	12 Sep 2017 08:40:28 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.42,383,1500966000&quot;; d=&quot;scan&#39;208&quot;;a=&quot;1171502673&quot;
Received: from black.fi.intel.com ([10.237.72.28])
	by orsmga001.jf.intel.com with ESMTP; 12 Sep 2017 08:40:23 -0700
Received: by black.fi.intel.com (Postfix, from userid 1000)
	id A531B3D8; Tue, 12 Sep 2017 18:39:47 +0300 (EEST)
From: &quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Vlastimil Babka &lt;vbabka@suse.cz&gt;, Vineet Gupta &lt;vgupta@synopsys.com&gt;,
	Russell King &lt;linux@armlinux.org.uk&gt;, Will Deacon &lt;will.deacon@arm.com&gt;,
	Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	Ralf Baechle &lt;ralf@linux-mips.org&gt;,
	&quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;,
	&quot;Aneesh Kumar K . V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;,
	Martin Schwidefsky &lt;schwidefsky@de.ibm.com&gt;,
	Heiko Carstens &lt;heiko.carstens@de.ibm.com&gt;,
	Andrea Arcangeli &lt;aarcange@redhat.com&gt;
Cc: linux-arch@vger.kernel.org, linux-mm@kvack.org,
	linux-kernel@vger.kernel.org,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Hugh Dickins &lt;hughd@google.com&gt;
Subject: [PATCHv3 10/11] mm: Do not loose dirty and access bits in
	pmdp_invalidate()
Date: Tue, 12 Sep 2017 18:39:40 +0300
Message-Id: &lt;20170912153941.47012-11-kirill.shutemov@linux.intel.com&gt;
X-Mailer: git-send-email 2.14.1
In-Reply-To: &lt;20170912153941.47012-1-kirill.shutemov@linux.intel.com&gt;
References: &lt;20170912153941.47012-1-kirill.shutemov@linux.intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=40781">Kirill A. Shutemov</a> - Sept. 12, 2017, 3:39 p.m.</div>
<pre class="content">
Vlastimil noted that pmdp_invalidate() is not atomic and we can loose
dirty and access bits if CPU sets them after pmdp dereference, but
before set_pmd_at().

The patch change pmdp_invalidate() to make the entry non-present atomically and
return previous value of the entry. This value can be used to check if
CPU set dirty/accessed bits under us.

The race window is very small and I haven&#39;t seen any reports that can be
attributed to the bug. For this reason, I don&#39;t think backporting to
stable trees needed.
<span class="signed-off-by">
Signed-off-by: Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt;</span>
Reported-by: Vlastimil Babka &lt;vbabka@suse.cz&gt;
Cc: Hugh Dickins &lt;hughd@google.com&gt;
---
 include/asm-generic/pgtable.h | 2 +-
 mm/pgtable-generic.c          | 6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/asm-generic/pgtable.h b/include/asm-generic/pgtable.h</span>
<span class="p_header">index bf0889eb774d..9df1da175fb0 100644</span>
<span class="p_header">--- a/include/asm-generic/pgtable.h</span>
<span class="p_header">+++ b/include/asm-generic/pgtable.h</span>
<span class="p_chunk">@@ -324,7 +324,7 @@</span> <span class="p_context"> static inline pmd_t generic_pmdp_establish(struct vm_area_struct *vma,</span>
 #endif
 
 #ifndef __HAVE_ARCH_PMDP_INVALIDATE
<span class="p_del">-extern void pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
<span class="p_add">+extern pmd_t pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
 			    pmd_t *pmdp);
 #endif
 
<span class="p_header">diff --git a/mm/pgtable-generic.c b/mm/pgtable-generic.c</span>
<span class="p_header">index 1175f6a24fdb..3db8f2f76666 100644</span>
<span class="p_header">--- a/mm/pgtable-generic.c</span>
<span class="p_header">+++ b/mm/pgtable-generic.c</span>
<span class="p_chunk">@@ -180,12 +180,12 @@</span> <span class="p_context"> pgtable_t pgtable_trans_huge_withdraw(struct mm_struct *mm, pmd_t *pmdp)</span>
 #endif
 
 #ifndef __HAVE_ARCH_PMDP_INVALIDATE
<span class="p_del">-void pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
<span class="p_add">+pmd_t pmdp_invalidate(struct vm_area_struct *vma, unsigned long address,</span>
 		     pmd_t *pmdp)
 {
<span class="p_del">-	pmd_t entry = *pmdp;</span>
<span class="p_del">-	set_pmd_at(vma-&gt;vm_mm, address, pmdp, pmd_mknotpresent(entry));</span>
<span class="p_add">+	pmd_t old = pmdp_establish(vma, address, pmdp, pmd_mknotpresent(*pmdp));</span>
 	flush_pmd_tlb_range(vma, address, address + HPAGE_PMD_SIZE);
<span class="p_add">+	return old;</span>
 }
 #endif
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



