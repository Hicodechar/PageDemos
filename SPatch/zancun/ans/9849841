
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>x86/platform/uv/BAU: disable BAU on single hub configurations - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    x86/platform/uv/BAU: disable BAU on single hub configurations</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=172707">Andrew Banman</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 18, 2017, 9:51 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1500414693-84043-1-git-send-email-abanman@hpe.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9849841/mbox/"
   >mbox</a>
|
   <a href="/patch/9849841/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9849841/">/patch/9849841/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	6A8EC602C8 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 18 Jul 2017 22:01:08 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4EFAD2860E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 18 Jul 2017 22:01:08 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 433282860F; Tue, 18 Jul 2017 22:01:08 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C487128614
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 18 Jul 2017 22:01:07 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753139AbdGRWBD (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 18 Jul 2017 18:01:03 -0400
Received: from relay3.sgi.com ([192.48.152.1]:36625 &quot;EHLO relay.sgi.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1752756AbdGRWBC (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 18 Jul 2017 18:01:02 -0400
X-Greylist: delayed 530 seconds by postgrey-1.27 at vger.kernel.org;
	Tue, 18 Jul 2017 18:01:02 EDT
Received: from stormcage.americas.sgi.com (stormcage.americas.sgi.com
	[128.162.236.70])
	by relay3.corp.sgi.com (Postfix) with ESMTP id D667FAC003;
	Tue, 18 Jul 2017 14:52:08 -0700 (PDT)
Received: by stormcage.americas.sgi.com (Postfix, from userid 200151)
	id A389A20078949; Tue, 18 Jul 2017 16:52:08 -0500 (CDT)
From: Andrew Banman &lt;abanman@hpe.com&gt;
To: mingo@redhat.com
Cc: tglx@linutronix.de, x86@kernel.org, linux-kernel@vger.kernel.org,
	rja@hpe.com, mike.travis@hpe.com, Andrew Banman &lt;abanman@hpe.com&gt;
Subject: [PATCH] x86/platform/uv/BAU: disable BAU on single hub
	configurations
Date: Tue, 18 Jul 2017 16:51:33 -0500
Message-Id: &lt;1500414693-84043-1-git-send-email-abanman@hpe.com&gt;
X-Mailer: git-send-email 1.8.2.1
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=172707">Andrew Banman</a> - July 18, 2017, 9:51 p.m.</div>
<pre class="content">
The BAU confers no benefit to a UV system running with only one hub/socket.
Permanently disable the BAU driver if there are less than two hubs online
to avoid BAU overhead. We have observed failed boots on single-socket UV4
systems caused by BAU that are avoided with this patch.
<span class="signed-off-by">
Signed-off-by: Andrew Banman &lt;abanman@hpe.com&gt;</span>
<span class="acked-by">Acked-by: Russ Anderson &lt;rja@hpe.com&gt;</span>
<span class="acked-by">Acked-by: Mike Travis &lt;mike.travis@hpe.com&gt;</span>
---
 arch/x86/platform/uv/tlb_uv.c | 6 ++++++
 1 file changed, 6 insertions(+)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a> - July 20, 2017, 11:47 a.m.</div>
<pre class="content">
* Andrew Banman &lt;abanman@hpe.com&gt; wrote:
<span class="quote">
&gt; The BAU confers no benefit to a UV system running with only one hub/socket.</span>
<span class="quote">&gt; Permanently disable the BAU driver if there are less than two hubs online</span>
<span class="quote">&gt; to avoid BAU overhead. We have observed failed boots on single-socket UV4</span>
<span class="quote">&gt; systems caused by BAU that are avoided with this patch.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Andrew Banman &lt;abanman@hpe.com&gt;</span>
<span class="quote">&gt; Acked-by: Russ Anderson &lt;rja@hpe.com&gt;</span>
<span class="quote">&gt; Acked-by: Mike Travis &lt;mike.travis@hpe.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/x86/platform/uv/tlb_uv.c | 6 ++++++</span>
<span class="quote">&gt;  1 file changed, 6 insertions(+)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="quote">&gt; index 2511a28..88216cc 100644</span>
<span class="quote">&gt; --- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="quote">&gt; +++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="quote">&gt; @@ -2251,6 +2251,12 @@ static int __init uv_bau_init(void)</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	nuvhubs = uv_num_possible_blades();</span>
<span class="quote">&gt; +	if (nuvhubs &lt; 2) {</span>
<span class="quote">&gt; +		pr_crit(&quot;UV: BAU disabled - insufficient hub count\n&quot;);</span>
<span class="quote">&gt; +		set_bau_off();</span>
<span class="quote">&gt; +		nobau_perm = 1;</span>
<span class="quote">&gt; +		return 0;</span>
<span class="quote">&gt; +	}</span>

Yeah, could you structure the error paths in this function in a bit more organized 
fashion? It has two similar error handling blocks:


                pr_crit(&quot;UV: BAU disabled - insufficient hub count\n&quot;);
                set_bau_off();
                nobau_perm = 1;
                return 0;

...

                set_bau_off();
                nobau_perm = 1;
                return 0;

which could be consolidated via the usual goto exception construct:

	if (nuvhubs &lt; 2) {
		pr_crit(&quot;UV: BAU disabled - insufficient hub count\n&quot;);
		goto err_disable_bau;
	}
	...

        if (init_per_cpu(nuvhubs, uv_base_pnode))
		pr_crit(&quot;UV: BAU disabled - per CPU init failed\n&quot;);
		goto err_disable_bau;
	}

	...
	return 0;

err_disable_bau:

	set_bau_off();
	nobau_perm = 1;
	return 0;

Note that I added an error message to the second case as well.

Plus, in the error case you might want to use a &#39;return -EINVAL;&#39; instead of 
return 0, or so?

Plus plus, there&#39;s probably a (mild) memory leak in the error paths, can the 
cpumasks be free_cpumask_var() freed - or are they still required even if BAU is 
disabled?

Thanks,

	Ingo
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=172707">Andrew Banman</a> - July 20, 2017, 6:50 p.m.</div>
<pre class="content">
On Thu, Jul 20, 2017 at 01:47:50PM +0200, Ingo Molnar wrote:
<span class="quote">&gt; </span>
<span class="quote">&gt; * Andrew Banman &lt;abanman@hpe.com&gt; wrote:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; The BAU confers no benefit to a UV system running with only one hub/socket.</span>
<span class="quote">&gt; &gt; Permanently disable the BAU driver if there are less than two hubs online</span>
<span class="quote">&gt; &gt; to avoid BAU overhead. We have observed failed boots on single-socket UV4</span>
<span class="quote">&gt; &gt; systems caused by BAU that are avoided with this patch.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Signed-off-by: Andrew Banman &lt;abanman@hpe.com&gt;</span>
<span class="quote">&gt; &gt; Acked-by: Russ Anderson &lt;rja@hpe.com&gt;</span>
<span class="quote">&gt; &gt; Acked-by: Mike Travis &lt;mike.travis@hpe.com&gt;</span>
<span class="quote">&gt; &gt; ---</span>
<span class="quote">&gt; &gt;  arch/x86/platform/uv/tlb_uv.c | 6 ++++++</span>
<span class="quote">&gt; &gt;  1 file changed, 6 insertions(+)</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="quote">&gt; &gt; index 2511a28..88216cc 100644</span>
<span class="quote">&gt; &gt; --- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="quote">&gt; &gt; +++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="quote">&gt; &gt; @@ -2251,6 +2251,12 @@ static int __init uv_bau_init(void)</span>
<span class="quote">&gt; &gt;  	}</span>
<span class="quote">&gt; &gt;  </span>
<span class="quote">&gt; &gt;  	nuvhubs = uv_num_possible_blades();</span>
<span class="quote">&gt; &gt; +	if (nuvhubs &lt; 2) {</span>
<span class="quote">&gt; &gt; +		pr_crit(&quot;UV: BAU disabled - insufficient hub count\n&quot;);</span>
<span class="quote">&gt; &gt; +		set_bau_off();</span>
<span class="quote">&gt; &gt; +		nobau_perm = 1;</span>
<span class="quote">&gt; &gt; +		return 0;</span>
<span class="quote">&gt; &gt; +	}</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Yeah, could you structure the error paths in this function in a bit more organized </span>
<span class="quote">&gt; fashion? It has two similar error handling blocks:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; </span>
<span class="quote">&gt;                 pr_crit(&quot;UV: BAU disabled - insufficient hub count\n&quot;);</span>
<span class="quote">&gt;                 set_bau_off();</span>
<span class="quote">&gt;                 nobau_perm = 1;</span>
<span class="quote">&gt;                 return 0;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; ...</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;                 set_bau_off();</span>
<span class="quote">&gt;                 nobau_perm = 1;</span>
<span class="quote">&gt;                 return 0;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; which could be consolidated via the usual goto exception construct:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; 	if (nuvhubs &lt; 2) {</span>
<span class="quote">&gt; 		pr_crit(&quot;UV: BAU disabled - insufficient hub count\n&quot;);</span>
<span class="quote">&gt; 		goto err_disable_bau;</span>
<span class="quote">&gt; 	}</span>
<span class="quote">&gt; 	...</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;         if (init_per_cpu(nuvhubs, uv_base_pnode))</span>
<span class="quote">&gt; 		pr_crit(&quot;UV: BAU disabled - per CPU init failed\n&quot;);</span>
<span class="quote">&gt; 		goto err_disable_bau;</span>
<span class="quote">&gt; 	}</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; 	...</span>
<span class="quote">&gt; 	return 0;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; err_disable_bau:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; 	set_bau_off();</span>
<span class="quote">&gt; 	nobau_perm = 1;</span>
<span class="quote">&gt; 	return 0;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Note that I added an error message to the second case as well.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Plus, in the error case you might want to use a &#39;return -EINVAL;&#39; instead of </span>
<span class="quote">&gt; return 0, or so?</span>

I agree with your suggestions, and I&#39;m happy to make the changes.
<span class="quote">
&gt; </span>
<span class="quote">&gt; Plus plus, there&#39;s probably a (mild) memory leak in the error paths, can the </span>
<span class="quote">&gt; cpumasks be free_cpumask_var() freed - or are they still required even if BAU is </span>
<span class="quote">&gt; disabled?</span>

In the case of nobau_perm=1 they can be freed. I will include that in the next
version.
<span class="quote">
&gt; </span>
<span class="quote">&gt; Thanks,</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; 	Ingo</span>

Thank you! I&#39;ll have the next version out shortly.

Andrew
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">index 2511a28..88216cc 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_chunk">@@ -2251,6 +2251,12 @@</span> <span class="p_context"> static int __init uv_bau_init(void)</span>
 	}
 
 	nuvhubs = uv_num_possible_blades();
<span class="p_add">+	if (nuvhubs &lt; 2) {</span>
<span class="p_add">+		pr_crit(&quot;UV: BAU disabled - insufficient hub count\n&quot;);</span>
<span class="p_add">+		set_bau_off();</span>
<span class="p_add">+		nobau_perm = 1;</span>
<span class="p_add">+		return 0;</span>
<span class="p_add">+	}</span>
 
 	uv_base_pnode = 0x7fffffff;
 	for (uvhub = 0; uvhub &lt; nuvhubs; uvhub++) {

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



