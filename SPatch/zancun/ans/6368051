
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>m32r: make flush_cpumask non-volatile. - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    m32r: make flush_cpumask non-volatile.</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=5">Rusty Russell</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>May 8, 2015, 6:09 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;87y4kzkkjz.fsf@rustcorp.com.au&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6368051/mbox/"
   >mbox</a>
|
   <a href="/patch/6368051/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6368051/">/patch/6368051/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 15DDFBEEE5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat,  9 May 2015 00:12:56 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 35A11202EC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat,  9 May 2015 00:12:55 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 4CF2320304
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat,  9 May 2015 00:12:54 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753318AbbEIAMm (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 8 May 2015 20:12:42 -0400
Received: from ozlabs.org ([103.22.144.67]:37815 &quot;EHLO ozlabs.org&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751531AbbEIAMg (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 8 May 2015 20:12:36 -0400
Received: by ozlabs.org (Postfix, from userid 1011)
	id 99CEB14018C; Sat,  9 May 2015 10:12:34 +1000 (AEST)
From: Rusty Russell &lt;rusty@rustcorp.com.au&gt;
To: &quot;Linus Torvalds&quot; &lt;torvalds@linux-foundation.org&gt;
Cc: &quot;LKML&quot; &lt;linux-kernel@vger.kernel.org&gt;
Subject: [PATCH] m32r: make flush_cpumask non-volatile.
User-Agent: Notmuch/0.17 (http://notmuchmail.org) Emacs/24.4.1
	(x86_64-pc-linux-gnu)
Date: Sat, 09 May 2015 03:39:52 +0930
Message-ID: &lt;87y4kzkkjz.fsf@rustcorp.com.au&gt;
MIME-Version: 1.0
Content-Type: text/plain
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-5.4 required=5.0 tests=BAYES_00, DATE_IN_PAST_06_12,
	RCVD_IN_DNSWL_HI, T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=5">Rusty Russell</a> - May 8, 2015, 6:09 p.m.</div>
<pre class="content">
We cast away the volatile, but really, why make it volatile at all?
We already do a mb() inside the cpumask_empty() loop.
<span class="signed-off-by">
Signed-off-by: Rusty Russell &lt;rusty@rustcorp.com.au&gt;</span>

--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/m32r/kernel/smp.c b/arch/m32r/kernel/smp.c</span>
<span class="p_header">index ce7aea34fdf4..c18ddc74ef9a 100644</span>
<span class="p_header">--- a/arch/m32r/kernel/smp.c</span>
<span class="p_header">+++ b/arch/m32r/kernel/smp.c</span>
<span class="p_chunk">@@ -45,7 +45,7 @@</span> <span class="p_context"> static volatile unsigned long flushcache_cpumask = 0;</span>
 /*
  * For flush_tlb_others()
  */
<span class="p_del">-static volatile cpumask_t flush_cpumask;</span>
<span class="p_add">+static cpumask_t flush_cpumask;</span>
 static struct mm_struct *flush_mm;
 static struct vm_area_struct *flush_vma;
 static volatile unsigned long flush_va;
<span class="p_chunk">@@ -415,7 +415,7 @@</span> <span class="p_context"> static void flush_tlb_others(cpumask_t cpumask, struct mm_struct *mm,</span>
 	 */
 	send_IPI_mask(&amp;cpumask, INVALIDATE_TLB_IPI, 0);
 
<span class="p_del">-	while (!cpumask_empty((cpumask_t*)&amp;flush_cpumask)) {</span>
<span class="p_add">+	while (!cpumask_empty(&amp;flush_cpumask)) {</span>
 		/* nothing. lockup detection does not belong here */
 		mb();
 	}
<span class="p_chunk">@@ -468,7 +468,7 @@</span> <span class="p_context"> void smp_invalidate_interrupt(void)</span>
 			__flush_tlb_page(va);
 		}
 	}
<span class="p_del">-	cpumask_clear_cpu(cpu_id, (cpumask_t*)&amp;flush_cpumask);</span>
<span class="p_add">+	cpumask_clear_cpu(cpu_id, &amp;flush_cpumask);</span>
 }
 
 /*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*/

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



