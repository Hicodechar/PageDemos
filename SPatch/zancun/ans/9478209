
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,05/14] sparc64: Add PAGE_SHR_CTX flag - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,05/14] sparc64: Add PAGE_SHR_CTX flag</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 16, 2016, 6:35 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1481913337-9331-6-git-send-email-mike.kravetz@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9478209/mbox/"
   >mbox</a>
|
   <a href="/patch/9478209/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9478209/">/patch/9478209/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	DAF3F607EE for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Dec 2016 18:36:28 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id CF66128782
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Dec 2016 18:36:28 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id C178D28787; Fri, 16 Dec 2016 18:36:28 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	UNPARSEABLE_RELAY autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4D41F286EE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Dec 2016 18:36:28 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1758769AbcLPSgP (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 16 Dec 2016 13:36:15 -0500
Received: from aserp1040.oracle.com ([141.146.126.69]:38977 &quot;EHLO
	aserp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1758298AbcLPSgG (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 16 Dec 2016 13:36:06 -0500
Received: from aserv0021.oracle.com (aserv0021.oracle.com [141.146.126.233])
	by aserp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2)
	with ESMTP id uBGIZvU5024940
	(version=TLSv1 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Fri, 16 Dec 2016 18:35:57 GMT
Received: from userv0121.oracle.com (userv0121.oracle.com [156.151.31.72])
	by aserv0021.oracle.com (8.13.8/8.14.4) with ESMTP id uBGIZvmh021651
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Fri, 16 Dec 2016 18:35:57 GMT
Received: from abhmp0002.oracle.com (abhmp0002.oracle.com [141.146.116.8])
	by userv0121.oracle.com (8.14.4/8.13.8) with ESMTP id uBGIZuRW006059; 
	Fri, 16 Dec 2016 18:35:56 GMT
Received: from monkey.oracle.com (/50.188.161.229)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Fri, 16 Dec 2016 10:35:55 -0800
From: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
To: sparclinux@vger.kernel.org, linux-mm@kvack.org,
	linux-kernel@vger.kernel.org
Cc: &quot;David S . Miller&quot; &lt;davem@davemloft.net&gt;,
	Bob Picco &lt;bob.picco@oracle.com&gt;, Nitin Gupta &lt;nitin.m.gupta@oracle.com&gt;,
	Vijay Kumar &lt;vijay.ac.kumar@oracle.com&gt;,
	Julian Calaby &lt;julian.calaby@gmail.com&gt;,
	Adam Buchbinder &lt;adam.buchbinder@gmail.com&gt;,
	&quot;Kirill A . Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Michal Hocko &lt;mhocko@suse.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
Subject: [RFC PATCH 05/14] sparc64: Add PAGE_SHR_CTX flag
Date: Fri, 16 Dec 2016 10:35:28 -0800
Message-Id: &lt;1481913337-9331-6-git-send-email-mike.kravetz@oracle.com&gt;
X-Mailer: git-send-email 2.7.4
In-Reply-To: &lt;1481913337-9331-1-git-send-email-mike.kravetz@oracle.com&gt;
References: &lt;1481913337-9331-1-git-send-email-mike.kravetz@oracle.com&gt;
X-Source-IP: aserv0021.oracle.com [141.146.126.233]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - Dec. 16, 2016, 6:35 p.m.</div>
<pre class="content">
This new page flag is used to identify pages which are associated with
a shared context ID.  It is needed at page fault time when we only
have access to the PTE and need to determine whether the associated
TSB entry should be associated with the regular ot shared context TSB.

A new helper routine is_sharedctx_pte() is also added.
<span class="signed-off-by">
Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
---
 arch/sparc/include/asm/pgtable_64.h | 13 +++++++++++++
 1 file changed, 13 insertions(+)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=129">David Miller</a> - Dec. 18, 2016, 3:12 a.m.</div>
<pre class="content">
<span class="from">From: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
Date: Fri, 16 Dec 2016 10:35:28 -0800
<span class="quote">
&gt; @@ -166,6 +166,7 @@ bool kern_addr_valid(unsigned long addr);</span>
<span class="quote">&gt;  #define _PAGE_EXEC_4V	  _AC(0x0000000000000080,UL) /* Executable Page      */</span>
<span class="quote">&gt;  #define _PAGE_W_4V	  _AC(0x0000000000000040,UL) /* Writable             */</span>
<span class="quote">&gt;  #define _PAGE_SOFT_4V	  _AC(0x0000000000000030,UL) /* Software bits        */</span>
<span class="quote">&gt; +#define _PAGE_SHR_CTX_4V  _AC(0x0000000000000020,UL) /* Shared Context       */</span>
<span class="quote">&gt;  #define _PAGE_PRESENT_4V  _AC(0x0000000000000010,UL) /* Present              */</span>
<span class="quote">&gt;  #define _PAGE_RESV_4V	  _AC(0x0000000000000008,UL) /* Reserved             */</span>
<span class="quote">&gt;  #define _PAGE_SZ16GB_4V	  _AC(0x0000000000000007,UL) /* 16GB Page            */</span>

You really don&#39;t need this.

The VMA is available, and you can obtain the information you need
about whether this is a shared mapping or not from the. It just isn&#39;t
being passed down into things like set_huge_pte_at().  Simply make it
do so.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - Dec. 19, 2016, 12:42 a.m.</div>
<pre class="content">
On 12/17/2016 07:12 PM, David Miller wrote:
<span class="quote">&gt; From: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="quote">&gt; Date: Fri, 16 Dec 2016 10:35:28 -0800</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;&gt; @@ -166,6 +166,7 @@ bool kern_addr_valid(unsigned long addr);</span>
<span class="quote">&gt;&gt;  #define _PAGE_EXEC_4V	  _AC(0x0000000000000080,UL) /* Executable Page      */</span>
<span class="quote">&gt;&gt;  #define _PAGE_W_4V	  _AC(0x0000000000000040,UL) /* Writable             */</span>
<span class="quote">&gt;&gt;  #define _PAGE_SOFT_4V	  _AC(0x0000000000000030,UL) /* Software bits        */</span>
<span class="quote">&gt;&gt; +#define _PAGE_SHR_CTX_4V  _AC(0x0000000000000020,UL) /* Shared Context       */</span>
<span class="quote">&gt;&gt;  #define _PAGE_PRESENT_4V  _AC(0x0000000000000010,UL) /* Present              */</span>
<span class="quote">&gt;&gt;  #define _PAGE_RESV_4V	  _AC(0x0000000000000008,UL) /* Reserved             */</span>
<span class="quote">&gt;&gt;  #define _PAGE_SZ16GB_4V	  _AC(0x0000000000000007,UL) /* 16GB Page            */</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; You really don&#39;t need this.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The VMA is available, and you can obtain the information you need</span>
<span class="quote">&gt; about whether this is a shared mapping or not from the. It just isn&#39;t</span>
<span class="quote">&gt; being passed down into things like set_huge_pte_at().  Simply make it</span>
<span class="quote">&gt; do so.</span>
<span class="quote">&gt; </span>

I was more concerned about the page table walk code at tlb/tsb miss time.
Specifically, the code after tsb_miss_page_table_walk_sun4v_fastpath in
tsb.S.  AFAICT, the tsb entries should have been created when the pte entries
were created.  Yet, this code is still walking the page table and creating
tsb entries.  We do not have a pointer to the vma here, and I thought it
would be somewhat difficult to get access.  This is the reason why I went
down the path of a page flag.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=129">David Miller</a> - Dec. 20, 2016, 6:33 p.m.</div>
<pre class="content">
<span class="from">From: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
Date: Sun, 18 Dec 2016 16:42:52 -0800
<span class="quote">
&gt; On 12/17/2016 07:12 PM, David Miller wrote:</span>
<span class="quote">&gt;&gt; From: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="quote">&gt;&gt; Date: Fri, 16 Dec 2016 10:35:28 -0800</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt;&gt; @@ -166,6 +166,7 @@ bool kern_addr_valid(unsigned long addr);</span>
<span class="quote">&gt;&gt;&gt;  #define _PAGE_EXEC_4V	  _AC(0x0000000000000080,UL) /* Executable Page      */</span>
<span class="quote">&gt;&gt;&gt;  #define _PAGE_W_4V	  _AC(0x0000000000000040,UL) /* Writable             */</span>
<span class="quote">&gt;&gt;&gt;  #define _PAGE_SOFT_4V	  _AC(0x0000000000000030,UL) /* Software bits        */</span>
<span class="quote">&gt;&gt;&gt; +#define _PAGE_SHR_CTX_4V  _AC(0x0000000000000020,UL) /* Shared Context       */</span>
<span class="quote">&gt;&gt;&gt;  #define _PAGE_PRESENT_4V  _AC(0x0000000000000010,UL) /* Present              */</span>
<span class="quote">&gt;&gt;&gt;  #define _PAGE_RESV_4V	  _AC(0x0000000000000008,UL) /* Reserved             */</span>
<span class="quote">&gt;&gt;&gt;  #define _PAGE_SZ16GB_4V	  _AC(0x0000000000000007,UL) /* 16GB Page            */</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; You really don&#39;t need this.</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; The VMA is available, and you can obtain the information you need</span>
<span class="quote">&gt;&gt; about whether this is a shared mapping or not from the. It just isn&#39;t</span>
<span class="quote">&gt;&gt; being passed down into things like set_huge_pte_at().  Simply make it</span>
<span class="quote">&gt;&gt; do so.</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I was more concerned about the page table walk code at tlb/tsb miss time.</span>
<span class="quote">&gt; Specifically, the code after tsb_miss_page_table_walk_sun4v_fastpath in</span>
<span class="quote">&gt; tsb.S.  AFAICT, the tsb entries should have been created when the pte entries</span>
<span class="quote">&gt; were created.  Yet, this code is still walking the page table and creating</span>
<span class="quote">&gt; tsb entries.  We do not have a pointer to the vma here, and I thought it</span>
<span class="quote">&gt; would be somewhat difficult to get access.  This is the reason why I went</span>
<span class="quote">&gt; down the path of a page flag.</span>

You are right, you will need a page flag for that part.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/sparc/include/asm/pgtable_64.h b/arch/sparc/include/asm/pgtable_64.h</span>
<span class="p_header">index 1fb317f..f2fd088 100644</span>
<span class="p_header">--- a/arch/sparc/include/asm/pgtable_64.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/pgtable_64.h</span>
<span class="p_chunk">@@ -166,6 +166,7 @@</span> <span class="p_context"> bool kern_addr_valid(unsigned long addr);</span>
 #define _PAGE_EXEC_4V	  _AC(0x0000000000000080,UL) /* Executable Page      */
 #define _PAGE_W_4V	  _AC(0x0000000000000040,UL) /* Writable             */
 #define _PAGE_SOFT_4V	  _AC(0x0000000000000030,UL) /* Software bits        */
<span class="p_add">+#define _PAGE_SHR_CTX_4V  _AC(0x0000000000000020,UL) /* Shared Context       */</span>
 #define _PAGE_PRESENT_4V  _AC(0x0000000000000010,UL) /* Present              */
 #define _PAGE_RESV_4V	  _AC(0x0000000000000008,UL) /* Reserved             */
 #define _PAGE_SZ16GB_4V	  _AC(0x0000000000000007,UL) /* 16GB Page            */
<span class="p_chunk">@@ -426,6 +427,18 @@</span> <span class="p_context"> static inline bool is_hugetlb_pte(pte_t pte)</span>
 }
 #endif
 
<span class="p_add">+#if defined(CONFIG_SHARED_MMU_CTX)</span>
<span class="p_add">+static inline bool is_sharedctx_pte(pte_t pte)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return !!(pte_val(pte) &amp; _PAGE_SHR_CTX_4V);</span>
<span class="p_add">+}</span>
<span class="p_add">+#else</span>
<span class="p_add">+static inline bool is_sharedctx_pte(pte_t pte)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return false;</span>
<span class="p_add">+}</span>
<span class="p_add">+#endif</span>
<span class="p_add">+</span>
 static inline pte_t pte_mkdirty(pte_t pte)
 {
 	unsigned long val = pte_val(pte), tmp;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



