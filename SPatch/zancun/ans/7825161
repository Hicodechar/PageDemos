
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v9,02/60] sparc/PCI: Use correct bus address to resource offset - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v9,02/60] sparc/PCI: Use correct bus address to resource offset</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=16">Yinghai Lu</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 11, 2015, 5:05 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1449810416-2950-3-git-send-email-yinghai@kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7825161/mbox/"
   >mbox</a>
|
   <a href="/patch/7825161/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7825161/">/patch/7825161/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 2AC2C9F1C2
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 11 Dec 2015 05:18:06 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id EB06620524
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 11 Dec 2015 05:18:04 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 8B04D20573
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 11 Dec 2015 05:18:03 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754178AbbLKFMt (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 11 Dec 2015 00:12:49 -0500
Received: from aserp1040.oracle.com ([141.146.126.69]:48240 &quot;EHLO
	aserp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752119AbbLKFMp (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 11 Dec 2015 00:12:45 -0500
Received: from userv0022.oracle.com (userv0022.oracle.com [156.151.31.74])
	by aserp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2) with
	ESMTP id tBB57JEF007077
	(version=TLSv1 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Fri, 11 Dec 2015 05:07:19 GMT
Received: from aserv0122.oracle.com (aserv0122.oracle.com [141.146.126.236])
	by userv0022.oracle.com (8.13.8/8.13.8) with ESMTP id
	tBB57IZm005066
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL); 
	Fri, 11 Dec 2015 05:07:19 GMT
Received: from abhmp0011.oracle.com (abhmp0011.oracle.com [141.146.116.17])
	by aserv0122.oracle.com (8.13.8/8.13.8) with ESMTP id
	tBB57FCc002885; Fri, 11 Dec 2015 05:07:15 GMT
Received: from linux-siqj.site (/69.181.250.163)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Thu, 10 Dec 2015 21:07:15 -0800
From: Yinghai Lu &lt;yinghai@kernel.org&gt;
To: Bjorn Helgaas &lt;bhelgaas@google.com&gt;, David Miller &lt;davem@davemloft.net&gt;,
	Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;,
	Wei Yang &lt;weiyang@linux.vnet.ibm.com&gt;, TJ &lt;linux@iam.tj&gt;,
	Yijing Wang &lt;wangyijing@huawei.com&gt;, Khalid Aziz &lt;khalid.aziz@oracle.com&gt;
Cc: linux-pci@vger.kernel.org, linux-kernel@vger.kernel.org,
	Yinghai Lu &lt;yinghai@kernel.org&gt;
Subject: [PATCH v9 02/60] sparc/PCI: Use correct bus address to resource
	offset
Date: Thu, 10 Dec 2015 21:05:58 -0800
Message-Id: &lt;1449810416-2950-3-git-send-email-yinghai@kernel.org&gt;
X-Mailer: git-send-email 1.8.4.5
In-Reply-To: &lt;1449810416-2950-1-git-send-email-yinghai@kernel.org&gt;
References: &lt;1449810416-2950-1-git-send-email-yinghai@kernel.org&gt;
X-Source-IP: userv0022.oracle.com [156.151.31.74]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=16">Yinghai Lu</a> - Dec. 11, 2015, 5:05 a.m.</div>
<pre class="content">
After we add 64bit mmio parsing, we got some &quot;no compatible bridge window&quot;
warning on anther new model that support 64bit resource.

It turns out that we can not use mem_space.start as 64bit mem space
offset, aka mem_space.start != offset.

Use child_phys_addr to calculate exact offset and recorde offset in
pbm.

After patch we get correct offset.

/pci@305: PCI IO [io  0x2007e00000000-0x2007e0fffffff] offset 2007e00000000
/pci@305: PCI MEM [mem 0x2000000100000-0x200007effffff] offset 2000000000000
/pci@305: PCI MEM64 [mem 0x2000100000000-0x2000dffffffff] offset 2000000000000
...
pci_sun4v f02ae7f8: PCI host bridge to bus 0000:00
pci_bus 0000:00: root bus resource [io  0x2007e00000000-0x2007e0fffffff] (bus address [0x0000-0xfffffff])
pci_bus 0000:00: root bus resource [mem 0x2000000100000-0x200007effffff] (bus address [0x00100000-0x7effffff])
pci_bus 0000:00: root bus resource [mem 0x2000100000000-0x2000dffffffff] (bus address [0x100000000-0xdffffffff])

-v2: to make it simple, do not add mem64_offset, and assume
     mem64_offset == mem_offset even that is not same as mem_space.start,
     otherwise would make pci_mmap_resource() path too complicated.

-v3: put back mem64_offset, as we found T4 has mem_offset != mem64_offset
     check overlapping between mem64_space and mem_space.

-v5: use pcibios_bus_to_region() requested by Bjorn.
     use pci_find_root_bus_resource().
<span class="signed-off-by">
Signed-off-by: Yinghai Lu &lt;yinghai@kernel.org&gt;</span>
<span class="tested-by">Tested-by: Khalid Aziz &lt;khalid.aziz@oracle.com&gt;</span>
---
 arch/sparc/kernel/pci.c        | 50 +++++++++++++++++++-----------------------
 arch/sparc/kernel/pci_common.c | 32 ++++++++++++++++++++-------
 arch/sparc/kernel/pci_impl.h   |  4 ++++
 3 files changed, 50 insertions(+), 36 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/sparc/kernel/pci.c b/arch/sparc/kernel/pci.c</span>
<span class="p_header">index badf095..269630a 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/pci.c</span>
<span class="p_header">+++ b/arch/sparc/kernel/pci.c</span>
<span class="p_chunk">@@ -654,12 +654,12 @@</span> <span class="p_context"> struct pci_bus *pci_scan_one_pbm(struct pci_pbm_info *pbm,</span>
 	printk(&quot;PCI: Scanning PBM %s\n&quot;, node-&gt;full_name);
 
 	pci_add_resource_offset(&amp;resources, &amp;pbm-&gt;io_space,
<span class="p_del">-				pbm-&gt;io_space.start);</span>
<span class="p_add">+				pbm-&gt;io_offset);</span>
 	pci_add_resource_offset(&amp;resources, &amp;pbm-&gt;mem_space,
<span class="p_del">-				pbm-&gt;mem_space.start);</span>
<span class="p_add">+				pbm-&gt;mem_offset);</span>
 	if (pbm-&gt;mem64_space.flags)
 		pci_add_resource_offset(&amp;resources, &amp;pbm-&gt;mem64_space,
<span class="p_del">-					pbm-&gt;mem_space.start);</span>
<span class="p_add">+					pbm-&gt;mem64_offset);</span>
 	pbm-&gt;busn.start = pbm-&gt;pci_first_busno;
 	pbm-&gt;busn.end	= pbm-&gt;pci_last_busno;
 	pbm-&gt;busn.flags	= IORESOURCE_BUS;
<span class="p_chunk">@@ -733,30 +733,28 @@</span> <span class="p_context"> int pcibios_enable_device(struct pci_dev *dev, int mask)</span>
 static int __pci_mmap_make_offset_bus(struct pci_dev *pdev, struct vm_area_struct *vma,
 				      enum pci_mmap_state mmap_state)
 {
<span class="p_del">-	struct pci_pbm_info *pbm = pdev-&gt;dev.archdata.host_controller;</span>
<span class="p_del">-	unsigned long space_size, user_offset, user_size;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (mmap_state == pci_mmap_io) {</span>
<span class="p_del">-		space_size = resource_size(&amp;pbm-&gt;io_space);</span>
<span class="p_del">-	} else {</span>
<span class="p_del">-		space_size = resource_size(&amp;pbm-&gt;mem_space);</span>
<span class="p_del">-	}</span>
<span class="p_add">+	unsigned long user_offset, user_size;</span>
<span class="p_add">+	struct resource res, *root_bus_res;</span>
<span class="p_add">+	struct pci_bus_region region;</span>
 
 	/* Make sure the request is in range. */
 	user_offset = vma-&gt;vm_pgoff &lt;&lt; PAGE_SHIFT;
 	user_size = vma-&gt;vm_end - vma-&gt;vm_start;
 
<span class="p_del">-	if (user_offset &gt;= space_size ||</span>
<span class="p_del">-	    (user_offset + user_size) &gt; space_size)</span>
<span class="p_add">+	region.start = user_offset;</span>
<span class="p_add">+	region.end = user_offset + user_size - 1;</span>
<span class="p_add">+	memset(&amp;res, 0, sizeof(res));</span>
<span class="p_add">+	if (mmap_state == pci_mmap_io)</span>
<span class="p_add">+		res.flags = IORESOURCE_IO;</span>
<span class="p_add">+	else</span>
<span class="p_add">+		res.flags = IORESOURCE_MEM;</span>
<span class="p_add">+</span>
<span class="p_add">+	pcibios_bus_to_resource(pdev-&gt;bus, &amp;res, &amp;region);</span>
<span class="p_add">+	root_bus_res = pci_find_root_bus_resource(pdev-&gt;bus, &amp;res);</span>
<span class="p_add">+	if (!root_bus_res)</span>
 		return -EINVAL;
 
<span class="p_del">-	if (mmap_state == pci_mmap_io) {</span>
<span class="p_del">-		vma-&gt;vm_pgoff = (pbm-&gt;io_space.start +</span>
<span class="p_del">-				 user_offset) &gt;&gt; PAGE_SHIFT;</span>
<span class="p_del">-	} else {</span>
<span class="p_del">-		vma-&gt;vm_pgoff = (pbm-&gt;mem_space.start +</span>
<span class="p_del">-				 user_offset) &gt;&gt; PAGE_SHIFT;</span>
<span class="p_del">-	}</span>
<span class="p_add">+	vma-&gt;vm_pgoff = res.start &gt;&gt; PAGE_SHIFT;</span>
 
 	return 0;
 }
<span class="p_chunk">@@ -977,16 +975,12 @@</span> <span class="p_context"> void pci_resource_to_user(const struct pci_dev *pdev, int bar,</span>
 			  const struct resource *rp, resource_size_t *start,
 			  resource_size_t *end)
 {
<span class="p_del">-	struct pci_pbm_info *pbm = pdev-&gt;dev.archdata.host_controller;</span>
<span class="p_del">-	unsigned long offset;</span>
<span class="p_add">+	struct pci_bus_region region;</span>
 
<span class="p_del">-	if (rp-&gt;flags &amp; IORESOURCE_IO)</span>
<span class="p_del">-		offset = pbm-&gt;io_space.start;</span>
<span class="p_del">-	else</span>
<span class="p_del">-		offset = pbm-&gt;mem_space.start;</span>
<span class="p_add">+	pcibios_resource_to_bus(pdev-&gt;bus, &amp;region, (struct resource *)rp);</span>
 
<span class="p_del">-	*start = rp-&gt;start - offset;</span>
<span class="p_del">-	*end = rp-&gt;end - offset;</span>
<span class="p_add">+	*start = region.start;</span>
<span class="p_add">+	*end = region.end;</span>
 }
 
 void pcibios_set_master(struct pci_dev *dev)
<span class="p_header">diff --git a/arch/sparc/kernel/pci_common.c b/arch/sparc/kernel/pci_common.c</span>
<span class="p_header">index 33524c1..76998f8 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/pci_common.c</span>
<span class="p_header">+++ b/arch/sparc/kernel/pci_common.c</span>
<span class="p_chunk">@@ -410,13 +410,16 @@</span> <span class="p_context"> void pci_determine_mem_io_space(struct pci_pbm_info *pbm)</span>
 
 	for (i = 0; i &lt; num_pbm_ranges; i++) {
 		const struct linux_prom_pci_ranges *pr = &amp;pbm_ranges[i];
<span class="p_del">-		unsigned long a, size;</span>
<span class="p_add">+		unsigned long a, size, region_a;</span>
 		u32 parent_phys_hi, parent_phys_lo;
<span class="p_add">+		u32 child_phys_mid, child_phys_lo;</span>
 		u32 size_hi, size_lo;
 		int type;
 
 		parent_phys_hi = pr-&gt;parent_phys_hi;
 		parent_phys_lo = pr-&gt;parent_phys_lo;
<span class="p_add">+		child_phys_mid = pr-&gt;child_phys_mid;</span>
<span class="p_add">+		child_phys_lo = pr-&gt;child_phys_lo;</span>
 		if (tlb_type == hypervisor)
 			parent_phys_hi &amp;= 0x0fffffff;
 
<span class="p_chunk">@@ -426,6 +429,8 @@</span> <span class="p_context"> void pci_determine_mem_io_space(struct pci_pbm_info *pbm)</span>
 		type = (pr-&gt;child_phys_hi &gt;&gt; 24) &amp; 0x3;
 		a = (((unsigned long)parent_phys_hi &lt;&lt; 32UL) |
 		     ((unsigned long)parent_phys_lo  &lt;&lt;  0UL));
<span class="p_add">+		region_a = (((unsigned long)child_phys_mid &lt;&lt; 32UL) |</span>
<span class="p_add">+		     ((unsigned long)child_phys_lo  &lt;&lt;  0UL));</span>
 		size = (((unsigned long)size_hi &lt;&lt; 32UL) |
 			((unsigned long)size_lo  &lt;&lt;  0UL));
 
<span class="p_chunk">@@ -440,6 +445,7 @@</span> <span class="p_context"> void pci_determine_mem_io_space(struct pci_pbm_info *pbm)</span>
 			pbm-&gt;io_space.start = a;
 			pbm-&gt;io_space.end = a + size - 1UL;
 			pbm-&gt;io_space.flags = IORESOURCE_IO;
<span class="p_add">+			pbm-&gt;io_offset = a - region_a;</span>
 			saw_io = 1;
 			break;
 
<span class="p_chunk">@@ -448,6 +454,7 @@</span> <span class="p_context"> void pci_determine_mem_io_space(struct pci_pbm_info *pbm)</span>
 			pbm-&gt;mem_space.start = a;
 			pbm-&gt;mem_space.end = a + size - 1UL;
 			pbm-&gt;mem_space.flags = IORESOURCE_MEM;
<span class="p_add">+			pbm-&gt;mem_offset = a - region_a;</span>
 			saw_mem = 1;
 			break;
 
<span class="p_chunk">@@ -456,6 +463,7 @@</span> <span class="p_context"> void pci_determine_mem_io_space(struct pci_pbm_info *pbm)</span>
 			pbm-&gt;mem64_space.start = a;
 			pbm-&gt;mem64_space.end = a + size - 1UL;
 			pbm-&gt;mem64_space.flags = IORESOURCE_MEM;
<span class="p_add">+			pbm-&gt;mem64_offset = a - region_a;</span>
 			saw_mem = 1;
 			break;
 
<span class="p_chunk">@@ -471,14 +479,22 @@</span> <span class="p_context"> void pci_determine_mem_io_space(struct pci_pbm_info *pbm)</span>
 		prom_halt();
 	}
 
<span class="p_del">-	printk(&quot;%s: PCI IO[%llx] MEM[%llx]&quot;,</span>
<span class="p_del">-	       pbm-&gt;name,</span>
<span class="p_del">-	       pbm-&gt;io_space.start,</span>
<span class="p_del">-	       pbm-&gt;mem_space.start);</span>
<span class="p_add">+	if (pbm-&gt;io_space.flags)</span>
<span class="p_add">+		printk(&quot;%s: PCI IO %pR offset %llx\n&quot;,</span>
<span class="p_add">+		       pbm-&gt;name, &amp;pbm-&gt;io_space, pbm-&gt;io_offset);</span>
<span class="p_add">+	if (pbm-&gt;mem_space.flags)</span>
<span class="p_add">+		printk(&quot;%s: PCI MEM %pR offset %llx\n&quot;,</span>
<span class="p_add">+		       pbm-&gt;name, &amp;pbm-&gt;mem_space, pbm-&gt;mem_offset);</span>
<span class="p_add">+	if (pbm-&gt;mem64_space.flags &amp;&amp; pbm-&gt;mem_space.flags) {</span>
<span class="p_add">+		if (pbm-&gt;mem64_space.start &lt;= pbm-&gt;mem_space.end)</span>
<span class="p_add">+			pbm-&gt;mem64_space.start = pbm-&gt;mem_space.end + 1;</span>
<span class="p_add">+		if (pbm-&gt;mem64_space.start &gt; pbm-&gt;mem64_space.end)</span>
<span class="p_add">+			pbm-&gt;mem64_space.flags = 0;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	if (pbm-&gt;mem64_space.flags)
<span class="p_del">-		printk(&quot; MEM64[%llx]&quot;,</span>
<span class="p_del">-		       pbm-&gt;mem64_space.start);</span>
<span class="p_del">-	printk(&quot;\n&quot;);</span>
<span class="p_add">+		printk(&quot;%s: PCI MEM64 %pR offset %llx\n&quot;,</span>
<span class="p_add">+		       pbm-&gt;name, &amp;pbm-&gt;mem64_space, pbm-&gt;mem64_offset);</span>
 
 	pbm-&gt;io_space.name = pbm-&gt;mem_space.name = pbm-&gt;name;
 	pbm-&gt;mem64_space.name = pbm-&gt;name;
<span class="p_header">diff --git a/arch/sparc/kernel/pci_impl.h b/arch/sparc/kernel/pci_impl.h</span>
<span class="p_header">index 37222ca..2853af7 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/pci_impl.h</span>
<span class="p_header">+++ b/arch/sparc/kernel/pci_impl.h</span>
<span class="p_chunk">@@ -99,6 +99,10 @@</span> <span class="p_context"> struct pci_pbm_info {</span>
 	struct resource			mem_space;
 	struct resource			mem64_space;
 	struct resource			busn;
<span class="p_add">+	/* offset */</span>
<span class="p_add">+	resource_size_t			io_offset;</span>
<span class="p_add">+	resource_size_t			mem_offset;</span>
<span class="p_add">+	resource_size_t			mem64_offset;</span>
 
 	/* Base of PCI Config space, can be per-PBM or shared. */
 	unsigned long			config_space;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



