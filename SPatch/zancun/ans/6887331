
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/8] xen: Make clear that swiotlb and biomerge are dealing with DMA address - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/8] xen: Make clear that swiotlb and biomerge are dealing with DMA address</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=72882">Julien Grall</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 28, 2015, 3:02 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1438095769-2560-3-git-send-email-julien.grall@citrix.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6887331/mbox/"
   >mbox</a>
|
   <a href="/patch/6887331/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6887331/">/patch/6887331/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 2E7BDC05AC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 28 Jul 2015 15:07:24 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 0A9D3206CE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 28 Jul 2015 15:07:23 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id C6876206B2
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 28 Jul 2015 15:07:19 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754231AbbG1PHI (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 28 Jul 2015 11:07:08 -0400
Received: from smtp02.citrix.com ([66.165.176.63]:38483 &quot;EHLO
	SMTP02.CITRIX.COM&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751888AbbG1PEf (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 28 Jul 2015 11:04:35 -0400
X-IronPort-AV: E=Sophos;i=&quot;5.15,563,1432598400&quot;; d=&quot;scan&#39;208&quot;;a=&quot;288414377&quot;
From: Julien Grall &lt;julien.grall@citrix.com&gt;
To: &lt;xen-devel@lists.xenproject.org&gt;
CC: &lt;ian.campbell@citrix.com&gt;, &lt;stefano.stabellini@eu.citrix.com&gt;,
	&lt;linux-kernel@vger.kernel.org&gt;, Julien Grall &lt;julien.grall@citrix.com&gt;,
	Russell King &lt;linux@arm.linux.org.uk&gt;,
	Konrad Rzeszutek Wilk &lt;konrad.wilk@oracle.com&gt;,
	Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;,
	&quot;David Vrabel&quot; &lt;david.vrabel@citrix.com&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;,
	&quot;Ingo Molnar&quot; &lt;mingo@redhat.com&gt;, &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;,
	&lt;x86@kernel.org&gt;, &lt;linux-arm-kernel@lists.infradead.org&gt;
Subject: [PATCH 2/8] xen: Make clear that swiotlb and biomerge are dealing
	with DMA address
Date: Tue, 28 Jul 2015 16:02:43 +0100
Message-ID: &lt;1438095769-2560-3-git-send-email-julien.grall@citrix.com&gt;
X-Mailer: git-send-email 2.1.4
In-Reply-To: &lt;1438095769-2560-1-git-send-email-julien.grall@citrix.com&gt;
References: &lt;1438095769-2560-1-git-send-email-julien.grall@citrix.com&gt;
MIME-Version: 1.0
Content-Type: text/plain
X-DLP: MIA1
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-8.3 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72882">Julien Grall</a> - July 28, 2015, 3:02 p.m.</div>
<pre class="content">
The swiotlb is required when programming a DMA address on ARM when a
device is not protected by an IOMMU.

In this case, the DMA address should always be equal to the machine address.
For DOM0 memory, Xen ensure it by have an identity mapping between the
guest address and host address. However, when mapping a foreign grant
reference, the 1:1 model doesn&#39;t work.

For ARM guest, most of the callers of pfn_to_mfn expects to get a GFN
(Guest Frame Number), i.e a PFN (Page Frame Number) from the Linux point
of view given that all ARM guest are auto-translated.

Even though the name pfn_to_mfn is misleading, we need to ensure that
those caller get a GFN and not by mistake a MFN. In pratical, I haven&#39;t
seen error related to this but we should fix it for the sake of
correctness.

In order to fix the implementation of pfn_to_mfn on ARM in a follow-up
patch, we have to introduce new helpers to return the DMA from a PFN and
the invert.

On x86, the new helpers will be an alias of pfn_to_mfn and mfn_to_pfn.

The helpers will be used in swiotlb and xen_biovec_phys_mergeable.

This is necessary in the latter because we have to ensure that the
biovec code will not try to merge a biovec using foreign page and
another using Linux memory.

Lastly, the helper mfn_to_local_pfn has been renamed to dnf_to_local_pfn
given that the only usage was in swiotlb.
<span class="signed-off-by">
Signed-off-by: Julien Grall &lt;julien.grall@citrix.com&gt;</span>
Cc: Stefano Stabellini &lt;stefano.stabellini@eu.citrix.com&gt;
Cc: Russell King &lt;linux@arm.linux.org.uk&gt;
Cc: Konrad Rzeszutek Wilk &lt;konrad.wilk@oracle.com&gt;
Cc: Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;
Cc: David Vrabel &lt;david.vrabel@citrix.com&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Cc: Ingo Molnar &lt;mingo@redhat.com&gt;
Cc: &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;
Cc: x86@kernel.org
Cc: linux-arm-kernel@lists.infradead.org
---
 arch/arm/include/asm/xen/page.h | 23 +++++++++++++++++++++--
 arch/arm/xen/mm.c               |  4 ++--
 arch/x86/include/asm/xen/page.h |  8 ++++++--
 drivers/xen/biomerge.c          |  6 +++---
 drivers/xen/swiotlb-xen.c       | 16 ++++++++--------
 5 files changed, 40 insertions(+), 17 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=38901">David Vrabel</a> - July 28, 2015, 3:52 p.m.</div>
<pre class="content">
On 28/07/15 16:02, Julien Grall wrote:
<span class="quote">&gt; </span>
<span class="quote">&gt; +/* Pseudo-physical &lt;-&gt; DMA conversion */</span>
<span class="quote">&gt; +static inline unsigned long pfn_to_dfn(unsigned long pfn)</span>

Use BFN for bus frame number.  This is the terminology that is used in
the (proposed) pv-iommu hypercall.

David
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72882">Julien Grall</a> - July 28, 2015, 4:06 p.m.</div>
<pre class="content">
Hi David,

On 28/07/15 16:52, David Vrabel wrote:
<span class="quote">&gt; On 28/07/15 16:02, Julien Grall wrote:</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; +/* Pseudo-physical &lt;-&gt; DMA conversion */</span>
<span class="quote">&gt;&gt; +static inline unsigned long pfn_to_dfn(unsigned long pfn)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Use BFN for bus frame number.  This is the terminology that is used in</span>
<span class="quote">&gt; the (proposed) pv-iommu hypercall.</span>

Good idea, I will use them in the next version.

Regards,
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=999">Stefano Stabellini</a> - July 31, 2015, 10:54 a.m.</div>
<pre class="content">
On Tue, 28 Jul 2015, David Vrabel wrote:
<span class="quote">&gt; On 28/07/15 16:02, Julien Grall wrote:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; +/* Pseudo-physical &lt;-&gt; DMA conversion */</span>
<span class="quote">&gt; &gt; +static inline unsigned long pfn_to_dfn(unsigned long pfn)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Use BFN for bus frame number.  This is the terminology that is used in</span>
<span class="quote">&gt; the (proposed) pv-iommu hypercall.</span>

Yes, certainly better than DFN.
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm/include/asm/xen/page.h b/arch/arm/include/asm/xen/page.h</span>
<span class="p_header">index c2e9dcd..6c9f6d2 100644</span>
<span class="p_header">--- a/arch/arm/include/asm/xen/page.h</span>
<span class="p_header">+++ b/arch/arm/include/asm/xen/page.h</span>
<span class="p_chunk">@@ -52,7 +52,26 @@</span> <span class="p_context"> static inline unsigned long mfn_to_pfn(unsigned long mfn)</span>
 	return mfn;
 }
 
<span class="p_del">-#define mfn_to_local_pfn(mfn) mfn_to_pfn(mfn)</span>
<span class="p_add">+/* Pseudo-physical &lt;-&gt; DMA conversion */</span>
<span class="p_add">+static inline unsigned long pfn_to_dfn(unsigned long pfn)</span>
<span class="p_add">+{</span>
<span class="p_add">+	unsigned long mfn;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (phys_to_mach.rb_node != NULL) {</span>
<span class="p_add">+		mfn = __pfn_to_mfn(pfn);</span>
<span class="p_add">+		if (mfn != INVALID_P2M_ENTRY)</span>
<span class="p_add">+			return mfn;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	return pfn;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline unsigned long dfn_to_pfn(unsigned long dfn)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return dfn;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+#define dfn_to_local_pfn(dfn)	dfn_to_pfn(dfn)</span>
 
 /* VIRT &lt;-&gt; MACHINE conversion */
 #define virt_to_mfn(v)		(pfn_to_mfn(virt_to_pfn(v)))
<span class="p_chunk">@@ -96,7 +115,7 @@</span> <span class="p_context"> static inline bool set_phys_to_machine(unsigned long pfn, unsigned long mfn)</span>
 
 bool xen_arch_need_swiotlb(struct device *dev,
 			   unsigned long pfn,
<span class="p_del">-			   unsigned long mfn);</span>
<span class="p_add">+			   unsigned long dfn);</span>
 unsigned long xen_get_swiotlb_free_pages(unsigned int order);
 
 #endif /* _ASM_ARM_XEN_PAGE_H */
<span class="p_header">diff --git a/arch/arm/xen/mm.c b/arch/arm/xen/mm.c</span>
<span class="p_header">index 03e75fe..12bde72 100644</span>
<span class="p_header">--- a/arch/arm/xen/mm.c</span>
<span class="p_header">+++ b/arch/arm/xen/mm.c</span>
<span class="p_chunk">@@ -139,9 +139,9 @@</span> <span class="p_context"> void __xen_dma_sync_single_for_device(struct device *hwdev,</span>
 
 bool xen_arch_need_swiotlb(struct device *dev,
 			   unsigned long pfn,
<span class="p_del">-			   unsigned long mfn)</span>
<span class="p_add">+			   unsigned long dfn)</span>
 {
<span class="p_del">-	return (!hypercall_cflush &amp;&amp; (pfn != mfn) &amp;&amp; !is_device_dma_coherent(dev));</span>
<span class="p_add">+	return (!hypercall_cflush &amp;&amp; (pfn != dfn) &amp;&amp; !is_device_dma_coherent(dev));</span>
 }
 
 int xen_create_contiguous_region(phys_addr_t pstart, unsigned int order,
<span class="p_header">diff --git a/arch/x86/include/asm/xen/page.h b/arch/x86/include/asm/xen/page.h</span>
<span class="p_header">index c44a5d5..046e91a 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/xen/page.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/xen/page.h</span>
<span class="p_chunk">@@ -178,6 +178,10 @@</span> <span class="p_context"> static inline xpaddr_t machine_to_phys(xmaddr_t machine)</span>
 	return XPADDR(PFN_PHYS(mfn_to_pfn(PFN_DOWN(machine.maddr))) | offset);
 }
 
<span class="p_add">+/* Pseudo-physical &lt;-&gt; DMA conversion */</span>
<span class="p_add">+#define pfn_to_dfn(pfn)		pfn_to_mfn(pfn)</span>
<span class="p_add">+#define dfn_to_pfn(dfn)		mfn_to_pfn(dfn)</span>
<span class="p_add">+</span>
 /*
  * We detect special mappings in one of two ways:
  *  1. If the MFN is an I/O page then Xen will set the m2p entry
<span class="p_chunk">@@ -198,7 +202,7 @@</span> <span class="p_context"> static inline xpaddr_t machine_to_phys(xmaddr_t machine)</span>
  *      require. In all the cases we care about, the FOREIGN_FRAME bit is
  *      masked (e.g., pfn_to_mfn()) so behaviour there is correct.
  */
<span class="p_del">-static inline unsigned long mfn_to_local_pfn(unsigned long mfn)</span>
<span class="p_add">+static inline unsigned long dfn_to_local_pfn(unsigned long mfn)</span>
 {
 	unsigned long pfn;
 
<span class="p_chunk">@@ -264,7 +268,7 @@</span> <span class="p_context"> void make_lowmem_page_readwrite(void *vaddr);</span>
 
 static inline bool xen_arch_need_swiotlb(struct device *dev,
 					 unsigned long pfn,
<span class="p_del">-					 unsigned long mfn)</span>
<span class="p_add">+					 unsigned long dfn)</span>
 {
 	return false;
 }
<span class="p_header">diff --git a/drivers/xen/biomerge.c b/drivers/xen/biomerge.c</span>
<span class="p_header">index 0edb91c..4bc5866 100644</span>
<span class="p_header">--- a/drivers/xen/biomerge.c</span>
<span class="p_header">+++ b/drivers/xen/biomerge.c</span>
<span class="p_chunk">@@ -6,10 +6,10 @@</span> <span class="p_context"></span>
 bool xen_biovec_phys_mergeable(const struct bio_vec *vec1,
 			       const struct bio_vec *vec2)
 {
<span class="p_del">-	unsigned long mfn1 = pfn_to_mfn(page_to_pfn(vec1-&gt;bv_page));</span>
<span class="p_del">-	unsigned long mfn2 = pfn_to_mfn(page_to_pfn(vec2-&gt;bv_page));</span>
<span class="p_add">+	unsigned long dfn1 = pfn_to_dfn(page_to_pfn(vec1-&gt;bv_page));</span>
<span class="p_add">+	unsigned long dfn2 = pfn_to_dfn(page_to_pfn(vec2-&gt;bv_page));</span>
 
 	return __BIOVEC_PHYS_MERGEABLE(vec1, vec2) &amp;&amp;
<span class="p_del">-		((mfn1 == mfn2) || ((mfn1+1) == mfn2));</span>
<span class="p_add">+		((dfn1 == dfn2) || ((dfn1+1) == dfn2));</span>
 }
 EXPORT_SYMBOL(xen_biovec_phys_mergeable);
<span class="p_header">diff --git a/drivers/xen/swiotlb-xen.c b/drivers/xen/swiotlb-xen.c</span>
<span class="p_header">index 4c54932..52c3138 100644</span>
<span class="p_header">--- a/drivers/xen/swiotlb-xen.c</span>
<span class="p_header">+++ b/drivers/xen/swiotlb-xen.c</span>
<span class="p_chunk">@@ -82,8 +82,8 @@</span> <span class="p_context"> static u64 start_dma_addr;</span>
  */
 static inline dma_addr_t xen_phys_to_bus(phys_addr_t paddr)
 {
<span class="p_del">-	unsigned long mfn = pfn_to_mfn(PFN_DOWN(paddr));</span>
<span class="p_del">-	dma_addr_t dma = (dma_addr_t)mfn &lt;&lt; PAGE_SHIFT;</span>
<span class="p_add">+	unsigned long dfn = pfn_to_dfn(PFN_DOWN(paddr));</span>
<span class="p_add">+	dma_addr_t dma = (dma_addr_t)dfn &lt;&lt; PAGE_SHIFT;</span>
 
 	dma |= paddr &amp; ~PAGE_MASK;
 
<span class="p_chunk">@@ -92,7 +92,7 @@</span> <span class="p_context"> static inline dma_addr_t xen_phys_to_bus(phys_addr_t paddr)</span>
 
 static inline phys_addr_t xen_bus_to_phys(dma_addr_t baddr)
 {
<span class="p_del">-	unsigned long pfn = mfn_to_pfn(PFN_DOWN(baddr));</span>
<span class="p_add">+	unsigned long pfn = dfn_to_pfn(PFN_DOWN(baddr));</span>
 	dma_addr_t dma = (dma_addr_t)pfn &lt;&lt; PAGE_SHIFT;
 	phys_addr_t paddr = dma;
 
<span class="p_chunk">@@ -110,15 +110,15 @@</span> <span class="p_context"> static int check_pages_physically_contiguous(unsigned long pfn,</span>
 					     unsigned int offset,
 					     size_t length)
 {
<span class="p_del">-	unsigned long next_mfn;</span>
<span class="p_add">+	unsigned long next_dfn;</span>
 	int i;
 	int nr_pages;
 
<span class="p_del">-	next_mfn = pfn_to_mfn(pfn);</span>
<span class="p_add">+	next_dfn = pfn_to_dfn(pfn);</span>
 	nr_pages = (offset + length + PAGE_SIZE-1) &gt;&gt; PAGE_SHIFT;
 
 	for (i = 1; i &lt; nr_pages; i++) {
<span class="p_del">-		if (pfn_to_mfn(++pfn) != ++next_mfn)</span>
<span class="p_add">+		if (pfn_to_dfn(++pfn) != ++next_dfn)</span>
 			return 0;
 	}
 	return 1;
<span class="p_chunk">@@ -138,8 +138,8 @@</span> <span class="p_context"> static inline int range_straddles_page_boundary(phys_addr_t p, size_t size)</span>
 
 static int is_xen_swiotlb_buffer(dma_addr_t dma_addr)
 {
<span class="p_del">-	unsigned long mfn = PFN_DOWN(dma_addr);</span>
<span class="p_del">-	unsigned long pfn = mfn_to_local_pfn(mfn);</span>
<span class="p_add">+	unsigned long dfn = PFN_DOWN(dma_addr);</span>
<span class="p_add">+	unsigned long pfn = dfn_to_local_pfn(dfn);</span>
 	phys_addr_t paddr;
 
 	/* If the address is outside our domain, it CAN

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



