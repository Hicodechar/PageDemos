
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[1/2] arm64: mm: Mark nomap regions with the PG_reserved flag - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [1/2] arm64: mm: Mark nomap regions with the PG_reserved flag</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=133961">James Morse</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 2, 2016, 2:49 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161202144909.18405-2-james.morse@arm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9458621/mbox/"
   >mbox</a>
|
   <a href="/patch/9458621/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9458621/">/patch/9458621/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	0E00D60756 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  2 Dec 2016 14:50:46 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id F2FE128571
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  2 Dec 2016 14:50:45 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id E78F928570; Fri,  2 Dec 2016 14:50:45 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6DBA22847C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  2 Dec 2016 14:50:45 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1761671AbcLBOu3 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 2 Dec 2016 09:50:29 -0500
Received: from foss.arm.com ([217.140.101.70]:40486 &quot;EHLO foss.arm.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1761594AbcLBOu1 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 2 Dec 2016 09:50:27 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
	by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 55BB21515;
	Fri,  2 Dec 2016 06:50:26 -0800 (PST)
Received: from melchizedek.cambridge.arm.com (melchizedek.cambridge.arm.com
	[10.1.206.46])
	by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id
	E44B13F24D; Fri,  2 Dec 2016 06:50:24 -0800 (PST)
From: James Morse &lt;james.morse@arm.com&gt;
To: linux-arm-kernel@lists.infradead.org
Cc: Robert Richter &lt;rrichter@cavium.com&gt;, Will Deacon &lt;will.deacon@arm.com&gt;,
	Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt;,
	David Daney &lt;david.daney@cavium.com&gt;,
	Mark Rutland &lt;mark.rutland@arm.com&gt;, Hanjun Guo &lt;hanjun.guo@linaro.org&gt;,
	linux-kernel@vger.kernel.org
Subject: [PATCH 1/2] arm64: mm: Mark nomap regions with the PG_reserved flag
Date: Fri,  2 Dec 2016 14:49:08 +0000
Message-Id: &lt;20161202144909.18405-2-james.morse@arm.com&gt;
X-Mailer: git-send-email 2.10.1
In-Reply-To: &lt;20161202144909.18405-1-james.morse@arm.com&gt;
References: &lt;20161202144909.18405-1-james.morse@arm.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=133961">James Morse</a> - Dec. 2, 2016, 2:49 p.m.</div>
<pre class="content">
linux/page-flags.h has a flag for describing special pages:
<span class="quote">&gt; PG_reserved is set for special pages, which can never be swapped out.</span>
<span class="quote">&gt; Some of them might not even exist (eg empty_bad_page)...</span>

memblock nomap pages fall in the &#39;might not even exist&#39; category,
set this bit on all the struct pages in the nomap regions.

This gives pfn walkers the necessary hint that the page might not
be accessible, allowing pfn_valid()s meaning to change slightly.
<span class="signed-off-by">
Signed-off-by: James Morse &lt;james.morse@arm.com&gt;</span>
---
 arch/arm64/mm/init.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/mm/init.c b/arch/arm64/mm/init.c</span>
<span class="p_header">index 166911f4a2e6..5da9ff7d20f5 100644</span>
<span class="p_header">--- a/arch/arm64/mm/init.c</span>
<span class="p_header">+++ b/arch/arm64/mm/init.c</span>
<span class="p_chunk">@@ -31,6 +31,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/memblock.h&gt;
 #include &lt;linux/sort.h&gt;
 #include &lt;linux/of_fdt.h&gt;
<span class="p_add">+#include &lt;linux/page-flags.h&gt;</span>
 #include &lt;linux/dma-mapping.h&gt;
 #include &lt;linux/dma-contiguous.h&gt;
 #include &lt;linux/efi.h&gt;
<span class="p_chunk">@@ -401,6 +402,8 @@</span> <span class="p_context"> static void __init free_unused_memmap(void)</span>
  */
 void __init mem_init(void)
 {
<span class="p_add">+	struct memblock_region *region;</span>
<span class="p_add">+</span>
 	if (swiotlb_force || max_pfn &gt; (arm64_dma_phys_limit &gt;&gt; PAGE_SHIFT))
 		swiotlb_init(1);
 
<span class="p_chunk">@@ -479,6 +482,17 @@</span> <span class="p_context"> void __init mem_init(void)</span>
 		 */
 		sysctl_overcommit_memory = OVERCOMMIT_ALWAYS;
 	}
<span class="p_add">+</span>
<span class="p_add">+	/* Mark struct pages for the memblock:nomap regions as reserved */</span>
<span class="p_add">+	for_each_memblock(memory, region) {</span>
<span class="p_add">+		u64 pfn;</span>
<span class="p_add">+		u64 start_pfn = memblock_region_memory_base_pfn(region);</span>
<span class="p_add">+		u64 end_pfn = memblock_region_memory_end_pfn(region);</span>
<span class="p_add">+</span>
<span class="p_add">+		if (memblock_is_nomap(region))</span>
<span class="p_add">+			for (pfn = start_pfn; pfn &lt; end_pfn; pfn++)</span>
<span class="p_add">+				SetPageReserved(pfn_to_page(pfn));</span>
<span class="p_add">+	}</span>
 }
 
 void free_initmem(void)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



