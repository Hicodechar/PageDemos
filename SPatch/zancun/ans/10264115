
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v5,4/4] mm: Mark pages in use for page tables - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v5,4/4] mm: Mark pages in use for page tables</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=172187">willy@infradead.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 7, 2018, 1:44 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180307134443.32646-5-willy@infradead.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10264115/mbox/"
   >mbox</a>
|
   <a href="/patch/10264115/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10264115/">/patch/10264115/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	576DA60247 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  7 Mar 2018 13:45:07 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 473DA28A91
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  7 Mar 2018 13:45:07 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 3BCAD29513; Wed,  7 Mar 2018 13:45:07 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 8CF4A28A91
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  7 Mar 2018 13:45:06 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754496AbeCGNpD (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 7 Mar 2018 08:45:03 -0500
Received: from bombadil.infradead.org ([198.137.202.133]:59062 &quot;EHLO
	bombadil.infradead.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751150AbeCGNot (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 7 Mar 2018 08:44:49 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=infradead.org; s=bombadil.20170209;
	h=References:In-Reply-To:Message-Id:
	Date:Subject:Cc:To:From:Sender:Reply-To:MIME-Version:Content-Type:
	Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
	Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
	List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
	bh=y7aPPyG9s0oBchCnDHAX/ZBIjFkBIR45Pqp9XRJU7FE=;
	b=uNHm7LSzPCQ+lfbcycD7xl5xm
	VmZHqelLB71eZgrXwb63Chs+A5EjxY6CZmHl6XvKGuBj5mcafMnvYueajUzBEUtzzbdXykK15BvVj
	yMSJXEDfzcU4hPqKD96KyzUHaFCXbJsNKweRHc0r7+LKhhBnq5DFFGSnoSrAKGM0CoIMZtwz79vM+
	QhwbLzalsjk64Eg4MaOi2mAtA7SUhimyZQ5kM3d2xd0+BT26FRn+UuQKhAa16ObqkCxmRjgqNWn0u
	AzR88rU79J4SCaQmpdJINM+HtbJqa1gqZKFrsHZCOcPSP9rBOKPDWVjPbJS4qDcmciEAHcWkhqupe
	jdhHXzlyA==;
Received: from willy by bombadil.infradead.org with local (Exim 4.89 #1 (Red
	Hat Linux)) id 1etZNA-00005S-68; Wed, 07 Mar 2018 13:44:48 +0000
From: Matthew Wilcox &lt;willy@infradead.org&gt;
To: linux-mm@kvack.org
Cc: Matthew Wilcox &lt;mawilcox@microsoft.com&gt;, linux-kernel@vger.kernel.org
Subject: [PATCH v5 4/4] mm: Mark pages in use for page tables
Date: Wed,  7 Mar 2018 05:44:43 -0800
Message-Id: &lt;20180307134443.32646-5-willy@infradead.org&gt;
X-Mailer: git-send-email 2.14.3
In-Reply-To: &lt;20180307134443.32646-1-willy@infradead.org&gt;
References: &lt;20180307134443.32646-1-willy@infradead.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=172187">willy@infradead.org</a> - March 7, 2018, 1:44 p.m.</div>
<pre class="content">
<span class="from">From: Matthew Wilcox &lt;mawilcox@microsoft.com&gt;</span>

Define a new PageTable bit in the page_type and use it to mark pages in
use as page tables.  This can be helpful when debugging crashdumps or
analysing memory fragmentation.  Add a KPF flag to report these pages
to userspace and update page-types.c to interpret that flag.

Note that only pages currently accounted as NR_PAGETABLES are tracked
as PageTable; this does not include pgd/p4d/pud/pmd pages.  Those will
be the subject of a later patch.
<span class="signed-off-by">
Signed-off-by: Matthew Wilcox &lt;mawilcox@microsoft.com&gt;</span>
<span class="acked-by">Acked-by: Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt;</span>
---
 arch/tile/mm/pgtable.c                 | 3 +++
 fs/proc/page.c                         | 2 ++
 include/linux/mm.h                     | 2 ++
 include/linux/page-flags.h             | 6 ++++++
 include/uapi/linux/kernel-page-flags.h | 1 +
 tools/vm/page-types.c                  | 1 +
 6 files changed, 15 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/tile/mm/pgtable.c b/arch/tile/mm/pgtable.c</span>
<span class="p_header">index ec5576fd3a86..6dff12db335d 100644</span>
<span class="p_header">--- a/arch/tile/mm/pgtable.c</span>
<span class="p_header">+++ b/arch/tile/mm/pgtable.c</span>
<span class="p_chunk">@@ -206,6 +206,7 @@</span> <span class="p_context"> struct page *pgtable_alloc_one(struct mm_struct *mm, unsigned long address,</span>
 	 */
 	for (i = 1; i &lt; order; ++i) {
 		init_page_count(p+i);
<span class="p_add">+		__SetPageTable(p+i);</span>
 		inc_zone_page_state(p+i, NR_PAGETABLE);
 	}
 
<span class="p_chunk">@@ -226,6 +227,7 @@</span> <span class="p_context"> void pgtable_free(struct mm_struct *mm, struct page *p, int order)</span>
 
 	for (i = 1; i &lt; order; ++i) {
 		__free_page(p+i);
<span class="p_add">+		__ClearPageTable(p+i);</span>
 		dec_zone_page_state(p+i, NR_PAGETABLE);
 	}
 }
<span class="p_chunk">@@ -240,6 +242,7 @@</span> <span class="p_context"> void __pgtable_free_tlb(struct mmu_gather *tlb, struct page *pte,</span>
 
 	for (i = 1; i &lt; order; ++i) {
 		tlb_remove_page(tlb, pte + i);
<span class="p_add">+		__ClearPageTable(pte + i);</span>
 		dec_zone_page_state(pte + i, NR_PAGETABLE);
 	}
 }
<span class="p_header">diff --git a/fs/proc/page.c b/fs/proc/page.c</span>
<span class="p_header">index c9757af919a3..80275e7a963b 100644</span>
<span class="p_header">--- a/fs/proc/page.c</span>
<span class="p_header">+++ b/fs/proc/page.c</span>
<span class="p_chunk">@@ -156,6 +156,8 @@</span> <span class="p_context"> u64 stable_page_flags(struct page *page)</span>
 		u |= 1 &lt;&lt; KPF_BALLOON;
 	if (PageVmalloc(page))
 		u |= 1 &lt;&lt; KPF_VMALLOC;
<span class="p_add">+	if (PageTable(page))</span>
<span class="p_add">+		u |= 1 &lt;&lt; KPF_PGTABLE;</span>
 
 	if (page_is_idle(page))
 		u |= 1 &lt;&lt; KPF_IDLE;
<span class="p_header">diff --git a/include/linux/mm.h b/include/linux/mm.h</span>
<span class="p_header">index ad06d42adb1a..7a15042d6828 100644</span>
<span class="p_header">--- a/include/linux/mm.h</span>
<span class="p_header">+++ b/include/linux/mm.h</span>
<span class="p_chunk">@@ -1829,6 +1829,7 @@</span> <span class="p_context"> static inline bool pgtable_page_ctor(struct page *page)</span>
 {
 	if (!ptlock_init(page))
 		return false;
<span class="p_add">+	__SetPageTable(page);</span>
 	inc_zone_page_state(page, NR_PAGETABLE);
 	return true;
 }
<span class="p_chunk">@@ -1836,6 +1837,7 @@</span> <span class="p_context"> static inline bool pgtable_page_ctor(struct page *page)</span>
 static inline void pgtable_page_dtor(struct page *page)
 {
 	pte_lock_deinit(page);
<span class="p_add">+	__ClearPageTable(page);</span>
 	dec_zone_page_state(page, NR_PAGETABLE);
 }
 
<span class="p_header">diff --git a/include/linux/page-flags.h b/include/linux/page-flags.h</span>
<span class="p_header">index 1503d314bb3d..aa5c8c1c6d38 100644</span>
<span class="p_header">--- a/include/linux/page-flags.h</span>
<span class="p_header">+++ b/include/linux/page-flags.h</span>
<span class="p_chunk">@@ -644,6 +644,7 @@</span> <span class="p_context"> PAGEFLAG_FALSE(DoubleMap)</span>
 #define PG_balloon	0x00000100
 #define PG_kmemcg	0x00000200
 #define PG_vmalloc	0x00000400
<span class="p_add">+#define PG_table	0x00000800</span>
 
 #define PageType(page, flag)						\
 	((page-&gt;page_type &amp; (PAGE_TYPE_BASE | flag)) == PAGE_TYPE_BASE)
<span class="p_chunk">@@ -687,6 +688,11 @@</span> <span class="p_context"> PAGE_TYPE_OPS(Kmemcg, kmemcg)</span>
  */
 PAGE_TYPE_OPS(Vmalloc, vmalloc)
 
<span class="p_add">+/*</span>
<span class="p_add">+ * Marks pages in use as page tables.</span>
<span class="p_add">+ */</span>
<span class="p_add">+PAGE_TYPE_OPS(Table, table)</span>
<span class="p_add">+</span>
 extern bool is_free_buddy_page(struct page *page);
 
 __PAGEFLAG(Isolated, isolated, PF_ANY);
<span class="p_header">diff --git a/include/uapi/linux/kernel-page-flags.h b/include/uapi/linux/kernel-page-flags.h</span>
<span class="p_header">index 5f1735ff05b3..3c51d8bf8b7b 100644</span>
<span class="p_header">--- a/include/uapi/linux/kernel-page-flags.h</span>
<span class="p_header">+++ b/include/uapi/linux/kernel-page-flags.h</span>
<span class="p_chunk">@@ -36,5 +36,6 @@</span> <span class="p_context"></span>
 #define KPF_ZERO_PAGE		24
 #define KPF_IDLE		25
 #define KPF_VMALLOC		26
<span class="p_add">+#define KPF_PGTABLE		27</span>
 
 #endif /* _UAPILINUX_KERNEL_PAGE_FLAGS_H */
<span class="p_header">diff --git a/tools/vm/page-types.c b/tools/vm/page-types.c</span>
<span class="p_header">index 116f59eff5e2..bbb992694f05 100644</span>
<span class="p_header">--- a/tools/vm/page-types.c</span>
<span class="p_header">+++ b/tools/vm/page-types.c</span>
<span class="p_chunk">@@ -132,6 +132,7 @@</span> <span class="p_context"> static const char * const page_flag_names[] = {</span>
 	[KPF_THP]		= &quot;t:thp&quot;,
 	[KPF_BALLOON]		= &quot;o:balloon&quot;,
 	[KPF_VMALLOC]		= &quot;V:vmalloc&quot;,
<span class="p_add">+	[KPF_PGTABLE]		= &quot;g:pgtable&quot;,</span>
 	[KPF_ZERO_PAGE]		= &quot;z:zero_page&quot;,
 	[KPF_IDLE]              = &quot;i:idle_page&quot;,
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



