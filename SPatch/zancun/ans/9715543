
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,04/10] x86/mm: Pass flush_tlb_info to flush_tlb_others() etc - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,04/10] x86/mm: Pass flush_tlb_info to flush_tlb_others() etc</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=125831">Andrew Lutomirski</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>May 7, 2017, 12:38 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;51ec06f28360a1cc505649acaf0c9db905824115.1494160201.git.luto@kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9715543/mbox/"
   >mbox</a>
|
   <a href="/patch/9715543/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9715543/">/patch/9715543/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	5864460380 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun,  7 May 2017 22:07:42 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 470DC2236A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun,  7 May 2017 22:07:42 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 37ED322B26; Sun,  7 May 2017 22:07:42 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3CA702236A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun,  7 May 2017 22:07:41 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932148AbdEGWGx (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 7 May 2017 18:06:53 -0400
Received: from mail.kernel.org ([198.145.29.136]:51066 &quot;EHLO mail.kernel.org&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1757100AbdEGWGW (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 7 May 2017 18:06:22 -0400
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 99827203E1;
	Sun,  7 May 2017 12:39:04 +0000 (UTC)
Received: from localhost (118-171-175-29.dynamic-ip.hinet.net
	[118.171.175.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256
	bits)) (No client certificate requested)
	by mail.kernel.org (Postfix) with ESMTPSA id 845A6203DB;
	Sun,  7 May 2017 12:39:02 +0000 (UTC)
From: Andy Lutomirski &lt;luto@kernel.org&gt;
To: X86 ML &lt;x86@kernel.org&gt;
Cc: &quot;linux-kernel@vger.kernel.org&quot; &lt;linux-kernel@vger.kernel.org&gt;,
	Borislav Petkov &lt;bpetkov@suse.de&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;, Mel Gorman &lt;mgorman@suse.de&gt;,
	&quot;linux-mm@kvack.org&quot; &lt;linux-mm@kvack.org&gt;,
	Andy Lutomirski &lt;luto@kernel.org&gt;, Rik van Riel &lt;riel@redhat.com&gt;,
	Dave Hansen &lt;dave.hansen@intel.com&gt;,
	Nadav Amit &lt;namit@vmware.com&gt;, Michal Hocko &lt;mhocko@suse.com&gt;,
	Sasha Levin &lt;sasha.levin@oracle.com&gt;
Subject: [RFC 04/10] x86/mm: Pass flush_tlb_info to flush_tlb_others() etc
Date: Sun,  7 May 2017 05:38:33 -0700
Message-Id: &lt;51ec06f28360a1cc505649acaf0c9db905824115.1494160201.git.luto@kernel.org&gt;
X-Mailer: git-send-email 2.9.3
In-Reply-To: &lt;cover.1494160201.git.luto@kernel.org&gt;
References: &lt;cover.1494160201.git.luto@kernel.org&gt;
In-Reply-To: &lt;cover.1494160201.git.luto@kernel.org&gt;
References: &lt;cover.1494160201.git.luto@kernel.org&gt;
X-Virus-Scanned: ClamAV using ClamSMTP
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=125831">Andrew Lutomirski</a> - May 7, 2017, 12:38 p.m.</div>
<pre class="content">
Rather than passing all the contents of flush_tlb_info to
flush_tlb_others(), pass a pointer to the structure directly. For
consistency, this also removes the unnecessary cpu parameter from
uv_flush_tlb_others() to make its signature match the other
*flush_tlb_others() functions.

This serves two purposes:

 - It will dramatically simplify future patches that change struct
   flush_tlb_info, which I&#39;m planning to do.

 - struct flush_tlb_info is an adequate description of what to do
   for a local flush, too, so by reusing it we can remove duplicated
   code between local and remove flushes in a future patch.

Cc: Rik van Riel &lt;riel@redhat.com&gt;
Cc: Dave Hansen &lt;dave.hansen@intel.com&gt;
Cc: Nadav Amit &lt;namit@vmware.com&gt;
Cc: Michal Hocko &lt;mhocko@suse.com&gt;
Cc: Sasha Levin &lt;sasha.levin@oracle.com&gt;
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;
<span class="signed-off-by">Signed-off-by: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
---
 arch/x86/include/asm/paravirt.h       |  6 ++--
 arch/x86/include/asm/paravirt_types.h |  5 ++-
 arch/x86/include/asm/tlbflush.h       | 19 ++++++-----
 arch/x86/include/asm/uv/uv.h          |  9 ++---
 arch/x86/mm/tlb.c                     | 64 +++++++++++++++++------------------
 arch/x86/platform/uv/tlb_uv.c         |  8 ++---
 arch/x86/xen/mmu.c                    | 10 +++---
 7 files changed, 58 insertions(+), 63 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=55071">Nadav Amit</a> - May 11, 2017, 8:01 p.m.</div>
<pre class="content">
<span class="quote">&gt; On May 7, 2017, at 5:38 AM, Andy Lutomirski &lt;luto@kernel.org&gt; wrote:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; @@ -243,15 +237,15 @@ static void flush_tlb_func(void *info)</span>
<span class="quote">&gt; 		return;</span>
<span class="quote">&gt; 	}</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -	if (f-&gt;flush_end == TLB_FLUSH_ALL) {</span>
<span class="quote">&gt; +	if (f-&gt;end == TLB_FLUSH_ALL) {</span>
<span class="quote">&gt; 		local_flush_tlb();</span>
<span class="quote">&gt; 		trace_tlb_flush(TLB_REMOTE_SHOOTDOWN, TLB_FLUSH_ALL);</span>
<span class="quote">&gt; 	} else {</span>
<span class="quote">&gt; 		unsigned long addr;</span>
<span class="quote">&gt; 		unsigned long nr_pages =</span>
<span class="quote">&gt; -			(f-&gt;flush_end - f-&gt;flush_start) / PAGE_SIZE;</span>
<span class="quote">&gt; -		addr = f-&gt;flush_start;</span>
<span class="quote">&gt; -		while (addr &lt; f-&gt;flush_end) {</span>
<span class="quote">&gt; +			(f-&gt;end - f-&gt;start) / PAGE_SIZE;</span>
<span class="quote">&gt; +		addr = f-&gt;start;</span>
<span class="quote">&gt; +		while (addr &lt; f-&gt;end) {</span>
<span class="quote">&gt; 			__flush_tlb_single(addr);</span>
<span class="quote">&gt; 			addr += PAGE_SIZE;</span>
<span class="quote">&gt; 		}</span>
<span class="quote">&gt; @@ -260,33 +254,27 @@ static void flush_tlb_func(void *info)</span>
<span class="quote">&gt; }</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; void native_flush_tlb_others(const struct cpumask *cpumask,</span>
<span class="quote">&gt; -				 struct mm_struct *mm, unsigned long start,</span>
<span class="quote">&gt; -				 unsigned long end)</span>
<span class="quote">&gt; +			     const struct flush_tlb_info *info)</span>
<span class="quote">&gt; {</span>
<span class="quote">&gt; -	struct flush_tlb_info info;</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	info.flush_mm = mm;</span>
<span class="quote">&gt; -	info.flush_start = start;</span>
<span class="quote">&gt; -	info.flush_end = end;</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; 	count_vm_tlb_event(NR_TLB_REMOTE_FLUSH);</span>
<span class="quote">&gt; -	if (end == TLB_FLUSH_ALL)</span>
<span class="quote">&gt; +	if (info-&gt;end == TLB_FLUSH_ALL)</span>
<span class="quote">&gt; 		trace_tlb_flush(TLB_REMOTE_SEND_IPI, TLB_FLUSH_ALL);</span>
<span class="quote">&gt; 	else</span>
<span class="quote">&gt; 		trace_tlb_flush(TLB_REMOTE_SEND_IPI,</span>
<span class="quote">&gt; -				(end - start) &gt;&gt; PAGE_SHIFT);</span>
<span class="quote">&gt; +				(info-&gt;end - info-&gt;start) &gt;&gt; PAGE_SHIFT);</span>

I know it is stupid, but since you already change the code, can you make
flush_tlb_func() and native_flush_tlb_others() consistent in the way
they compute the number of pages? (either ‘&gt;&gt; PAGE_SHIFT’ or ‘/ PAGE_SIZE’)?

On a different topic: I do not like or actually understand why TLBSTATE_OK
is defined as 1 and not 0. The very least it would generate a better code.

Thanks,
Nadav
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=125831">Andrew Lutomirski</a> - May 12, 2017, 3:41 a.m.</div>
<pre class="content">
On Thu, May 11, 2017 at 1:01 PM, Nadav Amit &lt;nadav.amit@gmail.com&gt; wrote:
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; On May 7, 2017, at 5:38 AM, Andy Lutomirski &lt;luto@kernel.org&gt; wrote:</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; @@ -243,15 +237,15 @@ static void flush_tlb_func(void *info)</span>
<span class="quote">&gt;&gt;               return;</span>
<span class="quote">&gt;&gt;       }</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; -     if (f-&gt;flush_end == TLB_FLUSH_ALL) {</span>
<span class="quote">&gt;&gt; +     if (f-&gt;end == TLB_FLUSH_ALL) {</span>
<span class="quote">&gt;&gt;               local_flush_tlb();</span>
<span class="quote">&gt;&gt;               trace_tlb_flush(TLB_REMOTE_SHOOTDOWN, TLB_FLUSH_ALL);</span>
<span class="quote">&gt;&gt;       } else {</span>
<span class="quote">&gt;&gt;               unsigned long addr;</span>
<span class="quote">&gt;&gt;               unsigned long nr_pages =</span>
<span class="quote">&gt;&gt; -                     (f-&gt;flush_end - f-&gt;flush_start) / PAGE_SIZE;</span>
<span class="quote">&gt;&gt; -             addr = f-&gt;flush_start;</span>
<span class="quote">&gt;&gt; -             while (addr &lt; f-&gt;flush_end) {</span>
<span class="quote">&gt;&gt; +                     (f-&gt;end - f-&gt;start) / PAGE_SIZE;</span>
<span class="quote">&gt;&gt; +             addr = f-&gt;start;</span>
<span class="quote">&gt;&gt; +             while (addr &lt; f-&gt;end) {</span>
<span class="quote">&gt;&gt;                       __flush_tlb_single(addr);</span>
<span class="quote">&gt;&gt;                       addr += PAGE_SIZE;</span>
<span class="quote">&gt;&gt;               }</span>
<span class="quote">&gt;&gt; @@ -260,33 +254,27 @@ static void flush_tlb_func(void *info)</span>
<span class="quote">&gt;&gt; }</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; void native_flush_tlb_others(const struct cpumask *cpumask,</span>
<span class="quote">&gt;&gt; -                              struct mm_struct *mm, unsigned long start,</span>
<span class="quote">&gt;&gt; -                              unsigned long end)</span>
<span class="quote">&gt;&gt; +                          const struct flush_tlb_info *info)</span>
<span class="quote">&gt;&gt; {</span>
<span class="quote">&gt;&gt; -     struct flush_tlb_info info;</span>
<span class="quote">&gt;&gt; -</span>
<span class="quote">&gt;&gt; -     info.flush_mm = mm;</span>
<span class="quote">&gt;&gt; -     info.flush_start = start;</span>
<span class="quote">&gt;&gt; -     info.flush_end = end;</span>
<span class="quote">&gt;&gt; -</span>
<span class="quote">&gt;&gt;       count_vm_tlb_event(NR_TLB_REMOTE_FLUSH);</span>
<span class="quote">&gt;&gt; -     if (end == TLB_FLUSH_ALL)</span>
<span class="quote">&gt;&gt; +     if (info-&gt;end == TLB_FLUSH_ALL)</span>
<span class="quote">&gt;&gt;               trace_tlb_flush(TLB_REMOTE_SEND_IPI, TLB_FLUSH_ALL);</span>
<span class="quote">&gt;&gt;       else</span>
<span class="quote">&gt;&gt;               trace_tlb_flush(TLB_REMOTE_SEND_IPI,</span>
<span class="quote">&gt;&gt; -                             (end - start) &gt;&gt; PAGE_SHIFT);</span>
<span class="quote">&gt;&gt; +                             (info-&gt;end - info-&gt;start) &gt;&gt; PAGE_SHIFT);</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; I know it is stupid, but since you already change the code, can you make</span>
<span class="quote">&gt; flush_tlb_func() and native_flush_tlb_others() consistent in the way</span>
<span class="quote">&gt; they compute the number of pages? (either ‘&gt;&gt; PAGE_SHIFT’ or ‘/ PAGE_SIZE’)?</span>

I added this to the queue.
<span class="quote">
&gt;</span>
<span class="quote">&gt; On a different topic: I do not like or actually understand why TLBSTATE_OK</span>
<span class="quote">&gt; is defined as 1 and not 0. The very least it would generate a better code.</span>

Me neither.  The value 0 can happen too, e.g. for init_mm.  Maybe I&#39;ll
clean that up when I&#39;m all done with this stuff.
<span class="quote">
&gt;</span>
<span class="quote">&gt; Thanks,</span>
<span class="quote">&gt; Nadav</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/paravirt.h b/arch/x86/include/asm/paravirt.h</span>
<span class="p_header">index 55fa56fe4e45..9a15739d9f4b 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/paravirt.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/paravirt.h</span>
<span class="p_chunk">@@ -312,11 +312,9 @@</span> <span class="p_context"> static inline void __flush_tlb_single(unsigned long addr)</span>
 }
 
 static inline void flush_tlb_others(const struct cpumask *cpumask,
<span class="p_del">-				    struct mm_struct *mm,</span>
<span class="p_del">-				    unsigned long start,</span>
<span class="p_del">-				    unsigned long end)</span>
<span class="p_add">+				    const struct flush_tlb_info *info)</span>
 {
<span class="p_del">-	PVOP_VCALL4(pv_mmu_ops.flush_tlb_others, cpumask, mm, start, end);</span>
<span class="p_add">+	PVOP_VCALL2(pv_mmu_ops.flush_tlb_others, cpumask, info);</span>
 }
 
 static inline int paravirt_pgd_alloc(struct mm_struct *mm)
<span class="p_header">diff --git a/arch/x86/include/asm/paravirt_types.h b/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_header">index 7465d6fe336f..cb976bab6299 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_chunk">@@ -51,6 +51,7 @@</span> <span class="p_context"> struct mm_struct;</span>
 struct desc_struct;
 struct task_struct;
 struct cpumask;
<span class="p_add">+struct flush_tlb_info;</span>
 
 /*
  * Wrapper type for pointers to code which uses the non-standard
<span class="p_chunk">@@ -223,9 +224,7 @@</span> <span class="p_context"> struct pv_mmu_ops {</span>
 	void (*flush_tlb_kernel)(void);
 	void (*flush_tlb_single)(unsigned long addr);
 	void (*flush_tlb_others)(const struct cpumask *cpus,
<span class="p_del">-				 struct mm_struct *mm,</span>
<span class="p_del">-				 unsigned long start,</span>
<span class="p_del">-				 unsigned long end);</span>
<span class="p_add">+				 const struct flush_tlb_info *info);</span>
 
 	/* Hooks for allocating and freeing a pagetable top-level */
 	int  (*pgd_alloc)(struct mm_struct *mm);
<span class="p_header">diff --git a/arch/x86/include/asm/tlbflush.h b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">index df71e3f2fe4d..6d236c1aff89 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_chunk">@@ -220,12 +220,18 @@</span> <span class="p_context"> static inline void __flush_tlb_one(unsigned long addr)</span>
  *  - flush_tlb_page(vma, vmaddr) flushes one page
  *  - flush_tlb_range(vma, start, end) flushes a range of pages
  *  - flush_tlb_kernel_range(start, end) flushes a range of kernel pages
<span class="p_del">- *  - flush_tlb_others(cpumask, mm, start, end) flushes TLBs on other cpus</span>
<span class="p_add">+ *  - flush_tlb_others(cpumask, info) flushes TLBs on other cpus</span>
  *
  * ..but the i386 has somewhat limited tlb flushing capabilities,
  * and page-granular flushes are available only on i486 and up.
  */
 
<span class="p_add">+struct flush_tlb_info {</span>
<span class="p_add">+	struct mm_struct *mm;</span>
<span class="p_add">+	unsigned long start;</span>
<span class="p_add">+	unsigned long end;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 #ifndef CONFIG_SMP
 
 /* &quot;_up&quot; is for UniProcessor.
<span class="p_chunk">@@ -279,9 +285,7 @@</span> <span class="p_context"> static inline void flush_tlb_mm_range(struct mm_struct *mm,</span>
 }
 
 static inline void native_flush_tlb_others(const struct cpumask *cpumask,
<span class="p_del">-					   struct mm_struct *mm,</span>
<span class="p_del">-					   unsigned long start,</span>
<span class="p_del">-					   unsigned long end)</span>
<span class="p_add">+					   const struct flush_tlb_info *info)</span>
 {
 }
 
<span class="p_chunk">@@ -317,8 +321,7 @@</span> <span class="p_context"> static inline void flush_tlb_page(struct vm_area_struct *vma, unsigned long a)</span>
 }
 
 void native_flush_tlb_others(const struct cpumask *cpumask,
<span class="p_del">-				struct mm_struct *mm,</span>
<span class="p_del">-				unsigned long start, unsigned long end);</span>
<span class="p_add">+			     const struct flush_tlb_info *info);</span>
 
 #define TLBSTATE_OK	1
 #define TLBSTATE_LAZY	2
<span class="p_chunk">@@ -340,8 +343,8 @@</span> <span class="p_context"> extern void arch_tlbbatch_flush(struct arch_tlbflush_unmap_batch *batch);</span>
 #endif	/* SMP */
 
 #ifndef CONFIG_PARAVIRT
<span class="p_del">-#define flush_tlb_others(mask, mm, start, end)	\</span>
<span class="p_del">-	native_flush_tlb_others(mask, mm, start, end)</span>
<span class="p_add">+#define flush_tlb_others(mask, info)	\</span>
<span class="p_add">+	native_flush_tlb_others(mask, info)</span>
 #endif
 
 #endif /* _ASM_X86_TLBFLUSH_H */
<span class="p_header">diff --git a/arch/x86/include/asm/uv/uv.h b/arch/x86/include/asm/uv/uv.h</span>
<span class="p_header">index 6686820feae9..d2db4517930c 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/uv/uv.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/uv/uv.h</span>
<span class="p_chunk">@@ -15,10 +15,7 @@</span> <span class="p_context"> extern void uv_cpu_init(void);</span>
 extern void uv_nmi_init(void);
 extern void uv_system_init(void);
 extern const struct cpumask *uv_flush_tlb_others(const struct cpumask *cpumask,
<span class="p_del">-						 struct mm_struct *mm,</span>
<span class="p_del">-						 unsigned long start,</span>
<span class="p_del">-						 unsigned long end,</span>
<span class="p_del">-						 unsigned int cpu);</span>
<span class="p_add">+						 const struct flush_tlb_info *info);</span>
 
 #else	/* X86_UV */
 
<span class="p_chunk">@@ -28,8 +25,8 @@</span> <span class="p_context"> static inline int is_uv_hubless(void)	{ return 0; }</span>
 static inline void uv_cpu_init(void)	{ }
 static inline void uv_system_init(void)	{ }
 static inline const struct cpumask *
<span class="p_del">-uv_flush_tlb_others(const struct cpumask *cpumask, struct mm_struct *mm,</span>
<span class="p_del">-		    unsigned long start, unsigned long end, unsigned int cpu)</span>
<span class="p_add">+uv_flush_tlb_others(const struct cpumask *cpumask,</span>
<span class="p_add">+		    const struct flush_tlb_info *info)</span>
 { return cpumask; }
 
 #endif	/* X86_UV */
<span class="p_header">diff --git a/arch/x86/mm/tlb.c b/arch/x86/mm/tlb.c</span>
<span class="p_header">index 743e4c6b4529..776469cc54e0 100644</span>
<span class="p_header">--- a/arch/x86/mm/tlb.c</span>
<span class="p_header">+++ b/arch/x86/mm/tlb.c</span>
<span class="p_chunk">@@ -30,12 +30,6 @@</span> <span class="p_context"></span>
 
 #ifdef CONFIG_SMP
 
<span class="p_del">-struct flush_tlb_info {</span>
<span class="p_del">-	struct mm_struct *flush_mm;</span>
<span class="p_del">-	unsigned long flush_start;</span>
<span class="p_del">-	unsigned long flush_end;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
 /*
  * We cannot call mmdrop() because we are in interrupt context,
  * instead update mm-&gt;cpu_vm_mask.
<span class="p_chunk">@@ -229,11 +223,11 @@</span> <span class="p_context"> void switch_mm_irqs_off(struct mm_struct *prev, struct mm_struct *next,</span>
  */
 static void flush_tlb_func(void *info)
 {
<span class="p_del">-	struct flush_tlb_info *f = info;</span>
<span class="p_add">+	const struct flush_tlb_info *f = info;</span>
 
 	inc_irq_stat(irq_tlb_count);
 
<span class="p_del">-	if (f-&gt;flush_mm &amp;&amp; f-&gt;flush_mm != this_cpu_read(cpu_tlbstate.active_mm))</span>
<span class="p_add">+	if (f-&gt;mm &amp;&amp; f-&gt;mm != this_cpu_read(cpu_tlbstate.active_mm))</span>
 		return;
 
 	count_vm_tlb_event(NR_TLB_REMOTE_FLUSH_RECEIVED);
<span class="p_chunk">@@ -243,15 +237,15 @@</span> <span class="p_context"> static void flush_tlb_func(void *info)</span>
 		return;
 	}
 
<span class="p_del">-	if (f-&gt;flush_end == TLB_FLUSH_ALL) {</span>
<span class="p_add">+	if (f-&gt;end == TLB_FLUSH_ALL) {</span>
 		local_flush_tlb();
 		trace_tlb_flush(TLB_REMOTE_SHOOTDOWN, TLB_FLUSH_ALL);
 	} else {
 		unsigned long addr;
 		unsigned long nr_pages =
<span class="p_del">-			(f-&gt;flush_end - f-&gt;flush_start) / PAGE_SIZE;</span>
<span class="p_del">-		addr = f-&gt;flush_start;</span>
<span class="p_del">-		while (addr &lt; f-&gt;flush_end) {</span>
<span class="p_add">+			(f-&gt;end - f-&gt;start) / PAGE_SIZE;</span>
<span class="p_add">+		addr = f-&gt;start;</span>
<span class="p_add">+		while (addr &lt; f-&gt;end) {</span>
 			__flush_tlb_single(addr);
 			addr += PAGE_SIZE;
 		}
<span class="p_chunk">@@ -260,33 +254,27 @@</span> <span class="p_context"> static void flush_tlb_func(void *info)</span>
 }
 
 void native_flush_tlb_others(const struct cpumask *cpumask,
<span class="p_del">-				 struct mm_struct *mm, unsigned long start,</span>
<span class="p_del">-				 unsigned long end)</span>
<span class="p_add">+			     const struct flush_tlb_info *info)</span>
 {
<span class="p_del">-	struct flush_tlb_info info;</span>
<span class="p_del">-</span>
<span class="p_del">-	info.flush_mm = mm;</span>
<span class="p_del">-	info.flush_start = start;</span>
<span class="p_del">-	info.flush_end = end;</span>
<span class="p_del">-</span>
 	count_vm_tlb_event(NR_TLB_REMOTE_FLUSH);
<span class="p_del">-	if (end == TLB_FLUSH_ALL)</span>
<span class="p_add">+	if (info-&gt;end == TLB_FLUSH_ALL)</span>
 		trace_tlb_flush(TLB_REMOTE_SEND_IPI, TLB_FLUSH_ALL);
 	else
 		trace_tlb_flush(TLB_REMOTE_SEND_IPI,
<span class="p_del">-				(end - start) &gt;&gt; PAGE_SHIFT);</span>
<span class="p_add">+				(info-&gt;end - info-&gt;start) &gt;&gt; PAGE_SHIFT);</span>
 
 	if (is_uv_system()) {
 		unsigned int cpu;
 
 		cpu = smp_processor_id();
<span class="p_del">-		cpumask = uv_flush_tlb_others(cpumask, mm, start, end, cpu);</span>
<span class="p_add">+		cpumask = uv_flush_tlb_others(cpumask, info);</span>
 		if (cpumask)
 			smp_call_function_many(cpumask, flush_tlb_func,
<span class="p_del">-								&amp;info, 1);</span>
<span class="p_add">+					       (void *)info, 1);</span>
 		return;
 	}
<span class="p_del">-	smp_call_function_many(cpumask, flush_tlb_func, &amp;info, 1);</span>
<span class="p_add">+	smp_call_function_many(cpumask, flush_tlb_func,</span>
<span class="p_add">+			       (void *)info, 1);</span>
 }
 
 /*
<span class="p_chunk">@@ -305,6 +293,7 @@</span> <span class="p_context"> void flush_tlb_mm_range(struct mm_struct *mm, unsigned long start,</span>
 				unsigned long end, unsigned long vmflag)
 {
 	unsigned long addr;
<span class="p_add">+	struct flush_tlb_info info;</span>
 	/* do a global flush by default */
 	unsigned long base_pages_to_flush = TLB_FLUSH_ALL;
 
<span class="p_chunk">@@ -347,15 +336,20 @@</span> <span class="p_context"> void flush_tlb_mm_range(struct mm_struct *mm, unsigned long start,</span>
 	}
 	trace_tlb_flush(TLB_LOCAL_MM_SHOOTDOWN, base_pages_to_flush);
 out:
<span class="p_add">+	info.mm = mm;</span>
 	if (base_pages_to_flush == TLB_FLUSH_ALL) {
<span class="p_del">-		start = 0UL;</span>
<span class="p_del">-		end = TLB_FLUSH_ALL;</span>
<span class="p_add">+		info.start = 0UL;</span>
<span class="p_add">+		info.end = TLB_FLUSH_ALL;</span>
<span class="p_add">+	} else {</span>
<span class="p_add">+		info.start = start;</span>
<span class="p_add">+		info.end = end;</span>
 	}
 	if (cpumask_any_but(mm_cpumask(mm), smp_processor_id()) &lt; nr_cpu_ids)
<span class="p_del">-		flush_tlb_others(mm_cpumask(mm), mm, start, end);</span>
<span class="p_add">+		flush_tlb_others(mm_cpumask(mm), &amp;info);</span>
 	preempt_enable();
 }
 
<span class="p_add">+</span>
 static void do_flush_tlb_all(void *info)
 {
 	count_vm_tlb_event(NR_TLB_REMOTE_FLUSH_RECEIVED);
<span class="p_chunk">@@ -376,7 +370,7 @@</span> <span class="p_context"> static void do_kernel_range_flush(void *info)</span>
 	unsigned long addr;
 
 	/* flush range by one by one &#39;invlpg&#39; */
<span class="p_del">-	for (addr = f-&gt;flush_start; addr &lt; f-&gt;flush_end; addr += PAGE_SIZE)</span>
<span class="p_add">+	for (addr = f-&gt;start; addr &lt; f-&gt;end; addr += PAGE_SIZE)</span>
 		__flush_tlb_single(addr);
 }
 
<span class="p_chunk">@@ -389,14 +383,20 @@</span> <span class="p_context"> void flush_tlb_kernel_range(unsigned long start, unsigned long end)</span>
 		on_each_cpu(do_flush_tlb_all, NULL, 1);
 	} else {
 		struct flush_tlb_info info;
<span class="p_del">-		info.flush_start = start;</span>
<span class="p_del">-		info.flush_end = end;</span>
<span class="p_add">+		info.start = start;</span>
<span class="p_add">+		info.end = end;</span>
 		on_each_cpu(do_kernel_range_flush, &amp;info, 1);
 	}
 }
 
 void arch_tlbbatch_flush(struct arch_tlbflush_unmap_batch *batch)
 {
<span class="p_add">+	struct flush_tlb_info info = {</span>
<span class="p_add">+		.mm = NULL,</span>
<span class="p_add">+		.start = 0UL,</span>
<span class="p_add">+		.end = TLB_FLUSH_ALL,</span>
<span class="p_add">+	};</span>
<span class="p_add">+</span>
 	int cpu = get_cpu();
 
 	if (cpumask_test_cpu(cpu, &amp;batch-&gt;cpumask)) {
<span class="p_chunk">@@ -406,7 +406,7 @@</span> <span class="p_context"> void arch_tlbbatch_flush(struct arch_tlbflush_unmap_batch *batch)</span>
 	}
 
 	if (cpumask_any_but(&amp;batch-&gt;cpumask, cpu) &lt; nr_cpu_ids)
<span class="p_del">-		flush_tlb_others(&amp;batch-&gt;cpumask, NULL, 0, TLB_FLUSH_ALL);</span>
<span class="p_add">+		flush_tlb_others(&amp;batch-&gt;cpumask, &amp;info);</span>
 	cpumask_clear(&amp;batch-&gt;cpumask);
 
 	put_cpu();
<span class="p_header">diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">index f25982cdff90..018af012e646 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_chunk">@@ -1109,11 +1109,9 @@</span> <span class="p_context"> static int set_distrib_bits(struct cpumask *flush_mask, struct bau_control *bcp,</span>
  * done.  The returned pointer is valid till preemption is re-enabled.
  */
 const struct cpumask *uv_flush_tlb_others(const struct cpumask *cpumask,
<span class="p_del">-						struct mm_struct *mm,</span>
<span class="p_del">-						unsigned long start,</span>
<span class="p_del">-						unsigned long end,</span>
<span class="p_del">-						unsigned int cpu)</span>
<span class="p_add">+					  const struct flush_tlb_info *info)</span>
 {
<span class="p_add">+	unsigned int cpu = smp_processor_id();</span>
 	int locals = 0;
 	int remotes = 0;
 	int hubs = 0;
<span class="p_chunk">@@ -1170,7 +1168,7 @@</span> <span class="p_context"> const struct cpumask *uv_flush_tlb_others(const struct cpumask *cpumask,</span>
 
 	record_send_statistics(stat, locals, hubs, remotes, bau_desc);
 
<span class="p_del">-	if (!end || (end - start) &lt;= PAGE_SIZE)</span>
<span class="p_add">+	if (!info-&gt;end || (info-&gt;end - info-&gt;start) &lt;= PAGE_SIZE)</span>
 		bau_desc-&gt;payload.address = start;
 	else
 		bau_desc-&gt;payload.address = TLB_FLUSH_ALL;
<span class="p_header">diff --git a/arch/x86/xen/mmu.c b/arch/x86/xen/mmu.c</span>
<span class="p_header">index f226038a39ca..894daefd6958 100644</span>
<span class="p_header">--- a/arch/x86/xen/mmu.c</span>
<span class="p_header">+++ b/arch/x86/xen/mmu.c</span>
<span class="p_chunk">@@ -1427,8 +1427,7 @@</span> <span class="p_context"> static void xen_flush_tlb_single(unsigned long addr)</span>
 }
 
 static void xen_flush_tlb_others(const struct cpumask *cpus,
<span class="p_del">-				 struct mm_struct *mm, unsigned long start,</span>
<span class="p_del">-				 unsigned long end)</span>
<span class="p_add">+				 const struct flush_tlb_info *info)</span>
 {
 	struct {
 		struct mmuext_op op;
<span class="p_chunk">@@ -1440,7 +1439,7 @@</span> <span class="p_context"> static void xen_flush_tlb_others(const struct cpumask *cpus,</span>
 	} *args;
 	struct multicall_space mcs;
 
<span class="p_del">-	trace_xen_mmu_flush_tlb_others(cpus, mm, start, end);</span>
<span class="p_add">+	trace_xen_mmu_flush_tlb_others(cpus, info-&gt;mm, info-&gt;start, info-&gt;end);</span>
 
 	if (cpumask_empty(cpus))
 		return;		/* nothing to do */
<span class="p_chunk">@@ -1454,9 +1453,10 @@</span> <span class="p_context"> static void xen_flush_tlb_others(const struct cpumask *cpus,</span>
 	cpumask_clear_cpu(smp_processor_id(), to_cpumask(args-&gt;mask));
 
 	args-&gt;op.cmd = MMUEXT_TLB_FLUSH_MULTI;
<span class="p_del">-	if (end != TLB_FLUSH_ALL &amp;&amp; (end - start) &lt;= PAGE_SIZE) {</span>
<span class="p_add">+	if (info-&gt;end != TLB_FLUSH_ALL &amp;&amp;</span>
<span class="p_add">+	    (info-&gt;end - info-&gt;start) &lt;= PAGE_SIZE) {</span>
 		args-&gt;op.cmd = MMUEXT_INVLPG_MULTI;
<span class="p_del">-		args-&gt;op.arg1.linear_addr = start;</span>
<span class="p_add">+		args-&gt;op.arg1.linear_addr = info-&gt;start;</span>
 	}
 
 	MULTI_mmuext_op(mcs.mc, &amp;args-&gt;op, 1, NULL, DOMID_SELF);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



