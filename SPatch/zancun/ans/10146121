
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2] vhost: remove unused lock check flag in vhost_dev_cleanup() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2] vhost: remove unused lock check flag in vhost_dev_cleanup()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=178087">=?UTF-8?B?5aS35YiZKENhc3Bhcik=?=</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 5, 2018, 9:39 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;7080310ed350c020ee4c7b8f2b637b1a21fe6d7d.1515144851.git.jinli.zjl@alibaba-inc.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10146121/mbox/"
   >mbox</a>
|
   <a href="/patch/10146121/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10146121/">/patch/10146121/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	B3DF5601A1 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  5 Jan 2018 09:39:31 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9FDD3223A5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  5 Jan 2018 09:39:31 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 94737288B2; Fri,  5 Jan 2018 09:39:31 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, RCVD_IN_DNSWL_HI,
	UNPARSEABLE_RELAY autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 928EA223A5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  5 Jan 2018 09:39:28 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751416AbeAEJjX (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 5 Jan 2018 04:39:23 -0500
Received: from out0-237.mail.aliyun.com ([140.205.0.237]:38991 &quot;EHLO
	out0-237.mail.aliyun.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751262AbeAEJjV (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 5 Jan 2018 04:39:21 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=alibaba-inc.com; s=default;
	t=1515145154; h=From:To:Subject:Date:Message-Id;
	bh=+YWc/VCtodauJDjKm4y4vI3jIBTQ3EjQj6tG6n9VVWs=;
	b=A3eUvE5KiEIGwUGxBbPJ1cH9bCxyAiRhkIv98SpskxKGVccSXZyIz+G8K7MPcp7/+PVDilzJtoPOgckJ37Hf5LViZvem/MOl9SWp8Pu2ALjoCrY1WgytLfSLvw6Rj8N3VwhuX8CelT1KtMWJNnYDqQ7uBuJdr/oX9eamoV/5GQ4=
X-Alimail-AntiSpam: AC=PASS; BC=-1|-1; BR=01201311R151e4; CH=green;
	FP=0|-1|-1|-1|0|-1|-1|-1; HT=e02c03309;
	MF=jinli.zjl@alibaba-inc.com; NM=1; PH=DS; RN=7; SR=0;
	TI=SMTPD_---.A4dVtMJ_1515145145; 
Received: from localhost(mailfrom:jinli.zjl@alibaba-inc.com fp:42.120.74.95)
	by smtp.aliyun-inc.com(127.0.0.1); Fri, 05 Jan 2018 17:39:11 +0800
From: &quot;=?UTF-8?B?5aS35YiZKENhc3Bhcik=?=&quot; &lt;jinli.zjl@alibaba-inc.com&gt;
To: &quot;Michael S . Tsirkin&quot; &lt;mst@redhat.com&gt;, Jason Wang &lt;jasowang@redhat.com&gt;,
	Stefan Hajnoczi &lt;stefanha@redhat.com&gt;
Cc: &lt;kvm@vger.kernel.org&gt;, &lt;virtualization@lists.linux-foundation.org&gt;,
	&lt;linux-kernel@vger.kernel.org&gt;,
	&quot;=?UTF-8?B?5aS35YiZKENhc3Bhcik=?=&quot; &lt;jinli.zjl@alibaba-inc.com&gt;
Subject: [PATCH v2] vhost: remove unused lock check flag in
	vhost_dev_cleanup()
Date: Fri, 05 Jan 2018 17:39:02 +0800
Message-Id: &lt;7080310ed350c020ee4c7b8f2b637b1a21fe6d7d.1515144851.git.jinli.zjl@alibaba-inc.com&gt;
X-Mailer: git-send-email 2.15.1
In-Reply-To: &lt;57a32eb1fd105b2aacc96b7caae0d8336c010fe0.1514130393.git.jinli.zjl@alibaba-inc.com&gt;
References: &lt;57a32eb1fd105b2aacc96b7caae0d8336c010fe0.1514130393.git.jinli.zjl@alibaba-inc.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=178087">=?UTF-8?B?5aS35YiZKENhc3Bhcik=?=</a> - Jan. 5, 2018, 9:39 a.m.</div>
<pre class="content">
<span class="from">From: Caspar Zhang &lt;jinli.zjl@alibaba-inc.com&gt;</span>

In commit ea5d404655ba (&quot;vhost: fix release path lockdep checks&quot;),
Michael added a flag to check whether we should hold a lock in
vhost_dev_cleanup(), however, in commit 47283bef7ed3 (&quot;vhost: move
memory pointer to VQs&quot;), RCU operations have been replaced by
mutex, we can remove the no-longer-used `locked&#39; parameter now.
<span class="signed-off-by">
Signed-off-by: Caspar Zhang &lt;jinli.zjl@alibaba-inc.com&gt;</span>
<span class="acked-by">Acked-by: Jason Wang &lt;jasowang@redhat.com&gt;</span>
---
v1-&gt;v2: fix author name with UTF-8 characters.

 drivers/vhost/net.c   | 2 +-
 drivers/vhost/scsi.c  | 2 +-
 drivers/vhost/test.c  | 2 +-
 drivers/vhost/vhost.c | 5 ++---
 drivers/vhost/vhost.h | 2 +-
 drivers/vhost/vsock.c | 2 +-
 6 files changed, 7 insertions(+), 8 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/vhost/net.c b/drivers/vhost/net.c</span>
<span class="p_header">index c7bdeb655646..a354d8d731e3 100644</span>
<span class="p_header">--- a/drivers/vhost/net.c</span>
<span class="p_header">+++ b/drivers/vhost/net.c</span>
<span class="p_chunk">@@ -996,7 +996,7 @@</span> <span class="p_context"> static int vhost_net_release(struct inode *inode, struct file *f)</span>
 	vhost_net_stop(n, &amp;tx_sock, &amp;rx_sock);
 	vhost_net_flush(n);
 	vhost_dev_stop(&amp;n-&gt;dev);
<span class="p_del">-	vhost_dev_cleanup(&amp;n-&gt;dev, false);</span>
<span class="p_add">+	vhost_dev_cleanup(&amp;n-&gt;dev);</span>
 	vhost_net_vq_reset(n);
 	if (tx_sock)
 		sockfd_put(tx_sock);
<span class="p_header">diff --git a/drivers/vhost/scsi.c b/drivers/vhost/scsi.c</span>
<span class="p_header">index 71517b3c5558..797d08916553 100644</span>
<span class="p_header">--- a/drivers/vhost/scsi.c</span>
<span class="p_header">+++ b/drivers/vhost/scsi.c</span>
<span class="p_chunk">@@ -1420,7 +1420,7 @@</span> <span class="p_context"> static int vhost_scsi_release(struct inode *inode, struct file *f)</span>
 	mutex_unlock(&amp;vs-&gt;dev.mutex);
 	vhost_scsi_clear_endpoint(vs, &amp;t);
 	vhost_dev_stop(&amp;vs-&gt;dev);
<span class="p_del">-	vhost_dev_cleanup(&amp;vs-&gt;dev, false);</span>
<span class="p_add">+	vhost_dev_cleanup(&amp;vs-&gt;dev);</span>
 	/* Jobs can re-queue themselves in evt kick handler. Do extra flush. */
 	vhost_scsi_flush(vs);
 	kfree(vs-&gt;dev.vqs);
<span class="p_header">diff --git a/drivers/vhost/test.c b/drivers/vhost/test.c</span>
<span class="p_header">index 3cc98c07dcd3..906b8f0f19f7 100644</span>
<span class="p_header">--- a/drivers/vhost/test.c</span>
<span class="p_header">+++ b/drivers/vhost/test.c</span>
<span class="p_chunk">@@ -157,7 +157,7 @@</span> <span class="p_context"> static int vhost_test_release(struct inode *inode, struct file *f)</span>
 
 	vhost_test_stop(n, &amp;private);
 	vhost_test_flush(n);
<span class="p_del">-	vhost_dev_cleanup(&amp;n-&gt;dev, false);</span>
<span class="p_add">+	vhost_dev_cleanup(&amp;n-&gt;dev);</span>
 	/* We do an extra flush before freeing memory,
 	 * since jobs can re-queue themselves. */
 	vhost_test_flush(n);
<span class="p_header">diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c</span>
<span class="p_header">index 33ac2b186b85..014675c3d569 100644</span>
<span class="p_header">--- a/drivers/vhost/vhost.c</span>
<span class="p_header">+++ b/drivers/vhost/vhost.c</span>
<span class="p_chunk">@@ -544,7 +544,7 @@</span> <span class="p_context"> void vhost_dev_reset_owner(struct vhost_dev *dev, struct vhost_umem *umem)</span>
 {
 	int i;
 
<span class="p_del">-	vhost_dev_cleanup(dev, true);</span>
<span class="p_add">+	vhost_dev_cleanup(dev);</span>
 
 	/* Restore memory to default empty mapping. */
 	INIT_LIST_HEAD(&amp;umem-&gt;umem_list);
<span class="p_chunk">@@ -611,8 +611,7 @@</span> <span class="p_context"> static void vhost_clear_msg(struct vhost_dev *dev)</span>
 	spin_unlock(&amp;dev-&gt;iotlb_lock);
 }
 
<span class="p_del">-/* Caller should have device mutex if and only if locked is set */</span>
<span class="p_del">-void vhost_dev_cleanup(struct vhost_dev *dev, bool locked)</span>
<span class="p_add">+void vhost_dev_cleanup(struct vhost_dev *dev)</span>
 {
 	int i;
 
<span class="p_header">diff --git a/drivers/vhost/vhost.h b/drivers/vhost/vhost.h</span>
<span class="p_header">index 79c6e7a60a5e..ff4d918e3e0a 100644</span>
<span class="p_header">--- a/drivers/vhost/vhost.h</span>
<span class="p_header">+++ b/drivers/vhost/vhost.h</span>
<span class="p_chunk">@@ -181,7 +181,7 @@</span> <span class="p_context"> bool vhost_dev_has_owner(struct vhost_dev *dev);</span>
 long vhost_dev_check_owner(struct vhost_dev *);
 struct vhost_umem *vhost_dev_reset_owner_prepare(void);
 void vhost_dev_reset_owner(struct vhost_dev *, struct vhost_umem *);
<span class="p_del">-void vhost_dev_cleanup(struct vhost_dev *, bool locked);</span>
<span class="p_add">+void vhost_dev_cleanup(struct vhost_dev *);</span>
 void vhost_dev_stop(struct vhost_dev *);
 long vhost_dev_ioctl(struct vhost_dev *, unsigned int ioctl, void __user *argp);
 long vhost_vring_ioctl(struct vhost_dev *d, int ioctl, void __user *argp);
<span class="p_header">diff --git a/drivers/vhost/vsock.c b/drivers/vhost/vsock.c</span>
<span class="p_header">index 5a5e981bd8e4..0d14e2ff19f1 100644</span>
<span class="p_header">--- a/drivers/vhost/vsock.c</span>
<span class="p_header">+++ b/drivers/vhost/vsock.c</span>
<span class="p_chunk">@@ -599,7 +599,7 @@</span> <span class="p_context"> static int vhost_vsock_dev_release(struct inode *inode, struct file *file)</span>
 	}
 	spin_unlock_bh(&amp;vsock-&gt;send_pkt_list_lock);
 
<span class="p_del">-	vhost_dev_cleanup(&amp;vsock-&gt;dev, false);</span>
<span class="p_add">+	vhost_dev_cleanup(&amp;vsock-&gt;dev);</span>
 	kfree(vsock-&gt;dev.vqs);
 	vhost_vsock_free(vsock);
 	return 0;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



