
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,3/3] swiotlb: Add swiotlb=noforce debug option - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,3/3] swiotlb: Add swiotlb=noforce debug option</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=94301">Geert Uytterhoeven</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 16, 2016, 1:28 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1481894922-28828-4-git-send-email-geert+renesas@glider.be&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9477897/mbox/"
   >mbox</a>
|
   <a href="/patch/9477897/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9477897/">/patch/9477897/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	257A4601C2 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Dec 2016 13:29:26 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 19AB22888D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Dec 2016 13:29:26 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 0E4E028896; Fri, 16 Dec 2016 13:29:26 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id AD3DB2888D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Dec 2016 13:29:25 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S934855AbcLPN3O (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 16 Dec 2016 08:29:14 -0500
Received: from albert.telenet-ops.be ([195.130.137.90]:38194 &quot;EHLO
	albert.telenet-ops.be&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1757565AbcLPN3I (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 16 Dec 2016 08:29:08 -0500
Received: from ayla.of.borg ([84.193.137.253])
	by albert.telenet-ops.be with bizsmtp
	id LdUh1u00J5UCtCs06dUhWd; Fri, 16 Dec 2016 14:28:48 +0100
Received: from ramsan.of.borg ([192.168.97.29] helo=ramsan)
	by ayla.of.borg with esmtp (Exim 4.82)
	(envelope-from &lt;geert@linux-m68k.org&gt;)
	id 1cHsYz-0000gq-Aw; Fri, 16 Dec 2016 14:28:41 +0100
Received: from geert by ramsan with local (Exim 4.82)
	(envelope-from &lt;geert@linux-m68k.org&gt;)
	id 1cHsZ7-0007W4-3W; Fri, 16 Dec 2016 14:28:49 +0100
From: Geert Uytterhoeven &lt;geert+renesas@glider.be&gt;
To: Konrad Rzeszutek Wilk &lt;konrad.wilk@oracle.com&gt;
Cc: Jonathan Corbet &lt;corbet@lwn.net&gt;,
	Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	Will Deacon &lt;will.deacon@arm.com&gt;, Thomas Gleixner &lt;tglx@linutronix.de&gt;,
	Ingo Molnar &lt;mingo@redhat.com&gt;, &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;,
	Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;,
	David Vrabel &lt;david.vrabel@citrix.com&gt;, Juergen Gross &lt;jgross@suse.com&gt;,
	Steven Rostedt &lt;rostedt@goodmis.org&gt;,
	linux-kernel@vger.kernel.org, linux-renesas-soc@vger.kernel.org,
	Geert Uytterhoeven &lt;geert+renesas@glider.be&gt;
Subject: [PATCH v2 3/3] swiotlb: Add swiotlb=noforce debug option
Date: Fri, 16 Dec 2016 14:28:42 +0100
Message-Id: &lt;1481894922-28828-4-git-send-email-geert+renesas@glider.be&gt;
X-Mailer: git-send-email 1.9.1
In-Reply-To: &lt;1481894922-28828-1-git-send-email-geert+renesas@glider.be&gt;
References: &lt;1481894922-28828-1-git-send-email-geert+renesas@glider.be&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=94301">Geert Uytterhoeven</a> - Dec. 16, 2016, 1:28 p.m.</div>
<pre class="content">
On architectures like arm64, swiotlb is tied intimately to the core
architecture DMA support. In addition, ZONE_DMA cannot be disabled.

To aid debugging and catch devices not supporting DMA to memory outside
the 32-bit address space, add a kernel command line option
&quot;swiotlb=noforce&quot;, which disables the use of bounce buffers.
If specified, trying to map memory that cannot be used with DMA will
fail, and a rate-limited warning will be printed.

Note that io_tlb_nslabs is set to 1, which is the minimal supported
value.
<span class="signed-off-by">
Signed-off-by: Geert Uytterhoeven &lt;geert+renesas@glider.be&gt;</span>
---
v2:
  - Change kernel parameter value from &quot;nobounce&quot; to &quot;noforce&quot;,
  - Extend swiotlb_force enum instead of adding swiotlb_nobounce
    variable (both requested by Konrad Wilk).
---
 Documentation/admin-guide/kernel-parameters.txt |  3 ++-
 include/linux/swiotlb.h                         |  1 +
 include/trace/events/swiotlb.h                  |  3 ++-
 lib/swiotlb.c                                   | 18 ++++++++++++++++--
 4 files changed, 21 insertions(+), 4 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=3565">Konrad Rzeszutek</a> - Dec. 19, 2016, 1:38 p.m.</div>
<pre class="content">
On Fri, Dec 16, 2016 at 02:28:42PM +0100, Geert Uytterhoeven wrote:
<span class="quote">&gt; On architectures like arm64, swiotlb is tied intimately to the core</span>
<span class="quote">&gt; architecture DMA support. In addition, ZONE_DMA cannot be disabled.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; To aid debugging and catch devices not supporting DMA to memory outside</span>
<span class="quote">&gt; the 32-bit address space, add a kernel command line option</span>
<span class="quote">&gt; &quot;swiotlb=noforce&quot;, which disables the use of bounce buffers.</span>
<span class="quote">&gt; If specified, trying to map memory that cannot be used with DMA will</span>
<span class="quote">&gt; fail, and a rate-limited warning will be printed.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Note that io_tlb_nslabs is set to 1, which is the minimal supported</span>
<span class="quote">&gt; value.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Geert Uytterhoeven &lt;geert+renesas@glider.be&gt;</span>

What is this based on? I can&#39;t apply it on my latest that I had
sent to Linus?

Could you rebase this one please on:

git://git.kernel.org/pub/scm/linux/kernel/git/konrad/swiotlb.git stable/for-linus-4.9

Thanks?

Or if alternatively that does not - then please rebase it on
b5cab0da75c292ffa0fbd68dd2c820066b2842de

Thanks!
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=70">Geert Uytterhoeven</a> - Dec. 19, 2016, 1:57 p.m.</div>
<pre class="content">
Hi Konrad,

On Mon, Dec 19, 2016 at 2:38 PM, Konrad Rzeszutek Wilk
&lt;konrad@darnok.org&gt; wrote:
<span class="quote">&gt; On Fri, Dec 16, 2016 at 02:28:42PM +0100, Geert Uytterhoeven wrote:</span>
<span class="quote">&gt;&gt; On architectures like arm64, swiotlb is tied intimately to the core</span>
<span class="quote">&gt;&gt; architecture DMA support. In addition, ZONE_DMA cannot be disabled.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; To aid debugging and catch devices not supporting DMA to memory outside</span>
<span class="quote">&gt;&gt; the 32-bit address space, add a kernel command line option</span>
<span class="quote">&gt;&gt; &quot;swiotlb=noforce&quot;, which disables the use of bounce buffers.</span>
<span class="quote">&gt;&gt; If specified, trying to map memory that cannot be used with DMA will</span>
<span class="quote">&gt;&gt; fail, and a rate-limited warning will be printed.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Note that io_tlb_nslabs is set to 1, which is the minimal supported</span>
<span class="quote">&gt;&gt; value.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Geert Uytterhoeven &lt;geert+renesas@glider.be&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; What is this based on? I can&#39;t apply it on my latest that I had</span>
<span class="quote">&gt; sent to Linus?</span>

I rebased it on last Friday&#39;s linux-next, due to the recent move of
kernel-parameters.txt.
All the rest should be identical to your linux-next branch.
<span class="quote">
&gt; Could you rebase this one please on:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; git://git.kernel.org/pub/scm/linux/kernel/git/konrad/swiotlb.git stable/for-linus-4.9</span>

That one indeed doesn&#39;t have the move of kernel-parameters.txt.
<span class="quote">
&gt; Or if alternatively that does not - then please rebase it on</span>
<span class="quote">&gt; b5cab0da75c292ffa0fbd68dd2c820066b2842de</span>

However, my series already applies cleanly with git am on top of
that commit?

Please let me know what to do. Thanks!

Gr{oetje,eeting}s,

                        Geert

--
Geert Uytterhoeven -- There&#39;s lots of Linux beyond ia32 -- geert@linux-m68k.org

In personal conversations with technical people, I call myself a hacker. But
when I&#39;m talking to journalists I just say &quot;programmer&quot; or something like that.
                                -- Linus Torvalds
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=3407">Konrad Rzeszutek Wilk</a> - Dec. 19, 2016, 2:31 p.m.</div>
<pre class="content">
On Mon, Dec 19, 2016 at 02:57:00PM +0100, Geert Uytterhoeven wrote:
<span class="quote">&gt; Hi Konrad,</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; On Mon, Dec 19, 2016 at 2:38 PM, Konrad Rzeszutek Wilk</span>
<span class="quote">&gt; &lt;konrad@darnok.org&gt; wrote:</span>
<span class="quote">&gt; &gt; On Fri, Dec 16, 2016 at 02:28:42PM +0100, Geert Uytterhoeven wrote:</span>
<span class="quote">&gt; &gt;&gt; On architectures like arm64, swiotlb is tied intimately to the core</span>
<span class="quote">&gt; &gt;&gt; architecture DMA support. In addition, ZONE_DMA cannot be disabled.</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; To aid debugging and catch devices not supporting DMA to memory outside</span>
<span class="quote">&gt; &gt;&gt; the 32-bit address space, add a kernel command line option</span>
<span class="quote">&gt; &gt;&gt; &quot;swiotlb=noforce&quot;, which disables the use of bounce buffers.</span>
<span class="quote">&gt; &gt;&gt; If specified, trying to map memory that cannot be used with DMA will</span>
<span class="quote">&gt; &gt;&gt; fail, and a rate-limited warning will be printed.</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; Note that io_tlb_nslabs is set to 1, which is the minimal supported</span>
<span class="quote">&gt; &gt;&gt; value.</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; Signed-off-by: Geert Uytterhoeven &lt;geert+renesas@glider.be&gt;</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; What is this based on? I can&#39;t apply it on my latest that I had</span>
<span class="quote">&gt; &gt; sent to Linus?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I rebased it on last Friday&#39;s linux-next, due to the recent move of</span>
<span class="quote">&gt; kernel-parameters.txt.</span>
<span class="quote">&gt; All the rest should be identical to your linux-next branch.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; Could you rebase this one please on:</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; git://git.kernel.org/pub/scm/linux/kernel/git/konrad/swiotlb.git stable/for-linus-4.9</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; That one indeed doesn&#39;t have the move of kernel-parameters.txt.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; Or if alternatively that does not - then please rebase it on</span>
<span class="quote">&gt; &gt; b5cab0da75c292ffa0fbd68dd2c820066b2842de</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; However, my series already applies cleanly with git am on top of</span>
<span class="quote">&gt; that commit?</span>

Ah that does indeed work.

Which means I can&#39;t push it to Linus until rc2 at least.

Linus is sad when he sees git pulls that hadn&#39;t &quot;soaked&quot;
for two weeks in linux-next - and especially patches on top of
merges during the merge window.
<span class="quote">
&gt; </span>
<span class="quote">&gt; Please let me know what to do. Thanks!</span>

Building and testing them now.

Wish there was some travis script to do this.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=352">Catalin Marinas</a> - Jan. 4, 2017, 6 p.m.</div>
<pre class="content">
On Fri, Dec 16, 2016 at 02:28:42PM +0100, Geert Uytterhoeven wrote:
<span class="quote">&gt; diff --git a/Documentation/admin-guide/kernel-parameters.txt b/Documentation/admin-guide/kernel-parameters.txt</span>
<span class="quote">&gt; index 21e2d88637050b7a..24fb691b2da5f78d 100644</span>
<span class="quote">&gt; --- a/Documentation/admin-guide/kernel-parameters.txt</span>
<span class="quote">&gt; +++ b/Documentation/admin-guide/kernel-parameters.txt</span>
<span class="quote">&gt; @@ -3811,10 +3811,11 @@</span>
<span class="quote">&gt;  			it if 0 is given (See Documentation/cgroup-v1/memory.txt)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	swiotlb=	[ARM,IA-64,PPC,MIPS,X86]</span>
<span class="quote">&gt; -			Format: { &lt;int&gt; | force }</span>
<span class="quote">&gt; +			Format: { &lt;int&gt; | force | noforce }</span>
<span class="quote">&gt;  			&lt;int&gt; -- Number of I/O TLB slabs</span>
<span class="quote">&gt;  			force -- force using of bounce buffers even if they</span>
<span class="quote">&gt;  			         wouldn&#39;t be automatically used by the kernel</span>
<span class="quote">&gt; +			noforce -- Never use bounce buffers (for debugging)</span>

Nitpick (bikeshedding, feel free to ignore): &quot;noforce&quot; looks to me like
the current default behaviour if swiotlb= argument is passed. I would
have preferred &quot;never&quot; or &quot;disable&quot; instead, it has a clearer intent.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/Documentation/admin-guide/kernel-parameters.txt b/Documentation/admin-guide/kernel-parameters.txt</span>
<span class="p_header">index 21e2d88637050b7a..24fb691b2da5f78d 100644</span>
<span class="p_header">--- a/Documentation/admin-guide/kernel-parameters.txt</span>
<span class="p_header">+++ b/Documentation/admin-guide/kernel-parameters.txt</span>
<span class="p_chunk">@@ -3811,10 +3811,11 @@</span> <span class="p_context"></span>
 			it if 0 is given (See Documentation/cgroup-v1/memory.txt)
 
 	swiotlb=	[ARM,IA-64,PPC,MIPS,X86]
<span class="p_del">-			Format: { &lt;int&gt; | force }</span>
<span class="p_add">+			Format: { &lt;int&gt; | force | noforce }</span>
 			&lt;int&gt; -- Number of I/O TLB slabs
 			force -- force using of bounce buffers even if they
 			         wouldn&#39;t be automatically used by the kernel
<span class="p_add">+			noforce -- Never use bounce buffers (for debugging)</span>
 
 	switches=	[HW,M68k]
 
<span class="p_header">diff --git a/include/linux/swiotlb.h b/include/linux/swiotlb.h</span>
<span class="p_header">index 71d104e4c8490763..d9c84a9cde3dd7d7 100644</span>
<span class="p_header">--- a/include/linux/swiotlb.h</span>
<span class="p_header">+++ b/include/linux/swiotlb.h</span>
<span class="p_chunk">@@ -12,6 +12,7 @@</span> <span class="p_context"></span>
 enum swiotlb_force {
 	SWIOTLB_NORMAL,		/* Default - depending on HW DMA mask etc. */
 	SWIOTLB_FORCE,		/* swiotlb=force */
<span class="p_add">+	SWIOTLB_NO_FORCE,	/* swiotlb=noforce */</span>
 };
 
 extern enum swiotlb_force swiotlb_force;
<span class="p_header">diff --git a/include/trace/events/swiotlb.h b/include/trace/events/swiotlb.h</span>
<span class="p_header">index 5e2e30a7efce0ebd..288c0c54a2b4ace6 100644</span>
<span class="p_header">--- a/include/trace/events/swiotlb.h</span>
<span class="p_header">+++ b/include/trace/events/swiotlb.h</span>
<span class="p_chunk">@@ -39,7 +39,8 @@</span> <span class="p_context"></span>
 		__entry-&gt;size,
 		__print_symbolic(__entry-&gt;swiotlb_force,
 			{ SWIOTLB_NORMAL,	&quot;NORMAL&quot; },
<span class="p_del">-			{ SWIOTLB_FORCE,	&quot;FORCE&quot; }))</span>
<span class="p_add">+			{ SWIOTLB_FORCE,	&quot;FORCE&quot; },</span>
<span class="p_add">+			{ SWIOTLB_NO_FORCE,	&quot;NO_FORCE&quot; }))</span>
 );
 
 #endif /*  _TRACE_SWIOTLB_H */
<span class="p_header">diff --git a/lib/swiotlb.c b/lib/swiotlb.c</span>
<span class="p_header">index a32dce6d5101f408..9def738af4f4e568 100644</span>
<span class="p_header">--- a/lib/swiotlb.c</span>
<span class="p_header">+++ b/lib/swiotlb.c</span>
<span class="p_chunk">@@ -106,8 +106,12 @@</span> <span class="p_context"></span>
 	}
 	if (*str == &#39;,&#39;)
 		++str;
<span class="p_del">-	if (!strcmp(str, &quot;force&quot;))</span>
<span class="p_add">+	if (!strcmp(str, &quot;force&quot;)) {</span>
 		swiotlb_force = SWIOTLB_FORCE;
<span class="p_add">+	} else if (!strcmp(str, &quot;noforce&quot;)) {</span>
<span class="p_add">+		swiotlb_force = SWIOTLB_NO_FORCE;</span>
<span class="p_add">+		io_tlb_nslabs = 1;</span>
<span class="p_add">+	}</span>
 
 	return 0;
 }
<span class="p_chunk">@@ -543,8 +547,15 @@</span> <span class="p_context"> phys_addr_t swiotlb_tbl_map_single(struct device *hwdev,</span>
 map_single(struct device *hwdev, phys_addr_t phys, size_t size,
 	   enum dma_data_direction dir, unsigned long attrs)
 {
<span class="p_del">-	dma_addr_t start_dma_addr = phys_to_dma(hwdev, io_tlb_start);</span>
<span class="p_add">+	dma_addr_t start_dma_addr;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (swiotlb_force == SWIOTLB_NO_FORCE) {</span>
<span class="p_add">+		dev_warn_ratelimited(hwdev, &quot;Cannot do DMA to address %pa\n&quot;,</span>
<span class="p_add">+				     &amp;phys);</span>
<span class="p_add">+		return SWIOTLB_MAP_ERROR;</span>
<span class="p_add">+	}</span>
 
<span class="p_add">+	start_dma_addr = phys_to_dma(hwdev, io_tlb_start);</span>
 	return swiotlb_tbl_map_single(hwdev, start_dma_addr, phys, size,
 				      dir, attrs);
 }
<span class="p_chunk">@@ -721,6 +732,9 @@</span> <span class="p_context"> void swiotlb_tbl_sync_single(struct device *hwdev, phys_addr_t tlb_addr,</span>
 swiotlb_full(struct device *dev, size_t size, enum dma_data_direction dir,
 	     int do_panic)
 {
<span class="p_add">+	if (swiotlb_force == SWIOTLB_NO_FORCE)</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
 	/*
 	 * Ran out of IOMMU space for this operation. This is very bad.
 	 * Unfortunately the drivers cannot handle this operation properly.

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



