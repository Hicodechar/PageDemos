
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,2/3] mm: arch: Use new hugetlb size encoding definitions - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,2/3] mm: arch: Use new hugetlb size encoding definitions</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 17, 2017, 10:28 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1500330481-28476-3-git-send-email-mike.kravetz@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9846443/mbox/"
   >mbox</a>
|
   <a href="/patch/9846443/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9846443/">/patch/9846443/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	A488B60386 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 17 Jul 2017 22:30:22 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id CB3F926224
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 17 Jul 2017 22:30:22 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id C02C727C05; Mon, 17 Jul 2017 22:30:22 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	UNPARSEABLE_RELAY autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D11DF26224
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 17 Jul 2017 22:30:21 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751634AbdGQWaR (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 17 Jul 2017 18:30:17 -0400
Received: from aserp1040.oracle.com ([141.146.126.69]:25707 &quot;EHLO
	aserp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751499AbdGQWaC (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 17 Jul 2017 18:30:02 -0400
Received: from aserv0022.oracle.com (aserv0022.oracle.com [141.146.126.234])
	by aserp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2)
	with ESMTP id v6HMSOEZ011913
	(version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Mon, 17 Jul 2017 22:28:24 GMT
Received: from aserv0122.oracle.com (aserv0122.oracle.com [141.146.126.236])
	by aserv0022.oracle.com (8.14.4/8.14.4) with ESMTP id
	v6HMSNGh026431
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Mon, 17 Jul 2017 22:28:23 GMT
Received: from abhmp0016.oracle.com (abhmp0016.oracle.com [141.146.116.22])
	by aserv0122.oracle.com (8.14.4/8.14.4) with ESMTP id
	v6HMSMnA008232; Mon, 17 Jul 2017 22:28:22 GMT
Received: from monkey.oracle.com (/50.188.161.229)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Mon, 17 Jul 2017 15:28:22 -0700
From: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
To: linux-mm@kvack.org, linux-kernel@vger.kernel.org
Cc: Matthew Wilcox &lt;willy@infradead.org&gt;, akpm@linux-foundation.org,
	mhocko@suse.com, ak@linux.intel.com, mtk.manpages@gmail.com,
	Davidlohr Bueso &lt;dbueso@suse.de&gt;, khandual@linux.vnet.ibm.com,
	aneesh.kumar@linux.vnet.ibm.com, aarcange@redhat.com,
	Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
Subject: [RFC PATCH 2/3] mm: arch: Use new hugetlb size encoding definitions
Date: Mon, 17 Jul 2017 15:28:00 -0700
Message-Id: &lt;1500330481-28476-3-git-send-email-mike.kravetz@oracle.com&gt;
X-Mailer: git-send-email 2.7.5
In-Reply-To: &lt;1500330481-28476-1-git-send-email-mike.kravetz@oracle.com&gt;
References: &lt;20170328175408.GD7838@bombadil.infradead.org&gt;
	&lt;1500330481-28476-1-git-send-email-mike.kravetz@oracle.com&gt;
X-Source-IP: aserv0022.oracle.com [141.146.126.234]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - July 17, 2017, 10:28 p.m.</div>
<pre class="content">
Use the common definitions from hugetlb_encode.h header file for
encoding hugetlb size definitions in mmap system call flags.
<span class="signed-off-by">
Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
---
 arch/alpha/include/uapi/asm/mman.h     | 14 ++++++--------
 arch/mips/include/uapi/asm/mman.h      | 14 ++++++--------
 arch/parisc/include/uapi/asm/mman.h    | 14 ++++++--------
 arch/powerpc/include/uapi/asm/mman.h   | 23 ++++++++++-------------
 arch/x86/include/uapi/asm/mman.h       | 10 ++++++++--
 arch/xtensa/include/uapi/asm/mman.h    | 14 ++++++--------
 include/uapi/asm-generic/mman-common.h |  6 ++++--
 7 files changed, 46 insertions(+), 49 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137061">Michal Hocko</a> - July 26, 2017, 9:52 a.m.</div>
<pre class="content">
On Mon 17-07-17 15:28:00, Mike Kravetz wrote:
<span class="quote">&gt; Use the common definitions from hugetlb_encode.h header file for</span>
<span class="quote">&gt; encoding hugetlb size definitions in mmap system call flags.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>

with s@HUGETLB_FLAG_ENCODE__16GB@HUGETLB_FLAG_ENCODE_16GB@
<span class="acked-by">
Acked-by: Michal Hocko &lt;mhocko@suse.com&gt;</span>
<span class="quote">
&gt; ---</span>
<span class="quote">&gt;  arch/alpha/include/uapi/asm/mman.h     | 14 ++++++--------</span>
<span class="quote">&gt;  arch/mips/include/uapi/asm/mman.h      | 14 ++++++--------</span>
<span class="quote">&gt;  arch/parisc/include/uapi/asm/mman.h    | 14 ++++++--------</span>
<span class="quote">&gt;  arch/powerpc/include/uapi/asm/mman.h   | 23 ++++++++++-------------</span>
<span class="quote">&gt;  arch/x86/include/uapi/asm/mman.h       | 10 ++++++++--</span>
<span class="quote">&gt;  arch/xtensa/include/uapi/asm/mman.h    | 14 ++++++--------</span>
<span class="quote">&gt;  include/uapi/asm-generic/mman-common.h |  6 ++++--</span>
<span class="quote">&gt;  7 files changed, 46 insertions(+), 49 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/arch/alpha/include/uapi/asm/mman.h b/arch/alpha/include/uapi/asm/mman.h</span>
<span class="quote">&gt; index 02760f6..bfa5828 100644</span>
<span class="quote">&gt; --- a/arch/alpha/include/uapi/asm/mman.h</span>
<span class="quote">&gt; +++ b/arch/alpha/include/uapi/asm/mman.h</span>
<span class="quote">&gt; @@ -1,6 +1,8 @@</span>
<span class="quote">&gt;  #ifndef __ALPHA_MMAN_H__</span>
<span class="quote">&gt;  #define __ALPHA_MMAN_H__</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  #define PROT_READ	0x1		/* page can be read */</span>
<span class="quote">&gt;  #define PROT_WRITE	0x2		/* page can be written */</span>
<span class="quote">&gt;  #define PROT_EXEC	0x4		/* page can be executed */</span>
<span class="quote">&gt; @@ -68,15 +70,11 @@</span>
<span class="quote">&gt;  #define MAP_FILE	0</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt; - * When MAP_HUGETLB is set bits [26:31] encode the log2 of the huge page size.</span>
<span class="quote">&gt; - * This gives us 6 bits, which is enough until someone invents 128 bit address</span>
<span class="quote">&gt; - * spaces.</span>
<span class="quote">&gt; - *</span>
<span class="quote">&gt; - * Assume these are all power of twos.</span>
<span class="quote">&gt; - * When 0 use the default page size.</span>
<span class="quote">&gt; + * Huge page size encoding when MAP_HUGETLB is specified, and a huge page</span>
<span class="quote">&gt; + * size other than the default is desired.  See hugetlb_encode.h</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; -#define MAP_HUGE_SHIFT	26</span>
<span class="quote">&gt; -#define MAP_HUGE_MASK	0x3f</span>
<span class="quote">&gt; +#define MAP_HUGE_SHIFT	HUGETLB_FLAG_ENCODE_SHIFT</span>
<span class="quote">&gt; +#define MAP_HUGE_MASK	HUGETLB_FLAG_ENCODE_MASK</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define PKEY_DISABLE_ACCESS	0x1</span>
<span class="quote">&gt;  #define PKEY_DISABLE_WRITE	0x2</span>
<span class="quote">&gt; diff --git a/arch/mips/include/uapi/asm/mman.h b/arch/mips/include/uapi/asm/mman.h</span>
<span class="quote">&gt; index 655e2fb..9e55284 100644</span>
<span class="quote">&gt; --- a/arch/mips/include/uapi/asm/mman.h</span>
<span class="quote">&gt; +++ b/arch/mips/include/uapi/asm/mman.h</span>
<span class="quote">&gt; @@ -8,6 +8,8 @@</span>
<span class="quote">&gt;  #ifndef _ASM_MMAN_H</span>
<span class="quote">&gt;  #define _ASM_MMAN_H</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * Protections are chosen from these bits, OR&#39;d together.  The</span>
<span class="quote">&gt;   * implementation does not necessarily support PROT_EXEC or PROT_WRITE</span>
<span class="quote">&gt; @@ -95,15 +97,11 @@</span>
<span class="quote">&gt;  #define MAP_FILE	0</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt; - * When MAP_HUGETLB is set bits [26:31] encode the log2 of the huge page size.</span>
<span class="quote">&gt; - * This gives us 6 bits, which is enough until someone invents 128 bit address</span>
<span class="quote">&gt; - * spaces.</span>
<span class="quote">&gt; - *</span>
<span class="quote">&gt; - * Assume these are all power of twos.</span>
<span class="quote">&gt; - * When 0 use the default page size.</span>
<span class="quote">&gt; + * Huge page size encoding when MAP_HUGETLB is specified, and a huge page</span>
<span class="quote">&gt; + * size other than the default is desired.  See hugetlb_encode.h</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; -#define MAP_HUGE_SHIFT	26</span>
<span class="quote">&gt; -#define MAP_HUGE_MASK	0x3f</span>
<span class="quote">&gt; +#define MAP_HUGE_SHIFT	HUGETLB_FLAG_ENCODE_SHIFT</span>
<span class="quote">&gt; +#define MAP_HUGE_MASK	HUGETLB_FLAG_ENCODE_MASK</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define PKEY_DISABLE_ACCESS	0x1</span>
<span class="quote">&gt;  #define PKEY_DISABLE_WRITE	0x2</span>
<span class="quote">&gt; diff --git a/arch/parisc/include/uapi/asm/mman.h b/arch/parisc/include/uapi/asm/mman.h</span>
<span class="quote">&gt; index 5979745..11c6d86 100644</span>
<span class="quote">&gt; --- a/arch/parisc/include/uapi/asm/mman.h</span>
<span class="quote">&gt; +++ b/arch/parisc/include/uapi/asm/mman.h</span>
<span class="quote">&gt; @@ -1,6 +1,8 @@</span>
<span class="quote">&gt;  #ifndef __PARISC_MMAN_H__</span>
<span class="quote">&gt;  #define __PARISC_MMAN_H__</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  #define PROT_READ	0x1		/* page can be read */</span>
<span class="quote">&gt;  #define PROT_WRITE	0x2		/* page can be written */</span>
<span class="quote">&gt;  #define PROT_EXEC	0x4		/* page can be executed */</span>
<span class="quote">&gt; @@ -65,15 +67,11 @@</span>
<span class="quote">&gt;  #define MAP_VARIABLE	0</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt; - * When MAP_HUGETLB is set bits [26:31] encode the log2 of the huge page size.</span>
<span class="quote">&gt; - * This gives us 6 bits, which is enough until someone invents 128 bit address</span>
<span class="quote">&gt; - * spaces.</span>
<span class="quote">&gt; - *</span>
<span class="quote">&gt; - * Assume these are all power of twos.</span>
<span class="quote">&gt; - * When 0 use the default page size.</span>
<span class="quote">&gt; + * Huge page size encoding when MAP_HUGETLB is specified, and a huge page</span>
<span class="quote">&gt; + * size other than the default is desired.  See hugetlb_encode.h</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; -#define MAP_HUGE_SHIFT	26</span>
<span class="quote">&gt; -#define MAP_HUGE_MASK	0x3f</span>
<span class="quote">&gt; +#define MAP_HUGE_SHIFT	HUGETLB_FLAG_ENCODE_SHIFT</span>
<span class="quote">&gt; +#define MAP_HUGE_MASK	HUGETLB_FLAG_ENCODE_MASK</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define PKEY_DISABLE_ACCESS	0x1</span>
<span class="quote">&gt;  #define PKEY_DISABLE_WRITE	0x2</span>
<span class="quote">&gt; diff --git a/arch/powerpc/include/uapi/asm/mman.h b/arch/powerpc/include/uapi/asm/mman.h</span>
<span class="quote">&gt; index ab45cc2..80fd56c 100644</span>
<span class="quote">&gt; --- a/arch/powerpc/include/uapi/asm/mman.h</span>
<span class="quote">&gt; +++ b/arch/powerpc/include/uapi/asm/mman.h</span>
<span class="quote">&gt; @@ -8,6 +8,7 @@</span>
<span class="quote">&gt;  #define _UAPI_ASM_POWERPC_MMAN_H</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #include &lt;asm-generic/mman-common.h&gt;</span>
<span class="quote">&gt; +#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define PROT_SAO	0x10		/* Strong Access Ordering */</span>
<span class="quote">&gt; @@ -30,19 +31,15 @@</span>
<span class="quote">&gt;  #define MAP_HUGETLB	0x40000		/* create a huge page mapping */</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt; - * When MAP_HUGETLB is set, bits [26:31] of the flags argument to mmap(2),</span>
<span class="quote">&gt; - * encode the log2 of the huge page size. A value of zero indicates that the</span>
<span class="quote">&gt; - * default huge page size should be used. To use a non-default huge page size,</span>
<span class="quote">&gt; - * one of these defines can be used, or the size can be encoded by hand. Note</span>
<span class="quote">&gt; - * that on most systems only a subset, or possibly none, of these sizes will be</span>
<span class="quote">&gt; - * available.</span>
<span class="quote">&gt; + * Huge page size encoding when MAP_HUGETLB is specified, and a huge page</span>
<span class="quote">&gt; + * size other than the default is desired.  See hugetlb_encode.h</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; -#define MAP_HUGE_512KB	(19 &lt;&lt; MAP_HUGE_SHIFT)	/* 512KB HugeTLB Page */</span>
<span class="quote">&gt; -#define MAP_HUGE_1MB	(20 &lt;&lt; MAP_HUGE_SHIFT)	/* 1MB   HugeTLB Page */</span>
<span class="quote">&gt; -#define MAP_HUGE_2MB	(21 &lt;&lt; MAP_HUGE_SHIFT)	/* 2MB   HugeTLB Page */</span>
<span class="quote">&gt; -#define MAP_HUGE_8MB	(23 &lt;&lt; MAP_HUGE_SHIFT)	/* 8MB   HugeTLB Page */</span>
<span class="quote">&gt; -#define MAP_HUGE_16MB	(24 &lt;&lt; MAP_HUGE_SHIFT)	/* 16MB  HugeTLB Page */</span>
<span class="quote">&gt; -#define MAP_HUGE_1GB	(30 &lt;&lt; MAP_HUGE_SHIFT)	/* 1GB   HugeTLB Page */</span>
<span class="quote">&gt; -#define MAP_HUGE_16GB	(34 &lt;&lt; MAP_HUGE_SHIFT)	/* 16GB  HugeTLB Page */</span>
<span class="quote">&gt; +#define MAP_HUGE_512KB	HUGETLB_FLAG_ENCODE_512KB	/* 512KB HugeTLB Page */</span>
<span class="quote">&gt; +#define MAP_HUGE_1MB	HUGETLB_FLAG_ENCODE_1MB		/* 1MB   HugeTLB Page */</span>
<span class="quote">&gt; +#define MAP_HUGE_2MB	HUGETLB_FLAG_ENCODE_2MB		/* 2MB   HugeTLB Page */</span>
<span class="quote">&gt; +#define MAP_HUGE_8MB	HUGETLB_FLAG_ENCODE_8MB		/* 8MB   HugeTLB Page */</span>
<span class="quote">&gt; +#define MAP_HUGE_16MB	HUGETLB_FLAG_ENCODE_16MB	/* 16MB  HugeTLB Page */</span>
<span class="quote">&gt; +#define MAP_HUGE_1GB	HUGETLB_FLAG_ENCODE_1GB		/* 1GB   HugeTLB Page */</span>
<span class="quote">&gt; +#define MAP_HUGE_16GB	HUGETLB_FLAG_ENCODE__16GB	/* 16GB  HugeTLB Page */</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #endif /* _UAPI_ASM_POWERPC_MMAN_H */</span>
<span class="quote">&gt; diff --git a/arch/x86/include/uapi/asm/mman.h b/arch/x86/include/uapi/asm/mman.h</span>
<span class="quote">&gt; index 39bca7f..5a67293 100644</span>
<span class="quote">&gt; --- a/arch/x86/include/uapi/asm/mman.h</span>
<span class="quote">&gt; +++ b/arch/x86/include/uapi/asm/mman.h</span>
<span class="quote">&gt; @@ -1,10 +1,16 @@</span>
<span class="quote">&gt;  #ifndef _ASM_X86_MMAN_H</span>
<span class="quote">&gt;  #define _ASM_X86_MMAN_H</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  #define MAP_32BIT	0x40		/* only give out 32bit addresses */</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -#define MAP_HUGE_2MB    (21 &lt;&lt; MAP_HUGE_SHIFT)</span>
<span class="quote">&gt; -#define MAP_HUGE_1GB    (30 &lt;&lt; MAP_HUGE_SHIFT)</span>
<span class="quote">&gt; +/*</span>
<span class="quote">&gt; + * Huge page size encoding when MAP_HUGETLB is specified, and a huge page</span>
<span class="quote">&gt; + * size other than the default is desired.  See hugetlb_encode.h</span>
<span class="quote">&gt; + */</span>
<span class="quote">&gt; +#define MAP_HUGE_2MB    HUGETLB_FLAG_ENCODE_2MB</span>
<span class="quote">&gt; +#define MAP_HUGE_1GB    HUGETLB_FLAG_ENCODE_1GB</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #ifdef CONFIG_X86_INTEL_MEMORY_PROTECTION_KEYS</span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt; diff --git a/arch/xtensa/include/uapi/asm/mman.h b/arch/xtensa/include/uapi/asm/mman.h</span>
<span class="quote">&gt; index 24365b3..5deb5e4 100644</span>
<span class="quote">&gt; --- a/arch/xtensa/include/uapi/asm/mman.h</span>
<span class="quote">&gt; +++ b/arch/xtensa/include/uapi/asm/mman.h</span>
<span class="quote">&gt; @@ -14,6 +14,8 @@</span>
<span class="quote">&gt;  #ifndef _XTENSA_MMAN_H</span>
<span class="quote">&gt;  #define _XTENSA_MMAN_H</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * Protections are chosen from these bits, OR&#39;d together.  The</span>
<span class="quote">&gt;   * implementation does not necessarily support PROT_EXEC or PROT_WRITE</span>
<span class="quote">&gt; @@ -107,15 +109,11 @@</span>
<span class="quote">&gt;  #define MAP_FILE	0</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt; - * When MAP_HUGETLB is set bits [26:31] encode the log2 of the huge page size.</span>
<span class="quote">&gt; - * This gives us 6 bits, which is enough until someone invents 128 bit address</span>
<span class="quote">&gt; - * spaces.</span>
<span class="quote">&gt; - *</span>
<span class="quote">&gt; - * Assume these are all power of twos.</span>
<span class="quote">&gt; - * When 0 use the default page size.</span>
<span class="quote">&gt; + * Huge page size encoding when MAP_HUGETLB is specified, and a huge page</span>
<span class="quote">&gt; + * size other than the default is desired.  See hugetlb_encode.h</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; -#define MAP_HUGE_SHIFT	26</span>
<span class="quote">&gt; -#define MAP_HUGE_MASK	0x3f</span>
<span class="quote">&gt; +#define MAP_HUGE_SHIFT	HUGETLB_FLAG_ENCODE_SHIFT</span>
<span class="quote">&gt; +#define MAP_HUGE_MASK	HUGETLB_FLAG_ENCODE_MASK</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define PKEY_DISABLE_ACCESS	0x1</span>
<span class="quote">&gt;  #define PKEY_DISABLE_WRITE	0x2</span>
<span class="quote">&gt; diff --git a/include/uapi/asm-generic/mman-common.h b/include/uapi/asm-generic/mman-common.h</span>
<span class="quote">&gt; index 8c27db0..00d56b8 100644</span>
<span class="quote">&gt; --- a/include/uapi/asm-generic/mman-common.h</span>
<span class="quote">&gt; +++ b/include/uapi/asm-generic/mman-common.h</span>
<span class="quote">&gt; @@ -1,6 +1,8 @@</span>
<span class="quote">&gt;  #ifndef __ASM_GENERIC_MMAN_COMMON_H</span>
<span class="quote">&gt;  #define __ASM_GENERIC_MMAN_COMMON_H</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   Author: Michael S. Tsirkin &lt;mst@mellanox.co.il&gt;, Mellanox Technologies Ltd.</span>
<span class="quote">&gt;   Based on: asm-xxx/mman.h</span>
<span class="quote">&gt; @@ -69,8 +71,8 @@</span>
<span class="quote">&gt;   * Assume these are all power of twos.</span>
<span class="quote">&gt;   * When 0 use the default page size.</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; -#define MAP_HUGE_SHIFT	26</span>
<span class="quote">&gt; -#define MAP_HUGE_MASK	0x3f</span>
<span class="quote">&gt; +#define MAP_HUGE_SHIFT	HUGETLB_FLAG_ENCODE_SHIFT</span>
<span class="quote">&gt; +#define MAP_HUGE_MASK	HUGETLB_FLAG_ENCODE_MASK</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define PKEY_DISABLE_ACCESS	0x1</span>
<span class="quote">&gt;  #define PKEY_DISABLE_WRITE	0x2</span>
<span class="quote">&gt; -- </span>
<span class="quote">&gt; 2.7.5</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; --</span>
<span class="quote">&gt; To unsubscribe, send a message with &#39;unsubscribe linux-mm&#39; in</span>
<span class="quote">&gt; the body to majordomo@kvack.org.  For more info on Linux MM,</span>
<span class="quote">&gt; see: http://www.linux-mm.org/ .</span>
<span class="quote">&gt; Don&#39;t email: &lt;a href=mailto:&quot;dont@kvack.org&quot;&gt; email@kvack.org &lt;/a&gt;</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/alpha/include/uapi/asm/mman.h b/arch/alpha/include/uapi/asm/mman.h</span>
<span class="p_header">index 02760f6..bfa5828 100644</span>
<span class="p_header">--- a/arch/alpha/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/alpha/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -1,6 +1,8 @@</span> <span class="p_context"></span>
 #ifndef __ALPHA_MMAN_H__
 #define __ALPHA_MMAN_H__
 
<span class="p_add">+#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
<span class="p_add">+</span>
 #define PROT_READ	0x1		/* page can be read */
 #define PROT_WRITE	0x2		/* page can be written */
 #define PROT_EXEC	0x4		/* page can be executed */
<span class="p_chunk">@@ -68,15 +70,11 @@</span> <span class="p_context"></span>
 #define MAP_FILE	0
 
 /*
<span class="p_del">- * When MAP_HUGETLB is set bits [26:31] encode the log2 of the huge page size.</span>
<span class="p_del">- * This gives us 6 bits, which is enough until someone invents 128 bit address</span>
<span class="p_del">- * spaces.</span>
<span class="p_del">- *</span>
<span class="p_del">- * Assume these are all power of twos.</span>
<span class="p_del">- * When 0 use the default page size.</span>
<span class="p_add">+ * Huge page size encoding when MAP_HUGETLB is specified, and a huge page</span>
<span class="p_add">+ * size other than the default is desired.  See hugetlb_encode.h</span>
  */
<span class="p_del">-#define MAP_HUGE_SHIFT	26</span>
<span class="p_del">-#define MAP_HUGE_MASK	0x3f</span>
<span class="p_add">+#define MAP_HUGE_SHIFT	HUGETLB_FLAG_ENCODE_SHIFT</span>
<span class="p_add">+#define MAP_HUGE_MASK	HUGETLB_FLAG_ENCODE_MASK</span>
 
 #define PKEY_DISABLE_ACCESS	0x1
 #define PKEY_DISABLE_WRITE	0x2
<span class="p_header">diff --git a/arch/mips/include/uapi/asm/mman.h b/arch/mips/include/uapi/asm/mman.h</span>
<span class="p_header">index 655e2fb..9e55284 100644</span>
<span class="p_header">--- a/arch/mips/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/mips/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -8,6 +8,8 @@</span> <span class="p_context"></span>
 #ifndef _ASM_MMAN_H
 #define _ASM_MMAN_H
 
<span class="p_add">+#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
<span class="p_add">+</span>
 /*
  * Protections are chosen from these bits, OR&#39;d together.  The
  * implementation does not necessarily support PROT_EXEC or PROT_WRITE
<span class="p_chunk">@@ -95,15 +97,11 @@</span> <span class="p_context"></span>
 #define MAP_FILE	0
 
 /*
<span class="p_del">- * When MAP_HUGETLB is set bits [26:31] encode the log2 of the huge page size.</span>
<span class="p_del">- * This gives us 6 bits, which is enough until someone invents 128 bit address</span>
<span class="p_del">- * spaces.</span>
<span class="p_del">- *</span>
<span class="p_del">- * Assume these are all power of twos.</span>
<span class="p_del">- * When 0 use the default page size.</span>
<span class="p_add">+ * Huge page size encoding when MAP_HUGETLB is specified, and a huge page</span>
<span class="p_add">+ * size other than the default is desired.  See hugetlb_encode.h</span>
  */
<span class="p_del">-#define MAP_HUGE_SHIFT	26</span>
<span class="p_del">-#define MAP_HUGE_MASK	0x3f</span>
<span class="p_add">+#define MAP_HUGE_SHIFT	HUGETLB_FLAG_ENCODE_SHIFT</span>
<span class="p_add">+#define MAP_HUGE_MASK	HUGETLB_FLAG_ENCODE_MASK</span>
 
 #define PKEY_DISABLE_ACCESS	0x1
 #define PKEY_DISABLE_WRITE	0x2
<span class="p_header">diff --git a/arch/parisc/include/uapi/asm/mman.h b/arch/parisc/include/uapi/asm/mman.h</span>
<span class="p_header">index 5979745..11c6d86 100644</span>
<span class="p_header">--- a/arch/parisc/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/parisc/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -1,6 +1,8 @@</span> <span class="p_context"></span>
 #ifndef __PARISC_MMAN_H__
 #define __PARISC_MMAN_H__
 
<span class="p_add">+#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
<span class="p_add">+</span>
 #define PROT_READ	0x1		/* page can be read */
 #define PROT_WRITE	0x2		/* page can be written */
 #define PROT_EXEC	0x4		/* page can be executed */
<span class="p_chunk">@@ -65,15 +67,11 @@</span> <span class="p_context"></span>
 #define MAP_VARIABLE	0
 
 /*
<span class="p_del">- * When MAP_HUGETLB is set bits [26:31] encode the log2 of the huge page size.</span>
<span class="p_del">- * This gives us 6 bits, which is enough until someone invents 128 bit address</span>
<span class="p_del">- * spaces.</span>
<span class="p_del">- *</span>
<span class="p_del">- * Assume these are all power of twos.</span>
<span class="p_del">- * When 0 use the default page size.</span>
<span class="p_add">+ * Huge page size encoding when MAP_HUGETLB is specified, and a huge page</span>
<span class="p_add">+ * size other than the default is desired.  See hugetlb_encode.h</span>
  */
<span class="p_del">-#define MAP_HUGE_SHIFT	26</span>
<span class="p_del">-#define MAP_HUGE_MASK	0x3f</span>
<span class="p_add">+#define MAP_HUGE_SHIFT	HUGETLB_FLAG_ENCODE_SHIFT</span>
<span class="p_add">+#define MAP_HUGE_MASK	HUGETLB_FLAG_ENCODE_MASK</span>
 
 #define PKEY_DISABLE_ACCESS	0x1
 #define PKEY_DISABLE_WRITE	0x2
<span class="p_header">diff --git a/arch/powerpc/include/uapi/asm/mman.h b/arch/powerpc/include/uapi/asm/mman.h</span>
<span class="p_header">index ab45cc2..80fd56c 100644</span>
<span class="p_header">--- a/arch/powerpc/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/powerpc/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -8,6 +8,7 @@</span> <span class="p_context"></span>
 #define _UAPI_ASM_POWERPC_MMAN_H
 
 #include &lt;asm-generic/mman-common.h&gt;
<span class="p_add">+#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
 
 
 #define PROT_SAO	0x10		/* Strong Access Ordering */
<span class="p_chunk">@@ -30,19 +31,15 @@</span> <span class="p_context"></span>
 #define MAP_HUGETLB	0x40000		/* create a huge page mapping */
 
 /*
<span class="p_del">- * When MAP_HUGETLB is set, bits [26:31] of the flags argument to mmap(2),</span>
<span class="p_del">- * encode the log2 of the huge page size. A value of zero indicates that the</span>
<span class="p_del">- * default huge page size should be used. To use a non-default huge page size,</span>
<span class="p_del">- * one of these defines can be used, or the size can be encoded by hand. Note</span>
<span class="p_del">- * that on most systems only a subset, or possibly none, of these sizes will be</span>
<span class="p_del">- * available.</span>
<span class="p_add">+ * Huge page size encoding when MAP_HUGETLB is specified, and a huge page</span>
<span class="p_add">+ * size other than the default is desired.  See hugetlb_encode.h</span>
  */
<span class="p_del">-#define MAP_HUGE_512KB	(19 &lt;&lt; MAP_HUGE_SHIFT)	/* 512KB HugeTLB Page */</span>
<span class="p_del">-#define MAP_HUGE_1MB	(20 &lt;&lt; MAP_HUGE_SHIFT)	/* 1MB   HugeTLB Page */</span>
<span class="p_del">-#define MAP_HUGE_2MB	(21 &lt;&lt; MAP_HUGE_SHIFT)	/* 2MB   HugeTLB Page */</span>
<span class="p_del">-#define MAP_HUGE_8MB	(23 &lt;&lt; MAP_HUGE_SHIFT)	/* 8MB   HugeTLB Page */</span>
<span class="p_del">-#define MAP_HUGE_16MB	(24 &lt;&lt; MAP_HUGE_SHIFT)	/* 16MB  HugeTLB Page */</span>
<span class="p_del">-#define MAP_HUGE_1GB	(30 &lt;&lt; MAP_HUGE_SHIFT)	/* 1GB   HugeTLB Page */</span>
<span class="p_del">-#define MAP_HUGE_16GB	(34 &lt;&lt; MAP_HUGE_SHIFT)	/* 16GB  HugeTLB Page */</span>
<span class="p_add">+#define MAP_HUGE_512KB	HUGETLB_FLAG_ENCODE_512KB	/* 512KB HugeTLB Page */</span>
<span class="p_add">+#define MAP_HUGE_1MB	HUGETLB_FLAG_ENCODE_1MB		/* 1MB   HugeTLB Page */</span>
<span class="p_add">+#define MAP_HUGE_2MB	HUGETLB_FLAG_ENCODE_2MB		/* 2MB   HugeTLB Page */</span>
<span class="p_add">+#define MAP_HUGE_8MB	HUGETLB_FLAG_ENCODE_8MB		/* 8MB   HugeTLB Page */</span>
<span class="p_add">+#define MAP_HUGE_16MB	HUGETLB_FLAG_ENCODE_16MB	/* 16MB  HugeTLB Page */</span>
<span class="p_add">+#define MAP_HUGE_1GB	HUGETLB_FLAG_ENCODE_1GB		/* 1GB   HugeTLB Page */</span>
<span class="p_add">+#define MAP_HUGE_16GB	HUGETLB_FLAG_ENCODE__16GB	/* 16GB  HugeTLB Page */</span>
 
 #endif /* _UAPI_ASM_POWERPC_MMAN_H */
<span class="p_header">diff --git a/arch/x86/include/uapi/asm/mman.h b/arch/x86/include/uapi/asm/mman.h</span>
<span class="p_header">index 39bca7f..5a67293 100644</span>
<span class="p_header">--- a/arch/x86/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/x86/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -1,10 +1,16 @@</span> <span class="p_context"></span>
 #ifndef _ASM_X86_MMAN_H
 #define _ASM_X86_MMAN_H
 
<span class="p_add">+#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
<span class="p_add">+</span>
 #define MAP_32BIT	0x40		/* only give out 32bit addresses */
 
<span class="p_del">-#define MAP_HUGE_2MB    (21 &lt;&lt; MAP_HUGE_SHIFT)</span>
<span class="p_del">-#define MAP_HUGE_1GB    (30 &lt;&lt; MAP_HUGE_SHIFT)</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Huge page size encoding when MAP_HUGETLB is specified, and a huge page</span>
<span class="p_add">+ * size other than the default is desired.  See hugetlb_encode.h</span>
<span class="p_add">+ */</span>
<span class="p_add">+#define MAP_HUGE_2MB    HUGETLB_FLAG_ENCODE_2MB</span>
<span class="p_add">+#define MAP_HUGE_1GB    HUGETLB_FLAG_ENCODE_1GB</span>
 
 #ifdef CONFIG_X86_INTEL_MEMORY_PROTECTION_KEYS
 /*
<span class="p_header">diff --git a/arch/xtensa/include/uapi/asm/mman.h b/arch/xtensa/include/uapi/asm/mman.h</span>
<span class="p_header">index 24365b3..5deb5e4 100644</span>
<span class="p_header">--- a/arch/xtensa/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/xtensa/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -14,6 +14,8 @@</span> <span class="p_context"></span>
 #ifndef _XTENSA_MMAN_H
 #define _XTENSA_MMAN_H
 
<span class="p_add">+#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
<span class="p_add">+</span>
 /*
  * Protections are chosen from these bits, OR&#39;d together.  The
  * implementation does not necessarily support PROT_EXEC or PROT_WRITE
<span class="p_chunk">@@ -107,15 +109,11 @@</span> <span class="p_context"></span>
 #define MAP_FILE	0
 
 /*
<span class="p_del">- * When MAP_HUGETLB is set bits [26:31] encode the log2 of the huge page size.</span>
<span class="p_del">- * This gives us 6 bits, which is enough until someone invents 128 bit address</span>
<span class="p_del">- * spaces.</span>
<span class="p_del">- *</span>
<span class="p_del">- * Assume these are all power of twos.</span>
<span class="p_del">- * When 0 use the default page size.</span>
<span class="p_add">+ * Huge page size encoding when MAP_HUGETLB is specified, and a huge page</span>
<span class="p_add">+ * size other than the default is desired.  See hugetlb_encode.h</span>
  */
<span class="p_del">-#define MAP_HUGE_SHIFT	26</span>
<span class="p_del">-#define MAP_HUGE_MASK	0x3f</span>
<span class="p_add">+#define MAP_HUGE_SHIFT	HUGETLB_FLAG_ENCODE_SHIFT</span>
<span class="p_add">+#define MAP_HUGE_MASK	HUGETLB_FLAG_ENCODE_MASK</span>
 
 #define PKEY_DISABLE_ACCESS	0x1
 #define PKEY_DISABLE_WRITE	0x2
<span class="p_header">diff --git a/include/uapi/asm-generic/mman-common.h b/include/uapi/asm-generic/mman-common.h</span>
<span class="p_header">index 8c27db0..00d56b8 100644</span>
<span class="p_header">--- a/include/uapi/asm-generic/mman-common.h</span>
<span class="p_header">+++ b/include/uapi/asm-generic/mman-common.h</span>
<span class="p_chunk">@@ -1,6 +1,8 @@</span> <span class="p_context"></span>
 #ifndef __ASM_GENERIC_MMAN_COMMON_H
 #define __ASM_GENERIC_MMAN_COMMON_H
 
<span class="p_add">+#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
<span class="p_add">+</span>
 /*
  Author: Michael S. Tsirkin &lt;mst@mellanox.co.il&gt;, Mellanox Technologies Ltd.
  Based on: asm-xxx/mman.h
<span class="p_chunk">@@ -69,8 +71,8 @@</span> <span class="p_context"></span>
  * Assume these are all power of twos.
  * When 0 use the default page size.
  */
<span class="p_del">-#define MAP_HUGE_SHIFT	26</span>
<span class="p_del">-#define MAP_HUGE_MASK	0x3f</span>
<span class="p_add">+#define MAP_HUGE_SHIFT	HUGETLB_FLAG_ENCODE_SHIFT</span>
<span class="p_add">+#define MAP_HUGE_MASK	HUGETLB_FLAG_ENCODE_MASK</span>
 
 #define PKEY_DISABLE_ACCESS	0x1
 #define PKEY_DISABLE_WRITE	0x2

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



