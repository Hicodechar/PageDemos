
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[20/22] mips: use swiotlb_{alloc,free} - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [20/22] mips: use swiotlb_{alloc,free}</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 10, 2018, 8:09 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180110080932.14157-21-hch@lst.de&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10154435/mbox/"
   >mbox</a>
|
   <a href="/patch/10154435/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10154435/">/patch/10154435/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	81E4B60231 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Jan 2018 08:11:34 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 75A2E27F60
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Jan 2018 08:11:34 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 69ADE27F7F; Wed, 10 Jan 2018 08:11:34 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E030627DA4
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Jan 2018 08:11:33 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754874AbeAJILc (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 10 Jan 2018 03:11:32 -0500
Received: from bombadil.infradead.org ([65.50.211.133]:49398 &quot;EHLO
	bombadil.infradead.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754418AbeAJIKk (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 10 Jan 2018 03:10:40 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=infradead.org; s=bombadil.20170209;
	h=References:In-Reply-To:Message-Id:
	Date:Subject:Cc:To:From:Sender:Reply-To:MIME-Version:Content-Type:
	Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
	Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
	List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
	bh=gfCa4i5CyZEikn5WDU5+lgokjLRketpgU5nNf7Pg+qI=;
	b=VnPJYfusDYcNz8najPUNtE43A
	0fOy8wcPjYvISujQIDHItHu7ftBK2MKNE7iHF/3U32HNQ1hkOuzsjBBtNg1eKf1t5yZQSYwe/+5O4
	ICpZOwtPdR9hBZ+MDDmAoOV74A1+njjX3Z57kkOahJ7VEBX0GcaGA5eJk9o1h1HKz/mXL7GpHgG5C
	AW/oGuQLSGDa44Fr9YELMr96Vsop4iKVqJCRUQ9Z+9X9HZ+pVvYkb491vgGBLc4/T7Dx76W69sHrO
	652uVINy2SF2l6UHCKxNqQOXjUr1PeWHhCTuRJA9xQzLZfdJU9RbmKMZsJcAsrWaGTknT2fbx/fkq
	nGAjDEW5g==;
Received: from clnet-p099-196.ikbnet.co.at ([83.175.99.196] helo=localhost)
	by bombadil.infradead.org with esmtpsa (Exim 4.89 #1 (Red Hat
	Linux)) id 1eZBSz-0000me-0k; Wed, 10 Jan 2018 08:10:33 +0000
From: Christoph Hellwig &lt;hch@lst.de&gt;
To: iommu@lists.linux-foundation.org
Cc: Konrad Rzeszutek Wilk &lt;konrad@darnok.org&gt;,
	Michal Simek &lt;monstr@monstr.eu&gt;, Guan Xuetao &lt;gxt@mprc.pku.edu.cn&gt;,
	=?UTF-8?q?Christian=20K=C3=B6nig?= &lt;ckoenig.leichtzumerken@gmail.com&gt;,
	linux-arm-kernel@lists.infradead.org, linux-ia64@vger.kernel.org,
	linux-mips@linux-mips.org, linuxppc-dev@lists.ozlabs.org,
	x86@kernel.org, linux-arch@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH 20/22] mips: use swiotlb_{alloc,free}
Date: Wed, 10 Jan 2018 09:09:30 +0100
Message-Id: &lt;20180110080932.14157-21-hch@lst.de&gt;
X-Mailer: git-send-email 2.14.2
In-Reply-To: &lt;20180110080932.14157-1-hch@lst.de&gt;
References: &lt;20180110080932.14157-1-hch@lst.de&gt;
X-SRS-Rewrite: SMTP reverse-path rewritten from &lt;hch@infradead.org&gt; by
	bombadil.infradead.org. See http://www.infradead.org/rpr.html
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a> - Jan. 10, 2018, 8:09 a.m.</div>
<pre class="content">
These already include the GFP_DMA/GFP_DMA32 usage, and will use CMA
memory if enabled, thus avoiding the GFP_NORETRY hack.
<span class="signed-off-by">
Signed-off-by: Christoph Hellwig &lt;hch@lst.de&gt;</span>
---
 arch/mips/cavium-octeon/Kconfig           |  1 +
 arch/mips/cavium-octeon/dma-octeon.c      | 26 +++-----------------------
 arch/mips/loongson64/Kconfig              |  1 +
 arch/mips/loongson64/common/dma-swiotlb.c | 21 ++-------------------
 4 files changed, 7 insertions(+), 42 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/mips/cavium-octeon/Kconfig b/arch/mips/cavium-octeon/Kconfig</span>
<span class="p_header">index 204a1670fd9b..b5eee1a57d6c 100644</span>
<span class="p_header">--- a/arch/mips/cavium-octeon/Kconfig</span>
<span class="p_header">+++ b/arch/mips/cavium-octeon/Kconfig</span>
<span class="p_chunk">@@ -75,6 +75,7 @@</span> <span class="p_context"> config NEED_SG_DMA_LENGTH</span>
 
 config SWIOTLB
 	def_bool y
<span class="p_add">+	select DMA_DIRECT_OPS</span>
 	select IOMMU_HELPER
 	select NEED_SG_DMA_LENGTH
 
<span class="p_header">diff --git a/arch/mips/cavium-octeon/dma-octeon.c b/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="p_header">index 5baf79fce643..c7bb8a407041 100644</span>
<span class="p_header">--- a/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="p_header">+++ b/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="p_chunk">@@ -159,33 +159,13 @@</span> <span class="p_context"> static void octeon_dma_sync_sg_for_device(struct device *dev,</span>
 static void *octeon_dma_alloc_coherent(struct device *dev, size_t size,
 	dma_addr_t *dma_handle, gfp_t gfp, unsigned long attrs)
 {
<span class="p_del">-	void *ret;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (IS_ENABLED(CONFIG_ZONE_DMA) &amp;&amp; dev == NULL)</span>
<span class="p_del">-		gfp |= __GFP_DMA;</span>
<span class="p_del">-	else if (IS_ENABLED(CONFIG_ZONE_DMA) &amp;&amp;</span>
<span class="p_del">-		 dev-&gt;coherent_dma_mask &lt;= DMA_BIT_MASK(24))</span>
<span class="p_del">-		gfp |= __GFP_DMA;</span>
<span class="p_del">-	else if (IS_ENABLED(CONFIG_ZONE_DMA32) &amp;&amp;</span>
<span class="p_del">-		 dev-&gt;coherent_dma_mask &lt;= DMA_BIT_MASK(32))</span>
<span class="p_del">-		gfp |= __GFP_DMA32;</span>
<span class="p_del">-</span>
<span class="p_del">-	/* Don&#39;t invoke OOM killer */</span>
<span class="p_del">-	gfp |= __GFP_NORETRY;</span>
<span class="p_del">-</span>
<span class="p_del">-	ret = swiotlb_alloc_coherent(dev, size, dma_handle, gfp);</span>
<span class="p_add">+	void *ret = swiotlb_alloc(dev, size, dma_handle, gfp, attrs);</span>
 
 	mb();
 
 	return ret;
 }
 
<span class="p_del">-static void octeon_dma_free_coherent(struct device *dev, size_t size,</span>
<span class="p_del">-	void *vaddr, dma_addr_t dma_handle, unsigned long attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	swiotlb_free_coherent(dev, size, vaddr, dma_handle);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static dma_addr_t octeon_unity_phys_to_dma(struct device *dev, phys_addr_t paddr)
 {
 	return paddr;
<span class="p_chunk">@@ -225,7 +205,7 @@</span> <span class="p_context"> EXPORT_SYMBOL(dma_to_phys);</span>
 static struct octeon_dma_map_ops octeon_linear_dma_map_ops = {
 	.dma_map_ops = {
 		.alloc = octeon_dma_alloc_coherent,
<span class="p_del">-		.free = octeon_dma_free_coherent,</span>
<span class="p_add">+		.free = swiotlb_free,</span>
 		.map_page = octeon_dma_map_page,
 		.unmap_page = swiotlb_unmap_page,
 		.map_sg = octeon_dma_map_sg,
<span class="p_chunk">@@ -311,7 +291,7 @@</span> <span class="p_context"> void __init plat_swiotlb_setup(void)</span>
 static struct octeon_dma_map_ops _octeon_pci_dma_map_ops = {
 	.dma_map_ops = {
 		.alloc = octeon_dma_alloc_coherent,
<span class="p_del">-		.free = octeon_dma_free_coherent,</span>
<span class="p_add">+		.free = swiotlb_free,</span>
 		.map_page = octeon_dma_map_page,
 		.unmap_page = swiotlb_unmap_page,
 		.map_sg = octeon_dma_map_sg,
<span class="p_header">diff --git a/arch/mips/loongson64/Kconfig b/arch/mips/loongson64/Kconfig</span>
<span class="p_header">index 0d249fc3cfe9..6f109bb54cdb 100644</span>
<span class="p_header">--- a/arch/mips/loongson64/Kconfig</span>
<span class="p_header">+++ b/arch/mips/loongson64/Kconfig</span>
<span class="p_chunk">@@ -136,6 +136,7 @@</span> <span class="p_context"> config SWIOTLB</span>
 	bool &quot;Soft IOMMU Support for All-Memory DMA&quot;
 	default y
 	depends on CPU_LOONGSON3
<span class="p_add">+	select DMA_DIRECT_OPS</span>
 	select IOMMU_HELPER
 	select NEED_SG_DMA_LENGTH
 	select NEED_DMA_MAP_STATE
<span class="p_header">diff --git a/arch/mips/loongson64/common/dma-swiotlb.c b/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="p_header">index 15388c24a504..7bbcf89475f3 100644</span>
<span class="p_header">--- a/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="p_header">+++ b/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="p_chunk">@@ -13,29 +13,12 @@</span> <span class="p_context"></span>
 static void *loongson_dma_alloc_coherent(struct device *dev, size_t size,
 		dma_addr_t *dma_handle, gfp_t gfp, unsigned long attrs)
 {
<span class="p_del">-	void *ret;</span>
<span class="p_add">+	void *ret = swiotlb_alloc(dev, size, dma_handle, gfp, attrs);</span>
 
<span class="p_del">-	if ((IS_ENABLED(CONFIG_ISA) &amp;&amp; dev == NULL) ||</span>
<span class="p_del">-	    (IS_ENABLED(CONFIG_ZONE_DMA) &amp;&amp;</span>
<span class="p_del">-	     dev-&gt;coherent_dma_mask &lt; DMA_BIT_MASK(32)))</span>
<span class="p_del">-		gfp |= __GFP_DMA;</span>
<span class="p_del">-	else if (IS_ENABLED(CONFIG_ZONE_DMA32) &amp;&amp;</span>
<span class="p_del">-		 dev-&gt;coherent_dma_mask &lt; DMA_BIT_MASK(40))</span>
<span class="p_del">-		gfp |= __GFP_DMA32;</span>
<span class="p_del">-</span>
<span class="p_del">-	gfp |= __GFP_NORETRY;</span>
<span class="p_del">-</span>
<span class="p_del">-	ret = swiotlb_alloc_coherent(dev, size, dma_handle, gfp);</span>
 	mb();
 	return ret;
 }
 
<span class="p_del">-static void loongson_dma_free_coherent(struct device *dev, size_t size,</span>
<span class="p_del">-		void *vaddr, dma_addr_t dma_handle, unsigned long attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	swiotlb_free_coherent(dev, size, vaddr, dma_handle);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static dma_addr_t loongson_dma_map_page(struct device *dev, struct page *page,
 				unsigned long offset, size_t size,
 				enum dma_data_direction dir,
<span class="p_chunk">@@ -106,7 +89,7 @@</span> <span class="p_context"> phys_addr_t dma_to_phys(struct device *dev, dma_addr_t daddr)</span>
 
 static const struct dma_map_ops loongson_dma_map_ops = {
 	.alloc = loongson_dma_alloc_coherent,
<span class="p_del">-	.free = loongson_dma_free_coherent,</span>
<span class="p_add">+	.free = swiotlb_free,</span>
 	.map_page = loongson_dma_map_page,
 	.unmap_page = swiotlb_unmap_page,
 	.map_sg = loongson_dma_map_sg,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



