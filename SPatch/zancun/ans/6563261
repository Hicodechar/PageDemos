
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[3/3] x86/crash: Allocate enough low memory when crashkernel=high - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [3/3] x86/crash: Allocate enough low memory when crashkernel=high</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=7500">Borislav Petkov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 8, 2015, 7:49 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1433749795-5796-4-git-send-email-bp@alien8.de&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6563261/mbox/"
   >mbox</a>
|
   <a href="/patch/6563261/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6563261/">/patch/6563261/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 5C94EC0020
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  8 Jun 2015 07:50:40 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 0B0E620525
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  8 Jun 2015 07:50:35 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 1F8AE20523
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  8 Jun 2015 07:50:34 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752798AbbFHHuX (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 8 Jun 2015 03:50:23 -0400
Received: from mail.skyhub.de ([78.46.96.112]:54005 &quot;EHLO mail.skyhub.de&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752266AbbFHHt6 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 8 Jun 2015 03:49:58 -0400
X-Virus-Scanned: Nedap ESD1 at mail.skyhub.de
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alien8.de; s=alien8; 
	t=1433749797; bh=ojgLjl9u2FOWk1kgpkbEz6wOHDCpe+LCvpG4H6kOyno=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	MIME-Version:Content-Type:Content-Transfer-Encoding; b=ACOnf8380Cd
	RYZuYj0VNAKmAM4LA8ps105ibiP1NgBK/2vs+BAn9T8DeE0OZy0HZZFRmHAK9pEbFSz
	lL2o3GRIikjr+OeVoMWdonbEc469iGkqAzE8cWAWzqqoqZZUrDJGYpqK3OHpz50JiPu
	fgB2lC+zcZaSpM7rYkJ6OJe4hw=
Received: from mail.skyhub.de ([127.0.0.1])
	by localhost (door.skyhub.de [127.0.0.1]) (amavisd-new, port 10026)
	with ESMTP id cHWWL34dicVQ; Mon,  8 Jun 2015 09:49:57 +0200 (CEST)
Received: from pd.tnic (p5DDC7070.dip0.t-ipconnect.de [93.220.112.112])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mail.skyhub.de (SuperMail on ZX Spectrum 128k) with ESMTPSA id
	8E3BC1DA23B; Mon,  8 Jun 2015 09:49:56 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=alien8.de; s=alien8; 
	t=1433749797; bh=ojgLjl9u2FOWk1kgpkbEz6wOHDCpe+LCvpG4H6kOyno=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	MIME-Version:Content-Type:Content-Transfer-Encoding; b=ACOnf8380Cd
	RYZuYj0VNAKmAM4LA8ps105ibiP1NgBK/2vs+BAn9T8DeE0OZy0HZZFRmHAK9pEbFSz
	lL2o3GRIikjr+OeVoMWdonbEc469iGkqAzE8cWAWzqqoqZZUrDJGYpqK3OHpz50JiPu
	fgB2lC+zcZaSpM7rYkJ6OJe4hw=
Received: by pd.tnic (Postfix, from userid 1000)
	id A12CD16044D; Mon,  8 Jun 2015 09:49:55 +0200 (CEST)
From: Borislav Petkov &lt;bp@alien8.de&gt;
To: Ingo Molnar &lt;mingo@kernel.org&gt;
Cc: LKML &lt;linux-kernel@vger.kernel.org&gt;
Subject: [PATCH 3/3] x86/crash: Allocate enough low memory when
	crashkernel=high
Date: Mon,  8 Jun 2015 09:49:55 +0200
Message-Id: &lt;1433749795-5796-4-git-send-email-bp@alien8.de&gt;
X-Mailer: git-send-email 2.3.5
In-Reply-To: &lt;1433749795-5796-1-git-send-email-bp@alien8.de&gt;
References: &lt;1433749795-5796-1-git-send-email-bp@alien8.de&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.8 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID,T_RP_MATCHES_RCVD,UNPARSEABLE_RELAY
	autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7500">Borislav Petkov</a> - June 8, 2015, 7:49 a.m.</div>
<pre class="content">
<span class="from">From: Joerg Roedel &lt;jroedel@suse.de&gt;</span>

When the crash kernel is loaded above 4GiB in memory, the
first kernel allocates only 72MiB of low-memory for the DMA
requirements of the second kernel. On systems with many
devices this is not enough and causes device driver
initialization errors and failed crash dumps. Testing by
SUSE and Redhat has shown that 256MiB is a good default
value for now and the discussion has lead to this value as
well. So set this default value to 256MiB to make sure there
is enough memory available for DMA.
<span class="signed-off-by">
Signed-off-by: Joerg Roedel &lt;jroedel@suse.de&gt;</span>
<span class="acked-by">Acked-by: Baoquan He &lt;bhe@redhat.com&gt;</span>
Cc: Baoquan He &lt;bhe@redhat.com&gt;
Cc: Dave Young &lt;dyoung@redhat.com&gt;
Cc: &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;
Cc: Ingo Molnar &lt;mingo@redhat.com&gt;
Cc: Jörg Rödel &lt;joro@8bytes.org&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Cc: Vivek Goyal &lt;vgoyal@redhat.com&gt;
Cc: kexec@lists.infradead.org
Cc: x86-ml &lt;x86@kernel.org&gt;
Link: http://lkml.kernel.org/r/1433500202-25531-4-git-send-email-joro@8bytes.org
[ Reflow comment. ]
<span class="signed-off-by">Signed-off-by: Borislav Petkov &lt;bp@suse.de&gt;</span>
---
 arch/x86/kernel/setup.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=16">Yinghai Lu</a> - June 9, 2015, 12:20 a.m.</div>
<pre class="content">
On Mon, Jun 8, 2015 at 12:49 AM, Borislav Petkov &lt;bp@alien8.de&gt; wrote:
<span class="quote">&gt; From: Joerg Roedel &lt;jroedel@suse.de&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; When the crash kernel is loaded above 4GiB in memory, the</span>
<span class="quote">&gt; first kernel allocates only 72MiB of low-memory for the DMA</span>
<span class="quote">&gt; requirements of the second kernel. On systems with many</span>
<span class="quote">&gt; devices this is not enough and causes device driver</span>
<span class="quote">&gt; initialization errors and failed crash dumps. Testing by</span>
<span class="quote">&gt; SUSE and Redhat has shown that 256MiB is a good default</span>
<span class="quote">&gt; value for now and the discussion has lead to this value as</span>
<span class="quote">&gt; well. So set this default value to 256MiB to make sure there</span>
<span class="quote">&gt; is enough memory available for DMA.</span>

Is the 256MiB too big?

BTW, the affected system does not support iommu?

on my intel test box with 6T and 16 pcie cards does not hit the 72MiB
limit.

So the affected system is 12T and more cards?
<span class="quote">
&gt;</span>
<span class="quote">&gt; Signed-off-by: Joerg Roedel &lt;jroedel@suse.de&gt;</span>
<span class="quote">&gt; Acked-by: Baoquan He &lt;bhe@redhat.com&gt;</span>
<span class="quote">&gt; Cc: Baoquan He &lt;bhe@redhat.com&gt;</span>
<span class="quote">&gt; Cc: Dave Young &lt;dyoung@redhat.com&gt;</span>
<span class="quote">&gt; Cc: &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;</span>
<span class="quote">&gt; Cc: Ingo Molnar &lt;mingo@redhat.com&gt;</span>
<span class="quote">&gt; Cc: Jörg Rödel &lt;joro@8bytes.org&gt;</span>
<span class="quote">&gt; Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>
<span class="quote">&gt; Cc: Vivek Goyal &lt;vgoyal@redhat.com&gt;</span>
<span class="quote">&gt; Cc: kexec@lists.infradead.org</span>
<span class="quote">&gt; Cc: x86-ml &lt;x86@kernel.org&gt;</span>
<span class="quote">&gt; Link: http://lkml.kernel.org/r/1433500202-25531-4-git-send-email-joro@8bytes.org</span>
<span class="quote">&gt; [ Reflow comment. ]</span>
<span class="quote">&gt; Signed-off-by: Borislav Petkov &lt;bp@suse.de&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/x86/kernel/setup.c | 13 ++++++++-----</span>
<span class="quote">&gt;  1 file changed, 8 insertions(+), 5 deletions(-)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; diff --git a/arch/x86/kernel/setup.c b/arch/x86/kernel/setup.c</span>
<span class="quote">&gt; index d74ac33290ae..5a697e56634c 100644</span>
<span class="quote">&gt; --- a/arch/x86/kernel/setup.c</span>
<span class="quote">&gt; +++ b/arch/x86/kernel/setup.c</span>
<span class="quote">&gt; @@ -531,12 +531,15 @@ static void __init reserve_crashkernel_low(void)</span>
<span class="quote">&gt;         if (ret != 0) {</span>
<span class="quote">&gt;                 /*</span>
<span class="quote">&gt;                  * two parts from lib/swiotlb.c:</span>
<span class="quote">&gt; -                *      swiotlb size: user specified with swiotlb= or default.</span>
<span class="quote">&gt; -                *      swiotlb overflow buffer: now is hardcoded to 32k.</span>
<span class="quote">&gt; -                *              We round it to 8M for other buffers that</span>
<span class="quote">&gt; -                *              may need to stay low too.</span>
<span class="quote">&gt; +                * - swiotlb size: user-specified with swiotlb= or default.</span>
<span class="quote">&gt; +                *</span>
<span class="quote">&gt; +                * -swiotlb overflow buffer: now hardcoded to 32k.</span>

why do you need to treat them differently ?
&quot;- swiotlb&quot; and &quot;-swiotlb&quot;
<span class="quote">
&gt; +                *</span>

Why do you need to put extra blank line here? that 8M round up
is for swiotlb overflow buffer.
<span class="quote">
&gt; +                * We round it to 8M for other buffers that may need to stay low</span>
<span class="quote">&gt; +                * too. Also make sure we allocate enough extra low memory so</span>
<span class="quote">&gt; +                * that we don&#39;t run out of DMA buffers for 32-bit devices.</span>
<span class="quote">&gt;                  */</span>
<span class="quote">&gt; -               low_size = swiotlb_size_or_default() + (8UL&lt;&lt;20);</span>
<span class="quote">&gt; +               low_size = max(swiotlb_size_or_default() + (8UL&lt;&lt;20), 256UL&lt;&lt;20);</span>
<span class="quote">&gt;                 auto_set = true;</span>
<span class="quote">&gt;         } else {</span>
<span class="quote">&gt;                 /* passed with crashkernel=0,low ? */</span>
<span class="quote">&gt; --</span>
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=73061">Baoquan He</a> - June 10, 2015, 7:04 a.m.</div>
<pre class="content">
On 06/08/15 at 05:20pm, Yinghai Lu wrote:
<span class="quote">&gt; On Mon, Jun 8, 2015 at 12:49 AM, Borislav Petkov &lt;bp@alien8.de&gt; wrote:</span>
<span class="quote">&gt; &gt; From: Joerg Roedel &lt;jroedel@suse.de&gt;</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; When the crash kernel is loaded above 4GiB in memory, the</span>
<span class="quote">&gt; &gt; first kernel allocates only 72MiB of low-memory for the DMA</span>
<span class="quote">&gt; &gt; requirements of the second kernel. On systems with many</span>
<span class="quote">&gt; &gt; devices this is not enough and causes device driver</span>
<span class="quote">&gt; &gt; initialization errors and failed crash dumps. Testing by</span>
<span class="quote">&gt; &gt; SUSE and Redhat has shown that 256MiB is a good default</span>
<span class="quote">&gt; &gt; value for now and the discussion has lead to this value as</span>
<span class="quote">&gt; &gt; well. So set this default value to 256MiB to make sure there</span>
<span class="quote">&gt; &gt; is enough memory available for DMA.</span>

Hi Yinghai,
<span class="quote">
&gt; </span>
<span class="quote">&gt; Is the 256MiB too big?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; BTW, the affected system does not support iommu?</span>

I guess the affected system should not support hw iommu or turned off hw
iommu since hw iommu always screw up kdump.
<span class="quote">
&gt; </span>
<span class="quote">&gt; on my intel test box with 6T and 16 pcie cards does not hit the 72MiB</span>
<span class="quote">&gt; limit.</span>

In fact in this case, it doesn&#39;t matter how much memory the system has
since most of them is above 4G and only 72M is reserved for dma/swiotlb
in kdump kernel. And it doesn&#39;t matter much how many pci/pcie cards the
system has since it matters how greedy those devices expects dma
allocation.

Before Joerg posted this patchset v1, our customer complained about
this too. That means this is not individual case. I think it makes sense
to increase the default low-memory to make kdump succeed, it&#39;s
definitely better than letting user get a failed kdump and then know
they need specify more low-memory manually. If user clearly know their
system doesn&#39;t need so much low-memory, specifying crashkernel=xx,low
works for them.
<span class="quote">&gt; </span>
<span class="quote">&gt; So the affected system is 12T and more cards?</span>

In the case of my bug, it&#39;s a system with 12T and many cards.

Thanks
Baoquan
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; Signed-off-by: Joerg Roedel &lt;jroedel@suse.de&gt;</span>
<span class="quote">&gt; &gt; Acked-by: Baoquan He &lt;bhe@redhat.com&gt;</span>
<span class="quote">&gt; &gt; Cc: Baoquan He &lt;bhe@redhat.com&gt;</span>
<span class="quote">&gt; &gt; Cc: Dave Young &lt;dyoung@redhat.com&gt;</span>
<span class="quote">&gt; &gt; Cc: &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;</span>
<span class="quote">&gt; &gt; Cc: Ingo Molnar &lt;mingo@redhat.com&gt;</span>
<span class="quote">&gt; &gt; Cc: Jörg Rödel &lt;joro@8bytes.org&gt;</span>
<span class="quote">&gt; &gt; Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>
<span class="quote">&gt; &gt; Cc: Vivek Goyal &lt;vgoyal@redhat.com&gt;</span>
<span class="quote">&gt; &gt; Cc: kexec@lists.infradead.org</span>
<span class="quote">&gt; &gt; Cc: x86-ml &lt;x86@kernel.org&gt;</span>
<span class="quote">&gt; &gt; Link: http://lkml.kernel.org/r/1433500202-25531-4-git-send-email-joro@8bytes.org</span>
<span class="quote">&gt; &gt; [ Reflow comment. ]</span>
<span class="quote">&gt; &gt; Signed-off-by: Borislav Petkov &lt;bp@suse.de&gt;</span>
<span class="quote">&gt; &gt; ---</span>
<span class="quote">&gt; &gt;  arch/x86/kernel/setup.c | 13 ++++++++-----</span>
<span class="quote">&gt; &gt;  1 file changed, 8 insertions(+), 5 deletions(-)</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; diff --git a/arch/x86/kernel/setup.c b/arch/x86/kernel/setup.c</span>
<span class="quote">&gt; &gt; index d74ac33290ae..5a697e56634c 100644</span>
<span class="quote">&gt; &gt; --- a/arch/x86/kernel/setup.c</span>
<span class="quote">&gt; &gt; +++ b/arch/x86/kernel/setup.c</span>
<span class="quote">&gt; &gt; @@ -531,12 +531,15 @@ static void __init reserve_crashkernel_low(void)</span>
<span class="quote">&gt; &gt;         if (ret != 0) {</span>
<span class="quote">&gt; &gt;                 /*</span>
<span class="quote">&gt; &gt;                  * two parts from lib/swiotlb.c:</span>
<span class="quote">&gt; &gt; -                *      swiotlb size: user specified with swiotlb= or default.</span>
<span class="quote">&gt; &gt; -                *      swiotlb overflow buffer: now is hardcoded to 32k.</span>
<span class="quote">&gt; &gt; -                *              We round it to 8M for other buffers that</span>
<span class="quote">&gt; &gt; -                *              may need to stay low too.</span>
<span class="quote">&gt; &gt; +                * - swiotlb size: user-specified with swiotlb= or default.</span>
<span class="quote">&gt; &gt; +                *</span>
<span class="quote">&gt; &gt; +                * -swiotlb overflow buffer: now hardcoded to 32k.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; why do you need to treat them differently ?</span>
<span class="quote">&gt; &quot;- swiotlb&quot; and &quot;-swiotlb&quot;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; +                *</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Why do you need to put extra blank line here? that 8M round up</span>
<span class="quote">&gt; is for swiotlb overflow buffer.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; +                * We round it to 8M for other buffers that may need to stay low</span>
<span class="quote">&gt; &gt; +                * too. Also make sure we allocate enough extra low memory so</span>
<span class="quote">&gt; &gt; +                * that we don&#39;t run out of DMA buffers for 32-bit devices.</span>
<span class="quote">&gt; &gt;                  */</span>
<span class="quote">&gt; &gt; -               low_size = swiotlb_size_or_default() + (8UL&lt;&lt;20);</span>
<span class="quote">&gt; &gt; +               low_size = max(swiotlb_size_or_default() + (8UL&lt;&lt;20), 256UL&lt;&lt;20);</span>
<span class="quote">&gt; &gt;                 auto_set = true;</span>
<span class="quote">&gt; &gt;         } else {</span>
<span class="quote">&gt; &gt;                 /* passed with crashkernel=0,low ? */</span>
<span class="quote">&gt; &gt; --</span>
<span class="quote">&gt; --</span>
<span class="quote">&gt; To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in</span>
<span class="quote">&gt; the body of a message to majordomo@vger.kernel.org</span>
<span class="quote">&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html</span>
<span class="quote">&gt; Please read the FAQ at  http://www.tux.org/lkml/</span>
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=16">Yinghai Lu</a> - June 10, 2015, 5:48 p.m.</div>
<pre class="content">
On Wed, Jun 10, 2015 at 12:04 AM, Baoquan He &lt;bhe@redhat.com&gt; wrote:
<span class="quote">&gt;</span>
<span class="quote">&gt; In fact in this case, it doesn&#39;t matter how much memory the system has</span>
<span class="quote">&gt; since most of them is above 4G and only 72M is reserved for dma/swiotlb</span>
<span class="quote">&gt; in kdump kernel. And it doesn&#39;t matter much how many pci/pcie cards the</span>
<span class="quote">&gt; system has since it matters how greedy those devices expects dma</span>
<span class="quote">&gt; allocation.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Before Joerg posted this patchset v1, our customer complained about</span>
<span class="quote">&gt; this too. That means this is not individual case. I think it makes sense</span>
<span class="quote">&gt; to increase the default low-memory to make kdump succeed, it&#39;s</span>
<span class="quote">&gt; definitely better than letting user get a failed kdump and then know</span>
<span class="quote">&gt; they need specify more low-memory manually. If user clearly know their</span>
<span class="quote">&gt; system doesn&#39;t need so much low-memory, specifying crashkernel=xx,low</span>
<span class="quote">&gt; works for them.</span>

Now intel 4socket or 8socket system mostly have [2G,4G) for mmio low.
also I saw one system had [1.5G, 4G) for mmio.

So under 4G low ram is tight, with changing default to 256M is just lazy
and punishing the other system that does not need that.
those systems do not need to have &quot;crashkernel=xx,low&quot; before.

should have other smart way to detect and update the default value.
even dmi blacklist way is better than just changing default value.

Thanks

Yinghai
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=73061">Baoquan He</a> - June 11, 2015, 12:36 a.m.</div>
<pre class="content">
On 06/10/15 at 10:48am, Yinghai Lu wrote:
<span class="quote">&gt; On Wed, Jun 10, 2015 at 12:04 AM, Baoquan He &lt;bhe@redhat.com&gt; wrote:</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; In fact in this case, it doesn&#39;t matter how much memory the system has</span>
<span class="quote">&gt; &gt; since most of them is above 4G and only 72M is reserved for dma/swiotlb</span>
<span class="quote">&gt; &gt; in kdump kernel. And it doesn&#39;t matter much how many pci/pcie cards the</span>
<span class="quote">&gt; &gt; system has since it matters how greedy those devices expects dma</span>
<span class="quote">&gt; &gt; allocation.</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; Before Joerg posted this patchset v1, our customer complained about</span>
<span class="quote">&gt; &gt; this too. That means this is not individual case. I think it makes sense</span>
<span class="quote">&gt; &gt; to increase the default low-memory to make kdump succeed, it&#39;s</span>
<span class="quote">&gt; &gt; definitely better than letting user get a failed kdump and then know</span>
<span class="quote">&gt; &gt; they need specify more low-memory manually. If user clearly know their</span>
<span class="quote">&gt; &gt; system doesn&#39;t need so much low-memory, specifying crashkernel=xx,low</span>
<span class="quote">&gt; &gt; works for them.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Now intel 4socket or 8socket system mostly have [2G,4G) for mmio low.</span>
<span class="quote">&gt; also I saw one system had [1.5G, 4G) for mmio.</span>

Really? How does it work supporting so many pcie devices but with
so little DMA32 space? Do they support dma above 4G, or hw iommu is
default? Surely for both tight low-memory is not a worry.
<span class="quote">
&gt; </span>
<span class="quote">&gt; So under 4G low ram is tight, with changing default to 256M is just lazy</span>
<span class="quote">&gt; and punishing the other system that does not need that.</span>
<span class="quote">&gt; those systems do not need to have &quot;crashkernel=xx,low&quot; before.</span>

OK. Seems defaulting to whom is controversial. Defaulting to 72M kdump
on some systems will die. Defaulting to 256M some special systems will
be tight on dma/dma32 memory, does their kdump die? If not I vote for
256M. 256M is from Joerg&#39;s experimental data, I remember he said his
machine need around 200M, then why not 256M. Otherwise it need be
increased sooner or later.
<span class="quote">
&gt; </span>
<span class="quote">&gt; should have other smart way to detect and update the default value.</span>
<span class="quote">&gt; even dmi blacklist way is better than just changing default value.</span>

I am not sure about this. All systems expecting more low-memory need be
checked out?
<span class="quote">
&gt; </span>
<span class="quote">&gt; Thanks</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Yinghai</span>
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=317">Joerg Roedel</a> - June 11, 2015, 6:44 a.m.</div>
<pre class="content">
On Wed, Jun 10, 2015 at 10:48:14AM -0700, Yinghai Lu wrote:
<span class="quote">&gt; So under 4G low ram is tight, with changing default to 256M is just lazy</span>
<span class="quote">&gt; and punishing the other system that does not need that.</span>
<span class="quote">&gt; those systems do not need to have &quot;crashkernel=xx,low&quot; before.</span>

The definition of &#39;default&#39; is that it should be a good value to work
(ideally) everywhere. The previous value did not fulfill this
definition, as on systems without (an enabled) hardware IOMMU and some
32bit-DMA-only devices the crashkernel quickly ran out of low-mem with
it.

And the new default value is not just one that we guessed as being a
better one. Both Baoquan and me did testing on affected systems and
after a discussion we agreed on it.
<span class="quote">
&gt; should have other smart way to detect and update the default value.</span>
<span class="quote">&gt; even dmi blacklist way is better than just changing default value.</span>

DMI information is not enough, it is about the availability of a
hardware IOMMU and the amount and kind of devices needing low-mem for
DMA. This means introducing heuristics, which is often the worst
solution, because heuristics are complex and if we fix it for one
machine we might break many others. So changing the default to a more
workable value is the best solution imho.

But if you have a better idea I am happy to review your patches.


	Joerg

--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/kernel/setup.c b/arch/x86/kernel/setup.c</span>
<span class="p_header">index d74ac33290ae..5a697e56634c 100644</span>
<span class="p_header">--- a/arch/x86/kernel/setup.c</span>
<span class="p_header">+++ b/arch/x86/kernel/setup.c</span>
<span class="p_chunk">@@ -531,12 +531,15 @@</span> <span class="p_context"> static void __init reserve_crashkernel_low(void)</span>
 	if (ret != 0) {
 		/*
 		 * two parts from lib/swiotlb.c:
<span class="p_del">-		 *	swiotlb size: user specified with swiotlb= or default.</span>
<span class="p_del">-		 *	swiotlb overflow buffer: now is hardcoded to 32k.</span>
<span class="p_del">-		 *		We round it to 8M for other buffers that</span>
<span class="p_del">-		 *		may need to stay low too.</span>
<span class="p_add">+		 * - swiotlb size: user-specified with swiotlb= or default.</span>
<span class="p_add">+		 *</span>
<span class="p_add">+		 * -swiotlb overflow buffer: now hardcoded to 32k.</span>
<span class="p_add">+		 *</span>
<span class="p_add">+		 * We round it to 8M for other buffers that may need to stay low</span>
<span class="p_add">+		 * too. Also make sure we allocate enough extra low memory so</span>
<span class="p_add">+		 * that we don&#39;t run out of DMA buffers for 32-bit devices.</span>
 		 */
<span class="p_del">-		low_size = swiotlb_size_or_default() + (8UL&lt;&lt;20);</span>
<span class="p_add">+		low_size = max(swiotlb_size_or_default() + (8UL&lt;&lt;20), 256UL&lt;&lt;20);</span>
 		auto_set = true;
 	} else {
 		/* passed with crashkernel=0,low ? */

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



