
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[09/11] mm: debug: kill VM_BUG_ON_VMA - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [09/11] mm: debug: kill VM_BUG_ON_VMA</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=49271">Sasha Levin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>May 14, 2015, 5:10 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1431623414-1905-10-git-send-email-sasha.levin@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6407941/mbox/"
   >mbox</a>
|
   <a href="/patch/6407941/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6407941/">/patch/6407941/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 35B549F1CC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 14 May 2015 17:12:28 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 8415320328
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 14 May 2015 17:12:23 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 0C7F4202EC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 14 May 2015 17:12:22 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1030331AbbENRLj (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 14 May 2015 13:11:39 -0400
Received: from aserp1040.oracle.com ([141.146.126.69]:21174 &quot;EHLO
	aserp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1030272AbbENRKr (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 14 May 2015 13:10:47 -0400
Received: from userv0021.oracle.com (userv0021.oracle.com [156.151.31.71])
	by aserp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2) with
	ESMTP id t4EHAZ5O008219
	(version=TLSv1 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Thu, 14 May 2015 17:10:36 GMT
Received: from aserv0122.oracle.com (aserv0122.oracle.com [141.146.126.236])
	by userv0021.oracle.com (8.13.8/8.13.8) with ESMTP id
	t4EHAZ8A010870
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL); 
	Thu, 14 May 2015 17:10:35 GMT
Received: from abhmp0016.oracle.com (abhmp0016.oracle.com [141.146.116.22])
	by aserv0122.oracle.com (8.13.8/8.13.8) with ESMTP id
	t4EHAZnd023882; Thu, 14 May 2015 17:10:35 GMT
Received: from lappy.hsd1.nh.comcast.net (/10.159.228.231)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Thu, 14 May 2015 10:10:35 -0700
From: Sasha Levin &lt;sasha.levin@oracle.com&gt;
To: linux-mm@kvack.org
Cc: akpm@linux-foundation.org, linux-kernel@vger.kernel.org,
	kirill@shutemov.name, Sasha Levin &lt;sasha.levin@oracle.com&gt;
Subject: [PATCH 09/11] mm: debug: kill VM_BUG_ON_VMA
Date: Thu, 14 May 2015 13:10:12 -0400
Message-Id: &lt;1431623414-1905-10-git-send-email-sasha.levin@oracle.com&gt;
X-Mailer: git-send-email 2.1.0
In-Reply-To: &lt;1431623414-1905-1-git-send-email-sasha.levin@oracle.com&gt;
References: &lt;1431623414-1905-1-git-send-email-sasha.levin@oracle.com&gt;
X-Source-IP: userv0021.oracle.com [156.151.31.71]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=49271">Sasha Levin</a> - May 14, 2015, 5:10 p.m.</div>
<pre class="content">
Just use VM_BUG() instead.
<span class="signed-off-by">
Signed-off-by: Sasha Levin &lt;sasha.levin@oracle.com&gt;</span>
---
 include/linux/huge_mm.h |    2 +-
 include/linux/mmdebug.h |    8 --------
 include/linux/rmap.h    |    2 +-
 mm/gup.c                |    4 ++--
 mm/huge_memory.c        |    6 +++---
 mm/hugetlb.c            |   14 +++++++-------
 mm/interval_tree.c      |    2 +-
 mm/mmap.c               |   11 +++++------
 mm/mremap.c             |    4 ++--
 mm/rmap.c               |    6 +++---
 10 files changed, 25 insertions(+), 34 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/linux/huge_mm.h b/include/linux/huge_mm.h</span>
<span class="p_header">index 44a840a..cfd745b 100644</span>
<span class="p_header">--- a/include/linux/huge_mm.h</span>
<span class="p_header">+++ b/include/linux/huge_mm.h</span>
<span class="p_chunk">@@ -136,7 +136,7 @@</span> <span class="p_context"> extern int __pmd_trans_huge_lock(pmd_t *pmd, struct vm_area_struct *vma,</span>
 static inline int pmd_trans_huge_lock(pmd_t *pmd, struct vm_area_struct *vma,
 		spinlock_t **ptl)
 {
<span class="p_del">-	VM_BUG_ON_VMA(!rwsem_is_locked(&amp;vma-&gt;vm_mm-&gt;mmap_sem), vma);</span>
<span class="p_add">+	VM_BUG(!rwsem_is_locked(&amp;vma-&gt;vm_mm-&gt;mmap_sem), &quot;%pZv&quot;, vma);</span>
 	if (pmd_trans_huge(*pmd))
 		return __pmd_trans_huge_lock(pmd, vma, ptl);
 	else
<span class="p_header">diff --git a/include/linux/mmdebug.h b/include/linux/mmdebug.h</span>
<span class="p_header">index f43f868..5106ab5 100644</span>
<span class="p_header">--- a/include/linux/mmdebug.h</span>
<span class="p_header">+++ b/include/linux/mmdebug.h</span>
<span class="p_chunk">@@ -20,13 +20,6 @@</span> <span class="p_context"> char *format_mm(const struct mm_struct *mm, char *buf, char *end);</span>
 		}							\
 	} while (0)
 #define VM_BUG_ON(cond) VM_BUG(cond, &quot;%s\n&quot;, __stringify(cond))
<span class="p_del">-#define VM_BUG_ON_VMA(cond, vma)					\</span>
<span class="p_del">-	do {								\</span>
<span class="p_del">-		if (unlikely(cond)) {					\</span>
<span class="p_del">-			pr_emerg(&quot;%pZv&quot;, vma);				\</span>
<span class="p_del">-			BUG();						\</span>
<span class="p_del">-		}							\</span>
<span class="p_del">-	} while (0)</span>
 #define VM_BUG_ON_MM(cond, mm)						\
 	do {								\
 		if (unlikely(cond)) {					\
<span class="p_chunk">@@ -48,7 +41,6 @@</span> <span class="p_context"> static char *format_mm(const struct mm_struct *mm, char *buf, char *end)</span>
 }
 #define VM_BUG(cond, fmt...) BUILD_BUG_ON_INVALID(cond)
 #define VM_BUG_ON(cond) BUILD_BUG_ON_INVALID(cond)
<span class="p_del">-#define VM_BUG_ON_VMA(cond, vma) VM_BUG_ON(cond)</span>
 #define VM_BUG_ON_MM(cond, mm) VM_BUG_ON(cond)
 #define VM_WARN_ON(cond) BUILD_BUG_ON_INVALID(cond)
 #define VM_WARN_ON_ONCE(cond) BUILD_BUG_ON_INVALID(cond)
<span class="p_header">diff --git a/include/linux/rmap.h b/include/linux/rmap.h</span>
<span class="p_header">index bf36b6e..54beb2f 100644</span>
<span class="p_header">--- a/include/linux/rmap.h</span>
<span class="p_header">+++ b/include/linux/rmap.h</span>
<span class="p_chunk">@@ -153,7 +153,7 @@</span> <span class="p_context"> int anon_vma_fork(struct vm_area_struct *, struct vm_area_struct *);</span>
 static inline void anon_vma_merge(struct vm_area_struct *vma,
 				  struct vm_area_struct *next)
 {
<span class="p_del">-	VM_BUG_ON_VMA(vma-&gt;anon_vma != next-&gt;anon_vma, vma);</span>
<span class="p_add">+	VM_BUG(vma-&gt;anon_vma != next-&gt;anon_vma, &quot;%pZv&quot;, vma);</span>
 	unlink_anon_vmas(next);
 }
 
<span class="p_header">diff --git a/mm/gup.c b/mm/gup.c</span>
<span class="p_header">index 743648e..0b851ac 100644</span>
<span class="p_header">--- a/mm/gup.c</span>
<span class="p_header">+++ b/mm/gup.c</span>
<span class="p_chunk">@@ -846,8 +846,8 @@</span> <span class="p_context"> long populate_vma_page_range(struct vm_area_struct *vma,</span>
 
 	VM_BUG_ON(start &amp; ~PAGE_MASK);
 	VM_BUG_ON(end   &amp; ~PAGE_MASK);
<span class="p_del">-	VM_BUG_ON_VMA(start &lt; vma-&gt;vm_start, vma);</span>
<span class="p_del">-	VM_BUG_ON_VMA(end   &gt; vma-&gt;vm_end, vma);</span>
<span class="p_add">+	VM_BUG(start &lt; vma-&gt;vm_start, &quot;%pZv&quot;, vma);</span>
<span class="p_add">+	VM_BUG(end &gt; vma-&gt;vm_end, &quot;%pZv&quot;, vma);</span>
 	VM_BUG_ON_MM(!rwsem_is_locked(&amp;mm-&gt;mmap_sem), mm);
 
 	gup_flags = FOLL_TOUCH | FOLL_POPULATE;
<span class="p_header">diff --git a/mm/huge_memory.c b/mm/huge_memory.c</span>
<span class="p_header">index 82ccd2c..ed222a4 100644</span>
<span class="p_header">--- a/mm/huge_memory.c</span>
<span class="p_header">+++ b/mm/huge_memory.c</span>
<span class="p_chunk">@@ -1092,7 +1092,7 @@</span> <span class="p_context"> int do_huge_pmd_wp_page(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 	gfp_t huge_gfp;			/* for allocation and charge */
 
 	ptl = pmd_lockptr(mm, pmd);
<span class="p_del">-	VM_BUG_ON_VMA(!vma-&gt;anon_vma, vma);</span>
<span class="p_add">+	VM_BUG(!vma-&gt;anon_vma, &quot;%pZv&quot;, vma);</span>
 	haddr = address &amp; HPAGE_PMD_MASK;
 	if (is_huge_zero_pmd(orig_pmd))
 		goto alloc;
<span class="p_chunk">@@ -2107,7 +2107,7 @@</span> <span class="p_context"> int khugepaged_enter_vma_merge(struct vm_area_struct *vma,</span>
 	if (vma-&gt;vm_ops)
 		/* khugepaged not yet working on file or special mappings */
 		return 0;
<span class="p_del">-	VM_BUG_ON_VMA(vm_flags &amp; VM_NO_THP, vma);</span>
<span class="p_add">+	VM_BUG(vm_flags &amp; VM_NO_THP, &quot;%pZv&quot;, vma);</span>
 	hstart = (vma-&gt;vm_start + ~HPAGE_PMD_MASK) &amp; HPAGE_PMD_MASK;
 	hend = vma-&gt;vm_end &amp; HPAGE_PMD_MASK;
 	if (hstart &lt; hend)
<span class="p_chunk">@@ -2465,7 +2465,7 @@</span> <span class="p_context"> static bool hugepage_vma_check(struct vm_area_struct *vma)</span>
 		return false;
 	if (is_vma_temporary_stack(vma))
 		return false;
<span class="p_del">-	VM_BUG_ON_VMA(vma-&gt;vm_flags &amp; VM_NO_THP, vma);</span>
<span class="p_add">+	VM_BUG(vma-&gt;vm_flags &amp; VM_NO_THP, &quot;%pZv&quot;, vma);</span>
 	return true;
 }
 
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 55c75da..fbd5718 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -503,7 +503,7 @@</span> <span class="p_context"> static inline struct resv_map *inode_resv_map(struct inode *inode)</span>
 
 static struct resv_map *vma_resv_map(struct vm_area_struct *vma)
 {
<span class="p_del">-	VM_BUG_ON_VMA(!is_vm_hugetlb_page(vma), vma);</span>
<span class="p_add">+	VM_BUG(!is_vm_hugetlb_page(vma), &quot;%pZv&quot;, vma);</span>
 	if (vma-&gt;vm_flags &amp; VM_MAYSHARE) {
 		struct address_space *mapping = vma-&gt;vm_file-&gt;f_mapping;
 		struct inode *inode = mapping-&gt;host;
<span class="p_chunk">@@ -518,8 +518,8 @@</span> <span class="p_context"> static struct resv_map *vma_resv_map(struct vm_area_struct *vma)</span>
 
 static void set_vma_resv_map(struct vm_area_struct *vma, struct resv_map *map)
 {
<span class="p_del">-	VM_BUG_ON_VMA(!is_vm_hugetlb_page(vma), vma);</span>
<span class="p_del">-	VM_BUG_ON_VMA(vma-&gt;vm_flags &amp; VM_MAYSHARE, vma);</span>
<span class="p_add">+	VM_BUG(!is_vm_hugetlb_page(vma), &quot;%pZv&quot;, vma);</span>
<span class="p_add">+	VM_BUG(vma-&gt;vm_flags &amp; VM_MAYSHARE, &quot;%pZv&quot;, vma);</span>
 
 	set_vma_private_data(vma, (get_vma_private_data(vma) &amp;
 				HPAGE_RESV_MASK) | (unsigned long)map);
<span class="p_chunk">@@ -527,15 +527,15 @@</span> <span class="p_context"> static void set_vma_resv_map(struct vm_area_struct *vma, struct resv_map *map)</span>
 
 static void set_vma_resv_flags(struct vm_area_struct *vma, unsigned long flags)
 {
<span class="p_del">-	VM_BUG_ON_VMA(!is_vm_hugetlb_page(vma), vma);</span>
<span class="p_del">-	VM_BUG_ON_VMA(vma-&gt;vm_flags &amp; VM_MAYSHARE, vma);</span>
<span class="p_add">+	VM_BUG(!is_vm_hugetlb_page(vma), &quot;%pZv&quot;, vma);</span>
<span class="p_add">+	VM_BUG(vma-&gt;vm_flags &amp; VM_MAYSHARE, &quot;%pZv&quot;, vma);</span>
 
 	set_vma_private_data(vma, get_vma_private_data(vma) | flags);
 }
 
 static int is_vma_resv_set(struct vm_area_struct *vma, unsigned long flag)
 {
<span class="p_del">-	VM_BUG_ON_VMA(!is_vm_hugetlb_page(vma), vma);</span>
<span class="p_add">+	VM_BUG(!is_vm_hugetlb_page(vma), &quot;%pZv&quot;, vma);</span>
 
 	return (get_vma_private_data(vma) &amp; flag) != 0;
 }
<span class="p_chunk">@@ -543,7 +543,7 @@</span> <span class="p_context"> static int is_vma_resv_set(struct vm_area_struct *vma, unsigned long flag)</span>
 /* Reset counters to 0 and clear all HPAGE_RESV_* flags */
 void reset_vma_resv_huge_pages(struct vm_area_struct *vma)
 {
<span class="p_del">-	VM_BUG_ON_VMA(!is_vm_hugetlb_page(vma), vma);</span>
<span class="p_add">+	VM_BUG(!is_vm_hugetlb_page(vma), &quot;%pZv&quot;, vma);</span>
 	if (!(vma-&gt;vm_flags &amp; VM_MAYSHARE))
 		vma-&gt;vm_private_data = (void *)0;
 }
<span class="p_header">diff --git a/mm/interval_tree.c b/mm/interval_tree.c</span>
<span class="p_header">index f2c2492..49d4f53 100644</span>
<span class="p_header">--- a/mm/interval_tree.c</span>
<span class="p_header">+++ b/mm/interval_tree.c</span>
<span class="p_chunk">@@ -34,7 +34,7 @@</span> <span class="p_context"> void vma_interval_tree_insert_after(struct vm_area_struct *node,</span>
 	struct vm_area_struct *parent;
 	unsigned long last = vma_last_pgoff(node);
 
<span class="p_del">-	VM_BUG_ON_VMA(vma_start_pgoff(node) != vma_start_pgoff(prev), node);</span>
<span class="p_add">+	VM_BUG(vma_start_pgoff(node) != vma_start_pgoff(prev), &quot;%pZv&quot;, node);</span>
 
 	if (!prev-&gt;shared.rb.rb_right) {
 		parent = prev;
<span class="p_header">diff --git a/mm/mmap.c b/mm/mmap.c</span>
<span class="p_header">index bb50cac..f2db320 100644</span>
<span class="p_header">--- a/mm/mmap.c</span>
<span class="p_header">+++ b/mm/mmap.c</span>
<span class="p_chunk">@@ -426,9 +426,8 @@</span> <span class="p_context"> static void validate_mm_rb(struct rb_root *root, struct vm_area_struct *ignore)</span>
 	for (nd = rb_first(root); nd; nd = rb_next(nd)) {
 		struct vm_area_struct *vma;
 		vma = rb_entry(nd, struct vm_area_struct, vm_rb);
<span class="p_del">-		VM_BUG_ON_VMA(vma != ignore &amp;&amp;</span>
<span class="p_del">-			vma-&gt;rb_subtree_gap != vma_compute_subtree_gap(vma),</span>
<span class="p_del">-			vma);</span>
<span class="p_add">+		VM_BUG(vma != ignore &amp;&amp; vma-&gt;rb_subtree_gap != vma_compute_subtree_gap(vma),</span>
<span class="p_add">+		       &quot;%pZv&quot;, vma);</span>
 	}
 }
 
<span class="p_chunk">@@ -805,8 +804,8 @@</span> <span class="p_context"> again:			remove_next = 1 + (end &gt; next-&gt;vm_end);</span>
 	if (!anon_vma &amp;&amp; adjust_next)
 		anon_vma = next-&gt;anon_vma;
 	if (anon_vma) {
<span class="p_del">-		VM_BUG_ON_VMA(adjust_next &amp;&amp; next-&gt;anon_vma &amp;&amp;</span>
<span class="p_del">-			  anon_vma != next-&gt;anon_vma, next);</span>
<span class="p_add">+		VM_BUG(adjust_next &amp;&amp; next-&gt;anon_vma &amp;&amp; anon_vma != next-&gt;anon_vma,</span>
<span class="p_add">+		       &quot;%pZv&quot;, next);</span>
 		anon_vma_lock_write(anon_vma);
 		anon_vma_interval_tree_pre_update_vma(vma);
 		if (adjust_next)
<span class="p_chunk">@@ -2932,7 +2931,7 @@</span> <span class="p_context"> struct vm_area_struct *copy_vma(struct vm_area_struct **vmap,</span>
 			 * safe. It is only safe to keep the vm_pgoff
 			 * linear if there are no pages mapped yet.
 			 */
<span class="p_del">-			VM_BUG_ON_VMA(faulted_in_anon_vma, new_vma);</span>
<span class="p_add">+			VM_BUG(faulted_in_anon_vma, &quot;%pZv&quot;, new_vma);</span>
 			*vmap = vma = new_vma;
 		}
 		*need_rmap_locks = (new_vma-&gt;vm_pgoff &lt;= vma-&gt;vm_pgoff);
<span class="p_header">diff --git a/mm/mremap.c b/mm/mremap.c</span>
<span class="p_header">index a7c93ec..f875e20 100644</span>
<span class="p_header">--- a/mm/mremap.c</span>
<span class="p_header">+++ b/mm/mremap.c</span>
<span class="p_chunk">@@ -194,8 +194,8 @@</span> <span class="p_context"> unsigned long move_page_tables(struct vm_area_struct *vma,</span>
 		if (pmd_trans_huge(*old_pmd)) {
 			int err = 0;
 			if (extent == HPAGE_PMD_SIZE) {
<span class="p_del">-				VM_BUG_ON_VMA(vma-&gt;vm_file || !vma-&gt;anon_vma,</span>
<span class="p_del">-					      vma);</span>
<span class="p_add">+				VM_BUG(vma-&gt;vm_file || !vma-&gt;anon_vma,</span>
<span class="p_add">+				       &quot;%pZv&quot;, vma);</span>
 				/* See comment in move_ptes() */
 				if (need_rmap_locks)
 					anon_vma_lock_write(vma-&gt;anon_vma);
<span class="p_header">diff --git a/mm/rmap.c b/mm/rmap.c</span>
<span class="p_header">index f8a6bca..1ef7e6f 100644</span>
<span class="p_header">--- a/mm/rmap.c</span>
<span class="p_header">+++ b/mm/rmap.c</span>
<span class="p_chunk">@@ -576,7 +576,7 @@</span> <span class="p_context"> vma_address(struct page *page, struct vm_area_struct *vma)</span>
 	unsigned long address = __vma_address(page, vma);
 
 	/* page should be within @vma mapping range */
<span class="p_del">-	VM_BUG_ON_VMA(address &lt; vma-&gt;vm_start || address &gt;= vma-&gt;vm_end, vma);</span>
<span class="p_add">+	VM_BUG(address &lt; vma-&gt;vm_start || address &gt;= vma-&gt;vm_end, &quot;%pZv&quot;, vma);</span>
 
 	return address;
 }
<span class="p_chunk">@@ -972,7 +972,7 @@</span> <span class="p_context"> void page_move_anon_rmap(struct page *page,</span>
 	struct anon_vma *anon_vma = vma-&gt;anon_vma;
 
 	VM_BUG(!PageLocked(page), &quot;%pZp&quot;, page);
<span class="p_del">-	VM_BUG_ON_VMA(!anon_vma, vma);</span>
<span class="p_add">+	VM_BUG(!anon_vma, &quot;%pZv&quot;, vma);</span>
 	VM_BUG(page-&gt;index != linear_page_index(vma, address), &quot;%pZp&quot;, page);
 
 	anon_vma = (void *) anon_vma + PAGE_MAPPING_ANON;
<span class="p_chunk">@@ -1099,7 +1099,7 @@</span> <span class="p_context"> void do_page_add_anon_rmap(struct page *page,</span>
 void page_add_new_anon_rmap(struct page *page,
 	struct vm_area_struct *vma, unsigned long address)
 {
<span class="p_del">-	VM_BUG_ON_VMA(address &lt; vma-&gt;vm_start || address &gt;= vma-&gt;vm_end, vma);</span>
<span class="p_add">+	VM_BUG(address &lt; vma-&gt;vm_start || address &gt;= vma-&gt;vm_end, &quot;%pZv&quot;, vma);</span>
 	SetPageSwapBacked(page);
 	atomic_set(&amp;page-&gt;_mapcount, 0); /* increment count (starts at -1) */
 	if (PageTransHuge(page))

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



