
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v5,2/7] iommu/exynos: Remove dead code - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v5,2/7] iommu/exynos: Remove dead code</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=2061">Marek Szyprowski</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 20, 2016, 7:22 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1476948173-21093-3-git-send-email-m.szyprowski@samsung.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9386081/mbox/"
   >mbox</a>
|
   <a href="/patch/9386081/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9386081/">/patch/9386081/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	2476C607F0 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 20 Oct 2016 07:24:59 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 136B529B22
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 20 Oct 2016 07:24:59 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 084A329B24; Thu, 20 Oct 2016 07:24:59 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7BEAD29B1F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 20 Oct 2016 07:24:58 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1756055AbcJTHXn (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 20 Oct 2016 03:23:43 -0400
Received: from mailout2.w1.samsung.com ([210.118.77.12]:23917 &quot;EHLO
	mailout2.w1.samsung.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751012AbcJTHXh (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 20 Oct 2016 03:23:37 -0400
Received: from eucas1p1.samsung.com (unknown [182.198.249.206])
	by mailout2.w1.samsung.com
	(Oracle Communications Messaging Server 7.0.5.31.0 64bit (built May 5
	2014))
	with ESMTP id &lt;0OFC00E3V4J9UF70@mailout2.w1.samsung.com&gt;; Thu,
	20 Oct 2016 08:23:33 +0100 (BST)
Received: from eusmges4.samsung.com (unknown [203.254.199.244])
	by     eucas1p1.samsung.com (KnoxPortal) with ESMTP id
	20161020072333eucas1p11dd621319fcc0d544a357cc3505dac7d~-LJMUhJhc1037610376eucas1p1i;
	Thu, 20 Oct 2016 07:23:33 +0000 (GMT)
Received: from eucas1p1.samsung.com ( [182.198.249.206])
	by eusmges4.samsung.com (EUCPMTA) with SMTP id 2A.FC.28332.4F078085;
	Thu, 20     Oct 2016 08:23:32 +0100 (BST)
Received: from eusmgms2.samsung.com (unknown [182.198.249.180])
	by     eucas1p1.samsung.com (KnoxPortal) with ESMTP id
	20161020072332eucas1p1d980c1659979bd5bc2918bfc9d40a415~-LJLjkYqy0760807608eucas1p1U;
	Thu, 20 Oct 2016 07:23:32 +0000 (GMT)
X-AuditID: cbfec7f4-f791c6d000006eac-c6-580870f4e409
Received: from eusync2.samsung.com ( [203.254.199.212])
	by eusmgms2.samsung.com (EUCPMTA) with SMTP id 10.BD.10494.0D078085;
	Thu, 20     Oct 2016 08:22:56 +0100 (BST)
Received: from AMDC2765.digital.local ([106.116.147.25])
	by eusync2.samsung.com (Oracle Communications Messaging Server
	7.0.5.31.0 64bit  (built May  5 2014))
	with ESMTPA id &lt;0OFC0074C4J1JF30@eusync2.samsung.com&gt;; Thu,
	20 Oct 2016 08:23:31 +0100 (BST)
From: Marek Szyprowski &lt;m.szyprowski@samsung.com&gt;
To: linux-pm@vger.kernel.org, linux-kernel@vger.kernel.org,
	iommu@lists.linux-foundation.org, linux-samsung-soc@vger.kernel.org
Cc: Marek Szyprowski &lt;m.szyprowski@samsung.com&gt;,
	Joerg Roedel &lt;joro@8bytes.org&gt;,
	Inki Dae &lt;inki.dae@samsung.com&gt;, Kukjin Kim &lt;kgene@kernel.org&gt;,
	Krzysztof Kozlowski &lt;krzk@kernel.org&gt;,
	Bartlomiej Zolnierkiewicz &lt;b.zolnierkie@samsung.com&gt;,
	&quot;Rafael J. Wysocki&quot; &lt;rjw@rjwysocki.net&gt;, Mark Brown &lt;broonie@kernel.org&gt;,
	&quot;Luis R. Rodriguez&quot; &lt;mcgrof@kernel.org&gt;,
	Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	Tomeu Vizoso &lt;tomeu.vizoso@collabora.com&gt;,
	Lukas Wunner &lt;lukas@wunner.de&gt;, Kevin Hilman &lt;khilman@kernel.org&gt;,
	Tobias Jakobi &lt;tjakobi@math.uni-bielefeld.de&gt;,
	Tomasz Figa &lt;tomasz.figa@gmail.com&gt;
Subject: [PATCH v5 2/7] iommu/exynos: Remove dead code
Date: Thu, 20 Oct 2016 09:22:48 +0200
Message-id: &lt;1476948173-21093-3-git-send-email-m.szyprowski@samsung.com&gt;
X-Mailer: git-send-email 1.9.1
In-reply-to: &lt;1476948173-21093-1-git-send-email-m.szyprowski@samsung.com&gt;
X-Brightmail-Tracker: H4sIAAAAAAAAAzWSa0hTYRjHfXfOzs6Wk8Mm9eItWK2i0hQs3jTCpA8n+mCQkBhYS09qObVN
	TSXCS97mNc201LA0M6+pY9i0tGVbtXJekhbhpbylIkrug+GFnGd++/14/s//5YGXxERPuU5k
	ZHQco4iWRUkIAa7R/+t3t8SSQZ7mMXfUVt7KRaW/pgiUXtNKoOLxIhxV9/iinIpXPFQ4uYCh
	6Y5JDjKZtnRYW0mglfw+gMpNbznoz6wzau4b5SFz0TRAX4xDXJTZuMxFDdp1gAqahwg/MT31
	7gmH7hytBfTrx6M8ur0hh6B7qpp4dIn5BaA39TxaPZKF0wXqBkCvtLvR5Vka7oVdwYJTYUxU
	ZAKjOHb6qiBitdgldkCa+LHXTKSAdTcV4JOQ8oYa3TjO8m44MNZKqICAFFHPAew0fbDJCoDq
	rDV8Z2Npos02qAPw7+IPwEoKB35VLQBriqC8oGpRtZ1ypFIBtGTXcqyCUb9xmJn6bDslpk5A
	kzadsDJOSeFMXd42CykaLg93YOx7bvCTvoRrZT51DnY15WPWIkjN8eCbpoKtVnJLXGF7ry1/
	Fmor73NZFsN5g5rHsgscLsm13VAIYFrGEZbLAexfFLLsC98bBrd3McoBFmvKMLZeCLMzRWyE
	hl05FlvNGTg/tGy7vhLA1fFeUARcqoFdA3Bk4pXycEbp7aGUyZXx0eEeoTHydrD1cYybBksn
	qNH76ABFAom9MKKfFyTiyhKUSXIdgCQmcRReCyWDRMIwWVIyo4i5ooiPYpQ64Ezikj3C7upv
	l0RUuCyOuckwsYxiZ8oh+U4pIBm2/Dz/uTcvwr9bbJfaUfFoaTPke5mq/kDCXp9J14AHt7Om
	Dk3dHTl6K0kqbbzTotHe8zRPzNiLjIOyNkvuxYB671k02aNB/Mshbf4OVfuFJWllTvzgDYfA
	tePJ4kRybkZ+suCGUSuYfakJ7GhaDt8ojcvYp75e4TdkeGiaOSjBlREyr8OYQin7D23CH4U0
	AwAA
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFjrIIsWRmVeSWpSXmKPExsVy+t/xK7oXCjgiDKZOFrXYOGM9q8XUh0/Y
	LJoXr2ezmHR/AovFgv3WFp2zN7Bb9D9+zWzxdPNjJovz54Hcy7vmsFl87j3CaDHj/D4mixfP
	pS3WHrnLbnFjwlNGizOnL7FatK3+wGqxatcfRou+tZfYHIQ9nhycx+Sx4+4SRo+ds+6ye2xa
	1cnmsX/uGnaPyTeWM3r8O8buseVqO4tH35ZVjB6fN8l5zGjfxhrAHeVmk5GamJJapJCal5yf
	kpmXbqsUGuKma6GkkJeYm2qrFKHrGxKkpFCWmFMK5BkZoAEH5wD3YCV9uwS3jB+TZAouqFac
	OHCDrYHxj1wXIyeHhICJxPsHG9kgbDGJC/fWA9lcHEICSxglvvf/hXKamCROPvjDClLFJmAo
	0fW2CywhItDIKLFt60R2EIdZ4BmLxIIf28BmCQuYSZzf1QxmswioSjxb1gNm8wp4SHy4vJkZ
	Yp+cxMljk8Gmcgp4Suxe0wsWFwKqeb9xHeMERt4FjAyrGEVSS4tz03OLjfSKE3OLS/PS9ZLz
	czcxAqNv27GfW3Ywdr0LPsQowMGoxMObcY49Qog1say4MvcQowQHs5II77Ecjggh3pTEyqrU
	ovz4otKc1OJDjKZAR01klhJNzgcmhrySeEMTQ3NLQyNjCwtzIyMlcd6pH66ECwmkJ5akZqem
	FqQWwfQxcXBKNTDq9Nrx24aFHZfgc5z/fWfEu8og/spnvMoHumIb8uKCwqbw/0uLM5r1kz/6
	hnD6Qu315l25HLl3pKV7rzkee/dp3aLLbAvEjA4XqKxVTbC79Plb/vKHq57K9DS1/e49ab2E
	kasw5EPr30OHT115E6hSzqqxiluiUslCTsggcPLER1URzbZ1jEosxRmJhlrMRcWJACmymqrU
	AgAA
X-MTR: 20000000000000000@CPGS
X-CMS-MailID: 20161020072332eucas1p1d980c1659979bd5bc2918bfc9d40a415
X-Msg-Generator: CA
X-Sender-IP: 182.198.249.180
X-Local-Sender: =?UTF-8?B?TWFyZWsgU3p5cHJvd3NraRtTUlBPTC1LZXJuZWwgKFRQKRs=?=
	=?UTF-8?B?7IK87ISx7KCE7J6QG1NlbmlvciBTb2Z0d2FyZSBFbmdpbmVlcg==?=
X-Global-Sender: =?UTF-8?B?TWFyZWsgU3p5cHJvd3NraRtTUlBPTC1LZXJuZWwgKFRQKRtT?=
	=?UTF-8?B?YW1zdW5nIEVsZWN0cm9uaWNzG1NlbmlvciBTb2Z0d2FyZSBFbmdpbmVlcg==?=
X-Sender-Code: =?UTF-8?B?QzEwG0VIURtDMTBDRDAyQ0QwMjczOTI=?=
CMS-TYPE: 201P
X-HopCount: 7
X-CMS-RootMailID: 20161020072332eucas1p1d980c1659979bd5bc2918bfc9d40a415
X-RootMTR: 20161020072332eucas1p1d980c1659979bd5bc2918bfc9d40a415
References: &lt;1476948173-21093-1-git-send-email-m.szyprowski@samsung.com&gt;
	&lt;CGME20161020072332eucas1p1d980c1659979bd5bc2918bfc9d40a415@eucas1p1.samsung.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2061">Marek Szyprowski</a> - Oct. 20, 2016, 7:22 a.m.</div>
<pre class="content">
__sysmmu_enable/disable functions were designed to do ref-count based
operations, but current code always calls them only once, so the code for
checking the conditions and invalid conditions can be simply removed
without any influence to the driver operation.
<span class="signed-off-by">
Signed-off-by: Marek Szyprowski &lt;m.szyprowski@samsung.com&gt;</span>
---
 drivers/iommu/exynos-iommu.c | 65 ++++++++++++--------------------------------
 1 file changed, 17 insertions(+), 48 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/iommu/exynos-iommu.c b/drivers/iommu/exynos-iommu.c</span>
<span class="p_header">index 8ba0d6049a63..4056228b8e5f 100644</span>
<span class="p_header">--- a/drivers/iommu/exynos-iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/exynos-iommu.c</span>
<span class="p_chunk">@@ -460,9 +460,6 @@</span> <span class="p_context"> static bool __sysmmu_disable(struct sysmmu_drvdata *data)</span>
 		__sysmmu_disable_nocount(data);
 
 		dev_dbg(data-&gt;sysmmu, &quot;Disabled\n&quot;);
<span class="p_del">-	} else  {</span>
<span class="p_del">-		dev_dbg(data-&gt;sysmmu, &quot;%d times left to disable\n&quot;,</span>
<span class="p_del">-					data-&gt;activations);</span>
 	}
 
 	spin_unlock_irqrestore(&amp;data-&gt;lock, flags);
<span class="p_chunk">@@ -508,29 +505,18 @@</span> <span class="p_context"> static void __sysmmu_enable_nocount(struct sysmmu_drvdata *data)</span>
 static int __sysmmu_enable(struct sysmmu_drvdata *data, phys_addr_t pgtable,
 			   struct exynos_iommu_domain *domain)
 {
<span class="p_del">-	int ret = 0;</span>
 	unsigned long flags;
 
 	spin_lock_irqsave(&amp;data-&gt;lock, flags);
 	if (set_sysmmu_active(data)) {
 		data-&gt;pgtable = pgtable;
 		data-&gt;domain = domain;
<span class="p_del">-</span>
 		__sysmmu_enable_nocount(data);
<span class="p_del">-</span>
 		dev_dbg(data-&gt;sysmmu, &quot;Enabled\n&quot;);
<span class="p_del">-	} else {</span>
<span class="p_del">-		ret = (pgtable == data-&gt;pgtable) ? 1 : -EBUSY;</span>
<span class="p_del">-</span>
<span class="p_del">-		dev_dbg(data-&gt;sysmmu, &quot;already enabled\n&quot;);</span>
 	}
<span class="p_del">-</span>
<span class="p_del">-	if (WARN_ON(ret &lt; 0))</span>
<span class="p_del">-		set_sysmmu_inactive(data); /* decrement count */</span>
<span class="p_del">-</span>
 	spin_unlock_irqrestore(&amp;data-&gt;lock, flags);
 
<span class="p_del">-	return ret;</span>
<span class="p_add">+	return 0;</span>
 }
 
 static void sysmmu_tlb_invalidate_flpdcache(struct sysmmu_drvdata *data,
<span class="p_chunk">@@ -793,8 +779,8 @@</span> <span class="p_context"> static void exynos_iommu_domain_free(struct iommu_domain *iommu_domain)</span>
 	spin_lock_irqsave(&amp;domain-&gt;lock, flags);
 
 	list_for_each_entry_safe(data, next, &amp;domain-&gt;clients, domain_node) {
<span class="p_del">-		if (__sysmmu_disable(data))</span>
<span class="p_del">-			data-&gt;master = NULL;</span>
<span class="p_add">+		__sysmmu_disable(data);</span>
<span class="p_add">+		data-&gt;master = NULL;</span>
 		list_del_init(&amp;data-&gt;domain_node);
 	}
 
<span class="p_chunk">@@ -829,31 +815,23 @@</span> <span class="p_context"> static void exynos_iommu_detach_device(struct iommu_domain *iommu_domain,</span>
 	phys_addr_t pagetable = virt_to_phys(domain-&gt;pgtable);
 	struct sysmmu_drvdata *data, *next;
 	unsigned long flags;
<span class="p_del">-	bool found = false;</span>
 
 	if (!has_sysmmu(dev) || owner-&gt;domain != iommu_domain)
 		return;
 
 	spin_lock_irqsave(&amp;domain-&gt;lock, flags);
 	list_for_each_entry_safe(data, next, &amp;domain-&gt;clients, domain_node) {
<span class="p_del">-		if (data-&gt;master == dev) {</span>
<span class="p_del">-			if (__sysmmu_disable(data)) {</span>
<span class="p_del">-				data-&gt;master = NULL;</span>
<span class="p_del">-				list_del_init(&amp;data-&gt;domain_node);</span>
<span class="p_del">-			}</span>
<span class="p_del">-			pm_runtime_put(data-&gt;sysmmu);</span>
<span class="p_del">-			found = true;</span>
<span class="p_del">-		}</span>
<span class="p_add">+		__sysmmu_disable(data);</span>
<span class="p_add">+		data-&gt;master = NULL;</span>
<span class="p_add">+		list_del_init(&amp;data-&gt;domain_node);</span>
<span class="p_add">+		pm_runtime_put(data-&gt;sysmmu);</span>
 	}
 	spin_unlock_irqrestore(&amp;domain-&gt;lock, flags);
 
 	owner-&gt;domain = NULL;
 
<span class="p_del">-	if (found)</span>
<span class="p_del">-		dev_dbg(dev, &quot;%s: Detached IOMMU with pgtable %pa\n&quot;,</span>
<span class="p_del">-					__func__, &amp;pagetable);</span>
<span class="p_del">-	else</span>
<span class="p_del">-		dev_err(dev, &quot;%s: No IOMMU is attached\n&quot;, __func__);</span>
<span class="p_add">+	dev_dbg(dev, &quot;%s: Detached IOMMU with pgtable %pa\n&quot;, __func__,</span>
<span class="p_add">+		&amp;pagetable);</span>
 }
 
 static int exynos_iommu_attach_device(struct iommu_domain *iommu_domain,
<span class="p_chunk">@@ -864,7 +842,6 @@</span> <span class="p_context"> static int exynos_iommu_attach_device(struct iommu_domain *iommu_domain,</span>
 	struct sysmmu_drvdata *data;
 	phys_addr_t pagetable = virt_to_phys(domain-&gt;pgtable);
 	unsigned long flags;
<span class="p_del">-	int ret = -ENODEV;</span>
 
 	if (!has_sysmmu(dev))
 		return -ENODEV;
<span class="p_chunk">@@ -874,27 +851,19 @@</span> <span class="p_context"> static int exynos_iommu_attach_device(struct iommu_domain *iommu_domain,</span>
 
 	list_for_each_entry(data, &amp;owner-&gt;controllers, owner_node) {
 		pm_runtime_get_sync(data-&gt;sysmmu);
<span class="p_del">-		ret = __sysmmu_enable(data, pagetable, domain);</span>
<span class="p_del">-		if (ret &gt;= 0) {</span>
<span class="p_del">-			data-&gt;master = dev;</span>
<span class="p_add">+		__sysmmu_enable(data, pagetable, domain);</span>
<span class="p_add">+		data-&gt;master = dev;</span>
 
<span class="p_del">-			spin_lock_irqsave(&amp;domain-&gt;lock, flags);</span>
<span class="p_del">-			list_add_tail(&amp;data-&gt;domain_node, &amp;domain-&gt;clients);</span>
<span class="p_del">-			spin_unlock_irqrestore(&amp;domain-&gt;lock, flags);</span>
<span class="p_del">-		}</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	if (ret &lt; 0) {</span>
<span class="p_del">-		dev_err(dev, &quot;%s: Failed to attach IOMMU with pgtable %pa\n&quot;,</span>
<span class="p_del">-					__func__, &amp;pagetable);</span>
<span class="p_del">-		return ret;</span>
<span class="p_add">+		spin_lock_irqsave(&amp;domain-&gt;lock, flags);</span>
<span class="p_add">+		list_add_tail(&amp;data-&gt;domain_node, &amp;domain-&gt;clients);</span>
<span class="p_add">+		spin_unlock_irqrestore(&amp;domain-&gt;lock, flags);</span>
 	}
 
 	owner-&gt;domain = iommu_domain;
<span class="p_del">-	dev_dbg(dev, &quot;%s: Attached IOMMU with pgtable %pa %s\n&quot;,</span>
<span class="p_del">-		__func__, &amp;pagetable, (ret == 0) ? &quot;&quot; : &quot;, again&quot;);</span>
<span class="p_add">+	dev_dbg(dev, &quot;%s: Attached IOMMU with pgtable %pa\n&quot;, __func__,</span>
<span class="p_add">+		&amp;pagetable);</span>
 
<span class="p_del">-	return ret;</span>
<span class="p_add">+	return 0;</span>
 }
 
 static sysmmu_pte_t *alloc_lv2entry(struct exynos_iommu_domain *domain,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



