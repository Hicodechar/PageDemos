
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v4,27/44] ia64: dma-mapping: Use unsigned long for dma_attrs - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v4,27/44] ia64: dma-mapping: Use unsigned long for dma_attrs</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=72608">Krzysztof Kozlowski</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 10, 2016, 10:11 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1465553521-27303-28-git-send-email-k.kozlowski@samsung.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9169335/mbox/"
   >mbox</a>
|
   <a href="/patch/9169335/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9169335/">/patch/9169335/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	EEABF604DB for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 10 Jun 2016 10:19:37 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id DDDF226490
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 10 Jun 2016 10:19:37 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D221928328; Fri, 10 Jun 2016 10:19:37 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 0E05226490
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 10 Jun 2016 10:19:37 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932692AbcFJKTe (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 10 Jun 2016 06:19:34 -0400
Received: from mailout4.w1.samsung.com ([210.118.77.14]:12721 &quot;EHLO
	mailout4.w1.samsung.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1161039AbcFJKNj (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 10 Jun 2016 06:13:39 -0400
Received: from eucpsbgm2.samsung.com (unknown [203.254.199.245])
	by mailout4.w1.samsung.com
	(Oracle Communications Messaging Server 7.0.5.31.0 64bit (built May 5
	2014))
	with ESMTP id &lt;0O8J004E8WEPJ650@mailout4.w1.samsung.com&gt;; Fri,
	10 Jun 2016 11:13:37 +0100 (BST)
X-AuditID: cbfec7f5-f792a6d000001302-a8-575a92d1144e
Received: from eusync4.samsung.com ( [203.254.199.214])
	by eucpsbgm2.samsung.com (EUCPMTA) with SMTP id EF.83.04866.1D29A575;
	Fri, 10 Jun 2016 11:13:37 +0100 (BST)
Received: from AMDC2174.DIGITAL.local ([106.120.53.17])
	by eusync4.samsung.com (Oracle Communications Messaging Server
	7.0.5.31.0 64bit (built May  5 2014))
	with ESMTPA id &lt;0O8J00MI3WC5KUB0@eusync4.samsung.com&gt;; Fri,
	10 Jun 2016 11:13:37 +0100 (BST)
From: Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: hch@infradead.org, Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;,
	Bartlomiej Zolnierkiewicz &lt;b.zolnierkie@samsung.com&gt;,
	Tony Luck &lt;tony.luck@intel.com&gt;, Fenghua Yu &lt;fenghua.yu@intel.com&gt;,
	Konrad Rzeszutek Wilk &lt;konrad.wilk@oracle.com&gt;,
	Michal Hocko &lt;mhocko@suse.com&gt;, Johannes Weiner &lt;hannes@cmpxchg.org&gt;,
	Vlastimil Babka &lt;vbabka@suse.cz&gt;, Michael Ellerman &lt;mpe@ellerman.id.au&gt;,
	Hans-Christian Noren Egtvedt &lt;egtvedt@samfundet.no&gt;,
	linux-ia64@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH v4 27/44] ia64: dma-mapping: Use unsigned long for dma_attrs
Date: Fri, 10 Jun 2016 12:11:44 +0200
Message-id: &lt;1465553521-27303-28-git-send-email-k.kozlowski@samsung.com&gt;
X-Mailer: git-send-email 1.9.1
In-reply-to: &lt;1465553521-27303-1-git-send-email-k.kozlowski@samsung.com&gt;
References: &lt;1465553521-27303-1-git-send-email-k.kozlowski@samsung.com&gt;
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFrrALMWRmVeSWpSXmKPExsVy+t/xa7oXJ0WFGzzYJ2UxZ/0aNouNM9az
	WnSve8Ru0TbN0WL1Jl+L0xMWMVm8fmFosWzxU0aLDx3vWC0u75rDZnG/z8FiS8MhNos3F+6x
	WMxu7GN04PM4/OY9s8eilw0sHptXaHks3vOSyePEjN8sHh+f3mLxWHTqM7tH35ZVjB7rt1xl
	8Tiz4Ai7x+dNcgHcUVw2Kak5mWWpRfp2CVwZr64fYitYbF+x7fI7pgbGY0ZdjJwcEgImElPa
	vjJB2GISF+6tZ+ti5OIQEljKKLHg4GJmkISQQCOTxMGHCSA2m4CxxOblS9hAbBEBXYlVz3cx
	gzQwC/xilrjfNA0sISzgI7Hu0FawqSwCqhLnLl5nAbF5BTwkDlxazgyxTU7i5LHJrCA2J1C8
	++5MFohl7hLbn7ximsDIu4CRYRWjaGppckFxUnqukV5xYm5xaV66XnJ+7iZGSDh/3cG49JjV
	IUYBDkYlHt6IXZHhQqyJZcWVuYcYJTiYlUR4LfqiwoV4UxIrq1KL8uOLSnNSiw8xSnOwKInz
	ztz1PkRIID2xJDU7NbUgtQgmy8TBKdXAyMklLfDEgDWQS8X9o5y9YqpZC1fqS/uF/ieUAw9d
	mcFU39rLubrnbPL6yzJmrOu3+5QVXWC8/U/woKIx/76f7++kO8Qv2jzb/9pKZvdlDIuCuo6o
	q/j/ybuq8UZ2+ymJOzpvX19lKHzFH8rzzZz12Myt3fXzFyWzpe7TPG9Suk35asD1tMxjSizF
	GYmGWsxFxYkAlLMMu2MCAAA=
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72608">Krzysztof Kozlowski</a> - June 10, 2016, 10:11 a.m.</div>
<pre class="content">
Split out subsystem specific changes for easier reviews. This will be
squashed with main commit.
<span class="signed-off-by">
Signed-off-by: Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;</span>
---
 arch/ia64/hp/common/sba_iommu.c | 22 +++++++++++-----------
 arch/ia64/include/asm/machvec.h |  1 -
 arch/ia64/kernel/pci-swiotlb.c  |  4 ++--
 arch/ia64/sn/pci/pci_dma.c      | 12 ++++++------
 4 files changed, 19 insertions(+), 20 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/ia64/hp/common/sba_iommu.c b/arch/ia64/hp/common/sba_iommu.c</span>
<span class="p_header">index a6d6190c9d24..630ee8073899 100644</span>
<span class="p_header">--- a/arch/ia64/hp/common/sba_iommu.c</span>
<span class="p_header">+++ b/arch/ia64/hp/common/sba_iommu.c</span>
<span class="p_chunk">@@ -919,7 +919,7 @@</span> <span class="p_context"> sba_mark_invalid(struct ioc *ioc, dma_addr_t iova, size_t byte_cnt)</span>
 static dma_addr_t sba_map_page(struct device *dev, struct page *page,
 			       unsigned long poff, size_t size,
 			       enum dma_data_direction dir,
<span class="p_del">-			       struct dma_attrs *attrs)</span>
<span class="p_add">+			       unsigned long attrs)</span>
 {
 	struct ioc *ioc;
 	void *addr = page_address(page) + poff;
<span class="p_chunk">@@ -1005,7 +1005,7 @@</span> <span class="p_context"> static dma_addr_t sba_map_page(struct device *dev, struct page *page,</span>
 
 static dma_addr_t sba_map_single_attrs(struct device *dev, void *addr,
 				       size_t size, enum dma_data_direction dir,
<span class="p_del">-				       struct dma_attrs *attrs)</span>
<span class="p_add">+				       unsigned long attrs)</span>
 {
 	return sba_map_page(dev, virt_to_page(addr),
 			    (unsigned long)addr &amp; ~PAGE_MASK, size, dir, attrs);
<span class="p_chunk">@@ -1046,7 +1046,7 @@</span> <span class="p_context"> sba_mark_clean(struct ioc *ioc, dma_addr_t iova, size_t size)</span>
  * See Documentation/DMA-API-HOWTO.txt
  */
 static void sba_unmap_page(struct device *dev, dma_addr_t iova, size_t size,
<span class="p_del">-			   enum dma_data_direction dir, struct dma_attrs *attrs)</span>
<span class="p_add">+			   enum dma_data_direction dir, unsigned long attrs)</span>
 {
 	struct ioc *ioc;
 #if DELAYED_RESOURCE_CNT &gt; 0
<span class="p_chunk">@@ -1115,7 +1115,7 @@</span> <span class="p_context"> static void sba_unmap_page(struct device *dev, dma_addr_t iova, size_t size,</span>
 }
 
 void sba_unmap_single_attrs(struct device *dev, dma_addr_t iova, size_t size,
<span class="p_del">-			    enum dma_data_direction dir, struct dma_attrs *attrs)</span>
<span class="p_add">+			    enum dma_data_direction dir, unsigned long attrs)</span>
 {
 	sba_unmap_page(dev, iova, size, dir, attrs);
 }
<span class="p_chunk">@@ -1130,7 +1130,7 @@</span> <span class="p_context"> void sba_unmap_single_attrs(struct device *dev, dma_addr_t iova, size_t size,</span>
  */
 static void *
 sba_alloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle,
<span class="p_del">-		   gfp_t flags, struct dma_attrs *attrs)</span>
<span class="p_add">+		   gfp_t flags, unsigned long attrs)</span>
 {
 	struct ioc *ioc;
 	void *addr;
<span class="p_chunk">@@ -1175,7 +1175,7 @@</span> <span class="p_context"> sba_alloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle,</span>
 	 * device to map single to get an iova mapping.
 	 */
 	*dma_handle = sba_map_single_attrs(&amp;ioc-&gt;sac_only_dev-&gt;dev, addr,
<span class="p_del">-					   size, 0, NULL);</span>
<span class="p_add">+					   size, 0, 0);</span>
 
 	return addr;
 }
<span class="p_chunk">@@ -1191,9 +1191,9 @@</span> <span class="p_context"> sba_alloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle,</span>
  * See Documentation/DMA-API-HOWTO.txt
  */
 static void sba_free_coherent(struct device *dev, size_t size, void *vaddr,
<span class="p_del">-			      dma_addr_t dma_handle, struct dma_attrs *attrs)</span>
<span class="p_add">+			      dma_addr_t dma_handle, unsigned long attrs)</span>
 {
<span class="p_del">-	sba_unmap_single_attrs(dev, dma_handle, size, 0, NULL);</span>
<span class="p_add">+	sba_unmap_single_attrs(dev, dma_handle, size, 0, 0);</span>
 	free_pages((unsigned long) vaddr, get_order(size));
 }
 
<span class="p_chunk">@@ -1442,7 +1442,7 @@</span> <span class="p_context"> sba_coalesce_chunks(struct ioc *ioc, struct device *dev,</span>
 
 static void sba_unmap_sg_attrs(struct device *dev, struct scatterlist *sglist,
 			       int nents, enum dma_data_direction dir,
<span class="p_del">-			       struct dma_attrs *attrs);</span>
<span class="p_add">+			       unsigned long attrs);</span>
 /**
  * sba_map_sg - map Scatter/Gather list
  * @dev: instance of PCI owned by the driver that&#39;s asking.
<span class="p_chunk">@@ -1455,7 +1455,7 @@</span> <span class="p_context"> static void sba_unmap_sg_attrs(struct device *dev, struct scatterlist *sglist,</span>
  */
 static int sba_map_sg_attrs(struct device *dev, struct scatterlist *sglist,
 			    int nents, enum dma_data_direction dir,
<span class="p_del">-			    struct dma_attrs *attrs)</span>
<span class="p_add">+			    unsigned long attrs)</span>
 {
 	struct ioc *ioc;
 	int coalesced, filled = 0;
<span class="p_chunk">@@ -1551,7 +1551,7 @@</span> <span class="p_context"> static int sba_map_sg_attrs(struct device *dev, struct scatterlist *sglist,</span>
  */
 static void sba_unmap_sg_attrs(struct device *dev, struct scatterlist *sglist,
 			       int nents, enum dma_data_direction dir,
<span class="p_del">-			       struct dma_attrs *attrs)</span>
<span class="p_add">+			       unsigned long attrs)</span>
 {
 #ifdef ASSERT_PDIR_SANITY
 	struct ioc *ioc;
<span class="p_header">diff --git a/arch/ia64/include/asm/machvec.h b/arch/ia64/include/asm/machvec.h</span>
<span class="p_header">index 9c39bdfc2da8..ed7f09089f12 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/machvec.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/machvec.h</span>
<span class="p_chunk">@@ -22,7 +22,6 @@</span> <span class="p_context"> struct pci_bus;</span>
 struct task_struct;
 struct pci_dev;
 struct msi_desc;
<span class="p_del">-struct dma_attrs;</span>
 
 typedef void ia64_mv_setup_t (char **);
 typedef void ia64_mv_cpu_init_t (void);
<span class="p_header">diff --git a/arch/ia64/kernel/pci-swiotlb.c b/arch/ia64/kernel/pci-swiotlb.c</span>
<span class="p_header">index 939260aeac98..2933208c0285 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/pci-swiotlb.c</span>
<span class="p_header">+++ b/arch/ia64/kernel/pci-swiotlb.c</span>
<span class="p_chunk">@@ -16,7 +16,7 @@</span> <span class="p_context"> EXPORT_SYMBOL(swiotlb);</span>
 
 static void *ia64_swiotlb_alloc_coherent(struct device *dev, size_t size,
 					 dma_addr_t *dma_handle, gfp_t gfp,
<span class="p_del">-					 struct dma_attrs *attrs)</span>
<span class="p_add">+					 unsigned long attrs)</span>
 {
 	if (dev-&gt;coherent_dma_mask != DMA_BIT_MASK(64))
 		gfp |= GFP_DMA;
<span class="p_chunk">@@ -25,7 +25,7 @@</span> <span class="p_context"> static void *ia64_swiotlb_alloc_coherent(struct device *dev, size_t size,</span>
 
 static void ia64_swiotlb_free_coherent(struct device *dev, size_t size,
 				       void *vaddr, dma_addr_t dma_addr,
<span class="p_del">-				       struct dma_attrs *attrs)</span>
<span class="p_add">+				       unsigned long attrs)</span>
 {
 	swiotlb_free_coherent(dev, size, vaddr, dma_addr);
 }
<span class="p_header">diff --git a/arch/ia64/sn/pci/pci_dma.c b/arch/ia64/sn/pci/pci_dma.c</span>
<span class="p_header">index 8f59907007cb..6b78fc953c4b 100644</span>
<span class="p_header">--- a/arch/ia64/sn/pci/pci_dma.c</span>
<span class="p_header">+++ b/arch/ia64/sn/pci/pci_dma.c</span>
<span class="p_chunk">@@ -77,7 +77,7 @@</span> <span class="p_context"> EXPORT_SYMBOL(sn_dma_set_mask);</span>
  */
 static void *sn_dma_alloc_coherent(struct device *dev, size_t size,
 				   dma_addr_t * dma_handle, gfp_t flags,
<span class="p_del">-				   struct dma_attrs *attrs)</span>
<span class="p_add">+				   unsigned long attrs)</span>
 {
 	void *cpuaddr;
 	unsigned long phys_addr;
<span class="p_chunk">@@ -138,7 +138,7 @@</span> <span class="p_context"> static void *sn_dma_alloc_coherent(struct device *dev, size_t size,</span>
  * any associated IOMMU mappings.
  */
 static void sn_dma_free_coherent(struct device *dev, size_t size, void *cpu_addr,
<span class="p_del">-				 dma_addr_t dma_handle, struct dma_attrs *attrs)</span>
<span class="p_add">+				 dma_addr_t dma_handle, unsigned long attrs)</span>
 {
 	struct pci_dev *pdev = to_pci_dev(dev);
 	struct sn_pcibus_provider *provider = SN_PCIDEV_BUSPROVIDER(pdev);
<span class="p_chunk">@@ -176,7 +176,7 @@</span> <span class="p_context"> static void sn_dma_free_coherent(struct device *dev, size_t size, void *cpu_addr</span>
 static dma_addr_t sn_dma_map_page(struct device *dev, struct page *page,
 				  unsigned long offset, size_t size,
 				  enum dma_data_direction dir,
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_add">+				  unsigned long attrs)</span>
 {
 	void *cpu_addr = page_address(page) + offset;
 	dma_addr_t dma_addr;
<span class="p_chunk">@@ -218,7 +218,7 @@</span> <span class="p_context"> static dma_addr_t sn_dma_map_page(struct device *dev, struct page *page,</span>
  */
 static void sn_dma_unmap_page(struct device *dev, dma_addr_t dma_addr,
 			      size_t size, enum dma_data_direction dir,
<span class="p_del">-			      struct dma_attrs *attrs)</span>
<span class="p_add">+			      unsigned long attrs)</span>
 {
 	struct pci_dev *pdev = to_pci_dev(dev);
 	struct sn_pcibus_provider *provider = SN_PCIDEV_BUSPROVIDER(pdev);
<span class="p_chunk">@@ -240,7 +240,7 @@</span> <span class="p_context"> static void sn_dma_unmap_page(struct device *dev, dma_addr_t dma_addr,</span>
  */
 static void sn_dma_unmap_sg(struct device *dev, struct scatterlist *sgl,
 			    int nhwentries, enum dma_data_direction dir,
<span class="p_del">-			    struct dma_attrs *attrs)</span>
<span class="p_add">+			    unsigned long attrs)</span>
 {
 	int i;
 	struct pci_dev *pdev = to_pci_dev(dev);
<span class="p_chunk">@@ -273,7 +273,7 @@</span> <span class="p_context"> static void sn_dma_unmap_sg(struct device *dev, struct scatterlist *sgl,</span>
  */
 static int sn_dma_map_sg(struct device *dev, struct scatterlist *sgl,
 			 int nhwentries, enum dma_data_direction dir,
<span class="p_del">-			 struct dma_attrs *attrs)</span>
<span class="p_add">+			 unsigned long attrs)</span>
 {
 	unsigned long phys_addr;
 	struct scatterlist *saved_sg = sgl, *sg;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



