
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/2] arm64: perf: Add event descriptions - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/2] arm64: perf: Add event descriptions</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=88861">Drew Richardson</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 22, 2015, 2:07 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20151022140731.GC2154@dreric01-gentoo.localdomain&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7465211/mbox/"
   >mbox</a>
|
   <a href="/patch/7465211/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7465211/">/patch/7465211/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 7FC029F302
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 22 Oct 2015 14:07:05 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 6D9D62096C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 22 Oct 2015 14:07:01 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id D653D20967
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 22 Oct 2015 14:06:54 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S965043AbbJVOGw (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 22 Oct 2015 10:06:52 -0400
Received: from foss.arm.com ([217.140.101.70]:38691 &quot;EHLO foss.arm.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S932412AbbJVOGu (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 22 Oct 2015 10:06:50 -0400
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
	by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 0DB473C;
	Thu, 22 Oct 2015 07:06:45 -0700 (PDT)
Received: from localhost (usa-sjc-imap-foss1.foss.arm.com [10.72.51.249])
	by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id
	16E053F308; Thu, 22 Oct 2015 07:06:50 -0700 (PDT)
Date: Thu, 22 Oct 2015 07:07:32 -0700
From: Drew Richardson &lt;drew.richardson@arm.com&gt;
To: Will Deacon &lt;will.deacon@arm.com&gt;
Cc: Peter Zijlstra &lt;a.p.zijlstra@chello.nl&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	Arnaldo Carvalho de Melo &lt;acme@kernel.org&gt;,
	Russell King &lt;linux@arm.linux.org.uk&gt;,
	&quot;linux-kernel@vger.kernel.org&quot; &lt;linux-kernel@vger.kernel.org&gt;,
	&quot;linux-arm-kernel@lists.infradead.org&quot; 
	&lt;linux-arm-kernel@lists.infradead.org&gt;,
	Wade Cherry &lt;Wade.Cherry@arm.com&gt;, Pawel Moll &lt;Pawel.Moll@arm.com&gt;
Subject: [PATCH 2/2] arm64: perf: Add event descriptions
Message-ID: &lt;20151022140731.GC2154@dreric01-gentoo.localdomain&gt;
References: &lt;20151007182735.GA18706@dreric01-gentoo.localdomain&gt;
	&lt;20151009101338.GH26278@arm.com&gt;
	&lt;20151022140557.GA2154@dreric01-gentoo.localdomain&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: &lt;20151022140557.GA2154@dreric01-gentoo.localdomain&gt;
User-Agent: Mutt/1.5.23 (2014-03-12)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=88861">Drew Richardson</a> - Oct. 22, 2015, 2:07 p.m.</div>
<pre class="content">
Add additional information about the ARM architected hardware events
to make counters self describing. This makes the hardware PMUs easier
to use as perf list contains possible events instead of users having
to refer to documentation like the ARM TRMs.
<span class="signed-off-by">
Signed-off-by: Drew Richardson &lt;drew.richardson@arm.com&gt;</span>
---
 arch/arm64/kernel/perf_event.c | 138 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 138 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/kernel/perf_event.c b/arch/arm64/kernel/perf_event.c</span>
<span class="p_header">index 7e4372ee4dfb..d880e9cf058b 100644</span>
<span class="p_header">--- a/arch/arm64/kernel/perf_event.c</span>
<span class="p_header">+++ b/arch/arm64/kernel/perf_event.c</span>
<span class="p_chunk">@@ -53,6 +53,8 @@</span> <span class="p_context"></span>
 #define ARMV8_PMUV3_PERFCTR_PC_PROC_RETURN			0x0E
 #define ARMV8_PMUV3_PERFCTR_MEM_UNALIGNED_ACCESS		0x0F
 #define ARMV8_PMUV3_PERFCTR_TTBR_WRITE				0x1C
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_CHAIN				0x1E</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_BR_RETIRED				0x21</span>
 
 /* Common microarchitectural events. */
 #define ARMV8_PMUV3_PERFCTR_L1_ICACHE_REFILL			0x01
<span class="p_chunk">@@ -67,6 +69,23 @@</span> <span class="p_context"></span>
 #define ARMV8_PMUV3_PERFCTR_BUS_ACCESS				0x19
 #define ARMV8_PMUV3_PERFCTR_MEM_ERROR				0x1A
 #define ARMV8_PMUV3_PERFCTR_BUS_CYCLES				0x1D
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_L1D_CACHE_ALLOCATE			0x1F</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_L2D_CACHE_ALLOCATE			0x20</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_BR_MIS_PRED_RETIRED			0x22</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_STALL_FRONTEND			0x23</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_STALL_BACKEND			0x24</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_L1D_TLB				0x25</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_L1I_TLB				0x26</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_L2I_CACHE				0x27</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_L2I_CACHE_REFILL			0x28</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_L3D_CACHE_ALLOCATE			0x29</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_L3D_CACHE_REFILL			0x2A</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_L3D_CACHE				0x2B</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_L3D_CACHE_WB			0x2C</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_L2D_TLB_REFILL			0x2D</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_L21_TLB_REFILL			0x2E</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_L2D_TLB				0x2F</span>
<span class="p_add">+#define ARMV8_PMUV3_PERFCTR_L21_TLB				0x30</span>
 
 /* ARMv8 Cortex-A53 specific event types. */
 #define ARMV8_A53_PERFCTR_PREFETCH_LINEFILL			0xC2
<span class="p_chunk">@@ -173,6 +192,123 @@</span> <span class="p_context"> static const unsigned armv8_a57_perf_cache_map[PERF_COUNT_HW_CACHE_MAX]</span>
 	[C(BPU)][C(OP_WRITE)][C(RESULT_MISS)]	= ARMV8_PMUV3_PERFCTR_PC_BRANCH_MIS_PRED,
 };
 
<span class="p_add">+#define ARMV8_EVENT_ATTR_RESOLVE(m) #m</span>
<span class="p_add">+#define ARMV8_EVENT_ATTR(name, config) \</span>
<span class="p_add">+	PMU_EVENT_ATTR_STRING(name, armv8_event_attr_##name, \</span>
<span class="p_add">+			      &quot;event=&quot; ARMV8_EVENT_ATTR_RESOLVE(config))</span>
<span class="p_add">+</span>
<span class="p_add">+ARMV8_EVENT_ATTR(sw_incr, ARMV8_PMUV3_PERFCTR_PMNC_SW_INCR);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l1i_cache_refill, ARMV8_PMUV3_PERFCTR_L1_ICACHE_REFILL);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l1i_tlb_refill, ARMV8_PMUV3_PERFCTR_ITLB_REFILL);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l1d_cache_refill, ARMV8_PMUV3_PERFCTR_L1_DCACHE_REFILL);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l1d_cache, ARMV8_PMUV3_PERFCTR_L1_DCACHE_ACCESS);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l1d_tlb_refill, ARMV8_PMUV3_PERFCTR_DTLB_REFILL);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(ld_retired, ARMV8_PMUV3_PERFCTR_MEM_READ);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(st_retired, ARMV8_PMUV3_PERFCTR_MEM_WRITE);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(inst_retired, ARMV8_PMUV3_PERFCTR_INSTR_EXECUTED);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(exc_taken, ARMV8_PMUV3_PERFCTR_EXC_TAKEN);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(exc_return, ARMV8_PMUV3_PERFCTR_EXC_EXECUTED);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(cid_write_retired, ARMV8_PMUV3_PERFCTR_CID_WRITE);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(pc_write_retired, ARMV8_PMUV3_PERFCTR_PC_WRITE);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(br_immed_retired, ARMV8_PMUV3_PERFCTR_PC_IMM_BRANCH);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(br_return_retired, ARMV8_PMUV3_PERFCTR_PC_PROC_RETURN);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(unaligned_ldst_retired, ARMV8_PMUV3_PERFCTR_MEM_UNALIGNED_ACCESS);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(br_mis_pred, ARMV8_PMUV3_PERFCTR_PC_BRANCH_MIS_PRED);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(cpu_cycles, ARMV8_PMUV3_PERFCTR_CLOCK_CYCLES);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(br_pred, ARMV8_PMUV3_PERFCTR_PC_BRANCH_PRED);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(mem_access, ARMV8_PMUV3_PERFCTR_MEM_ACCESS);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l1i_cache, ARMV8_PMUV3_PERFCTR_L1_ICACHE_ACCESS);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l1d_cache_wb, ARMV8_PMUV3_PERFCTR_L1_DCACHE_WB);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l2d_cache, ARMV8_PMUV3_PERFCTR_L2_CACHE_ACCESS);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l2d_cache_refill, ARMV8_PMUV3_PERFCTR_L2_CACHE_REFILL);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l2d_cache_wb, ARMV8_PMUV3_PERFCTR_L2_CACHE_WB);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(bus_access, ARMV8_PMUV3_PERFCTR_BUS_ACCESS);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(memory_error, ARMV8_PMUV3_PERFCTR_MEM_ERROR);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(inst_spec, ARMV8_PMUV3_PERFCTR_OP_SPEC);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(ttbr_write_retired, ARMV8_PMUV3_PERFCTR_TTBR_WRITE);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(bus_cycles, ARMV8_PMUV3_PERFCTR_BUS_CYCLES);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(chain, ARMV8_PMUV3_PERFCTR_CHAIN);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l1d_cache_allocate, ARMV8_PMUV3_PERFCTR_L1D_CACHE_ALLOCATE);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l2d_cache_allocate, ARMV8_PMUV3_PERFCTR_L2D_CACHE_ALLOCATE);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(br_retired, ARMV8_PMUV3_PERFCTR_BR_RETIRED);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(br_mis_pred_retired, ARMV8_PMUV3_PERFCTR_BR_MIS_PRED_RETIRED);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(stall_frontend, ARMV8_PMUV3_PERFCTR_STALL_FRONTEND);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(stall_backend, ARMV8_PMUV3_PERFCTR_STALL_BACKEND);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l1d_tlb, ARMV8_PMUV3_PERFCTR_L1D_TLB);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l1i_tlb, ARMV8_PMUV3_PERFCTR_L1I_TLB);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l2i_cache, ARMV8_PMUV3_PERFCTR_L2I_CACHE);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l2i_cache_refill, ARMV8_PMUV3_PERFCTR_L2I_CACHE_REFILL);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l3d_cache_allocate, ARMV8_PMUV3_PERFCTR_L3D_CACHE_ALLOCATE);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l3d_cache_refill, ARMV8_PMUV3_PERFCTR_L3D_CACHE_REFILL);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l3d_cache, ARMV8_PMUV3_PERFCTR_L3D_CACHE);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l3d_cache_wb, ARMV8_PMUV3_PERFCTR_L3D_CACHE_WB);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l2d_tlb_refill, ARMV8_PMUV3_PERFCTR_L2D_TLB_REFILL);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l21_tlb_refill, ARMV8_PMUV3_PERFCTR_L21_TLB_REFILL);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l2d_tlb, ARMV8_PMUV3_PERFCTR_L2D_TLB);</span>
<span class="p_add">+ARMV8_EVENT_ATTR(l21_tlb, ARMV8_PMUV3_PERFCTR_L21_TLB);</span>
<span class="p_add">+</span>
<span class="p_add">+static struct attribute *armv8_pmuv3_event_attrs[] = {</span>
<span class="p_add">+	&amp;armv8_event_attr_sw_incr.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l1i_cache_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l1i_tlb_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l1d_cache_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l1d_cache.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l1d_tlb_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_ld_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_st_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_inst_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_exc_taken.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_exc_return.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_cid_write_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_pc_write_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_br_immed_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_br_return_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_unaligned_ldst_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_br_mis_pred.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_cpu_cycles.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_br_pred.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_mem_access.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l1i_cache.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l1d_cache_wb.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l2d_cache.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l2d_cache_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l2d_cache_wb.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_bus_access.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_memory_error.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_inst_spec.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_ttbr_write_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_bus_cycles.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_chain.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l1d_cache_allocate.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l2d_cache_allocate.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_br_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_br_mis_pred_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_stall_frontend.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_stall_backend.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l1d_tlb.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l1i_tlb.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l2i_cache.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l2i_cache_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l3d_cache_allocate.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l3d_cache_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l3d_cache.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l3d_cache_wb.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l2d_tlb_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l21_tlb_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l2d_tlb.attr.attr,</span>
<span class="p_add">+	&amp;armv8_event_attr_l21_tlb.attr.attr,</span>
<span class="p_add">+	NULL</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+static struct attribute_group armv8_pmuv3_events_attr_group = {</span>
<span class="p_add">+	.name = &quot;events&quot;,</span>
<span class="p_add">+	.attrs = armv8_pmuv3_event_attrs,</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+static const struct attribute_group *armv8_pmuv3_attr_groups[] = {</span>
<span class="p_add">+	&amp;armv8_pmuv3_events_attr_group,</span>
<span class="p_add">+	NULL</span>
<span class="p_add">+};</span>
 
 /*
  * Perf Events&#39; indices
<span class="p_chunk">@@ -641,6 +777,7 @@</span> <span class="p_context"> static int armv8_a53_pmu_init(struct arm_pmu *cpu_pmu)</span>
 	armv8_pmu_init(cpu_pmu);
 	cpu_pmu-&gt;name			= &quot;armv8_cortex_a53&quot;;
 	cpu_pmu-&gt;map_event		= armv8_a53_map_event;
<span class="p_add">+	cpu_pmu-&gt;pmu.attr_groups	= armv8_pmuv3_attr_groups;</span>
 	return armv8pmu_probe_num_events(cpu_pmu);
 }
 
<span class="p_chunk">@@ -649,6 +786,7 @@</span> <span class="p_context"> static int armv8_a57_pmu_init(struct arm_pmu *cpu_pmu)</span>
 	armv8_pmu_init(cpu_pmu);
 	cpu_pmu-&gt;name			= &quot;armv8_cortex_a57&quot;;
 	cpu_pmu-&gt;map_event		= armv8_a57_map_event;
<span class="p_add">+	cpu_pmu-&gt;pmu.attr_groups	= armv8_pmuv3_attr_groups;</span>
 	return armv8pmu_probe_num_events(cpu_pmu);
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



