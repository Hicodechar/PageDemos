
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[3/4] mips: Add DWARF unwinding to assembly - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [3/4] mips: Add DWARF unwinding to assembly</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=1413">Corey Minyard</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 10, 2017, 6:27 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1502389660-8969-4-git-send-email-minyard@acm.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9894503/mbox/"
   >mbox</a>
|
   <a href="/patch/9894503/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9894503/">/patch/9894503/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	AA18760384 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 10 Aug 2017 18:28:26 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id A13CC28B71
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 10 Aug 2017 18:28:26 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 9612028B78; Thu, 10 Aug 2017 18:28:26 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.3 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI, RCVD_IN_SORBS_SPAM,
	T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7C75328B71
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 10 Aug 2017 18:28:25 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753298AbdHJS2X (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 10 Aug 2017 14:28:23 -0400
Received: from mail-oi0-f67.google.com ([209.85.218.67]:35076 &quot;EHLO
	mail-oi0-f67.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752767AbdHJS1r (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 10 Aug 2017 14:27:47 -0400
Received: by mail-oi0-f67.google.com with SMTP id q70so1367459oic.2
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Thu, 10 Aug 2017 11:27:47 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=sender:from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=RhsPNaB8P6XfywltEinWrhIYucQHEAJqleEC+RxIwjw=;
	b=ly3EEiQlpjvkMEsxwW0wyQ+WHTSUOPLgVoiYXbxQW5lCIa0MaK7EI6P5YKF4+RRuex
	j+vv8YoRbVLSv3yWrFP8T6inb+uzGAOpYub5Pq9kVVzf03sq4w2b8odPdo9FA4upcKI/
	bd4/W0ED/L8g7ufmZkpRDU54m51oSQWzZBCHbrpLfREHLMQ7HW1FtMqupvfyVx2/5fah
	VxheghsdlpfTv/Fr5a1R57VF+5LPr9/MAkPnuo9Gv0vZgcVQcwtEAPdF3OReD4cIf6dL
	fAotr2nQFqOeZXAdwDRLuH2M6uTMdD8X4QGYCuFausSK6XWIMpn4T0o2uV9ISVdgV7RC
	E7IA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:sender:from:to:cc:subject:date:message-id
	:in-reply-to:references;
	bh=RhsPNaB8P6XfywltEinWrhIYucQHEAJqleEC+RxIwjw=;
	b=cL9+mck8b95pftd/4Jd2ssFxTO0aPy3TNrjJWT1rQfgw+h8uG/zZ2SDzs0fdhBkAQu
	DhEkyNwM9t4kDJblRqdDIoGMyDcZG8dM/B5w3TTM4B4N27K8h349DXa77lILmNFvvdJu
	xNr1YmCVPFff4DjQ+zcpuzTHBcUXQj0TQjBK4/FozVZl7hWiNF5nYk6ek53W26/cr4ze
	9gDyPDoc8SjJUWhp8CvPQAUfhlNt98NxEC0wU8C2ckPApj23SYUbH5zzF7/CaUEDoKbL
	cej8csbQh7RFD8HMED61fA9twNuEBqSAcWRZUwjZnvdR4RYfJRqgdffbC67bSJyWt8v0
	g0Ug==
X-Gm-Message-State: AHYfb5gE/1Y6siNG55C8N4IQIlDTf1foiYt3KuVC3Sn0fU6S518LlrA1
	R/2Vr/JrRT2YhkMkOAGutg==
X-Received: by 10.202.48.10 with SMTP id w10mr13308054oiw.212.1502389666993; 
	Thu, 10 Aug 2017 11:27:46 -0700 (PDT)
Received: from serve.minyard.net ([47.184.154.34])
	by smtp.gmail.com with ESMTPSA id
	p65sm6775996oia.49.2017.08.10.11.27.44
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Thu, 10 Aug 2017 11:27:44 -0700 (PDT)
Received: from t430.minyard.net (t430m.minyard.net [192.168.27.3])
	by serve.minyard.net (Postfix) with ESMTPA id BDEEA93F;
	Thu, 10 Aug 2017 13:27:43 -0500 (CDT)
Received: by t430.minyard.net (Postfix, from userid 1000)
	id 40441300A84; Thu, 10 Aug 2017 13:27:42 -0500 (CDT)
From: minyard@acm.org
To: linux-mips@linux-mips.org, ralf@linux-mips.org,
	linux-kernel@vger.kernel.org
Cc: Corey Minyard &lt;cminyard@mvista.com&gt;
Subject: [PATCH 3/4] mips: Add DWARF unwinding to assembly
Date: Thu, 10 Aug 2017 13:27:39 -0500
Message-Id: &lt;1502389660-8969-4-git-send-email-minyard@acm.org&gt;
X-Mailer: git-send-email 2.7.4
In-Reply-To: &lt;1502389660-8969-1-git-send-email-minyard@acm.org&gt;
References: &lt;1502389660-8969-1-git-send-email-minyard@acm.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1413">Corey Minyard</a> - Aug. 10, 2017, 6:27 p.m.</div>
<pre class="content">
<span class="from">From: Corey Minyard &lt;cminyard@mvista.com&gt;</span>

This will allow kdump dumps to work correclty with MIPS and
future DWARF unwinding of the stack to give accurate tracebacks.
<span class="signed-off-by">
Signed-off-by: Corey Minyard &lt;cminyard@mvista.com&gt;</span>
---
 arch/mips/Makefile                 |   4 +
 arch/mips/include/asm/asm.h        |   3 +
 arch/mips/include/asm/stackframe.h | 231 +++++++++++++++++++++----------------
 arch/mips/kernel/genex.S           |  13 ++-
 arch/mips/mm/tlbex-fault.S         |   7 +-
 arch/mips/vdso/sigreturn.S         |  10 --
 6 files changed, 151 insertions(+), 117 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/mips/Makefile b/arch/mips/Makefile</span>
<span class="p_header">index 0434362..fb0b6dc 100644</span>
<span class="p_header">--- a/arch/mips/Makefile</span>
<span class="p_header">+++ b/arch/mips/Makefile</span>
<span class="p_chunk">@@ -286,6 +286,10 @@</span> <span class="p_context"> ifdef CONFIG_64BIT</span>
 bootvars-y	+= ADDR_BITS=64
 endif
 
<span class="p_add">+# This is required to get dwarf unwinding tables into .debug_frame</span>
<span class="p_add">+# instead of .eh_frame so we don&#39;t discard them.</span>
<span class="p_add">+KBUILD_CFLAGS += -fno-asynchronous-unwind-tables</span>
<span class="p_add">+</span>
 LDFLAGS			+= -m $(ld-emul)
 
 ifdef CONFIG_MIPS
<span class="p_header">diff --git a/arch/mips/include/asm/asm.h b/arch/mips/include/asm/asm.h</span>
<span class="p_header">index 859cf70..81fae23 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/asm.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/asm.h</span>
<span class="p_chunk">@@ -55,6 +55,7 @@</span> <span class="p_context"></span>
 		.type	symbol, @function;		\
 		.ent	symbol, 0;			\
 symbol:		.frame	sp, 0, ra;			\
<span class="p_add">+		.cfi_startproc;				\</span>
 		.insn
 
 /*
<span class="p_chunk">@@ -66,12 +67,14 @@</span> <span class="p_context"> symbol:		.frame	sp, 0, ra;			\</span>
 		.type	symbol, @function;		\
 		.ent	symbol, 0;			\
 symbol:		.frame	sp, framesize, rpc;		\
<span class="p_add">+		.cfi_startproc;				\</span>
 		.insn
 
 /*
  * END - mark end of function
  */
 #define END(function)					\
<span class="p_add">+		.cfi_endproc;				\</span>
 		.end	function;			\
 		.size	function, .-function
 
<span class="p_header">diff --git a/arch/mips/include/asm/stackframe.h b/arch/mips/include/asm/stackframe.h</span>
<span class="p_header">index d2fb919..5d3563c 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/stackframe.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/stackframe.h</span>
<span class="p_chunk">@@ -19,20 +19,43 @@</span> <span class="p_context"></span>
 #include &lt;asm/asm-offsets.h&gt;
 #include &lt;asm/thread_info.h&gt;
 
<span class="p_add">+/* Make the addition of cfi info a little easier. */</span>
<span class="p_add">+	.macro cfi_rel_offset reg offset=0 docfi=0</span>
<span class="p_add">+	.if \docfi</span>
<span class="p_add">+	.cfi_rel_offset \reg, \offset</span>
<span class="p_add">+	.endif</span>
<span class="p_add">+	.endm</span>
<span class="p_add">+</span>
<span class="p_add">+	.macro cfi_st reg offset=0 docfi=0</span>
<span class="p_add">+	LONG_S	\reg, \offset(sp)</span>
<span class="p_add">+	cfi_rel_offset \reg, \offset, \docfi</span>
<span class="p_add">+	.endm</span>
<span class="p_add">+</span>
<span class="p_add">+	.macro cfi_restore reg offset=0 docfi=0</span>
<span class="p_add">+	.if \docfi</span>
<span class="p_add">+	.cfi_restore \reg</span>
<span class="p_add">+	.endif</span>
<span class="p_add">+	.endm</span>
<span class="p_add">+</span>
<span class="p_add">+	.macro cfi_ld reg offset=0 docfi=0</span>
<span class="p_add">+	LONG_L	\reg, \offset(sp)</span>
<span class="p_add">+	cfi_restore \reg \offset \docfi</span>
<span class="p_add">+	.endm</span>
<span class="p_add">+</span>
 #if defined(CONFIG_CPU_R3000) || defined(CONFIG_CPU_TX39XX)
 #define STATMASK 0x3f
 #else
 #define STATMASK 0x1f
 #endif
 
<span class="p_del">-		.macro	SAVE_AT</span>
<span class="p_add">+		.macro	SAVE_AT docfi=0</span>
 		.set	push
 		.set	noat
<span class="p_del">-		LONG_S	$1, PT_R1(sp)</span>
<span class="p_add">+		cfi_st	$1, PT_R1, \docfi</span>
 		.set	pop
 		.endm
 
<span class="p_del">-		.macro	SAVE_TEMP</span>
<span class="p_add">+		.macro	SAVE_TEMP docfi=0</span>
 #ifdef CONFIG_CPU_HAS_SMARTMIPS
 		mflhxu	v1
 		LONG_S	v1, PT_LO(sp)
<span class="p_chunk">@@ -44,20 +67,20 @@</span> <span class="p_context"></span>
 		mfhi	v1
 #endif
 #ifdef CONFIG_32BIT
<span class="p_del">-		LONG_S	$8, PT_R8(sp)</span>
<span class="p_del">-		LONG_S	$9, PT_R9(sp)</span>
<span class="p_add">+		cfi_st	$8, PT_R8, \docfi</span>
<span class="p_add">+		cfi_st	$9, PT_R9, \docfi</span>
 #endif
<span class="p_del">-		LONG_S	$10, PT_R10(sp)</span>
<span class="p_del">-		LONG_S	$11, PT_R11(sp)</span>
<span class="p_del">-		LONG_S	$12, PT_R12(sp)</span>
<span class="p_add">+		cfi_st	$10, PT_R10, \docfi</span>
<span class="p_add">+		cfi_st	$11, PT_R11, \docfi</span>
<span class="p_add">+		cfi_st	$12, PT_R12, \docfi</span>
 #if !defined(CONFIG_CPU_HAS_SMARTMIPS) &amp;&amp; !defined(CONFIG_CPU_MIPSR6)
 		LONG_S	v1, PT_HI(sp)
 		mflo	v1
 #endif
<span class="p_del">-		LONG_S	$13, PT_R13(sp)</span>
<span class="p_del">-		LONG_S	$14, PT_R14(sp)</span>
<span class="p_del">-		LONG_S	$15, PT_R15(sp)</span>
<span class="p_del">-		LONG_S	$24, PT_R24(sp)</span>
<span class="p_add">+		cfi_st	$13, PT_R13, \docfi</span>
<span class="p_add">+		cfi_st	$14, PT_R14, \docfi</span>
<span class="p_add">+		cfi_st	$15, PT_R15, \docfi</span>
<span class="p_add">+		cfi_st	$24, PT_R24, \docfi</span>
 #if !defined(CONFIG_CPU_HAS_SMARTMIPS) &amp;&amp; !defined(CONFIG_CPU_MIPSR6)
 		LONG_S	v1, PT_LO(sp)
 #endif
<span class="p_chunk">@@ -71,16 +94,16 @@</span> <span class="p_context"></span>
 #endif
 		.endm
 
<span class="p_del">-		.macro	SAVE_STATIC</span>
<span class="p_del">-		LONG_S	$16, PT_R16(sp)</span>
<span class="p_del">-		LONG_S	$17, PT_R17(sp)</span>
<span class="p_del">-		LONG_S	$18, PT_R18(sp)</span>
<span class="p_del">-		LONG_S	$19, PT_R19(sp)</span>
<span class="p_del">-		LONG_S	$20, PT_R20(sp)</span>
<span class="p_del">-		LONG_S	$21, PT_R21(sp)</span>
<span class="p_del">-		LONG_S	$22, PT_R22(sp)</span>
<span class="p_del">-		LONG_S	$23, PT_R23(sp)</span>
<span class="p_del">-		LONG_S	$30, PT_R30(sp)</span>
<span class="p_add">+		.macro	SAVE_STATIC docfi=0</span>
<span class="p_add">+		cfi_st	$16, PT_R16, \docfi</span>
<span class="p_add">+		cfi_st	$17, PT_R17, \docfi</span>
<span class="p_add">+		cfi_st	$18, PT_R18, \docfi</span>
<span class="p_add">+		cfi_st	$19, PT_R19, \docfi</span>
<span class="p_add">+		cfi_st	$20, PT_R20, \docfi</span>
<span class="p_add">+		cfi_st	$21, PT_R21, \docfi</span>
<span class="p_add">+		cfi_st	$22, PT_R22, \docfi</span>
<span class="p_add">+		cfi_st	$23, PT_R23, \docfi</span>
<span class="p_add">+		cfi_st	$30, PT_R30, \docfi</span>
 		.endm
 
 /*
<span class="p_chunk">@@ -168,7 +191,7 @@</span> <span class="p_context"></span>
 		.endm
 #endif
 
<span class="p_del">-		.macro	SAVE_SOME</span>
<span class="p_add">+		.macro	SAVE_SOME docfi=0</span>
 		.set	push
 		.set	noat
 		.set	reorder
<span class="p_chunk">@@ -203,8 +226,11 @@</span> <span class="p_context"></span>
 #endif
 		.set	reorder
 		 move	k0, sp
<span class="p_add">+		.if \docfi</span>
<span class="p_add">+		.cfi_register sp, k0</span>
<span class="p_add">+		.endif</span>
 		/* Called from user mode, new stack. */
<span class="p_del">-		get_saved_sp</span>
<span class="p_add">+		get_saved_sp docfi=\docfi tosp=1</span>
 8:
 #ifdef CONFIG_CPU_DADDI_WORKAROUNDS
 		.set	at=k1
<span class="p_chunk">@@ -213,8 +239,12 @@</span> <span class="p_context"></span>
 #ifdef CONFIG_CPU_DADDI_WORKAROUNDS
 		.set	noat
 #endif
<span class="p_del">-		LONG_S	k0, PT_R29(sp)</span>
<span class="p_del">-		LONG_S	$3, PT_R3(sp)</span>
<span class="p_add">+		.if \docfi</span>
<span class="p_add">+		.cfi_def_cfa sp,0</span>
<span class="p_add">+		.endif</span>
<span class="p_add">+		cfi_st	k0, PT_R29, \docfi</span>
<span class="p_add">+		cfi_rel_offset  sp, PT_R29, \docfi</span>
<span class="p_add">+		cfi_st	v1, PT_R3, \docfi</span>
 		/*
 		 * You might think that you don&#39;t need to save $0,
 		 * but the FPU emulator and gdb remote debug stub
<span class="p_chunk">@@ -222,23 +252,26 @@</span> <span class="p_context"></span>
 		 */
 		LONG_S	$0, PT_R0(sp)
 		mfc0	v1, CP0_STATUS
<span class="p_del">-		LONG_S	$2, PT_R2(sp)</span>
<span class="p_add">+		cfi_st	v0, PT_R2, \docfi</span>
 		LONG_S	v1, PT_STATUS(sp)
<span class="p_del">-		LONG_S	$4, PT_R4(sp)</span>
<span class="p_add">+		cfi_st	$4, PT_R4, \docfi</span>
 		mfc0	v1, CP0_CAUSE
<span class="p_del">-		LONG_S	$5, PT_R5(sp)</span>
<span class="p_add">+		cfi_st	$5, PT_R5, \docfi</span>
 		LONG_S	v1, PT_CAUSE(sp)
<span class="p_del">-		LONG_S	$6, PT_R6(sp)</span>
<span class="p_del">-		LONG_S	ra, PT_R31(sp)</span>
<span class="p_add">+		cfi_st	$6, PT_R6, \docfi</span>
<span class="p_add">+		cfi_st	ra, PT_R31, \docfi</span>
 		MFC0	ra, CP0_EPC
<span class="p_del">-		LONG_S	$7, PT_R7(sp)</span>
<span class="p_add">+		cfi_st	$7, PT_R7, \docfi</span>
 #ifdef CONFIG_64BIT
<span class="p_del">-		LONG_S	$8, PT_R8(sp)</span>
<span class="p_del">-		LONG_S	$9, PT_R9(sp)</span>
<span class="p_add">+		cfi_st	$8, PT_R8, \docfi</span>
<span class="p_add">+		cfi_st	$9, PT_R9, \docfi</span>
 #endif
 		LONG_S	ra, PT_EPC(sp)
<span class="p_del">-		LONG_S	$25, PT_R25(sp)</span>
<span class="p_del">-		LONG_S	$28, PT_R28(sp)</span>
<span class="p_add">+		.if \docfi</span>
<span class="p_add">+		.cfi_rel_offset ra, PT_EPC</span>
<span class="p_add">+		.endif</span>
<span class="p_add">+		cfi_st	$25, PT_R25, \docfi</span>
<span class="p_add">+		cfi_st	$28, PT_R28, \docfi</span>
 
 		/* Set thread_info if we&#39;re coming from user mode */
 		mfc0	k0, CP0_STATUS
<span class="p_chunk">@@ -255,21 +288,21 @@</span> <span class="p_context"></span>
 		.set	pop
 		.endm
 
<span class="p_del">-		.macro	SAVE_ALL</span>
<span class="p_del">-		SAVE_SOME</span>
<span class="p_del">-		SAVE_AT</span>
<span class="p_del">-		SAVE_TEMP</span>
<span class="p_del">-		SAVE_STATIC</span>
<span class="p_add">+		.macro	SAVE_ALL docfi=0</span>
<span class="p_add">+		SAVE_SOME \docfi</span>
<span class="p_add">+		SAVE_AT \docfi</span>
<span class="p_add">+		SAVE_TEMP \docfi</span>
<span class="p_add">+		SAVE_STATIC \docfi</span>
 		.endm
 
<span class="p_del">-		.macro	RESTORE_AT</span>
<span class="p_add">+		.macro	RESTORE_AT docfi=0</span>
 		.set	push
 		.set	noat
<span class="p_del">-		LONG_L	$1,  PT_R1(sp)</span>
<span class="p_add">+		cfi_ld	$1, PT_R1, \docfi</span>
 		.set	pop
 		.endm
 
<span class="p_del">-		.macro	RESTORE_TEMP</span>
<span class="p_add">+		.macro	RESTORE_TEMP docfi=0</span>
 #ifdef CONFIG_CPU_CAVIUM_OCTEON
 		/* Restore the Octeon multiplier state */
 		jal	octeon_mult_restore
<span class="p_chunk">@@ -288,33 +321,37 @@</span> <span class="p_context"></span>
 		mthi	$24
 #endif
 #ifdef CONFIG_32BIT
<span class="p_del">-		LONG_L	$8, PT_R8(sp)</span>
<span class="p_del">-		LONG_L	$9, PT_R9(sp)</span>
<span class="p_add">+		cfi_ld	$8, PT_R8, \docfi</span>
<span class="p_add">+		cfi_ld	$9, PT_R9, \docfi</span>
 #endif
<span class="p_del">-		LONG_L	$10, PT_R10(sp)</span>
<span class="p_del">-		LONG_L	$11, PT_R11(sp)</span>
<span class="p_del">-		LONG_L	$12, PT_R12(sp)</span>
<span class="p_del">-		LONG_L	$13, PT_R13(sp)</span>
<span class="p_del">-		LONG_L	$14, PT_R14(sp)</span>
<span class="p_del">-		LONG_L	$15, PT_R15(sp)</span>
<span class="p_del">-		LONG_L	$24, PT_R24(sp)</span>
<span class="p_add">+		cfi_ld	$10, PT_R10, \docfi</span>
<span class="p_add">+		cfi_ld	$11, PT_R11, \docfi</span>
<span class="p_add">+		cfi_ld	$12, PT_R12, \docfi</span>
<span class="p_add">+		cfi_ld	$13, PT_R13, \docfi</span>
<span class="p_add">+		cfi_ld	$14, PT_R14, \docfi</span>
<span class="p_add">+		cfi_ld	$15, PT_R15, \docfi</span>
<span class="p_add">+		cfi_ld	$24, PT_R24, \docfi</span>
 		.endm
 
<span class="p_del">-		.macro	RESTORE_STATIC</span>
<span class="p_del">-		LONG_L	$16, PT_R16(sp)</span>
<span class="p_del">-		LONG_L	$17, PT_R17(sp)</span>
<span class="p_del">-		LONG_L	$18, PT_R18(sp)</span>
<span class="p_del">-		LONG_L	$19, PT_R19(sp)</span>
<span class="p_del">-		LONG_L	$20, PT_R20(sp)</span>
<span class="p_del">-		LONG_L	$21, PT_R21(sp)</span>
<span class="p_del">-		LONG_L	$22, PT_R22(sp)</span>
<span class="p_del">-		LONG_L	$23, PT_R23(sp)</span>
<span class="p_del">-		LONG_L	$30, PT_R30(sp)</span>
<span class="p_add">+		.macro	RESTORE_STATIC docfi=0</span>
<span class="p_add">+		cfi_ld	$16, PT_R16, \docfi</span>
<span class="p_add">+		cfi_ld	$17, PT_R17, \docfi</span>
<span class="p_add">+		cfi_ld	$18, PT_R18, \docfi</span>
<span class="p_add">+		cfi_ld	$19, PT_R19, \docfi</span>
<span class="p_add">+		cfi_ld	$20, PT_R20, \docfi</span>
<span class="p_add">+		cfi_ld	$21, PT_R21, \docfi</span>
<span class="p_add">+		cfi_ld	$22, PT_R22, \docfi</span>
<span class="p_add">+		cfi_ld	$23, PT_R23, \docfi</span>
<span class="p_add">+		cfi_ld	$30, PT_R30, \docfi</span>
<span class="p_add">+		.endm</span>
<span class="p_add">+</span>
<span class="p_add">+		.macro	RESTORE_SP docfi=0</span>
<span class="p_add">+		cfi_ld	sp, PT_R29, \docfi</span>
 		.endm
 
 #if defined(CONFIG_CPU_R3000) || defined(CONFIG_CPU_TX39XX)
 
<span class="p_del">-		.macro	RESTORE_SOME</span>
<span class="p_add">+		.macro	RESTORE_SOME docfi=0</span>
 		.set	push
 		.set	reorder
 		.set	noat
<span class="p_chunk">@@ -329,30 +366,30 @@</span> <span class="p_context"></span>
 		and	v0, v1
 		or	v0, a0
 		mtc0	v0, CP0_STATUS
<span class="p_del">-		LONG_L	$31, PT_R31(sp)</span>
<span class="p_del">-		LONG_L	$28, PT_R28(sp)</span>
<span class="p_del">-		LONG_L	$25, PT_R25(sp)</span>
<span class="p_del">-		LONG_L	$7,  PT_R7(sp)</span>
<span class="p_del">-		LONG_L	$6,  PT_R6(sp)</span>
<span class="p_del">-		LONG_L	$5,  PT_R5(sp)</span>
<span class="p_del">-		LONG_L	$4,  PT_R4(sp)</span>
<span class="p_del">-		LONG_L	$3,  PT_R3(sp)</span>
<span class="p_del">-		LONG_L	$2,  PT_R2(sp)</span>
<span class="p_add">+		cfi_ld	$31, PT_R31, \docfi</span>
<span class="p_add">+		cfi_ld	$28, PT_R28, \docfi</span>
<span class="p_add">+		cfi_ld	$25, PT_R25, \docfi</span>
<span class="p_add">+		cfi_ld	$7,  PT_R7, \docfi</span>
<span class="p_add">+		cfi_ld	$6,  PT_R6, \docfi</span>
<span class="p_add">+		cfi_ld	$5,  PT_R5, \docfi</span>
<span class="p_add">+		cfi_ld	$4,  PT_R4, \docfi</span>
<span class="p_add">+		cfi_ld	$3,  PT_R3, \docfi</span>
<span class="p_add">+		cfi_ld	$2,  PT_R2, \docfi</span>
 		.set	pop
 		.endm
 
<span class="p_del">-		.macro	RESTORE_SP_AND_RET</span>
<span class="p_add">+		.macro	RESTORE_SP_AND_RET docfi=0</span>
 		.set	push
 		.set	noreorder
 		LONG_L	k0, PT_EPC(sp)
<span class="p_del">-		LONG_L	sp, PT_R29(sp)</span>
<span class="p_add">+		RESTORE_SP \docfi</span>
 		jr	k0
 		 rfe
 		.set	pop
 		.endm
 
 #else
<span class="p_del">-		.macro	RESTORE_SOME</span>
<span class="p_add">+		.macro	RESTORE_SOME docfi=0</span>
 		.set	push
 		.set	reorder
 		.set	noat
<span class="p_chunk">@@ -369,24 +406,24 @@</span> <span class="p_context"></span>
 		mtc0	v0, CP0_STATUS
 		LONG_L	v1, PT_EPC(sp)
 		MTC0	v1, CP0_EPC
<span class="p_del">-		LONG_L	$31, PT_R31(sp)</span>
<span class="p_del">-		LONG_L	$28, PT_R28(sp)</span>
<span class="p_del">-		LONG_L	$25, PT_R25(sp)</span>
<span class="p_add">+		cfi_ld	$31, PT_R31, \docfi</span>
<span class="p_add">+		cfi_ld	$28, PT_R28, \docfi</span>
<span class="p_add">+		cfi_ld	$25, PT_R25, \docfi</span>
 #ifdef CONFIG_64BIT
<span class="p_del">-		LONG_L	$8, PT_R8(sp)</span>
<span class="p_del">-		LONG_L	$9, PT_R9(sp)</span>
<span class="p_add">+		cfi_ld	$8, PT_R8, \docfi</span>
<span class="p_add">+		cfi_ld	$9, PT_R9, \docfi</span>
 #endif
<span class="p_del">-		LONG_L	$7,  PT_R7(sp)</span>
<span class="p_del">-		LONG_L	$6,  PT_R6(sp)</span>
<span class="p_del">-		LONG_L	$5,  PT_R5(sp)</span>
<span class="p_del">-		LONG_L	$4,  PT_R4(sp)</span>
<span class="p_del">-		LONG_L	$3,  PT_R3(sp)</span>
<span class="p_del">-		LONG_L	$2,  PT_R2(sp)</span>
<span class="p_add">+		cfi_ld	$7,  PT_R7, \docfi</span>
<span class="p_add">+		cfi_ld	$6,  PT_R6, \docfi</span>
<span class="p_add">+		cfi_ld	$5,  PT_R5, \docfi</span>
<span class="p_add">+		cfi_ld	$4,  PT_R4, \docfi</span>
<span class="p_add">+		cfi_ld	$3,  PT_R3, \docfi</span>
<span class="p_add">+		cfi_ld	$2,  PT_R2, \docfi</span>
 		.set	pop
 		.endm
 
<span class="p_del">-		.macro	RESTORE_SP_AND_RET</span>
<span class="p_del">-		LONG_L	sp, PT_R29(sp)</span>
<span class="p_add">+		.macro	RESTORE_SP_AND_RET docfi=0</span>
<span class="p_add">+		RESTORE_SP \docfi</span>
 #ifdef CONFIG_CPU_MIPSR6
 		eretnc
 #else
<span class="p_chunk">@@ -398,16 +435,12 @@</span> <span class="p_context"></span>
 
 #endif
 
<span class="p_del">-		.macro	RESTORE_SP</span>
<span class="p_del">-		LONG_L	sp, PT_R29(sp)</span>
<span class="p_del">-		.endm</span>
<span class="p_del">-</span>
<span class="p_del">-		.macro	RESTORE_ALL</span>
<span class="p_del">-		RESTORE_TEMP</span>
<span class="p_del">-		RESTORE_STATIC</span>
<span class="p_del">-		RESTORE_AT</span>
<span class="p_del">-		RESTORE_SOME</span>
<span class="p_del">-		RESTORE_SP</span>
<span class="p_add">+		.macro	RESTORE_ALL docfi=0</span>
<span class="p_add">+		RESTORE_TEMP \docfi</span>
<span class="p_add">+		RESTORE_STATIC \docfi</span>
<span class="p_add">+		RESTORE_AT \docfi</span>
<span class="p_add">+		RESTORE_SOME \docfi</span>
<span class="p_add">+		RESTORE_SP \docfi</span>
 		.endm
 
 /*
<span class="p_header">diff --git a/arch/mips/kernel/genex.S b/arch/mips/kernel/genex.S</span>
<span class="p_header">index ae810da..37b9383 100644</span>
<span class="p_header">--- a/arch/mips/kernel/genex.S</span>
<span class="p_header">+++ b/arch/mips/kernel/genex.S</span>
<span class="p_chunk">@@ -150,6 +150,7 @@</span> <span class="p_context"> LEAF(__r4k_wait)</span>
 	.align	5
 BUILD_ROLLBACK_PROLOGUE handle_int
 NESTED(handle_int, PT_SIZE, sp)
<span class="p_add">+	.cfi_signal_frame</span>
 #ifdef CONFIG_TRACE_IRQFLAGS
 	/*
 	 * Check to see if the interrupted code has just disabled
<span class="p_chunk">@@ -181,7 +182,7 @@</span> <span class="p_context"> NESTED(handle_int, PT_SIZE, sp)</span>
 1:
 	.set pop
 #endif
<span class="p_del">-	SAVE_ALL</span>
<span class="p_add">+	SAVE_ALL docfi=1</span>
 	CLI
 	TRACE_IRQS_OFF
 
<span class="p_chunk">@@ -269,8 +270,8 @@</span> <span class="p_context"> NESTED(except_vec_ejtag_debug, 0, sp)</span>
  */
 BUILD_ROLLBACK_PROLOGUE except_vec_vi
 NESTED(except_vec_vi, 0, sp)
<span class="p_del">-	SAVE_SOME</span>
<span class="p_del">-	SAVE_AT</span>
<span class="p_add">+	SAVE_SOME docfi=1</span>
<span class="p_add">+	SAVE_AT docfi=1</span>
 	.set	push
 	.set	noreorder
 	PTR_LA	v1, except_vec_vi_handler
<span class="p_chunk">@@ -396,6 +397,7 @@</span> <span class="p_context"> NESTED(except_vec_nmi, 0, sp)</span>
 	__FINIT
 
 NESTED(nmi_handler, PT_SIZE, sp)
<span class="p_add">+	.cfi_signal_frame</span>
 	.set	push
 	.set	noat
 	/*
<span class="p_chunk">@@ -478,6 +480,7 @@</span> <span class="p_context"> NESTED(nmi_handler, PT_SIZE, sp)</span>
 	.macro	__BUILD_HANDLER exception handler clear verbose ext
 	.align	5
 	NESTED(handle_\exception, PT_SIZE, sp)
<span class="p_add">+	.cfi_signal_frame</span>
 	.set	noat
 	SAVE_ALL
 	FEXPORT(handle_\exception\ext)
<span class="p_chunk">@@ -485,8 +488,8 @@</span> <span class="p_context"> NESTED(nmi_handler, PT_SIZE, sp)</span>
 	.set	at
 	__BUILD_\verbose \exception
 	move	a0, sp
<span class="p_del">-	PTR_LA	ra, ret_from_exception</span>
<span class="p_del">-	j	do_\handler</span>
<span class="p_add">+	jal	do_\handler</span>
<span class="p_add">+	j	ret_from_exception</span>
 	END(handle_\exception)
 	.endm
 
<span class="p_header">diff --git a/arch/mips/mm/tlbex-fault.S b/arch/mips/mm/tlbex-fault.S</span>
<span class="p_header">index 318855e..77db401 100644</span>
<span class="p_header">--- a/arch/mips/mm/tlbex-fault.S</span>
<span class="p_header">+++ b/arch/mips/mm/tlbex-fault.S</span>
<span class="p_chunk">@@ -12,14 +12,15 @@</span> <span class="p_context"></span>
 
 	.macro tlb_do_page_fault, write
 	NESTED(tlb_do_page_fault_\write, PT_SIZE, sp)
<span class="p_del">-	SAVE_ALL</span>
<span class="p_add">+	.cfi_signal_frame</span>
<span class="p_add">+	SAVE_ALL docfi=1</span>
 	MFC0	a2, CP0_BADVADDR
 	KMODE
 	move	a0, sp
 	REG_S	a2, PT_BVADDR(sp)
 	li	a1, \write
<span class="p_del">-	PTR_LA	ra, ret_from_exception</span>
<span class="p_del">-	j	do_page_fault</span>
<span class="p_add">+	jal	do_page_fault</span>
<span class="p_add">+	j	ret_from_exception</span>
 	END(tlb_do_page_fault_\write)
 	.endm
 
<span class="p_header">diff --git a/arch/mips/vdso/sigreturn.S b/arch/mips/vdso/sigreturn.S</span>
<span class="p_header">index 715bf59..30c6219 100644</span>
<span class="p_header">--- a/arch/mips/vdso/sigreturn.S</span>
<span class="p_header">+++ b/arch/mips/vdso/sigreturn.S</span>
<span class="p_chunk">@@ -19,31 +19,21 @@</span> <span class="p_context"></span>
 	.cfi_sections	.debug_frame
 
 LEAF(__vdso_rt_sigreturn)
<span class="p_del">-	.cfi_startproc</span>
<span class="p_del">-	.frame	sp, 0, ra</span>
<span class="p_del">-	.mask	0x00000000, 0</span>
<span class="p_del">-	.fmask	0x00000000, 0</span>
 	.cfi_signal_frame
 
 	li	v0, __NR_rt_sigreturn
 	syscall
 
<span class="p_del">-	.cfi_endproc</span>
 	END(__vdso_rt_sigreturn)
 
 #if _MIPS_SIM == _MIPS_SIM_ABI32
 
 LEAF(__vdso_sigreturn)
<span class="p_del">-	.cfi_startproc</span>
<span class="p_del">-	.frame	sp, 0, ra</span>
<span class="p_del">-	.mask	0x00000000, 0</span>
<span class="p_del">-	.fmask	0x00000000, 0</span>
 	.cfi_signal_frame
 
 	li	v0, __NR_sigreturn
 	syscall
 
<span class="p_del">-	.cfi_endproc</span>
 	END(__vdso_sigreturn)
 
 #endif

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



