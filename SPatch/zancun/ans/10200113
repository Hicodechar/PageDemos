
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>iommu: Do not return error code for APIs with size_t return type - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    iommu: Do not return error code for APIs with size_t return type</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=2908">Suthikulpanit, Suravee</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 5, 2018, 10:45 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1517827553-81034-1-git-send-email-suravee.suthikulpanit@amd.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10200113/mbox/"
   >mbox</a>
|
   <a href="/patch/10200113/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10200113/">/patch/10200113/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	1277C601A1 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  5 Feb 2018 10:47:53 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 0214F28434
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  5 Feb 2018 10:47:53 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id EA9F2285A2; Mon,  5 Feb 2018 10:47:52 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id F2DE628434
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  5 Feb 2018 10:47:51 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752847AbeBEKrt (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 5 Feb 2018 05:47:49 -0500
Received: from mail-co1nam03on0059.outbound.protection.outlook.com
	([104.47.40.59]:30752
	&quot;EHLO NAM03-CO1-obe.outbound.protection.outlook.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1750949AbeBEKrm (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 5 Feb 2018 05:47:42 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=amdcloud.onmicrosoft.com; s=selector1-amd-com;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version;
	bh=lxa5XSSMhdQx2a2TGNinVnD5uxAxhjf/7OqzpROVk8Q=;
	b=Bb7T9hF1lPrrT95GjzjClbH82EmCZSzDg2eRX4vzmC8LQliv7dRVgdl/XLcYETIg2tCsp55uepF1Mc23TcRe3epi1evozcP+IOqjZ1hlTxuQ9T93+8debiaolzsKFo7wiZCff1jqx6HSjPngW6d90AAWweRqmsFaf8qb5rSmGtk=
Authentication-Results: spf=none (sender IP is )
	smtp.mailfrom=Suravee.Suthikulpanit@amd.com; 
Received: from ssuthiku-rhel74.localdomain (114.109.128.54) by
	BN6PR12MB1732.namprd12.prod.outlook.com (10.175.101.17) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P256) id
	15.20.464.11; Mon, 5 Feb 2018 10:47:37 +0000
From: Suravee Suthikulpanit &lt;suravee.suthikulpanit@amd.com&gt;
To: iommu@lists.linux-foundation.org, linux-kernel@vger.kernel.org
Cc: joro@8bytes.org, jroedel@suse.de, alex.williamson@redhat.com,
	Suravee Suthikulpanit &lt;suravee.suthikulpanit@amd.com&gt;
Subject: [PATCH] iommu: Do not return error code for APIs with size_t return
	type
Date: Mon,  5 Feb 2018 05:45:53 -0500
Message-Id: &lt;1517827553-81034-1-git-send-email-suravee.suthikulpanit@amd.com&gt;
X-Mailer: git-send-email 1.8.3.1
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [114.109.128.54]
X-ClientProxiedBy: SG2PR06CA0108.apcprd06.prod.outlook.com (10.170.138.34) To
	BN6PR12MB1732.namprd12.prod.outlook.com (10.175.101.17)
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-HT: Tenant
X-MS-Office365-Filtering-Correlation-Id: f439c374-8209-4de8-c3e2-08d56c85e08c
X-Microsoft-Antispam: UriScan:; BCL:0; PCL:0;
	RULEID:(7020095)(4652020)(48565401081)(4534165)(4627221)(201703031133081)(201702281549075)(5600026)(4604075)(2017052603307)(7153060)(7193020);
	SRVR:BN6PR12MB1732; 
X-Microsoft-Exchange-Diagnostics: 1; BN6PR12MB1732;
	3:D9GsqmaUJYD91rFE8k9AJ4XwRXQ2u1CxmgIhdWL2/29kCmAj53YZ+e6eE/xOnTPq7SjIYVRi4z+XURmPcCrqs1cgh+EgECJQ8NpRcwTzbqtHpV1cTxoX/Eom9rJ6Gi4OxkNqyg0kgRkOAtW9cQyQlKWxa5G9RtMGkF1neTMKacgbNu30IPo0sr3VekDX784C4R+qkE/FVHX5Cw3i5o/iknwenJW/4+S00GbC7VLCxdCD33HR7/cDyE8qFsfTlA8S;
	25:rBek9XqygNS0GLSfmOOqOWofoIcg8Hps7jlHokx8SObYAI+PaJePfIbONCZN1pzjOG0x99kZ9U7dsVjRX84/5UIl4kwoJ7mPK+cGKi1O+sz11Cytp9VfrHs//7RFWYYzWchTS7AWZlSEqI4Klu3b+xpKuNgeOPedgAGS2Q1WSoofJvq/zqB+w1Y44SA6tzkrpNzavq4Bmae7Eyb8AcM2A0XuduBqC7C5GkOe9DzH/cMSV8QueqrIf9vSee/9X3FGKwga3wnXZadidlQOQ2TIE56WCe7Z2NTZDjExQt89WOusv2Le9i8TVbegbfE3PozRIY4ZtmkPzVTSIJ2MszZJ4A==;
	31:oD3lRtkqy8LXXPDs6VyNSs3Xu/iPGRNbFuJW4uJpIPQivGyov7+8CD6/2Qmpf5xziJWl4iXOW6BRf1jf9YvIoT4pVUCXAO+7GjXQVvW+BlVS6yZyOyqOK8Q8muJ4GKwIjSbK3e6DZ2rjX67fZEabvVvOYhJM6AnOl28OvlpyrYBkokyKvGzz+PzPVuHFVFpuCT5DIcqx5V52p0jhRr5cqXBRm1D6/cXqbPGuTsWn0bU=
X-MS-TrafficTypeDiagnostic: BN6PR12MB1732:
X-Microsoft-Exchange-Diagnostics: 1; BN6PR12MB1732;
	20:IhlcX3v6mYa3E21nzxdfhvntYpP+EEixzi0/QWkTXUHJJC8BYv/iHf2oUxr+4Gn7G4gmAS0pulfpaGlHsJJ8RVfa/gEDEL8IhZzkrYEoYZUc7YJgdKT/fZ2ykA7t9b4mVWUGZyd+4Kx5CEU2NiUP6BwA3XqrSXwVJZcnW0yytBFzSDq1FHUa8KR6ZBH2//GTf1MnVJD74HfCO9dEpjoWmL7+B2t8t9UJeYMIA1ryDTLW8OyoTv8ix49MP+jlgJg8JkuEOhj6a0vzEIUYO9Y86J0Ptxs217kku6naEMfRR6vBzIxWHy8n+eKRYPFq2oe50/EBEIvlU9KergTBYL6rtwPoBJPeLUymaaBHIMp68xTF/OtiJrwgy8ViPtIDXgFSJ1Su//8Bv8ZnisItKfsmUIgwODooQBcS5iPx/LIbA/R4HvVQ49UeYVjY2BZzS3H00Ex+4nP8Gls3A2yXk0W18jtJwEQ6SHn1230VmfdfGAjKaiSNfv0gQjeTkp/KTa7j;
	4:IIF7GCvJHLH2OmGY1OXf/PaF875N/1LsXFOJ/Jx+tsInlEs/jmT1Xj/DQOR883muXFccKqPT/2VcWiC+761R3P+xp+Jk9gbipb5MyXyrH8JZEnBVIj4wZALLpuZR70Q3oeNK43/yypD2TUVCuVVUqngmpTZGs0T43mjibsvpNzsW2zNei53xvnwTVVaKATXiX3MqPtZTezmrjST/rh/vE1ZcscZmxby8KxRBovgcyNWoWYcybqEzRSm/WaH6Dn19w0gYVleRD+EvCqbWKKel3na0nS1GJP/MlF0yaJAkDTaY6shaSVCPwvIbwtKJq5Mg
X-Microsoft-Antispam-PRVS: &lt;BN6PR12MB1732F3306DACBAD410A9DDA8F3FE0@BN6PR12MB1732.namprd12.prod.outlook.com&gt;
X-Exchange-Antispam-Report-Test: UriScan:(767451399110);
X-Exchange-Antispam-Report-CFA-Test: BCL:0; PCL:0;
	RULEID:(6040501)(2401047)(8121501046)(5005006)(93006095)(93001095)(10201501046)(3231101)(2400082)(944501161)(3002001)(6055026)(6041288)(20161123560045)(20161123558120)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123562045)(20161123564045)(6072148)(201708071742011);
	SRVR:BN6PR12MB1732; BCL:0; PCL:0; RULEID:; SRVR:BN6PR12MB1732;
X-Forefront-PRVS: 0574D4712B
X-Forefront-Antispam-Report: SFV:NSPM;
	SFS:(10009020)(39860400002)(366004)(39380400002)(376002)(396003)(346002)(189003)(199004)(6666003)(105586002)(6306002)(6512007)(6486002)(4720700003)(3846002)(6116002)(48376002)(36756003)(53936002)(47776003)(66066001)(86362001)(575784001)(50466002)(52116002)(386003)(6506007)(72206003)(25786009)(478600001)(51416003)(5660300001)(97736004)(1857600001)(59450400001)(4326008)(305945005)(7736002)(16526019)(26005)(186003)(50226002)(16586007)(316002)(68736007)(8936002)(8676002)(81166006)(81156014)(106356001)(2906002);
	DIR:OUT; SFP:1101; SCL:1; SRVR:BN6PR12MB1732;
	H:ssuthiku-rhel74.localdomain; FPR:; SPF:None;
	PTR:InfoNoRecords; MX:1; A:1; LANG:en; 
Received-SPF: None (protection.outlook.com: amd.com does not designate
	permitted sender hosts)
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1; BN6PR12MB1732;
	23:Uzxn5Mgm9KdrP/TClN4OfcpYz7iv36Q0riGQvq7d/?=
	=?us-ascii?Q?i+QkhK0yf5MzAiNToCwFBIxSY//YCxa6ymFtNL42BugJWiRLjmMnUaOVh/WU?=
	=?us-ascii?Q?istH7eHxagyCGgzf2XOb1O2/gcLmHhNJXBkbdKIKeSBXs8/K2YvRDlkAqjgL?=
	=?us-ascii?Q?NyJJxfYul4y2gVeN7EefUNACuxcwh4NcE8UKfhsIwe6KsPKRtxhkYgcaTC0V?=
	=?us-ascii?Q?voqeGirAtw+74CDffTuq6jjm2LW+vsVi9DXpt6qQT4Le1qHJcsrd8fOb/Vls?=
	=?us-ascii?Q?jphfMonAh37Le2zKwiShHmuxBVOii4hdhl+FIOKhRqnJgBxhkne1wN0pjyft?=
	=?us-ascii?Q?m+Zoaenx1i0WrNKhBrKuSsNda4vSgoI29LEcaqqTxxPfPvgKGmJWtx9PlLMI?=
	=?us-ascii?Q?EEsvcrllxwqxjikgjoMlMGTAw/KnJR9HKv6ILzpYzp1t4C+H4Qpv0CkjWPwu?=
	=?us-ascii?Q?IvVBjbTLM37xHogYy5wOpf1sd45l9B7rO1HnCPp7k0ExTFGZLOekCHNE/8Qz?=
	=?us-ascii?Q?GU0Ca1tVR2FWf+0Cgw+5JoMWj536R/zTe4nkkUMs+iHcfmQZ3yqJgU+Nqv1r?=
	=?us-ascii?Q?y7VBLydeT8NgTz07XXpwkc6FFI4W4Breka80HVr4AlPCoclI+53rEEoUTj5U?=
	=?us-ascii?Q?bJUEqsOR4s9ro35QJ0wOkFu6n4dvE7rpcoISLqiU14PeSSquWqBye/sS+ccL?=
	=?us-ascii?Q?rqjJaWF07P+0yfW5EKLsCvsf9YTFU6Ts1dr7gwTSX3VxwRLIJu/fJPIwVSTz?=
	=?us-ascii?Q?72eCMvbKZ1f7rvM8yqAH6i9l8aT7bhp4zxxt+6ZOKoPQCbvKRPdgc7BGuAGq?=
	=?us-ascii?Q?7+8pVcnm/QzY5mzDKACdOiZt8zLu12I7ZctcAvBjtsfqkMdDHRJeh35MjV5h?=
	=?us-ascii?Q?T8/Rgj9ae/QstTvaB9r07ifPMKAnjuHL2M6WzbG4XYyMT8EXo1drgO+6WFE2?=
	=?us-ascii?Q?Z91Ghsr/xViVdGvM0LvS8WaPYhDNYcg9cl2tLs3ZQJ4M12on8angzhlTe+xZ?=
	=?us-ascii?Q?4QWRTGJ06kl84Mn2mepwXiHA3TWYKvDaHJfG9yoR60OYP7wFcaGXeqWRD/ML?=
	=?us-ascii?Q?VHaNHZsrVu76f+5lFGKj2E8mXYs3VggM3M6hioVcMdBgvy9Sc5J0eKUn2uji?=
	=?us-ascii?Q?1DXInkhphWtVi8B9rG7D1t2ow5sqFNuVdAaFsvY+xK3+zwaRE/vX/3CVXvL2?=
	=?us-ascii?Q?cHUukC+9VCjTh0=3D?=
X-Microsoft-Exchange-Diagnostics: 1; BN6PR12MB1732;
	6:J7W4k2AyM/mtueOtXjfpVmVMZE0ssTnSpdm9arbRPLxyEuAz8+gyi2ZUEkqA6/MJwvDFGusZ7BI6dVkFPctF4hVletvb4Gqgy7RnnSChZuz5D2tuaJfkRkc8uQkaaWXClXkrtQNNv3mMcaIhbGMNmfVpVQVhUisI7n7geF56c4xs45gaVaeJA+K1zX4vL/rJaBXQLrmgcOieQDVl0hEAAmMbH0uZfqDwp4Bg8yirjXFewkhIl0qjfJ+BG6GG27ZVSbmLdKnUE7gClKxvJ19IX+fp/W3fr1QxefGW4OriBE4MTf649zQqP2G8qi0PdfULiuU+O+X9o7ggiZb4flxLoueeIgzE6L01cWubhHNZnbg=;
	5:X5G4bLAT5SP8qFHP1l9z2bcqwG8cZADQwuhKy8O01QKyNHyGdWh3ZJ0p3SbsHXrZGa+Tc4v0iRfHnE4QJAOIdrWffqHigtJoAbwo0eJkeZ7wELdVWQZgtSjXzHA8hOaumT4rQr/1yEpKqKw3dkaq6ACVlnCE6smaZHG4Clr6fZg=;
	24:W56WihgeUwLhWTLKeIhW570BngbN+/X6sxbNhMGnRzhZ0xwvexb3iDwpclqRsrHdErBXwuMpXKkVle6sc5twqAcyTNlYcyOSCgTTCaHAWiE=;
	7:d28XVd7eTD5xgrVsG084N6G+4apyNM9+hcMCAOXk7wQwFzYZMZPZK0Zx9DRhR/rYggIDHVeFLX3/MkjH8+hJ8mlCzahUO9OjhArsCgmVsNZYWqGRWtk5GIX5DV9Ibuqt3AHYpmP7fCpI9s/AH3TFl7tkSmOnfMxvYHcLdxYnFUCsKO6Z5wv/UiZ2LNZmZDeqjZ1PwyDg3yPJCjE24ONAEUSRyO3XXPQ/FwhlEptwE4Bi7bIgsX35vGdjkWdrvZPc
SpamDiagnosticOutput: 1:99
SpamDiagnosticMetadata: NSPM
X-Microsoft-Exchange-Diagnostics: 1; BN6PR12MB1732;
	20:h8ugVNCIEGMeunYwm7bQeGAGjf87py3xNUFF55T6OxXH54g54F4hVjIsTmA/VR2v2rH0sG4Nkevevnz7kX5GayxSFvSbhz6yCuKzZh/Mh39VP/7+whvTGdiysS+8b5zu4O986b9d+aiUI25u4kcHOAWch4eCYFNV9RzoItKHZsiN4mvn668VtpbMvzPFOmXmcc3WBhr5Moz0UdrnB5LhF9fpJpkCnRUCAHR9hxIOiRiJUX823fCvI7PQGYCl26nH
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 05 Feb 2018 10:47:37.3085
	(UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: f439c374-8209-4de8-c3e2-08d56c85e08c
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-Transport-CrossTenantHeadersStamped: BN6PR12MB1732
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2908">Suthikulpanit, Suravee</a> - Feb. 5, 2018, 10:45 a.m.</div>
<pre class="content">
Currently, iommu_unmap, iommu_unmap_fast and iommu_map_sg return
size_t.  However, some of the return values are error codes (&lt; 0),
which can be misinterpreted as large size. Therefore, returning size 0
instead to signify failure to map/unmap.

Cc: Joerg Roedel &lt;joro@8bytes.org&gt;
Cc: Alex Williamson &lt;alex.williamson@redhat.com&gt;
<span class="signed-off-by">Signed-off-by: Suravee Suthikulpanit &lt;suravee.suthikulpanit@amd.com&gt;</span>
---

Note: This issue was previously discussed here (https://lkml.org/lkml/2018/1/30/873).

 drivers/iommu/amd_iommu.c |  2 +-
 drivers/iommu/iommu.c     |  6 +++---
 include/linux/iommu.h     | 14 +++++++-------
 3 files changed, 11 insertions(+), 11 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=317">Joerg Roedel</a> - Feb. 13, 2018, 6:33 p.m.</div>
<pre class="content">
On Mon, Feb 05, 2018 at 05:45:53AM -0500, Suravee Suthikulpanit wrote:
<span class="quote">&gt; Currently, iommu_unmap, iommu_unmap_fast and iommu_map_sg return</span>
<span class="quote">&gt; size_t.  However, some of the return values are error codes (&lt; 0),</span>
<span class="quote">&gt; which can be misinterpreted as large size. Therefore, returning size 0</span>
<span class="quote">&gt; instead to signify failure to map/unmap.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Cc: Joerg Roedel &lt;joro@8bytes.org&gt;</span>
<span class="quote">&gt; Cc: Alex Williamson &lt;alex.williamson@redhat.com&gt;</span>
<span class="quote">&gt; Signed-off-by: Suravee Suthikulpanit &lt;suravee.suthikulpanit@amd.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Note: This issue was previously discussed here (https://lkml.org/lkml/2018/1/30/873).</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  drivers/iommu/amd_iommu.c |  2 +-</span>
<span class="quote">&gt;  drivers/iommu/iommu.c     |  6 +++---</span>
<span class="quote">&gt;  include/linux/iommu.h     | 14 +++++++-------</span>
<span class="quote">&gt;  3 files changed, 11 insertions(+), 11 deletions(-)</span>

Yeah, I am not happy with this, but the alternatives aren&#39;t any
better... So I applied this one. Thanks!


	Joerg
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/iommu/amd_iommu.c b/drivers/iommu/amd_iommu.c</span>
<span class="p_header">index 7d5eb00..fed8059 100644</span>
<span class="p_header">--- a/drivers/iommu/amd_iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/amd_iommu.c</span>
<span class="p_chunk">@@ -3037,7 +3037,7 @@</span> <span class="p_context"> static size_t amd_iommu_unmap(struct iommu_domain *dom, unsigned long iova,</span>
 	size_t unmap_size;
 
 	if (domain-&gt;mode == PAGE_MODE_NONE)
<span class="p_del">-		return -EINVAL;</span>
<span class="p_add">+		return 0;</span>
 
 	mutex_lock(&amp;domain-&gt;api_lock);
 	unmap_size = iommu_unmap_page(domain, iova, page_size);
<span class="p_header">diff --git a/drivers/iommu/iommu.c b/drivers/iommu/iommu.c</span>
<span class="p_header">index 3de5c0b..dcd55fd 100644</span>
<span class="p_header">--- a/drivers/iommu/iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/iommu.c</span>
<span class="p_chunk">@@ -1568,10 +1568,10 @@</span> <span class="p_context"> static size_t __iommu_unmap(struct iommu_domain *domain,</span>
 
 	if (unlikely(ops-&gt;unmap == NULL ||
 		     domain-&gt;pgsize_bitmap == 0UL))
<span class="p_del">-		return -ENODEV;</span>
<span class="p_add">+		return 0;</span>
 
 	if (unlikely(!(domain-&gt;type &amp; __IOMMU_DOMAIN_PAGING)))
<span class="p_del">-		return -EINVAL;</span>
<span class="p_add">+		return 0;</span>
 
 	/* find out the minimum page size supported */
 	min_pagesz = 1 &lt;&lt; __ffs(domain-&gt;pgsize_bitmap);
<span class="p_chunk">@@ -1584,7 +1584,7 @@</span> <span class="p_context"> static size_t __iommu_unmap(struct iommu_domain *domain,</span>
 	if (!IS_ALIGNED(iova | size, min_pagesz)) {
 		pr_err(&quot;unaligned: iova 0x%lx size 0x%zx min_pagesz 0x%x\n&quot;,
 		       iova, size, min_pagesz);
<span class="p_del">-		return -EINVAL;</span>
<span class="p_add">+		return 0;</span>
 	}
 
 	pr_debug(&quot;unmap this: iova 0x%lx size 0x%zx\n&quot;, iova, size);
<span class="p_header">diff --git a/include/linux/iommu.h b/include/linux/iommu.h</span>
<span class="p_header">index 41b8c57..19938ee 100644</span>
<span class="p_header">--- a/include/linux/iommu.h</span>
<span class="p_header">+++ b/include/linux/iommu.h</span>
<span class="p_chunk">@@ -465,23 +465,23 @@</span> <span class="p_context"> static inline int iommu_map(struct iommu_domain *domain, unsigned long iova,</span>
 	return -ENODEV;
 }
 
<span class="p_del">-static inline int iommu_unmap(struct iommu_domain *domain, unsigned long iova,</span>
<span class="p_del">-			      size_t size)</span>
<span class="p_add">+static inline size_t iommu_unmap(struct iommu_domain *domain,</span>
<span class="p_add">+				 unsigned long iova, size_t size)</span>
 {
<span class="p_del">-	return -ENODEV;</span>
<span class="p_add">+	return 0;</span>
 }
 
<span class="p_del">-static inline int iommu_unmap_fast(struct iommu_domain *domain, unsigned long iova,</span>
<span class="p_del">-				   int gfp_order)</span>
<span class="p_add">+static inline size_t iommu_unmap_fast(struct iommu_domain *domain,</span>
<span class="p_add">+				      unsigned long iova, int gfp_order)</span>
 {
<span class="p_del">-	return -ENODEV;</span>
<span class="p_add">+	return 0;</span>
 }
 
 static inline size_t iommu_map_sg(struct iommu_domain *domain,
 				  unsigned long iova, struct scatterlist *sg,
 				  unsigned int nents, int prot)
 {
<span class="p_del">-	return -ENODEV;</span>
<span class="p_add">+	return 0;</span>
 }
 
 static inline void iommu_flush_tlb_all(struct iommu_domain *domain)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



