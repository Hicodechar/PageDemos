
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/3] microblaze: remove redundant early_printk support - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/3] microblaze: remove redundant early_printk support</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=86391">Rob Herring</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 28, 2018, 10:39 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180228223937.29196-3-robh@kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10250057/mbox/"
   >mbox</a>
|
   <a href="/patch/10250057/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10250057/">/patch/10250057/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	2C7C760212 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 28 Feb 2018 22:40:15 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 128D328E71
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 28 Feb 2018 22:40:15 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id F0D9528E8D; Wed, 28 Feb 2018 22:40:14 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9DC8C28E94
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 28 Feb 2018 22:40:13 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S935568AbeB1WkK (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 28 Feb 2018 17:40:10 -0500
Received: from mail-oi0-f68.google.com ([209.85.218.68]:36020 &quot;EHLO
	mail-oi0-f68.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S935511AbeB1Wjo (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 28 Feb 2018 17:39:44 -0500
Received: by mail-oi0-f68.google.com with SMTP id u73so3067204oie.3
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Wed, 28 Feb 2018 14:39:44 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=zuG+NugxPPo4pFEeJbrMiP/Z/tmkq/VLl9aDWJQsuK4=;
	b=YizCMj+rrOK5tMj7f+psPuDnI9YsyIb/pCKK06EE+tGwZ4h5mn6coD5yLcc9WKyDNS
	ucyRHYdXm/842RIO2pQl4XA/yVNj4x6OfODG+y4HgiYudYKT/RAZpfYmixFatuw8W2co
	z3xro5u5JkTLmIbByLX1ofA4pWRWfdgNt2x4FtT3pqre2Y9UNWPkFh5YVPz5cdLAuKrn
	pbcHN1TloKcVrUC8NzY2Tj7RFzFZHHcuObsq2yO6mKEVsGmF6iEcgjpfNNlcz7ZLsi3c
	xUrkIw8+Uu3X9eguFr6AY1l0HS+8HyB+/9XlC4kBh92T9ti9BtIe3TpNoMYYFl3XjX6b
	snuA==
X-Gm-Message-State: APf1xPBGhWJbp9M0vzc7wUtJ/BeWPqBrgpAWFDrjURDpiSPbZhsqx0Nu
	NkzCmxGpstphSfZji3bEXsv0zGE=
X-Google-Smtp-Source: AG47ELt1CHayysWpKVVXPbsRW+Ae9BOw4+FOOL503nzNbFF4/N5kNZQ4+5NbwvVKdNl3kZMWxo2bWA==
X-Received: by 10.84.78.21 with SMTP id a21mr9909238oiy.172.1519857583418;
	Wed, 28 Feb 2018 14:39:43 -0800 (PST)
Received: from xps15.herring.priv (216-188-254-6.dyn.grandenetworks.net.
	[216.188.254.6]) by smtp.googlemail.com with ESMTPSA id
	d45sm1356835otf.72.2018.02.28.14.39.41
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Wed, 28 Feb 2018 14:39:42 -0800 (PST)
From: Rob Herring &lt;robh@kernel.org&gt;
To: Michal Simek &lt;monstr@monstr.eu&gt;
Cc: linux-kernel@vger.kernel.org
Subject: [PATCH 2/3] microblaze: remove redundant early_printk support
Date: Wed, 28 Feb 2018 16:39:36 -0600
Message-Id: &lt;20180228223937.29196-3-robh@kernel.org&gt;
X-Mailer: git-send-email 2.14.1
In-Reply-To: &lt;20180228223937.29196-1-robh@kernel.org&gt;
References: &lt;20180228223937.29196-1-robh@kernel.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=86391">Rob Herring</a> - Feb. 28, 2018, 10:39 p.m.</div>
<pre class="content">
With earlycon support now enabled, the arch specific early_printk support
can be removed.
<span class="signed-off-by">
Signed-off-by: Rob Herring &lt;robh@kernel.org&gt;</span>
Cc: Michal Simek &lt;monstr@monstr.eu&gt;
---
 arch/microblaze/Kconfig.debug         |   8 --
 arch/microblaze/include/asm/prom.h    |  27 -----
 arch/microblaze/kernel/Makefile       |   1 -
 arch/microblaze/kernel/early_printk.c | 184 ----------------------------------
 arch/microblaze/kernel/misc.S         |  35 -------
 arch/microblaze/kernel/prom.c         |  80 ---------------
 arch/microblaze/kernel/setup.c        |  12 +--
 7 files changed, 1 insertion(+), 346 deletions(-)
 delete mode 100644 arch/microblaze/include/asm/prom.h
 delete mode 100644 arch/microblaze/kernel/early_printk.c
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/microblaze/Kconfig.debug b/arch/microblaze/Kconfig.debug</span>
<span class="p_header">index 012e377330cd..331a3bb66297 100644</span>
<span class="p_header">--- a/arch/microblaze/Kconfig.debug</span>
<span class="p_header">+++ b/arch/microblaze/Kconfig.debug</span>
<span class="p_chunk">@@ -8,14 +8,6 @@</span> <span class="p_context"> config TRACE_IRQFLAGS_SUPPORT</span>
 
 source &quot;lib/Kconfig.debug&quot;
 
<span class="p_del">-config EARLY_PRINTK</span>
<span class="p_del">-	bool &quot;Early printk function for kernel&quot;</span>
<span class="p_del">-	depends on SERIAL_UARTLITE_CONSOLE || SERIAL_8250_CONSOLE</span>
<span class="p_del">-	default n</span>
<span class="p_del">-	help</span>
<span class="p_del">-	  This option turns on/off early printk messages to console.</span>
<span class="p_del">-	  First Uartlite node is taken.</span>
<span class="p_del">-</span>
 config HEART_BEAT
 	bool &quot;Heart beat function for kernel&quot;
 	default n
<span class="p_header">diff --git a/arch/microblaze/include/asm/prom.h b/arch/microblaze/include/asm/prom.h</span>
deleted file mode 100644
<span class="p_header">index 2f03ac815851..000000000000</span>
<span class="p_header">--- a/arch/microblaze/include/asm/prom.h</span>
<span class="p_header">+++ /dev/null</span>
<span class="p_chunk">@@ -1,27 +0,0 @@</span> <span class="p_context"></span>
<span class="p_del">-/*</span>
<span class="p_del">- * Definitions for talking to the Open Firmware PROM on</span>
<span class="p_del">- * Power Macintosh computers.</span>
<span class="p_del">- *</span>
<span class="p_del">- * Copyright (C) 1996-2005 Paul Mackerras.</span>
<span class="p_del">- *</span>
<span class="p_del">- * Updates for PPC64 by Peter Bergner &amp; David Engebretsen, IBM Corp.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is free software; you can redistribute it and/or</span>
<span class="p_del">- * modify it under the terms of the GNU General Public License</span>
<span class="p_del">- * as published by the Free Software Foundation; either version</span>
<span class="p_del">- * 2 of the License, or (at your option) any later version.</span>
<span class="p_del">- */</span>
<span class="p_del">-#ifndef _ASM_MICROBLAZE_PROM_H</span>
<span class="p_del">-#define _ASM_MICROBLAZE_PROM_H</span>
<span class="p_del">-</span>
<span class="p_del">-#include &lt;linux/of.h&gt;</span>
<span class="p_del">-</span>
<span class="p_del">-/* Other Prototypes */</span>
<span class="p_del">-enum early_consoles {</span>
<span class="p_del">-	UARTLITE = 1,</span>
<span class="p_del">-	UART16550 = 2,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-extern int of_early_console(void *version);</span>
<span class="p_del">-</span>
<span class="p_del">-#endif /* _ASM_MICROBLAZE_PROM_H */</span>
<span class="p_header">diff --git a/arch/microblaze/kernel/Makefile b/arch/microblaze/kernel/Makefile</span>
<span class="p_header">index 0da76fa1ab17..7e99cf6984a1 100644</span>
<span class="p_header">--- a/arch/microblaze/kernel/Makefile</span>
<span class="p_header">+++ b/arch/microblaze/kernel/Makefile</span>
<span class="p_chunk">@@ -22,7 +22,6 @@</span> <span class="p_context"> obj-y += dma.o exceptions.o \</span>
 
 obj-y += cpu/
 
<span class="p_del">-obj-$(CONFIG_EARLY_PRINTK)	+= early_printk.o</span>
 obj-$(CONFIG_HEART_BEAT)	+= heartbeat.o
 obj-$(CONFIG_MODULES)		+= microblaze_ksyms.o module.o
 obj-$(CONFIG_MMU)		+= misc.o
<span class="p_header">diff --git a/arch/microblaze/kernel/early_printk.c b/arch/microblaze/kernel/early_printk.c</span>
deleted file mode 100644
<span class="p_header">index 365f2d53f1b2..000000000000</span>
<span class="p_header">--- a/arch/microblaze/kernel/early_printk.c</span>
<span class="p_header">+++ /dev/null</span>
<span class="p_chunk">@@ -1,184 +0,0 @@</span> <span class="p_context"></span>
<span class="p_del">-/*</span>
<span class="p_del">- * Early printk support for Microblaze.</span>
<span class="p_del">- *</span>
<span class="p_del">- * Copyright (C) 2007-2009 Michal Simek &lt;monstr@monstr.eu&gt;</span>
<span class="p_del">- * Copyright (C) 2007-2009 PetaLogix</span>
<span class="p_del">- * Copyright (C) 2003-2006 Yasushi SHOJI &lt;yashi@atmark-techno.com&gt;</span>
<span class="p_del">- *</span>
<span class="p_del">- * This file is subject to the terms and conditions of the GNU General Public</span>
<span class="p_del">- * License. See the file &quot;COPYING&quot; in the main directory of this archive</span>
<span class="p_del">- * for more details.</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-#include &lt;linux/console.h&gt;</span>
<span class="p_del">-#include &lt;linux/kernel.h&gt;</span>
<span class="p_del">-#include &lt;linux/init.h&gt;</span>
<span class="p_del">-#include &lt;linux/string.h&gt;</span>
<span class="p_del">-#include &lt;linux/tty.h&gt;</span>
<span class="p_del">-#include &lt;linux/io.h&gt;</span>
<span class="p_del">-#include &lt;asm/processor.h&gt;</span>
<span class="p_del">-#include &lt;linux/fcntl.h&gt;</span>
<span class="p_del">-#include &lt;asm/setup.h&gt;</span>
<span class="p_del">-#include &lt;asm/prom.h&gt;</span>
<span class="p_del">-</span>
<span class="p_del">-static u32 base_addr;</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef CONFIG_SERIAL_UARTLITE_CONSOLE</span>
<span class="p_del">-static void early_printk_uartlite_putc(char c)</span>
<span class="p_del">-{</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * Limit how many times we&#39;ll spin waiting for TX FIFO status.</span>
<span class="p_del">-	 * This will prevent lockups if the base address is incorrectly</span>
<span class="p_del">-	 * set, or any other issue on the UARTLITE.</span>
<span class="p_del">-	 * This limit is pretty arbitrary, unless we are at about 10 baud</span>
<span class="p_del">-	 * we&#39;ll never timeout on a working UART.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-</span>
<span class="p_del">-	unsigned retries = 1000000;</span>
<span class="p_del">-	/* read status bit - 0x8 offset */</span>
<span class="p_del">-	while (--retries &amp;&amp; (in_be32(base_addr + 8) &amp; (1 &lt;&lt; 3)))</span>
<span class="p_del">-		;</span>
<span class="p_del">-</span>
<span class="p_del">-	/* Only attempt the iowrite if we didn&#39;t timeout */</span>
<span class="p_del">-	/* write to TX_FIFO - 0x4 offset */</span>
<span class="p_del">-	if (retries)</span>
<span class="p_del">-		out_be32(base_addr + 4, c &amp; 0xff);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static void early_printk_uartlite_write(struct console *unused,</span>
<span class="p_del">-					const char *s, unsigned n)</span>
<span class="p_del">-{</span>
<span class="p_del">-	while (*s &amp;&amp; n-- &gt; 0) {</span>
<span class="p_del">-		if (*s == &#39;\n&#39;)</span>
<span class="p_del">-			early_printk_uartlite_putc(&#39;\r&#39;);</span>
<span class="p_del">-		early_printk_uartlite_putc(*s);</span>
<span class="p_del">-		s++;</span>
<span class="p_del">-	}</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static struct console early_serial_uartlite_console = {</span>
<span class="p_del">-	.name = &quot;earlyser&quot;,</span>
<span class="p_del">-	.write = early_printk_uartlite_write,</span>
<span class="p_del">-	.flags = CON_PRINTBUFFER | CON_BOOT,</span>
<span class="p_del">-	.index = -1,</span>
<span class="p_del">-};</span>
<span class="p_del">-#endif /* CONFIG_SERIAL_UARTLITE_CONSOLE */</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef CONFIG_SERIAL_8250_CONSOLE</span>
<span class="p_del">-static void early_printk_uart16550_putc(char c)</span>
<span class="p_del">-{</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * Limit how many times we&#39;ll spin waiting for TX FIFO status.</span>
<span class="p_del">-	 * This will prevent lockups if the base address is incorrectly</span>
<span class="p_del">-	 * set, or any other issue on the UARTLITE.</span>
<span class="p_del">-	 * This limit is pretty arbitrary, unless we are at about 10 baud</span>
<span class="p_del">-	 * we&#39;ll never timeout on a working UART.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-</span>
<span class="p_del">-	#define UART_LSR_TEMT	0x40 /* Transmitter empty */</span>
<span class="p_del">-	#define UART_LSR_THRE	0x20 /* Transmit-hold-register empty */</span>
<span class="p_del">-	#define BOTH_EMPTY (UART_LSR_TEMT | UART_LSR_THRE)</span>
<span class="p_del">-</span>
<span class="p_del">-	unsigned retries = 10000;</span>
<span class="p_del">-</span>
<span class="p_del">-	while (--retries &amp;&amp;</span>
<span class="p_del">-		!((in_be32(base_addr + 0x14) &amp; BOTH_EMPTY) == BOTH_EMPTY))</span>
<span class="p_del">-		;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (retries)</span>
<span class="p_del">-		out_be32(base_addr, c &amp; 0xff);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static void early_printk_uart16550_write(struct console *unused,</span>
<span class="p_del">-					const char *s, unsigned n)</span>
<span class="p_del">-{</span>
<span class="p_del">-	while (*s &amp;&amp; n-- &gt; 0) {</span>
<span class="p_del">-		if (*s == &#39;\n&#39;)</span>
<span class="p_del">-			early_printk_uart16550_putc(&#39;\r&#39;);</span>
<span class="p_del">-		early_printk_uart16550_putc(*s);</span>
<span class="p_del">-		s++;</span>
<span class="p_del">-	}</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static struct console early_serial_uart16550_console = {</span>
<span class="p_del">-	.name = &quot;earlyser&quot;,</span>
<span class="p_del">-	.write = early_printk_uart16550_write,</span>
<span class="p_del">-	.flags = CON_PRINTBUFFER | CON_BOOT,</span>
<span class="p_del">-	.index = -1,</span>
<span class="p_del">-};</span>
<span class="p_del">-#endif /* CONFIG_SERIAL_8250_CONSOLE */</span>
<span class="p_del">-</span>
<span class="p_del">-int __init setup_early_printk(char *opt)</span>
<span class="p_del">-{</span>
<span class="p_del">-	int version = 0;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (early_console)</span>
<span class="p_del">-		return 1;</span>
<span class="p_del">-</span>
<span class="p_del">-	base_addr = of_early_console(&amp;version);</span>
<span class="p_del">-	if (base_addr) {</span>
<span class="p_del">-#ifdef CONFIG_MMU</span>
<span class="p_del">-		early_console_reg_tlb_alloc(base_addr);</span>
<span class="p_del">-#endif</span>
<span class="p_del">-		switch (version) {</span>
<span class="p_del">-#ifdef CONFIG_SERIAL_UARTLITE_CONSOLE</span>
<span class="p_del">-		case UARTLITE:</span>
<span class="p_del">-			pr_info(&quot;Early console on uartlite at 0x%08x\n&quot;,</span>
<span class="p_del">-								base_addr);</span>
<span class="p_del">-			early_console = &amp;early_serial_uartlite_console;</span>
<span class="p_del">-			break;</span>
<span class="p_del">-#endif</span>
<span class="p_del">-#ifdef CONFIG_SERIAL_8250_CONSOLE</span>
<span class="p_del">-		case UART16550:</span>
<span class="p_del">-			pr_info(&quot;Early console on uart16650 at 0x%08x\n&quot;,</span>
<span class="p_del">-								base_addr);</span>
<span class="p_del">-			early_console = &amp;early_serial_uart16550_console;</span>
<span class="p_del">-			break;</span>
<span class="p_del">-#endif</span>
<span class="p_del">-		default:</span>
<span class="p_del">-			pr_info(&quot;Unsupported early console %d\n&quot;,</span>
<span class="p_del">-								version);</span>
<span class="p_del">-			return 1;</span>
<span class="p_del">-		}</span>
<span class="p_del">-</span>
<span class="p_del">-		register_console(early_console);</span>
<span class="p_del">-		return 0;</span>
<span class="p_del">-	}</span>
<span class="p_del">-	return 1;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-/* Remap early console to virtual address and do not allocate one TLB</span>
<span class="p_del">- * only for early console because of performance degression */</span>
<span class="p_del">-void __init remap_early_printk(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (!early_console)</span>
<span class="p_del">-		return;</span>
<span class="p_del">-	pr_info(&quot;early_printk_console remapping from 0x%x to &quot;, base_addr);</span>
<span class="p_del">-	base_addr = (u32) ioremap(base_addr, PAGE_SIZE);</span>
<span class="p_del">-	pr_cont(&quot;0x%x\n&quot;, base_addr);</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef CONFIG_MMU</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * Early console is on the top of skipped TLB entries</span>
<span class="p_del">-	 * decrease tlb_skip size ensure that hardcoded TLB entry will be</span>
<span class="p_del">-	 * used by generic algorithm</span>
<span class="p_del">-	 * FIXME check if early console mapping is on the top by rereading</span>
<span class="p_del">-	 * TLB entry and compare baseaddr</span>
<span class="p_del">-	 *  mts  rtlbx, (tlb_skip - 1)</span>
<span class="p_del">-	 *  nop</span>
<span class="p_del">-	 *  mfs  rX, rtlblo</span>
<span class="p_del">-	 *  nop</span>
<span class="p_del">-	 *  cmp rX, orig_base_addr</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	tlb_skip -= 1;</span>
<span class="p_del">-#endif</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-void __init disable_early_printk(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (!early_console)</span>
<span class="p_del">-		return;</span>
<span class="p_del">-	pr_warn(&quot;disabling early console\n&quot;);</span>
<span class="p_del">-	unregister_console(early_console);</span>
<span class="p_del">-	early_console = NULL;</span>
<span class="p_del">-}</span>
<span class="p_header">diff --git a/arch/microblaze/kernel/misc.S b/arch/microblaze/kernel/misc.S</span>
<span class="p_header">index 1dafddeb8a0b..6759af688451 100644</span>
<span class="p_header">--- a/arch/microblaze/kernel/misc.S</span>
<span class="p_header">+++ b/arch/microblaze/kernel/misc.S</span>
<span class="p_chunk">@@ -63,38 +63,3 @@</span> <span class="p_context"> _tlbie_1:</span>
 	nop
 
 	.size  _tlbie, . - _tlbie
<span class="p_del">-</span>
<span class="p_del">-/*</span>
<span class="p_del">- * Allocate TLB entry for early console</span>
<span class="p_del">- */</span>
<span class="p_del">-.globl early_console_reg_tlb_alloc;</span>
<span class="p_del">-.type  early_console_reg_tlb_alloc, @function</span>
<span class="p_del">-.align 4;</span>
<span class="p_del">-early_console_reg_tlb_alloc:</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * Load a TLB entry for the UART, so that microblaze_progress() can use</span>
<span class="p_del">-	 * the UARTs nice and early.  We use a 4k real==virtual mapping.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	lwi	r4, r0, tlb_skip</span>
<span class="p_del">-	mts	rtlbx, r4 /* TLB slot 63 */</span>
<span class="p_del">-</span>
<span class="p_del">-	or	r4,r5,r0</span>
<span class="p_del">-	andi	r4,r4,0xfffff000</span>
<span class="p_del">-	ori	r4,r4,(TLB_WR|TLB_I|TLB_M|TLB_G)</span>
<span class="p_del">-</span>
<span class="p_del">-	andi	r5,r5,0xfffff000</span>
<span class="p_del">-	ori	r5,r5,(TLB_VALID | TLB_PAGESZ(PAGESZ_4K))</span>
<span class="p_del">-</span>
<span class="p_del">-	mts	rtlblo,r4 /* Load the data portion of the entry */</span>
<span class="p_del">-	nop</span>
<span class="p_del">-	mts	rtlbhi,r5 /* Load the tag portion of the entry */</span>
<span class="p_del">-	nop</span>
<span class="p_del">-</span>
<span class="p_del">-	lwi	r5, r0, tlb_skip</span>
<span class="p_del">-	addik	r5, r5, 1</span>
<span class="p_del">-	swi	r5, r0, tlb_skip</span>
<span class="p_del">-</span>
<span class="p_del">-	rtsd	r15, 8</span>
<span class="p_del">-	nop</span>
<span class="p_del">-</span>
<span class="p_del">-	.size  early_console_reg_tlb_alloc, . - early_console_reg_tlb_alloc</span>
<span class="p_header">diff --git a/arch/microblaze/kernel/prom.c b/arch/microblaze/kernel/prom.c</span>
<span class="p_header">index 68f099960ebc..f15cc1933bab 100644</span>
<span class="p_header">--- a/arch/microblaze/kernel/prom.c</span>
<span class="p_header">+++ b/arch/microblaze/kernel/prom.c</span>
<span class="p_chunk">@@ -13,91 +13,11 @@</span> <span class="p_context"></span>
  *      2 of the License, or (at your option) any later version.
  */
 
<span class="p_del">-#include &lt;stdarg.h&gt;</span>
<span class="p_del">-#include &lt;linux/export.h&gt;</span>
 #include &lt;linux/kernel.h&gt;
 #include &lt;linux/string.h&gt;
<span class="p_del">-#include &lt;linux/init.h&gt;</span>
<span class="p_del">-#include &lt;linux/threads.h&gt;</span>
<span class="p_del">-#include &lt;linux/spinlock.h&gt;</span>
<span class="p_del">-#include &lt;linux/types.h&gt;</span>
<span class="p_del">-#include &lt;linux/pci.h&gt;</span>
<span class="p_del">-#include &lt;linux/stringify.h&gt;</span>
<span class="p_del">-#include &lt;linux/delay.h&gt;</span>
<span class="p_del">-#include &lt;linux/initrd.h&gt;</span>
<span class="p_del">-#include &lt;linux/bitops.h&gt;</span>
<span class="p_del">-#include &lt;linux/kexec.h&gt;</span>
<span class="p_del">-#include &lt;linux/debugfs.h&gt;</span>
<span class="p_del">-#include &lt;linux/irq.h&gt;</span>
 #include &lt;linux/memblock.h&gt;
 #include &lt;linux/of_fdt.h&gt;
 
<span class="p_del">-#include &lt;asm/prom.h&gt;</span>
<span class="p_del">-#include &lt;asm/page.h&gt;</span>
<span class="p_del">-#include &lt;asm/processor.h&gt;</span>
<span class="p_del">-#include &lt;asm/irq.h&gt;</span>
<span class="p_del">-#include &lt;linux/io.h&gt;</span>
<span class="p_del">-#include &lt;asm/mmu.h&gt;</span>
<span class="p_del">-#include &lt;asm/pgtable.h&gt;</span>
<span class="p_del">-#include &lt;asm/sections.h&gt;</span>
<span class="p_del">-#include &lt;asm/pci-bridge.h&gt;</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef CONFIG_EARLY_PRINTK</span>
<span class="p_del">-static const char *stdout;</span>
<span class="p_del">-</span>
<span class="p_del">-static int __init early_init_dt_scan_chosen_serial(unsigned long node,</span>
<span class="p_del">-				const char *uname, int depth, void *data)</span>
<span class="p_del">-{</span>
<span class="p_del">-	int l;</span>
<span class="p_del">-	const char *p;</span>
<span class="p_del">-</span>
<span class="p_del">-	pr_debug(&quot;%s: depth: %d, uname: %s\n&quot;, __func__, depth, uname);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (depth == 1 &amp;&amp; (strcmp(uname, &quot;chosen&quot;) == 0 ||</span>
<span class="p_del">-				strcmp(uname, &quot;chosen@0&quot;) == 0)) {</span>
<span class="p_del">-		p = of_get_flat_dt_prop(node, &quot;linux,stdout-path&quot;, &amp;l);</span>
<span class="p_del">-		if (p != NULL &amp;&amp; l &gt; 0)</span>
<span class="p_del">-			stdout = p; /* store pointer to stdout-path */</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	if (stdout &amp;&amp; strstr(stdout, uname)) {</span>
<span class="p_del">-		p = of_get_flat_dt_prop(node, &quot;compatible&quot;, &amp;l);</span>
<span class="p_del">-		pr_debug(&quot;Compatible string: %s\n&quot;, p);</span>
<span class="p_del">-</span>
<span class="p_del">-		if ((strncmp(p, &quot;xlnx,xps-uart16550&quot;, 18) == 0) ||</span>
<span class="p_del">-			(strncmp(p, &quot;xlnx,axi-uart16550&quot;, 18) == 0)) {</span>
<span class="p_del">-			unsigned int addr;</span>
<span class="p_del">-</span>
<span class="p_del">-			*(u32 *)data = UART16550;</span>
<span class="p_del">-</span>
<span class="p_del">-			addr = *(u32 *)of_get_flat_dt_prop(node, &quot;reg&quot;, &amp;l);</span>
<span class="p_del">-			addr += *(u32 *)of_get_flat_dt_prop(node,</span>
<span class="p_del">-							&quot;reg-offset&quot;, &amp;l);</span>
<span class="p_del">-			/* clear register offset */</span>
<span class="p_del">-			return be32_to_cpu(addr) &amp; ~3;</span>
<span class="p_del">-		}</span>
<span class="p_del">-		if ((strncmp(p, &quot;xlnx,xps-uartlite&quot;, 17) == 0) ||</span>
<span class="p_del">-				(strncmp(p, &quot;xlnx,opb-uartlite&quot;, 17) == 0) ||</span>
<span class="p_del">-				(strncmp(p, &quot;xlnx,axi-uartlite&quot;, 17) == 0) ||</span>
<span class="p_del">-				(strncmp(p, &quot;xlnx,mdm&quot;, 8) == 0)) {</span>
<span class="p_del">-			const unsigned int *addrp;</span>
<span class="p_del">-</span>
<span class="p_del">-			*(u32 *)data = UARTLITE;</span>
<span class="p_del">-</span>
<span class="p_del">-			addrp = of_get_flat_dt_prop(node, &quot;reg&quot;, &amp;l);</span>
<span class="p_del">-			return be32_to_cpup(addrp); /* return address */</span>
<span class="p_del">-		}</span>
<span class="p_del">-	}</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-/* this function is looking for early console - Microblaze specific */</span>
<span class="p_del">-int __init of_early_console(void *version)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return of_scan_flat_dt(early_init_dt_scan_chosen_serial, version);</span>
<span class="p_del">-}</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
 void __init early_init_devtree(void *params)
 {
 	pr_debug(&quot; -&gt; early_init_devtree(%p)\n&quot;, params);
<span class="p_header">diff --git a/arch/microblaze/kernel/setup.c b/arch/microblaze/kernel/setup.c</span>
<span class="p_header">index be98ffe28ca8..bd47aba352af 100644</span>
<span class="p_header">--- a/arch/microblaze/kernel/setup.c</span>
<span class="p_header">+++ b/arch/microblaze/kernel/setup.c</span>
<span class="p_chunk">@@ -27,13 +27,12 @@</span> <span class="p_context"></span>
 #include &lt;linux/param.h&gt;
 #include &lt;linux/pci.h&gt;
 #include &lt;linux/cache.h&gt;
<span class="p_del">-#include &lt;linux/of_platform.h&gt;</span>
<span class="p_add">+#include &lt;linux/of.h&gt;</span>
 #include &lt;linux/dma-mapping.h&gt;
 #include &lt;asm/cacheflush.h&gt;
 #include &lt;asm/entry.h&gt;
 #include &lt;asm/cpuinfo.h&gt;
 
<span class="p_del">-#include &lt;asm/prom.h&gt;</span>
 #include &lt;asm/pgtable.h&gt;
 
 DEFINE_PER_CPU(unsigned int, KSP);	/* Saved kernel stack pointer */
<span class="p_chunk">@@ -64,11 +63,6 @@</span> <span class="p_context"> void __init setup_arch(char **cmdline_p)</span>
 
 	setup_memory();
 
<span class="p_del">-#ifdef CONFIG_EARLY_PRINTK</span>
<span class="p_del">-	/* remap early console to virtual address */</span>
<span class="p_del">-	remap_early_printk();</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
 	xilinx_pci_init();
 
 #if defined(CONFIG_DUMMY_CONSOLE)
<span class="p_chunk">@@ -133,10 +127,6 @@</span> <span class="p_context"> void __init machine_early_init(const char *cmdline, unsigned int ram,</span>
 /* initialize device tree for usage in early_printk */
 	early_init_devtree(_fdt_start);
 
<span class="p_del">-#ifdef CONFIG_EARLY_PRINTK</span>
<span class="p_del">-	setup_early_printk(NULL);</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
 	/* setup kernel_tlb after BSS cleaning
 	 * Maybe worth to move to asm code */
 	kernel_tlb = tlb0 + tlb1;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



