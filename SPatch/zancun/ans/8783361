
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[PART2,RFC,v1,4/9] iommu/amd: Adding GALOG interrupt handler - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [PART2,RFC,v1,4/9] iommu/amd: Adding GALOG interrupt handler</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=2908">Suthikulpanit, Suravee</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>April 8, 2016, 12:49 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1460119770-2896-5-git-send-email-Suravee.Suthikulpanit@amd.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8783361/mbox/"
   >mbox</a>
|
   <a href="/patch/8783361/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8783361/">/patch/8783361/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 08598C0553
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  8 Apr 2016 12:53:01 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 3EA40202B8
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  8 Apr 2016 12:53:00 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 57BAB20295
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  8 Apr 2016 12:52:59 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1758379AbcDHMwQ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 8 Apr 2016 08:52:16 -0400
Received: from mail-bn1on0061.outbound.protection.outlook.com
	([157.56.110.61]:21856
	&quot;EHLO na01-bn1-obe.outbound.protection.outlook.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1754469AbcDHMuR (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 8 Apr 2016 08:50:17 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=amdcloud.onmicrosoft.com; s=selector1-amd-com;
	h=From:To:Date:Subject:Message-ID:Content-Type:MIME-Version;
	bh=9eD8yPS7M6qpIBtH0M5pxAZ6Uq5W3X6a9Lb83ePlT0s=;
	b=TeZ0Y8sOXE6gPlPF2kpY3OHNW6CwjWh5Mx7WIxJKVBhYLMFcH3L9NAeiTBpGu0uAgAkYiyOwWUTN8d62Fh3V3qTlhzipRbjdX8XKop12ds4XNVOx6cstMofuNc6EJ3jkGi+5B6nAxVWk0fOzFqua8TFmMIKYZnY8w5nas81j90I=
Authentication-Results: redhat.com; dkim=none (message not signed)
	header.d=none; redhat.com; dmarc=none action=none header.from=amd.com;
Received: from localhost.localdomain (124.121.8.20) by
	SN1PR12MB0446.namprd12.prod.outlook.com (10.162.105.14) with
	Microsoft SMTP
	Server (TLS) id 15.1.453.26; Fri, 8 Apr 2016 12:50:07 +0000
From: Suravee Suthikulpanit &lt;Suravee.Suthikulpanit@amd.com&gt;
To: &lt;pbonzini@redhat.com&gt;, &lt;rkrcmar@redhat.com&gt;, &lt;joro@8bytes.org&gt;,
	&lt;bp@alien8.de&gt;, &lt;gleb@kernel.org&gt;, &lt;alex.williamson@redhat.com&gt;
CC: &lt;kvm@vger.kernel.org&gt;, &lt;linux-kernel@vger.kernel.org&gt;,
	&lt;wei@redhat.com&gt;, &lt;sherry.hurwitz@amd.com&gt;,
	Suravee Suthikulpanit &lt;suravee.suthikulpanit@amd.com&gt;
Subject: [PART2 RFC v1 4/9] iommu/amd: Adding GALOG interrupt handler
Date: Fri, 8 Apr 2016 07:49:25 -0500
Message-ID: &lt;1460119770-2896-5-git-send-email-Suravee.Suthikulpanit@amd.com&gt;
X-Mailer: git-send-email 1.9.1
In-Reply-To: &lt;1460119770-2896-1-git-send-email-Suravee.Suthikulpanit@amd.com&gt;
References: &lt;1460119770-2896-1-git-send-email-Suravee.Suthikulpanit@amd.com&gt;
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [124.121.8.20]
X-ClientProxiedBy: HKNPR06CA0022.apcprd06.prod.outlook.com (10.141.16.12) To
	SN1PR12MB0446.namprd12.prod.outlook.com (10.162.105.14)
X-MS-Office365-Filtering-Correlation-Id: ce425cbb-383c-4a46-0d58-08d35fac524b
X-Microsoft-Exchange-Diagnostics: 1; SN1PR12MB0446;
	2:UHGoIw+llV+zOD4EHmlprj2crLO/vu5ev2F+h15yxivFBsBpWF1XEZ4765DmpiU/jsFZTkGNfll2PjbwEf83OlWrPyZ174e1djzx2T5dm5X4U0WbdesklsphvnZKjnp05dWMi/eSD3CJ/xYyld+MQer+GNLco2YcaztFDYbuwvHdNCuHmG2aFi4cDlDwTJHo;
	3:ZLEA4P7WgfgYmIC6ac6P7ulVgID3bJaBMhu9yA/n3uo+Yz3zlVBQUupZX2UAQYcietw60IR1KGy2ZPKbjIFOqm8KdSWxgo/tgbNvt20xs8e/hSF+S9gXVUwRJPM2zXxx
X-Microsoft-Antispam: UriScan:;BCL:0;PCL:0;RULEID:;SRVR:SN1PR12MB0446;
X-Microsoft-Exchange-Diagnostics: 1; SN1PR12MB0446;
	25:aptPmmjQ3m/wvHgodQqFqwzbJf07PhAEJK3xDUrlQQ8CLelvi917wWszk0LX030OprnN1L/q8LYQKElo4JnPKVVuikGfWVzTaGdLT9ggMlh0D3GefF/tjO4KrK2JhNraMDtpXGqIySJ4tyfQZOQXAkmyjYAwQvUmw9EFQ//BKaVBNrXmbj6C1990/1VZRAiDS5sB5y2fkNSGEpd3xuYPwYCLiDy5I2R08hzK5TuEQFDc0fTHwY2XXPiJnecUbgdA0p3MGh3B5dvWijQtpHg5zx1FQQ2OjVMXDWH37I2/AxydIEEASlh+kP2t4E2w1dKrMQSWyMgK7d+8ffhu/mq1J/02PAOftRNRfnyPoprlRcIuiFNlYtPKqfZm2H5vg9xKdZth313P5g1atkDGwf5ko0b8CTf2V+11xh+fLxdK7yy/AHU17K7kSxbCO6wKkL+7nZ/TROv7T1eYyXZTNDlt/i8YfcWrM3ZZBQJJFULLFWZGX/XlEQr9IbpXdB7uTmEx359KFN9srVXafH3G3qt1kjGgqkNyVhCLjh8o+LEb9HDOFcy3+LT94oTLUZWIZgp9BPzFftLO8ZQ6RcyCJAYdOzGb2/U7NJTeZ8o9Qz51tHWpmzauFrojuwX+b1MoANjTq3xQGrVwVVYXZeqx8c1HMgpWxh+hGxZjMHOb7F77VvFuGSahDrQCJ6c38xE55wZNSmJOriplObk4HEmM6bsZHQ==
X-Microsoft-Exchange-Diagnostics: 1; SN1PR12MB0446;
	20:e0iYsgR5phCD33ES3OZXFIy9DWMm2voe6jCdGkQwW4rjCiqKRqxYbm6HRwx3eLZQEeOblLPZ4taAox52zp8NTQJzp8dl2iMXtY7OKtqUsSfzEn+KKv+0qYSrFzUVKpYh9c1xe2QinXne38yvQA0llTcAcYft5udSdNu3FtrMXZh3k+1wIjKYiBoruYlHEmYb0d7C/jZmW/e28v3xEK7Ii5wh8ohAa44u3D0lbSP9YC5I3ZgLv+dK4KYuZ8vAsq93n2CHovQhSo/9VVW6bfH2DYM3U1zzCG/rrkLWNQmEFIDKiu4rmtn4pCKicFv8ZMth+1sGkBSHRHIt0fmQL+hNe3io1RBPrmaJEmg3hp2lnZwjvTxCVQvvGm6QL0o39VCcWy5lkD1PPRh6pLrz2iEm46TJfytJT1780A9BDai75oKIRie+ZmCDfRZpVa5Yr1uYzfiAbPB0cXdRO3L7usdtBkdP1RcKa0RBsg5dtRq5r58zXqv099+RfsQBv5CuB4CZ;
	4:BZAWTTWDc1YnbV26E7JsTJpiIKJ9n3JXPmau53tK+52UvkkTqbwcbFcES19Ix933PZx6wrWoe26CzMRhNj35AZGOM+hDeDJJNplkSuIC8HVhi9q9iank4PTmwhdyLcvKOGnIA4c3uj9wpiDIho1z7MCgzq18sCP+qA4ikbrF+s0awVNlBBKYMW7igSZW29smMr91GafGxUTQ/CgyOKg6mUn2d9L66XZO00DR2ha0XkWMbvFZ12Uww5xSWDkYgBRouMRKx1eTRdWfd1D05JSvgnjpLu9xyKUugE9PPoF2MtfcptlT8JQGuycB5tEJdiXRbQzUL/SYTt+ftAtt8zzxCWfAF5HD69E6Cc3NpsZRwy1TrdiYKslhxl+OIMOfwPXt
X-Microsoft-Antispam-PRVS: &lt;SN1PR12MB0446A17A17DBC9DBF776F93DF3910@SN1PR12MB0446.namprd12.prod.outlook.com&gt;
X-Exchange-Antispam-Report-Test: UriScan:;
X-Exchange-Antispam-Report-CFA-Test: BCL:0; PCL:0;
	RULEID:(601004)(2401047)(5005006)(8121501046)(3002001)(10201501046);
	SRVR:SN1PR12MB0446; BCL:0; PCL:0; RULEID:; SRVR:SN1PR12MB0446;
X-Forefront-PRVS: 0906E83A25
X-Forefront-Antispam-Report: SFV:NSPM;
	SFS:(10009020)(4630300001)(6069001)(6009001)(50466002)(48376002)(77096005)(47776003)(66066001)(229853001)(36756003)(86362001)(1096002)(42186005)(19580405001)(19580395003)(92566002)(6116002)(3846002)(586003)(5004730100002)(50986999)(76176999)(4326007)(189998001)(5003940100001)(2950100001)(2201001)(2906002)(5008740100001)(5001770100001)(81166005)(50226001);
	DIR:OUT; SFP:1101; SCL:1; SRVR:SN1PR12MB0446;
	H:localhost.localdomain; FPR:; SPF:None; MLV:sfv; LANG:en; 
X-Microsoft-Exchange-Diagnostics: 1; SN1PR12MB0446;
	23:Oj+6PzTNXVmr6DUW4elZTDuWQ5/1MszRWMz4T5dZ0bHv/hkcD21U1kIwGmN6V9WT+1xyzuScUQcX/tyqSjKrVCZ0mCBwRLEn2d0Noth+k0NRy9b8BRQeg6H/IeDxSPBnZ3rx9pXy51pD34sNxKp+UeB8MF2FhhpyT/2Q71cugz9YpoXnlXGr7c8COUGWBTVS3Vv5LNe/qyMRmGg9HbwW6sRSROqbWC9jAGmELfKdjxnNBdatidFDQ5j/DUcs5jAaUnZw7EUdKmgyXb+n3DBKcDcObFwm2l3/N5/bZZ1rkNYSF/PJ56iZESTn4WcvhuLD7mM8ppkeoncUP1BdJERfusBvP/xbPk5CXVF1VmoQlM/fqO/V5oS8upZsmls/kTeSDWjY4uGGFZWNC46SfHK8jgedDjXMkNipendjaR/sIuCSMyRnN2Oz6V+KUoT6MTNVTX12DQ2pF5f+GwNmR6l9AlvoZLfod6z95Xo/Qv0JKkE+JwnRacb3uVdEtBFDhltaGzTwrzv4J4S97zdWHhaWc3aMrqO0gS1a+jX+923eCXYUfRiEi3jq991pPiVR9AF8wXXEdZiXY1yFRIYZE+bWOEczova/PVFrxOJww/IDP0+vTScKsER++rMz5Vo4KfozVh7akU9c0a5biob9JrnJvGavtCdtJbz4fcSnPlo0Oy9owNNtaYEcq7cZtNFSK5E5KntStZQu2GNvLhtSc3p9cHtaoZtnJMSVcjcGU+rElpPInCzUMP2ckk3sv79b+rXaaAWruXehyT6UvFe7RccdP9HPlEIM2/kp+IamebB3K4MI96L/GvIOKumu2fvFynbUPmFMSe6hjHwYhRvecURYvK0mIH2QuKT4AVyXl7hdUbKzdIlL2ejwjydDb37Fp5KawaOcJTCgOBLFawux3OY2UQ==
X-Microsoft-Exchange-Diagnostics: 1; SN1PR12MB0446;
	5:yCpNu+qKhk0LBrU4WLGWtcrosYvUmUFqc8BWoFGx8JvQcYBD1rv4niDO4ft6J0SzMPQAhM1lhOVkreOSiideJy3sGMm+beBeOO/6SJsFT08tHehSg0H+jDMFTXDu+gTTJfGDxrxua8n+aWWTQezbIA==;
	24:6Qb/tO3xA7ZYNDoIMAof54wiYqFtgbjHLI7f28JRIcs4MSz/zbaJRey8fwvZSTmt/wO/zX3JRC/w+eJX3CnqvKkQ78B13GNPBieWuBO0WE0=;
	20:S96UaruY2zQ9qlYEpxZhP290Wb8ajmgIi7Og62q2ntzSMUarF3meei4EU0H7AmGUXgq5RN+ZMj0/JZtwC4nEW4RURJxQ48bFkbjFdlZJlEFM5DDnfAF4tjmo+A+vDjcKnwRcJ/7pjf9P/rLAzbH0HT+8DqF0foZNNOhHRF9g5xUs/XPX9ZaZzJ33hZSRLPC4jmf9PfKuDqPkrB/KBOW4E2bzzcktDM0t9Zqrp9VgPGGsUYBfvB5VgbbrHZGz7kg+
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 08 Apr 2016 12:50:07.4659
	(UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN1PR12MB0446
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.9 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_HI,RP_MATCHES_RCVD,UNPARSEABLE_RELAY
	autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2908">Suthikulpanit, Suravee</a> - April 8, 2016, 12:49 p.m.</div>
<pre class="content">
<span class="from">From: Suravee Suthikulpanit &lt;suravee.suthikulpanit@amd.com&gt;</span>

This patch adds AMD IOMMU guest virtual APIC log (GALOG) handler.
When IOMMU hardware receives an interrupt targeting a blocking vcpu,
it creates an entry in the GALOG, and generates an interrupt to notify
the AMD IOMMU driver.

At this point, the driver processes the log entry, and notify the SVM
driver via the registered iommu_ga_log_notifier function.
<span class="signed-off-by">
Signed-off-by: Suravee Suthikulpanit &lt;suravee.suthikulpanit@amd.com&gt;</span>
---
 drivers/iommu/amd_iommu.c | 103 ++++++++++++++++++++++++++++++++++++++++++++--
 include/linux/amd-iommu.h |  10 +++++
 2 files changed, 110 insertions(+), 3 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/iommu/amd_iommu.c b/drivers/iommu/amd_iommu.c</span>
<span class="p_header">index af6079a..8cdde339 100644</span>
<span class="p_header">--- a/drivers/iommu/amd_iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/amd_iommu.c</span>
<span class="p_chunk">@@ -424,6 +424,8 @@</span> <span class="p_context"> DECLARE_STATS_COUNTER(complete_ppr);</span>
 DECLARE_STATS_COUNTER(invalidate_iotlb);
 DECLARE_STATS_COUNTER(invalidate_iotlb_all);
 DECLARE_STATS_COUNTER(pri_requests);
<span class="p_add">+DECLARE_STATS_COUNTER(galog_max);</span>
<span class="p_add">+DECLARE_STATS_COUNTER(galog_total);</span>
 
 static struct dentry *stats_dir;
 static struct dentry *de_fflush;
<span class="p_chunk">@@ -462,6 +464,8 @@</span> <span class="p_context"> static void amd_iommu_stats_init(void)</span>
 	amd_iommu_stats_add(&amp;invalidate_iotlb);
 	amd_iommu_stats_add(&amp;invalidate_iotlb_all);
 	amd_iommu_stats_add(&amp;pri_requests);
<span class="p_add">+	amd_iommu_stats_add(&amp;galog_max);</span>
<span class="p_add">+	amd_iommu_stats_add(&amp;galog_total);</span>
 }
 
 #endif
<span class="p_chunk">@@ -655,14 +659,102 @@</span> <span class="p_context"> static void iommu_poll_ppr_log(struct amd_iommu *iommu)</span>
 	}
 }
 
<span class="p_add">+static int (*iommu_ga_log_notifier)(int, int, int);</span>
<span class="p_add">+</span>
<span class="p_add">+int amd_iommu_register_ga_log_notifier(int (*notifier)(int, int, int))</span>
<span class="p_add">+{</span>
<span class="p_add">+	iommu_ga_log_notifier = notifier;</span>
<span class="p_add">+</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+EXPORT_SYMBOL(amd_iommu_register_ga_log_notifier);</span>
<span class="p_add">+</span>
<span class="p_add">+static void iommu_handle_ga_guest_nr_entry(struct amd_iommu *iommu,</span>
<span class="p_add">+					   u16 devid, u32 ga_tag)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct amd_ir_data *ir_data;</span>
<span class="p_add">+	unsigned long flags;</span>
<span class="p_add">+	int vec = 0;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (!iommu_ga_log_notifier)</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	spin_lock_irqsave(&amp;iommu-&gt;ga_hash_lock, flags);</span>
<span class="p_add">+	hash_for_each_possible(iommu-&gt;ga_hash, ir_data, hnode, ga_tag) {</span>
<span class="p_add">+		vec = ir_data-&gt;irte_ga_entry.hi.fields.vector;</span>
<span class="p_add">+		break;</span>
<span class="p_add">+	}</span>
<span class="p_add">+	spin_unlock_irqrestore(&amp;iommu-&gt;ga_hash_lock, flags);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (vec) {</span>
<span class="p_add">+		pr_debug(&quot;AMD-Vi: %s: devid=%#x, ga_tag=%#x\n&quot;,</span>
<span class="p_add">+			 __func__, devid, ga_tag);</span>
<span class="p_add">+</span>
<span class="p_add">+		if (iommu_ga_log_notifier(GATAG_TO_AVICTAG(ga_tag),</span>
<span class="p_add">+					  GATAG_TO_VCPUID(ga_tag), vec) != 0)</span>
<span class="p_add">+			pr_err(&quot;AMD-Vi: GA log notifier failed.\n&quot;);</span>
<span class="p_add">+	}</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static void iommu_poll_ga_log(struct amd_iommu *iommu)</span>
<span class="p_add">+{</span>
<span class="p_add">+	u32 head, tail, cnt = 0;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (iommu-&gt;ga_log == NULL)</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	head = readl(iommu-&gt;mmio_base + MMIO_GA_HEAD_OFFSET);</span>
<span class="p_add">+	tail = readl(iommu-&gt;mmio_base + MMIO_GA_TAIL_OFFSET);</span>
<span class="p_add">+</span>
<span class="p_add">+	while (head != tail) {</span>
<span class="p_add">+		volatile u64 *raw;</span>
<span class="p_add">+		u64 entry;</span>
<span class="p_add">+</span>
<span class="p_add">+		raw = (u64 *)(iommu-&gt;ga_log + head);</span>
<span class="p_add">+		cnt++;</span>
<span class="p_add">+</span>
<span class="p_add">+		/* Avoid memcpy function-call overhead */</span>
<span class="p_add">+		entry = *raw;</span>
<span class="p_add">+</span>
<span class="p_add">+		/* Update head pointer of hardware ring-buffer */</span>
<span class="p_add">+		head = (head + GA_ENTRY_SIZE) % GA_LOG_SIZE;</span>
<span class="p_add">+		writel(head, iommu-&gt;mmio_base + MMIO_GA_HEAD_OFFSET);</span>
<span class="p_add">+</span>
<span class="p_add">+		/* Handle GA entry */</span>
<span class="p_add">+		switch (GA_REQ_TYPE(entry)) {</span>
<span class="p_add">+		case GA_GUEST_NR:</span>
<span class="p_add">+			iommu_handle_ga_guest_nr_entry(iommu,</span>
<span class="p_add">+							GA_DEVID(entry),</span>
<span class="p_add">+							GA_TAG(entry));</span>
<span class="p_add">+			break;</span>
<span class="p_add">+		default:</span>
<span class="p_add">+			break;</span>
<span class="p_add">+		}</span>
<span class="p_add">+</span>
<span class="p_add">+		/* Refresh ring-buffer information */</span>
<span class="p_add">+		head = readl(iommu-&gt;mmio_base + MMIO_GA_HEAD_OFFSET);</span>
<span class="p_add">+		tail = readl(iommu-&gt;mmio_base + MMIO_GA_TAIL_OFFSET);</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	ADD_STATS_COUNTER(galog_total, cnt);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (STATS_COUNTER(galog_max) &lt; cnt)</span>
<span class="p_add">+		SET_STATS_COUNTER(galog_max, cnt);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+#define AMD_IOMMU_INT_MASK	\</span>
<span class="p_add">+	(MMIO_STATUS_EVT_INT_MASK | \</span>
<span class="p_add">+	 MMIO_STATUS_PPR_INT_MASK | \</span>
<span class="p_add">+	 MMIO_STATUS_GALOG_INT_MASK)</span>
<span class="p_add">+</span>
 irqreturn_t amd_iommu_int_thread(int irq, void *data)
 {
 	struct amd_iommu *iommu = (struct amd_iommu *) data;
 	u32 status = readl(iommu-&gt;mmio_base + MMIO_STATUS_OFFSET);
 
<span class="p_del">-	while (status &amp; (MMIO_STATUS_EVT_INT_MASK | MMIO_STATUS_PPR_INT_MASK)) {</span>
<span class="p_del">-		/* Enable EVT and PPR interrupts again */</span>
<span class="p_del">-		writel((MMIO_STATUS_EVT_INT_MASK | MMIO_STATUS_PPR_INT_MASK),</span>
<span class="p_add">+	while (status &amp; AMD_IOMMU_INT_MASK) {</span>
<span class="p_add">+		/* Enable EVT and PPR and GA interrupts again */</span>
<span class="p_add">+		writel(AMD_IOMMU_INT_MASK,</span>
 			iommu-&gt;mmio_base + MMIO_STATUS_OFFSET);
 
 		if (status &amp; MMIO_STATUS_EVT_INT_MASK) {
<span class="p_chunk">@@ -675,6 +767,11 @@</span> <span class="p_context"> irqreturn_t amd_iommu_int_thread(int irq, void *data)</span>
 			iommu_poll_ppr_log(iommu);
 		}
 
<span class="p_add">+		if (status &amp; MMIO_STATUS_GALOG_INT_MASK) {</span>
<span class="p_add">+			pr_devel(&quot;AMD-Vi: Processing IOMMU GA Log\n&quot;);</span>
<span class="p_add">+			iommu_poll_ga_log(iommu);</span>
<span class="p_add">+		}</span>
<span class="p_add">+</span>
 		/*
 		 * Hardware bug: ERBT1312
 		 * When re-enabling interrupt (by writing 1
<span class="p_header">diff --git a/include/linux/amd-iommu.h b/include/linux/amd-iommu.h</span>
<span class="p_header">index 2b08e79..36648fe 100644</span>
<span class="p_header">--- a/include/linux/amd-iommu.h</span>
<span class="p_header">+++ b/include/linux/amd-iommu.h</span>
<span class="p_chunk">@@ -169,10 +169,20 @@</span> <span class="p_context"> typedef void (*amd_iommu_invalidate_ctx)(struct pci_dev *pdev, int pasid);</span>
 extern int amd_iommu_set_invalidate_ctx_cb(struct pci_dev *pdev,
 					   amd_iommu_invalidate_ctx cb);
 
<span class="p_add">+/* IOMMU AVIC Function */</span>
<span class="p_add">+extern int</span>
<span class="p_add">+amd_iommu_register_ga_log_notifier(int (*notifier)(int, int, int));</span>
<span class="p_add">+</span>
 #else
 
 static inline int amd_iommu_detect(void) { return -ENODEV; }
 
<span class="p_add">+static inline int</span>
<span class="p_add">+amd_iommu_register_ga_log_notifier(int (*notifier)(int, int, int))</span>
<span class="p_add">+{</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 #endif
 
 #endif /* _ASM_X86_AMD_IOMMU_H */

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



