
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,v3,04/17] mm: VMA sequence count - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,v3,04/17] mm: VMA sequence count</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=89031">Laurent Dufour</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>April 27, 2017, 3:52 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1493308376-23851-5-git-send-email-ldufour@linux.vnet.ibm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9703081/mbox/"
   >mbox</a>
|
   <a href="/patch/9703081/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9703081/">/patch/9703081/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	DB1186032C for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 27 Apr 2017 15:53:28 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9FDD628607
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 27 Apr 2017 15:53:28 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 949CE28636; Thu, 27 Apr 2017 15:53:28 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7655928607
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 27 Apr 2017 15:53:27 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1033483AbdD0PxV (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 27 Apr 2017 11:53:21 -0400
Received: from mx0b-001b2d01.pphosted.com ([148.163.158.5]:48288 &quot;EHLO
	mx0a-001b2d01.pphosted.com&quot; rhost-flags-OK-OK-OK-FAIL)
	by vger.kernel.org with ESMTP id S1032196AbdD0PxR (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 27 Apr 2017 11:53:17 -0400
Received: from pps.filterd (m0098419.ppops.net [127.0.0.1])
	by mx0b-001b2d01.pphosted.com (8.16.0.20/8.16.0.20) with SMTP id
	v3RFn4CQ109171
	for &lt;linux-kernel@vger.kernel.org&gt;; Thu, 27 Apr 2017 11:53:11 -0400
Received: from e06smtp12.uk.ibm.com (e06smtp12.uk.ibm.com [195.75.94.108])
	by mx0b-001b2d01.pphosted.com with ESMTP id 2a3a4eum2q-1
	(version=TLSv1.2 cipher=AES256-SHA bits=256 verify=NOT)
	for &lt;linux-kernel@vger.kernel.org&gt;; Thu, 27 Apr 2017 11:53:11 -0400
Received: from localhost
	by e06smtp12.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use
	Only! Violators will be prosecuted
	for &lt;linux-kernel@vger.kernel.org&gt; from &lt;ldufour@linux.vnet.ibm.com&gt;; 
	Thu, 27 Apr 2017 16:53:09 +0100
Received: from b06cxnps4074.portsmouth.uk.ibm.com (9.149.109.196)
	by e06smtp12.uk.ibm.com (192.168.101.142) with IBM ESMTP SMTP
	Gateway: Authorized Use Only! Violators will be prosecuted; 
	Thu, 27 Apr 2017 16:53:05 +0100
Received: from d06av23.portsmouth.uk.ibm.com (d06av23.portsmouth.uk.ibm.com
	[9.149.105.59])
	by b06cxnps4074.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with
	ESMTP id v3RFr5Hw31588564; Thu, 27 Apr 2017 15:53:05 GMT
Received: from d06av23.portsmouth.uk.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 1D2BEA4059;
	Thu, 27 Apr 2017 16:51:55 +0100 (BST)
Received: from d06av23.portsmouth.uk.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 944A9A4055;
	Thu, 27 Apr 2017 16:51:54 +0100 (BST)
Received: from nimbus.lab.toulouse-stg.fr.ibm.com (unknown [9.101.4.33])
	by d06av23.portsmouth.uk.ibm.com (Postfix) with ESMTP;
	Thu, 27 Apr 2017 16:51:54 +0100 (BST)
From: Laurent Dufour &lt;ldufour@linux.vnet.ibm.com&gt;
To: paulmck@linux.vnet.ibm.com, peterz@infradead.org,
	akpm@linux-foundation.org, kirill@shutemov.name,
	ak@linux.intel.com, mhocko@kernel.org, dave@stgolabs.net, jack@suse.cz
Cc: linux-kernel@vger.kernel.org, linux-mm@kvack.org,
	haren@linux.vnet.ibm.com, khandual@linux.vnet.ibm.com,
	npiggin@gmail.com, bsingharora@gmail.com
Subject: [RFC v3 04/17] mm: VMA sequence count
Date: Thu, 27 Apr 2017 17:52:43 +0200
X-Mailer: git-send-email 2.7.4
In-Reply-To: &lt;1493308376-23851-1-git-send-email-ldufour@linux.vnet.ibm.com&gt;
References: &lt;1493308376-23851-1-git-send-email-ldufour@linux.vnet.ibm.com&gt;
X-TM-AS-GCONF: 00
x-cbid: 17042715-0008-0000-0000-00000434CA22
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 17042715-0009-0000-0000-00001D71AA7F
Message-Id: &lt;1493308376-23851-5-git-send-email-ldufour@linux.vnet.ibm.com&gt;
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10432:, ,
	definitions=2017-04-27_14:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
	spamscore=0 suspectscore=2
	malwarescore=0 phishscore=0 adultscore=0 bulkscore=0 classifier=spam
	adjust=0 reason=mlx scancount=1 engine=8.0.1-1703280000
	definitions=main-1704270259
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=89031">Laurent Dufour</a> - April 27, 2017, 3:52 p.m.</div>
<pre class="content">
<span class="from">From: Peter Zijlstra &lt;peterz@infradead.org&gt;</span>

Wrap the VMA modifications (vma_adjust/unmap_page_range) with sequence
counts such that we can easily test if a VMA is changed.

The unmap_page_range() one allows us to make assumptions about
page-tables; when we find the seqcount hasn&#39;t changed we can assume
page-tables are still valid.

The flip side is that we cannot distinguish between a vma_adjust() and
the unmap_page_range() -- where with the former we could have
re-checked the vma bounds against the address.
<span class="signed-off-by">
Signed-off-by: Peter Zijlstra (Intel) &lt;peterz@infradead.org&gt;</span>
[port to 4.10 kernel]
<span class="signed-off-by">Signed-off-by: Laurent Dufour &lt;ldufour@linux.vnet.ibm.com&gt;</span>
---
 include/linux/mm_types.h |  1 +
 mm/memory.c              |  2 ++
 mm/mmap.c                | 13 +++++++++++++
 3 files changed, 16 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/linux/mm_types.h b/include/linux/mm_types.h</span>
<span class="p_header">index 808751d7b737..daa5fbba9349 100644</span>
<span class="p_header">--- a/include/linux/mm_types.h</span>
<span class="p_header">+++ b/include/linux/mm_types.h</span>
<span class="p_chunk">@@ -358,6 +358,7 @@</span> <span class="p_context"> struct vm_area_struct {</span>
 	struct mempolicy *vm_policy;	/* NUMA policy for the VMA */
 #endif
 	struct vm_userfaultfd_ctx vm_userfaultfd_ctx;
<span class="p_add">+	seqcount_t vm_sequence;</span>
 };
 
 struct core_thread {
<span class="p_header">diff --git a/mm/memory.c b/mm/memory.c</span>
<span class="p_header">index 441c0e3f3a0f..0f7fbee554c4 100644</span>
<span class="p_header">--- a/mm/memory.c</span>
<span class="p_header">+++ b/mm/memory.c</span>
<span class="p_chunk">@@ -1286,6 +1286,7 @@</span> <span class="p_context"> void unmap_page_range(struct mmu_gather *tlb,</span>
 	unsigned long next;
 
 	BUG_ON(addr &gt;= end);
<span class="p_add">+	write_seqcount_begin(&amp;vma-&gt;vm_sequence);</span>
 	tlb_start_vma(tlb, vma);
 	pgd = pgd_offset(vma-&gt;vm_mm, addr);
 	do {
<span class="p_chunk">@@ -1295,6 +1296,7 @@</span> <span class="p_context"> void unmap_page_range(struct mmu_gather *tlb,</span>
 		next = zap_pud_range(tlb, vma, pgd, addr, next, details);
 	} while (pgd++, addr = next, addr != end);
 	tlb_end_vma(tlb, vma);
<span class="p_add">+	write_seqcount_end(&amp;vma-&gt;vm_sequence);</span>
 }
 
 
<span class="p_header">diff --git a/mm/mmap.c b/mm/mmap.c</span>
<span class="p_header">index dc4291dcc99b..cb41659bc9f9 100644</span>
<span class="p_header">--- a/mm/mmap.c</span>
<span class="p_header">+++ b/mm/mmap.c</span>
<span class="p_chunk">@@ -541,6 +541,8 @@</span> <span class="p_context"> void __vma_link_rb(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 	else
 		mm-&gt;highest_vm_end = vma-&gt;vm_end;
 
<span class="p_add">+	seqcount_init(&amp;vma-&gt;vm_sequence);</span>
<span class="p_add">+</span>
 	/*
 	 * vma-&gt;vm_prev wasn&#39;t known when we followed the rbtree to find the
 	 * correct insertion point for that vma. As a result, we could not
<span class="p_chunk">@@ -675,6 +677,10 @@</span> <span class="p_context"> int __vma_adjust(struct vm_area_struct *vma, unsigned long start,</span>
 	long adjust_next = 0;
 	int remove_next = 0;
 
<span class="p_add">+	write_seqcount_begin(&amp;vma-&gt;vm_sequence);</span>
<span class="p_add">+	if (next)</span>
<span class="p_add">+		write_seqcount_begin_nested(&amp;next-&gt;vm_sequence, SINGLE_DEPTH_NESTING);</span>
<span class="p_add">+</span>
 	if (next &amp;&amp; !insert) {
 		struct vm_area_struct *exporter = NULL, *importer = NULL;
 
<span class="p_chunk">@@ -886,6 +892,7 @@</span> <span class="p_context"> int __vma_adjust(struct vm_area_struct *vma, unsigned long start,</span>
 		mm-&gt;map_count--;
 		mpol_put(vma_policy(next));
 		kmem_cache_free(vm_area_cachep, next);
<span class="p_add">+		write_seqcount_end(&amp;next-&gt;vm_sequence);</span>
 		/*
 		 * In mprotect&#39;s case 6 (see comments on vma_merge),
 		 * we must remove another next too. It would clutter
<span class="p_chunk">@@ -899,6 +906,8 @@</span> <span class="p_context"> int __vma_adjust(struct vm_area_struct *vma, unsigned long start,</span>
 			 * &quot;vma-&gt;vm_next&quot; gap must be updated.
 			 */
 			next = vma-&gt;vm_next;
<span class="p_add">+			if (next)</span>
<span class="p_add">+				write_seqcount_begin_nested(&amp;next-&gt;vm_sequence, SINGLE_DEPTH_NESTING);</span>
 		} else {
 			/*
 			 * For the scope of the comment &quot;next&quot; and
<span class="p_chunk">@@ -945,6 +954,10 @@</span> <span class="p_context"> int __vma_adjust(struct vm_area_struct *vma, unsigned long start,</span>
 	if (insert &amp;&amp; file)
 		uprobe_mmap(insert);
 
<span class="p_add">+	if (next)</span>
<span class="p_add">+		write_seqcount_end(&amp;next-&gt;vm_sequence);</span>
<span class="p_add">+	write_seqcount_end(&amp;vma-&gt;vm_sequence);</span>
<span class="p_add">+</span>
 	validate_mm(mm);
 
 	return 0;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



