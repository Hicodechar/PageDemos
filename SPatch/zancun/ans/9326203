
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/2] mm: split gfp_mask and mapping flags into separate fields - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/2] mm: split gfp_mask and mapping flags into separate fields</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=137061">Michal Hocko</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 12, 2016, 11:16 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20160912111608.2588-3-mhocko@kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9326203/mbox/"
   >mbox</a>
|
   <a href="/patch/9326203/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9326203/">/patch/9326203/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	36A2E6077F for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 12 Sep 2016 11:17:11 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 2664D28D16
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 12 Sep 2016 11:17:11 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 1988928D19; Mon, 12 Sep 2016 11:17:11 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7023F28D16
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 12 Sep 2016 11:17:10 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1757986AbcILLRB (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 12 Sep 2016 07:17:01 -0400
Received: from mail-wm0-f65.google.com ([74.125.82.65]:35454 &quot;EHLO
	mail-wm0-f65.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1755843AbcILLQ1 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 12 Sep 2016 07:16:27 -0400
Received: by mail-wm0-f65.google.com with SMTP id a6so13115102wmc.2
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Mon, 12 Sep 2016 04:16:26 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20130820;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=Bv4aApwu7ka3G3m1X4gvO0BjD+CthLYXnU09jSVBetk=;
	b=B3bOBSS1aPZoJDbL0R1P7UTnx63l6cPSXmGxdHj1wbhT0RrxA4IP7IAGd0w6BGNYRr
	z1FqHi3xtFvKjIgeBIRGqXsbRej8P5qABC09sOXC4RVaGkJ1uFxckEQPf2hOlGw1tpX5
	UdfUyhffest0jeq2ivkyavVIrKJ5o4+gkSpKp/KVD9kFm/KXpXuVnxDW61g28crUKNK4
	5/AN5wCoQHnyOSwEJ4X5j5luw2FsaHiaqt0+sAupZzOkBO420HA3UTUglVS2Yf9w1nmf
	r+uoIIbk3J6ptRaGrf38pkQ+UGrSevxB6IjHq+PNkEnjkWuyAZeRllAstgN2s7zQLtzI
	DmZA==
X-Gm-Message-State: AE9vXwM7kbzv/W6xNn0OB4aHp8zf0CIIjq7LAsSZs6q5J1MLghdbFlOdPWisHXV3XV8PVA==
X-Received: by 10.194.200.198 with SMTP id
	ju6mr14465533wjc.184.1473678986130; 
	Mon, 12 Sep 2016 04:16:26 -0700 (PDT)
Received: from tiehlicka.suse.cz ([80.188.202.66])
	by smtp.gmail.com with ESMTPSA id
	bk7sm17395385wjc.36.2016.09.12.04.16.25
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Mon, 12 Sep 2016 04:16:25 -0700 (PDT)
From: Michal Hocko &lt;mhocko@kernel.org&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: &lt;linux-mm@kvack.org&gt;, LKML &lt;linux-kernel@vger.kernel.org&gt;,
	Michal Hocko &lt;mhocko@suse.com&gt;
Subject: [PATCH 2/2] mm: split gfp_mask and mapping flags into separate
	fields
Date: Mon, 12 Sep 2016 13:16:08 +0200
Message-Id: &lt;20160912111608.2588-3-mhocko@kernel.org&gt;
X-Mailer: git-send-email 2.9.3
In-Reply-To: &lt;20160912111608.2588-1-mhocko@kernel.org&gt;
References: &lt;20160901091347.GC12147@dhcp22.suse.cz&gt;
	&lt;20160912111608.2588-1-mhocko@kernel.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137061">Michal Hocko</a> - Sept. 12, 2016, 11:16 a.m.</div>
<pre class="content">
<span class="from">From: Michal Hocko &lt;mhocko@suse.com&gt;</span>

mapping-&gt;flags currently encodes two different things into a single
flag. It contains sticky gfp_mask for page cache allocations and AS_
codes used to report errors/enospace and other states which are mapping
specific. Condensing the two semantically unrelated things saves few
bytes but it also complicates other things. For one thing the gfp flags
space is reduced and in fact we are already running out of available
bits. It can be assumed that more gfp flags will be necessary later on.

To not introduce the address_space grow (at least on x86_64) we can
stick it right after private_lock because we have a hole there.

struct address_space {
        struct inode *             host;                 /*     0     8 */
        struct radix_tree_root     page_tree;            /*     8    16 */
        spinlock_t                 tree_lock;            /*    24     4 */
        atomic_t                   i_mmap_writable;      /*    28     4 */
        struct rb_root             i_mmap;               /*    32     8 */
        struct rw_semaphore        i_mmap_rwsem;         /*    40    40 */
        /* --- cacheline 1 boundary (64 bytes) was 16 bytes ago --- */
        long unsigned int          nrpages;              /*    80     8 */
        long unsigned int          nrexceptional;        /*    88     8 */
        long unsigned int          writeback_index;      /*    96     8 */
        const struct address_space_operations  * a_ops;  /*   104     8 */
        long unsigned int          flags;                /*   112     8 */
        spinlock_t                 private_lock;         /*   120     4 */

        /* XXX 4 bytes hole, try to pack */

        /* --- cacheline 2 boundary (128 bytes) --- */
        struct list_head           private_list;         /*   128    16 */
        void *                     private_data;         /*   144     8 */

        /* size: 152, cachelines: 3, members: 14 */
        /* sum members: 148, holes: 1, sum holes: 4 */
        /* last cacheline: 24 bytes */
};
<span class="signed-off-by">
Signed-off-by: Michal Hocko &lt;mhocko@suse.com&gt;</span>
---
 include/linux/fs.h      |  3 ++-
 include/linux/pagemap.h | 20 +++++++++-----------
 2 files changed, 11 insertions(+), 12 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/linux/fs.h b/include/linux/fs.h</span>
<span class="p_header">index cd8a5e1d5580..41d7213946af 100644</span>
<span class="p_header">--- a/include/linux/fs.h</span>
<span class="p_header">+++ b/include/linux/fs.h</span>
<span class="p_chunk">@@ -443,7 +443,8 @@</span> <span class="p_context"> struct address_space {</span>
 	unsigned long		nrexceptional;
 	pgoff_t			writeback_index;/* writeback starts here */
 	const struct address_space_operations *a_ops;	/* methods */
<span class="p_del">-	unsigned long		flags;		/* error bits/gfp mask */</span>
<span class="p_add">+	unsigned long		flags;		/* error bits */</span>
<span class="p_add">+	gfp_t			gfp_mask;	/* implicit gfp mask for allocations */</span>
 	spinlock_t		private_lock;	/* for use by the address_space */
 	struct list_head	private_list;	/* ditto */
 	void			*private_data;	/* ditto */
<span class="p_header">diff --git a/include/linux/pagemap.h b/include/linux/pagemap.h</span>
<span class="p_header">index 76f151ab4f62..0385a954465c 100644</span>
<span class="p_header">--- a/include/linux/pagemap.h</span>
<span class="p_header">+++ b/include/linux/pagemap.h</span>
<span class="p_chunk">@@ -16,17 +16,16 @@</span> <span class="p_context"></span>
 #include &lt;linux/hugetlb_inline.h&gt;
 
 /*
<span class="p_del">- * Bits in mapping-&gt;flags.  The lower __GFP_BITS_SHIFT bits are the page</span>
<span class="p_del">- * allocation mode flags.</span>
<span class="p_add">+ * Bits in mapping-&gt;flags.</span>
  */
 enum mapping_flags {
<span class="p_del">-	AS_EIO		= __GFP_BITS_SHIFT + 0,	/* IO error on async write */</span>
<span class="p_del">-	AS_ENOSPC	= __GFP_BITS_SHIFT + 1,	/* ENOSPC on async write */</span>
<span class="p_del">-	AS_MM_ALL_LOCKS	= __GFP_BITS_SHIFT + 2,	/* under mm_take_all_locks() */</span>
<span class="p_del">-	AS_UNEVICTABLE	= __GFP_BITS_SHIFT + 3,	/* e.g., ramdisk, SHM_LOCK */</span>
<span class="p_del">-	AS_EXITING	= __GFP_BITS_SHIFT + 4, /* final truncate in progress */</span>
<span class="p_add">+	AS_EIO		= 0,	/* IO error on async write */</span>
<span class="p_add">+	AS_ENOSPC	= 1,	/* ENOSPC on async write */</span>
<span class="p_add">+	AS_MM_ALL_LOCKS	= 2,	/* under mm_take_all_locks() */</span>
<span class="p_add">+	AS_UNEVICTABLE	= 3,	/* e.g., ramdisk, SHM_LOCK */</span>
<span class="p_add">+	AS_EXITING	= 4, 	/* final truncate in progress */</span>
 	/* writeback related tags are not used */
<span class="p_del">-	AS_NO_WRITEBACK_TAGS = __GFP_BITS_SHIFT + 5,</span>
<span class="p_add">+	AS_NO_WRITEBACK_TAGS = 5,</span>
 
 	AS_LAST_FLAG,
 };
<span class="p_chunk">@@ -80,7 +79,7 @@</span> <span class="p_context"> static inline int mapping_use_writeback_tags(struct address_space *mapping)</span>
 
 static inline gfp_t mapping_gfp_mask(struct address_space * mapping)
 {
<span class="p_del">-	return (__force gfp_t)mapping-&gt;flags &amp; __GFP_BITS_MASK;</span>
<span class="p_add">+	return mapping-&gt;gfp_mask;</span>
 }
 
 /* Restricts the given gfp_mask to what the mapping allows. */
<span class="p_chunk">@@ -96,8 +95,7 @@</span> <span class="p_context"> static inline gfp_t mapping_gfp_constraint(struct address_space *mapping,</span>
  */
 static inline void mapping_set_gfp_mask(struct address_space *m, gfp_t mask)
 {
<span class="p_del">-	m-&gt;flags = (m-&gt;flags &amp; ~(__force unsigned long)__GFP_BITS_MASK) |</span>
<span class="p_del">-				(__force unsigned long)mask;</span>
<span class="p_add">+	m-&gt;gfp_mask = mask;</span>
 }
 
 void release_pages(struct page **pages, int nr, bool cold);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



