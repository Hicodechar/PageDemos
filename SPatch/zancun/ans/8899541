
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[PATCHv2,4/5] x86/efi: move to generic {__,}efi_call_virt - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [PATCHv2,4/5] x86/efi: move to generic {__,}efi_call_virt</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=30282">Mark Rutland</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>April 21, 2016, 11:35 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1461238529-12810-5-git-send-email-mark.rutland@arm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8899541/mbox/"
   >mbox</a>
|
   <a href="/patch/8899541/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8899541/">/patch/8899541/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 51B01BF29F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 21 Apr 2016 11:36:42 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id A53462025A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 21 Apr 2016 11:36:41 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id E1D6620211
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 21 Apr 2016 11:36:40 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752690AbcDULgV (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 21 Apr 2016 07:36:21 -0400
Received: from foss.arm.com ([217.140.101.70]:54479 &quot;EHLO foss.arm.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752611AbcDULgN (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 21 Apr 2016 07:36:13 -0400
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
	by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 9176D524;
	Thu, 21 Apr 2016 04:34:55 -0700 (PDT)
Received: from leverpostej.cambridge.arm.com
	(usa-sjc-imap-foss1.foss.arm.com [10.72.51.249])
	by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id
	AE09D3F218; Thu, 21 Apr 2016 04:36:10 -0700 (PDT)
From: Mark Rutland &lt;mark.rutland@arm.com&gt;
To: linux-efi@vger.kernel.org
Cc: ard.biesheuvel@linaro.org, catalin.marinas@arm.com, hpa@zytor.com,
	leif.lindholm@linaro.org, linux@arm.linux.org.uk,
	mark.rutland@arm.com, matt@codeblueprint.co.uk, mingo@redhat.com,
	tglx@linutronix.de, will.deacon@arm.com, linux-kernel@vger.kernel.org
Subject: [PATCHv2 4/5] x86/efi: move to generic {__,}efi_call_virt
Date: Thu, 21 Apr 2016 12:35:28 +0100
Message-Id: &lt;1461238529-12810-5-git-send-email-mark.rutland@arm.com&gt;
X-Mailer: git-send-email 1.9.1
In-Reply-To: &lt;1461238529-12810-1-git-send-email-mark.rutland@arm.com&gt;
References: &lt;1461238529-12810-1-git-send-email-mark.rutland@arm.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=30282">Mark Rutland</a> - April 21, 2016, 11:35 a.m.</div>
<pre class="content">
Now there&#39;s a common template for {__,}efi_call_virt, remove the
duplicate logic from the x86 efi code.
<span class="signed-off-by">
Signed-off-by: Mark Rutland &lt;mark.rutland@arm.com&gt;</span>
Cc: &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;
Cc: Ingo Molnar &lt;mingo@redhat.com&gt;
Cc: Matt Fleming &lt;matt@codeblueprint.co.uk&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Cc: linux-efi@vger.kernel.org
Cc: linux-kernel@vger.kernel.org
---
 arch/x86/include/asm/efi.h | 41 ++++++++++++-----------------------------
 1 file changed, 12 insertions(+), 29 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/efi.h b/arch/x86/include/asm/efi.h</span>
<span class="p_header">index 53748c4..cf79c8f 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/efi.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/efi.h</span>
<span class="p_chunk">@@ -33,28 +33,16 @@</span> <span class="p_context"></span>
 
 extern unsigned long asmlinkage efi_call_phys(void *, ...);
 
<span class="p_add">+#define arch_efi_call_virt_setup()	kernel_fpu_begin()</span>
<span class="p_add">+#define arch_efi_call_virt_teardown()	kernel_fpu_end()</span>
<span class="p_add">+</span>
 /*
  * Wrap all the virtual calls in a way that forces the parameters on the stack.
  */
<span class="p_del">-</span>
<span class="p_del">-/* Use this macro if your virtual returns a non-void value */</span>
<span class="p_del">-#define efi_call_virt(f, args...) \</span>
<span class="p_del">-({									\</span>
<span class="p_del">-	efi_status_t __s;						\</span>
<span class="p_del">-	kernel_fpu_begin();						\</span>
<span class="p_del">-	__s = ((efi_##f##_t __attribute__((regparm(0)))*)		\</span>
<span class="p_del">-		efi.systab-&gt;runtime-&gt;f)(args);				\</span>
<span class="p_del">-	kernel_fpu_end();						\</span>
<span class="p_del">-	__s;								\</span>
<span class="p_del">-})</span>
<span class="p_del">-</span>
<span class="p_del">-/* Use this macro if your virtual call does not return any value */</span>
<span class="p_del">-#define __efi_call_virt(f, args...) \</span>
<span class="p_add">+#define arch_efi_call_virt(f, args...)					\</span>
 ({									\
<span class="p_del">-	kernel_fpu_begin();						\</span>
 	((efi_##f##_t __attribute__((regparm(0)))*)			\
 		efi.systab-&gt;runtime-&gt;f)(args);				\
<span class="p_del">-	kernel_fpu_end();						\</span>
 })
 
 #define efi_ioremap(addr, size, type, attr)	ioremap_cache(addr, size)
<span class="p_chunk">@@ -78,10 +66,8 @@</span> <span class="p_context"> struct efi_scratch {</span>
 	u64	phys_stack;
 } __packed;
 
<span class="p_del">-#define efi_call_virt(f, ...)						\</span>
<span class="p_add">+#define arch_efi_call_virt_setup()					\</span>
 ({									\
<span class="p_del">-	efi_status_t __s;						\</span>
<span class="p_del">-									\</span>
 	efi_sync_low_kernel_mappings();					\
 	preempt_disable();						\
 	__kernel_fpu_begin();						\
<span class="p_chunk">@@ -91,9 +77,13 @@</span> <span class="p_context"> struct efi_scratch {</span>
 		write_cr3((unsigned long)efi_scratch.efi_pgt);		\
 		__flush_tlb_all();					\
 	}								\
<span class="p_del">-									\</span>
<span class="p_del">-	__s = efi_call((void *)efi.systab-&gt;runtime-&gt;f, __VA_ARGS__);	\</span>
<span class="p_del">-									\</span>
<span class="p_add">+})</span>
<span class="p_add">+</span>
<span class="p_add">+#define arch_efi_call_virt(f, args...)					\</span>
<span class="p_add">+	efi_call((void *)efi.systab-&gt;runtime-&gt;f, args);			\</span>
<span class="p_add">+</span>
<span class="p_add">+#define arch_efi_call_virt_teardown()					\</span>
<span class="p_add">+({									\</span>
 	if (efi_scratch.use_pgd) {					\
 		write_cr3(efi_scratch.prev_cr3);			\
 		__flush_tlb_all();					\
<span class="p_chunk">@@ -101,15 +91,8 @@</span> <span class="p_context"> struct efi_scratch {</span>
 									\
 	__kernel_fpu_end();						\
 	preempt_enable();						\
<span class="p_del">-	__s;								\</span>
 })
 
<span class="p_del">-/*</span>
<span class="p_del">- * All X86_64 virt calls return non-void values. Thus, use non-void call for</span>
<span class="p_del">- * virt calls that would be void on X86_32.</span>
<span class="p_del">- */</span>
<span class="p_del">-#define __efi_call_virt(f, args...) efi_call_virt(f, args)</span>
<span class="p_del">-</span>
 extern void __iomem *__init efi_ioremap(unsigned long addr, unsigned long size,
 					u32 type, u64 attribute);
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



