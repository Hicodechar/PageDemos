
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v3,4/5] arm64: Use __tlbi_dsb() macros in KVM code - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v3,4/5] arm64: Use __tlbi_dsb() macros in KVM code</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=41311">Christopher Covington</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 11, 2017, 2:41 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170111144118.17062-4-cov@codeaurora.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9510201/mbox/"
   >mbox</a>
|
   <a href="/patch/9510201/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9510201/">/patch/9510201/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	9E7DE6077E for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 11 Jan 2017 14:42:39 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 941E128119
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 11 Jan 2017 14:42:39 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 87F912853A; Wed, 11 Jan 2017 14:42:39 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id EF19028577
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 11 Jan 2017 14:42:38 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S967511AbdAKOmb (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 11 Jan 2017 09:42:31 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:39908 &quot;EHLO
	smtp.codeaurora.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S967416AbdAKOln (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 11 Jan 2017 09:41:43 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
	id 57DD461514; Wed, 11 Jan 2017 14:41:42 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
	s=default; t=1484145702;
	bh=VFA6tAR9aspBvn7Cg25Ddxwa3b4GnElwa7iNeD9awlc=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=fXLNndi/QhDc0v/xVEfDXNx0wfreAr2CrG/Hxv9e9zXptxyuizWf5TcUdeYDfd1st
	qCB1xDUohJoUhQyrSZ5t5kAqVnIq9U6m3bOzHNjVPAHZWG9ulqJpI63GTHLsLg4Kp/
	Jgu9FeYNhXpZ9mJ6wy8TM7JBXht34vMSniJVj+1E=
Received: from illium.qualcomm.com (global_nat1_iad_fw.qualcomm.com
	[129.46.232.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
	(No client certificate requested)
	(Authenticated sender: cov@smtp.codeaurora.org)
	by smtp.codeaurora.org (Postfix) with ESMTPSA id 0489161514;
	Wed, 11 Jan 2017 14:41:39 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
	s=default; t=1484145701;
	bh=VFA6tAR9aspBvn7Cg25Ddxwa3b4GnElwa7iNeD9awlc=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=MFklfmncVk+isuuBRGsIRU8w846KHJZxh1/dUHIvSd5fQ+Hi9uFPpgYu4bCUOc4SV
	eNZoCAuf1w2eJTjsDv5VqLmobrNyb2zIVtlZj3EcuEZ9Wn4xcS8xwILDU3WxX8pob2
	xKzDgCnPkehj0FrXsW8eBM9AbrVyMwKi4BjP9Deo=
DMARC-Filter: OpenDMARC Filter v1.3.1 smtp.codeaurora.org 0489161514
Authentication-Results: pdx-caf-mail.web.codeaurora.org;
	dmarc=none header.from=codeaurora.org
Authentication-Results: pdx-caf-mail.web.codeaurora.org;
	spf=pass smtp.mailfrom=cov@codeaurora.org
From: Christopher Covington &lt;cov@codeaurora.org&gt;
To: Paolo Bonzini &lt;pbonzini@redhat.com&gt;,
	=?UTF-8?q?Radim=20Kr=C4=8Dm=C3=A1=C5=99?= &lt;rkrcmar@redhat.com&gt;,
	Christoffer Dall &lt;christoffer.dall@linaro.org&gt;,
	Marc Zyngier &lt;marc.zyngier@arm.com&gt;,
	Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	Will Deacon &lt;will.deacon@arm.com&gt;, kvm@vger.kernel.org,
	linux-arm-kernel@lists.infradead.org, kvmarm@lists.cs.columbia.edu,
	linux-kernel@vger.kernel.org, shankerd@codeaurora.org,
	timur@codeaurora.org
Cc: Mark Langsdorf &lt;mlangsdo@redhat.com&gt;,
	Mark Salter &lt;msalter@redhat.com&gt;, Jon Masters &lt;jcm@redhat.com&gt;,
	Christopher Covington &lt;cov@codeaurora.org&gt;
Subject: [PATCH v3 4/5] arm64: Use __tlbi_dsb() macros in KVM code
Date: Wed, 11 Jan 2017 09:41:17 -0500
Message-Id: &lt;20170111144118.17062-4-cov@codeaurora.org&gt;
X-Mailer: git-send-email 2.9.3
In-Reply-To: &lt;20170111144118.17062-1-cov@codeaurora.org&gt;
References: &lt;20170111144118.17062-1-cov@codeaurora.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41311">Christopher Covington</a> - Jan. 11, 2017, 2:41 p.m.</div>
<pre class="content">
Refactor the KVM code to use the newly introduced __tlbi_dsb macros, which
will allow an errata workaround that repeats tlbi dsb sequences to only
change one location. This is not intended to change the generated assembly
and comparing before and after vmlinux objdump shows no functional changes.
<span class="signed-off-by">
Signed-off-by: Christopher Covington &lt;cov@codeaurora.org&gt;</span>
---
 arch/arm64/kvm/hyp/tlb.c | 29 +++++++++++------------------
 1 file changed, 11 insertions(+), 18 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/kvm/hyp/tlb.c b/arch/arm64/kvm/hyp/tlb.c</span>
<span class="p_header">index 88e2f2b..9669e4b 100644</span>
<span class="p_header">--- a/arch/arm64/kvm/hyp/tlb.c</span>
<span class="p_header">+++ b/arch/arm64/kvm/hyp/tlb.c</span>
<span class="p_chunk">@@ -16,6 +16,7 @@</span> <span class="p_context"></span>
  */
 
 #include &lt;asm/kvm_hyp.h&gt;
<span class="p_add">+#include &lt;asm/tlbflush.h&gt;</span>
 
 void __hyp_text __kvm_tlb_flush_vmid_ipa(struct kvm *kvm, phys_addr_t ipa)
 {
<span class="p_chunk">@@ -30,19 +31,15 @@</span> <span class="p_context"> void __hyp_text __kvm_tlb_flush_vmid_ipa(struct kvm *kvm, phys_addr_t ipa)</span>
 	 * We could do so much better if we had the VA as well.
 	 * Instead, we invalidate Stage-2 for this IPA, and the
 	 * whole of Stage-1. Weep...
<span class="p_add">+	 *</span>
<span class="p_add">+	 * We have to ensure completion of the invalidation at Stage-2 with a</span>
<span class="p_add">+	 * DSB, since a table walk on another CPU could refill a TLB with a</span>
<span class="p_add">+	 * complete (S1 + S2) walk based on the old Stage-2 mapping if the</span>
<span class="p_add">+	 * Stage-1 invalidation happened first.</span>
 	 */
 	ipa &gt;&gt;= 12;
<span class="p_del">-	asm volatile(&quot;tlbi ipas2e1is, %0&quot; : : &quot;r&quot; (ipa));</span>
<span class="p_del">-</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * We have to ensure completion of the invalidation at Stage-2,</span>
<span class="p_del">-	 * since a table walk on another CPU could refill a TLB with a</span>
<span class="p_del">-	 * complete (S1 + S2) walk based on the old Stage-2 mapping if</span>
<span class="p_del">-	 * the Stage-1 invalidation happened first.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	dsb(ish);</span>
<span class="p_del">-	asm volatile(&quot;tlbi vmalle1is&quot; : : );</span>
<span class="p_del">-	dsb(ish);</span>
<span class="p_add">+	__tlbi_dsb(ipas2e1is, ish, ipa);</span>
<span class="p_add">+	__tlbi_dsb(vmalle1is, ish);</span>
 	isb();
 
 	write_sysreg(0, vttbr_el2);
<span class="p_chunk">@@ -57,8 +54,7 @@</span> <span class="p_context"> void __hyp_text __kvm_tlb_flush_vmid(struct kvm *kvm)</span>
 	write_sysreg(kvm-&gt;arch.vttbr, vttbr_el2);
 	isb();
 
<span class="p_del">-	asm volatile(&quot;tlbi vmalls12e1is&quot; : : );</span>
<span class="p_del">-	dsb(ish);</span>
<span class="p_add">+	__tlbi_dsb(vmalls12e1is, ish);</span>
 	isb();
 
 	write_sysreg(0, vttbr_el2);
<span class="p_chunk">@@ -72,8 +68,7 @@</span> <span class="p_context"> void __hyp_text __kvm_tlb_flush_local_vmid(struct kvm_vcpu *vcpu)</span>
 	write_sysreg(kvm-&gt;arch.vttbr, vttbr_el2);
 	isb();
 
<span class="p_del">-	asm volatile(&quot;tlbi vmalle1&quot; : : );</span>
<span class="p_del">-	dsb(nsh);</span>
<span class="p_add">+	__tlbi_dsb(vmalle1, nsh);</span>
 	isb();
 
 	write_sysreg(0, vttbr_el2);
<span class="p_chunk">@@ -82,7 +77,5 @@</span> <span class="p_context"> void __hyp_text __kvm_tlb_flush_local_vmid(struct kvm_vcpu *vcpu)</span>
 void __hyp_text __kvm_flush_vm_context(void)
 {
 	dsb(ishst);
<span class="p_del">-	asm volatile(&quot;tlbi alle1is	\n&quot;</span>
<span class="p_del">-		     &quot;ic ialluis	  &quot;: : );</span>
<span class="p_del">-	dsb(ish);</span>
<span class="p_add">+	__tlbi_asm_dsb(&quot;ic ialluis&quot;, alle1is, ish);</span>
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



