
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[1/2] x86/kasan: clear kasan_zero_page after TLB flush - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [1/2] x86/kasan: clear kasan_zero_page after TLB flush</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=141821">Andrey Ryabinin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 11, 2016, 12:51 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1452516679-32040-2-git-send-email-aryabinin@virtuozzo.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8003091/mbox/"
   >mbox</a>
|
   <a href="/patch/8003091/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8003091/">/patch/8003091/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 31ECD9F1C0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 11 Jan 2016 12:51:02 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 87DE220303
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 11 Jan 2016 12:51:01 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 44B2A202FE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 11 Jan 2016 12:50:57 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932728AbcAKMuw (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 11 Jan 2016 07:50:52 -0500
Received: from relay.parallels.com ([195.214.232.42]:55102 &quot;EHLO
	relay.parallels.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1757478AbcAKMut (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 11 Jan 2016 07:50:49 -0500
Received: from [10.67.48.55] (helo=mail.parallels.net)
	by relay.parallels.com with esmtps
	(TLSv1.2:ECDHE-RSA-AES256-SHA384:256) (Exim 4.86)
	(envelope-from &lt;aryabinin@virtuozzo.com&gt;)
	id 1aIbvq-0004Us-CS; Mon, 11 Jan 2016 15:50:46 +0300
Received: from localhost.sw.ru (10.30.25.228) by MSK-EXCH1.sw.swsoft.com
	(10.67.48.55) with Microsoft SMTP Server (TLS) id 15.0.1130.7;
	Mon, 11 Jan 2016 13:50:36 +0100
From: Andrey Ryabinin &lt;aryabinin@virtuozzo.com&gt;
To: Borislav Petkov &lt;bp@alien8.de&gt;, Andy Lutomirski &lt;luto@kernel.org&gt;,
	&lt;x86@kernel.org&gt;, Thomas Gleixner &lt;tglx@linutronix.de&gt;,
	Ingo Molnar &lt;mingo@redhat.com&gt;, &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;
CC: Brian Gerst &lt;brgerst@gmail.com&gt;,
	Dave Hansen &lt;dave.hansen@linux.intel.com&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Oleg Nesterov &lt;oleg@redhat.com&gt;, &lt;linux-mm@kvack.org&gt;,
	&lt;linux-kernel@vger.kernel.org&gt;, Andrey Ryabinin &lt;aryabinin@virtuozzo.com&gt;
Subject: [PATCH 1/2] x86/kasan: clear kasan_zero_page after TLB flush
Date: Mon, 11 Jan 2016 15:51:18 +0300
Message-ID: &lt;1452516679-32040-2-git-send-email-aryabinin@virtuozzo.com&gt;
X-Mailer: git-send-email 2.4.10
In-Reply-To: &lt;1452516679-32040-1-git-send-email-aryabinin@virtuozzo.com&gt;
References: &lt;20160110185916.GD22896@pd.tnic&gt;
	&lt;1452516679-32040-1-git-send-email-aryabinin@virtuozzo.com&gt;
MIME-Version: 1.0
Content-Type: text/plain
X-ClientProxiedBy: US-EXCH.sw.swsoft.com (10.255.249.47) To
	MSK-EXCH1.sw.swsoft.com (10.67.48.55)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=141821">Andrey Ryabinin</a> - Jan. 11, 2016, 12:51 p.m.</div>
<pre class="content">
Currently we clear kasan_zero_page before __flush_tlb_all(). This
works with current implementation of native_flush_tlb[_global]()
because it doesn&#39;t cause do any writes to kasan shadow memory.
But any subtle change made in native_flush_tlb*() could break this.
Also current code seems doesn&#39;t work for paravirt guests (lguest).

Only after the TLB flush we can be sure that kasan_zero_page is not
used as early shadow anymore (instrumented code will not write to it).
So it should cleared it only after the TLB flush.
<span class="signed-off-by">
Signed-off-by: Andrey Ryabinin &lt;aryabinin@virtuozzo.com&gt;</span>
---
 arch/x86/mm/kasan_init_64.c | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41531">Andy Lutomirski</a> - Jan. 18, 2016, 10:24 p.m.</div>
<pre class="content">
On Mon, Jan 11, 2016 at 4:51 AM, Andrey Ryabinin
&lt;aryabinin@virtuozzo.com&gt; wrote:
<span class="quote">&gt; Currently we clear kasan_zero_page before __flush_tlb_all(). This</span>
<span class="quote">&gt; works with current implementation of native_flush_tlb[_global]()</span>
<span class="quote">&gt; because it doesn&#39;t cause do any writes to kasan shadow memory.</span>
<span class="quote">&gt; But any subtle change made in native_flush_tlb*() could break this.</span>
<span class="quote">&gt; Also current code seems doesn&#39;t work for paravirt guests (lguest).</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Only after the TLB flush we can be sure that kasan_zero_page is not</span>
<span class="quote">&gt; used as early shadow anymore (instrumented code will not write to it).</span>
<span class="quote">&gt; So it should cleared it only after the TLB flush.</span>

This seems to fix the issue with my patch set.  Thanks.
<span class="tested-by">
Tested-by: Andy Lutomirski &lt;luto@kernel.org&gt;</span>

--Andy
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/mm/kasan_init_64.c b/arch/x86/mm/kasan_init_64.c</span>
<span class="p_header">index d470cf2..303e470 100644</span>
<span class="p_header">--- a/arch/x86/mm/kasan_init_64.c</span>
<span class="p_header">+++ b/arch/x86/mm/kasan_init_64.c</span>
<span class="p_chunk">@@ -120,11 +120,16 @@</span> <span class="p_context"> void __init kasan_init(void)</span>
 	kasan_populate_zero_shadow(kasan_mem_to_shadow((void *)MODULES_END),
 			(void *)KASAN_SHADOW_END);
 
<span class="p_del">-	memset(kasan_zero_page, 0, PAGE_SIZE);</span>
<span class="p_del">-</span>
 	load_cr3(init_level4_pgt);
 	__flush_tlb_all();
<span class="p_del">-	init_task.kasan_depth = 0;</span>
 
<span class="p_add">+	/*</span>
<span class="p_add">+	 * kasan_zero_page has been used as early shadow memory, thus it may</span>
<span class="p_add">+	 * contain some garbage. Now we can clear it, since after the TLB flush</span>
<span class="p_add">+	 * no one should write to it.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	memset(kasan_zero_page, 0, PAGE_SIZE);</span>
<span class="p_add">+</span>
<span class="p_add">+	init_task.kasan_depth = 0;</span>
 	pr_info(&quot;KernelAddressSanitizer initialized\n&quot;);
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



