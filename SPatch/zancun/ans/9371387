
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,3/5] mm/hugetlb: add tlb_remove_hugetlb_entry for handling hugetlb pages - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,3/5] mm/hugetlb: add tlb_remove_hugetlb_entry for handling hugetlb pages</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=1141">Aneesh Kumar K.V</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 11, 2016, 5:31 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161011173121.17545-3-aneesh.kumar@linux.vnet.ibm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9371387/mbox/"
   >mbox</a>
|
   <a href="/patch/9371387/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9371387/">/patch/9371387/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	E96C260865 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 11 Oct 2016 17:32:10 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id DCA7128D9B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 11 Oct 2016 17:32:10 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D0F5028F5B; Tue, 11 Oct 2016 17:32:10 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6585628E14
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 11 Oct 2016 17:32:10 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754236AbcJKRbz (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 11 Oct 2016 13:31:55 -0400
Received: from mx0a-001b2d01.pphosted.com ([148.163.156.1]:46532 &quot;EHLO
	mx0a-001b2d01.pphosted.com&quot; rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1754164AbcJKRbu (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 11 Oct 2016 13:31:50 -0400
Received: from pps.filterd (m0098396.ppops.net [127.0.0.1])
	by mx0a-001b2d01.pphosted.com (8.16.0.17/8.16.0.17) with SMTP id
	u9BHUsRR121222
	for &lt;linux-kernel@vger.kernel.org&gt;; Tue, 11 Oct 2016 13:31:50 -0400
Received: from e32.co.us.ibm.com (e32.co.us.ibm.com [32.97.110.150])
	by mx0a-001b2d01.pphosted.com with ESMTP id 26115ut14n-1
	(version=TLSv1.2 cipher=AES256-SHA bits=256 verify=NOT)
	for &lt;linux-kernel@vger.kernel.org&gt;; Tue, 11 Oct 2016 13:31:49 -0400
Received: from localhost
	by e32.co.us.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use
	Only! Violators will be prosecuted
	for &lt;linux-kernel@vger.kernel.org&gt; from
	&lt;aneesh.kumar@linux.vnet.ibm.com&gt;; Tue, 11 Oct 2016 11:31:48 -0600
Received: from d03dlp01.boulder.ibm.com (9.17.202.177)
	by e32.co.us.ibm.com (192.168.1.132) with IBM ESMTP SMTP Gateway:
	Authorized Use Only! Violators will be prosecuted; 
	Tue, 11 Oct 2016 11:31:37 -0600
Received: from b03cxnp07029.gho.boulder.ibm.com
	(b03cxnp07029.gho.boulder.ibm.com [9.17.130.16])
	by d03dlp01.boulder.ibm.com (Postfix) with ESMTP id EA3901FF0027;
	Tue, 11 Oct 2016 11:31:16 -0600 (MDT)
Received: from b03ledav006.gho.boulder.ibm.com
	(b03ledav006.gho.boulder.ibm.com [9.17.130.237])
	by b03cxnp07029.gho.boulder.ibm.com (8.14.9/8.14.9/NCO v10.0) with
	ESMTP id u9BHVaE815073680; Tue, 11 Oct 2016 10:31:36 -0700
Received: from b03ledav006.gho.boulder.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id F042AC603E;
	Tue, 11 Oct 2016 11:31:35 -0600 (MDT)
Received: from skywalker.in.ibm.com (unknown [9.199.57.10])
	by b03ledav006.gho.boulder.ibm.com (Postfix) with ESMTP id 25C47C6051;
	Tue, 11 Oct 2016 11:31:33 -0600 (MDT)
From: &quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;
To: akpm@linux-foundation.org
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
	linuxppc-dev@lists.ozlabs.org,
	&quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;
Subject: [RFC PATCH 3/5] mm/hugetlb: add tlb_remove_hugetlb_entry for
	handling hugetlb pages
Date: Tue, 11 Oct 2016 23:01:19 +0530
X-Mailer: git-send-email 2.10.1
In-Reply-To: &lt;20161011173121.17545-1-aneesh.kumar@linux.vnet.ibm.com&gt;
References: &lt;20161011173121.17545-1-aneesh.kumar@linux.vnet.ibm.com&gt;
X-TM-AS-GCONF: 00
X-Content-Scanned: Fidelis XPS MAILER
x-cbid: 16101117-0004-0000-0000-0000109586F6
X-IBM-SpamModules-Scores: 
X-IBM-SpamModules-Versions: BY=3.00005893; HX=3.00000240; KW=3.00000007;
	PH=3.00000004; SC=3.00000186; SDB=6.00766992; UDB=6.00366927;
	IPR=6.00543135; 
	BA=6.00004801; NDR=6.00000001; ZLA=6.00000005; ZF=6.00000009;
	ZB=6.00000000; 
	ZP=6.00000000; ZH=6.00000000; ZU=6.00000002; MB=3.00012951;
	XFM=3.00000011; UTC=2016-10-11 17:31:47
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 16101117-0005-0000-0000-000079A50303
Message-Id: &lt;20161011173121.17545-3-aneesh.kumar@linux.vnet.ibm.com&gt;
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10432:, ,
	definitions=2016-10-11_09:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
	spamscore=0 suspectscore=3
	malwarescore=0 phishscore=0 adultscore=0 bulkscore=0 classifier=spam
	adjust=0 reason=mlx scancount=1 engine=8.0.1-1609300000
	definitions=main-1610110300
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1141">Aneesh Kumar K.V</a> - Oct. 11, 2016, 5:31 p.m.</div>
<pre class="content">
This add tlb_remove_hugetlb_entry similar to tlb_remove_pmd_tlb_entry.
<span class="signed-off-by">
Signed-off-by: Aneesh Kumar K.V &lt;aneesh.kumar@linux.vnet.ibm.com&gt;</span>
---
 arch/arm/include/asm/tlb.h  | 2 ++
 arch/ia64/include/asm/tlb.h | 3 +++
 arch/s390/include/asm/tlb.h | 2 ++
 arch/sh/include/asm/tlb.h   | 3 +++
 arch/um/include/asm/tlb.h   | 3 +++
 include/asm-generic/tlb.h   | 6 ++++++
 mm/hugetlb.c                | 2 +-
 7 files changed, 20 insertions(+), 1 deletion(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm/include/asm/tlb.h b/arch/arm/include/asm/tlb.h</span>
<span class="p_header">index 1e25cd80589e..82841ba1f51f 100644</span>
<span class="p_header">--- a/arch/arm/include/asm/tlb.h</span>
<span class="p_header">+++ b/arch/arm/include/asm/tlb.h</span>
<span class="p_chunk">@@ -186,6 +186,8 @@</span> <span class="p_context"> tlb_remove_tlb_entry(struct mmu_gather *tlb, pte_t *ptep, unsigned long addr)</span>
 	tlb_add_flush(tlb, addr);
 }
 
<span class="p_add">+#define tlb_remove_huge_tlb_entry(h, tlb, ptep, address)	\</span>
<span class="p_add">+	tlb_remove_tlb_entry(tlb, ptep, address)</span>
 /*
  * In the case of tlb vma handling, we can optimise these away in the
  * case where we&#39;re doing a full MM flush.  When we&#39;re doing a munmap,
<span class="p_header">diff --git a/arch/ia64/include/asm/tlb.h b/arch/ia64/include/asm/tlb.h</span>
<span class="p_header">index 77e541cf0e5d..b3f369ab844d 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/tlb.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/tlb.h</span>
<span class="p_chunk">@@ -283,6 +283,9 @@</span> <span class="p_context"> do {							\</span>
 	__tlb_remove_tlb_entry(tlb, ptep, addr);	\
 } while (0)
 
<span class="p_add">+#define tlb_remove_huge_tlb_entry(h, tlb, ptep, address)	\</span>
<span class="p_add">+	tlb_remove_tlb_entry(tlb, ptep, address)</span>
<span class="p_add">+</span>
 #define pte_free_tlb(tlb, ptep, address)		\
 do {							\
 	tlb-&gt;need_flush = 1;				\
<span class="p_header">diff --git a/arch/s390/include/asm/tlb.h b/arch/s390/include/asm/tlb.h</span>
<span class="p_header">index 15711de10403..094440b59f9e 100644</span>
<span class="p_header">--- a/arch/s390/include/asm/tlb.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/tlb.h</span>
<span class="p_chunk">@@ -162,5 +162,7 @@</span> <span class="p_context"> static inline void pud_free_tlb(struct mmu_gather *tlb, pud_t *pud,</span>
 #define tlb_remove_tlb_entry(tlb, ptep, addr)	do { } while (0)
 #define tlb_remove_pmd_tlb_entry(tlb, pmdp, addr)	do { } while (0)
 #define tlb_migrate_finish(mm)			do { } while (0)
<span class="p_add">+#define tlb_remove_huge_tlb_entry(h, tlb, ptep, address)	\</span>
<span class="p_add">+	tlb_remove_tlb_entry(tlb, ptep, address)</span>
 
 #endif /* _S390_TLB_H */
<span class="p_header">diff --git a/arch/sh/include/asm/tlb.h b/arch/sh/include/asm/tlb.h</span>
<span class="p_header">index 025cdb1032f6..e7d15e8c75c1 100644</span>
<span class="p_header">--- a/arch/sh/include/asm/tlb.h</span>
<span class="p_header">+++ b/arch/sh/include/asm/tlb.h</span>
<span class="p_chunk">@@ -65,6 +65,9 @@</span> <span class="p_context"> tlb_remove_tlb_entry(struct mmu_gather *tlb, pte_t *ptep, unsigned long address)</span>
 		tlb-&gt;end = address + PAGE_SIZE;
 }
 
<span class="p_add">+#define tlb_remove_huge_tlb_entry(h, tlb, ptep, address)	\</span>
<span class="p_add">+	tlb_remove_tlb_entry(tlb, ptep, address)</span>
<span class="p_add">+</span>
 /*
  * In the case of tlb vma handling, we can optimise these away in the
  * case where we&#39;re doing a full MM flush.  When we&#39;re doing a munmap,
<span class="p_header">diff --git a/arch/um/include/asm/tlb.h b/arch/um/include/asm/tlb.h</span>
<span class="p_header">index 821ff0acfe17..a4427029c3c8 100644</span>
<span class="p_header">--- a/arch/um/include/asm/tlb.h</span>
<span class="p_header">+++ b/arch/um/include/asm/tlb.h</span>
<span class="p_chunk">@@ -141,6 +141,9 @@</span> <span class="p_context"> static inline void tlb_remove_page_size(struct mmu_gather *tlb,</span>
 		__tlb_remove_tlb_entry(tlb, ptep, address);	\
 	} while (0)
 
<span class="p_add">+#define tlb_remove_huge_tlb_entry(h, tlb, ptep, address)	\</span>
<span class="p_add">+	tlb_remove_tlb_entry(tlb, ptep, address)</span>
<span class="p_add">+</span>
 #define pte_free_tlb(tlb, ptep, addr) __pte_free_tlb(tlb, ptep, addr)
 
 #define pud_free_tlb(tlb, pudp, addr) __pud_free_tlb(tlb, pudp, addr)
<span class="p_header">diff --git a/include/asm-generic/tlb.h b/include/asm-generic/tlb.h</span>
<span class="p_header">index dba727becd5f..38c2b708df6e 100644</span>
<span class="p_header">--- a/include/asm-generic/tlb.h</span>
<span class="p_header">+++ b/include/asm-generic/tlb.h</span>
<span class="p_chunk">@@ -220,6 +220,12 @@</span> <span class="p_context"> static inline bool __tlb_remove_pte_page(struct mmu_gather *tlb, struct page *pa</span>
 		__tlb_remove_tlb_entry(tlb, ptep, address);	\
 	} while (0)
 
<span class="p_add">+#define tlb_remove_huge_tlb_entry(h, tlb, ptep, address)	     \</span>
<span class="p_add">+	do {							     \</span>
<span class="p_add">+		__tlb_adjust_range(tlb, address, huge_page_size(h)); \</span>
<span class="p_add">+		__tlb_remove_tlb_entry(tlb, ptep, address);	     \</span>
<span class="p_add">+	} while (0)</span>
<span class="p_add">+</span>
 /**
  * tlb_remove_pmd_tlb_entry - remember a pmd mapping for later tlb invalidation
  * This is a nop so far, because only x86 needs it.
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 87e11d8ad536..58c233a80e6a 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -3249,7 +3249,7 @@</span> <span class="p_context"> void __unmap_hugepage_range(struct mmu_gather *tlb, struct vm_area_struct *vma,</span>
 		}
 
 		pte = huge_ptep_get_and_clear(mm, address, ptep);
<span class="p_del">-		tlb_remove_tlb_entry(tlb, ptep, address);</span>
<span class="p_add">+		tlb_remove_huge_tlb_entry(h, tlb, ptep, address);</span>
 		if (huge_pte_dirty(pte))
 			set_page_dirty(page);
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



