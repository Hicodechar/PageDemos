
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[12/64] fs/userfaultfd: teach userfaultfd_must_wait() about range locking - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [12/64] fs/userfaultfd: teach userfaultfd_must_wait() about range locking</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=109101">Davidlohr Bueso</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 5, 2018, 1:27 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180205012754.23615-13-dbueso@wotan.suse.de&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10199791/mbox/"
   >mbox</a>
|
   <a href="/patch/10199791/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10199791/">/patch/10199791/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	2E30760247 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  5 Feb 2018 01:42:59 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1F835285F0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  5 Feb 2018 01:42:59 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 1427C285EE; Mon,  5 Feb 2018 01:42:59 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C3889285CB
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  5 Feb 2018 01:42:57 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753042AbeBEBmx (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 4 Feb 2018 20:42:53 -0500
Received: from mx2.suse.de ([195.135.220.15]:43856 &quot;EHLO mx2.suse.de&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752395AbeBEB2H (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 4 Feb 2018 20:28:07 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (charybdis-ext.suse.de [195.135.220.254])
	by mx2.suse.de (Postfix) with ESMTP id 2CD09ADE1;
	Mon,  5 Feb 2018 01:28:00 +0000 (UTC)
From: Davidlohr Bueso &lt;dbueso@suse.de&gt;
To: akpm@linux-foundation.org, mingo@kernel.org
Cc: peterz@infradead.org, ldufour@linux.vnet.ibm.com, jack@suse.cz,
	mhocko@kernel.org, kirill.shutemov@linux.intel.com,
	mawilcox@microsoft.com, mgorman@techsingularity.net,
	dave@stgolabs.net, linux-mm@kvack.org,
	linux-kernel@vger.kernel.org, Davidlohr Bueso &lt;dbueso@suse.de&gt;
Subject: [PATCH 12/64] fs/userfaultfd: teach userfaultfd_must_wait() about
	range locking
Date: Mon,  5 Feb 2018 02:27:02 +0100
Message-Id: &lt;20180205012754.23615-13-dbueso@wotan.suse.de&gt;
X-Mailer: git-send-email 2.12.3
In-Reply-To: &lt;20180205012754.23615-1-dbueso@wotan.suse.de&gt;
References: &lt;20180205012754.23615-1-dbueso@wotan.suse.de&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=109101">Davidlohr Bueso</a> - Feb. 5, 2018, 1:27 a.m.</div>
<pre class="content">
<span class="from">From: Davidlohr Bueso &lt;dave@stgolabs.net&gt;</span>

And make use of mm_is_locked() which is why we pass down the
vmf-&gt;lockrange.
<span class="signed-off-by">
Signed-off-by: Davidlohr Bueso &lt;dbueso@suse.de&gt;</span>
---
 fs/userfaultfd.c | 20 ++++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/fs/userfaultfd.c b/fs/userfaultfd.c</span>
<span class="p_header">index e3089865fd52..883fbffb284e 100644</span>
<span class="p_header">--- a/fs/userfaultfd.c</span>
<span class="p_header">+++ b/fs/userfaultfd.c</span>
<span class="p_chunk">@@ -217,13 +217,14 @@</span> <span class="p_context"> static inline bool userfaultfd_huge_must_wait(struct userfaultfd_ctx *ctx,</span>
 					 struct vm_area_struct *vma,
 					 unsigned long address,
 					 unsigned long flags,
<span class="p_del">-					 unsigned long reason)</span>
<span class="p_add">+					 unsigned long reason,</span>
<span class="p_add">+					 struct range_lock *mmrange)</span>
 {
 	struct mm_struct *mm = ctx-&gt;mm;
 	pte_t *pte;
 	bool ret = true;
 
<span class="p_del">-	VM_BUG_ON(!rwsem_is_locked(&amp;mm-&gt;mmap_sem));</span>
<span class="p_add">+	VM_BUG_ON(!mm_is_locked(mm, mmrange));</span>
 
 	pte = huge_pte_offset(mm, address, vma_mmu_pagesize(vma));
 	if (!pte)
<span class="p_chunk">@@ -247,7 +248,8 @@</span> <span class="p_context"> static inline bool userfaultfd_huge_must_wait(struct userfaultfd_ctx *ctx,</span>
 					 struct vm_area_struct *vma,
 					 unsigned long address,
 					 unsigned long flags,
<span class="p_del">-					 unsigned long reason)</span>
<span class="p_add">+					 unsigned long reason,</span>
<span class="p_add">+					 struct range_lock *mmrange)</span>
 {
 	return false;	/* should never get here */
 }
<span class="p_chunk">@@ -263,7 +265,8 @@</span> <span class="p_context"> static inline bool userfaultfd_huge_must_wait(struct userfaultfd_ctx *ctx,</span>
 static inline bool userfaultfd_must_wait(struct userfaultfd_ctx *ctx,
 					 unsigned long address,
 					 unsigned long flags,
<span class="p_del">-					 unsigned long reason)</span>
<span class="p_add">+					 unsigned long reason,</span>
<span class="p_add">+					 struct range_lock *mmrange)</span>
 {
 	struct mm_struct *mm = ctx-&gt;mm;
 	pgd_t *pgd;
<span class="p_chunk">@@ -273,7 +276,7 @@</span> <span class="p_context"> static inline bool userfaultfd_must_wait(struct userfaultfd_ctx *ctx,</span>
 	pte_t *pte;
 	bool ret = true;
 
<span class="p_del">-	VM_BUG_ON(!rwsem_is_locked(&amp;mm-&gt;mmap_sem));</span>
<span class="p_add">+	VM_BUG_ON(!mm_is_locked(mm, mmrange));</span>
 
 	pgd = pgd_offset(mm, address);
 	if (!pgd_present(*pgd))
<span class="p_chunk">@@ -365,7 +368,7 @@</span> <span class="p_context"> int handle_userfault(struct vm_fault *vmf, unsigned long reason)</span>
 	 * Coredumping runs without mmap_sem so we can only check that
 	 * the mmap_sem is held, if PF_DUMPCORE was not set.
 	 */
<span class="p_del">-	WARN_ON_ONCE(!rwsem_is_locked(&amp;mm-&gt;mmap_sem));</span>
<span class="p_add">+	WARN_ON_ONCE(!mm_is_locked(mm, vmf-&gt;lockrange));</span>
 
 	ctx = vmf-&gt;vma-&gt;vm_userfaultfd_ctx.ctx;
 	if (!ctx)
<span class="p_chunk">@@ -473,11 +476,12 @@</span> <span class="p_context"> int handle_userfault(struct vm_fault *vmf, unsigned long reason)</span>
 
 	if (!is_vm_hugetlb_page(vmf-&gt;vma))
 		must_wait = userfaultfd_must_wait(ctx, vmf-&gt;address, vmf-&gt;flags,
<span class="p_del">-						  reason);</span>
<span class="p_add">+						  reason, vmf-&gt;lockrange);</span>
 	else
 		must_wait = userfaultfd_huge_must_wait(ctx, vmf-&gt;vma,
 						       vmf-&gt;address,
<span class="p_del">-						       vmf-&gt;flags, reason);</span>
<span class="p_add">+						       vmf-&gt;flags, reason,</span>
<span class="p_add">+						       vmf-&gt;lockrange);</span>
 	up_read(&amp;mm-&gt;mmap_sem);
 
 	if (likely(must_wait &amp;&amp; !READ_ONCE(ctx-&gt;released) &amp;&amp;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



