
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/4] sparc64: Migrate hvcons irq to panicked cpu - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/4] sparc64: Migrate hvcons irq to panicked cpu</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=150101">Vijay Kumar</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 10, 2016, 10:43 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1478817816-98939-2-git-send-email-vijay.ac.kumar@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9422183/mbox/"
   >mbox</a>
|
   <a href="/patch/9422183/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9422183/">/patch/9422183/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	BAC736022E for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 10 Nov 2016 22:44:40 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id BBCD229844
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 10 Nov 2016 22:44:40 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id AE91129849; Thu, 10 Nov 2016 22:44:40 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	UNPARSEABLE_RELAY autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id A0BA429844
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 10 Nov 2016 22:44:39 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755992AbcKJWnt (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 10 Nov 2016 17:43:49 -0500
Received: from userp1040.oracle.com ([156.151.31.81]:44749 &quot;EHLO
	userp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S934434AbcKJWnq (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 10 Nov 2016 17:43:46 -0500
Received: from userv0022.oracle.com (userv0022.oracle.com [156.151.31.74])
	by userp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2) with
	ESMTP id uAAMhi38017887
	(version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Thu, 10 Nov 2016 22:43:44 GMT
Received: from userv0121.oracle.com (userv0121.oracle.com [156.151.31.72])
	by userv0022.oracle.com (8.14.4/8.14.4) with ESMTP id uAAMhh7i032511
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Thu, 10 Nov 2016 22:43:43 GMT
Received: from abhmp0013.oracle.com (abhmp0013.oracle.com [141.146.116.19])
	by userv0121.oracle.com (8.14.4/8.13.8) with ESMTP id
	uAAMhh7v008538; Thu, 10 Nov 2016 22:43:43 GMT
Received: from ca-qasparc20.us.oracle.com (/10.147.24.73)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Thu, 10 Nov 2016 22:43:42 +0000
From: Vijay Kumar &lt;vijay.ac.kumar@oracle.com&gt;
To: davem@davemloft.net, sparclinux@vger.kernel.org
Cc: karl.volz@oracle.com, rob.gardner@oracle.com,
	linux-kernel@vger.kernel.org
Subject: [PATCH 2/4] sparc64: Migrate hvcons irq to panicked cpu
Date: Thu, 10 Nov 2016 14:43:34 -0800
Message-Id: &lt;1478817816-98939-2-git-send-email-vijay.ac.kumar@oracle.com&gt;
X-Mailer: git-send-email 1.7.1
In-Reply-To: &lt;1478817816-98939-1-git-send-email-vijay.ac.kumar@oracle.com&gt;
References: &lt;1478817816-98939-1-git-send-email-vijay.ac.kumar@oracle.com&gt;
X-Source-IP: userv0022.oracle.com [156.151.31.74]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=150101">Vijay Kumar</a> - Nov. 10, 2016, 10:43 p.m.</div>
<pre class="content">
On panic, all other CPUs are stopped except the one which had
hit panic. To keep console alive, we need to migrate hvcons irq
to panicked CPU.
<span class="signed-off-by">
Signed-off-by: Vijay Kumar &lt;vijay.ac.kumar@oracle.com&gt;</span>
---
 arch/sparc/include/asm/setup.h |    1 +
 arch/sparc/kernel/smp_64.c     |    6 +++++-
 drivers/tty/serial/sunhv.c     |    6 ++++++
 3 files changed, 12 insertions(+), 1 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/sparc/include/asm/setup.h b/arch/sparc/include/asm/setup.h</span>
<span class="p_header">index 29d64b1..41691a5 100644</span>
<span class="p_header">--- a/arch/sparc/include/asm/setup.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/setup.h</span>
<span class="p_chunk">@@ -61,6 +61,7 @@</span> <span class="p_context"> extern atomic_t dcpage_flushes_xcall;</span>
 extern int sysctl_tsb_ratio;
 #endif
 
<span class="p_add">+void sunhv_migrate_hvcons_irq(int cpu);</span>
 void sun_do_break(void);
 extern int stop_a_enabled;
 extern int scons_pwroff;
<span class="p_header">diff --git a/arch/sparc/kernel/smp_64.c b/arch/sparc/kernel/smp_64.c</span>
<span class="p_header">index 14138ad..52dc4b7 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/smp_64.c</span>
<span class="p_header">+++ b/arch/sparc/kernel/smp_64.c</span>
<span class="p_chunk">@@ -1444,8 +1444,12 @@</span> <span class="p_context"> void smp_send_stop(void)</span>
 	int cpu;
 
 	if (tlb_type == hypervisor) {
<span class="p_add">+		int this_cpu = smp_processor_id();</span>
<span class="p_add">+</span>
<span class="p_add">+		sunhv_migrate_hvcons_irq(this_cpu);</span>
<span class="p_add">+</span>
 		for_each_online_cpu(cpu) {
<span class="p_del">-			if (cpu == smp_processor_id())</span>
<span class="p_add">+			if (cpu == this_cpu)</span>
 				continue;
 
 			set_cpu_online(cpu, false);
<span class="p_header">diff --git a/drivers/tty/serial/sunhv.c b/drivers/tty/serial/sunhv.c</span>
<span class="p_header">index 4e603d0..59828d8 100644</span>
<span class="p_header">--- a/drivers/tty/serial/sunhv.c</span>
<span class="p_header">+++ b/drivers/tty/serial/sunhv.c</span>
<span class="p_chunk">@@ -398,6 +398,12 @@</span> <span class="p_context"> static struct uart_driver sunhv_reg = {</span>
 
 static struct uart_port *sunhv_port;
 
<span class="p_add">+void sunhv_migrate_hvcons_irq(int cpu)</span>
<span class="p_add">+{</span>
<span class="p_add">+	/* Migrate hvcons irq to param cpu */</span>
<span class="p_add">+	irq_force_affinity(sunhv_port-&gt;irq, cpumask_of(cpu));</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 /* Copy &#39;s&#39; into the con_write_page, decoding &quot;\n&quot; into
  * &quot;\r\n&quot; along the way.  We have to return two lengths
  * because the caller needs to know how much to advance

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



