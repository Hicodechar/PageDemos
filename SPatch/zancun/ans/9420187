
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[swiotlb,v3,2/3] swiotlb-xen: Enforce return of DMA_ERROR_CODE in mapping function - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [swiotlb,v3,2/3] swiotlb-xen: Enforce return of DMA_ERROR_CODE in mapping function</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=1465">Duyck, Alexander H</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 9, 2016, 3:20 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161109152015.25151.73103.stgit@ahduyck-blue-test.jf.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9420187/mbox/"
   >mbox</a>
|
   <a href="/patch/9420187/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9420187/">/patch/9420187/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	AD667601C0 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  9 Nov 2016 21:21:52 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id A00212933B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  9 Nov 2016 21:21:52 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 92D07293ED; Wed,  9 Nov 2016 21:21:52 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-5.4 required=2.0 tests=BAYES_00, DATE_IN_PAST_06_12,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D5A8B2933B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  9 Nov 2016 21:21:51 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754611AbcKIVVl (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 9 Nov 2016 16:21:41 -0500
Received: from mga03.intel.com ([134.134.136.65]:58617 &quot;EHLO mga03.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1754139AbcKIVVj (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 9 Nov 2016 16:21:39 -0500
Received: from orsmga002.jf.intel.com ([10.7.209.21])
	by orsmga103.jf.intel.com with ESMTP; 09 Nov 2016 13:21:37 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.31,615,1473145200&quot;; d=&quot;scan&#39;208&quot;;a=&quot;1968862&quot;
Received: from ahduyck-blue-test.jf.intel.com ([134.134.2.201])
	by orsmga002.jf.intel.com with ESMTP; 09 Nov 2016 13:21:37 -0800
Subject: [swiotlb PATCH v3 2/3] swiotlb-xen: Enforce return of
	DMA_ERROR_CODE in mapping function
From: Alexander Duyck &lt;alexander.h.duyck@intel.com&gt;
To: linux-mm@kvack.org, konrad.wilk@oracle.com
Cc: netdev@vger.kernel.org, linux-kernel@vger.kernel.org
Date: Wed, 09 Nov 2016 10:20:34 -0500
Message-ID: &lt;20161109152015.25151.73103.stgit@ahduyck-blue-test.jf.intel.com&gt;
In-Reply-To: &lt;20161109151639.25151.24290.stgit@ahduyck-blue-test.jf.intel.com&gt;
References: &lt;20161109151639.25151.24290.stgit@ahduyck-blue-test.jf.intel.com&gt;
User-Agent: StGit/0.17.1-dirty
MIME-Version: 1.0
Content-Type: text/plain; charset=&quot;utf-8&quot;
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1465">Duyck, Alexander H</a> - Nov. 9, 2016, 3:20 p.m.</div>
<pre class="content">
The mapping function should always return DMA_ERROR_CODE when a mapping has
failed as this is what the DMA API expects when a DMA error has occurred.
The current function for mapping a page in Xen was returning either
DMA_ERROR_CODE or 0 depending on where it failed.

On x86 DMA_ERROR_CODE is 0, but on other architectures such as ARM it is
~0. We need to make sure we return the same error value if either the
mapping failed or the device is not capable of accessing the mapping.

If we are returning DMA_ERROR_CODE as our error value we can drop the
function for checking the error code as the default is to compare the
return value against DMA_ERROR_CODE if no function is defined.
<span class="signed-off-by">
Signed-off-by: Alexander Duyck &lt;alexander.h.duyck@intel.com&gt;</span>
---

v1: Added this patch which was part of an earlier patch.
v3: Undid changes to xen_swiotlb_map_page and only changed return value

 arch/arm/xen/mm.c              |    1 -
 arch/x86/xen/pci-swiotlb-xen.c |    1 -
 drivers/xen/swiotlb-xen.c      |    9 +--------
 include/xen/swiotlb-xen.h      |    3 ---
 4 files changed, 1 insertion(+), 13 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm/xen/mm.c b/arch/arm/xen/mm.c</span>
<span class="p_header">index d062f08..bd62d94 100644</span>
<span class="p_header">--- a/arch/arm/xen/mm.c</span>
<span class="p_header">+++ b/arch/arm/xen/mm.c</span>
<span class="p_chunk">@@ -186,7 +186,6 @@</span> <span class="p_context"> struct dma_map_ops *xen_dma_ops;</span>
 EXPORT_SYMBOL(xen_dma_ops);
 
 static struct dma_map_ops xen_swiotlb_dma_ops = {
<span class="p_del">-	.mapping_error = xen_swiotlb_dma_mapping_error,</span>
 	.alloc = xen_swiotlb_alloc_coherent,
 	.free = xen_swiotlb_free_coherent,
 	.sync_single_for_cpu = xen_swiotlb_sync_single_for_cpu,
<span class="p_header">diff --git a/arch/x86/xen/pci-swiotlb-xen.c b/arch/x86/xen/pci-swiotlb-xen.c</span>
<span class="p_header">index 0e98e5d..a9fafb5 100644</span>
<span class="p_header">--- a/arch/x86/xen/pci-swiotlb-xen.c</span>
<span class="p_header">+++ b/arch/x86/xen/pci-swiotlb-xen.c</span>
<span class="p_chunk">@@ -19,7 +19,6 @@</span> <span class="p_context"></span>
 int xen_swiotlb __read_mostly;
 
 static struct dma_map_ops xen_swiotlb_dma_ops = {
<span class="p_del">-	.mapping_error = xen_swiotlb_dma_mapping_error,</span>
 	.alloc = xen_swiotlb_alloc_coherent,
 	.free = xen_swiotlb_free_coherent,
 	.sync_single_for_cpu = xen_swiotlb_sync_single_for_cpu,
<span class="p_header">diff --git a/drivers/xen/swiotlb-xen.c b/drivers/xen/swiotlb-xen.c</span>
<span class="p_header">index 87e6035..c36caa5 100644</span>
<span class="p_header">--- a/drivers/xen/swiotlb-xen.c</span>
<span class="p_header">+++ b/drivers/xen/swiotlb-xen.c</span>
<span class="p_chunk">@@ -418,7 +418,7 @@</span> <span class="p_context"> dma_addr_t xen_swiotlb_map_page(struct device *dev, struct page *page,</span>
 	 */
 	if (!dma_capable(dev, dev_addr, size)) {
 		swiotlb_tbl_unmap_single(dev, map, size, dir);
<span class="p_del">-		dev_addr = 0;</span>
<span class="p_add">+		return DMA_ERROR_CODE;</span>
 	}
 	return dev_addr;
 }
<span class="p_chunk">@@ -648,13 +648,6 @@</span> <span class="p_context"> xen_swiotlb_sync_sg_for_device(struct device *hwdev, struct scatterlist *sg,</span>
 }
 EXPORT_SYMBOL_GPL(xen_swiotlb_sync_sg_for_device);
 
<span class="p_del">-int</span>
<span class="p_del">-xen_swiotlb_dma_mapping_error(struct device *hwdev, dma_addr_t dma_addr)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return !dma_addr;</span>
<span class="p_del">-}</span>
<span class="p_del">-EXPORT_SYMBOL_GPL(xen_swiotlb_dma_mapping_error);</span>
<span class="p_del">-</span>
 /*
  * Return whether the given device DMA address mask can be supported
  * properly.  For example, if your device can only drive the low 24-bits
<span class="p_header">diff --git a/include/xen/swiotlb-xen.h b/include/xen/swiotlb-xen.h</span>
<span class="p_header">index 7c35e27..a0083be 100644</span>
<span class="p_header">--- a/include/xen/swiotlb-xen.h</span>
<span class="p_header">+++ b/include/xen/swiotlb-xen.h</span>
<span class="p_chunk">@@ -51,9 +51,6 @@</span> <span class="p_context"> xen_swiotlb_sync_sg_for_device(struct device *hwdev, struct scatterlist *sg,</span>
 			       int nelems, enum dma_data_direction dir);
 
 extern int
<span class="p_del">-xen_swiotlb_dma_mapping_error(struct device *hwdev, dma_addr_t dma_addr);</span>
<span class="p_del">-</span>
<span class="p_del">-extern int</span>
 xen_swiotlb_dma_supported(struct device *hwdev, u64 mask);
 
 extern int

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



