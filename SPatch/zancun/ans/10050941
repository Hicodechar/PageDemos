
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,1/5] x86: merge x86_hyper into x86_platform and x86_init - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,1/5] x86: merge x86_hyper into x86_platform and x86_init</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=100191">Juergen Gross</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 9, 2017, 1:27 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171109132739.23465-2-jgross@suse.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10050941/mbox/"
   >mbox</a>
|
   <a href="/patch/10050941/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10050941/">/patch/10050941/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	D6B9960381 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  9 Nov 2017 13:29:29 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C12F92AC09
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  9 Nov 2017 13:29:29 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id B5DC12AC2F; Thu,  9 Nov 2017 13:29:29 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B3CF02AC09
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  9 Nov 2017 13:29:28 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754851AbdKIN30 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 9 Nov 2017 08:29:26 -0500
Received: from mx2.suse.de ([195.135.220.15]:60434 &quot;EHLO mx2.suse.de&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1754556AbdKIN14 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 9 Nov 2017 08:27:56 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (charybdis-ext.suse.de [195.135.220.254])
	by mx2.suse.de (Postfix) with ESMTP id 4D627AC19;
	Thu,  9 Nov 2017 13:27:54 +0000 (UTC)
From: Juergen Gross &lt;jgross@suse.com&gt;
To: linux-kernel@vger.kernel.org
Cc: tglx@linutronix.de, mingo@redhat.com, hpa@zytor.com,
	x86@kernel.org, Juergen Gross &lt;jgross@suse.com&gt;, kys@microsoft.com,
	haiyangz@microsoft.com, sthemmin@microsoft.com,
	akataria@vmware.com, pbonzini@redhat.com, rkrcmar@redhat.com,
	boris.ostrovsky@oracle.com, rusty@rustcorp.com.au,
	devel@linuxdriverproject.org,
	virtualization@lists.linux-foundation.org, kvm@vger.kernel.org,
	xen-devel@lists.xenproject.org
Subject: [PATCH v2 1/5] x86: merge x86_hyper into x86_platform and x86_init
Date: Thu,  9 Nov 2017 14:27:35 +0100
Message-Id: &lt;20171109132739.23465-2-jgross@suse.com&gt;
X-Mailer: git-send-email 2.12.3
In-Reply-To: &lt;20171109132739.23465-1-jgross@suse.com&gt;
References: &lt;20171109132739.23465-1-jgross@suse.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=100191">Juergen Gross</a> - Nov. 9, 2017, 1:27 p.m.</div>
<pre class="content">
Instead of x86_hyper being either NULL on bare metal or a pointer to a
struct hypervisor_x86 in case of the kernel running as a guest merge
the struct into x86_platform and x86_init.

This will remove the need for wrappers making it hard to find out what
is being called. With dummy functions added for all callbacks testing
for a NULL function pointer can be removed, too.

Cc: kys@microsoft.com
Cc: haiyangz@microsoft.com
Cc: sthemmin@microsoft.com
Cc: akataria@vmware.com
Cc: pbonzini@redhat.com
Cc: rkrcmar@redhat.com
Cc: boris.ostrovsky@oracle.com
Cc: rusty@rustcorp.com.au
Cc: devel@linuxdriverproject.org
Cc: virtualization@lists.linux-foundation.org
Cc: kvm@vger.kernel.org
Cc: xen-devel@lists.xenproject.org

Suggested-by: Ingo Molnar &lt;mingo@kernel.org&gt;
<span class="signed-off-by">Signed-off-by: Juergen Gross &lt;jgross@suse.com&gt;</span>
---
 arch/x86/include/asm/hypervisor.h | 25 ++++--------------
 arch/x86/include/asm/x86_init.h   | 24 +++++++++++++++++
 arch/x86/kernel/apic/apic.c       |  2 +-
 arch/x86/kernel/cpu/hypervisor.c  | 54 +++++++++++++++++++--------------------
 arch/x86/kernel/cpu/mshyperv.c    |  2 +-
 arch/x86/kernel/cpu/vmware.c      |  4 +--
 arch/x86/kernel/kvm.c             |  2 +-
 arch/x86/kernel/x86_init.c        |  9 +++++++
 arch/x86/mm/init.c                |  2 +-
 arch/x86/xen/enlighten_hvm.c      |  8 +++---
 arch/x86/xen/enlighten_pv.c       |  2 +-
 include/linux/hypervisor.h        |  8 ++++--
 12 files changed, 81 insertions(+), 61 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/hypervisor.h b/arch/x86/include/asm/hypervisor.h</span>
<span class="p_header">index 0ead9dbb9130..0eca7239a7aa 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/hypervisor.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/hypervisor.h</span>
<span class="p_chunk">@@ -23,6 +23,7 @@</span> <span class="p_context"></span>
 #ifdef CONFIG_HYPERVISOR_GUEST
 
 #include &lt;asm/kvm_para.h&gt;
<span class="p_add">+#include &lt;asm/x86_init.h&gt;</span>
 #include &lt;asm/xen/hypervisor.h&gt;
 
 /*
<span class="p_chunk">@@ -35,17 +36,11 @@</span> <span class="p_context"> struct hypervisor_x86 {</span>
 	/* Detection routine */
 	uint32_t	(*detect)(void);
 
<span class="p_del">-	/* Platform setup (run once per boot) */</span>
<span class="p_del">-	void		(*init_platform)(void);</span>
<span class="p_add">+	/* init time callbacks */</span>
<span class="p_add">+	struct x86_hyper_init init;</span>
 
<span class="p_del">-	/* X2APIC detection (run once per boot) */</span>
<span class="p_del">-	bool		(*x2apic_available)(void);</span>
<span class="p_del">-</span>
<span class="p_del">-	/* pin current vcpu to specified physical cpu (run rarely) */</span>
<span class="p_del">-	void		(*pin_vcpu)(int);</span>
<span class="p_del">-</span>
<span class="p_del">-	/* called during init_mem_mapping() to setup early mappings. */</span>
<span class="p_del">-	void		(*init_mem_mapping)(void);</span>
<span class="p_add">+	/* runtime callbacks */</span>
<span class="p_add">+	struct x86_hyper_runtime runtime;</span>
 };
 
 extern const struct hypervisor_x86 *x86_hyper;
<span class="p_chunk">@@ -58,17 +53,7 @@</span> <span class="p_context"> extern const struct hypervisor_x86 x86_hyper_xen_hvm;</span>
 extern const struct hypervisor_x86 x86_hyper_kvm;
 
 extern void init_hypervisor_platform(void);
<span class="p_del">-extern bool hypervisor_x2apic_available(void);</span>
<span class="p_del">-extern void hypervisor_pin_vcpu(int cpu);</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void hypervisor_init_mem_mapping(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (x86_hyper &amp;&amp; x86_hyper-&gt;init_mem_mapping)</span>
<span class="p_del">-		x86_hyper-&gt;init_mem_mapping();</span>
<span class="p_del">-}</span>
 #else
 static inline void init_hypervisor_platform(void) { }
<span class="p_del">-static inline bool hypervisor_x2apic_available(void) { return false; }</span>
<span class="p_del">-static inline void hypervisor_init_mem_mapping(void) { }</span>
 #endif /* CONFIG_HYPERVISOR_GUEST */
 #endif /* _ASM_X86_HYPERVISOR_H */
<span class="p_header">diff --git a/arch/x86/include/asm/x86_init.h b/arch/x86/include/asm/x86_init.h</span>
<span class="p_header">index 8a1ebf9540dd..ad15a0fda917 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/x86_init.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/x86_init.h</span>
<span class="p_chunk">@@ -115,6 +115,18 @@</span> <span class="p_context"> struct x86_init_pci {</span>
 };
 
 /**
<span class="p_add">+ * struct x86_hyper_init - x86 hypervisor init functions</span>
<span class="p_add">+ * @init_platform:		platform setup</span>
<span class="p_add">+ * @x2apic_available:		X2APIC detection</span>
<span class="p_add">+ * @init_mem_mapping:		setup early mappings during init_mem_mapping()</span>
<span class="p_add">+ */</span>
<span class="p_add">+struct x86_hyper_init {</span>
<span class="p_add">+	void (*init_platform)(void);</span>
<span class="p_add">+	bool (*x2apic_available)(void);</span>
<span class="p_add">+	void (*init_mem_mapping)(void);</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+/**</span>
  * struct x86_init_ops - functions for platform specific setup
  *
  */
<span class="p_chunk">@@ -127,6 +139,7 @@</span> <span class="p_context"> struct x86_init_ops {</span>
 	struct x86_init_timers		timers;
 	struct x86_init_iommu		iommu;
 	struct x86_init_pci		pci;
<span class="p_add">+	struct x86_hyper_init		hyper;</span>
 };
 
 /**
<span class="p_chunk">@@ -200,6 +213,15 @@</span> <span class="p_context"> struct x86_legacy_features {</span>
 };
 
 /**
<span class="p_add">+ * struct x86_hyper_runtime - x86 hypervisor specific runtime callbacks</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * @pin_vcpu:		pin current vcpu to specified physical cpu (run rarely)</span>
<span class="p_add">+ */</span>
<span class="p_add">+struct x86_hyper_runtime {</span>
<span class="p_add">+	void (*pin_vcpu)(int cpu);</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+/**</span>
  * struct x86_platform_ops - platform specific runtime functions
  * @calibrate_cpu:		calibrate CPU
  * @calibrate_tsc:		calibrate TSC, if different from CPU
<span class="p_chunk">@@ -218,6 +240,7 @@</span> <span class="p_context"> struct x86_legacy_features {</span>
  * 				possible in x86_early_init_platform_quirks() by
  * 				only using the current x86_hardware_subarch
  * 				semantics.
<span class="p_add">+ * @hyper:			x86 hypervisor specific runtime callbacks</span>
  */
 struct x86_platform_ops {
 	unsigned long (*calibrate_cpu)(void);
<span class="p_chunk">@@ -233,6 +256,7 @@</span> <span class="p_context"> struct x86_platform_ops {</span>
 	void (*apic_post_init)(void);
 	struct x86_legacy_features legacy;
 	void (*set_legacy_features)(void);
<span class="p_add">+	struct x86_hyper_runtime hyper;</span>
 };
 
 struct pci_dev;
<span class="p_header">diff --git a/arch/x86/kernel/apic/apic.c b/arch/x86/kernel/apic/apic.c</span>
<span class="p_header">index ff891772c9f8..89c7c8569e5e 100644</span>
<span class="p_header">--- a/arch/x86/kernel/apic/apic.c</span>
<span class="p_header">+++ b/arch/x86/kernel/apic/apic.c</span>
<span class="p_chunk">@@ -1645,7 +1645,7 @@</span> <span class="p_context"> static __init void try_to_enable_x2apic(int remap_mode)</span>
 		 * under KVM
 		 */
 		if (max_physical_apicid &gt; 255 ||
<span class="p_del">-		    !hypervisor_x2apic_available()) {</span>
<span class="p_add">+		    !x86_init.hyper.x2apic_available()) {</span>
 			pr_info(&quot;x2apic: IRQ remapping doesn&#39;t support X2APIC mode\n&quot;);
 			x2apic_disable();
 			return;
<span class="p_header">diff --git a/arch/x86/kernel/cpu/hypervisor.c b/arch/x86/kernel/cpu/hypervisor.c</span>
<span class="p_header">index 4fa90006ac68..22226c1bf092 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/hypervisor.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/hypervisor.c</span>
<span class="p_chunk">@@ -44,51 +44,49 @@</span> <span class="p_context"> static const __initconst struct hypervisor_x86 * const hypervisors[] =</span>
 const struct hypervisor_x86 *x86_hyper;
 EXPORT_SYMBOL(x86_hyper);
 
<span class="p_del">-static inline void __init</span>
<span class="p_add">+static inline const struct hypervisor_x86 * __init</span>
 detect_hypervisor_vendor(void)
 {
<span class="p_del">-	const struct hypervisor_x86 *h, * const *p;</span>
<span class="p_add">+	const struct hypervisor_x86 *h = NULL, * const *p;</span>
 	uint32_t pri, max_pri = 0;
 
 	for (p = hypervisors; p &lt; hypervisors + ARRAY_SIZE(hypervisors); p++) {
<span class="p_del">-		h = *p;</span>
<span class="p_del">-		pri = h-&gt;detect();</span>
<span class="p_del">-		if (pri != 0 &amp;&amp; pri &gt; max_pri) {</span>
<span class="p_add">+		pri = (*p)-&gt;detect();</span>
<span class="p_add">+		if (pri &gt; max_pri) {</span>
 			max_pri = pri;
<span class="p_del">-			x86_hyper = h;</span>
<span class="p_add">+			h = *p;</span>
 		}
 	}
 
<span class="p_del">-	if (max_pri)</span>
<span class="p_del">-		pr_info(&quot;Hypervisor detected: %s\n&quot;, x86_hyper-&gt;name);</span>
<span class="p_add">+	if (h)</span>
<span class="p_add">+		pr_info(&quot;Hypervisor detected: %s\n&quot;, h-&gt;name);</span>
<span class="p_add">+</span>
<span class="p_add">+	return h;</span>
 }
 
<span class="p_del">-void __init init_hypervisor_platform(void)</span>
<span class="p_add">+static void __init copy_array(const void *src, void *target, unsigned int size)</span>
 {
<span class="p_add">+	unsigned int i, n = size / sizeof(void *);</span>
<span class="p_add">+	const void * const *from = (const void * const *)src;</span>
<span class="p_add">+	const void **to = (const void **)target;</span>
 
<span class="p_del">-	detect_hypervisor_vendor();</span>
<span class="p_del">-</span>
<span class="p_del">-	if (!x86_hyper)</span>
<span class="p_del">-		return;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (x86_hyper-&gt;init_platform)</span>
<span class="p_del">-		x86_hyper-&gt;init_platform();</span>
<span class="p_add">+	for (i = 0; i &lt; n; i++)</span>
<span class="p_add">+		if (from[i])</span>
<span class="p_add">+			to[i] = from[i];</span>
 }
 
<span class="p_del">-bool __init hypervisor_x2apic_available(void)</span>
<span class="p_add">+void __init init_hypervisor_platform(void)</span>
 {
<span class="p_del">-	return x86_hyper                   &amp;&amp;</span>
<span class="p_del">-	       x86_hyper-&gt;x2apic_available &amp;&amp;</span>
<span class="p_del">-	       x86_hyper-&gt;x2apic_available();</span>
<span class="p_del">-}</span>
<span class="p_add">+	const struct hypervisor_x86 *h;</span>
 
<span class="p_del">-void hypervisor_pin_vcpu(int cpu)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (!x86_hyper)</span>
<span class="p_add">+	h = detect_hypervisor_vendor();</span>
<span class="p_add">+</span>
<span class="p_add">+	if (!h)</span>
 		return;
 
<span class="p_del">-	if (x86_hyper-&gt;pin_vcpu)</span>
<span class="p_del">-		x86_hyper-&gt;pin_vcpu(cpu);</span>
<span class="p_del">-	else</span>
<span class="p_del">-		WARN_ONCE(1, &quot;vcpu pinning requested but not supported!\n&quot;);</span>
<span class="p_add">+	copy_array(&amp;h-&gt;init, &amp;x86_init.hyper, sizeof(h-&gt;init));</span>
<span class="p_add">+	copy_array(&amp;h-&gt;runtime, &amp;x86_platform.hyper, sizeof(h-&gt;runtime));</span>
<span class="p_add">+</span>
<span class="p_add">+	x86_hyper = h;</span>
<span class="p_add">+	x86_init.hyper.init_platform();</span>
 }
<span class="p_header">diff --git a/arch/x86/kernel/cpu/mshyperv.c b/arch/x86/kernel/cpu/mshyperv.c</span>
<span class="p_header">index 236324e83a3a..6bb84d655e4b 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/mshyperv.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/mshyperv.c</span>
<span class="p_chunk">@@ -257,6 +257,6 @@</span> <span class="p_context"> static void __init ms_hyperv_init_platform(void)</span>
 const __refconst struct hypervisor_x86 x86_hyper_ms_hyperv = {
 	.name			= &quot;Microsoft Hyper-V&quot;,
 	.detect			= ms_hyperv_platform,
<span class="p_del">-	.init_platform		= ms_hyperv_init_platform,</span>
<span class="p_add">+	.init.init_platform	= ms_hyperv_init_platform,</span>
 };
 EXPORT_SYMBOL(x86_hyper_ms_hyperv);
<span class="p_header">diff --git a/arch/x86/kernel/cpu/vmware.c b/arch/x86/kernel/cpu/vmware.c</span>
<span class="p_header">index 40ed26852ebd..4804c1d063c8 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/vmware.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/vmware.c</span>
<span class="p_chunk">@@ -208,7 +208,7 @@</span> <span class="p_context"> static bool __init vmware_legacy_x2apic_available(void)</span>
 const __refconst struct hypervisor_x86 x86_hyper_vmware = {
 	.name			= &quot;VMware&quot;,
 	.detect			= vmware_platform,
<span class="p_del">-	.init_platform		= vmware_platform_setup,</span>
<span class="p_del">-	.x2apic_available	= vmware_legacy_x2apic_available,</span>
<span class="p_add">+	.init.init_platform	= vmware_platform_setup,</span>
<span class="p_add">+	.init.x2apic_available	= vmware_legacy_x2apic_available,</span>
 };
 EXPORT_SYMBOL(x86_hyper_vmware);
<span class="p_header">diff --git a/arch/x86/kernel/kvm.c b/arch/x86/kernel/kvm.c</span>
<span class="p_header">index 8bb9594d0761..9dca8437c795 100644</span>
<span class="p_header">--- a/arch/x86/kernel/kvm.c</span>
<span class="p_header">+++ b/arch/x86/kernel/kvm.c</span>
<span class="p_chunk">@@ -547,7 +547,7 @@</span> <span class="p_context"> static uint32_t __init kvm_detect(void)</span>
 const struct hypervisor_x86 x86_hyper_kvm __refconst = {
 	.name			= &quot;KVM&quot;,
 	.detect			= kvm_detect,
<span class="p_del">-	.x2apic_available	= kvm_para_available,</span>
<span class="p_add">+	.init.x2apic_available	= kvm_para_available,</span>
 };
 EXPORT_SYMBOL_GPL(x86_hyper_kvm);
 
<span class="p_header">diff --git a/arch/x86/kernel/x86_init.c b/arch/x86/kernel/x86_init.c</span>
<span class="p_header">index a088b2c47f73..5b2d10c1973a 100644</span>
<span class="p_header">--- a/arch/x86/kernel/x86_init.c</span>
<span class="p_header">+++ b/arch/x86/kernel/x86_init.c</span>
<span class="p_chunk">@@ -28,6 +28,8 @@</span> <span class="p_context"> void x86_init_noop(void) { }</span>
 void __init x86_init_uint_noop(unsigned int unused) { }
 int __init iommu_init_noop(void) { return 0; }
 void iommu_shutdown_noop(void) { }
<span class="p_add">+bool __init bool_x86_init_noop(void) { return false; }</span>
<span class="p_add">+void x86_op_int_noop(int cpu) { }</span>
 
 /*
  * The platform setup functions are preset with the default functions
<span class="p_chunk">@@ -81,6 +83,12 @@</span> <span class="p_context"> struct x86_init_ops x86_init __initdata = {</span>
 		.init_irq		= x86_default_pci_init_irq,
 		.fixup_irqs		= x86_default_pci_fixup_irqs,
 	},
<span class="p_add">+</span>
<span class="p_add">+	.hyper = {</span>
<span class="p_add">+		.init_platform		= x86_init_noop,</span>
<span class="p_add">+		.x2apic_available	= bool_x86_init_noop,</span>
<span class="p_add">+		.init_mem_mapping	= x86_init_noop,</span>
<span class="p_add">+	},</span>
 };
 
 struct x86_cpuinit_ops x86_cpuinit = {
<span class="p_chunk">@@ -101,6 +109,7 @@</span> <span class="p_context"> struct x86_platform_ops x86_platform __ro_after_init = {</span>
 	.get_nmi_reason			= default_get_nmi_reason,
 	.save_sched_clock_state 	= tsc_save_sched_clock_state,
 	.restore_sched_clock_state 	= tsc_restore_sched_clock_state,
<span class="p_add">+	.hyper.pin_vcpu			= x86_op_int_noop,</span>
 };
 
 EXPORT_SYMBOL_GPL(x86_platform);
<span class="p_header">diff --git a/arch/x86/mm/init.c b/arch/x86/mm/init.c</span>
<span class="p_header">index af5c1ed21d43..a22c2b95e513 100644</span>
<span class="p_header">--- a/arch/x86/mm/init.c</span>
<span class="p_header">+++ b/arch/x86/mm/init.c</span>
<span class="p_chunk">@@ -671,7 +671,7 @@</span> <span class="p_context"> void __init init_mem_mapping(void)</span>
 	load_cr3(swapper_pg_dir);
 	__flush_tlb_all();
 
<span class="p_del">-	hypervisor_init_mem_mapping();</span>
<span class="p_add">+	x86_init.hyper.init_mem_mapping();</span>
 
 	early_memtest(0, max_pfn_mapped &lt;&lt; PAGE_SHIFT);
 }
<span class="p_header">diff --git a/arch/x86/xen/enlighten_hvm.c b/arch/x86/xen/enlighten_hvm.c</span>
<span class="p_header">index de503c225ae1..7b1622089f96 100644</span>
<span class="p_header">--- a/arch/x86/xen/enlighten_hvm.c</span>
<span class="p_header">+++ b/arch/x86/xen/enlighten_hvm.c</span>
<span class="p_chunk">@@ -229,9 +229,9 @@</span> <span class="p_context"> static uint32_t __init xen_platform_hvm(void)</span>
 const struct hypervisor_x86 x86_hyper_xen_hvm = {
 	.name                   = &quot;Xen HVM&quot;,
 	.detect                 = xen_platform_hvm,
<span class="p_del">-	.init_platform          = xen_hvm_guest_init,</span>
<span class="p_del">-	.pin_vcpu               = xen_pin_vcpu,</span>
<span class="p_del">-	.x2apic_available       = xen_x2apic_para_available,</span>
<span class="p_del">-	.init_mem_mapping	= xen_hvm_init_mem_mapping,</span>
<span class="p_add">+	.init.init_platform     = xen_hvm_guest_init,</span>
<span class="p_add">+	.init.x2apic_available  = xen_x2apic_para_available,</span>
<span class="p_add">+	.init.init_mem_mapping	= xen_hvm_init_mem_mapping,</span>
<span class="p_add">+	.runtime.pin_vcpu       = xen_pin_vcpu,</span>
 };
 EXPORT_SYMBOL(x86_hyper_xen_hvm);
<span class="p_header">diff --git a/arch/x86/xen/enlighten_pv.c b/arch/x86/xen/enlighten_pv.c</span>
<span class="p_header">index d4396e27b1fb..69d1a7054ddb 100644</span>
<span class="p_header">--- a/arch/x86/xen/enlighten_pv.c</span>
<span class="p_header">+++ b/arch/x86/xen/enlighten_pv.c</span>
<span class="p_chunk">@@ -1463,6 +1463,6 @@</span> <span class="p_context"> static uint32_t __init xen_platform_pv(void)</span>
 const struct hypervisor_x86 x86_hyper_xen_pv = {
 	.name                   = &quot;Xen PV&quot;,
 	.detect                 = xen_platform_pv,
<span class="p_del">-	.pin_vcpu               = xen_pin_vcpu,</span>
<span class="p_add">+	.runtime.pin_vcpu       = xen_pin_vcpu,</span>
 };
 EXPORT_SYMBOL(x86_hyper_xen_pv);
<span class="p_header">diff --git a/include/linux/hypervisor.h b/include/linux/hypervisor.h</span>
<span class="p_header">index b4054fd5b6f6..b19563f9a8eb 100644</span>
<span class="p_header">--- a/include/linux/hypervisor.h</span>
<span class="p_header">+++ b/include/linux/hypervisor.h</span>
<span class="p_chunk">@@ -7,8 +7,12 @@</span> <span class="p_context"></span>
  *		Juergen Gross &lt;jgross@suse.com&gt;
  */
 
<span class="p_del">-#ifdef CONFIG_HYPERVISOR_GUEST</span>
<span class="p_del">-#include &lt;asm/hypervisor.h&gt;</span>
<span class="p_add">+#ifdef CONFIG_X86</span>
<span class="p_add">+#include &lt;asm/x86_init.h&gt;</span>
<span class="p_add">+static inline void hypervisor_pin_vcpu(int cpu)</span>
<span class="p_add">+{</span>
<span class="p_add">+	x86_platform.hyper.pin_vcpu(cpu);</span>
<span class="p_add">+}</span>
 #else
 static inline void hypervisor_pin_vcpu(int cpu)
 {

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



