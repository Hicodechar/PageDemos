
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[07/12] parse_integer: convert lib/ - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [07/12] parse_integer: convert lib/</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=88">Alexey Dobriyan</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>May 8, 2015, 6:35 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20150508183519.GE9182@p183.telecom.by&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6366841/mbox/"
   >mbox</a>
|
   <a href="/patch/6366841/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6366841/">/patch/6366841/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id AAFBEBEEE1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  8 May 2015 18:35:32 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id A79CD20219
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  8 May 2015 18:35:31 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id A24BC20260
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  8 May 2015 18:35:30 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932598AbbEHSfZ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 8 May 2015 14:35:25 -0400
Received: from mail-wg0-f54.google.com ([74.125.82.54]:33563 &quot;EHLO
	mail-wg0-f54.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932312AbbEHSfX (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 8 May 2015 14:35:23 -0400
Received: by wgin8 with SMTP id n8so80121435wgi.0
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Fri, 08 May 2015 11:35:22 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=date:from:to:cc:subject:message-id:references:mime-version
	:content-type:content-disposition:in-reply-to:user-agent;
	bh=9BrEypp4020bxA2koahuxAkaCKsT6Hw6+4y1LpzRj+g=;
	b=HYK6YCrSsWQXGOrLi04vzUKzU9oOXnBWc/lcjTsWwr/QYJDEX9bkhKvSLg/Au65aUh
	eOeCf5N0cbEx5aNDX7lJaJKyFwn6aZEhU/Sf6nGKP3T+21iXAcdpuwBq/VS1aaH5qfW4
	4EXpY2Uf7Ac9yWNALDJ1mWrHoXRQbAKHvbR5Jfc9G0EccJ3oqTe5dfz/bzx44A6jAM0R
	E8utEae6T1T/AhArYoahnZD1D+780xtES6wrhYEvzaN//BTDIPG4ZnE9PdUbcEeAgD2w
	rymqbUWFo8nUPiIUN/YPOGprdMv5bd6sqg5a4LBRWOXL7+8MIYgGAwf6cZeePV3nM8qj
	KC7Q==
X-Received: by 10.180.14.193 with SMTP id r1mr285751wic.47.1431110122230;
	Fri, 08 May 2015 11:35:22 -0700 (PDT)
Received: from p183.telecom.by (nat4-minsk-pool-46-53-176-214.telecom.by.
	[46.53.176.214])
	by mx.google.com with ESMTPSA id ch2sm929wib.18.2015.05.08.11.35.21
	(version=TLSv1.2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Fri, 08 May 2015 11:35:21 -0700 (PDT)
Date: Fri, 8 May 2015 21:35:19 +0300
From: Alexey Dobriyan &lt;adobriyan@gmail.com&gt;
To: akpm@linux-foundation.org
Cc: linux-kernel@vger.kernel.org, linux@rasmusvillemoes.dk
Subject: [PATCH 07/12] parse_integer: convert lib/
Message-ID: &lt;20150508183519.GE9182@p183.telecom.by&gt;
References: &lt;20150508182911.GA9044@p183.telecom.by&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: &lt;20150508182911.GA9044@p183.telecom.by&gt;
User-Agent: Mutt/1.5.23 (2014-03-12)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.8 required=5.0 tests=BAYES_00,
	DKIM_ADSP_CUSTOM_MED, 
	DKIM_SIGNED, FREEMAIL_FROM, RCVD_IN_DNSWL_HI, T_DKIM_INVALID,
	T_RP_MATCHES_RCVD, 
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=88">Alexey Dobriyan</a> - May 8, 2015, 6:35 p.m.</div>
<pre class="content">
Convert away lib/ from deprecated simple_strto*() interfaces.
<span class="signed-off-by">
Signed-off-by: Alexey Dobriyan &lt;adobriyan@gmail.com&gt;</span>
---
 lib/cmdline.c | 44 ++++++++++++++++++++++++--------------------
 lib/parser.c  | 33 ++++++++++++++++-----------------
 lib/swiotlb.c |  2 +-
 3 files changed, 41 insertions(+), 38 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/lib/cmdline.c b/lib/cmdline.c</span>
<span class="p_header">index 8f13cf7..c248c58 100644</span>
<span class="p_header">--- a/lib/cmdline.c</span>
<span class="p_header">+++ b/lib/cmdline.c</span>
<span class="p_chunk">@@ -27,7 +27,7 @@</span> <span class="p_context"> static int get_range(char **str, int *pint)</span>
 	int x, inc_counter, upper_range;
 
 	(*str)++;
<span class="p_del">-	upper_range = simple_strtol((*str), NULL, 0);</span>
<span class="p_add">+	parse_integer(*str, 0, &amp;upper_range);</span>
 	inc_counter = upper_range - *pint;
 	for (x = *pint; x &lt; upper_range; x++)
 		*pint++ = x;
<span class="p_chunk">@@ -51,13 +51,14 @@</span> <span class="p_context"> static int get_range(char **str, int *pint)</span>
 
 int get_option(char **str, int *pint)
 {
<span class="p_del">-	char *cur = *str;</span>
<span class="p_add">+	int len;</span>
 
<span class="p_del">-	if (!cur || !(*cur))</span>
<span class="p_add">+	if (!str || !*str)</span>
 		return 0;
<span class="p_del">-	*pint = simple_strtol(cur, str, 0);</span>
<span class="p_del">-	if (cur == *str)</span>
<span class="p_add">+	len = parse_integer(*str, 0, pint);</span>
<span class="p_add">+	if (len &lt; 0)</span>
 		return 0;
<span class="p_add">+	*str += len;</span>
 	if (**str == &#39;,&#39;) {
 		(*str)++;
 		return 2;
<span class="p_chunk">@@ -126,38 +127,41 @@</span> <span class="p_context"> EXPORT_SYMBOL(get_options);</span>
 
 unsigned long long memparse(const char *ptr, char **retptr)
 {
<span class="p_del">-	char *endptr;	/* local pointer to end of parsed string */</span>
<span class="p_del">-</span>
<span class="p_del">-	unsigned long long ret = simple_strtoull(ptr, &amp;endptr, 0);</span>
<span class="p_del">-</span>
<span class="p_del">-	switch (*endptr) {</span>
<span class="p_add">+	unsigned long long val = 0;</span>
<span class="p_add">+	int len;</span>
<span class="p_add">+</span>
<span class="p_add">+	len = parse_integer(ptr, 0, &amp;val);</span>
<span class="p_add">+	if (len &lt; 0)</span>
<span class="p_add">+		goto out;</span>
<span class="p_add">+	ptr += len;</span>
<span class="p_add">+	switch (*ptr) {</span>
 	case &#39;E&#39;:
 	case &#39;e&#39;:
<span class="p_del">-		ret &lt;&lt;= 10;</span>
<span class="p_add">+		val &lt;&lt;= 10;</span>
 	case &#39;P&#39;:
 	case &#39;p&#39;:
<span class="p_del">-		ret &lt;&lt;= 10;</span>
<span class="p_add">+		val &lt;&lt;= 10;</span>
 	case &#39;T&#39;:
 	case &#39;t&#39;:
<span class="p_del">-		ret &lt;&lt;= 10;</span>
<span class="p_add">+		val &lt;&lt;= 10;</span>
 	case &#39;G&#39;:
 	case &#39;g&#39;:
<span class="p_del">-		ret &lt;&lt;= 10;</span>
<span class="p_add">+		val &lt;&lt;= 10;</span>
 	case &#39;M&#39;:
 	case &#39;m&#39;:
<span class="p_del">-		ret &lt;&lt;= 10;</span>
<span class="p_add">+		val &lt;&lt;= 10;</span>
 	case &#39;K&#39;:
 	case &#39;k&#39;:
<span class="p_del">-		ret &lt;&lt;= 10;</span>
<span class="p_del">-		endptr++;</span>
<span class="p_add">+		val &lt;&lt;= 10;</span>
<span class="p_add">+		ptr++;</span>
 	default:
 		break;
 	}
<span class="p_del">-</span>
<span class="p_add">+out:</span>
 	if (retptr)
<span class="p_del">-		*retptr = endptr;</span>
<span class="p_add">+		*retptr = (char *)ptr;</span>
 
<span class="p_del">-	return ret;</span>
<span class="p_add">+	return val;</span>
 }
 EXPORT_SYMBOL(memparse);
 
<span class="p_header">diff --git a/lib/parser.c b/lib/parser.c</span>
<span class="p_header">index b6d1163..f003867 100644</span>
<span class="p_header">--- a/lib/parser.c</span>
<span class="p_header">+++ b/lib/parser.c</span>
<span class="p_chunk">@@ -44,7 +44,7 @@</span> <span class="p_context"> static int match_one(char *s, const char *p, substring_t args[])</span>
 		p = meta + 1;
 
 		if (isdigit(*p))
<span class="p_del">-			len = simple_strtoul(p, (char **) &amp;p, 10);</span>
<span class="p_add">+			p += parse_integer(p, 10, (unsigned int *)&amp;len);</span>
 		else if (*p == &#39;%&#39;) {
 			if (*s++ != &#39;%&#39;)
 				return 0;
<span class="p_chunk">@@ -57,6 +57,11 @@</span> <span class="p_context"> static int match_one(char *s, const char *p, substring_t args[])</span>
 
 		args[argc].from = s;
 		switch (*p++) {
<span class="p_add">+			union {</span>
<span class="p_add">+				int i;</span>
<span class="p_add">+				unsigned int u;</span>
<span class="p_add">+			} u;</span>
<span class="p_add">+</span>
 		case &#39;s&#39;: {
 			size_t str_len = strlen(s);
 
<span class="p_chunk">@@ -68,19 +73,20 @@</span> <span class="p_context"> static int match_one(char *s, const char *p, substring_t args[])</span>
 			break;
 		}
 		case &#39;d&#39;:
<span class="p_del">-			simple_strtol(s, &amp;args[argc].to, 0);</span>
<span class="p_add">+			len = parse_integer(s, 0, &amp;u.i);</span>
 			goto num;
 		case &#39;u&#39;:
<span class="p_del">-			simple_strtoul(s, &amp;args[argc].to, 0);</span>
<span class="p_add">+			len = parse_integer(s, 0, &amp;u.u);</span>
 			goto num;
 		case &#39;o&#39;:
<span class="p_del">-			simple_strtoul(s, &amp;args[argc].to, 8);</span>
<span class="p_add">+			len = parse_integer(s, 8, &amp;u.u);</span>
 			goto num;
 		case &#39;x&#39;:
<span class="p_del">-			simple_strtoul(s, &amp;args[argc].to, 16);</span>
<span class="p_add">+			len = parse_integer(s, 16, &amp;u.u);</span>
 		num:
<span class="p_del">-			if (args[argc].to == args[argc].from)</span>
<span class="p_add">+			if (len &lt; 0)</span>
 				return 0;
<span class="p_add">+			args[argc].to = args[argc].from + len;</span>
 			break;
 		default:
 			return 0;
<span class="p_chunk">@@ -127,10 +133,8 @@</span> <span class="p_context"> EXPORT_SYMBOL(match_token);</span>
  */
 static int match_number(substring_t *s, int *result, int base)
 {
<span class="p_del">-	char *endp;</span>
 	char *buf;
 	int ret;
<span class="p_del">-	long val;</span>
 	size_t len = s-&gt;to - s-&gt;from;
 
 	buf = kmalloc(len + 1, GFP_KERNEL);
<span class="p_chunk">@@ -139,16 +143,11 @@</span> <span class="p_context"> static int match_number(substring_t *s, int *result, int base)</span>
 	memcpy(buf, s-&gt;from, len);
 	buf[len] = &#39;\0&#39;;
 
<span class="p_del">-	ret = 0;</span>
<span class="p_del">-	val = simple_strtol(buf, &amp;endp, base);</span>
<span class="p_del">-	if (endp == buf)</span>
<span class="p_del">-		ret = -EINVAL;</span>
<span class="p_del">-	else if (val &lt; (long)INT_MIN || val &gt; (long)INT_MAX)</span>
<span class="p_del">-		ret = -ERANGE;</span>
<span class="p_del">-	else</span>
<span class="p_del">-		*result = (int) val;</span>
<span class="p_add">+	ret = parse_integer(buf, base, result);</span>
 	kfree(buf);
<span class="p_del">-	return ret;</span>
<span class="p_add">+	if (ret &lt; 0)</span>
<span class="p_add">+		return ret;</span>
<span class="p_add">+	return 0;</span>
 }
 
 /**
<span class="p_header">diff --git a/lib/swiotlb.c b/lib/swiotlb.c</span>
<span class="p_header">index 4abda07..33178e5 100644</span>
<span class="p_header">--- a/lib/swiotlb.c</span>
<span class="p_header">+++ b/lib/swiotlb.c</span>
<span class="p_chunk">@@ -100,7 +100,7 @@</span> <span class="p_context"> static int __init</span>
 setup_io_tlb_npages(char *str)
 {
 	if (isdigit(*str)) {
<span class="p_del">-		io_tlb_nslabs = simple_strtoul(str, &amp;str, 0);</span>
<span class="p_add">+		str += parse_integer(str, 0, &amp;io_tlb_nslabs);</span>
 		/* avoid tail segment of size &lt; IO_TLB_SEGSIZE */
 		io_tlb_nslabs = ALIGN(io_tlb_nslabs, IO_TLB_SEGSIZE);
 	}

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



