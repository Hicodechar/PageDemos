
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v7,4/6] mm: mlock: Add mlock flags to enable VM_LOCKONFAULT usage - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v7,4/6] mm: mlock: Add mlock flags to enable VM_LOCKONFAULT usage</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=111821">Eric B Munson</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 9, 2015, 5:22 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1439097776-27695-5-git-send-email-emunson@akamai.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6978051/mbox/"
   >mbox</a>
|
   <a href="/patch/6978051/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6978051/">/patch/6978051/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id CEDE79F344
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun,  9 Aug 2015 05:42:12 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 694F32072B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun,  9 Aug 2015 05:42:11 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id D409620735
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun,  9 Aug 2015 05:42:08 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932892AbbHIFlw (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 9 Aug 2015 01:41:52 -0400
Received: from a23-79-238-179.deploy.static.akamaitechnologies.com
	([23.79.238.179]:31530
	&quot;EHLO prod-mail-xrelay05.akamai.com&quot; rhost-flags-OK-FAIL-OK-OK)
	by vger.kernel.org with ESMTP id S1751219AbbHIFlW (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 9 Aug 2015 01:41:22 -0400
X-Greylist: delayed 1101 seconds by postgrey-1.27 at vger.kernel.org;
	Sun, 09 Aug 2015 01:41:21 EDT
Received: from prod-mail-xrelay05.akamai.com (localhost.localdomain
	[127.0.0.1]) by postfix.imss70 (Postfix) with ESMTP id 450024DF24;
	Sun,  9 Aug 2015 05:22:59 +0000 (GMT)
Received: from prod-mail-relay07.akamai.com (unknown [172.17.121.112])
	by prod-mail-xrelay05.akamai.com (Postfix) with ESMTP id 2C1274DF20; 
	Sun,  9 Aug 2015 05:22:59 +0000 (GMT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=akamai.com; s=a1;
	t=1439097779; bh=4CXP1yfmHLxzPLZ5AJBI5TlMszWfJZODgJd1eLXgpn4=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=hFRM4Ac8wMx2wELRsmk3399QdrydmoEcsjM9LHvQfbr8V3tzRV++GIhoWvVg4cqhD
	aDo8iecdRxGvZxKm9DENcSKgGRRCfkhhPdPTiwtOGZDKpzgKVnV0D1jBRTojkZzhNw
	1uGo8rLhP5FbKrMVzDcw6hX02W1VMPUNSZa8Ipu4=
Received: from bos-lp6ds.kendall.corp.akamai.com
	(bos-lp6ds.kendall.corp.akamai.com [172.28.13.174])
	by prod-mail-relay07.akamai.com (Postfix) with ESMTP id 23F92800C1;
	Sun,  9 Aug 2015 05:22:59 +0000 (GMT)
From: Eric B Munson &lt;emunson@akamai.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Eric B Munson &lt;emunson@akamai.com&gt;, Michal Hocko &lt;mhocko@suse.cz&gt;,
	Vlastimil Babka &lt;vbabka@suse.cz&gt;, Jonathan Corbet &lt;corbet@lwn.net&gt;,
	&quot;Kirill A. Shutemov&quot; &lt;kirill@shutemov.name&gt;,
	linux-alpha@vger.kernel.org, linux-kernel@vger.kernel.org,
	linux-mips@linux-mips.org, linux-parisc@vger.kernel.org,
	linuxppc-dev@lists.ozlabs.org, sparclinux@vger.kernel.org,
	linux-xtensa@linux-xtensa.org, linux-arch@vger.kernel.org,
	linux-api@vger.kernel.org, linux-mm@kvack.org
Subject: [PATCH v7 4/6] mm: mlock: Add mlock flags to enable VM_LOCKONFAULT
	usage
Date: Sun,  9 Aug 2015 01:22:54 -0400
Message-Id: &lt;1439097776-27695-5-git-send-email-emunson@akamai.com&gt;
X-Mailer: git-send-email 1.9.1
In-Reply-To: &lt;1439097776-27695-1-git-send-email-emunson@akamai.com&gt;
References: &lt;1439097776-27695-1-git-send-email-emunson@akamai.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.8 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,RP_MATCHES_RCVD,T_DKIM_INVALID,UNPARSEABLE_RELAY
	autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=111821">Eric B Munson</a> - Aug. 9, 2015, 5:22 a.m.</div>
<pre class="content">
The previous patch introduced a flag that specified pages in a VMA
should be placed on the unevictable LRU, but they should not be made
present when the area is created.  This patch adds the ability to set
this state via the new mlock system calls.

We add MLOCK_ONFAULT for mlock2 and MCL_ONFAULT for mlockall.
MLOCK_ONFAULT will set the VM_LOCKONFAULT modifier for VM_LOCKED.
MCL_ONFAULT should be used as a modifier to the two other mlockall
flags.  When used with MCL_CURRENT, all current mappings will be marked
with VM_LOCKED | VM_LOCKONFAULT.  When used with MCL_FUTURE, the
mm-&gt;def_flags will be marked with VM_LOCKED | VM_LOCKONFAULT.  When used
with both MCL_CURRENT and MCL_FUTURE, all current mappings and
mm-&gt;def_flags will be marked with VM_LOCKED | VM_LOCKONFAULT.

Prior to this patch, mlockall() will unconditionally clear the
mm-&gt;def_flags any time it is called without MCL_FUTURE.  This behavior
is maintained after adding MCL_ONFAULT.  If a call to
mlockall(MCL_FUTURE) is followed by mlockall(MCL_CURRENT), the
mm-&gt;def_flags will be cleared and new VMAs will be unlocked.  This
remains true with or without MCL_ONFAULT in either mlockall()
invocation.

munlock() will unconditionally clear both vma flags.  munlockall()
unconditionally clears for VMA flags on all VMAs and in the
mm-&gt;def_flags field.
<span class="signed-off-by">
Signed-off-by: Eric B Munson &lt;emunson@akamai.com&gt;</span>
<span class="acked-by">Acked-by: Vlastimil Babka &lt;vbabka@suse.cz&gt;</span>
Cc: Michal Hocko &lt;mhocko@suse.cz&gt;
Cc: Vlastimil Babka &lt;vbabka@suse.cz&gt;
Cc: Jonathan Corbet &lt;corbet@lwn.net&gt;
Cc: &quot;Kirill A. Shutemov&quot; &lt;kirill@shutemov.name&gt;
Cc: linux-alpha@vger.kernel.org
Cc: linux-kernel@vger.kernel.org
Cc: linux-mips@linux-mips.org
Cc: linux-parisc@vger.kernel.org
Cc: linuxppc-dev@lists.ozlabs.org
Cc: sparclinux@vger.kernel.org
Cc: linux-xtensa@linux-xtensa.org
Cc: linux-arch@vger.kernel.org
Cc: linux-api@vger.kernel.org
Cc: linux-mm@kvack.org
---
 arch/alpha/include/uapi/asm/mman.h     |  3 ++
 arch/mips/include/uapi/asm/mman.h      |  6 ++++
 arch/parisc/include/uapi/asm/mman.h    |  3 ++
 arch/powerpc/include/uapi/asm/mman.h   |  1 +
 arch/sparc/include/uapi/asm/mman.h     |  1 +
 arch/tile/include/uapi/asm/mman.h      |  1 +
 arch/xtensa/include/uapi/asm/mman.h    |  6 ++++
 include/uapi/asm-generic/mman-common.h |  5 ++++
 include/uapi/asm-generic/mman.h        |  1 +
 mm/mlock.c                             | 53 +++++++++++++++++++++++++---------
 10 files changed, 67 insertions(+), 13 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/alpha/include/uapi/asm/mman.h b/arch/alpha/include/uapi/asm/mman.h</span>
<span class="p_header">index 0086b47..f2f9496 100644</span>
<span class="p_header">--- a/arch/alpha/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/alpha/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -37,6 +37,9 @@</span> <span class="p_context"></span>
 
 #define MCL_CURRENT	 8192		/* lock all currently mapped pages */
 #define MCL_FUTURE	16384		/* lock all additions to address space */
<span class="p_add">+#define MCL_ONFAULT	32768		/* lock all pages that are faulted in */</span>
<span class="p_add">+</span>
<span class="p_add">+#define MLOCK_ONFAULT	0x01		/* Lock pages in range after they are faulted in, do not prefault */</span>
 
 #define MADV_NORMAL	0		/* no further special treatment */
 #define MADV_RANDOM	1		/* expect random page references */
<span class="p_header">diff --git a/arch/mips/include/uapi/asm/mman.h b/arch/mips/include/uapi/asm/mman.h</span>
<span class="p_header">index cfcb876..97c03f4 100644</span>
<span class="p_header">--- a/arch/mips/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/mips/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -61,6 +61,12 @@</span> <span class="p_context"></span>
  */
 #define MCL_CURRENT	1		/* lock all current mappings */
 #define MCL_FUTURE	2		/* lock all future mappings */
<span class="p_add">+#define MCL_ONFAULT	4		/* lock all pages that are faulted in */</span>
<span class="p_add">+</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Flags for mlock</span>
<span class="p_add">+ */</span>
<span class="p_add">+#define MLOCK_ONFAULT	0x01		/* Lock pages in range after they are faulted in, do not prefault */</span>
 
 #define MADV_NORMAL	0		/* no further special treatment */
 #define MADV_RANDOM	1		/* expect random page references */
<span class="p_header">diff --git a/arch/parisc/include/uapi/asm/mman.h b/arch/parisc/include/uapi/asm/mman.h</span>
<span class="p_header">index 294d251..ecc3ae1 100644</span>
<span class="p_header">--- a/arch/parisc/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/parisc/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -31,6 +31,9 @@</span> <span class="p_context"></span>
 
 #define MCL_CURRENT	1		/* lock all current mappings */
 #define MCL_FUTURE	2		/* lock all future mappings */
<span class="p_add">+#define MCL_ONFAULT	4		/* lock all pages that are faulted in */</span>
<span class="p_add">+</span>
<span class="p_add">+#define MLOCK_ONFAULT	0x01		/* Lock pages in range after they are faulted in, do not prefault */</span>
 
 #define MADV_NORMAL     0               /* no further special treatment */
 #define MADV_RANDOM     1               /* expect random page references */
<span class="p_header">diff --git a/arch/powerpc/include/uapi/asm/mman.h b/arch/powerpc/include/uapi/asm/mman.h</span>
<span class="p_header">index 6ea26df..03c06ba 100644</span>
<span class="p_header">--- a/arch/powerpc/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/powerpc/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -22,6 +22,7 @@</span> <span class="p_context"></span>
 
 #define MCL_CURRENT     0x2000          /* lock all currently mapped pages */
 #define MCL_FUTURE      0x4000          /* lock all additions to address space */
<span class="p_add">+#define MCL_ONFAULT	0x8000		/* lock all pages that are faulted in */</span>
 
 #define MAP_POPULATE	0x8000		/* populate (prefault) pagetables */
 #define MAP_NONBLOCK	0x10000		/* do not block on IO */
<span class="p_header">diff --git a/arch/sparc/include/uapi/asm/mman.h b/arch/sparc/include/uapi/asm/mman.h</span>
<span class="p_header">index 0b14df3..9765896 100644</span>
<span class="p_header">--- a/arch/sparc/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/sparc/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -17,6 +17,7 @@</span> <span class="p_context"></span>
 
 #define MCL_CURRENT     0x2000          /* lock all currently mapped pages */
 #define MCL_FUTURE      0x4000          /* lock all additions to address space */
<span class="p_add">+#define MCL_ONFAULT	0x8000		/* lock all pages that are faulted in */</span>
 
 #define MAP_POPULATE	0x8000		/* populate (prefault) pagetables */
 #define MAP_NONBLOCK	0x10000		/* do not block on IO */
<span class="p_header">diff --git a/arch/tile/include/uapi/asm/mman.h b/arch/tile/include/uapi/asm/mman.h</span>
<span class="p_header">index 81b8fc3..63ee13f 100644</span>
<span class="p_header">--- a/arch/tile/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/tile/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -36,6 +36,7 @@</span> <span class="p_context"></span>
  */
 #define MCL_CURRENT	1		/* lock all current mappings */
 #define MCL_FUTURE	2		/* lock all future mappings */
<span class="p_add">+#define MCL_ONFAULT	4		/* lock all pages that are faulted in */</span>
 
 
 #endif /* _ASM_TILE_MMAN_H */
<span class="p_header">diff --git a/arch/xtensa/include/uapi/asm/mman.h b/arch/xtensa/include/uapi/asm/mman.h</span>
<span class="p_header">index 201aec0..360944e 100644</span>
<span class="p_header">--- a/arch/xtensa/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/xtensa/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -74,6 +74,12 @@</span> <span class="p_context"></span>
  */
 #define MCL_CURRENT	1		/* lock all current mappings */
 #define MCL_FUTURE	2		/* lock all future mappings */
<span class="p_add">+#define MCL_ONFAULT	4		/* lock all pages that are faulted in */</span>
<span class="p_add">+</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Flags for mlock</span>
<span class="p_add">+ */</span>
<span class="p_add">+#define MLOCK_ONFAULT	0x01		/* Lock pages in range after they are faulted in, do not prefault */</span>
 
 #define MADV_NORMAL	0		/* no further special treatment */
 #define MADV_RANDOM	1		/* expect random page references */
<span class="p_header">diff --git a/include/uapi/asm-generic/mman-common.h b/include/uapi/asm-generic/mman-common.h</span>
<span class="p_header">index ddc3b36..a74dd84 100644</span>
<span class="p_header">--- a/include/uapi/asm-generic/mman-common.h</span>
<span class="p_header">+++ b/include/uapi/asm-generic/mman-common.h</span>
<span class="p_chunk">@@ -25,6 +25,11 @@</span> <span class="p_context"></span>
 # define MAP_UNINITIALIZED 0x0		/* Don&#39;t support this flag */
 #endif
 
<span class="p_add">+/*</span>
<span class="p_add">+ * Flags for mlock</span>
<span class="p_add">+ */</span>
<span class="p_add">+#define MLOCK_ONFAULT	0x01		/* Lock pages in range after they are faulted in, do not prefault */</span>
<span class="p_add">+</span>
 #define MS_ASYNC	1		/* sync memory asynchronously */
 #define MS_INVALIDATE	2		/* invalidate the caches */
 #define MS_SYNC		4		/* synchronous memory sync */
<span class="p_header">diff --git a/include/uapi/asm-generic/mman.h b/include/uapi/asm-generic/mman.h</span>
<span class="p_header">index e9fe6fd..7162cd4 100644</span>
<span class="p_header">--- a/include/uapi/asm-generic/mman.h</span>
<span class="p_header">+++ b/include/uapi/asm-generic/mman.h</span>
<span class="p_chunk">@@ -17,5 +17,6 @@</span> <span class="p_context"></span>
 
 #define MCL_CURRENT	1		/* lock all current mappings */
 #define MCL_FUTURE	2		/* lock all future mappings */
<span class="p_add">+#define MCL_ONFAULT	4		/* lock all pages that are faulted in */</span>
 
 #endif /* __ASM_GENERIC_MMAN_H */
<span class="p_header">diff --git a/mm/mlock.c b/mm/mlock.c</span>
<span class="p_header">index 029a75b..7e1b8c5 100644</span>
<span class="p_header">--- a/mm/mlock.c</span>
<span class="p_header">+++ b/mm/mlock.c</span>
<span class="p_chunk">@@ -506,7 +506,8 @@</span> <span class="p_context"> static int mlock_fixup(struct vm_area_struct *vma, struct vm_area_struct **prev,</span>
 
 	if (newflags == vma-&gt;vm_flags || (vma-&gt;vm_flags &amp; VM_SPECIAL) ||
 	    is_vm_hugetlb_page(vma) || vma == get_gate_vma(current-&gt;mm))
<span class="p_del">-		goto out;	/* don&#39;t set VM_LOCKED,  don&#39;t count */</span>
<span class="p_add">+		/* don&#39;t set VM_LOCKED or VM_LOCKONFAULT and don&#39;t count */</span>
<span class="p_add">+		goto out;</span>
 
 	pgoff = vma-&gt;vm_pgoff + ((start - vma-&gt;vm_start) &gt;&gt; PAGE_SHIFT);
 	*prev = vma_merge(mm, *prev, start, end, newflags, vma-&gt;anon_vma,
<span class="p_chunk">@@ -576,7 +577,8 @@</span> <span class="p_context"> static int apply_vma_lock_flags(unsigned long start, size_t len,</span>
 		prev = vma;
 
 	for (nstart = start ; ; ) {
<span class="p_del">-		vm_flags_t newflags = vma-&gt;vm_flags &amp; ~VM_LOCKED;</span>
<span class="p_add">+		vm_flags_t newflags =</span>
<span class="p_add">+			vma-&gt;vm_flags &amp; ~(VM_LOCKED | VM_LOCKONFAULT);</span>
 
 		newflags |= flags;
 
<span class="p_chunk">@@ -645,10 +647,15 @@</span> <span class="p_context"> SYSCALL_DEFINE2(mlock, unsigned long, start, size_t, len)</span>
 
 SYSCALL_DEFINE3(mlock2, unsigned long, start, size_t, len, int, flags)
 {
<span class="p_del">-	if (flags)</span>
<span class="p_add">+	vm_flags_t vm_flags = VM_LOCKED;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (flags &amp; ~MLOCK_ONFAULT)</span>
 		return -EINVAL;
 
<span class="p_del">-	return do_mlock(start, len, VM_LOCKED);</span>
<span class="p_add">+	if (flags &amp; MLOCK_ONFAULT)</span>
<span class="p_add">+		vm_flags |= VM_LOCKONFAULT;</span>
<span class="p_add">+</span>
<span class="p_add">+	return do_mlock(start, len, vm_flags);</span>
 }
 
 SYSCALL_DEFINE2(munlock, unsigned long, start, size_t, len)
<span class="p_chunk">@@ -665,24 +672,43 @@</span> <span class="p_context"> SYSCALL_DEFINE2(munlock, unsigned long, start, size_t, len)</span>
 	return ret;
 }
 
<span class="p_add">+/*</span>
<span class="p_add">+ * Take the MCL_* flags passed into mlockall (or 0 if called from munlockall)</span>
<span class="p_add">+ * and translate into the appropriate modifications to mm-&gt;def_flags and/or the</span>
<span class="p_add">+ * flags for all current VMAs.</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * There are a couple of subtleties with this.  If mlockall() is called multiple</span>
<span class="p_add">+ * times with different flags, the values do not necessarily stack.  If mlockall</span>
<span class="p_add">+ * is called once including the MCL_FUTURE flag and then a second time without</span>
<span class="p_add">+ * it, VM_LOCKED and VM_LOCKONFAULT will be cleared from mm-&gt;def_flags.</span>
<span class="p_add">+ */</span>
 static int apply_mlockall_flags(int flags)
 {
 	struct vm_area_struct * vma, * prev = NULL;
<span class="p_add">+	vm_flags_t to_add = 0;</span>
 
<span class="p_del">-	if (flags &amp; MCL_FUTURE)</span>
<span class="p_add">+	current-&gt;mm-&gt;def_flags &amp;= ~(VM_LOCKED | VM_LOCKONFAULT);</span>
<span class="p_add">+	if (flags &amp; MCL_FUTURE) {</span>
 		current-&gt;mm-&gt;def_flags |= VM_LOCKED;
<span class="p_del">-	else</span>
<span class="p_del">-		current-&gt;mm-&gt;def_flags &amp;= ~VM_LOCKED;</span>
 
<span class="p_del">-	if (flags == MCL_FUTURE)</span>
<span class="p_del">-		goto out;</span>
<span class="p_add">+		if (flags &amp; MCL_ONFAULT)</span>
<span class="p_add">+			current-&gt;mm-&gt;def_flags |= VM_LOCKONFAULT;</span>
<span class="p_add">+</span>
<span class="p_add">+		if (!(flags &amp; MCL_CURRENT))</span>
<span class="p_add">+			goto out;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	if (flags &amp; MCL_CURRENT) {</span>
<span class="p_add">+		to_add |= VM_LOCKED;</span>
<span class="p_add">+		if (flags &amp; MCL_ONFAULT)</span>
<span class="p_add">+			to_add |= VM_LOCKONFAULT;</span>
<span class="p_add">+	}</span>
 
 	for (vma = current-&gt;mm-&gt;mmap; vma ; vma = prev-&gt;vm_next) {
 		vm_flags_t newflags;
 
<span class="p_del">-		newflags = vma-&gt;vm_flags &amp; ~VM_LOCKED;</span>
<span class="p_del">-		if (flags &amp; MCL_CURRENT)</span>
<span class="p_del">-			newflags |= VM_LOCKED;</span>
<span class="p_add">+		newflags = vma-&gt;vm_flags &amp; ~(VM_LOCKED | VM_LOCKONFAULT);</span>
<span class="p_add">+		newflags |= to_add;</span>
 
 		/* Ignore errors */
 		mlock_fixup(vma, &amp;prev, vma-&gt;vm_start, vma-&gt;vm_end, newflags);
<span class="p_chunk">@@ -697,7 +723,8 @@</span> <span class="p_context"> SYSCALL_DEFINE1(mlockall, int, flags)</span>
 	unsigned long lock_limit;
 	int ret = -EINVAL;
 
<span class="p_del">-	if (!flags || (flags &amp; ~(MCL_CURRENT | MCL_FUTURE)))</span>
<span class="p_add">+	if (!flags || (flags &amp; ~(MCL_CURRENT | MCL_FUTURE | MCL_ONFAULT)) ||</span>
<span class="p_add">+	    flags == MCL_ONFAULT)</span>
 		goto out;
 
 	ret = -EPERM;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



