
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.9,17/21] parisc: Fix alignment of pa_tlb_lock in assembly on 32-bit SMP kernel - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.9,17/21] parisc: Fix alignment of pa_tlb_lock in assembly on 32-bit SMP kernel</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 8, 2018, 12:59 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180108125921.107937977@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10149445/mbox/"
   >mbox</a>
|
   <a href="/patch/10149445/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10149445/">/patch/10149445/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	BBF38601BE for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  8 Jan 2018 13:02:04 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C038628633
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  8 Jan 2018 13:02:04 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id B536F28687; Mon,  8 Jan 2018 13:02:04 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3251528633
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  8 Jan 2018 13:02:04 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S933053AbeAHNCB (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 8 Jan 2018 08:02:01 -0500
Received: from mail.linuxfoundation.org ([140.211.169.12]:44218 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932971AbeAHNB5 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 8 Jan 2018 08:01:57 -0500
Received: from localhost (LFbn-1-12258-90.w90-92.abo.wanadoo.fr
	[90.92.71.90])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id 171ADEBF;
	Mon,  8 Jan 2018 13:01:56 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, Helge Deller &lt;deller@gmx.de&gt;
Subject: [PATCH 4.9 17/21] parisc: Fix alignment of pa_tlb_lock in assembly
	on 32-bit SMP kernel
Date: Mon,  8 Jan 2018 13:59:37 +0100
Message-Id: &lt;20180108125921.107937977@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.15.1
In-Reply-To: &lt;20180108125920.106264989@linuxfoundation.org&gt;
References: &lt;20180108125920.106264989@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Jan. 8, 2018, 12:59 p.m.</div>
<pre class="content">
4.9-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: Helge Deller &lt;deller@gmx.de&gt;</span>

commit 88776c0e70be0290f8357019d844aae15edaa967 upstream.

Qemu for PARISC reported on a 32bit SMP parisc kernel strange failures
about &quot;Not-handled unaligned insn 0x0e8011d6 and 0x0c2011c9.&quot;

Those opcodes evaluate to the ldcw() assembly instruction which requires
(on 32bit) an alignment of 16 bytes to ensure atomicity.

As it turns out, qemu is correct and in our assembly code in entry.S and
pacache.S we don&#39;t pay attention to the required alignment.

This patch fixes the problem by aligning the lock offset in assembly
code in the same manner as we do in our C-code.
<span class="signed-off-by">
Signed-off-by: Helge Deller &lt;deller@gmx.de&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>

---
 arch/parisc/include/asm/ldcw.h |    2 ++
 arch/parisc/kernel/entry.S     |   13 +++++++++++--
 arch/parisc/kernel/pacache.S   |    9 +++++++--
 3 files changed, 20 insertions(+), 4 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/parisc/include/asm/ldcw.h</span>
<span class="p_header">+++ b/arch/parisc/include/asm/ldcw.h</span>
<span class="p_chunk">@@ -11,6 +11,7 @@</span> <span class="p_context"></span>
    for the semaphore.  */
 
 #define __PA_LDCW_ALIGNMENT	16
<span class="p_add">+#define __PA_LDCW_ALIGN_ORDER	4</span>
 #define __ldcw_align(a) ({					\
 	unsigned long __ret = (unsigned long) &amp;(a)-&gt;lock[0];	\
 	__ret = (__ret + __PA_LDCW_ALIGNMENT - 1)		\
<span class="p_chunk">@@ -28,6 +29,7 @@</span> <span class="p_context"></span>
    ldcd). */
 
 #define __PA_LDCW_ALIGNMENT	4
<span class="p_add">+#define __PA_LDCW_ALIGN_ORDER	2</span>
 #define __ldcw_align(a) (&amp;(a)-&gt;slock)
 #define __LDCW	&quot;ldcw,co&quot;
 
<span class="p_header">--- a/arch/parisc/kernel/entry.S</span>
<span class="p_header">+++ b/arch/parisc/kernel/entry.S</span>
<span class="p_chunk">@@ -35,6 +35,7 @@</span> <span class="p_context"></span>
 #include &lt;asm/pgtable.h&gt;
 #include &lt;asm/signal.h&gt;
 #include &lt;asm/unistd.h&gt;
<span class="p_add">+#include &lt;asm/ldcw.h&gt;</span>
 #include &lt;asm/thread_info.h&gt;
 
 #include &lt;linux/linkage.h&gt;
<span class="p_chunk">@@ -46,6 +47,14 @@</span> <span class="p_context"></span>
 #endif
 
 	.import		pa_tlb_lock,data
<span class="p_add">+	.macro  load_pa_tlb_lock reg</span>
<span class="p_add">+#if __PA_LDCW_ALIGNMENT &gt; 4</span>
<span class="p_add">+	load32	PA(pa_tlb_lock) + __PA_LDCW_ALIGNMENT-1, \reg</span>
<span class="p_add">+	depi	0,31,__PA_LDCW_ALIGN_ORDER, \reg</span>
<span class="p_add">+#else</span>
<span class="p_add">+	load32	PA(pa_tlb_lock), \reg</span>
<span class="p_add">+#endif</span>
<span class="p_add">+	.endm</span>
 
 	/* space_to_prot macro creates a prot id from a space id */
 
<span class="p_chunk">@@ -457,7 +466,7 @@</span> <span class="p_context"></span>
 	.macro		tlb_lock	spc,ptp,pte,tmp,tmp1,fault
 #ifdef CONFIG_SMP
 	cmpib,COND(=),n	0,\spc,2f
<span class="p_del">-	load32		PA(pa_tlb_lock),\tmp</span>
<span class="p_add">+	load_pa_tlb_lock \tmp</span>
 1:	LDCW		0(\tmp),\tmp1
 	cmpib,COND(=)	0,\tmp1,1b
 	nop
<span class="p_chunk">@@ -480,7 +489,7 @@</span> <span class="p_context"></span>
 	/* Release pa_tlb_lock lock. */
 	.macro		tlb_unlock1	spc,tmp
 #ifdef CONFIG_SMP
<span class="p_del">-	load32		PA(pa_tlb_lock),\tmp</span>
<span class="p_add">+	load_pa_tlb_lock \tmp</span>
 	tlb_unlock0	\spc,\tmp
 #endif
 	.endm
<span class="p_header">--- a/arch/parisc/kernel/pacache.S</span>
<span class="p_header">+++ b/arch/parisc/kernel/pacache.S</span>
<span class="p_chunk">@@ -36,6 +36,7 @@</span> <span class="p_context"></span>
 #include &lt;asm/assembly.h&gt;
 #include &lt;asm/pgtable.h&gt;
 #include &lt;asm/cache.h&gt;
<span class="p_add">+#include &lt;asm/ldcw.h&gt;</span>
 #include &lt;linux/linkage.h&gt;
 
 	.text
<span class="p_chunk">@@ -333,8 +334,12 @@</span> <span class="p_context"> ENDPROC_CFI(flush_data_cache_local)</span>
 
 	.macro	tlb_lock	la,flags,tmp
 #ifdef CONFIG_SMP
<span class="p_del">-	ldil		L%pa_tlb_lock,%r1</span>
<span class="p_del">-	ldo		R%pa_tlb_lock(%r1),\la</span>
<span class="p_add">+#if __PA_LDCW_ALIGNMENT &gt; 4</span>
<span class="p_add">+	load32		pa_tlb_lock + __PA_LDCW_ALIGNMENT-1, \la</span>
<span class="p_add">+	depi		0,31,__PA_LDCW_ALIGN_ORDER, \la</span>
<span class="p_add">+#else</span>
<span class="p_add">+	load32		pa_tlb_lock, \la</span>
<span class="p_add">+#endif</span>
 	rsm		PSW_SM_I,\flags
 1:	LDCW		0(\la),\tmp
 	cmpib,&lt;&gt;,n	0,\tmp,3f

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



