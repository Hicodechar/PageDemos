
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>KVM: PPC: Book3S HV: Always flush TLB in kvmppc_alloc_reset_hpt() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    KVM: PPC: Book3S HV: Always flush TLB in kvmppc_alloc_reset_hpt()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=1741">David Gibson</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 10, 2018, 6:04 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180110060439.21822-1-david@gibson.dropbear.id.au&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10154025/mbox/"
   >mbox</a>
|
   <a href="/patch/10154025/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10154025/">/patch/10154025/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	17FB7602D8 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Jan 2018 06:04:50 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 03F00274D0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Jan 2018 06:04:50 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id EB23528068; Wed, 10 Jan 2018 06:04:49 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 57608274D0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Jan 2018 06:04:49 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S933652AbeAJGEq (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 10 Jan 2018 01:04:46 -0500
Received: from ozlabs.org ([103.22.144.67]:41559 &quot;EHLO ozlabs.org&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S933289AbeAJGEo (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 10 Jan 2018 01:04:44 -0500
Received: by ozlabs.org (Postfix, from userid 1007)
	id 3zGdky2NHlz9sNV; Wed, 10 Jan 2018 17:04:42 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=gibson.dropbear.id.au; s=201602; t=1515564282;
	bh=zvT3TluNRa2HMhT5jw6sRklslXagVAc5vVWPrOOMSg4=;
	h=From:To:Cc:Subject:Date:From;
	b=PqAVqXU4KP50rN/sbVX/VUETLXBLebRTU/umbX/zVulRk+sytodDdUc/whdXJCZX5
	88aSjQLc4Pily4ctc7oo5nFuFpahBi5djzatgGNu/CdM88HpLGmcJp9Xe8Vj5fgzop
	BsURfh/EFn9S+ejpyZVbVfS9/FQONglAzFSfKLF0=
From: David Gibson &lt;david@gibson.dropbear.id.au&gt;
To: paulus@samba.org, surajjs@au1.ibm.com, spopovyc@redhat.com
Cc: kvm@vger.kernel.org, kvm-ppc@vger.kernel.org,
	linux-kernel@vger.kernel.org, David Gibson &lt;david@gibson.dropbear.id.au&gt;
Subject: [PATCH] KVM: PPC: Book3S HV: Always flush TLB in
	kvmppc_alloc_reset_hpt()
Date: Wed, 10 Jan 2018 17:04:39 +1100
Message-Id: &lt;20180110060439.21822-1-david@gibson.dropbear.id.au&gt;
X-Mailer: git-send-email 2.14.3
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1741">David Gibson</a> - Jan. 10, 2018, 6:04 a.m.</div>
<pre class="content">
The KVM_PPC_ALLOCATE_HTAB ioctl(), implemented by kvmppc_alloc_reset_hpt()
is supposed to completely clear and reset a guest&#39;s Hashed Page Table (HPT)
allocating or re-allocating it if necessary.

In the case where an HPT of the right size already exists and it just
zeroes it, it forces a TLB flush on all guest CPUs, to remove any stale TLB
entries loaded from the old HPT.

However, that situation can arise when the HPT is resizing as well - or
even when switching from an RPT to HPT - so those cases need a TLB flush as
well.

So, move the TLB flush to trigger in all cases except for errors.
<span class="signed-off-by">
Signed-off-by: David Gibson &lt;david@gibson.dropbear.id.au&gt;</span>
---
 arch/powerpc/kvm/book3s_64_mmu_hv.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

Paul, this is based on Paolo&#39;s KVM tree, but it should apply without
modification to pretty much any vaguely current tree.  It&#39;s a pretty
nasty bug - the case we&#39;ve found hitting it in the wild is a bit
esoteric, but it could in theory affect other situations as well.

Please apply ASAP, and should probably be queued for the stable
branches as well.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=140871">Paul Mackerras</a> - Jan. 11, 2018, 9:54 a.m.</div>
<pre class="content">
On Wed, Jan 10, 2018 at 05:04:39PM +1100, David Gibson wrote:
<span class="quote">&gt; The KVM_PPC_ALLOCATE_HTAB ioctl(), implemented by kvmppc_alloc_reset_hpt()</span>
<span class="quote">&gt; is supposed to completely clear and reset a guest&#39;s Hashed Page Table (HPT)</span>
<span class="quote">&gt; allocating or re-allocating it if necessary.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; In the case where an HPT of the right size already exists and it just</span>
<span class="quote">&gt; zeroes it, it forces a TLB flush on all guest CPUs, to remove any stale TLB</span>
<span class="quote">&gt; entries loaded from the old HPT.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; However, that situation can arise when the HPT is resizing as well - or</span>
<span class="quote">&gt; even when switching from an RPT to HPT - so those cases need a TLB flush as</span>
<span class="quote">&gt; well.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; So, move the TLB flush to trigger in all cases except for errors.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: David Gibson &lt;david@gibson.dropbear.id.au&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/powerpc/kvm/book3s_64_mmu_hv.c | 6 ++++--</span>
<span class="quote">&gt;  1 file changed, 4 insertions(+), 2 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Paul, this is based on Paolo&#39;s KVM tree, but it should apply without</span>
<span class="quote">&gt; modification to pretty much any vaguely current tree.  It&#39;s a pretty</span>
<span class="quote">&gt; nasty bug - the case we&#39;ve found hitting it in the wild is a bit</span>
<span class="quote">&gt; esoteric, but it could in theory affect other situations as well.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Please apply ASAP, and should probably be queued for the stable</span>
<span class="quote">&gt; branches as well.</span>

Thanks, applied to my kvm-ppc-fixes branch, and I added
cc: stable@vger.kernel.org.

Paul.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/powerpc/kvm/book3s_64_mmu_hv.c b/arch/powerpc/kvm/book3s_64_mmu_hv.c</span>
<span class="p_header">index 966097232d21..51a275cc8a4d 100644</span>
<span class="p_header">--- a/arch/powerpc/kvm/book3s_64_mmu_hv.c</span>
<span class="p_header">+++ b/arch/powerpc/kvm/book3s_64_mmu_hv.c</span>
<span class="p_chunk">@@ -159,8 +159,6 @@</span> <span class="p_context"> long kvmppc_alloc_reset_hpt(struct kvm *kvm, int order)</span>
 		 * Reset all the reverse-mapping chains for all memslots
 		 */
 		kvmppc_rmap_reset(kvm);
<span class="p_del">-		/* Ensure that each vcpu will flush its TLB on next entry. */</span>
<span class="p_del">-		cpumask_setall(&amp;kvm-&gt;arch.need_tlb_flush);</span>
 		err = 0;
 		goto out;
 	}
<span class="p_chunk">@@ -176,6 +174,10 @@</span> <span class="p_context"> long kvmppc_alloc_reset_hpt(struct kvm *kvm, int order)</span>
 	kvmppc_set_hpt(kvm, &amp;info);
 
 out:
<span class="p_add">+	if (err == 0)</span>
<span class="p_add">+		/* Ensure that each vcpu will flush its TLB on next entry. */</span>
<span class="p_add">+		cpumask_setall(&amp;kvm-&gt;arch.need_tlb_flush);</span>
<span class="p_add">+</span>
 	mutex_unlock(&amp;kvm-&gt;lock);
 	return err;
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



