
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2] perf tools: Add hugetlbfs memory recognition - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2] perf tools: Add hugetlbfs memory recognition</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=109021">Hou Pengyang</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 30, 2015, 1:15 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1435670110-67308-1-git-send-email-houpengyang@huawei.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6696011/mbox/"
   >mbox</a>
|
   <a href="/patch/6696011/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6696011/">/patch/6696011/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 30FA7C05AC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 30 Jun 2015 13:15:53 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 2711B20499
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 30 Jun 2015 13:15:52 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id EBC432047D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 30 Jun 2015 13:15:50 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752534AbbF3NPn (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 30 Jun 2015 09:15:43 -0400
Received: from szxga03-in.huawei.com ([119.145.14.66]:59170 &quot;EHLO
	szxga03-in.huawei.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752172AbbF3NPg (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 30 Jun 2015 09:15:36 -0400
Received: from 172.24.2.119 (EHLO szxeml426-hub.china.huawei.com)
	([172.24.2.119])
	by szxrg03-dlp.huawei.com (MOS 4.4.3-GA FastPath queued)
	with ESMTP id BIL34113; Tue, 30 Jun 2015 21:15:28 +0800 (CST)
Received: from euler.hulk-profiling (10.107.197.210) by
	szxeml426-hub.china.huawei.com (10.82.67.181) with Microsoft SMTP
	Server id 14.3.158.1; Tue, 30 Jun 2015 21:15:16 +0800
From: Hou Pengyang &lt;houpengyang@huawei.com&gt;
To: &lt;acme@kernel.org&gt;, &lt;mingo@redhat.com&gt;, &lt;namhyung@kernel.org&gt;,
	&lt;a.p.zijlstra@chello.nl&gt;
CC: &lt;wangnan0@huawei.com&gt;, &lt;zhu.wen-jie@hp.com&gt;,
	&lt;linux-kernel@vger.kernel.org&gt;
Subject: [PATCH v2] perf tools: Add hugetlbfs memory recognition
Date: Tue, 30 Jun 2015 13:15:10 +0000
Message-ID: &lt;1435670110-67308-1-git-send-email-houpengyang@huawei.com&gt;
X-Mailer: git-send-email 1.8.3.4
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [10.107.197.210]
X-CFilter-Loop: Reflected
X-Mirapoint-Virus-RAPID-Raw: score=unknown(0),
	refid=str=0001.0A020204.55929671.026D, ss=1, re=0.000, recu=0.000,
	reip=0.000, cl=1, cld=1, fgs=0, ip=0.0.0.0,
	so=2013-05-26 15:14:31, dmn=2013-03-21 17:37:32
X-Mirapoint-Loop-Id: a2db5c7bceba9007ba3a9af8b1d08ec7
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.5 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=109021">Hou Pengyang</a> - June 30, 2015, 1:15 p.m.</div>
<pre class="content">
Maps for JIT is helpful for symbols-parsing for anon-executable-memory.
What we need to do is to add (START, SIZE, symbolname) to /tmp/perf-%d.map
(%d = pid of process), and perf would parse symbol located in this area
according to /tmp/perf-%d.map. It works well for normal mmap.

However, when we alloc such memory from hugetlbfs by the following code:

......

    fd = open(&quot;/mnt/huge/hugepagefile&quot;, O_CREAT | O_RDWR, 0755);
    if (fd &lt; 0) {
        perror(&quot;Open failed&quot;);
        exit(1);
    }   
    addr = mmap(ADDR, LENGTH, PROT_READ | PROT_WRITE |     \   
        PROT_EXEC, MAP_SHARED, fd, 0); 

......
where hugetlbfs is mounted in /mnt/huge. Symbols could not be parsed correctly:

#perf report
   86.96%     0.00%  hugepage-mmap  hugepagefile      [.] 0xffffffe00000005c      
   86.96%     0.00%  hugepage-mmap  hugepagefile      [.] 0xffffffe0000000ac

This is because such mmap area&#39;s file backed is &quot;/mnt/huge/hugepagefile&quot;, a node 
in pseudo filesystem, it is useless for symbol-parsing. so wo had better recognize 
such hugetlbfs area, and rename it&#39;s filename to /tmp/perf-%d.map, just as anon-memory
and no_dso_memory do. 

This patch imports a new option named --hugetlb-file to let user tell perf
explicitly which file is in hugetlbfs, and mmap area whose backed filenode is in 
hugetlbfs would be recognized as memory without dso in function is_no_dso_memory. 

After this patch:
#perf report 
   86.96%     0.00%  hugepage-mmap  perf-182.map        [.] 0x000000200000005c 
   86.96%     0.00%  hugepage-mmap  perf-182.map        [.] 0x00000020000000ac

We can add maps info to perf-182.map for further symbols-parsing.
<span class="signed-off-by">
Signed-off-by: Hou Pengyang &lt;houpengyang@huawei.com&gt;</span>
---
 tools/perf/builtin-report.c |  3 +++
 tools/perf/util/map.c       | 10 +++++++++-
 tools/perf/util/symbol.c    |  7 +++++++
 tools/perf/util/symbol.h    |  2 ++
 4 files changed, 21 insertions(+), 1 deletion(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/tools/perf/builtin-report.c b/tools/perf/builtin-report.c</span>
<span class="p_header">index 348bed4..9b506af 100644</span>
<span class="p_header">--- a/tools/perf/builtin-report.c</span>
<span class="p_header">+++ b/tools/perf/builtin-report.c</span>
<span class="p_chunk">@@ -685,6 +685,9 @@</span> <span class="p_context"> int cmd_report(int argc, const char **argv, const char *prefix __maybe_unused)</span>
 		   &quot;only consider these symbols&quot;),
 	OPT_STRING(0, &quot;symbol-filter&quot;, &amp;report.symbol_filter_str, &quot;filter&quot;,
 		   &quot;only show symbols that (partially) match with this filter&quot;),
<span class="p_add">+    OPT_STRING(0, &quot;hugetlb-file&quot;, &amp;symbol_conf.hugetlb_list_str, &quot;file[,file...]&quot;,</span>
<span class="p_add">+           &quot;These files would be recoginized as files in hugetlbfs,&quot;</span>
<span class="p_add">+		   &quot;and JIT would be used for symbol-parsing&quot;),</span>
 	OPT_STRING(&#39;w&#39;, &quot;column-widths&quot;, &amp;symbol_conf.col_width_list_str,
 		   &quot;width[,width...]&quot;,
 		   &quot;don&#39;t try to adjust column width, use these fixed values&quot;),
<span class="p_header">diff --git a/tools/perf/util/map.c b/tools/perf/util/map.c</span>
<span class="p_header">index b5a5e9c..f919a3ad 100644</span>
<span class="p_header">--- a/tools/perf/util/map.c</span>
<span class="p_header">+++ b/tools/perf/util/map.c</span>
<span class="p_chunk">@@ -30,11 +30,19 @@</span> <span class="p_context"> static inline int is_anon_memory(const char *filename)</span>
 	       !strcmp(filename, &quot;/anon_hugepage (deleted)&quot;);
 }
 
<span class="p_add">+static inline int is_hugetlb_memory(const char *filename)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return (symbol_conf.hugetlb_list != NULL) &amp;&amp; </span>
<span class="p_add">+			(strlist__has_entry(symbol_conf.hugetlb_list,</span>
<span class="p_add">+						filename));</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static inline int is_no_dso_memory(const char *filename)
 {
 	return !strncmp(filename, &quot;[stack&quot;, 6) ||
 	       !strncmp(filename, &quot;/SYSV&quot;,5)   ||
<span class="p_del">-	       !strcmp(filename, &quot;[heap]&quot;);</span>
<span class="p_add">+	       !strcmp(filename, &quot;[heap]&quot;) ||</span>
<span class="p_add">+		   is_hugetlb_memory(filename);</span>
 }
 
 static inline int is_android_lib(const char *filename)
<span class="p_header">diff --git a/tools/perf/util/symbol.c b/tools/perf/util/symbol.c</span>
<span class="p_header">index 48b588c..c3855fd 100644</span>
<span class="p_header">--- a/tools/perf/util/symbol.c</span>
<span class="p_header">+++ b/tools/perf/util/symbol.c</span>
<span class="p_chunk">@@ -1990,6 +1990,10 @@</span> <span class="p_context"> int symbol__init(struct perf_session_env *env)</span>
 		       symbol_conf.sym_list_str, &quot;symbol&quot;) &lt; 0)
 		goto out_free_tid_list;
 
<span class="p_add">+	if (setup_list(&amp;symbol_conf.hugetlb_list,</span>
<span class="p_add">+		       symbol_conf.hugetlb_list_str, &quot;hugetlb&quot;) &lt; 0)</span>
<span class="p_add">+       goto out_free_hugetlb_list;</span>
<span class="p_add">+</span>
 	/*
 	 * A path to symbols of &quot;/&quot; is identical to &quot;&quot;
 	 * reset here for simplicity.
<span class="p_chunk">@@ -2007,6 +2011,8 @@</span> <span class="p_context"> int symbol__init(struct perf_session_env *env)</span>
 	symbol_conf.initialized = true;
 	return 0;
 
<span class="p_add">+out_free_hugetlb_list:</span>
<span class="p_add">+	strlist__delete(symbol_conf.hugetlb_list);</span>
 out_free_tid_list:
 	intlist__delete(symbol_conf.tid_list);
 out_free_pid_list:
<span class="p_chunk">@@ -2025,6 +2031,7 @@</span> <span class="p_context"> void symbol__exit(void)</span>
 	strlist__delete(symbol_conf.sym_list);
 	strlist__delete(symbol_conf.dso_list);
 	strlist__delete(symbol_conf.comm_list);
<span class="p_add">+	strlist__delete(symbol_conf.hugetlb_list);</span>
 	intlist__delete(symbol_conf.tid_list);
 	intlist__delete(symbol_conf.pid_list);
 	vmlinux_path__exit();
<span class="p_header">diff --git a/tools/perf/util/symbol.h b/tools/perf/util/symbol.h</span>
<span class="p_header">index bef47ead..81fb99c 100644</span>
<span class="p_header">--- a/tools/perf/util/symbol.h</span>
<span class="p_header">+++ b/tools/perf/util/symbol.h</span>
<span class="p_chunk">@@ -116,12 +116,14 @@</span> <span class="p_context"> struct symbol_conf {</span>
 	const char	*guestmount;
 	const char	*dso_list_str,
 			*comm_list_str,
<span class="p_add">+			*hugetlb_list_str,</span>
 			*pid_list_str,
 			*tid_list_str,
 			*sym_list_str,
 			*col_width_list_str;
        struct strlist	*dso_list,
 			*comm_list,
<span class="p_add">+			*hugetlb_list,</span>
 			*sym_list,
 			*dso_from_list,
 			*dso_to_list,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



