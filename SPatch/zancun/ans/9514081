
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,01/26] treewide: Constify most dma_map_ops structures - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,01/26] treewide: Constify most dma_map_ops structures</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=119921">Bart Van Assche</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 12, 2017, 7:06 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170112190718.6728-2-bart.vanassche@sandisk.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9514081/mbox/"
   >mbox</a>
|
   <a href="/patch/9514081/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9514081/">/patch/9514081/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	667F5601E7 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 12 Jan 2017 19:14:44 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 51CCD284C3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 12 Jan 2017 19:14:44 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 4475F286D9; Thu, 12 Jan 2017 19:14:44 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 15CED284C3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 12 Jan 2017 19:14:40 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751316AbdALTOY (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 12 Jan 2017 14:14:24 -0500
Received: from mail-dm3nam03on0064.outbound.protection.outlook.com
	([104.47.41.64]:56302
	&quot;EHLO NAM03-DM3-obe.outbound.protection.outlook.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1750768AbdALTIH (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 12 Jan 2017 14:08:07 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=sandiskcorp.onmicrosoft.com; s=selector1-sandisk-com;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version;
	bh=W4sZtuiMLWLS2YPMtF4EGo/XLHb5QTu8G1IQgUlFM7Y=;
	b=JHvSEy0ZnPT6TJmbZzoWG5/hV/jXTzZV5nzcb28FAzwWjiUNGG22CE1wQ32e0GylnhVELWIoC7q2o/+TPSqoHplco7ig4uPanuOSs8bjmk/4Nb6+ZNOanifsJt9Siz8vc8KdAS72P2+gJj6FcNJZKpQOoOMKTTqYp/n8Ea/bfMM=
Received: from BLUPR0201CA0027.namprd02.prod.outlook.com (10.163.116.37) by
	BN1PR02MB040.namprd02.prod.outlook.com (10.242.210.155) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P384) id
	15.1.829.7; Thu, 12 Jan 2017 19:08:04 +0000
Received: from BY2FFO11FD007.protection.gbl (2a01:111:f400:7c0c::159) by
	BLUPR0201CA0027.outlook.office365.com (2a01:111:e400:52e7::37) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P384) id 15.1.845.12 via
	Frontend Transport; Thu, 12 Jan 2017 19:08:02 +0000
Authentication-Results: spf=pass (sender IP is 63.163.107.21)
	smtp.mailfrom=sandisk.com; zytor.com; dkim=none (message not signed)
	header.d=none;zytor.com; dmarc=bestguesspass action=none
	header.from=sandisk.com;
Received-SPF: Pass (protection.outlook.com: domain of sandisk.com designates
	63.163.107.21 as permitted sender)
	receiver=protection.outlook.com; 
	client-ip=63.163.107.21; helo=milsmgep15.sandisk.com;
Received: from milsmgep15.sandisk.com (63.163.107.21) by
	BY2FFO11FD007.mail.protection.outlook.com (10.1.14.128) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P384) id
	15.1.803.8 via Frontend Transport; Thu, 12 Jan 2017 19:08:01 +0000
Received: from MILHUBIP04.sdcorp.global.sandisk.com (Unknown_Domain
	[10.201.67.162])
	(using TLS with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(Client did not present a certificate)
	by  (Symantec Messaging Gateway) with SMTP id 7C.90.65426.761D7785;
	Thu, 12 Jan 2017 10:56:39 -0800 (PST)
Received: from milsmgip12.sandisk.com (10.177.9.6) by
	MILHUBIP04.sdcorp.global.sandisk.com (10.177.9.97) with Microsoft
	SMTP Server id 14.3.319.2; Thu, 12 Jan 2017 11:07:58 -0800
X-AuditID: 0ac94369-b62949800001ff92-e1-5877d1677592
Received: from exp-402881.sdcorp.global.sandisk.com ( [10.177.9.6])     by
	(Symantec Messaging Gateway) with SMTP id 54.DF.09762.D04D7785;
	Thu, 12 Jan 2017 11:07:58 -0800 (PST)
From: Bart Van Assche &lt;bart.vanassche@sandisk.com&gt;
To: Doug Ledford &lt;dledford@redhat.com&gt;
CC: &lt;linux-rdma@vger.kernel.org&gt;, &lt;linux-kernel@vger.kernel.org&gt;,
	&quot;Greg Kroah-Hartman&quot; &lt;gregkh@linuxfoundation.org&gt;,
	Bart Van Assche &lt;bart.vanassche@sandisk.com&gt;,
	Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;,
	Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;,
	David Woodhouse &lt;dwmw2@infradead.org&gt;, Juergen Gross &lt;jgross@suse.com&gt;,
	&quot;H . Peter Anvin&quot; &lt;hpa@zytor.com&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	&lt;linux-arch@vger.kernel.org&gt;, Russell King &lt;linux@armlinux.org.uk&gt;,
	&lt;x86@kernel.org&gt;
Subject: [PATCH v2 01/26] treewide: Constify most dma_map_ops structures
Date: Thu, 12 Jan 2017 11:06:53 -0800
Message-ID: &lt;20170112190718.6728-2-bart.vanassche@sandisk.com&gt;
X-Mailer: git-send-email 2.11.0
In-Reply-To: &lt;20170112190718.6728-1-bart.vanassche@sandisk.com&gt;
References: &lt;20170112190718.6728-1-bart.vanassche@sandisk.com&gt;
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFlrIIsWRmVeSWpSXmKPExsXCddJ5kW76xfIIgyMdWhYfmlqZLS5Ob2Wx
	eHn+A6vFxJWTmS2aF69ns5i2Udxizk0ji45dX1ksLu+aw2bx7FAvi8WhqXsZLS4dWMBk8WPD
	Y1YHXo/L1y4ye2xeoeXR86aF1WPTqk42j/1z17B7fHx6i8Xj/b6rbB7rt1xl8fi8Sc7jRMsX
	1gCuKC6blNSczLLUIn27BK6M6bOXsBbsOc1aMfPCBMYGxgkXWboYOTkkBEwkDu7tYupi5OIQ
	EljKJPG09waUs41RoqfrNCNM1ZPlU9kgEhsZJaZd2sUKkmATMJL49n4m2CgRATWJTa8WsYPY
	zALvmSWmn3cHsYUFPCQ+P70PNohFQFVi79z/bCA2r4CdxNX7n1ghFshL7Gq7CGZzCthLfPt/
	CaxeCKhm14H/LCCLJQQ+skrsOdfMAtEsKHFy5hMWiGUSEgdfvGCGaFCXOLlkPtMERqFZSMpm
	ISlbwMi0ilEsNzOnODc9tcDQVK84MS8lszhbLzk/dxMjJOIydzDefeJ9iFGAg1GJh3eHTVmE
	EGtiWXFl7iFGCQ5mJRHeWefLI4R4UxIrq1KL8uOLSnNSiw8xSnOwKInzut37EiYkkJ5Ykpqd
	mlqQWgSTZeLglGpgPK+RtVluba1QfiHzQm9B/uf9T1VnHRYomteS2cL727+rec8fN0W/TX83
	X6iUOuS0u+e8xe2ZS9JfL9rLUBUeKXFy5Y9HvZk5t3l6mZcV3zljonLkS2aJ0lwO+1tq2e1P
	Be8Y2IpmSn/Zdu+JcGTQo09Hjddnn746S+B3qTe3z/bQ2Re+n0h7p8RSnJFoqMVcVJwIAL2a
	3ou0AgAA
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFvrIJMWRmVeSWpSXmKPExsXCtZGTTZfvSnmEQfNpTouDP9sYLT40tTJb
	XJzeymLx8vwHVouJKyczWzQvXs9mMW2juMWcm0YWHbu+slhc3jWHzeLZoV4Wi0NT9zJaXDqw
	gMnix4bHrA58HpevXWT22LxCy6PnTQurx6ZVnWwe++euYff4+PQWi8f7fVfZPKatOc/ksX7L
	VRaPz5vkPE60fGEN4I7isklJzcksSy3St0vgypg+ewlrwZ7TrBUzL0xgbGCccJGli5GTQ0LA
	ROLJ8qlsXYxcHEIC6xklfr1/xASSYBMwkvj2fiZYkYiAmsSmV4vYQYqYBT4yS8z9MA2sSFjA
	Q+Lz0/uMIDaLgKrE3rn/2UBsXgE7iQn956E2yEvsarvICmJzCthLfPt/CaxeCKhm14H/LBMY
	uRcwMqxiFMvNzCnOTc8sMDTSK07MS8ksztZLzs/dxAgJ1KgdjNcnmh9iZOLglGpgbMxnD7yX
	Jhzw/TRLV2PRI6XDfBcW1yXM1mx2WK3x5lNjg+xj/cSs2Gfsi+a9TmGIutdmJyBybK3jNyUD
	wcNLbujsefhyv8IUy4UHdQ6ea+d6ZrbmyY2ujQkGB17Oe9T0akPEgYxTa6M7dv1SyHtkHK0g
	Md+8qv/IT8FHbbvkVHN3Fh/9Urn2jRJLcUaioRZzUXEiAHO/MxIEAgAA
MIME-Version: 1.0
Content-Type: text/plain
X-EOPAttributedMessage: 0
X-MS-Office365-Filtering-HT: Tenant
X-Forefront-Antispam-Report: CIP:63.163.107.21; IPV:NLI; CTRY:US; EFV:NLI;
	SFV:NSPM;
	SFS:(10009020)(6009001)(7916002)(39410400002)(39840400002)(39850400002)(39450400003)(39860400002)(2980300002)(438002)(189002)(199003)(106466001)(76176999)(33646002)(5003940100001)(36756003)(1076002)(50986999)(54906002)(77096006)(38730400001)(47776003)(189998001)(97736004)(69596002)(48376002)(7416002)(50466002)(305945005)(575784001)(356003)(86362001)(92566002)(8676002)(81166006)(81156014)(4326007)(2950100002)(68736007)(110136003)(2906002)(6916009)(5660300001)(6666003)(626004)(50226002)(2270400002)(8936002)(579004)(559001)(569005);
	DIR:OUT; SFP:1101; SCL:1; SRVR:BN1PR02MB040;
	H:milsmgep15.sandisk.com; FPR:; SPF:Pass;
	PTR:InfoDomainNonexistent; MX:1; A:1; LANG:en; 
X-Microsoft-Exchange-Diagnostics: 1; BY2FFO11FD007;
	1:ZlIjqFrxHzhnR5o7jmleJl+Kt+NHwnHAyLIeV+x2coBvQ3vrRlJyo9xMIWVPJIAnTB0dhN6YG8K+5iGbgSxUfif3mSbxzMhJONxBQztIPTsEoqt/4JNyC5Y9Aw7ukJKL/a5qEdQsYi0Fe/tXz4HCmSVz82gMGkbPXmginyPXDMx7xnSgdT1mPYaDFoHk0UAY/zu3Fq3QXyJHXVwdmf54vlpmFvyP9xdGLJNzdtD/Ds2yNXuJmK1241IdrlA5DuJC5SCkFiJJCymFkFsMsHPrzyAEYvDoD3HsxUflJ05m30Ik51C5lIfh1VbhnU+EtXgtd7CnNEfzzqix+iPBAfaia7NK3aK13CH4hJkY7cbehWr4ZGLm6FaiFkgP3wm8kCwncpGKa6H0P5P2ozSr82mw2AWM1hVpe0bzX6VYtYwKKbSQGaX+YJkhs7b5pR6xU28LKjbDjjfNhQ/Ma47vWrdRUXmig/GqF4q5/stpbRXLOlSLgdSG0FTI2ojJkLTWbkA5
X-MS-Office365-Filtering-Correlation-Id: ffebcb4e-53d6-4160-bc96-08d43b1e544f
X-Microsoft-Antispam: UriScan:; BCL:0; PCL:0; RULEID:(22001)(8251501002);
	SRVR:BN1PR02MB040; 
X-Microsoft-Exchange-Diagnostics: 1; BN1PR02MB040;
	3:luDeD/ZW3O5zvc6Ju6JV5c9xFjICpgPSUCotl3CGWhJeE2uIq7mVK//iqbAQdP3Ln/AtLvfhkVFMOFBqcK6TxiZamPxqIiqAEnLsjRGQIxk80wH5gxsH5E3x10ZjVPIiCPuDbsaU4dR46UPpittS3/zhMkQg2RDV4mj4tHxyH0Sy+27ZOUDoeZq9PuFyFrJEUJFITYaMxRn34K8ko2KrmtiOa/p+kMJ+YW4thujFFcmak3xBQ9rSwwKrQwzFNFG9Nq+0iH1VkpaekPHU6cuYNkClBiDyWqceGmc5o6HDKqLR0bU71DR1nK3Yl5ueP7JGQeuq/Rr9HQovamgWBW+F+6FQBLfBa4tQYmQN4e8962HC3U2iozoq/GtxpePudcStnDrVPp/YVoUkPclZbICEjw==
X-Microsoft-Exchange-Diagnostics: 1; BN1PR02MB040;
	25:8h3czEa7FXK1BU8Hj1SZ+O2QCguCod3qWOZwEZr2RtUwLaWjqeorkkpjhSQ+STAR/kWpsGZaCLD7hQXJz8sZuUzHy7+2d1jDjLu2VZlsHTolJ68dDnhvs75nq5UF+f8UwfLJv0HY11Q4pvRAh3DDSRvRFfsIG8n6+5DpvEbe5tFD+BMvA/WbOKISJhH85zy3WyM00VaQT/QjPKcjcDGj0dqX2aOmetupKfqj8pI/76wAqVAj0RcIl/aa81Uv0biOuwKBbawqLzheQNwFbJ3Es7RaCiUklibZ4nswEWlCWTzTQW6r7ncyvrOcpx/3qkbHCJBp2DSUuGXkGFrfM2wmVveyfxHIOVAC2onZM32II+OSuUAvqbh+csIobEEmShPWD8ieCtBt55gAFPqJ9/E8dkkXjqqs1+PVWy1T6frqTSRhGvCPyomfHQygVPLbL4BDu31R2wmw6thSjXUOQRXWpcN3jZNZasRV5rYB0GcGd/e8ICWikZiOhwveOci1qlSadxL/MpRY/d8nMmyDa7nO83uqeAZ7qohWCuQZGCB1iusqSRIXJ8iYjJMueT374uFteZ4MhMdWz7L9ubO0UP7V1RTVfT5g2qQOY2SUMu1x2tNRozrVJKSmioMDABidZd6zopz9n0icAhuYX8jgf/00/kw5aYaQCxX55MmVv6JYCDX4yn74ooBOW2AFbTcQguT2gJgEBnzUDiNPu/VQNNiMbHLLHvlN9uMyVAQzH+lxrxlpub7IPJhhEEJKp54cHXWPIeJb+a5YrEV4qamKElNWGnMrKtAG0/ohqZ8+UYe4s/VaSlVjmJDNYtjN5Wa2aOatMgJHI5hB6hppWGsPUd7ZxKPaaClJp/uFDL/yaVId27E=
X-Microsoft-Exchange-Diagnostics: 1; BN1PR02MB040;
	31:9Uec+lZCzjgyIWtXs0dbYkYbAqkfNRdA/2KHOQW1gZxBwFiHWsZpL2DmJIF6y08kjWYEaqdgN91psaMI/NNOi93AoBogIzFK+T92Lsw/0a5EMPUIHAXudSIxgPJSh+Werk4fa1O68V3TbTodpTDgdwk6ysmGqK+352Pt62d4+kB+cDXswIOlwyaJ5kDM4DooKwQylvR4OaylLiXRWIruTIBVSq59hHPl+7X08PMZHK9svqW+UwHnnQfHvHmt7gFoQhBJ3PfD2YLFbXYz2nltwigDBGNx8fHpbeGN23r0cLE=;
	20:C9pgKNbUZBowSGa6qGc3nRHBETT047Hia4Uh8+PEVFIxUAZGIGDwVki3R9OLQV8H+NY7/4L+6HmpLfSHRnU4wGzC30IL+hOpYvF2jiq2RUHlPxaevX6UHZDL3PxaJ8PNUZsJbW9Cyo2sY+hgtUAvVet6y1S5RujeWJ7432N+AK9KlppVYndrlQrg9ktY0ZIdUGaGQoW57waQVyge2M7h5wpgiwhzMTd9TcN4KAdEE0xaF9Y/z4zR816NRV0SFbn8o4oJsdeeCdns3cQ3qRcIReTO/E1cknmGXgiu092ebJtfgkuVOMsSz5f6rlOK+PUZlUyOGaQcwAa6yrcL58X8zfPPHL6RzBfAkdIqvVrSi6Y6AStl2nQHlqw5eFbL/Ce+poknV+KQEIK4X8/rT1iC0NrNuF8nbrzNyA87YB1fxVfGMqHs7ZqmuvpQz/OBECz8u48sLcHZx1LRerCdjzE2lqNQZmAy6fl+7j9/h5E5SDE0WxbRIfNo2PGKm8u8q8t5
X-Microsoft-Antispam-PRVS: &lt;BN1PR02MB040EEA3410B1EAA7DC501F681790@BN1PR02MB040.namprd02.prod.outlook.com&gt;
X-Exchange-Antispam-Report-Test: UriScan:(9452136761055)(146099531331640)(42932892334569); 
X-Exchange-Antispam-Report-CFA-Test: BCL:0; PCL:0;
	RULEID:(6040375)(601004)(2401047)(13016025)(13018025)(5005006)(8121501046)(3002001)(10201501046)(6055026)(6041248)(20161123562025)(20161123555025)(20161123564025)(20161123560025)(6072148);
	SRVR:BN1PR02MB040; BCL:0; PCL:0; RULEID:; SRVR:BN1PR02MB040; 
X-Microsoft-Exchange-Diagnostics: 1; BN1PR02MB040;
	4:99ETHzmXMuvsDlYfjo+A5vSfbbg3tPRHrsK/Wie6cfUfi72Ob7WQYLAHK1XmoshNGQkC4txsD8stuOdo5jEZ5LNN0If/vL79LTVV02iiV5jBAQEVYvbxAy/EWUvU7ak1kCrdQ7Syd1ogHxyg0yEMPi4htSeQ5Wf9g/VugvfRfaG08Oc7Qg7Fad+ts4X9zYOhKVeClRl+Bn6R4CgQMFLFE+N3eFoSbcYHq/zUVeLrQd91Y2ORcD1AT/ThpJ6MhMOZHixxF6DvnWaX2Po2xk7BlNqhcgGu+5z9VGZilcOa3Qa8ZSxUVl1r41q1xTmN63eCVeJvMfC06b7nIgF21TDhXOzIg+piGbS0SWsCCLMhkvbWr9hpPJh6QjpLMhIqV9saW/dBBwv4oBU+2gPvSy4DErPxe5AVstOx01Engb+hYEdyyT9EWXsFp/+E/yUNWvXQAjWfTASprl+cAEYtdCpSxQ5Z3qsaFCZOO0CxBOXiTpk/Xp/HwzvqplB1I0tJIpla2mvN2bjhRCRHPYGghREW7gipp02XJ8ra5WfmEWPwAUnVgp5VQ8va5613vBhrumUkzu/iDUDgESjnsM3sryIE6DrzHHkos50QqOoMxZdRhEr0kqPxnF8UAM2jUlNMZLYg1pqO8r3QO9+L0byVfVZsJcW2GV2BurzKBZhvdvcFw4Jq2Qt69V/wdqCz6gqD7nwuLbEBgGEVy//LYo4kL0/0a0+YFrn9lpOzY4/M9GvhorI=
X-Forefront-PRVS: 018577E36E
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1; BN1PR02MB040;
	23:Y35Q4wZRTxZpbtqNLXEaGzWZL7lGt3jvh6Xb2FuflZ?=
	=?us-ascii?Q?TZXfmJmXc94v6gdHCuXf8xm/mIDSw/ZJE6vwPsux5n+90BTP2NqtEmsBdJWq?=
	=?us-ascii?Q?z+MXo60sVFwm5v9IrC8P0txF5GmOiAr019S1rFjmQvP2uyhwq2zjRRKLXhMm?=
	=?us-ascii?Q?BL6rlvO9EOxKM3rB8YBAFjk/oIUqMrdMmyHBz56lP34BZchyjx+EwItpQZFl?=
	=?us-ascii?Q?4jrgRqmJRXNqjNOsnxqTgiZUvTJQpet9n/E+OTclpSAqHUpZ1PRZz6DX+z1e?=
	=?us-ascii?Q?L/0LegXZi50GbAzCF2Zz+sMpfwlm9h+JazQ+eQ2EJ5F1PA60CSnaiINj8TRE?=
	=?us-ascii?Q?oXZc4LueAxxsSbVpdSabP/gvM52JPhO3ZjiKhqDduQ9kENH52d7nJjNLUAZO?=
	=?us-ascii?Q?FIs5t5pgkekjHjoQXUHv4Ys23QDzflx91roqnjUMZ3AQcLjv9uabA6+p9YKQ?=
	=?us-ascii?Q?ElGUwFAxRr0D1ZyJLB+179V5CCtJVCCzI8Bwf134eW1Qi/m+F+dZX18ilO/m?=
	=?us-ascii?Q?3rJT7tiN69eXaRHAroo36WgJezWuF5fRMNNDfikGxbGAZIOg8XnGfWY3tp4j?=
	=?us-ascii?Q?66qKRnjsE7PjzPCt00qkI6U5CIjtEs/k9KIWZUiedeb/ecAXXQfwbJj6DMnY?=
	=?us-ascii?Q?btXlamhYOcf+FC8ivsxaWNH5NHg6WCZi4o0ZXqphxv1Y4p8KmQYpX5QWXJBl?=
	=?us-ascii?Q?Ld+FzcvT57khSVwz1t3keUf0MmeLGe2013dU4vViMSWZAoWRAiQk4/B838uF?=
	=?us-ascii?Q?UO/rdaaXr68r/XH8QKQ/wAAGI6Wok76FyRol2U51cGS4hdymytclTaJ/1OOS?=
	=?us-ascii?Q?k0DE20j6jOBw4GlYnICjSMP2vLh23dOw/M64Coxf1nR9mxZ6zJRpN6vZBA74?=
	=?us-ascii?Q?49HKmoK1zhvhxx22SXiBmOJ6XZWm29A04SMfHZTvIUaiHYIgGxxuHMJGBSeS?=
	=?us-ascii?Q?zU8gluhDbY/PwJEEL48Yiv5OQSyXQCC+B+X9qiLRa+UYCNM74KrvRAZC7FO+?=
	=?us-ascii?Q?jlKd8cYd/S81L7k/sHmZLfrny5DZ9/16pEdFOV0pJ13GxBYRonVXEh5r4jLj?=
	=?us-ascii?Q?HwcK9ycOwCQYeoG/wEK5m5BONeUaaYkLgYmoZCrXYUOTQyyE4O9Sh4gnjdph?=
	=?us-ascii?Q?QnZix+PbgxYXDKkUgStqXf6I+al05JekKhY5Ln77TJ8HRQp3/WMSozqsNe91?=
	=?us-ascii?Q?e4ppf58069+rojK2ookNKQl6G9Ao69fwJkZkf510DPtUb6Z9sAGbUWrQ=3D?=
	=?us-ascii?Q?=3D?=
X-Microsoft-Exchange-Diagnostics: 1; BN1PR02MB040;
	6:LVdLI3Ql75YrVKAV1zdGnr0WzNLYfPmhR7C5CLCHmXMGZXkQzhtPo5ykgSmj8edS/GshPK+IBXe2c3DjCaEkVV2/EA6z5sDELqMKcwzY3FtqB/KPqC/chHEjViNtpICa36E0832HWAnmxeA22JRL8AeEnSvjLQm6YhtUlzVsU/i7U/pimqRZM9PnUrYe1CskcWoqMtS4agIvXRuctrKo07hG5kyNxZTRI+WzHSr6gP7Yq2WOXgNW2dQ8FxD8IpUn4fufYGE7aO3q+Amr4QG/A5VIw65KhbzmNz7i5jWfsms9LgkeRjFe2rADjqXdZoYGzfcJr5TOfSo/GgOaOhDp+TEKPCEX9qRw/AJ0sKkRMJmncliSi9ioVYFjS6+JNF2DVlVQmRUOscP88EDGzsLL1WVMTW2xmSXD9/5CAbtEP/sBIqJrnNm3/4yjIy4LoHN7dzgr8nP1wQnhb78gVXNMWw==;
	5:B2GJm8OqQ0rakvWqX27ejBlVFdMyEr41ooqf++2E+igDB2EyACF7OvhQMTxvEDS2XpC1ov8VP2a/yX1U7ZdsoZdrbo5tLKvEoTfGxW17fK/4iQr7+o573ljRDDuMCcRHp0DVXPjhW8Z/F2XE0NFlQQ==;
	24:ytTm2I2YH1APLiSu+g+Tn1Uzb96uBc8y1KwWYBshn76umEPd4BKBiU/re+rOTtMJEKKdu5EpTyJ84KG42LQTe+PvVKcLayVGOrawmj+Dwjk=
SpamDiagnosticOutput: 1:99
SpamDiagnosticMetadata: NSPM
X-Microsoft-Exchange-Diagnostics: 1; BN1PR02MB040;
	7:JF4d7GGqcQ9C9rSDgRcXYvyOPl0ZW9HAW+NzT8A+5JujCRBycKb4zCroyencsQ/Gl5U0fqmZWrh//PyWA7UwcUuadHL7kn4JFxuaydwNLJ5f1rHVaxY2tSw9fCHBGa8y/bepPXBwF2OR0+qvPahCqov/ye6hDaJ8k+yqLiYl9Nt/dv8Tf/XigFyC5Ujl+6Aa6EWBhU1hoyMugwrGUiLDjVzYFUy9DTIDPpEM6h0uuqMX1n8YtY3Z3ZKLtGYzMbsrBics9REvi866vPd58LpELAEu8yoHXGsQ6O2bQqZnYZdfp6JkFRjL+dhqLFzUplm0fYev260BL2rZfaU04897bM7htU1QNh+9hFQL/Px8EInTjTsELgFxcOywRkUx9mmrkUq4v/xX2A52tvDb4VE6EM8/QU2b94nAYByMeHJncilJ0HKhn7So6a4q40rNPeMW/RGYK3QokW2H91Pi139ufg==
X-OriginatorOrg: sandisk.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 12 Jan 2017 19:08:01.1440
	(UTC)
X-MS-Exchange-CrossTenant-Id: fcd9ea9c-ae8c-460c-ab3c-3db42d7ac64d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=fcd9ea9c-ae8c-460c-ab3c-3db42d7ac64d;
	Ip=[63.163.107.21]; Helo=[milsmgep15.sandisk.com]
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: BN1PR02MB040
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=119921">Bart Van Assche</a> - Jan. 12, 2017, 7:06 p.m.</div>
<pre class="content">
Most dma_map_ops structures are never modified. Constify these
structures such that these can be write-protected. This patch
has been generated as follows:

git grep -l &#39;struct dma_map_ops&#39; |
  xargs -d\\n sed -i \
    -e &#39;s/struct dma_map_ops/const struct dma_map_ops/g&#39; \
    -e &#39;s/const struct dma_map_ops {/struct dma_map_ops {/g&#39; \
    -e &#39;s/^const struct dma_map_ops;$/struct dma_map_ops;/&#39; \
    -e &#39;s/const const struct dma_map_ops /const struct dma_map_ops /g&#39;;
sed -i -e &#39;s/const \(struct dma_map_ops intel_dma_ops\)/\1/&#39; \
  $(git grep -l &#39;struct dma_map_ops intel_dma_ops&#39;);
sed -i -e &#39;s/const \(struct dma_map_ops dma_iommu_ops\)/\1/&#39; \
  $(git grep -l &#39;struct dma_map_ops&#39; | grep ^arch/powerpc);
sed -i -e &#39;/^struct vmd_dev {$/,/^};$/ s/const \(struct dma_map_ops[[:blank:]]dma_ops;\)/\1/&#39; \
       -e &#39;/^static void vmd_setup_dma_ops/,/^}$/ s/const \(struct dma_map_ops \*dest\)/\1/&#39; \
       -e &#39;s/const \(struct dma_map_ops \*dest = \&amp;vmd-&gt;dma_ops\)/\1/&#39; \
    drivers/pci/host/*.c
sed -i -e &#39;/^void __init pci_iommu_alloc(void)$/,/^}$/ s/dma_ops-&gt;/intel_dma_ops./&#39; arch/ia64/kernel/pci-dma.c
sed -i -e &#39;s/static const struct dma_map_ops sn_dma_ops/static struct dma_map_ops sn_dma_ops/&#39; arch/ia64/sn/pci/pci_dma.c
<span class="signed-off-by">
Signed-off-by: Bart Van Assche &lt;bart.vanassche@sandisk.com&gt;</span>
<span class="reviewed-by">Reviewed-by: Christoph Hellwig &lt;hch@lst.de&gt;</span>
Cc: Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;
Cc: Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;
Cc: David Woodhouse &lt;dwmw2@infradead.org&gt;
Cc: Juergen Gross &lt;jgross@suse.com&gt;
Cc: H. Peter Anvin &lt;hpa@zytor.com&gt;
Cc: Ingo Molnar &lt;mingo@redhat.com&gt;
Cc: linux-arch@vger.kernel.org
Cc: linux-kernel@vger.kernel.org
Cc: Russell King &lt;linux@armlinux.org.uk&gt;
Cc: x86@kernel.org
---
 arch/alpha/include/asm/dma-mapping.h               |  4 +--
 arch/alpha/kernel/pci-noop.c                       |  4 +--
 arch/alpha/kernel/pci_iommu.c                      |  4 +--
 arch/arc/include/asm/dma-mapping.h                 |  4 +--
 arch/arc/mm/dma.c                                  |  2 +-
 arch/arm/common/dmabounce.c                        |  2 +-
 arch/arm/include/asm/device.h                      |  2 +-
 arch/arm/include/asm/dma-mapping.h                 | 10 +++---
 arch/arm/mm/dma-mapping.c                          | 22 ++++++------
 arch/arm/xen/mm.c                                  |  4 +--
 arch/arm64/include/asm/device.h                    |  2 +-
 arch/arm64/include/asm/dma-mapping.h               |  6 ++--
 arch/arm64/mm/dma-mapping.c                        |  6 ++--
 arch/avr32/include/asm/dma-mapping.h               |  4 +--
 arch/avr32/mm/dma-coherent.c                       |  2 +-
 arch/blackfin/include/asm/dma-mapping.h            |  4 +--
 arch/blackfin/kernel/dma-mapping.c                 |  2 +-
 arch/c6x/include/asm/dma-mapping.h                 |  4 +--
 arch/c6x/kernel/dma.c                              |  2 +-
 arch/cris/arch-v32/drivers/pci/dma.c               |  2 +-
 arch/cris/include/asm/dma-mapping.h                |  6 ++--
 arch/frv/include/asm/dma-mapping.h                 |  4 +--
 arch/frv/mb93090-mb00/pci-dma-nommu.c              |  2 +-
 arch/frv/mb93090-mb00/pci-dma.c                    |  2 +-
 arch/h8300/include/asm/dma-mapping.h               |  4 +--
 arch/h8300/kernel/dma.c                            |  2 +-
 arch/hexagon/include/asm/dma-mapping.h             |  4 +--
 arch/hexagon/kernel/dma.c                          |  4 +--
 arch/ia64/hp/common/hwsw_iommu.c                   |  4 +--
 arch/ia64/hp/common/sba_iommu.c                    |  4 +--
 arch/ia64/include/asm/dma-mapping.h                |  2 +-
 arch/ia64/include/asm/machvec.h                    |  4 +--
 arch/ia64/kernel/dma-mapping.c                     |  4 +--
 arch/ia64/kernel/pci-dma.c                         | 10 +++---
 arch/ia64/kernel/pci-swiotlb.c                     |  2 +-
 arch/m32r/include/asm/device.h                     |  2 +-
 arch/m32r/include/asm/dma-mapping.h                |  2 +-
 arch/m68k/include/asm/dma-mapping.h                |  4 +--
 arch/m68k/kernel/dma.c                             |  2 +-
 arch/metag/include/asm/dma-mapping.h               |  4 +--
 arch/metag/kernel/dma.c                            |  2 +-
 arch/microblaze/include/asm/dma-mapping.h          |  4 +--
 arch/microblaze/kernel/dma.c                       |  2 +-
 arch/mips/cavium-octeon/dma-octeon.c               |  4 +--
 arch/mips/include/asm/device.h                     |  2 +-
 arch/mips/include/asm/dma-mapping.h                |  4 +--
 .../include/asm/mach-cavium-octeon/dma-coherence.h |  2 +-
 arch/mips/include/asm/netlogic/common.h            |  2 +-
 arch/mips/loongson64/common/dma-swiotlb.c          |  2 +-
 arch/mips/mm/dma-default.c                         |  4 +--
 arch/mips/netlogic/common/nlm-dma.c                |  2 +-
 arch/mn10300/include/asm/dma-mapping.h             |  4 +--
 arch/mn10300/mm/dma-alloc.c                        |  2 +-
 arch/nios2/include/asm/dma-mapping.h               |  4 +--
 arch/nios2/mm/dma-mapping.c                        |  2 +-
 arch/openrisc/include/asm/dma-mapping.h            |  4 +--
 arch/openrisc/kernel/dma.c                         |  2 +-
 arch/parisc/include/asm/dma-mapping.h              |  8 ++---
 arch/parisc/kernel/drivers.c                       |  2 +-
 arch/parisc/kernel/pci-dma.c                       |  4 +--
 arch/powerpc/include/asm/device.h                  |  2 +-
 arch/powerpc/include/asm/dma-mapping.h             |  6 ++--
 arch/powerpc/include/asm/pci.h                     |  4 +--
 arch/powerpc/include/asm/swiotlb.h                 |  2 +-
 arch/powerpc/kernel/dma-swiotlb.c                  |  2 +-
 arch/powerpc/kernel/dma.c                          |  6 ++--
 arch/powerpc/kernel/pci-common.c                   |  6 ++--
 arch/powerpc/platforms/cell/iommu.c                |  4 +--
 arch/powerpc/platforms/powernv/npu-dma.c           |  2 +-
 arch/powerpc/platforms/ps3/system-bus.c            |  4 +--
 arch/powerpc/platforms/pseries/ibmebus.c           |  2 +-
 arch/powerpc/platforms/pseries/vio.c               |  2 +-
 arch/s390/include/asm/device.h                     |  2 +-
 arch/s390/include/asm/dma-mapping.h                |  4 +--
 arch/s390/pci/pci_dma.c                            |  2 +-
 arch/sh/include/asm/dma-mapping.h                  |  4 +--
 arch/sh/kernel/dma-nommu.c                         |  2 +-
 arch/sh/mm/consistent.c                            |  2 +-
 arch/sparc/include/asm/dma-mapping.h               |  8 ++---
 arch/sparc/kernel/iommu.c                          |  4 +--
 arch/sparc/kernel/ioport.c                         |  8 ++---
 arch/sparc/kernel/pci_sun4v.c                      |  2 +-
 arch/tile/include/asm/device.h                     |  2 +-
 arch/tile/include/asm/dma-mapping.h                | 12 +++----
 arch/tile/kernel/pci-dma.c                         | 24 ++++++-------
 arch/unicore32/include/asm/dma-mapping.h           |  4 +--
 arch/unicore32/mm/dma-swiotlb.c                    |  2 +-
 arch/x86/include/asm/device.h                      |  4 +--
 arch/x86/include/asm/dma-mapping.h                 |  4 +--
 arch/x86/include/asm/iommu.h                       |  2 +-
 arch/x86/kernel/amd_gart_64.c                      |  2 +-
 arch/x86/kernel/pci-calgary_64.c                   |  2 +-
 arch/x86/kernel/pci-dma.c                          |  4 +--
 arch/x86/kernel/pci-nommu.c                        |  2 +-
 arch/x86/kernel/pci-swiotlb.c                      |  2 +-
 arch/x86/pci/sta2x11-fixup.c                       |  2 +-
 arch/x86/xen/pci-swiotlb-xen.c                     |  2 +-
 arch/xtensa/include/asm/device.h                   |  2 +-
 arch/xtensa/include/asm/dma-mapping.h              |  4 +--
 arch/xtensa/kernel/pci-dma.c                       |  2 +-
 drivers/iommu/amd_iommu.c                          |  4 +--
 drivers/misc/mic/bus/mic_bus.c                     |  2 +-
 drivers/misc/mic/bus/scif_bus.c                    |  2 +-
 drivers/misc/mic/bus/scif_bus.h                    |  2 +-
 drivers/misc/mic/bus/vop_bus.c                     |  2 +-
 drivers/misc/mic/host/mic_boot.c                   |  4 +--
 drivers/parisc/ccio-dma.c                          |  2 +-
 drivers/parisc/sba_iommu.c                         |  2 +-
 drivers/pci/host/vmd.c                             |  2 +-
 include/linux/dma-mapping.h                        | 42 +++++++++++-----------
 include/linux/mic_bus.h                            |  2 +-
 include/xen/arm/hypervisor.h                       |  2 +-
 lib/dma-noop.c                                     |  2 +-
 113 files changed, 227 insertions(+), 227 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/alpha/include/asm/dma-mapping.h b/arch/alpha/include/asm/dma-mapping.h</span>
<span class="p_header">index c63b6ac19ee5..d3480562411d 100644</span>
<span class="p_header">--- a/arch/alpha/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/alpha/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -1,9 +1,9 @@</span> <span class="p_context"></span>
 #ifndef _ALPHA_DMA_MAPPING_H
 #define _ALPHA_DMA_MAPPING_H
 
<span class="p_del">-extern struct dma_map_ops *dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops *dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return dma_ops;
 }
<span class="p_header">diff --git a/arch/alpha/kernel/pci-noop.c b/arch/alpha/kernel/pci-noop.c</span>
<span class="p_header">index bb152e21e5ae..ffbdb3fb672f 100644</span>
<span class="p_header">--- a/arch/alpha/kernel/pci-noop.c</span>
<span class="p_header">+++ b/arch/alpha/kernel/pci-noop.c</span>
<span class="p_chunk">@@ -128,7 +128,7 @@</span> <span class="p_context"> static int alpha_noop_supported(struct device *dev, u64 mask)</span>
 	return mask &lt; 0x00ffffffUL ? 0 : 1;
 }
 
<span class="p_del">-struct dma_map_ops alpha_noop_ops = {</span>
<span class="p_add">+const struct dma_map_ops alpha_noop_ops = {</span>
 	.alloc			= alpha_noop_alloc_coherent,
 	.free			= dma_noop_free_coherent,
 	.map_page		= dma_noop_map_page,
<span class="p_chunk">@@ -137,5 +137,5 @@</span> <span class="p_context"> struct dma_map_ops alpha_noop_ops = {</span>
 	.dma_supported		= alpha_noop_supported,
 };
 
<span class="p_del">-struct dma_map_ops *dma_ops = &amp;alpha_noop_ops;</span>
<span class="p_add">+const struct dma_map_ops *dma_ops = &amp;alpha_noop_ops;</span>
 EXPORT_SYMBOL(dma_ops);
<span class="p_header">diff --git a/arch/alpha/kernel/pci_iommu.c b/arch/alpha/kernel/pci_iommu.c</span>
<span class="p_header">index 451fc9cdd323..7fd2329038a3 100644</span>
<span class="p_header">--- a/arch/alpha/kernel/pci_iommu.c</span>
<span class="p_header">+++ b/arch/alpha/kernel/pci_iommu.c</span>
<span class="p_chunk">@@ -939,7 +939,7 @@</span> <span class="p_context"> static int alpha_pci_mapping_error(struct device *dev, dma_addr_t dma_addr)</span>
 	return dma_addr == 0;
 }
 
<span class="p_del">-struct dma_map_ops alpha_pci_ops = {</span>
<span class="p_add">+const struct dma_map_ops alpha_pci_ops = {</span>
 	.alloc			= alpha_pci_alloc_coherent,
 	.free			= alpha_pci_free_coherent,
 	.map_page		= alpha_pci_map_page,
<span class="p_chunk">@@ -950,5 +950,5 @@</span> <span class="p_context"> struct dma_map_ops alpha_pci_ops = {</span>
 	.dma_supported		= alpha_pci_supported,
 };
 
<span class="p_del">-struct dma_map_ops *dma_ops = &amp;alpha_pci_ops;</span>
<span class="p_add">+const struct dma_map_ops *dma_ops = &amp;alpha_pci_ops;</span>
 EXPORT_SYMBOL(dma_ops);
<span class="p_header">diff --git a/arch/arc/include/asm/dma-mapping.h b/arch/arc/include/asm/dma-mapping.h</span>
<span class="p_header">index 266f11c9bd59..fdff3aa60052 100644</span>
<span class="p_header">--- a/arch/arc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/arc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -18,9 +18,9 @@</span> <span class="p_context"></span>
 #include &lt;plat/dma.h&gt;
 #endif
 
<span class="p_del">-extern struct dma_map_ops arc_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops arc_dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return &amp;arc_dma_ops;
 }
<span class="p_header">diff --git a/arch/arc/mm/dma.c b/arch/arc/mm/dma.c</span>
<span class="p_header">index 08450a1a5b5f..2a07e6ecafbd 100644</span>
<span class="p_header">--- a/arch/arc/mm/dma.c</span>
<span class="p_header">+++ b/arch/arc/mm/dma.c</span>
<span class="p_chunk">@@ -218,7 +218,7 @@</span> <span class="p_context"> static int arc_dma_supported(struct device *dev, u64 dma_mask)</span>
 	return dma_mask == DMA_BIT_MASK(32);
 }
 
<span class="p_del">-struct dma_map_ops arc_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops arc_dma_ops = {</span>
 	.alloc			= arc_dma_alloc,
 	.free			= arc_dma_free,
 	.mmap			= arc_dma_mmap,
<span class="p_header">diff --git a/arch/arm/common/dmabounce.c b/arch/arm/common/dmabounce.c</span>
<span class="p_header">index 75055df1cda3..9b1b7be2ec0e 100644</span>
<span class="p_header">--- a/arch/arm/common/dmabounce.c</span>
<span class="p_header">+++ b/arch/arm/common/dmabounce.c</span>
<span class="p_chunk">@@ -452,7 +452,7 @@</span> <span class="p_context"> static int dmabounce_set_mask(struct device *dev, u64 dma_mask)</span>
 	return arm_dma_ops.set_dma_mask(dev, dma_mask);
 }
 
<span class="p_del">-static struct dma_map_ops dmabounce_ops = {</span>
<span class="p_add">+static const struct dma_map_ops dmabounce_ops = {</span>
 	.alloc			= arm_dma_alloc,
 	.free			= arm_dma_free,
 	.mmap			= arm_dma_mmap,
<span class="p_header">diff --git a/arch/arm/include/asm/device.h b/arch/arm/include/asm/device.h</span>
<span class="p_header">index 4111592f0130..d8a572f9c187 100644</span>
<span class="p_header">--- a/arch/arm/include/asm/device.h</span>
<span class="p_header">+++ b/arch/arm/include/asm/device.h</span>
<span class="p_chunk">@@ -7,7 +7,7 @@</span> <span class="p_context"></span>
 #define ASMARM_DEVICE_H
 
 struct dev_archdata {
<span class="p_del">-	struct dma_map_ops	*dma_ops;</span>
<span class="p_add">+	const struct dma_map_ops	*dma_ops;</span>
 #ifdef CONFIG_DMABOUNCE
 	struct dmabounce_device_info *dmabounce;
 #endif
<span class="p_header">diff --git a/arch/arm/include/asm/dma-mapping.h b/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_header">index bf02dbd9ccda..1aabd781306f 100644</span>
<span class="p_header">--- a/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -13,17 +13,17 @@</span> <span class="p_context"></span>
 #include &lt;asm/xen/hypervisor.h&gt;
 
 #define DMA_ERROR_CODE	(~(dma_addr_t)0x0)
<span class="p_del">-extern struct dma_map_ops arm_dma_ops;</span>
<span class="p_del">-extern struct dma_map_ops arm_coherent_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops arm_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops arm_coherent_dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *__generic_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *__generic_dma_ops(struct device *dev)</span>
 {
 	if (dev &amp;&amp; dev-&gt;archdata.dma_ops)
 		return dev-&gt;archdata.dma_ops;
 	return &amp;arm_dma_ops;
 }
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	if (xen_initial_domain())
 		return xen_dma_ops;
<span class="p_chunk">@@ -31,7 +31,7 @@</span> <span class="p_context"> static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 		return __generic_dma_ops(dev);
 }
 
<span class="p_del">-static inline void set_dma_ops(struct device *dev, struct dma_map_ops *ops)</span>
<span class="p_add">+static inline void set_dma_ops(struct device *dev, const struct dma_map_ops *ops)</span>
 {
 	BUG_ON(!dev);
 	dev-&gt;archdata.dma_ops = ops;
<span class="p_header">diff --git a/arch/arm/mm/dma-mapping.c b/arch/arm/mm/dma-mapping.c</span>
<span class="p_header">index ab7710002ba6..d26fe1a35687 100644</span>
<span class="p_header">--- a/arch/arm/mm/dma-mapping.c</span>
<span class="p_header">+++ b/arch/arm/mm/dma-mapping.c</span>
<span class="p_chunk">@@ -180,7 +180,7 @@</span> <span class="p_context"> static void arm_dma_sync_single_for_device(struct device *dev,</span>
 	__dma_page_cpu_to_dev(page, offset, size, dir);
 }
 
<span class="p_del">-struct dma_map_ops arm_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops arm_dma_ops = {</span>
 	.alloc			= arm_dma_alloc,
 	.free			= arm_dma_free,
 	.mmap			= arm_dma_mmap,
<span class="p_chunk">@@ -204,7 +204,7 @@</span> <span class="p_context"> static int arm_coherent_dma_mmap(struct device *dev, struct vm_area_struct *vma,</span>
 		 void *cpu_addr, dma_addr_t dma_addr, size_t size,
 		 unsigned long attrs);
 
<span class="p_del">-struct dma_map_ops arm_coherent_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops arm_coherent_dma_ops = {</span>
 	.alloc			= arm_coherent_dma_alloc,
 	.free			= arm_coherent_dma_free,
 	.mmap			= arm_coherent_dma_mmap,
<span class="p_chunk">@@ -1067,7 +1067,7 @@</span> <span class="p_context"> static void __dma_page_dev_to_cpu(struct page *page, unsigned long off,</span>
 int arm_dma_map_sg(struct device *dev, struct scatterlist *sg, int nents,
 		enum dma_data_direction dir, unsigned long attrs)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 	struct scatterlist *s;
 	int i, j;
 
<span class="p_chunk">@@ -1101,7 +1101,7 @@</span> <span class="p_context"> int arm_dma_map_sg(struct device *dev, struct scatterlist *sg, int nents,</span>
 void arm_dma_unmap_sg(struct device *dev, struct scatterlist *sg, int nents,
 		enum dma_data_direction dir, unsigned long attrs)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 	struct scatterlist *s;
 
 	int i;
<span class="p_chunk">@@ -1120,7 +1120,7 @@</span> <span class="p_context"> void arm_dma_unmap_sg(struct device *dev, struct scatterlist *sg, int nents,</span>
 void arm_dma_sync_sg_for_cpu(struct device *dev, struct scatterlist *sg,
 			int nents, enum dma_data_direction dir)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 	struct scatterlist *s;
 	int i;
 
<span class="p_chunk">@@ -1139,7 +1139,7 @@</span> <span class="p_context"> void arm_dma_sync_sg_for_cpu(struct device *dev, struct scatterlist *sg,</span>
 void arm_dma_sync_sg_for_device(struct device *dev, struct scatterlist *sg,
 			int nents, enum dma_data_direction dir)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 	struct scatterlist *s;
 	int i;
 
<span class="p_chunk">@@ -2099,7 +2099,7 @@</span> <span class="p_context"> static void arm_iommu_sync_single_for_device(struct device *dev,</span>
 	__dma_page_cpu_to_dev(page, offset, size, dir);
 }
 
<span class="p_del">-struct dma_map_ops iommu_ops = {</span>
<span class="p_add">+const struct dma_map_ops iommu_ops = {</span>
 	.alloc		= arm_iommu_alloc_attrs,
 	.free		= arm_iommu_free_attrs,
 	.mmap		= arm_iommu_mmap_attrs,
<span class="p_chunk">@@ -2119,7 +2119,7 @@</span> <span class="p_context"> struct dma_map_ops iommu_ops = {</span>
 	.unmap_resource		= arm_iommu_unmap_resource,
 };
 
<span class="p_del">-struct dma_map_ops iommu_coherent_ops = {</span>
<span class="p_add">+const struct dma_map_ops iommu_coherent_ops = {</span>
 	.alloc		= arm_coherent_iommu_alloc_attrs,
 	.free		= arm_coherent_iommu_free_attrs,
 	.mmap		= arm_coherent_iommu_mmap_attrs,
<span class="p_chunk">@@ -2319,7 +2319,7 @@</span> <span class="p_context"> void arm_iommu_detach_device(struct device *dev)</span>
 }
 EXPORT_SYMBOL_GPL(arm_iommu_detach_device);
 
<span class="p_del">-static struct dma_map_ops *arm_get_iommu_dma_map_ops(bool coherent)</span>
<span class="p_add">+static const struct dma_map_ops *arm_get_iommu_dma_map_ops(bool coherent)</span>
 {
 	return coherent ? &amp;iommu_coherent_ops : &amp;iommu_ops;
 }
<span class="p_chunk">@@ -2374,7 +2374,7 @@</span> <span class="p_context"> static void arm_teardown_iommu_dma_ops(struct device *dev) { }</span>
 
 #endif	/* CONFIG_ARM_DMA_USE_IOMMU */
 
<span class="p_del">-static struct dma_map_ops *arm_get_dma_map_ops(bool coherent)</span>
<span class="p_add">+static const struct dma_map_ops *arm_get_dma_map_ops(bool coherent)</span>
 {
 	return coherent ? &amp;arm_coherent_dma_ops : &amp;arm_dma_ops;
 }
<span class="p_chunk">@@ -2382,7 +2382,7 @@</span> <span class="p_context"> static struct dma_map_ops *arm_get_dma_map_ops(bool coherent)</span>
 void arch_setup_dma_ops(struct device *dev, u64 dma_base, u64 size,
 			const struct iommu_ops *iommu, bool coherent)
 {
<span class="p_del">-	struct dma_map_ops *dma_ops;</span>
<span class="p_add">+	const struct dma_map_ops *dma_ops;</span>
 
 	dev-&gt;archdata.dma_coherent = coherent;
 	if (arm_setup_iommu_dma_ops(dev, dma_base, size, iommu))
<span class="p_header">diff --git a/arch/arm/xen/mm.c b/arch/arm/xen/mm.c</span>
<span class="p_header">index bd62d94f8ac5..ce18c91b50a1 100644</span>
<span class="p_header">--- a/arch/arm/xen/mm.c</span>
<span class="p_header">+++ b/arch/arm/xen/mm.c</span>
<span class="p_chunk">@@ -182,10 +182,10 @@</span> <span class="p_context"> void xen_destroy_contiguous_region(phys_addr_t pstart, unsigned int order)</span>
 }
 EXPORT_SYMBOL_GPL(xen_destroy_contiguous_region);
 
<span class="p_del">-struct dma_map_ops *xen_dma_ops;</span>
<span class="p_add">+const struct dma_map_ops *xen_dma_ops;</span>
 EXPORT_SYMBOL(xen_dma_ops);
 
<span class="p_del">-static struct dma_map_ops xen_swiotlb_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops xen_swiotlb_dma_ops = {</span>
 	.alloc = xen_swiotlb_alloc_coherent,
 	.free = xen_swiotlb_free_coherent,
 	.sync_single_for_cpu = xen_swiotlb_sync_single_for_cpu,
<span class="p_header">diff --git a/arch/arm64/include/asm/device.h b/arch/arm64/include/asm/device.h</span>
<span class="p_header">index 243ef256b8c9..00c678cc31e1 100644</span>
<span class="p_header">--- a/arch/arm64/include/asm/device.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/device.h</span>
<span class="p_chunk">@@ -17,7 +17,7 @@</span> <span class="p_context"></span>
 #define __ASM_DEVICE_H
 
 struct dev_archdata {
<span class="p_del">-	struct dma_map_ops *dma_ops;</span>
<span class="p_add">+	const struct dma_map_ops *dma_ops;</span>
 #ifdef CONFIG_IOMMU_API
 	void *iommu;			/* private IOMMU data */
 #endif
<span class="p_header">diff --git a/arch/arm64/include/asm/dma-mapping.h b/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_header">index ccea82c2b089..1fedb43be712 100644</span>
<span class="p_header">--- a/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -25,9 +25,9 @@</span> <span class="p_context"></span>
 #include &lt;asm/xen/hypervisor.h&gt;
 
 #define DMA_ERROR_CODE	(~(dma_addr_t)0)
<span class="p_del">-extern struct dma_map_ops dummy_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops dummy_dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *__generic_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *__generic_dma_ops(struct device *dev)</span>
 {
 	if (dev &amp;&amp; dev-&gt;archdata.dma_ops)
 		return dev-&gt;archdata.dma_ops;
<span class="p_chunk">@@ -39,7 +39,7 @@</span> <span class="p_context"> static inline struct dma_map_ops *__generic_dma_ops(struct device *dev)</span>
 	return &amp;dummy_dma_ops;
 }
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	if (xen_initial_domain())
 		return xen_dma_ops;
<span class="p_header">diff --git a/arch/arm64/mm/dma-mapping.c b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">index e04082700bb1..bcef6368d48f 100644</span>
<span class="p_header">--- a/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">+++ b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_chunk">@@ -352,7 +352,7 @@</span> <span class="p_context"> static int __swiotlb_dma_supported(struct device *hwdev, u64 mask)</span>
 	return 1;
 }
 
<span class="p_del">-static struct dma_map_ops swiotlb_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops swiotlb_dma_ops = {</span>
 	.alloc = __dma_alloc,
 	.free = __dma_free,
 	.mmap = __swiotlb_mmap,
<span class="p_chunk">@@ -505,7 +505,7 @@</span> <span class="p_context"> static int __dummy_dma_supported(struct device *hwdev, u64 mask)</span>
 	return 0;
 }
 
<span class="p_del">-struct dma_map_ops dummy_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops dummy_dma_ops = {</span>
 	.alloc                  = __dummy_alloc,
 	.free                   = __dummy_free,
 	.mmap                   = __dummy_mmap,
<span class="p_chunk">@@ -784,7 +784,7 @@</span> <span class="p_context"> static void __iommu_unmap_sg_attrs(struct device *dev,</span>
 	iommu_dma_unmap_sg(dev, sgl, nelems, dir, attrs);
 }
 
<span class="p_del">-static struct dma_map_ops iommu_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops iommu_dma_ops = {</span>
 	.alloc = __iommu_alloc_attrs,
 	.free = __iommu_free_attrs,
 	.mmap = __iommu_mmap_attrs,
<span class="p_header">diff --git a/arch/avr32/include/asm/dma-mapping.h b/arch/avr32/include/asm/dma-mapping.h</span>
<span class="p_header">index 1115f2a645d1..b2b43c0e0774 100644</span>
<span class="p_header">--- a/arch/avr32/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/avr32/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -4,9 +4,9 @@</span> <span class="p_context"></span>
 extern void dma_cache_sync(struct device *dev, void *vaddr, size_t size,
 	int direction);
 
<span class="p_del">-extern struct dma_map_ops avr32_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops avr32_dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return &amp;avr32_dma_ops;
 }
<span class="p_header">diff --git a/arch/avr32/mm/dma-coherent.c b/arch/avr32/mm/dma-coherent.c</span>
<span class="p_header">index 54534e5d0781..555222d4f414 100644</span>
<span class="p_header">--- a/arch/avr32/mm/dma-coherent.c</span>
<span class="p_header">+++ b/arch/avr32/mm/dma-coherent.c</span>
<span class="p_chunk">@@ -191,7 +191,7 @@</span> <span class="p_context"> static void avr32_dma_sync_sg_for_device(struct device *dev,</span>
 		dma_cache_sync(dev, sg_virt(sg), sg-&gt;length, direction);
 }
 
<span class="p_del">-struct dma_map_ops avr32_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops avr32_dma_ops = {</span>
 	.alloc			= avr32_dma_alloc,
 	.free			= avr32_dma_free,
 	.map_page		= avr32_dma_map_page,
<span class="p_header">diff --git a/arch/blackfin/include/asm/dma-mapping.h b/arch/blackfin/include/asm/dma-mapping.h</span>
<span class="p_header">index 3490570aaa82..320fb50fbd41 100644</span>
<span class="p_header">--- a/arch/blackfin/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/blackfin/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -36,9 +36,9 @@</span> <span class="p_context"> _dma_sync(dma_addr_t addr, size_t size, enum dma_data_direction dir)</span>
 		__dma_sync(addr, size, dir);
 }
 
<span class="p_del">-extern struct dma_map_ops bfin_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops bfin_dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return &amp;bfin_dma_ops;
 }
<span class="p_header">diff --git a/arch/blackfin/kernel/dma-mapping.c b/arch/blackfin/kernel/dma-mapping.c</span>
<span class="p_header">index a27a74a18fb0..477bb29a7987 100644</span>
<span class="p_header">--- a/arch/blackfin/kernel/dma-mapping.c</span>
<span class="p_header">+++ b/arch/blackfin/kernel/dma-mapping.c</span>
<span class="p_chunk">@@ -159,7 +159,7 @@</span> <span class="p_context"> static inline void bfin_dma_sync_single_for_device(struct device *dev,</span>
 	_dma_sync(handle, size, dir);
 }
 
<span class="p_del">-struct dma_map_ops bfin_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops bfin_dma_ops = {</span>
 	.alloc			= bfin_dma_alloc,
 	.free			= bfin_dma_free,
 
<span class="p_header">diff --git a/arch/c6x/include/asm/dma-mapping.h b/arch/c6x/include/asm/dma-mapping.h</span>
<span class="p_header">index 5717b1e52d96..88258b9ebc8e 100644</span>
<span class="p_header">--- a/arch/c6x/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/c6x/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -17,9 +17,9 @@</span> <span class="p_context"></span>
  */
 #define DMA_ERROR_CODE ~0
 
<span class="p_del">-extern struct dma_map_ops c6x_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops c6x_dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return &amp;c6x_dma_ops;
 }
<span class="p_header">diff --git a/arch/c6x/kernel/dma.c b/arch/c6x/kernel/dma.c</span>
<span class="p_header">index 6752df32ef06..9fff8be75f58 100644</span>
<span class="p_header">--- a/arch/c6x/kernel/dma.c</span>
<span class="p_header">+++ b/arch/c6x/kernel/dma.c</span>
<span class="p_chunk">@@ -123,7 +123,7 @@</span> <span class="p_context"> static void c6x_dma_sync_sg_for_device(struct device *dev,</span>
 
 }
 
<span class="p_del">-struct dma_map_ops c6x_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops c6x_dma_ops = {</span>
 	.alloc			= c6x_dma_alloc,
 	.free			= c6x_dma_free,
 	.map_page		= c6x_dma_map_page,
<span class="p_header">diff --git a/arch/cris/arch-v32/drivers/pci/dma.c b/arch/cris/arch-v32/drivers/pci/dma.c</span>
<span class="p_header">index 1f0636793f0c..7072341995ff 100644</span>
<span class="p_header">--- a/arch/cris/arch-v32/drivers/pci/dma.c</span>
<span class="p_header">+++ b/arch/cris/arch-v32/drivers/pci/dma.c</span>
<span class="p_chunk">@@ -69,7 +69,7 @@</span> <span class="p_context"> static inline int v32_dma_supported(struct device *dev, u64 mask)</span>
 	return 1;
 }
 
<span class="p_del">-struct dma_map_ops v32_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops v32_dma_ops = {</span>
 	.alloc			= v32_dma_alloc,
 	.free			= v32_dma_free,
 	.map_page		= v32_dma_map_page,
<span class="p_header">diff --git a/arch/cris/include/asm/dma-mapping.h b/arch/cris/include/asm/dma-mapping.h</span>
<span class="p_header">index 5a370178a0e9..aae4fbc0a656 100644</span>
<span class="p_header">--- a/arch/cris/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/cris/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -2,14 +2,14 @@</span> <span class="p_context"></span>
 #define _ASM_CRIS_DMA_MAPPING_H
 
 #ifdef CONFIG_PCI
<span class="p_del">-extern struct dma_map_ops v32_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops v32_dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return &amp;v32_dma_ops;
 }
 #else
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	BUG();
 	return NULL;
<span class="p_header">diff --git a/arch/frv/include/asm/dma-mapping.h b/arch/frv/include/asm/dma-mapping.h</span>
<span class="p_header">index 9a82bfa4303b..150cc00544a8 100644</span>
<span class="p_header">--- a/arch/frv/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/frv/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -7,9 +7,9 @@</span> <span class="p_context"></span>
 extern unsigned long __nongprelbss dma_coherent_mem_start;
 extern unsigned long __nongprelbss dma_coherent_mem_end;
 
<span class="p_del">-extern struct dma_map_ops frv_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops frv_dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return &amp;frv_dma_ops;
 }
<span class="p_header">diff --git a/arch/frv/mb93090-mb00/pci-dma-nommu.c b/arch/frv/mb93090-mb00/pci-dma-nommu.c</span>
<span class="p_header">index 187688128c65..4a96de7f0af4 100644</span>
<span class="p_header">--- a/arch/frv/mb93090-mb00/pci-dma-nommu.c</span>
<span class="p_header">+++ b/arch/frv/mb93090-mb00/pci-dma-nommu.c</span>
<span class="p_chunk">@@ -164,7 +164,7 @@</span> <span class="p_context"> static int frv_dma_supported(struct device *dev, u64 mask)</span>
 	return 1;
 }
 
<span class="p_del">-struct dma_map_ops frv_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops frv_dma_ops = {</span>
 	.alloc			= frv_dma_alloc,
 	.free			= frv_dma_free,
 	.map_page		= frv_dma_map_page,
<span class="p_header">diff --git a/arch/frv/mb93090-mb00/pci-dma.c b/arch/frv/mb93090-mb00/pci-dma.c</span>
<span class="p_header">index dba7df918144..e7130abc0dae 100644</span>
<span class="p_header">--- a/arch/frv/mb93090-mb00/pci-dma.c</span>
<span class="p_header">+++ b/arch/frv/mb93090-mb00/pci-dma.c</span>
<span class="p_chunk">@@ -106,7 +106,7 @@</span> <span class="p_context"> static int frv_dma_supported(struct device *dev, u64 mask)</span>
 	return 1;
 }
 
<span class="p_del">-struct dma_map_ops frv_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops frv_dma_ops = {</span>
 	.alloc			= frv_dma_alloc,
 	.free			= frv_dma_free,
 	.map_page		= frv_dma_map_page,
<span class="p_header">diff --git a/arch/h8300/include/asm/dma-mapping.h b/arch/h8300/include/asm/dma-mapping.h</span>
<span class="p_header">index 7ac7fadffed0..f804bca4c13f 100644</span>
<span class="p_header">--- a/arch/h8300/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/h8300/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -1,9 +1,9 @@</span> <span class="p_context"></span>
 #ifndef _H8300_DMA_MAPPING_H
 #define _H8300_DMA_MAPPING_H
 
<span class="p_del">-extern struct dma_map_ops h8300_dma_map_ops;</span>
<span class="p_add">+extern const struct dma_map_ops h8300_dma_map_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return &amp;h8300_dma_map_ops;
 }
<span class="p_header">diff --git a/arch/h8300/kernel/dma.c b/arch/h8300/kernel/dma.c</span>
<span class="p_header">index 3651da045806..225dd0a188dc 100644</span>
<span class="p_header">--- a/arch/h8300/kernel/dma.c</span>
<span class="p_header">+++ b/arch/h8300/kernel/dma.c</span>
<span class="p_chunk">@@ -60,7 +60,7 @@</span> <span class="p_context"> static int map_sg(struct device *dev, struct scatterlist *sgl,</span>
 	return nents;
 }
 
<span class="p_del">-struct dma_map_ops h8300_dma_map_ops = {</span>
<span class="p_add">+const struct dma_map_ops h8300_dma_map_ops = {</span>
 	.alloc = dma_alloc,
 	.free = dma_free,
 	.map_page = map_page,
<span class="p_header">diff --git a/arch/hexagon/include/asm/dma-mapping.h b/arch/hexagon/include/asm/dma-mapping.h</span>
<span class="p_header">index 7ef58df909fc..b812e917cd95 100644</span>
<span class="p_header">--- a/arch/hexagon/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/hexagon/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -32,9 +32,9 @@</span> <span class="p_context"> struct device;</span>
 extern int bad_dma_address;
 #define DMA_ERROR_CODE bad_dma_address
 
<span class="p_del">-extern struct dma_map_ops *dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops *dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	if (unlikely(dev == NULL))
 		return NULL;
<span class="p_header">diff --git a/arch/hexagon/kernel/dma.c b/arch/hexagon/kernel/dma.c</span>
<span class="p_header">index dbc4f1003da4..e74b65009587 100644</span>
<span class="p_header">--- a/arch/hexagon/kernel/dma.c</span>
<span class="p_header">+++ b/arch/hexagon/kernel/dma.c</span>
<span class="p_chunk">@@ -25,7 +25,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/module.h&gt;
 #include &lt;asm/page.h&gt;
 
<span class="p_del">-struct dma_map_ops *dma_ops;</span>
<span class="p_add">+const struct dma_map_ops *dma_ops;</span>
 EXPORT_SYMBOL(dma_ops);
 
 int bad_dma_address;  /*  globals are automatically initialized to zero  */
<span class="p_chunk">@@ -203,7 +203,7 @@</span> <span class="p_context"> static void hexagon_sync_single_for_device(struct device *dev,</span>
 	dma_sync(dma_addr_to_virt(dma_handle), size, dir);
 }
 
<span class="p_del">-struct dma_map_ops hexagon_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops hexagon_dma_ops = {</span>
 	.alloc		= hexagon_dma_alloc_coherent,
 	.free		= hexagon_free_coherent,
 	.map_sg		= hexagon_map_sg,
<span class="p_header">diff --git a/arch/ia64/hp/common/hwsw_iommu.c b/arch/ia64/hp/common/hwsw_iommu.c</span>
<span class="p_header">index 1e4cae5ae053..0310078a95f8 100644</span>
<span class="p_header">--- a/arch/ia64/hp/common/hwsw_iommu.c</span>
<span class="p_header">+++ b/arch/ia64/hp/common/hwsw_iommu.c</span>
<span class="p_chunk">@@ -18,7 +18,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/export.h&gt;
 #include &lt;asm/machvec.h&gt;
 
<span class="p_del">-extern struct dma_map_ops sba_dma_ops, swiotlb_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops sba_dma_ops, swiotlb_dma_ops;</span>
 
 /* swiotlb declarations &amp; definitions: */
 extern int swiotlb_late_init_with_default_size (size_t size);
<span class="p_chunk">@@ -34,7 +34,7 @@</span> <span class="p_context"> static inline int use_swiotlb(struct device *dev)</span>
 		!sba_dma_ops.dma_supported(dev, *dev-&gt;dma_mask);
 }
 
<span class="p_del">-struct dma_map_ops *hwsw_dma_get_ops(struct device *dev)</span>
<span class="p_add">+const struct dma_map_ops *hwsw_dma_get_ops(struct device *dev)</span>
 {
 	if (use_swiotlb(dev))
 		return &amp;swiotlb_dma_ops;
<span class="p_header">diff --git a/arch/ia64/hp/common/sba_iommu.c b/arch/ia64/hp/common/sba_iommu.c</span>
<span class="p_header">index 630ee8073899..aec4a3354abe 100644</span>
<span class="p_header">--- a/arch/ia64/hp/common/sba_iommu.c</span>
<span class="p_header">+++ b/arch/ia64/hp/common/sba_iommu.c</span>
<span class="p_chunk">@@ -2096,7 +2096,7 @@</span> <span class="p_context"> static int __init acpi_sba_ioc_init_acpi(void)</span>
 /* This has to run before acpi_scan_init(). */
 arch_initcall(acpi_sba_ioc_init_acpi);
 
<span class="p_del">-extern struct dma_map_ops swiotlb_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops swiotlb_dma_ops;</span>
 
 static int __init
 sba_init(void)
<span class="p_chunk">@@ -2216,7 +2216,7 @@</span> <span class="p_context"> sba_page_override(char *str)</span>
 
 __setup(&quot;sbapagesize=&quot;,sba_page_override);
 
<span class="p_del">-struct dma_map_ops sba_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops sba_dma_ops = {</span>
 	.alloc			= sba_alloc_coherent,
 	.free			= sba_free_coherent,
 	.map_page		= sba_map_page,
<span class="p_header">diff --git a/arch/ia64/include/asm/dma-mapping.h b/arch/ia64/include/asm/dma-mapping.h</span>
<span class="p_header">index d472805edfa9..05e467d56d86 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -14,7 +14,7 @@</span> <span class="p_context"></span>
 
 #define DMA_ERROR_CODE 0
 
<span class="p_del">-extern struct dma_map_ops *dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops *dma_ops;</span>
 extern struct ia64_machine_vector ia64_mv;
 extern void set_iommu_machvec(void);
 
<span class="p_header">diff --git a/arch/ia64/include/asm/machvec.h b/arch/ia64/include/asm/machvec.h</span>
<span class="p_header">index ed7f09089f12..af285c423e1e 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/machvec.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/machvec.h</span>
<span class="p_chunk">@@ -44,7 +44,7 @@</span> <span class="p_context"> typedef void ia64_mv_kernel_launch_event_t(void);</span>
 /* DMA-mapping interface: */
 typedef void ia64_mv_dma_init (void);
 typedef u64 ia64_mv_dma_get_required_mask (struct device *);
<span class="p_del">-typedef struct dma_map_ops *ia64_mv_dma_get_ops(struct device *);</span>
<span class="p_add">+typedef const struct dma_map_ops *ia64_mv_dma_get_ops(struct device *);</span>
 
 /*
  * WARNING: The legacy I/O space is _architected_.  Platforms are
<span class="p_chunk">@@ -248,7 +248,7 @@</span> <span class="p_context"> extern void machvec_init_from_cmdline(const char *cmdline);</span>
 # endif /* CONFIG_IA64_GENERIC */
 
 extern void swiotlb_dma_init(void);
<span class="p_del">-extern struct dma_map_ops *dma_get_ops(struct device *);</span>
<span class="p_add">+extern const struct dma_map_ops *dma_get_ops(struct device *);</span>
 
 /*
  * Define default versions so we can extend machvec for new platforms without having
<span class="p_header">diff --git a/arch/ia64/kernel/dma-mapping.c b/arch/ia64/kernel/dma-mapping.c</span>
<span class="p_header">index 7f7916238208..e0dd97f4eb69 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/dma-mapping.c</span>
<span class="p_header">+++ b/arch/ia64/kernel/dma-mapping.c</span>
<span class="p_chunk">@@ -4,7 +4,7 @@</span> <span class="p_context"></span>
 /* Set this to 1 if there is a HW IOMMU in the system */
 int iommu_detected __read_mostly;
 
<span class="p_del">-struct dma_map_ops *dma_ops;</span>
<span class="p_add">+const struct dma_map_ops *dma_ops;</span>
 EXPORT_SYMBOL(dma_ops);
 
 #define PREALLOC_DMA_DEBUG_ENTRIES (1 &lt;&lt; 16)
<span class="p_chunk">@@ -17,7 +17,7 @@</span> <span class="p_context"> static int __init dma_init(void)</span>
 }
 fs_initcall(dma_init);
 
<span class="p_del">-struct dma_map_ops *dma_get_ops(struct device *dev)</span>
<span class="p_add">+const struct dma_map_ops *dma_get_ops(struct device *dev)</span>
 {
 	return dma_ops;
 }
<span class="p_header">diff --git a/arch/ia64/kernel/pci-dma.c b/arch/ia64/kernel/pci-dma.c</span>
<span class="p_header">index 992c1098c522..9094a73f996f 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/pci-dma.c</span>
<span class="p_header">+++ b/arch/ia64/kernel/pci-dma.c</span>
<span class="p_chunk">@@ -90,11 +90,11 @@</span> <span class="p_context"> void __init pci_iommu_alloc(void)</span>
 {
 	dma_ops = &amp;intel_dma_ops;
 
<span class="p_del">-	dma_ops-&gt;sync_single_for_cpu = machvec_dma_sync_single;</span>
<span class="p_del">-	dma_ops-&gt;sync_sg_for_cpu = machvec_dma_sync_sg;</span>
<span class="p_del">-	dma_ops-&gt;sync_single_for_device = machvec_dma_sync_single;</span>
<span class="p_del">-	dma_ops-&gt;sync_sg_for_device = machvec_dma_sync_sg;</span>
<span class="p_del">-	dma_ops-&gt;dma_supported = iommu_dma_supported;</span>
<span class="p_add">+	intel_dma_ops.sync_single_for_cpu = machvec_dma_sync_single;</span>
<span class="p_add">+	intel_dma_ops.sync_sg_for_cpu = machvec_dma_sync_sg;</span>
<span class="p_add">+	intel_dma_ops.sync_single_for_device = machvec_dma_sync_single;</span>
<span class="p_add">+	intel_dma_ops.sync_sg_for_device = machvec_dma_sync_sg;</span>
<span class="p_add">+	intel_dma_ops.dma_supported = iommu_dma_supported;</span>
 
 	/*
 	 * The order of these functions is important for
<span class="p_header">diff --git a/arch/ia64/kernel/pci-swiotlb.c b/arch/ia64/kernel/pci-swiotlb.c</span>
<span class="p_header">index 2933208c0285..a14989dacded 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/pci-swiotlb.c</span>
<span class="p_header">+++ b/arch/ia64/kernel/pci-swiotlb.c</span>
<span class="p_chunk">@@ -30,7 +30,7 @@</span> <span class="p_context"> static void ia64_swiotlb_free_coherent(struct device *dev, size_t size,</span>
 	swiotlb_free_coherent(dev, size, vaddr, dma_addr);
 }
 
<span class="p_del">-struct dma_map_ops swiotlb_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops swiotlb_dma_ops = {</span>
 	.alloc = ia64_swiotlb_alloc_coherent,
 	.free = ia64_swiotlb_free_coherent,
 	.map_page = swiotlb_map_page,
<span class="p_header">diff --git a/arch/m32r/include/asm/device.h b/arch/m32r/include/asm/device.h</span>
<span class="p_header">index 4a9f35e0973f..7955a9799466 100644</span>
<span class="p_header">--- a/arch/m32r/include/asm/device.h</span>
<span class="p_header">+++ b/arch/m32r/include/asm/device.h</span>
<span class="p_chunk">@@ -4,7 +4,7 @@</span> <span class="p_context"></span>
  * This file is released under the GPLv2
  */
 struct dev_archdata {
<span class="p_del">-	struct dma_map_ops *dma_ops;</span>
<span class="p_add">+	const struct dma_map_ops *dma_ops;</span>
 };
 
 struct pdev_archdata {
<span class="p_header">diff --git a/arch/m32r/include/asm/dma-mapping.h b/arch/m32r/include/asm/dma-mapping.h</span>
<span class="p_header">index 2c43a77fe942..99c43d2f05dc 100644</span>
<span class="p_header">--- a/arch/m32r/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/m32r/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -10,7 +10,7 @@</span> <span class="p_context"></span>
 
 #define DMA_ERROR_CODE (~(dma_addr_t)0x0)
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	if (dev &amp;&amp; dev-&gt;archdata.dma_ops)
 		return dev-&gt;archdata.dma_ops;
<span class="p_header">diff --git a/arch/m68k/include/asm/dma-mapping.h b/arch/m68k/include/asm/dma-mapping.h</span>
<span class="p_header">index 96c536194287..863509939d5a 100644</span>
<span class="p_header">--- a/arch/m68k/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/m68k/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -1,9 +1,9 @@</span> <span class="p_context"></span>
 #ifndef _M68K_DMA_MAPPING_H
 #define _M68K_DMA_MAPPING_H
 
<span class="p_del">-extern struct dma_map_ops m68k_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops m68k_dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
         return &amp;m68k_dma_ops;
 }
<span class="p_header">diff --git a/arch/m68k/kernel/dma.c b/arch/m68k/kernel/dma.c</span>
<span class="p_header">index 07070065a425..0fc5dabb4a42 100644</span>
<span class="p_header">--- a/arch/m68k/kernel/dma.c</span>
<span class="p_header">+++ b/arch/m68k/kernel/dma.c</span>
<span class="p_chunk">@@ -158,7 +158,7 @@</span> <span class="p_context"> static int m68k_dma_map_sg(struct device *dev, struct scatterlist *sglist,</span>
 	return nents;
 }
 
<span class="p_del">-struct dma_map_ops m68k_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops m68k_dma_ops = {</span>
 	.alloc			= m68k_dma_alloc,
 	.free			= m68k_dma_free,
 	.map_page		= m68k_dma_map_page,
<span class="p_header">diff --git a/arch/metag/include/asm/dma-mapping.h b/arch/metag/include/asm/dma-mapping.h</span>
<span class="p_header">index 27af5d479ce6..c156a7ac732f 100644</span>
<span class="p_header">--- a/arch/metag/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/metag/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -1,9 +1,9 @@</span> <span class="p_context"></span>
 #ifndef _ASM_METAG_DMA_MAPPING_H
 #define _ASM_METAG_DMA_MAPPING_H
 
<span class="p_del">-extern struct dma_map_ops metag_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops metag_dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return &amp;metag_dma_ops;
 }
<span class="p_header">diff --git a/arch/metag/kernel/dma.c b/arch/metag/kernel/dma.c</span>
<span class="p_header">index 91968d92652b..f0ab3a498328 100644</span>
<span class="p_header">--- a/arch/metag/kernel/dma.c</span>
<span class="p_header">+++ b/arch/metag/kernel/dma.c</span>
<span class="p_chunk">@@ -575,7 +575,7 @@</span> <span class="p_context"> static void metag_dma_sync_sg_for_device(struct device *dev,</span>
 		dma_sync_for_device(sg_virt(sg), sg-&gt;length, direction);
 }
 
<span class="p_del">-struct dma_map_ops metag_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops metag_dma_ops = {</span>
 	.alloc			= metag_dma_alloc,
 	.free			= metag_dma_free,
 	.map_page		= metag_dma_map_page,
<span class="p_header">diff --git a/arch/microblaze/include/asm/dma-mapping.h b/arch/microblaze/include/asm/dma-mapping.h</span>
<span class="p_header">index 1768d4bdc8d3..c7faf2fb51d6 100644</span>
<span class="p_header">--- a/arch/microblaze/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/microblaze/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -36,9 +36,9 @@</span> <span class="p_context"></span>
 /*
  * Available generic sets of operations
  */
<span class="p_del">-extern struct dma_map_ops dma_direct_ops;</span>
<span class="p_add">+extern const struct dma_map_ops dma_direct_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return &amp;dma_direct_ops;
 }
<span class="p_header">diff --git a/arch/microblaze/kernel/dma.c b/arch/microblaze/kernel/dma.c</span>
<span class="p_header">index 818daf230eb4..12e093a03e60 100644</span>
<span class="p_header">--- a/arch/microblaze/kernel/dma.c</span>
<span class="p_header">+++ b/arch/microblaze/kernel/dma.c</span>
<span class="p_chunk">@@ -187,7 +187,7 @@</span> <span class="p_context"> int dma_direct_mmap_coherent(struct device *dev, struct vm_area_struct *vma,</span>
 #endif
 }
 
<span class="p_del">-struct dma_map_ops dma_direct_ops = {</span>
<span class="p_add">+const struct dma_map_ops dma_direct_ops = {</span>
 	.alloc		= dma_direct_alloc_coherent,
 	.free		= dma_direct_free_coherent,
 	.mmap		= dma_direct_mmap_coherent,
<span class="p_header">diff --git a/arch/mips/cavium-octeon/dma-octeon.c b/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="p_header">index fd69528b24fb..897d32c888ee 100644</span>
<span class="p_header">--- a/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="p_header">+++ b/arch/mips/cavium-octeon/dma-octeon.c</span>
<span class="p_chunk">@@ -205,7 +205,7 @@</span> <span class="p_context"> static phys_addr_t octeon_unity_dma_to_phys(struct device *dev, dma_addr_t daddr</span>
 }
 
 struct octeon_dma_map_ops {
<span class="p_del">-	struct dma_map_ops dma_map_ops;</span>
<span class="p_add">+	const struct dma_map_ops dma_map_ops;</span>
 	dma_addr_t (*phys_to_dma)(struct device *dev, phys_addr_t paddr);
 	phys_addr_t (*dma_to_phys)(struct device *dev, dma_addr_t daddr);
 };
<span class="p_chunk">@@ -333,7 +333,7 @@</span> <span class="p_context"> static struct octeon_dma_map_ops _octeon_pci_dma_map_ops = {</span>
 	},
 };
 
<span class="p_del">-struct dma_map_ops *octeon_pci_dma_map_ops;</span>
<span class="p_add">+const struct dma_map_ops *octeon_pci_dma_map_ops;</span>
 
 void __init octeon_pci_dma_init(void)
 {
<span class="p_header">diff --git a/arch/mips/include/asm/device.h b/arch/mips/include/asm/device.h</span>
<span class="p_header">index 21c2082a0dfb..ebc5c1265473 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/device.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/device.h</span>
<span class="p_chunk">@@ -10,7 +10,7 @@</span> <span class="p_context"> struct dma_map_ops;</span>
 
 struct dev_archdata {
 	/* DMA operations on that device */
<span class="p_del">-	struct dma_map_ops *dma_ops;</span>
<span class="p_add">+	const struct dma_map_ops *dma_ops;</span>
 
 #ifdef CONFIG_DMA_PERDEV_COHERENT
 	/* Non-zero if DMA is coherent with CPU caches */
<span class="p_header">diff --git a/arch/mips/include/asm/dma-mapping.h b/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_header">index 7aa71b9b0258..b59b084a7569 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -9,9 +9,9 @@</span> <span class="p_context"></span>
 #include &lt;dma-coherence.h&gt;
 #endif
 
<span class="p_del">-extern struct dma_map_ops *mips_dma_map_ops;</span>
<span class="p_add">+extern const struct dma_map_ops *mips_dma_map_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	if (dev &amp;&amp; dev-&gt;archdata.dma_ops)
 		return dev-&gt;archdata.dma_ops;
<span class="p_header">diff --git a/arch/mips/include/asm/mach-cavium-octeon/dma-coherence.h b/arch/mips/include/asm/mach-cavium-octeon/dma-coherence.h</span>
<span class="p_header">index 460042ee5d6f..9110988b92a1 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/mach-cavium-octeon/dma-coherence.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/mach-cavium-octeon/dma-coherence.h</span>
<span class="p_chunk">@@ -65,7 +65,7 @@</span> <span class="p_context"> dma_addr_t phys_to_dma(struct device *dev, phys_addr_t paddr);</span>
 phys_addr_t dma_to_phys(struct device *dev, dma_addr_t daddr);
 
 struct dma_map_ops;
<span class="p_del">-extern struct dma_map_ops *octeon_pci_dma_map_ops;</span>
<span class="p_add">+extern const struct dma_map_ops *octeon_pci_dma_map_ops;</span>
 extern char *octeon_swiotlb;
 
 #endif /* __ASM_MACH_CAVIUM_OCTEON_DMA_COHERENCE_H */
<span class="p_header">diff --git a/arch/mips/include/asm/netlogic/common.h b/arch/mips/include/asm/netlogic/common.h</span>
<span class="p_header">index be52c2125d71..e0717d10e650 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/netlogic/common.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/netlogic/common.h</span>
<span class="p_chunk">@@ -88,7 +88,7 @@</span> <span class="p_context"> extern struct plat_smp_ops nlm_smp_ops;</span>
 extern char nlm_reset_entry[], nlm_reset_entry_end[];
 
 /* SWIOTLB */
<span class="p_del">-extern struct dma_map_ops nlm_swiotlb_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops nlm_swiotlb_dma_ops;</span>
 
 extern unsigned int nlm_threads_per_core;
 extern cpumask_t nlm_cpumask;
<span class="p_header">diff --git a/arch/mips/loongson64/common/dma-swiotlb.c b/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="p_header">index aab4fd681e1f..7296df043d92 100644</span>
<span class="p_header">--- a/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="p_header">+++ b/arch/mips/loongson64/common/dma-swiotlb.c</span>
<span class="p_chunk">@@ -122,7 +122,7 @@</span> <span class="p_context"> phys_addr_t dma_to_phys(struct device *dev, dma_addr_t daddr)</span>
 	return daddr;
 }
 
<span class="p_del">-static struct dma_map_ops loongson_dma_map_ops = {</span>
<span class="p_add">+static const struct dma_map_ops loongson_dma_map_ops = {</span>
 	.alloc = loongson_dma_alloc_coherent,
 	.free = loongson_dma_free_coherent,
 	.map_page = loongson_dma_map_page,
<span class="p_header">diff --git a/arch/mips/mm/dma-default.c b/arch/mips/mm/dma-default.c</span>
<span class="p_header">index a39c36af97ad..1cb84472cb58 100644</span>
<span class="p_header">--- a/arch/mips/mm/dma-default.c</span>
<span class="p_header">+++ b/arch/mips/mm/dma-default.c</span>
<span class="p_chunk">@@ -417,7 +417,7 @@</span> <span class="p_context"> void dma_cache_sync(struct device *dev, void *vaddr, size_t size,</span>
 
 EXPORT_SYMBOL(dma_cache_sync);
 
<span class="p_del">-static struct dma_map_ops mips_default_dma_map_ops = {</span>
<span class="p_add">+static const struct dma_map_ops mips_default_dma_map_ops = {</span>
 	.alloc = mips_dma_alloc_coherent,
 	.free = mips_dma_free_coherent,
 	.mmap = mips_dma_mmap,
<span class="p_chunk">@@ -433,7 +433,7 @@</span> <span class="p_context"> static struct dma_map_ops mips_default_dma_map_ops = {</span>
 	.dma_supported = mips_dma_supported
 };
 
<span class="p_del">-struct dma_map_ops *mips_dma_map_ops = &amp;mips_default_dma_map_ops;</span>
<span class="p_add">+const struct dma_map_ops *mips_dma_map_ops = &amp;mips_default_dma_map_ops;</span>
 EXPORT_SYMBOL(mips_dma_map_ops);
 
 #define PREALLOC_DMA_DEBUG_ENTRIES (1 &lt;&lt; 16)
<span class="p_header">diff --git a/arch/mips/netlogic/common/nlm-dma.c b/arch/mips/netlogic/common/nlm-dma.c</span>
<span class="p_header">index 0630693bec2a..0ec9d9da6d51 100644</span>
<span class="p_header">--- a/arch/mips/netlogic/common/nlm-dma.c</span>
<span class="p_header">+++ b/arch/mips/netlogic/common/nlm-dma.c</span>
<span class="p_chunk">@@ -67,7 +67,7 @@</span> <span class="p_context"> static void nlm_dma_free_coherent(struct device *dev, size_t size,</span>
 	swiotlb_free_coherent(dev, size, vaddr, dma_handle);
 }
 
<span class="p_del">-struct dma_map_ops nlm_swiotlb_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops nlm_swiotlb_dma_ops = {</span>
 	.alloc = nlm_dma_alloc_coherent,
 	.free = nlm_dma_free_coherent,
 	.map_page = swiotlb_map_page,
<span class="p_header">diff --git a/arch/mn10300/include/asm/dma-mapping.h b/arch/mn10300/include/asm/dma-mapping.h</span>
<span class="p_header">index 1dcd44757f32..564e3927e005 100644</span>
<span class="p_header">--- a/arch/mn10300/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/mn10300/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -14,9 +14,9 @@</span> <span class="p_context"></span>
 #include &lt;asm/cache.h&gt;
 #include &lt;asm/io.h&gt;
 
<span class="p_del">-extern struct dma_map_ops mn10300_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops mn10300_dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return &amp;mn10300_dma_ops;
 }
<span class="p_header">diff --git a/arch/mn10300/mm/dma-alloc.c b/arch/mn10300/mm/dma-alloc.c</span>
<span class="p_header">index 4f4b9029f0ea..86108d2496b3 100644</span>
<span class="p_header">--- a/arch/mn10300/mm/dma-alloc.c</span>
<span class="p_header">+++ b/arch/mn10300/mm/dma-alloc.c</span>
<span class="p_chunk">@@ -121,7 +121,7 @@</span> <span class="p_context"> static int mn10300_dma_supported(struct device *dev, u64 mask)</span>
 	return 1;
 }
 
<span class="p_del">-struct dma_map_ops mn10300_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops mn10300_dma_ops = {</span>
 	.alloc			= mn10300_dma_alloc,
 	.free			= mn10300_dma_free,
 	.map_page		= mn10300_dma_map_page,
<span class="p_header">diff --git a/arch/nios2/include/asm/dma-mapping.h b/arch/nios2/include/asm/dma-mapping.h</span>
<span class="p_header">index bec8ac8e6ad2..aa00d839a64b 100644</span>
<span class="p_header">--- a/arch/nios2/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/nios2/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -10,9 +10,9 @@</span> <span class="p_context"></span>
 #ifndef _ASM_NIOS2_DMA_MAPPING_H
 #define _ASM_NIOS2_DMA_MAPPING_H
 
<span class="p_del">-extern struct dma_map_ops nios2_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops nios2_dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return &amp;nios2_dma_ops;
 }
<span class="p_header">diff --git a/arch/nios2/mm/dma-mapping.c b/arch/nios2/mm/dma-mapping.c</span>
<span class="p_header">index f6a5dcf9d682..7040c1adbb5e 100644</span>
<span class="p_header">--- a/arch/nios2/mm/dma-mapping.c</span>
<span class="p_header">+++ b/arch/nios2/mm/dma-mapping.c</span>
<span class="p_chunk">@@ -192,7 +192,7 @@</span> <span class="p_context"> static void nios2_dma_sync_sg_for_device(struct device *dev,</span>
 
 }
 
<span class="p_del">-struct dma_map_ops nios2_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops nios2_dma_ops = {</span>
 	.alloc			= nios2_dma_alloc,
 	.free			= nios2_dma_free,
 	.map_page		= nios2_dma_map_page,
<span class="p_header">diff --git a/arch/openrisc/include/asm/dma-mapping.h b/arch/openrisc/include/asm/dma-mapping.h</span>
<span class="p_header">index 1f260bccb368..88acbedb4947 100644</span>
<span class="p_header">--- a/arch/openrisc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/openrisc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -28,9 +28,9 @@</span> <span class="p_context"></span>
 
 #define DMA_ERROR_CODE		(~(dma_addr_t)0x0)
 
<span class="p_del">-extern struct dma_map_ops or1k_dma_map_ops;</span>
<span class="p_add">+extern const struct dma_map_ops or1k_dma_map_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return &amp;or1k_dma_map_ops;
 }
<span class="p_header">diff --git a/arch/openrisc/kernel/dma.c b/arch/openrisc/kernel/dma.c</span>
<span class="p_header">index 906998bac957..b10369b7e31b 100644</span>
<span class="p_header">--- a/arch/openrisc/kernel/dma.c</span>
<span class="p_header">+++ b/arch/openrisc/kernel/dma.c</span>
<span class="p_chunk">@@ -232,7 +232,7 @@</span> <span class="p_context"> or1k_sync_single_for_device(struct device *dev,</span>
 		mtspr(SPR_DCBFR, cl);
 }
 
<span class="p_del">-struct dma_map_ops or1k_dma_map_ops = {</span>
<span class="p_add">+const struct dma_map_ops or1k_dma_map_ops = {</span>
 	.alloc = or1k_dma_alloc,
 	.free = or1k_dma_free,
 	.map_page = or1k_map_page,
<span class="p_header">diff --git a/arch/parisc/include/asm/dma-mapping.h b/arch/parisc/include/asm/dma-mapping.h</span>
<span class="p_header">index 16e024602737..1749073e44fc 100644</span>
<span class="p_header">--- a/arch/parisc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/parisc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -21,13 +21,13 @@</span> <span class="p_context"></span>
 */
 
 #ifdef CONFIG_PA11
<span class="p_del">-extern struct dma_map_ops pcxl_dma_ops;</span>
<span class="p_del">-extern struct dma_map_ops pcx_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops pcxl_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops pcx_dma_ops;</span>
 #endif
 
<span class="p_del">-extern struct dma_map_ops *hppa_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops *hppa_dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return hppa_dma_ops;
 }
<span class="p_header">diff --git a/arch/parisc/kernel/drivers.c b/arch/parisc/kernel/drivers.c</span>
<span class="p_header">index 700e2d2da096..fa78419100c8 100644</span>
<span class="p_header">--- a/arch/parisc/kernel/drivers.c</span>
<span class="p_header">+++ b/arch/parisc/kernel/drivers.c</span>
<span class="p_chunk">@@ -40,7 +40,7 @@</span> <span class="p_context"></span>
 #include &lt;asm/parisc-device.h&gt;
 
 /* See comments in include/asm-parisc/pci.h */
<span class="p_del">-struct dma_map_ops *hppa_dma_ops __read_mostly;</span>
<span class="p_add">+const struct dma_map_ops *hppa_dma_ops __read_mostly;</span>
 EXPORT_SYMBOL(hppa_dma_ops);
 
 static struct device root = {
<span class="p_header">diff --git a/arch/parisc/kernel/pci-dma.c b/arch/parisc/kernel/pci-dma.c</span>
<span class="p_header">index 697c53543a4d..5f0067a62738 100644</span>
<span class="p_header">--- a/arch/parisc/kernel/pci-dma.c</span>
<span class="p_header">+++ b/arch/parisc/kernel/pci-dma.c</span>
<span class="p_chunk">@@ -572,7 +572,7 @@</span> <span class="p_context"> static void pa11_dma_sync_sg_for_device(struct device *dev, struct scatterlist *</span>
 		flush_kernel_vmap_range(sg_virt(sg), sg-&gt;length);
 }
 
<span class="p_del">-struct dma_map_ops pcxl_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops pcxl_dma_ops = {</span>
 	.dma_supported =	pa11_dma_supported,
 	.alloc =		pa11_dma_alloc,
 	.free =			pa11_dma_free,
<span class="p_chunk">@@ -608,7 +608,7 @@</span> <span class="p_context"> static void pcx_dma_free(struct device *dev, size_t size, void *vaddr,</span>
 	return;
 }
 
<span class="p_del">-struct dma_map_ops pcx_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops pcx_dma_ops = {</span>
 	.dma_supported =	pa11_dma_supported,
 	.alloc =		pcx_dma_alloc,
 	.free =			pcx_dma_free,
<span class="p_header">diff --git a/arch/powerpc/include/asm/device.h b/arch/powerpc/include/asm/device.h</span>
<span class="p_header">index 406c2b1ff82d..49cbb0fca233 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/device.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/device.h</span>
<span class="p_chunk">@@ -21,7 +21,7 @@</span> <span class="p_context"> struct iommu_table;</span>
  */
 struct dev_archdata {
 	/* DMA operations on that device */
<span class="p_del">-	struct dma_map_ops	*dma_ops;</span>
<span class="p_add">+	const struct dma_map_ops	*dma_ops;</span>
 
 	/*
 	 * These two used to be a union. However, with the hybrid ops we need
<span class="p_header">diff --git a/arch/powerpc/include/asm/dma-mapping.h b/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_header">index 84e3f8dd5e4f..2ec3eadf336f 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -76,9 +76,9 @@</span> <span class="p_context"> static inline unsigned long device_to_mask(struct device *dev)</span>
 #ifdef CONFIG_PPC64
 extern struct dma_map_ops dma_iommu_ops;
 #endif
<span class="p_del">-extern struct dma_map_ops dma_direct_ops;</span>
<span class="p_add">+extern const struct dma_map_ops dma_direct_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	/* We don&#39;t handle the NULL dev case for ISA for now. We could
 	 * do it via an out of line call but it is not needed for now. The
<span class="p_chunk">@@ -91,7 +91,7 @@</span> <span class="p_context"> static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 	return dev-&gt;archdata.dma_ops;
 }
 
<span class="p_del">-static inline void set_dma_ops(struct device *dev, struct dma_map_ops *ops)</span>
<span class="p_add">+static inline void set_dma_ops(struct device *dev, const struct dma_map_ops *ops)</span>
 {
 	dev-&gt;archdata.dma_ops = ops;
 }
<span class="p_header">diff --git a/arch/powerpc/include/asm/pci.h b/arch/powerpc/include/asm/pci.h</span>
<span class="p_header">index e9bd6cf0212f..93eded8d3843 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/pci.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/pci.h</span>
<span class="p_chunk">@@ -53,8 +53,8 @@</span> <span class="p_context"> static inline int pci_get_legacy_ide_irq(struct pci_dev *dev, int channel)</span>
 }
 
 #ifdef CONFIG_PCI
<span class="p_del">-extern void set_pci_dma_ops(struct dma_map_ops *dma_ops);</span>
<span class="p_del">-extern struct dma_map_ops *get_pci_dma_ops(void);</span>
<span class="p_add">+extern void set_pci_dma_ops(const struct dma_map_ops *dma_ops);</span>
<span class="p_add">+extern const struct dma_map_ops *get_pci_dma_ops(void);</span>
 #else	/* CONFIG_PCI */
 #define set_pci_dma_ops(d)
 #define get_pci_dma_ops()	NULL
<span class="p_header">diff --git a/arch/powerpc/include/asm/swiotlb.h b/arch/powerpc/include/asm/swiotlb.h</span>
<span class="p_header">index de99d6e29430..01d45a5fd00b 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/swiotlb.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/swiotlb.h</span>
<span class="p_chunk">@@ -13,7 +13,7 @@</span> <span class="p_context"></span>
 
 #include &lt;linux/swiotlb.h&gt;
 
<span class="p_del">-extern struct dma_map_ops swiotlb_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops swiotlb_dma_ops;</span>
 
 static inline void dma_mark_clean(void *addr, size_t size) {}
 
<span class="p_header">diff --git a/arch/powerpc/kernel/dma-swiotlb.c b/arch/powerpc/kernel/dma-swiotlb.c</span>
<span class="p_header">index c6689f658b50..d0ea7860e02b 100644</span>
<span class="p_header">--- a/arch/powerpc/kernel/dma-swiotlb.c</span>
<span class="p_header">+++ b/arch/powerpc/kernel/dma-swiotlb.c</span>
<span class="p_chunk">@@ -46,7 +46,7 @@</span> <span class="p_context"> static u64 swiotlb_powerpc_get_required(struct device *dev)</span>
  * map_page, and unmap_page on highmem, use normal dma_ops
  * for everything else.
  */
<span class="p_del">-struct dma_map_ops swiotlb_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops swiotlb_dma_ops = {</span>
 	.alloc = __dma_direct_alloc_coherent,
 	.free = __dma_direct_free_coherent,
 	.mmap = dma_direct_mmap_coherent,
<span class="p_header">diff --git a/arch/powerpc/kernel/dma.c b/arch/powerpc/kernel/dma.c</span>
<span class="p_header">index 6877e3fa95bb..03b98f1f98ec 100644</span>
<span class="p_header">--- a/arch/powerpc/kernel/dma.c</span>
<span class="p_header">+++ b/arch/powerpc/kernel/dma.c</span>
<span class="p_chunk">@@ -274,7 +274,7 @@</span> <span class="p_context"> static inline void dma_direct_sync_single(struct device *dev,</span>
 }
 #endif
 
<span class="p_del">-struct dma_map_ops dma_direct_ops = {</span>
<span class="p_add">+const struct dma_map_ops dma_direct_ops = {</span>
 	.alloc				= dma_direct_alloc_coherent,
 	.free				= dma_direct_free_coherent,
 	.mmap				= dma_direct_mmap_coherent,
<span class="p_chunk">@@ -316,7 +316,7 @@</span> <span class="p_context"> EXPORT_SYMBOL(dma_set_coherent_mask);</span>
 
 int __dma_set_mask(struct device *dev, u64 dma_mask)
 {
<span class="p_del">-	struct dma_map_ops *dma_ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *dma_ops = get_dma_ops(dev);</span>
 
 	if ((dma_ops != NULL) &amp;&amp; (dma_ops-&gt;set_dma_mask != NULL))
 		return dma_ops-&gt;set_dma_mask(dev, dma_mask);
<span class="p_chunk">@@ -344,7 +344,7 @@</span> <span class="p_context"> EXPORT_SYMBOL(dma_set_mask);</span>
 
 u64 __dma_get_required_mask(struct device *dev)
 {
<span class="p_del">-	struct dma_map_ops *dma_ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *dma_ops = get_dma_ops(dev);</span>
 
 	if (unlikely(dma_ops == NULL))
 		return 0;
<span class="p_header">diff --git a/arch/powerpc/kernel/pci-common.c b/arch/powerpc/kernel/pci-common.c</span>
<span class="p_header">index 74bec5498972..09db4778435c 100644</span>
<span class="p_header">--- a/arch/powerpc/kernel/pci-common.c</span>
<span class="p_header">+++ b/arch/powerpc/kernel/pci-common.c</span>
<span class="p_chunk">@@ -59,14 +59,14 @@</span> <span class="p_context"> resource_size_t isa_mem_base;</span>
 EXPORT_SYMBOL(isa_mem_base);
 
 
<span class="p_del">-static struct dma_map_ops *pci_dma_ops = &amp;dma_direct_ops;</span>
<span class="p_add">+static const struct dma_map_ops *pci_dma_ops = &amp;dma_direct_ops;</span>
 
<span class="p_del">-void set_pci_dma_ops(struct dma_map_ops *dma_ops)</span>
<span class="p_add">+void set_pci_dma_ops(const struct dma_map_ops *dma_ops)</span>
 {
 	pci_dma_ops = dma_ops;
 }
 
<span class="p_del">-struct dma_map_ops *get_pci_dma_ops(void)</span>
<span class="p_add">+const struct dma_map_ops *get_pci_dma_ops(void)</span>
 {
 	return pci_dma_ops;
 }
<span class="p_header">diff --git a/arch/powerpc/platforms/cell/iommu.c b/arch/powerpc/platforms/cell/iommu.c</span>
<span class="p_header">index 7ff51f96a00e..e1413e69e5fe 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/cell/iommu.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/cell/iommu.c</span>
<span class="p_chunk">@@ -651,7 +651,7 @@</span> <span class="p_context"> static int dma_fixed_dma_supported(struct device *dev, u64 mask)</span>
 
 static int dma_set_mask_and_switch(struct device *dev, u64 dma_mask);
 
<span class="p_del">-static struct dma_map_ops dma_iommu_fixed_ops = {</span>
<span class="p_add">+static const struct dma_map_ops dma_iommu_fixed_ops = {</span>
 	.alloc          = dma_fixed_alloc_coherent,
 	.free           = dma_fixed_free_coherent,
 	.map_sg         = dma_fixed_map_sg,
<span class="p_chunk">@@ -1172,7 +1172,7 @@</span> <span class="p_context"> __setup(&quot;iommu_fixed=&quot;, setup_iommu_fixed);</span>
 
 static u64 cell_dma_get_required_mask(struct device *dev)
 {
<span class="p_del">-	struct dma_map_ops *dma_ops;</span>
<span class="p_add">+	const struct dma_map_ops *dma_ops;</span>
 
 	if (!dev-&gt;dma_mask)
 		return 0;
<span class="p_header">diff --git a/arch/powerpc/platforms/powernv/npu-dma.c b/arch/powerpc/platforms/powernv/npu-dma.c</span>
<span class="p_header">index 73b155fd4481..1c383f38031d 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/powernv/npu-dma.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/powernv/npu-dma.c</span>
<span class="p_chunk">@@ -115,7 +115,7 @@</span> <span class="p_context"> static u64 dma_npu_get_required_mask(struct device *dev)</span>
 	return 0;
 }
 
<span class="p_del">-static struct dma_map_ops dma_npu_ops = {</span>
<span class="p_add">+static const struct dma_map_ops dma_npu_ops = {</span>
 	.map_page		= dma_npu_map_page,
 	.map_sg			= dma_npu_map_sg,
 	.alloc			= dma_npu_alloc,
<span class="p_header">diff --git a/arch/powerpc/platforms/ps3/system-bus.c b/arch/powerpc/platforms/ps3/system-bus.c</span>
<span class="p_header">index 8af1c15aef85..c81450d98794 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/ps3/system-bus.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/ps3/system-bus.c</span>
<span class="p_chunk">@@ -701,7 +701,7 @@</span> <span class="p_context"> static u64 ps3_dma_get_required_mask(struct device *_dev)</span>
 	return DMA_BIT_MASK(32);
 }
 
<span class="p_del">-static struct dma_map_ops ps3_sb_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops ps3_sb_dma_ops = {</span>
 	.alloc = ps3_alloc_coherent,
 	.free = ps3_free_coherent,
 	.map_sg = ps3_sb_map_sg,
<span class="p_chunk">@@ -712,7 +712,7 @@</span> <span class="p_context"> static struct dma_map_ops ps3_sb_dma_ops = {</span>
 	.unmap_page = ps3_unmap_page,
 };
 
<span class="p_del">-static struct dma_map_ops ps3_ioc0_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops ps3_ioc0_dma_ops = {</span>
 	.alloc = ps3_alloc_coherent,
 	.free = ps3_free_coherent,
 	.map_sg = ps3_ioc0_map_sg,
<span class="p_header">diff --git a/arch/powerpc/platforms/pseries/ibmebus.c b/arch/powerpc/platforms/pseries/ibmebus.c</span>
<span class="p_header">index 614c28537141..2e36a0b8944a 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/pseries/ibmebus.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/pseries/ibmebus.c</span>
<span class="p_chunk">@@ -136,7 +136,7 @@</span> <span class="p_context"> static u64 ibmebus_dma_get_required_mask(struct device *dev)</span>
 	return DMA_BIT_MASK(64);
 }
 
<span class="p_del">-static struct dma_map_ops ibmebus_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops ibmebus_dma_ops = {</span>
 	.alloc              = ibmebus_alloc_coherent,
 	.free               = ibmebus_free_coherent,
 	.map_sg             = ibmebus_map_sg,
<span class="p_header">diff --git a/arch/powerpc/platforms/pseries/vio.c b/arch/powerpc/platforms/pseries/vio.c</span>
<span class="p_header">index 2c8fb3ec989e..720493932486 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/pseries/vio.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/pseries/vio.c</span>
<span class="p_chunk">@@ -615,7 +615,7 @@</span> <span class="p_context"> static u64 vio_dma_get_required_mask(struct device *dev)</span>
         return dma_iommu_ops.get_required_mask(dev);
 }
 
<span class="p_del">-static struct dma_map_ops vio_dma_mapping_ops = {</span>
<span class="p_add">+static const struct dma_map_ops vio_dma_mapping_ops = {</span>
 	.alloc             = vio_dma_iommu_alloc_coherent,
 	.free              = vio_dma_iommu_free_coherent,
 	.mmap		   = dma_direct_mmap_coherent,
<span class="p_header">diff --git a/arch/s390/include/asm/device.h b/arch/s390/include/asm/device.h</span>
<span class="p_header">index 4a9f35e0973f..7955a9799466 100644</span>
<span class="p_header">--- a/arch/s390/include/asm/device.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/device.h</span>
<span class="p_chunk">@@ -4,7 +4,7 @@</span> <span class="p_context"></span>
  * This file is released under the GPLv2
  */
 struct dev_archdata {
<span class="p_del">-	struct dma_map_ops *dma_ops;</span>
<span class="p_add">+	const struct dma_map_ops *dma_ops;</span>
 };
 
 struct pdev_archdata {
<span class="p_header">diff --git a/arch/s390/include/asm/dma-mapping.h b/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_header">index ffaba07f50ab..2776d205b1ff 100644</span>
<span class="p_header">--- a/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -10,9 +10,9 @@</span> <span class="p_context"></span>
 
 #define DMA_ERROR_CODE		(~(dma_addr_t) 0x0)
 
<span class="p_del">-extern struct dma_map_ops s390_pci_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops s390_pci_dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	if (dev &amp;&amp; dev-&gt;archdata.dma_ops)
 		return dev-&gt;archdata.dma_ops;
<span class="p_header">diff --git a/arch/s390/pci/pci_dma.c b/arch/s390/pci/pci_dma.c</span>
<span class="p_header">index 1d7a9c71944a..9081a57fa340 100644</span>
<span class="p_header">--- a/arch/s390/pci/pci_dma.c</span>
<span class="p_header">+++ b/arch/s390/pci/pci_dma.c</span>
<span class="p_chunk">@@ -650,7 +650,7 @@</span> <span class="p_context"> static int __init dma_debug_do_init(void)</span>
 }
 fs_initcall(dma_debug_do_init);
 
<span class="p_del">-struct dma_map_ops s390_pci_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops s390_pci_dma_ops = {</span>
 	.alloc		= s390_dma_alloc,
 	.free		= s390_dma_free,
 	.map_sg		= s390_dma_map_sg,
<span class="p_header">diff --git a/arch/sh/include/asm/dma-mapping.h b/arch/sh/include/asm/dma-mapping.h</span>
<span class="p_header">index 0052ad40e86d..a7382c34c241 100644</span>
<span class="p_header">--- a/arch/sh/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/sh/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -1,10 +1,10 @@</span> <span class="p_context"></span>
 #ifndef __ASM_SH_DMA_MAPPING_H
 #define __ASM_SH_DMA_MAPPING_H
 
<span class="p_del">-extern struct dma_map_ops *dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops *dma_ops;</span>
 extern void no_iommu_init(void);
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return dma_ops;
 }
<span class="p_header">diff --git a/arch/sh/kernel/dma-nommu.c b/arch/sh/kernel/dma-nommu.c</span>
<span class="p_header">index 47fee3b6e29c..d24c707b2181 100644</span>
<span class="p_header">--- a/arch/sh/kernel/dma-nommu.c</span>
<span class="p_header">+++ b/arch/sh/kernel/dma-nommu.c</span>
<span class="p_chunk">@@ -65,7 +65,7 @@</span> <span class="p_context"> static void nommu_sync_sg(struct device *dev, struct scatterlist *sg,</span>
 }
 #endif
 
<span class="p_del">-struct dma_map_ops nommu_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops nommu_dma_ops = {</span>
 	.alloc			= dma_generic_alloc_coherent,
 	.free			= dma_generic_free_coherent,
 	.map_page		= nommu_map_page,
<span class="p_header">diff --git a/arch/sh/mm/consistent.c b/arch/sh/mm/consistent.c</span>
<span class="p_header">index 92b6976fde59..d1275adfa0ef 100644</span>
<span class="p_header">--- a/arch/sh/mm/consistent.c</span>
<span class="p_header">+++ b/arch/sh/mm/consistent.c</span>
<span class="p_chunk">@@ -22,7 +22,7 @@</span> <span class="p_context"></span>
 
 #define PREALLOC_DMA_DEBUG_ENTRIES	4096
 
<span class="p_del">-struct dma_map_ops *dma_ops;</span>
<span class="p_add">+const struct dma_map_ops *dma_ops;</span>
 EXPORT_SYMBOL(dma_ops);
 
 static int __init dma_init(void)
<span class="p_header">diff --git a/arch/sparc/include/asm/dma-mapping.h b/arch/sparc/include/asm/dma-mapping.h</span>
<span class="p_header">index 1180ae254154..3d2babc0c4c6 100644</span>
<span class="p_header">--- a/arch/sparc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -18,13 +18,13 @@</span> <span class="p_context"> static inline void dma_cache_sync(struct device *dev, void *vaddr, size_t size,</span>
 	 */
 }
 
<span class="p_del">-extern struct dma_map_ops *dma_ops;</span>
<span class="p_del">-extern struct dma_map_ops *leon_dma_ops;</span>
<span class="p_del">-extern struct dma_map_ops pci32_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops *dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops *leon_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops pci32_dma_ops;</span>
 
 extern struct bus_type pci_bus_type;
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 #ifdef CONFIG_SPARC_LEON
 	if (sparc_cpu_model == sparc_leon)
<span class="p_header">diff --git a/arch/sparc/kernel/iommu.c b/arch/sparc/kernel/iommu.c</span>
<span class="p_header">index 9df997995f6b..c63ba99ca551 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/iommu.c</span>
<span class="p_header">+++ b/arch/sparc/kernel/iommu.c</span>
<span class="p_chunk">@@ -741,7 +741,7 @@</span> <span class="p_context"> static void dma_4u_sync_sg_for_cpu(struct device *dev,</span>
 	spin_unlock_irqrestore(&amp;iommu-&gt;lock, flags);
 }
 
<span class="p_del">-static struct dma_map_ops sun4u_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops sun4u_dma_ops = {</span>
 	.alloc			= dma_4u_alloc_coherent,
 	.free			= dma_4u_free_coherent,
 	.map_page		= dma_4u_map_page,
<span class="p_chunk">@@ -752,7 +752,7 @@</span> <span class="p_context"> static struct dma_map_ops sun4u_dma_ops = {</span>
 	.sync_sg_for_cpu	= dma_4u_sync_sg_for_cpu,
 };
 
<span class="p_del">-struct dma_map_ops *dma_ops = &amp;sun4u_dma_ops;</span>
<span class="p_add">+const struct dma_map_ops *dma_ops = &amp;sun4u_dma_ops;</span>
 EXPORT_SYMBOL(dma_ops);
 
 int dma_supported(struct device *dev, u64 device_mask)
<span class="p_header">diff --git a/arch/sparc/kernel/ioport.c b/arch/sparc/kernel/ioport.c</span>
<span class="p_header">index 6ffaec44931a..cf20033a1458 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/ioport.c</span>
<span class="p_header">+++ b/arch/sparc/kernel/ioport.c</span>
<span class="p_chunk">@@ -401,7 +401,7 @@</span> <span class="p_context"> static void sbus_sync_sg_for_device(struct device *dev, struct scatterlist *sg,</span>
 	BUG();
 }
 
<span class="p_del">-static struct dma_map_ops sbus_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops sbus_dma_ops = {</span>
 	.alloc			= sbus_alloc_coherent,
 	.free			= sbus_free_coherent,
 	.map_page		= sbus_map_page,
<span class="p_chunk">@@ -637,7 +637,7 @@</span> <span class="p_context"> static void pci32_sync_sg_for_device(struct device *device, struct scatterlist *</span>
 	}
 }
 
<span class="p_del">-struct dma_map_ops pci32_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops pci32_dma_ops = {</span>
 	.alloc			= pci32_alloc_coherent,
 	.free			= pci32_free_coherent,
 	.map_page		= pci32_map_page,
<span class="p_chunk">@@ -652,10 +652,10 @@</span> <span class="p_context"> struct dma_map_ops pci32_dma_ops = {</span>
 EXPORT_SYMBOL(pci32_dma_ops);
 
 /* leon re-uses pci32_dma_ops */
<span class="p_del">-struct dma_map_ops *leon_dma_ops = &amp;pci32_dma_ops;</span>
<span class="p_add">+const struct dma_map_ops *leon_dma_ops = &amp;pci32_dma_ops;</span>
 EXPORT_SYMBOL(leon_dma_ops);
 
<span class="p_del">-struct dma_map_ops *dma_ops = &amp;sbus_dma_ops;</span>
<span class="p_add">+const struct dma_map_ops *dma_ops = &amp;sbus_dma_ops;</span>
 EXPORT_SYMBOL(dma_ops);
 
 
<span class="p_header">diff --git a/arch/sparc/kernel/pci_sun4v.c b/arch/sparc/kernel/pci_sun4v.c</span>
<span class="p_header">index f4daccd12bf5..68bec7c97cb8 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/pci_sun4v.c</span>
<span class="p_header">+++ b/arch/sparc/kernel/pci_sun4v.c</span>
<span class="p_chunk">@@ -669,7 +669,7 @@</span> <span class="p_context"> static void dma_4v_unmap_sg(struct device *dev, struct scatterlist *sglist,</span>
 	local_irq_restore(flags);
 }
 
<span class="p_del">-static struct dma_map_ops sun4v_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops sun4v_dma_ops = {</span>
 	.alloc				= dma_4v_alloc_coherent,
 	.free				= dma_4v_free_coherent,
 	.map_page			= dma_4v_map_page,
<span class="p_header">diff --git a/arch/tile/include/asm/device.h b/arch/tile/include/asm/device.h</span>
<span class="p_header">index 6ab8bf146d4c..25f23ac7d361 100644</span>
<span class="p_header">--- a/arch/tile/include/asm/device.h</span>
<span class="p_header">+++ b/arch/tile/include/asm/device.h</span>
<span class="p_chunk">@@ -18,7 +18,7 @@</span> <span class="p_context"></span>
 
 struct dev_archdata {
 	/* DMA operations on that device */
<span class="p_del">-        struct dma_map_ops	*dma_ops;</span>
<span class="p_add">+        const struct dma_map_ops	*dma_ops;</span>
 
 	/* Offset of the DMA address from the PA. */
 	dma_addr_t		dma_offset;
<span class="p_header">diff --git a/arch/tile/include/asm/dma-mapping.h b/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_header">index 01ceb4a895b0..4a06cc75b856 100644</span>
<span class="p_header">--- a/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -24,12 +24,12 @@</span> <span class="p_context"></span>
 #define ARCH_HAS_DMA_GET_REQUIRED_MASK
 #endif
 
<span class="p_del">-extern struct dma_map_ops *tile_dma_map_ops;</span>
<span class="p_del">-extern struct dma_map_ops *gx_pci_dma_map_ops;</span>
<span class="p_del">-extern struct dma_map_ops *gx_legacy_pci_dma_map_ops;</span>
<span class="p_del">-extern struct dma_map_ops *gx_hybrid_pci_dma_map_ops;</span>
<span class="p_add">+extern const struct dma_map_ops *tile_dma_map_ops;</span>
<span class="p_add">+extern const struct dma_map_ops *gx_pci_dma_map_ops;</span>
<span class="p_add">+extern const struct dma_map_ops *gx_legacy_pci_dma_map_ops;</span>
<span class="p_add">+extern const struct dma_map_ops *gx_hybrid_pci_dma_map_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	if (dev &amp;&amp; dev-&gt;archdata.dma_ops)
 		return dev-&gt;archdata.dma_ops;
<span class="p_chunk">@@ -59,7 +59,7 @@</span> <span class="p_context"> static inline phys_addr_t dma_to_phys(struct device *dev, dma_addr_t daddr)</span>
 
 static inline void dma_mark_clean(void *addr, size_t size) {}
 
<span class="p_del">-static inline void set_dma_ops(struct device *dev, struct dma_map_ops *ops)</span>
<span class="p_add">+static inline void set_dma_ops(struct device *dev, const struct dma_map_ops *ops)</span>
 {
 	dev-&gt;archdata.dma_ops = ops;
 }
<span class="p_header">diff --git a/arch/tile/kernel/pci-dma.c b/arch/tile/kernel/pci-dma.c</span>
<span class="p_header">index 24e0f8c21f2f..569bb6dd154a 100644</span>
<span class="p_header">--- a/arch/tile/kernel/pci-dma.c</span>
<span class="p_header">+++ b/arch/tile/kernel/pci-dma.c</span>
<span class="p_chunk">@@ -329,7 +329,7 @@</span> <span class="p_context"> tile_dma_supported(struct device *dev, u64 mask)</span>
 	return 1;
 }
 
<span class="p_del">-static struct dma_map_ops tile_default_dma_map_ops = {</span>
<span class="p_add">+static const struct dma_map_ops tile_default_dma_map_ops = {</span>
 	.alloc = tile_dma_alloc_coherent,
 	.free = tile_dma_free_coherent,
 	.map_page = tile_dma_map_page,
<span class="p_chunk">@@ -344,7 +344,7 @@</span> <span class="p_context"> static struct dma_map_ops tile_default_dma_map_ops = {</span>
 	.dma_supported = tile_dma_supported
 };
 
<span class="p_del">-struct dma_map_ops *tile_dma_map_ops = &amp;tile_default_dma_map_ops;</span>
<span class="p_add">+const struct dma_map_ops *tile_dma_map_ops = &amp;tile_default_dma_map_ops;</span>
 EXPORT_SYMBOL(tile_dma_map_ops);
 
 /* Generic PCI DMA mapping functions */
<span class="p_chunk">@@ -516,7 +516,7 @@</span> <span class="p_context"> tile_pci_dma_supported(struct device *dev, u64 mask)</span>
 	return 1;
 }
 
<span class="p_del">-static struct dma_map_ops tile_pci_default_dma_map_ops = {</span>
<span class="p_add">+static const struct dma_map_ops tile_pci_default_dma_map_ops = {</span>
 	.alloc = tile_pci_dma_alloc_coherent,
 	.free = tile_pci_dma_free_coherent,
 	.map_page = tile_pci_dma_map_page,
<span class="p_chunk">@@ -531,7 +531,7 @@</span> <span class="p_context"> static struct dma_map_ops tile_pci_default_dma_map_ops = {</span>
 	.dma_supported = tile_pci_dma_supported
 };
 
<span class="p_del">-struct dma_map_ops *gx_pci_dma_map_ops = &amp;tile_pci_default_dma_map_ops;</span>
<span class="p_add">+const struct dma_map_ops *gx_pci_dma_map_ops = &amp;tile_pci_default_dma_map_ops;</span>
 EXPORT_SYMBOL(gx_pci_dma_map_ops);
 
 /* PCI DMA mapping functions for legacy PCI devices */
<span class="p_chunk">@@ -552,7 +552,7 @@</span> <span class="p_context"> static void tile_swiotlb_free_coherent(struct device *dev, size_t size,</span>
 	swiotlb_free_coherent(dev, size, vaddr, dma_addr);
 }
 
<span class="p_del">-static struct dma_map_ops pci_swiotlb_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops pci_swiotlb_dma_ops = {</span>
 	.alloc = tile_swiotlb_alloc_coherent,
 	.free = tile_swiotlb_free_coherent,
 	.map_page = swiotlb_map_page,
<span class="p_chunk">@@ -567,7 +567,7 @@</span> <span class="p_context"> static struct dma_map_ops pci_swiotlb_dma_ops = {</span>
 	.mapping_error = swiotlb_dma_mapping_error,
 };
 
<span class="p_del">-static struct dma_map_ops pci_hybrid_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops pci_hybrid_dma_ops = {</span>
 	.alloc = tile_swiotlb_alloc_coherent,
 	.free = tile_swiotlb_free_coherent,
 	.map_page = tile_pci_dma_map_page,
<span class="p_chunk">@@ -582,18 +582,18 @@</span> <span class="p_context"> static struct dma_map_ops pci_hybrid_dma_ops = {</span>
 	.dma_supported = tile_pci_dma_supported
 };
 
<span class="p_del">-struct dma_map_ops *gx_legacy_pci_dma_map_ops = &amp;pci_swiotlb_dma_ops;</span>
<span class="p_del">-struct dma_map_ops *gx_hybrid_pci_dma_map_ops = &amp;pci_hybrid_dma_ops;</span>
<span class="p_add">+const struct dma_map_ops *gx_legacy_pci_dma_map_ops = &amp;pci_swiotlb_dma_ops;</span>
<span class="p_add">+const struct dma_map_ops *gx_hybrid_pci_dma_map_ops = &amp;pci_hybrid_dma_ops;</span>
 #else
<span class="p_del">-struct dma_map_ops *gx_legacy_pci_dma_map_ops;</span>
<span class="p_del">-struct dma_map_ops *gx_hybrid_pci_dma_map_ops;</span>
<span class="p_add">+const struct dma_map_ops *gx_legacy_pci_dma_map_ops;</span>
<span class="p_add">+const struct dma_map_ops *gx_hybrid_pci_dma_map_ops;</span>
 #endif
 EXPORT_SYMBOL(gx_legacy_pci_dma_map_ops);
 EXPORT_SYMBOL(gx_hybrid_pci_dma_map_ops);
 
 int dma_set_mask(struct device *dev, u64 mask)
 {
<span class="p_del">-	struct dma_map_ops *dma_ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *dma_ops = get_dma_ops(dev);</span>
 
 	/*
 	 * For PCI devices with 64-bit DMA addressing capability, promote
<span class="p_chunk">@@ -623,7 +623,7 @@</span> <span class="p_context"> EXPORT_SYMBOL(dma_set_mask);</span>
 #ifdef CONFIG_ARCH_HAS_DMA_SET_COHERENT_MASK
 int dma_set_coherent_mask(struct device *dev, u64 mask)
 {
<span class="p_del">-	struct dma_map_ops *dma_ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *dma_ops = get_dma_ops(dev);</span>
 
 	/*
 	 * For PCI devices with 64-bit DMA addressing capability, promote
<span class="p_header">diff --git a/arch/unicore32/include/asm/dma-mapping.h b/arch/unicore32/include/asm/dma-mapping.h</span>
<span class="p_header">index 4749854afd03..14d7729c7b73 100644</span>
<span class="p_header">--- a/arch/unicore32/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/unicore32/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -21,9 +21,9 @@</span> <span class="p_context"></span>
 #include &lt;asm/memory.h&gt;
 #include &lt;asm/cacheflush.h&gt;
 
<span class="p_del">-extern struct dma_map_ops swiotlb_dma_map_ops;</span>
<span class="p_add">+extern const struct dma_map_ops swiotlb_dma_map_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return &amp;swiotlb_dma_map_ops;
 }
<span class="p_header">diff --git a/arch/unicore32/mm/dma-swiotlb.c b/arch/unicore32/mm/dma-swiotlb.c</span>
<span class="p_header">index 3e9f6489ba38..525413d6690e 100644</span>
<span class="p_header">--- a/arch/unicore32/mm/dma-swiotlb.c</span>
<span class="p_header">+++ b/arch/unicore32/mm/dma-swiotlb.c</span>
<span class="p_chunk">@@ -31,7 +31,7 @@</span> <span class="p_context"> static void unicore_swiotlb_free_coherent(struct device *dev, size_t size,</span>
 	swiotlb_free_coherent(dev, size, vaddr, dma_addr);
 }
 
<span class="p_del">-struct dma_map_ops swiotlb_dma_map_ops = {</span>
<span class="p_add">+const struct dma_map_ops swiotlb_dma_map_ops = {</span>
 	.alloc = unicore_swiotlb_alloc_coherent,
 	.free = unicore_swiotlb_free_coherent,
 	.map_sg = swiotlb_map_sg_attrs,
<span class="p_header">diff --git a/arch/x86/include/asm/device.h b/arch/x86/include/asm/device.h</span>
<span class="p_header">index 684ed6c3aa67..b2d0b4ced7e3 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/device.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/device.h</span>
<span class="p_chunk">@@ -3,7 +3,7 @@</span> <span class="p_context"></span>
 
 struct dev_archdata {
 #ifdef CONFIG_X86_DEV_DMA_OPS
<span class="p_del">-	struct dma_map_ops *dma_ops;</span>
<span class="p_add">+	const struct dma_map_ops *dma_ops;</span>
 #endif
 #if defined(CONFIG_INTEL_IOMMU) || defined(CONFIG_AMD_IOMMU)
 	void *iommu; /* hook for IOMMU specific extension */
<span class="p_chunk">@@ -13,7 +13,7 @@</span> <span class="p_context"> struct dev_archdata {</span>
 #if defined(CONFIG_X86_DEV_DMA_OPS) &amp;&amp; defined(CONFIG_PCI_DOMAINS)
 struct dma_domain {
 	struct list_head node;
<span class="p_del">-	struct dma_map_ops *dma_ops;</span>
<span class="p_add">+	const struct dma_map_ops *dma_ops;</span>
 	int domain_nr;
 };
 void add_dma_domain(struct dma_domain *domain);
<span class="p_header">diff --git a/arch/x86/include/asm/dma-mapping.h b/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_header">index 44461626830e..5e4772886a1e 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -25,9 +25,9 @@</span> <span class="p_context"> extern int iommu_merge;</span>
 extern struct device x86_dma_fallback_dev;
 extern int panic_on_overflow;
 
<span class="p_del">-extern struct dma_map_ops *dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops *dma_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 #ifndef CONFIG_X86_DEV_DMA_OPS
 	return dma_ops;
<span class="p_header">diff --git a/arch/x86/include/asm/iommu.h b/arch/x86/include/asm/iommu.h</span>
<span class="p_header">index 345c99cef152..793869879464 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/iommu.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/iommu.h</span>
<span class="p_chunk">@@ -1,7 +1,7 @@</span> <span class="p_context"></span>
 #ifndef _ASM_X86_IOMMU_H
 #define _ASM_X86_IOMMU_H
 
<span class="p_del">-extern struct dma_map_ops nommu_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops nommu_dma_ops;</span>
 extern int force_iommu, no_iommu;
 extern int iommu_detected;
 extern int iommu_pass_through;
<span class="p_header">diff --git a/arch/x86/kernel/amd_gart_64.c b/arch/x86/kernel/amd_gart_64.c</span>
<span class="p_header">index 63ff468a7986..82dfe32faaf4 100644</span>
<span class="p_header">--- a/arch/x86/kernel/amd_gart_64.c</span>
<span class="p_header">+++ b/arch/x86/kernel/amd_gart_64.c</span>
<span class="p_chunk">@@ -695,7 +695,7 @@</span> <span class="p_context"> static __init int init_amd_gatt(struct agp_kern_info *info)</span>
 	return -1;
 }
 
<span class="p_del">-static struct dma_map_ops gart_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops gart_dma_ops = {</span>
 	.map_sg				= gart_map_sg,
 	.unmap_sg			= gart_unmap_sg,
 	.map_page			= gart_map_page,
<span class="p_header">diff --git a/arch/x86/kernel/pci-calgary_64.c b/arch/x86/kernel/pci-calgary_64.c</span>
<span class="p_header">index 5d400ba1349d..17f180148c80 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-calgary_64.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-calgary_64.c</span>
<span class="p_chunk">@@ -478,7 +478,7 @@</span> <span class="p_context"> static void calgary_free_coherent(struct device *dev, size_t size,</span>
 	free_pages((unsigned long)vaddr, get_order(size));
 }
 
<span class="p_del">-static struct dma_map_ops calgary_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops calgary_dma_ops = {</span>
 	.alloc = calgary_alloc_coherent,
 	.free = calgary_free_coherent,
 	.map_sg = calgary_map_sg,
<span class="p_header">diff --git a/arch/x86/kernel/pci-dma.c b/arch/x86/kernel/pci-dma.c</span>
<span class="p_header">index d30c37750765..76f4c039baae 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-dma.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-dma.c</span>
<span class="p_chunk">@@ -17,7 +17,7 @@</span> <span class="p_context"></span>
 
 static int forbid_dac __read_mostly;
 
<span class="p_del">-struct dma_map_ops *dma_ops = &amp;nommu_dma_ops;</span>
<span class="p_add">+const struct dma_map_ops *dma_ops = &amp;nommu_dma_ops;</span>
 EXPORT_SYMBOL(dma_ops);
 
 static int iommu_sac_force __read_mostly;
<span class="p_chunk">@@ -214,7 +214,7 @@</span> <span class="p_context"> early_param(&quot;iommu&quot;, iommu_setup);</span>
 
 int dma_supported(struct device *dev, u64 mask)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 
 #ifdef CONFIG_PCI
 	if (mask &gt; 0xffffffff &amp;&amp; forbid_dac &gt; 0) {
<span class="p_header">diff --git a/arch/x86/kernel/pci-nommu.c b/arch/x86/kernel/pci-nommu.c</span>
<span class="p_header">index 00e71ce396a8..a88952ef371c 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-nommu.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-nommu.c</span>
<span class="p_chunk">@@ -88,7 +88,7 @@</span> <span class="p_context"> static void nommu_sync_sg_for_device(struct device *dev,</span>
 	flush_write_buffers();
 }
 
<span class="p_del">-struct dma_map_ops nommu_dma_ops = {</span>
<span class="p_add">+const struct dma_map_ops nommu_dma_ops = {</span>
 	.alloc			= dma_generic_alloc_coherent,
 	.free			= dma_generic_free_coherent,
 	.map_sg			= nommu_map_sg,
<span class="p_header">diff --git a/arch/x86/kernel/pci-swiotlb.c b/arch/x86/kernel/pci-swiotlb.c</span>
<span class="p_header">index 410efb2c7b80..1e23577e17cf 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-swiotlb.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-swiotlb.c</span>
<span class="p_chunk">@@ -45,7 +45,7 @@</span> <span class="p_context"> void x86_swiotlb_free_coherent(struct device *dev, size_t size,</span>
 		dma_generic_free_coherent(dev, size, vaddr, dma_addr, attrs);
 }
 
<span class="p_del">-static struct dma_map_ops swiotlb_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops swiotlb_dma_ops = {</span>
 	.mapping_error = swiotlb_dma_mapping_error,
 	.alloc = x86_swiotlb_alloc_coherent,
 	.free = x86_swiotlb_free_coherent,
<span class="p_header">diff --git a/arch/x86/pci/sta2x11-fixup.c b/arch/x86/pci/sta2x11-fixup.c</span>
<span class="p_header">index 052c1cb76305..aa3828823170 100644</span>
<span class="p_header">--- a/arch/x86/pci/sta2x11-fixup.c</span>
<span class="p_header">+++ b/arch/x86/pci/sta2x11-fixup.c</span>
<span class="p_chunk">@@ -179,7 +179,7 @@</span> <span class="p_context"> static void *sta2x11_swiotlb_alloc_coherent(struct device *dev,</span>
 }
 
 /* We have our own dma_ops: the same as swiotlb but from alloc (above) */
<span class="p_del">-static struct dma_map_ops sta2x11_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops sta2x11_dma_ops = {</span>
 	.alloc = sta2x11_swiotlb_alloc_coherent,
 	.free = x86_swiotlb_free_coherent,
 	.map_page = swiotlb_map_page,
<span class="p_header">diff --git a/arch/x86/xen/pci-swiotlb-xen.c b/arch/x86/xen/pci-swiotlb-xen.c</span>
<span class="p_header">index a0b36a9d5df1..42b08f8fc2ca 100644</span>
<span class="p_header">--- a/arch/x86/xen/pci-swiotlb-xen.c</span>
<span class="p_header">+++ b/arch/x86/xen/pci-swiotlb-xen.c</span>
<span class="p_chunk">@@ -18,7 +18,7 @@</span> <span class="p_context"></span>
 
 int xen_swiotlb __read_mostly;
 
<span class="p_del">-static struct dma_map_ops xen_swiotlb_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops xen_swiotlb_dma_ops = {</span>
 	.alloc = xen_swiotlb_alloc_coherent,
 	.free = xen_swiotlb_free_coherent,
 	.sync_single_for_cpu = xen_swiotlb_sync_single_for_cpu,
<span class="p_header">diff --git a/arch/xtensa/include/asm/device.h b/arch/xtensa/include/asm/device.h</span>
<span class="p_header">index fe1f5c878493..a77d45d39f35 100644</span>
<span class="p_header">--- a/arch/xtensa/include/asm/device.h</span>
<span class="p_header">+++ b/arch/xtensa/include/asm/device.h</span>
<span class="p_chunk">@@ -10,7 +10,7 @@</span> <span class="p_context"> struct dma_map_ops;</span>
 
 struct dev_archdata {
 	/* DMA operations on that device */
<span class="p_del">-	struct dma_map_ops *dma_ops;</span>
<span class="p_add">+	const struct dma_map_ops *dma_ops;</span>
 };
 
 struct pdev_archdata {
<span class="p_header">diff --git a/arch/xtensa/include/asm/dma-mapping.h b/arch/xtensa/include/asm/dma-mapping.h</span>
<span class="p_header">index 3fc1170a6488..50d23106cce0 100644</span>
<span class="p_header">--- a/arch/xtensa/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/xtensa/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -18,9 +18,9 @@</span> <span class="p_context"></span>
 
 #define DMA_ERROR_CODE		(~(dma_addr_t)0x0)
 
<span class="p_del">-extern struct dma_map_ops xtensa_dma_map_ops;</span>
<span class="p_add">+extern const struct dma_map_ops xtensa_dma_map_ops;</span>
 
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	if (dev &amp;&amp; dev-&gt;archdata.dma_ops)
 		return dev-&gt;archdata.dma_ops;
<span class="p_header">diff --git a/arch/xtensa/kernel/pci-dma.c b/arch/xtensa/kernel/pci-dma.c</span>
<span class="p_header">index 70e362e6038e..ecec5265a66d 100644</span>
<span class="p_header">--- a/arch/xtensa/kernel/pci-dma.c</span>
<span class="p_header">+++ b/arch/xtensa/kernel/pci-dma.c</span>
<span class="p_chunk">@@ -249,7 +249,7 @@</span> <span class="p_context"> int xtensa_dma_mapping_error(struct device *dev, dma_addr_t dma_addr)</span>
 	return 0;
 }
 
<span class="p_del">-struct dma_map_ops xtensa_dma_map_ops = {</span>
<span class="p_add">+const struct dma_map_ops xtensa_dma_map_ops = {</span>
 	.alloc = xtensa_dma_alloc,
 	.free = xtensa_dma_free,
 	.map_page = xtensa_map_page,
<span class="p_header">diff --git a/drivers/iommu/amd_iommu.c b/drivers/iommu/amd_iommu.c</span>
<span class="p_header">index 3ef0f42984f2..3703fb9db419 100644</span>
<span class="p_header">--- a/drivers/iommu/amd_iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/amd_iommu.c</span>
<span class="p_chunk">@@ -117,7 +117,7 @@</span> <span class="p_context"> static const struct iommu_ops amd_iommu_ops;</span>
 static ATOMIC_NOTIFIER_HEAD(ppr_notifier);
 int amd_iommu_max_glx_val = -1;
 
<span class="p_del">-static struct dma_map_ops amd_iommu_dma_ops;</span>
<span class="p_add">+static const struct dma_map_ops amd_iommu_dma_ops;</span>
 
 /*
  * This struct contains device specific data for the IOMMU
<span class="p_chunk">@@ -2728,7 +2728,7 @@</span> <span class="p_context"> static int amd_iommu_dma_supported(struct device *dev, u64 mask)</span>
 	return check_device(dev);
 }
 
<span class="p_del">-static struct dma_map_ops amd_iommu_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops amd_iommu_dma_ops = {</span>
 	.alloc		= alloc_coherent,
 	.free		= free_coherent,
 	.map_page	= map_page,
<span class="p_header">diff --git a/drivers/misc/mic/bus/mic_bus.c b/drivers/misc/mic/bus/mic_bus.c</span>
<span class="p_header">index be37890abb93..c4b27a25662a 100644</span>
<span class="p_header">--- a/drivers/misc/mic/bus/mic_bus.c</span>
<span class="p_header">+++ b/drivers/misc/mic/bus/mic_bus.c</span>
<span class="p_chunk">@@ -143,7 +143,7 @@</span> <span class="p_context"> static void mbus_release_dev(struct device *d)</span>
 }
 
 struct mbus_device *
<span class="p_del">-mbus_register_device(struct device *pdev, int id, struct dma_map_ops *dma_ops,</span>
<span class="p_add">+mbus_register_device(struct device *pdev, int id, const struct dma_map_ops *dma_ops,</span>
 		     struct mbus_hw_ops *hw_ops, int index,
 		     void __iomem *mmio_va)
 {
<span class="p_header">diff --git a/drivers/misc/mic/bus/scif_bus.c b/drivers/misc/mic/bus/scif_bus.c</span>
<span class="p_header">index ff6e01c25810..e5d377e97c86 100644</span>
<span class="p_header">--- a/drivers/misc/mic/bus/scif_bus.c</span>
<span class="p_header">+++ b/drivers/misc/mic/bus/scif_bus.c</span>
<span class="p_chunk">@@ -138,7 +138,7 @@</span> <span class="p_context"> static void scif_release_dev(struct device *d)</span>
 }
 
 struct scif_hw_dev *
<span class="p_del">-scif_register_device(struct device *pdev, int id, struct dma_map_ops *dma_ops,</span>
<span class="p_add">+scif_register_device(struct device *pdev, int id, const struct dma_map_ops *dma_ops,</span>
 		     struct scif_hw_ops *hw_ops, u8 dnode, u8 snode,
 		     struct mic_mw *mmio, struct mic_mw *aper, void *dp,
 		     void __iomem *rdp, struct dma_chan **chan, int num_chan,
<span class="p_header">diff --git a/drivers/misc/mic/bus/scif_bus.h b/drivers/misc/mic/bus/scif_bus.h</span>
<span class="p_header">index 94f29ac608b6..ff59568219ad 100644</span>
<span class="p_header">--- a/drivers/misc/mic/bus/scif_bus.h</span>
<span class="p_header">+++ b/drivers/misc/mic/bus/scif_bus.h</span>
<span class="p_chunk">@@ -113,7 +113,7 @@</span> <span class="p_context"> int scif_register_driver(struct scif_driver *driver);</span>
 void scif_unregister_driver(struct scif_driver *driver);
 struct scif_hw_dev *
 scif_register_device(struct device *pdev, int id,
<span class="p_del">-		     struct dma_map_ops *dma_ops,</span>
<span class="p_add">+		     const struct dma_map_ops *dma_ops,</span>
 		     struct scif_hw_ops *hw_ops, u8 dnode, u8 snode,
 		     struct mic_mw *mmio, struct mic_mw *aper,
 		     void *dp, void __iomem *rdp,
<span class="p_header">diff --git a/drivers/misc/mic/bus/vop_bus.c b/drivers/misc/mic/bus/vop_bus.c</span>
<span class="p_header">index 303da222f5b6..e3caa6c53922 100644</span>
<span class="p_header">--- a/drivers/misc/mic/bus/vop_bus.c</span>
<span class="p_header">+++ b/drivers/misc/mic/bus/vop_bus.c</span>
<span class="p_chunk">@@ -154,7 +154,7 @@</span> <span class="p_context"> vop_register_device(struct device *pdev, int id,</span>
 	vdev-&gt;dev.parent = pdev;
 	vdev-&gt;id.device = id;
 	vdev-&gt;id.vendor = VOP_DEV_ANY_ID;
<span class="p_del">-	vdev-&gt;dev.archdata.dma_ops = (struct dma_map_ops *)dma_ops;</span>
<span class="p_add">+	vdev-&gt;dev.archdata.dma_ops = dma_ops;</span>
 	vdev-&gt;dev.dma_mask = &amp;vdev-&gt;dev.coherent_dma_mask;
 	dma_set_mask(&amp;vdev-&gt;dev, DMA_BIT_MASK(64));
 	vdev-&gt;dev.release = vop_release_dev;
<span class="p_header">diff --git a/drivers/misc/mic/host/mic_boot.c b/drivers/misc/mic/host/mic_boot.c</span>
<span class="p_header">index 9599d732aff3..c327985c9523 100644</span>
<span class="p_header">--- a/drivers/misc/mic/host/mic_boot.c</span>
<span class="p_header">+++ b/drivers/misc/mic/host/mic_boot.c</span>
<span class="p_chunk">@@ -245,7 +245,7 @@</span> <span class="p_context"> static void __mic_dma_unmap_sg(struct device *dev,</span>
 	dma_unmap_sg(&amp;mdev-&gt;pdev-&gt;dev, sg, nents, dir);
 }
 
<span class="p_del">-static struct dma_map_ops __mic_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops __mic_dma_ops = {</span>
 	.alloc = __mic_dma_alloc,
 	.free = __mic_dma_free,
 	.map_page = __mic_dma_map_page,
<span class="p_chunk">@@ -344,7 +344,7 @@</span> <span class="p_context"> mic_dma_unmap_page(struct device *dev, dma_addr_t dma_addr,</span>
 	mic_unmap_single(mdev, dma_addr, size);
 }
 
<span class="p_del">-static struct dma_map_ops mic_dma_ops = {</span>
<span class="p_add">+static const struct dma_map_ops mic_dma_ops = {</span>
 	.map_page = mic_dma_map_page,
 	.unmap_page = mic_dma_unmap_page,
 };
<span class="p_header">diff --git a/drivers/parisc/ccio-dma.c b/drivers/parisc/ccio-dma.c</span>
<span class="p_header">index 553ef8a5d588..aeb073b5fe16 100644</span>
<span class="p_header">--- a/drivers/parisc/ccio-dma.c</span>
<span class="p_header">+++ b/drivers/parisc/ccio-dma.c</span>
<span class="p_chunk">@@ -1011,7 +1011,7 @@</span> <span class="p_context"> ccio_unmap_sg(struct device *dev, struct scatterlist *sglist, int nents,</span>
 	DBG_RUN_SG(&quot;%s() DONE (nents %d)\n&quot;, __func__, nents);
 }
 
<span class="p_del">-static struct dma_map_ops ccio_ops = {</span>
<span class="p_add">+static const struct dma_map_ops ccio_ops = {</span>
 	.dma_supported =	ccio_dma_supported,
 	.alloc =		ccio_alloc,
 	.free =			ccio_free,
<span class="p_header">diff --git a/drivers/parisc/sba_iommu.c b/drivers/parisc/sba_iommu.c</span>
<span class="p_header">index 151b86b6d2e2..33385e574433 100644</span>
<span class="p_header">--- a/drivers/parisc/sba_iommu.c</span>
<span class="p_header">+++ b/drivers/parisc/sba_iommu.c</span>
<span class="p_chunk">@@ -1069,7 +1069,7 @@</span> <span class="p_context"> sba_unmap_sg(struct device *dev, struct scatterlist *sglist, int nents,</span>
 
 }
 
<span class="p_del">-static struct dma_map_ops sba_ops = {</span>
<span class="p_add">+static const struct dma_map_ops sba_ops = {</span>
 	.dma_supported =	sba_dma_supported,
 	.alloc =		sba_alloc,
 	.free =			sba_free,
<span class="p_header">diff --git a/drivers/pci/host/vmd.c b/drivers/pci/host/vmd.c</span>
<span class="p_header">index 18ef1a93c10a..e27ad2a3bd33 100644</span>
<span class="p_header">--- a/drivers/pci/host/vmd.c</span>
<span class="p_header">+++ b/drivers/pci/host/vmd.c</span>
<span class="p_chunk">@@ -282,7 +282,7 @@</span> <span class="p_context"> static struct device *to_vmd_dev(struct device *dev)</span>
 	return &amp;vmd-&gt;dev-&gt;dev;
 }
 
<span class="p_del">-static struct dma_map_ops *vmd_dma_ops(struct device *dev)</span>
<span class="p_add">+static const struct dma_map_ops *vmd_dma_ops(struct device *dev)</span>
 {
 	return get_dma_ops(to_vmd_dev(dev));
 }
<span class="p_header">diff --git a/include/linux/dma-mapping.h b/include/linux/dma-mapping.h</span>
<span class="p_header">index 10c5a17b1f51..f1da68b82c63 100644</span>
<span class="p_header">--- a/include/linux/dma-mapping.h</span>
<span class="p_header">+++ b/include/linux/dma-mapping.h</span>
<span class="p_chunk">@@ -127,7 +127,7 @@</span> <span class="p_context"> struct dma_map_ops {</span>
 	int is_phys;
 };
 
<span class="p_del">-extern struct dma_map_ops dma_noop_ops;</span>
<span class="p_add">+extern const struct dma_map_ops dma_noop_ops;</span>
 
 #define DMA_BIT_MASK(n)	(((n) == 64) ? ~0ULL : ((1ULL&lt;&lt;(n))-1))
 
<span class="p_chunk">@@ -170,8 +170,8 @@</span> <span class="p_context"> int dma_mmap_from_coherent(struct device *dev, struct vm_area_struct *vma,</span>
  * dma dependent code.  Code that depends on the dma-mapping
  * API needs to set &#39;depends on HAS_DMA&#39; in its Kconfig
  */
<span class="p_del">-extern struct dma_map_ops bad_dma_ops;</span>
<span class="p_del">-static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+extern const struct dma_map_ops bad_dma_ops;</span>
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 {
 	return &amp;bad_dma_ops;
 }
<span class="p_chunk">@@ -182,7 +182,7 @@</span> <span class="p_context"> static inline dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr,</span>
 					      enum dma_data_direction dir,
 					      unsigned long attrs)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 	dma_addr_t addr;
 
 	kmemcheck_mark_initialized(ptr, size);
<span class="p_chunk">@@ -201,7 +201,7 @@</span> <span class="p_context"> static inline void dma_unmap_single_attrs(struct device *dev, dma_addr_t addr,</span>
 					  enum dma_data_direction dir,
 					  unsigned long attrs)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 
 	BUG_ON(!valid_dma_direction(dir));
 	if (ops-&gt;unmap_page)
<span class="p_chunk">@@ -217,7 +217,7 @@</span> <span class="p_context"> static inline int dma_map_sg_attrs(struct device *dev, struct scatterlist *sg,</span>
 				   int nents, enum dma_data_direction dir,
 				   unsigned long attrs)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 	int i, ents;
 	struct scatterlist *s;
 
<span class="p_chunk">@@ -235,7 +235,7 @@</span> <span class="p_context"> static inline void dma_unmap_sg_attrs(struct device *dev, struct scatterlist *sg</span>
 				      int nents, enum dma_data_direction dir,
 				      unsigned long attrs)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 
 	BUG_ON(!valid_dma_direction(dir));
 	debug_dma_unmap_sg(dev, sg, nents, dir);
<span class="p_chunk">@@ -249,7 +249,7 @@</span> <span class="p_context"> static inline dma_addr_t dma_map_page_attrs(struct device *dev,</span>
 					    enum dma_data_direction dir,
 					    unsigned long attrs)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 	dma_addr_t addr;
 
 	kmemcheck_mark_initialized(page_address(page) + offset, size);
<span class="p_chunk">@@ -265,7 +265,7 @@</span> <span class="p_context"> static inline void dma_unmap_page_attrs(struct device *dev,</span>
 					enum dma_data_direction dir,
 					unsigned long attrs)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 
 	BUG_ON(!valid_dma_direction(dir));
 	if (ops-&gt;unmap_page)
<span class="p_chunk">@@ -279,7 +279,7 @@</span> <span class="p_context"> static inline dma_addr_t dma_map_resource(struct device *dev,</span>
 					  enum dma_data_direction dir,
 					  unsigned long attrs)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 	dma_addr_t addr;
 
 	BUG_ON(!valid_dma_direction(dir));
<span class="p_chunk">@@ -300,7 +300,7 @@</span> <span class="p_context"> static inline void dma_unmap_resource(struct device *dev, dma_addr_t addr,</span>
 				      size_t size, enum dma_data_direction dir,
 				      unsigned long attrs)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 
 	BUG_ON(!valid_dma_direction(dir));
 	if (ops-&gt;unmap_resource)
<span class="p_chunk">@@ -312,7 +312,7 @@</span> <span class="p_context"> static inline void dma_sync_single_for_cpu(struct device *dev, dma_addr_t addr,</span>
 					   size_t size,
 					   enum dma_data_direction dir)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 
 	BUG_ON(!valid_dma_direction(dir));
 	if (ops-&gt;sync_single_for_cpu)
<span class="p_chunk">@@ -324,7 +324,7 @@</span> <span class="p_context"> static inline void dma_sync_single_for_device(struct device *dev,</span>
 					      dma_addr_t addr, size_t size,
 					      enum dma_data_direction dir)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 
 	BUG_ON(!valid_dma_direction(dir));
 	if (ops-&gt;sync_single_for_device)
<span class="p_chunk">@@ -364,7 +364,7 @@</span> <span class="p_context"> static inline void</span>
 dma_sync_sg_for_cpu(struct device *dev, struct scatterlist *sg,
 		    int nelems, enum dma_data_direction dir)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 
 	BUG_ON(!valid_dma_direction(dir));
 	if (ops-&gt;sync_sg_for_cpu)
<span class="p_chunk">@@ -376,7 +376,7 @@</span> <span class="p_context"> static inline void</span>
 dma_sync_sg_for_device(struct device *dev, struct scatterlist *sg,
 		       int nelems, enum dma_data_direction dir)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 
 	BUG_ON(!valid_dma_direction(dir));
 	if (ops-&gt;sync_sg_for_device)
<span class="p_chunk">@@ -421,7 +421,7 @@</span> <span class="p_context"> static inline int</span>
 dma_mmap_attrs(struct device *dev, struct vm_area_struct *vma, void *cpu_addr,
 	       dma_addr_t dma_addr, size_t size, unsigned long attrs)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 	BUG_ON(!ops);
 	if (ops-&gt;mmap)
 		return ops-&gt;mmap(dev, vma, cpu_addr, dma_addr, size, attrs);
<span class="p_chunk">@@ -439,7 +439,7 @@</span> <span class="p_context"> dma_get_sgtable_attrs(struct device *dev, struct sg_table *sgt, void *cpu_addr,</span>
 		      dma_addr_t dma_addr, size_t size,
 		      unsigned long attrs)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 	BUG_ON(!ops);
 	if (ops-&gt;get_sgtable)
 		return ops-&gt;get_sgtable(dev, sgt, cpu_addr, dma_addr, size,
<span class="p_chunk">@@ -457,7 +457,7 @@</span> <span class="p_context"> static inline void *dma_alloc_attrs(struct device *dev, size_t size,</span>
 				       dma_addr_t *dma_handle, gfp_t flag,
 				       unsigned long attrs)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 	void *cpu_addr;
 
 	BUG_ON(!ops);
<span class="p_chunk">@@ -479,7 +479,7 @@</span> <span class="p_context"> static inline void dma_free_attrs(struct device *dev, size_t size,</span>
 				     void *cpu_addr, dma_addr_t dma_handle,
 				     unsigned long attrs)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 
 	BUG_ON(!ops);
 	WARN_ON(irqs_disabled());
<span class="p_chunk">@@ -537,7 +537,7 @@</span> <span class="p_context"> static inline int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)</span>
 #ifndef HAVE_ARCH_DMA_SUPPORTED
 static inline int dma_supported(struct device *dev, u64 mask)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 
 	if (!ops)
 		return 0;
<span class="p_chunk">@@ -550,7 +550,7 @@</span> <span class="p_context"> static inline int dma_supported(struct device *dev, u64 mask)</span>
 #ifndef HAVE_ARCH_DMA_SET_MASK
 static inline int dma_set_mask(struct device *dev, u64 mask)
 {
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
 
 	if (ops-&gt;set_dma_mask)
 		return ops-&gt;set_dma_mask(dev, mask);
<span class="p_header">diff --git a/include/linux/mic_bus.h b/include/linux/mic_bus.h</span>
<span class="p_header">index 27d7c95fd0da..504d54c71bdb 100644</span>
<span class="p_header">--- a/include/linux/mic_bus.h</span>
<span class="p_header">+++ b/include/linux/mic_bus.h</span>
<span class="p_chunk">@@ -90,7 +90,7 @@</span> <span class="p_context"> struct mbus_hw_ops {</span>
 };
 
 struct mbus_device *
<span class="p_del">-mbus_register_device(struct device *pdev, int id, struct dma_map_ops *dma_ops,</span>
<span class="p_add">+mbus_register_device(struct device *pdev, int id, const struct dma_map_ops *dma_ops,</span>
 		     struct mbus_hw_ops *hw_ops, int index,
 		     void __iomem *mmio_va);
 void mbus_unregister_device(struct mbus_device *mbdev);
<span class="p_header">diff --git a/include/xen/arm/hypervisor.h b/include/xen/arm/hypervisor.h</span>
<span class="p_header">index 95251512e2c4..44b587b49904 100644</span>
<span class="p_header">--- a/include/xen/arm/hypervisor.h</span>
<span class="p_header">+++ b/include/xen/arm/hypervisor.h</span>
<span class="p_chunk">@@ -18,7 +18,7 @@</span> <span class="p_context"> static inline enum paravirt_lazy_mode paravirt_get_lazy_mode(void)</span>
 	return PARAVIRT_LAZY_NONE;
 }
 
<span class="p_del">-extern struct dma_map_ops *xen_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops *xen_dma_ops;</span>
 
 #ifdef CONFIG_XEN
 void __init xen_early_init(void);
<span class="p_header">diff --git a/lib/dma-noop.c b/lib/dma-noop.c</span>
<span class="p_header">index 3d766e78fbe2..65e49dd35b7b 100644</span>
<span class="p_header">--- a/lib/dma-noop.c</span>
<span class="p_header">+++ b/lib/dma-noop.c</span>
<span class="p_chunk">@@ -64,7 +64,7 @@</span> <span class="p_context"> static int dma_noop_supported(struct device *dev, u64 mask)</span>
 	return 1;
 }
 
<span class="p_del">-struct dma_map_ops dma_noop_ops = {</span>
<span class="p_add">+const struct dma_map_ops dma_noop_ops = {</span>
 	.alloc			= dma_noop_alloc,
 	.free			= dma_noop_free,
 	.map_page		= dma_noop_map_page,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



