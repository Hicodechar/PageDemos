
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>powerpc/mm: Call flush_tlb_kernel_range with interrupts enabled - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    powerpc/mm: Call flush_tlb_kernel_range with interrupts enabled</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=29152">Guenter Roeck</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 24, 2017, 5:30 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1506274243-28540-1-git-send-email-linux@roeck-us.net&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9968103/mbox/"
   >mbox</a>
|
   <a href="/patch/9968103/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9968103/">/patch/9968103/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	4BF68602B9 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 24 Sep 2017 17:30:51 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 376BA28C1E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 24 Sep 2017 17:30:51 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 2B71E28C4D; Sun, 24 Sep 2017 17:30:51 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.3 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI, RCVD_IN_SORBS_SPAM,
	T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5037228C1E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 24 Sep 2017 17:30:50 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752750AbdIXRas (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 24 Sep 2017 13:30:48 -0400
Received: from mail-pg0-f66.google.com ([74.125.83.66]:38727 &quot;EHLO
	mail-pg0-f66.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752624AbdIXRaq (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 24 Sep 2017 13:30:46 -0400
Received: by mail-pg0-f66.google.com with SMTP id m30so3649588pgn.5
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Sun, 24 Sep 2017 10:30:46 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=sender:from:to:cc:subject:date:message-id;
	bh=3XKiluf8/Ri+ynXc1uNuGfVX7SXoxloR/urrOSmFEfc=;
	b=EfmGZ1ZVr8Sr+c1naxLcLMbHQMgrxiKFAsCMeefoUSZknhznggy9Yl+CQ23bcWnwrT
	P83im5XbtZ5k44c+lj4vNSZrx/cWO68RKnXj/+3wmvpuPowK4Kdvezbva7N0ZKg/1B0r
	bcsM6iDCDq0wAWGmkgQF0VHpcQ2vGy5OxXzKSmVvPt1xMPj4l3n5DV13w0NC5DBSLjiA
	ss3cygnWZo4v6WNINLDai1vH0DBgAX5S96nco+OLH0pNSTsdE0Dy1Xy8Z+zgBxwzctky
	X9f1M6auNlgwogsLsheI136prkuEX34Gr1m9iPlR8lonpshARZEkExhHHQGItWMCqRmt
	Pozw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:sender:from:to:cc:subject:date:message-id;
	bh=3XKiluf8/Ri+ynXc1uNuGfVX7SXoxloR/urrOSmFEfc=;
	b=BGbW5LX7x5EUacYjfWejSk5M9Xf85LrSJCnJUnVB+M0F2pDeE61+e9Rk4wG6Kz420E
	UiaXcV+tX0m8fElC/GdphBnCJVQUxV8m1WDsw2wlni5ZF4jru6nAyw+7EIFmozrFV+3a
	km+lxdomBiyn5GcmtRF9Y8nxKyMsHgXGFGgZxkIy8rIJ+Gi+a5aAj5ARLRw/21fj41ND
	EZAAOrrMFgdzDfzuIF7g37+CnwtwTv/6X0fB7GCuSOA3XUr+DMFi0CYYpD/PlV9tMqBi
	V4eL32ES5qSGCHHVFDu52NnWEC4XOZhUSnzN+0sSLgOnFKzfID1gCaG0feiM5gIMDdxY
	VmnQ==
X-Gm-Message-State: AHPjjUgvuAsshDel6j+Vd8hb4V5gBWVxKPeh9tcltP0LYacSRxF15rxv
	rVN0jPwVGbwxzMlNJCtTnTSzMg==
X-Google-Smtp-Source: AOwi7QC4BNCU3luVzG4ZkVb8Gk6M1hgepDWo5CEwdgaHluRvJDjzcgBzeTnkKyhAHdErx0sCb1XNsQ==
X-Received: by 10.99.132.199 with SMTP id k190mr5294413pgd.25.1506274246262; 
	Sun, 24 Sep 2017 10:30:46 -0700 (PDT)
Received: from localhost (108-223-40-66.lightspeed.sntcca.sbcglobal.net.
	[108.223.40.66]) by smtp.gmail.com with ESMTPSA id
	s68sm8917331pfd.72.2017.09.24.10.30.45
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Sun, 24 Sep 2017 10:30:45 -0700 (PDT)
From: Guenter Roeck &lt;linux@roeck-us.net&gt;
To: Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;
Cc: Paul Mackerras &lt;paulus@samba.org&gt;, Michael Ellerman &lt;mpe@ellerman.id.au&gt;,
	linuxppc-dev@lists.ozlabs.org, linux-kernel@vger.kernel.org,
	Guenter Roeck &lt;linux@roeck-us.net&gt;,
	Christophe Leroy &lt;christophe.leroy@c-s.fr&gt;
Subject: [PATCH] powerpc/mm: Call flush_tlb_kernel_range with interrupts
	enabled
Date: Sun, 24 Sep 2017 10:30:43 -0700
Message-Id: &lt;1506274243-28540-1-git-send-email-linux@roeck-us.net&gt;
X-Mailer: git-send-email 2.7.4
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=29152">Guenter Roeck</a> - Sept. 24, 2017, 5:30 p.m.</div>
<pre class="content">
flush_tlb_kernel_range() may call smp_call_function_many() which expects
interrupts to be enabled. This results in a traceback.

WARNING: CPU: 0 PID: 1 at kernel/smp.c:416 smp_call_function_many+0xcc/0x2fc
CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.14.0-rc1-00009-g0666f56 #1
task: cf830000 task.stack: cf82e000
NIP:  c00a93c8 LR: c00a9634 CTR: 00000001
REGS: cf82fde0 TRAP: 0700   Not tainted  (4.14.0-rc1-00009-g0666f56)
MSR:  00021000 &lt;CE,ME&gt;  CR: 24000082  XER: 00000000

GPR00: c00a9634 cf82fe90 cf830000 c050ad3c c0015a54 00000000 00000001 00000001
GPR08: 00000001 00000000 00000000 cf82e000 24000084 00000000 c0003150 00000000
GPR16: 00000000 00000000 00000000 00000000 00000000 00000001 00000000 c0510000
GPR24: 00000000 c0015a54 00000000 c050ad3c c051823c c050ad3c 00000025 00000000
NIP [c00a93c8] smp_call_function_many+0xcc/0x2fc
LR [c00a9634] smp_call_function+0x3c/0x50
Call Trace:
[cf82fe90] [00000010] 0x10 (unreliable)
[cf82fed0] [c00a9634] smp_call_function+0x3c/0x50
[cf82fee0] [c0015d2c] flush_tlb_kernel_range+0x20/0x38
[cf82fef0] [c001524c] mark_initmem_nx+0x154/0x16c
[cf82ff20] [c001484c] free_initmem+0x20/0x4c
[cf82ff30] [c000316c] kernel_init+0x1c/0x108
[cf82ff40] [c000f3a8] ret_from_kernel_thread+0x5c/0x64
Instruction dump:
7c0803a6 7d808120 38210040 4e800020 3d20c052 812981a0 2f890000 40beffac
3d20c051 8929ac64 2f890000 40beff9c &lt;0fe00000&gt; 4bffff94 7fc3f378 7f64db78

Fixes: 3184cc4b6f6a (&quot;powerpc/mm: Fix kernel RAM protection after freeing ...&quot;)
Fixes: e611939fc8ec (&quot;powerpc/mm: Ensure change_page_attr() doesn&#39;t ...&quot;)
Cc: Christophe Leroy &lt;christophe.leroy@c-s.fr&gt;
<span class="signed-off-by">Signed-off-by: Guenter Roeck &lt;linux@roeck-us.net&gt;</span>
---
 arch/powerpc/mm/pgtable_32.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=11492">LEROY Christophe</a> - Sept. 25, 2017, 6:38 a.m.</div>
<pre class="content">
Le 24/09/2017 à 19:30, Guenter Roeck a écrit :
<span class="quote">&gt; flush_tlb_kernel_range() may call smp_call_function_many() which expects</span>
<span class="quote">&gt; interrupts to be enabled. This results in a traceback.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; WARNING: CPU: 0 PID: 1 at kernel/smp.c:416 smp_call_function_many+0xcc/0x2fc</span>
<span class="quote">&gt; CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.14.0-rc1-00009-g0666f56 #1</span>
<span class="quote">&gt; task: cf830000 task.stack: cf82e000</span>
<span class="quote">&gt; NIP:  c00a93c8 LR: c00a9634 CTR: 00000001</span>
<span class="quote">&gt; REGS: cf82fde0 TRAP: 0700   Not tainted  (4.14.0-rc1-00009-g0666f56)</span>
<span class="quote">&gt; MSR:  00021000 &lt;CE,ME&gt;  CR: 24000082  XER: 00000000</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; GPR00: c00a9634 cf82fe90 cf830000 c050ad3c c0015a54 00000000 00000001 00000001</span>
<span class="quote">&gt; GPR08: 00000001 00000000 00000000 cf82e000 24000084 00000000 c0003150 00000000</span>
<span class="quote">&gt; GPR16: 00000000 00000000 00000000 00000000 00000000 00000001 00000000 c0510000</span>
<span class="quote">&gt; GPR24: 00000000 c0015a54 00000000 c050ad3c c051823c c050ad3c 00000025 00000000</span>
<span class="quote">&gt; NIP [c00a93c8] smp_call_function_many+0xcc/0x2fc</span>
<span class="quote">&gt; LR [c00a9634] smp_call_function+0x3c/0x50</span>
<span class="quote">&gt; Call Trace:</span>
<span class="quote">&gt; [cf82fe90] [00000010] 0x10 (unreliable)</span>
<span class="quote">&gt; [cf82fed0] [c00a9634] smp_call_function+0x3c/0x50</span>
<span class="quote">&gt; [cf82fee0] [c0015d2c] flush_tlb_kernel_range+0x20/0x38</span>
<span class="quote">&gt; [cf82fef0] [c001524c] mark_initmem_nx+0x154/0x16c</span>
<span class="quote">&gt; [cf82ff20] [c001484c] free_initmem+0x20/0x4c</span>
<span class="quote">&gt; [cf82ff30] [c000316c] kernel_init+0x1c/0x108</span>
<span class="quote">&gt; [cf82ff40] [c000f3a8] ret_from_kernel_thread+0x5c/0x64</span>
<span class="quote">&gt; Instruction dump:</span>
<span class="quote">&gt; 7c0803a6 7d808120 38210040 4e800020 3d20c052 812981a0 2f890000 40beffac</span>
<span class="quote">&gt; 3d20c051 8929ac64 2f890000 40beff9c &lt;0fe00000&gt; 4bffff94 7fc3f378 7f64db78</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Fixes: 3184cc4b6f6a (&quot;powerpc/mm: Fix kernel RAM protection after freeing ...&quot;)</span>
<span class="quote">&gt; Fixes: e611939fc8ec (&quot;powerpc/mm: Ensure change_page_attr() doesn&#39;t ...&quot;)</span>
<span class="quote">&gt; Cc: Christophe Leroy &lt;christophe.leroy@c-s.fr&gt;</span>
<span class="quote">&gt; Signed-off-by: Guenter Roeck &lt;linux@roeck-us.net&gt;</span>
<span class="reviewed-by">
Reviewed-by: Christophe Leroy &lt;christophe.leroy@c-s.fr&gt;</span>
<span class="quote">
&gt; ---</span>
<span class="quote">&gt;   arch/powerpc/mm/pgtable_32.c | 2 +-</span>
<span class="quote">&gt;   1 file changed, 1 insertion(+), 1 deletion(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/arch/powerpc/mm/pgtable_32.c b/arch/powerpc/mm/pgtable_32.c</span>
<span class="quote">&gt; index 65eda1997c3f..f6c7f54c0515 100644</span>
<span class="quote">&gt; --- a/arch/powerpc/mm/pgtable_32.c</span>
<span class="quote">&gt; +++ b/arch/powerpc/mm/pgtable_32.c</span>
<span class="quote">&gt; @@ -361,9 +361,9 @@ static int change_page_attr(struct page *page, int numpages, pgprot_t prot)</span>
<span class="quote">&gt;   			break;</span>
<span class="quote">&gt;   	}</span>
<span class="quote">&gt;   	wmb();</span>
<span class="quote">&gt; +	local_irq_restore(flags);</span>
<span class="quote">&gt;   	flush_tlb_kernel_range((unsigned long)page_address(start),</span>
<span class="quote">&gt;   			       (unsigned long)page_address(page));</span>
<span class="quote">&gt; -	local_irq_restore(flags);</span>
<span class="quote">&gt;   	return err;</span>
<span class="quote">&gt;   }</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=169345">Michael Ellerman</a> - Oct. 5, 2017, 4:22 a.m.</div>
<pre class="content">
On Sun, 2017-09-24 at 17:30:43 UTC, Guenter Roeck wrote:
<span class="quote">&gt; flush_tlb_kernel_range() may call smp_call_function_many() which expects</span>
<span class="quote">&gt; interrupts to be enabled. This results in a traceback.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; WARNING: CPU: 0 PID: 1 at kernel/smp.c:416 smp_call_function_many+0xcc/0x2fc</span>
<span class="quote">&gt; CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.14.0-rc1-00009-g0666f56 #1</span>
<span class="quote">&gt; task: cf830000 task.stack: cf82e000</span>
<span class="quote">&gt; NIP:  c00a93c8 LR: c00a9634 CTR: 00000001</span>
<span class="quote">&gt; REGS: cf82fde0 TRAP: 0700   Not tainted  (4.14.0-rc1-00009-g0666f56)</span>
<span class="quote">&gt; MSR:  00021000 &lt;CE,ME&gt;  CR: 24000082  XER: 00000000</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; GPR00: c00a9634 cf82fe90 cf830000 c050ad3c c0015a54 00000000 00000001 00000001</span>
<span class="quote">&gt; GPR08: 00000001 00000000 00000000 cf82e000 24000084 00000000 c0003150 00000000</span>
<span class="quote">&gt; GPR16: 00000000 00000000 00000000 00000000 00000000 00000001 00000000 c0510000</span>
<span class="quote">&gt; GPR24: 00000000 c0015a54 00000000 c050ad3c c051823c c050ad3c 00000025 00000000</span>
<span class="quote">&gt; NIP [c00a93c8] smp_call_function_many+0xcc/0x2fc</span>
<span class="quote">&gt; LR [c00a9634] smp_call_function+0x3c/0x50</span>
<span class="quote">&gt; Call Trace:</span>
<span class="quote">&gt; [cf82fe90] [00000010] 0x10 (unreliable)</span>
<span class="quote">&gt; [cf82fed0] [c00a9634] smp_call_function+0x3c/0x50</span>
<span class="quote">&gt; [cf82fee0] [c0015d2c] flush_tlb_kernel_range+0x20/0x38</span>
<span class="quote">&gt; [cf82fef0] [c001524c] mark_initmem_nx+0x154/0x16c</span>
<span class="quote">&gt; [cf82ff20] [c001484c] free_initmem+0x20/0x4c</span>
<span class="quote">&gt; [cf82ff30] [c000316c] kernel_init+0x1c/0x108</span>
<span class="quote">&gt; [cf82ff40] [c000f3a8] ret_from_kernel_thread+0x5c/0x64</span>
<span class="quote">&gt; Instruction dump:</span>
<span class="quote">&gt; 7c0803a6 7d808120 38210040 4e800020 3d20c052 812981a0 2f890000 40beffac</span>
<span class="quote">&gt; 3d20c051 8929ac64 2f890000 40beff9c &lt;0fe00000&gt; 4bffff94 7fc3f378 7f64db78</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Fixes: 3184cc4b6f6a (&quot;powerpc/mm: Fix kernel RAM protection after freeing ...&quot;)</span>
<span class="quote">&gt; Fixes: e611939fc8ec (&quot;powerpc/mm: Ensure change_page_attr() doesn&#39;t ...&quot;)</span>
<span class="quote">&gt; Cc: Christophe Leroy &lt;christophe.leroy@c-s.fr&gt;</span>
<span class="quote">&gt; Signed-off-by: Guenter Roeck &lt;linux@roeck-us.net&gt;</span>
<span class="quote">&gt; Reviewed-by: Christophe Leroy &lt;christophe.leroy@c-s.fr&gt;</span>

Applied to powerpc fixes, thanks.

https://git.kernel.org/powerpc/c/7c6a4f3b1641195119ddbb531200f4

cheers
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/powerpc/mm/pgtable_32.c b/arch/powerpc/mm/pgtable_32.c</span>
<span class="p_header">index 65eda1997c3f..f6c7f54c0515 100644</span>
<span class="p_header">--- a/arch/powerpc/mm/pgtable_32.c</span>
<span class="p_header">+++ b/arch/powerpc/mm/pgtable_32.c</span>
<span class="p_chunk">@@ -361,9 +361,9 @@</span> <span class="p_context"> static int change_page_attr(struct page *page, int numpages, pgprot_t prot)</span>
 			break;
 	}
 	wmb();
<span class="p_add">+	local_irq_restore(flags);</span>
 	flush_tlb_kernel_range((unsigned long)page_address(start),
 			       (unsigned long)page_address(page));
<span class="p_del">-	local_irq_restore(flags);</span>
 	return err;
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



