
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[06/21] MIPS memblock: Alter kexec-crashkernel parameters parser - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [06/21] MIPS memblock: Alter kexec-crashkernel parameters parser</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=169435">Serge Semin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 19, 2016, 2:07 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1482113266-13207-7-git-send-email-fancer.lancer@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9479611/mbox/"
   >mbox</a>
|
   <a href="/patch/9479611/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9479611/">/patch/9479611/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	1201A60832 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 19 Dec 2016 02:18:42 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 00D0328456
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 19 Dec 2016 02:18:42 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id E867B28462; Mon, 19 Dec 2016 02:18:41 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, FREEMAIL_FROM,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 754E128456
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 19 Dec 2016 02:18:41 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1762580AbcLSCSN (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 18 Dec 2016 21:18:13 -0500
Received: from mail-lf0-f68.google.com ([209.85.215.68]:33819 &quot;EHLO
	mail-lf0-f68.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753301AbcLSCIC (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 18 Dec 2016 21:08:02 -0500
Received: by mail-lf0-f68.google.com with SMTP id 30so4661483lfy.1;
	Sun, 18 Dec 2016 18:08:00 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=OugcL8nPOc3dizu4uogf16Ajls8g0+zVsxTqvngmogY=;
	b=mEVHh+vBKQZmQmEaoCT+29k/z83L6I3glJppWljLiFNU3D03reVlsMKYO4GnPB1PDG
	PJn2VDYqaV2CUf6P7kYjpKo0wyyRNJlalcfeXZVj12Xn+xvqhWZVK7aldOGgHVU/V9Qg
	4J+Etbb73mVxRlJYJ0HkhgQwx5A5sjYWWr8Wm92phiR2obWXuZu8CvCqizWLooCIVV/U
	DeEYY0wgbvyvCiLPp/6dtPCkqNsfbGDynF45oFHDzJvc7rMbQy3WA5Rw1UgJqI3vzPIw
	BbDREtUA4XFbJfOk1Cbr6SjkAF+G/nCF0mVmgJfXOBkbgSmFOjlWcrdzo551J3l9olj9
	urDg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=OugcL8nPOc3dizu4uogf16Ajls8g0+zVsxTqvngmogY=;
	b=q3+dJ5k5alDP37JGUDz8lPY1OCHe7Evr1an1HP32d0GMzKR0C6xwf+DZwOsCIrXbrr
	sgInOEk8cweRl4x9qR7k0w9zeSC0NbQPSSNwpbgsZL3JgqVTA7fzIpGvxGOO8i9c1UA8
	9WREDe6XrgIG9ipqJa1gIfgRgLPrCXj0hY/hkycKoAR6Dcf392IrcBHbRDly9yVkxFAH
	oySu8D1WkmHrKaSIeT+iUVRcS000nphshiKsCbda1khQm9TYqiPlB9FoNBEsvvr0UcTY
	nio0V9gxiKRh7lwCRvTTRSGpIPlFyNoIXB7XbiYKGnNnVg+qbZIhazWnf33S+erAuhac
	sxkw==
X-Gm-Message-State: AIkVDXJW3JdiYhv6FuY3/pNH252pnDzDOh/d9Ep8Inh3SQ3mLu84xDjBgtmSo5TRAFB7gw==
X-Received: by 10.46.9.5 with SMTP id 5mr5747566ljj.23.1482113279829;
	Sun, 18 Dec 2016 18:07:59 -0800 (PST)
Received: from linux.local ([95.79.144.28]) by smtp.gmail.com with ESMTPSA id
	9sm3362103ljn.20.2016.12.18.18.07.58
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Sun, 18 Dec 2016 18:07:59 -0800 (PST)
From: Serge Semin &lt;fancer.lancer@gmail.com&gt;
To: ralf@linux-mips.org, paul.burton@imgtec.com, rabinv@axis.com,
	matt.redfearn@imgtec.com, james.hogan@imgtec.com,
	alexander.sverdlin@nokia.com, robh+dt@kernel.org, frowand.list@gmail.com
Cc: Sergey.Semin@t-platforms.ru, linux-mips@linux-mips.org,
	devicetree@vger.kernel.org, linux-kernel@vger.kernel.org,
	Serge Semin &lt;fancer.lancer@gmail.com&gt;
Subject: [PATCH 06/21] MIPS memblock: Alter kexec-crashkernel parameters
	parser
Date: Mon, 19 Dec 2016 05:07:31 +0300
Message-Id: &lt;1482113266-13207-7-git-send-email-fancer.lancer@gmail.com&gt;
X-Mailer: git-send-email 2.6.6
In-Reply-To: &lt;1482113266-13207-1-git-send-email-fancer.lancer@gmail.com&gt;
References: &lt;1482113266-13207-1-git-send-email-fancer.lancer@gmail.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=169435">Serge Semin</a> - Dec. 19, 2016, 2:07 a.m.</div>
<pre class="content">
Memblock API can be successfully used to verify whether crashkernel
memory region belongs to low memory, then it can be reserved within
memblock allocator.
<span class="signed-off-by">
Signed-off-by: Serge Semin &lt;fancer.lancer@gmail.com&gt;</span>
---
 arch/mips/kernel/setup.c | 105 ++++++++++++++---------------
 1 file changed, 52 insertions(+), 53 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/mips/kernel/setup.c b/arch/mips/kernel/setup.c</span>
<span class="p_header">index d2f38ac..cc6d06b 100644</span>
<span class="p_header">--- a/arch/mips/kernel/setup.c</span>
<span class="p_header">+++ b/arch/mips/kernel/setup.c</span>
<span class="p_chunk">@@ -426,6 +426,55 @@</span> <span class="p_context"> static void __init mips_reserve_initrd_mem(void) { }</span>
 
 #endif
 
<span class="p_add">+#ifdef CONFIG_KEXEC</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Parse passed crashkernel parameter and reserve corresponding memory</span>
<span class="p_add">+ */</span>
<span class="p_add">+static void __init mips_parse_crashkernel(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	unsigned long long total_mem;</span>
<span class="p_add">+	unsigned long long crash_size, crash_base;</span>
<span class="p_add">+	int ret;</span>
<span class="p_add">+</span>
<span class="p_add">+	/* Parse crachkernel parameter */</span>
<span class="p_add">+	total_mem = memblock_phys_mem_size();</span>
<span class="p_add">+	ret = parse_crashkernel(boot_command_line, total_mem,</span>
<span class="p_add">+				&amp;crash_size, &amp;crash_base);</span>
<span class="p_add">+	if (ret != 0 || crash_size &lt;= 0)</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	crashk_res.start = crash_base;</span>
<span class="p_add">+	crashk_res.end	 = crash_base + crash_size - 1;</span>
<span class="p_add">+</span>
<span class="p_add">+	/* Check whether the region belogs to lowmem and valid */</span>
<span class="p_add">+	if (!is_lowmem_and_valid(&quot;Crashkernel&quot;, crash_base, crash_size))</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	/* Reserve crashkernel resource */</span>
<span class="p_add">+	memblock_reserve(crash_base, crash_size);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Reserve crashkernel memory within passed RAM resource</span>
<span class="p_add">+ */</span>
<span class="p_add">+static void __init request_crashkernel(struct resource *res)</span>
<span class="p_add">+{</span>
<span class="p_add">+	int ret;</span>
<span class="p_add">+</span>
<span class="p_add">+	ret = request_resource(res, &amp;crashk_res);</span>
<span class="p_add">+	if (!ret)</span>
<span class="p_add">+		pr_info(&quot;Reserving %ldMB of memory at %ldMB for crashkernel\n&quot;,</span>
<span class="p_add">+			(unsigned long)((crashk_res.end -</span>
<span class="p_add">+					 crashk_res.start + 1) &gt;&gt; 20),</span>
<span class="p_add">+			(unsigned long)(crashk_res.start  &gt;&gt; 20));</span>
<span class="p_add">+}</span>
<span class="p_add">+#else /* !CONFIG_KEXEC */</span>
<span class="p_add">+</span>
<span class="p_add">+static void __init mips_parse_crashkernel(void) { }</span>
<span class="p_add">+static void __init request_crashkernel(struct resource *res) { }</span>
<span class="p_add">+</span>
<span class="p_add">+#endif /* !CONFIG_KEXEC */</span>
<span class="p_add">+</span>
 /*
  * Initialize the bootmem allocator. It also setup initrd related data
  * if needed.
<span class="p_chunk">@@ -450,6 +499,9 @@</span> <span class="p_context"> static void __init bootmem_init(void)</span>
 	/* Check and reserve memory occupied by initrd */
 	mips_reserve_initrd_mem();
 
<span class="p_add">+	/* Parse crashkernel parameter */</span>
<span class="p_add">+	mips_parse_crashkernel();</span>
<span class="p_add">+</span>
 	reserved_end = (unsigned long) PFN_UP(__pa_symbol(&amp;_end));
 
 	/*
<span class="p_chunk">@@ -717,52 +769,6 @@</span> <span class="p_context"> static void __init arch_mem_addpart(phys_addr_t mem, phys_addr_t end, int type)</span>
 	add_memory_region(mem, size, type);
 }
 
<span class="p_del">-#ifdef CONFIG_KEXEC</span>
<span class="p_del">-static inline unsigned long long get_total_mem(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	unsigned long long total;</span>
<span class="p_del">-</span>
<span class="p_del">-	total = max_pfn - min_low_pfn;</span>
<span class="p_del">-	return total &lt;&lt; PAGE_SHIFT;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static void __init mips_parse_crashkernel(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	unsigned long long total_mem;</span>
<span class="p_del">-	unsigned long long crash_size, crash_base;</span>
<span class="p_del">-	int ret;</span>
<span class="p_del">-</span>
<span class="p_del">-	total_mem = get_total_mem();</span>
<span class="p_del">-	ret = parse_crashkernel(boot_command_line, total_mem,</span>
<span class="p_del">-				&amp;crash_size, &amp;crash_base);</span>
<span class="p_del">-	if (ret != 0 || crash_size &lt;= 0)</span>
<span class="p_del">-		return;</span>
<span class="p_del">-</span>
<span class="p_del">-	crashk_res.start = crash_base;</span>
<span class="p_del">-	crashk_res.end	 = crash_base + crash_size - 1;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static void __init request_crashkernel(struct resource *res)</span>
<span class="p_del">-{</span>
<span class="p_del">-	int ret;</span>
<span class="p_del">-</span>
<span class="p_del">-	ret = request_resource(res, &amp;crashk_res);</span>
<span class="p_del">-	if (!ret)</span>
<span class="p_del">-		pr_info(&quot;Reserving %ldMB of memory at %ldMB for crashkernel\n&quot;,</span>
<span class="p_del">-			(unsigned long)((crashk_res.end -</span>
<span class="p_del">-					 crashk_res.start + 1) &gt;&gt; 20),</span>
<span class="p_del">-			(unsigned long)(crashk_res.start  &gt;&gt; 20));</span>
<span class="p_del">-}</span>
<span class="p_del">-#else /* !defined(CONFIG_KEXEC)		*/</span>
<span class="p_del">-static void __init mips_parse_crashkernel(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static void __init request_crashkernel(struct resource *res)</span>
<span class="p_del">-{</span>
<span class="p_del">-}</span>
<span class="p_del">-#endif /* !defined(CONFIG_KEXEC)  */</span>
<span class="p_del">-</span>
 #define USE_PROM_CMDLINE	IS_ENABLED(CONFIG_MIPS_CMDLINE_FROM_BOOTLOADER)
 #define USE_DTB_CMDLINE		IS_ENABLED(CONFIG_MIPS_CMDLINE_FROM_DTB)
 #define EXTEND_WITH_PROM	IS_ENABLED(CONFIG_MIPS_CMDLINE_DTB_EXTEND)
<span class="p_chunk">@@ -836,13 +842,6 @@</span> <span class="p_context"> static void __init arch_mem_init(char **cmdline_p)</span>
 	}
 #endif
 
<span class="p_del">-	mips_parse_crashkernel();</span>
<span class="p_del">-#ifdef CONFIG_KEXEC</span>
<span class="p_del">-	if (crashk_res.start != crashk_res.end)</span>
<span class="p_del">-		reserve_bootmem(crashk_res.start,</span>
<span class="p_del">-				crashk_res.end - crashk_res.start + 1,</span>
<span class="p_del">-				BOOTMEM_DEFAULT);</span>
<span class="p_del">-#endif</span>
 	device_tree_init();
 	sparse_init();
 	plat_swiotlb_setup();

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



