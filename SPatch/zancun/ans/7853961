
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[02/06] iommu/ipmmu-vmsa: Convert to dev_data - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [02/06] iommu/ipmmu-vmsa: Convert to dev_data</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=19">Magnus Damm</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 15, 2015, 12:02 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20151215120230.26216.8126.sendpatchset@little-apple&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7853961/mbox/"
   >mbox</a>
|
   <a href="/patch/7853961/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7853961/">/patch/7853961/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id EB70C9F387
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 15 Dec 2015 12:01:05 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id D7BD320304
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 15 Dec 2015 12:01:01 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 9AA162034C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 15 Dec 2015 12:00:58 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S965180AbbLOMAy (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 15 Dec 2015 07:00:54 -0500
Received: from mail-pf0-f172.google.com ([209.85.192.172]:35010 &quot;EHLO
	mail-pf0-f172.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S964921AbbLOMAv (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 15 Dec 2015 07:00:51 -0500
Received: by mail-pf0-f172.google.com with SMTP id 63so3896661pff.2;
	Tue, 15 Dec 2015 04:00:51 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=from:to:cc:date:message-id:in-reply-to:references:subject;
	bh=9rvuJbXojG8vxnpTcc7rITnup6aKPsxlYADHrghdLC0=;
	b=vp4lDvCJUw4L6/NFn/lWLyR/OUWZ+8d3QqVIPPXO+bBIqsD0KkerhDkSNhvwwBF/Ji
	y7T1jAR90CNSP913v3VEDyl79layHdqZCjFCWTIUKkSeUPKl5EsueeTcUL2Yhht97urG
	McwbL45hqteQoNJPVZBKjnBf8rSsY/gfIhuLb6Md2w9Hvw9HP0RKcitngST6geICTn+Z
	F387TyMSmza8nTySMaUEEBiBRlgnelcjIHBe4Im9pfemltf4B5poL+KE0wHI1fCfix3a
	1Cs8cABflvVwOxGlSs63hlqCfp/oq9aT815N3etgOfBU1FaB4QbIqcDy+7+XCtfMtuXk
	dBvQ==
X-Received: by 10.98.8.68 with SMTP id c65mr17079009pfd.89.1450180851298;
	Tue, 15 Dec 2015 04:00:51 -0800 (PST)
Received: from [127.0.0.1] (s214090.ppp.asahi-net.or.jp. [220.157.214.90])
	by smtp.gmail.com with ESMTPSA id
	fe6sm1900742pab.40.2015.12.15.04.00.48
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Tue, 15 Dec 2015 04:00:50 -0800 (PST)
From: Magnus Damm &lt;magnus.damm@gmail.com&gt;
To: iommu@lists.linux-foundation.org
Cc: laurent.pinchart+renesas@ideasonboard.com, geert+renesas@glider.be,
	linux-sh@vger.kernel.org, joro@8bytes.org,
	linux-kernel@vger.kernel.org, horms+renesas@verge.net.au,
	Magnus Damm &lt;magnus.damm@gmail.com&gt;
Date: Tue, 15 Dec 2015 21:02:30 +0900
Message-Id: &lt;20151215120230.26216.8126.sendpatchset@little-apple&gt;
In-Reply-To: &lt;20151215120212.26216.61530.sendpatchset@little-apple&gt;
References: &lt;20151215120212.26216.61530.sendpatchset@little-apple&gt;
Subject: [PATCH 02/06] iommu/ipmmu-vmsa: Convert to dev_data
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.8 required=5.0 tests=BAYES_00,
	DKIM_ADSP_CUSTOM_MED, 
	DKIM_SIGNED, FREEMAIL_FROM, RCVD_IN_DNSWL_HI, T_DKIM_INVALID,
	T_RP_MATCHES_RCVD, 
	UNPARSEABLE_RELAY autolearn=ham version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=19">Magnus Damm</a> - Dec. 15, 2015, 12:02 p.m.</div>
<pre class="content">
<span class="from">From: Magnus Damm &lt;damm+renesas@opensource.se&gt;</span>

Rename ipmmu_vmsa_archdata to ipmmu_vmsa_dev_data to avoid
confusion when using the driver on multiple architectures.

The data now stored in ipmmu_vmsa_dev_data is used to point
various on-chip devices to the actual IPMMU instances.
<span class="signed-off-by">
Signed-off-by: Magnus Damm &lt;damm+renesas@opensource.se&gt;</span>
---

 drivers/iommu/ipmmu-vmsa.c |   58 +++++++++++++++++++++++++++-----------------
 1 file changed, 36 insertions(+), 22 deletions(-)

--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2987">Laurent Pinchart</a> - Dec. 29, 2015, 12:04 a.m.</div>
<pre class="content">
Hi Magnus,

Thank you for the patch.

On Tuesday 15 December 2015 21:02:30 Magnus Damm wrote:
<span class="quote">&gt; From: Magnus Damm &lt;damm+renesas@opensource.se&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Rename ipmmu_vmsa_archdata to ipmmu_vmsa_dev_data to avoid</span>
<span class="quote">&gt; confusion when using the driver on multiple architectures.</span>

I&#39;m sorry but this patches makes the driver more confusing to me. archdata is 
a well established concept for IOMMU on ARM, I don&#39;t see how hiding help would 
help.
<span class="quote">
&gt; The data now stored in ipmmu_vmsa_dev_data is used to point</span>
<span class="quote">&gt; various on-chip devices to the actual IPMMU instances.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Magnus Damm &lt;damm+renesas@opensource.se&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  drivers/iommu/ipmmu-vmsa.c |   58 +++++++++++++++++++++++++----------------</span>
<span class="quote">&gt;  1 file changed, 36 insertions(+), 22 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; --- 0003/drivers/iommu/ipmmu-vmsa.c</span>
<span class="quote">&gt; +++ work/drivers/iommu/ipmmu-vmsa.c	2015-12-15 13:16:27.160513000 +0900</span>
<span class="quote">&gt; @@ -47,7 +47,7 @@ struct ipmmu_vmsa_domain {</span>
<span class="quote">&gt;  	spinlock_t lock;			/* Protects mappings */</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -struct ipmmu_vmsa_archdata {</span>
<span class="quote">&gt; +struct ipmmu_vmsa_dev_data {</span>
<span class="quote">&gt;  	struct ipmmu_vmsa_device *mmu;</span>
<span class="quote">&gt;  	unsigned int *utlbs;</span>
<span class="quote">&gt;  	unsigned int num_utlbs;</span>
<span class="quote">&gt; @@ -182,6 +182,20 @@ static struct ipmmu_vmsa_domain *to_vmsa</span>
<span class="quote">&gt;  #define IMUASID_ASID0_SHIFT		0</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  /* ------------------------------------------------------------------------</span>
<span class="quote">&gt; + * Consumer device side private data handling</span>
<span class="quote">&gt; + */</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +static struct ipmmu_vmsa_dev_data *get_dev_data(struct device *dev)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	return dev-&gt;archdata.iommu;</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +static void set_dev_data(struct device *dev, struct ipmmu_vmsa_dev_data</span>
<span class="quote">&gt; *data)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	dev-&gt;archdata.iommu = data;</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +/* ------------------------------------------------------------------------</span>
<span class="quote">&gt;   * Read/Write Access</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; @@ -485,8 +499,8 @@ static void ipmmu_domain_free(struct iom</span>
<span class="quote">&gt;  static int ipmmu_attach_device(struct iommu_domain *io_domain,</span>
<span class="quote">&gt;  			       struct device *dev)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -	struct ipmmu_vmsa_archdata *archdata = dev-&gt;archdata.iommu;</span>
<span class="quote">&gt; -	struct ipmmu_vmsa_device *mmu = archdata-&gt;mmu;</span>
<span class="quote">&gt; +	struct ipmmu_vmsa_dev_data *dev_data = get_dev_data(dev);</span>
<span class="quote">&gt; +	struct ipmmu_vmsa_device *mmu = dev_data-&gt;mmu;</span>
<span class="quote">&gt;  	struct ipmmu_vmsa_domain *domain = to_vmsa_domain(io_domain);</span>
<span class="quote">&gt;  	unsigned long flags;</span>
<span class="quote">&gt;  	unsigned int i;</span>
<span class="quote">&gt; @@ -518,8 +532,8 @@ static int ipmmu_attach_device(struct io</span>
<span class="quote">&gt;  	if (ret &lt; 0)</span>
<span class="quote">&gt;  		return ret;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -	for (i = 0; i &lt; archdata-&gt;num_utlbs; ++i)</span>
<span class="quote">&gt; -		ipmmu_utlb_enable(domain, archdata-&gt;utlbs[i]);</span>
<span class="quote">&gt; +	for (i = 0; i &lt; dev_data-&gt;num_utlbs; ++i)</span>
<span class="quote">&gt; +		ipmmu_utlb_enable(domain, dev_data-&gt;utlbs[i]);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  	return 0;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; @@ -527,12 +541,12 @@ static int ipmmu_attach_device(struct io</span>
<span class="quote">&gt;  static void ipmmu_detach_device(struct iommu_domain *io_domain,</span>
<span class="quote">&gt;  				struct device *dev)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -	struct ipmmu_vmsa_archdata *archdata = dev-&gt;archdata.iommu;</span>
<span class="quote">&gt; +	struct ipmmu_vmsa_dev_data *dev_data = get_dev_data(dev);</span>
<span class="quote">&gt;  	struct ipmmu_vmsa_domain *domain = to_vmsa_domain(io_domain);</span>
<span class="quote">&gt;  	unsigned int i;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -	for (i = 0; i &lt; archdata-&gt;num_utlbs; ++i)</span>
<span class="quote">&gt; -		ipmmu_utlb_disable(domain, archdata-&gt;utlbs[i]);</span>
<span class="quote">&gt; +	for (i = 0; i &lt; dev_data-&gt;num_utlbs; ++i)</span>
<span class="quote">&gt; +		ipmmu_utlb_disable(domain, dev_data-&gt;utlbs[i]);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  	/*</span>
<span class="quote">&gt;  	 * TODO: Optimize by disabling the context when no device is attached.</span>
<span class="quote">&gt; @@ -595,7 +609,7 @@ static int ipmmu_find_utlbs(struct ipmmu</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  static int ipmmu_add_device(struct device *dev)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -	struct ipmmu_vmsa_archdata *archdata;</span>
<span class="quote">&gt; +	struct ipmmu_vmsa_dev_data *dev_data = get_dev_data(dev);</span>
<span class="quote">&gt;  	struct ipmmu_vmsa_device *mmu;</span>
<span class="quote">&gt;  	struct iommu_group *group = NULL;</span>
<span class="quote">&gt;  	unsigned int *utlbs;</span>
<span class="quote">&gt; @@ -603,7 +617,7 @@ static int ipmmu_add_device(struct devic</span>
<span class="quote">&gt;  	int num_utlbs;</span>
<span class="quote">&gt;  	int ret = -ENODEV;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -	if (dev-&gt;archdata.iommu) {</span>
<span class="quote">&gt; +	if (dev_data) {</span>
<span class="quote">&gt;  		dev_warn(dev, &quot;IOMMU driver already assigned to device %s\n&quot;,</span>
<span class="quote">&gt;  			 dev_name(dev));</span>
<span class="quote">&gt;  		return -EINVAL;</span>
<span class="quote">&gt; @@ -662,16 +676,16 @@ static int ipmmu_add_device(struct devic</span>
<span class="quote">&gt;  		goto error;</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -	archdata = kzalloc(sizeof(*archdata), GFP_KERNEL);</span>
<span class="quote">&gt; -	if (!archdata) {</span>
<span class="quote">&gt; +	dev_data = kzalloc(sizeof(*dev_data), GFP_KERNEL);</span>
<span class="quote">&gt; +	if (!dev_data) {</span>
<span class="quote">&gt;  		ret = -ENOMEM;</span>
<span class="quote">&gt;  		goto error;</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -	archdata-&gt;mmu = mmu;</span>
<span class="quote">&gt; -	archdata-&gt;utlbs = utlbs;</span>
<span class="quote">&gt; -	archdata-&gt;num_utlbs = num_utlbs;</span>
<span class="quote">&gt; -	dev-&gt;archdata.iommu = archdata;</span>
<span class="quote">&gt; +	dev_data-&gt;mmu = mmu;</span>
<span class="quote">&gt; +	dev_data-&gt;utlbs = utlbs;</span>
<span class="quote">&gt; +	dev_data-&gt;num_utlbs = num_utlbs;</span>
<span class="quote">&gt; +	set_dev_data(dev, dev_data);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  	/*</span>
<span class="quote">&gt;  	 * Create the ARM mapping, used by the ARM DMA mapping core to allocate</span>
<span class="quote">&gt; @@ -708,10 +722,10 @@ static int ipmmu_add_device(struct devic</span>
<span class="quote">&gt;  error:</span>
<span class="quote">&gt;  	arm_iommu_release_mapping(mmu-&gt;mapping);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -	kfree(dev-&gt;archdata.iommu);</span>
<span class="quote">&gt; +	kfree(dev_data);</span>
<span class="quote">&gt;  	kfree(utlbs);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -	dev-&gt;archdata.iommu = NULL;</span>
<span class="quote">&gt; +	set_dev_data(dev, NULL);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  	if (!IS_ERR_OR_NULL(group))</span>
<span class="quote">&gt;  		iommu_group_remove_device(dev);</span>
<span class="quote">&gt; @@ -721,15 +735,15 @@ error:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  static void ipmmu_remove_device(struct device *dev)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -	struct ipmmu_vmsa_archdata *archdata = dev-&gt;archdata.iommu;</span>
<span class="quote">&gt; +	struct ipmmu_vmsa_dev_data *dev_data = get_dev_data(dev);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  	arm_iommu_detach_device(dev);</span>
<span class="quote">&gt;  	iommu_group_remove_device(dev);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -	kfree(archdata-&gt;utlbs);</span>
<span class="quote">&gt; -	kfree(archdata);</span>
<span class="quote">&gt; +	kfree(dev_data-&gt;utlbs);</span>
<span class="quote">&gt; +	kfree(dev_data);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -	dev-&gt;archdata.iommu = NULL;</span>
<span class="quote">&gt; +	set_dev_data(dev, NULL);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  static const struct iommu_ops ipmmu_ops = {</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- 0003/drivers/iommu/ipmmu-vmsa.c</span>
<span class="p_header">+++ work/drivers/iommu/ipmmu-vmsa.c	2015-12-15 13:16:27.160513000 +0900</span>
<span class="p_chunk">@@ -47,7 +47,7 @@</span> <span class="p_context"> struct ipmmu_vmsa_domain {</span>
 	spinlock_t lock;			/* Protects mappings */
 };
 
<span class="p_del">-struct ipmmu_vmsa_archdata {</span>
<span class="p_add">+struct ipmmu_vmsa_dev_data {</span>
 	struct ipmmu_vmsa_device *mmu;
 	unsigned int *utlbs;
 	unsigned int num_utlbs;
<span class="p_chunk">@@ -182,6 +182,20 @@</span> <span class="p_context"> static struct ipmmu_vmsa_domain *to_vmsa</span>
 #define IMUASID_ASID0_SHIFT		0
 
 /* -----------------------------------------------------------------------------
<span class="p_add">+ * Consumer device side private data handling</span>
<span class="p_add">+ */</span>
<span class="p_add">+</span>
<span class="p_add">+static struct ipmmu_vmsa_dev_data *get_dev_data(struct device *dev)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return dev-&gt;archdata.iommu;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static void set_dev_data(struct device *dev, struct ipmmu_vmsa_dev_data *data)</span>
<span class="p_add">+{</span>
<span class="p_add">+	dev-&gt;archdata.iommu = data;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+/* -----------------------------------------------------------------------------</span>
  * Read/Write Access
  */
 
<span class="p_chunk">@@ -485,8 +499,8 @@</span> <span class="p_context"> static void ipmmu_domain_free(struct iom</span>
 static int ipmmu_attach_device(struct iommu_domain *io_domain,
 			       struct device *dev)
 {
<span class="p_del">-	struct ipmmu_vmsa_archdata *archdata = dev-&gt;archdata.iommu;</span>
<span class="p_del">-	struct ipmmu_vmsa_device *mmu = archdata-&gt;mmu;</span>
<span class="p_add">+	struct ipmmu_vmsa_dev_data *dev_data = get_dev_data(dev);</span>
<span class="p_add">+	struct ipmmu_vmsa_device *mmu = dev_data-&gt;mmu;</span>
 	struct ipmmu_vmsa_domain *domain = to_vmsa_domain(io_domain);
 	unsigned long flags;
 	unsigned int i;
<span class="p_chunk">@@ -518,8 +532,8 @@</span> <span class="p_context"> static int ipmmu_attach_device(struct io</span>
 	if (ret &lt; 0)
 		return ret;
 
<span class="p_del">-	for (i = 0; i &lt; archdata-&gt;num_utlbs; ++i)</span>
<span class="p_del">-		ipmmu_utlb_enable(domain, archdata-&gt;utlbs[i]);</span>
<span class="p_add">+	for (i = 0; i &lt; dev_data-&gt;num_utlbs; ++i)</span>
<span class="p_add">+		ipmmu_utlb_enable(domain, dev_data-&gt;utlbs[i]);</span>
 
 	return 0;
 }
<span class="p_chunk">@@ -527,12 +541,12 @@</span> <span class="p_context"> static int ipmmu_attach_device(struct io</span>
 static void ipmmu_detach_device(struct iommu_domain *io_domain,
 				struct device *dev)
 {
<span class="p_del">-	struct ipmmu_vmsa_archdata *archdata = dev-&gt;archdata.iommu;</span>
<span class="p_add">+	struct ipmmu_vmsa_dev_data *dev_data = get_dev_data(dev);</span>
 	struct ipmmu_vmsa_domain *domain = to_vmsa_domain(io_domain);
 	unsigned int i;
 
<span class="p_del">-	for (i = 0; i &lt; archdata-&gt;num_utlbs; ++i)</span>
<span class="p_del">-		ipmmu_utlb_disable(domain, archdata-&gt;utlbs[i]);</span>
<span class="p_add">+	for (i = 0; i &lt; dev_data-&gt;num_utlbs; ++i)</span>
<span class="p_add">+		ipmmu_utlb_disable(domain, dev_data-&gt;utlbs[i]);</span>
 
 	/*
 	 * TODO: Optimize by disabling the context when no device is attached.
<span class="p_chunk">@@ -595,7 +609,7 @@</span> <span class="p_context"> static int ipmmu_find_utlbs(struct ipmmu</span>
 
 static int ipmmu_add_device(struct device *dev)
 {
<span class="p_del">-	struct ipmmu_vmsa_archdata *archdata;</span>
<span class="p_add">+	struct ipmmu_vmsa_dev_data *dev_data = get_dev_data(dev);</span>
 	struct ipmmu_vmsa_device *mmu;
 	struct iommu_group *group = NULL;
 	unsigned int *utlbs;
<span class="p_chunk">@@ -603,7 +617,7 @@</span> <span class="p_context"> static int ipmmu_add_device(struct devic</span>
 	int num_utlbs;
 	int ret = -ENODEV;
 
<span class="p_del">-	if (dev-&gt;archdata.iommu) {</span>
<span class="p_add">+	if (dev_data) {</span>
 		dev_warn(dev, &quot;IOMMU driver already assigned to device %s\n&quot;,
 			 dev_name(dev));
 		return -EINVAL;
<span class="p_chunk">@@ -662,16 +676,16 @@</span> <span class="p_context"> static int ipmmu_add_device(struct devic</span>
 		goto error;
 	}
 
<span class="p_del">-	archdata = kzalloc(sizeof(*archdata), GFP_KERNEL);</span>
<span class="p_del">-	if (!archdata) {</span>
<span class="p_add">+	dev_data = kzalloc(sizeof(*dev_data), GFP_KERNEL);</span>
<span class="p_add">+	if (!dev_data) {</span>
 		ret = -ENOMEM;
 		goto error;
 	}
 
<span class="p_del">-	archdata-&gt;mmu = mmu;</span>
<span class="p_del">-	archdata-&gt;utlbs = utlbs;</span>
<span class="p_del">-	archdata-&gt;num_utlbs = num_utlbs;</span>
<span class="p_del">-	dev-&gt;archdata.iommu = archdata;</span>
<span class="p_add">+	dev_data-&gt;mmu = mmu;</span>
<span class="p_add">+	dev_data-&gt;utlbs = utlbs;</span>
<span class="p_add">+	dev_data-&gt;num_utlbs = num_utlbs;</span>
<span class="p_add">+	set_dev_data(dev, dev_data);</span>
 
 	/*
 	 * Create the ARM mapping, used by the ARM DMA mapping core to allocate
<span class="p_chunk">@@ -708,10 +722,10 @@</span> <span class="p_context"> static int ipmmu_add_device(struct devic</span>
 error:
 	arm_iommu_release_mapping(mmu-&gt;mapping);
 
<span class="p_del">-	kfree(dev-&gt;archdata.iommu);</span>
<span class="p_add">+	kfree(dev_data);</span>
 	kfree(utlbs);
 
<span class="p_del">-	dev-&gt;archdata.iommu = NULL;</span>
<span class="p_add">+	set_dev_data(dev, NULL);</span>
 
 	if (!IS_ERR_OR_NULL(group))
 		iommu_group_remove_device(dev);
<span class="p_chunk">@@ -721,15 +735,15 @@</span> <span class="p_context"> error:</span>
 
 static void ipmmu_remove_device(struct device *dev)
 {
<span class="p_del">-	struct ipmmu_vmsa_archdata *archdata = dev-&gt;archdata.iommu;</span>
<span class="p_add">+	struct ipmmu_vmsa_dev_data *dev_data = get_dev_data(dev);</span>
 
 	arm_iommu_detach_device(dev);
 	iommu_group_remove_device(dev);
 
<span class="p_del">-	kfree(archdata-&gt;utlbs);</span>
<span class="p_del">-	kfree(archdata);</span>
<span class="p_add">+	kfree(dev_data-&gt;utlbs);</span>
<span class="p_add">+	kfree(dev_data);</span>
 
<span class="p_del">-	dev-&gt;archdata.iommu = NULL;</span>
<span class="p_add">+	set_dev_data(dev, NULL);</span>
 }
 
 static const struct iommu_ops ipmmu_ops = {

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



