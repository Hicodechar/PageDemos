
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,1/1] mm/shmem: add hugetlbfs support to memfd_create() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,1/1] mm/shmem: add hugetlbfs support to memfd_create()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 7, 2017, 11:47 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1502149672-7759-2-git-send-email-mike.kravetz@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9886291/mbox/"
   >mbox</a>
|
   <a href="/patch/9886291/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9886291/">/patch/9886291/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	91843603F2 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  7 Aug 2017 23:49:03 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 8365728740
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  7 Aug 2017 23:49:03 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 780F328746; Mon,  7 Aug 2017 23:49:03 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	UNPARSEABLE_RELAY autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id CEFD728761
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  7 Aug 2017 23:49:01 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752046AbdHGXs0 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 7 Aug 2017 19:48:26 -0400
Received: from aserp1040.oracle.com ([141.146.126.69]:48167 &quot;EHLO
	aserp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751881AbdHGXsX (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 7 Aug 2017 19:48:23 -0400
Received: from aserv0021.oracle.com (aserv0021.oracle.com [141.146.126.233])
	by aserp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2)
	with ESMTP id v77NmBsX031991
	(version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Mon, 7 Aug 2017 23:48:11 GMT
Received: from aserv0122.oracle.com (aserv0122.oracle.com [141.146.126.236])
	by aserv0021.oracle.com (8.14.4/8.14.4) with ESMTP id
	v77NmBtW030114
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Mon, 7 Aug 2017 23:48:11 GMT
Received: from abhmp0011.oracle.com (abhmp0011.oracle.com [141.146.116.17])
	by aserv0122.oracle.com (8.14.4/8.14.4) with ESMTP id
	v77NmBlg001241; Mon, 7 Aug 2017 23:48:11 GMT
Received: from monkey.oracle.com (/50.188.161.229)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Mon, 07 Aug 2017 16:48:10 -0700
From: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
To: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
	linux-api@vger.kernel.org
Cc: Hugh Dickins &lt;hughd@google.com&gt;, Andrea Arcangeli &lt;aarcange@redhat.com&gt;,
	Michal Hocko &lt;mhocko@kernel.org&gt;,
	&quot;Kirill A . Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
Subject: [RFC PATCH 1/1] mm/shmem: add hugetlbfs support to memfd_create()
Date: Mon,  7 Aug 2017 16:47:52 -0700
Message-Id: &lt;1502149672-7759-2-git-send-email-mike.kravetz@oracle.com&gt;
X-Mailer: git-send-email 2.7.5
In-Reply-To: &lt;1502149672-7759-1-git-send-email-mike.kravetz@oracle.com&gt;
References: &lt;1502149672-7759-1-git-send-email-mike.kravetz@oracle.com&gt;
X-Source-IP: aserv0021.oracle.com [141.146.126.233]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - Aug. 7, 2017, 11:47 p.m.</div>
<pre class="content">
Add a new flag MFD_HUGETLB to memfd_create() that will specify the
file to be created resides in the hugetlbfs filesystem.  This is
the generic hugetlbfs filesystem not associated with any specific
mount point.  As with other system calls that request hugetlbfs
backed pages, there is the ability to encode huge page size in the
flag arguments.

hugetlbfs does not support sealing operations, therefore specifying
MFD_ALLOW_SEALING with MFD_HUGETLB will result in EINVAL.
<span class="signed-off-by">
Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
---
 include/uapi/linux/memfd.h | 24 ++++++++++++++++++++++++
 mm/shmem.c                 | 37 +++++++++++++++++++++++++++++++------
 2 files changed, 55 insertions(+), 6 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/uapi/linux/memfd.h b/include/uapi/linux/memfd.h</span>
<span class="p_header">index 534e364..7f3a722 100644</span>
<span class="p_header">--- a/include/uapi/linux/memfd.h</span>
<span class="p_header">+++ b/include/uapi/linux/memfd.h</span>
<span class="p_chunk">@@ -1,8 +1,32 @@</span> <span class="p_context"></span>
 #ifndef _UAPI_LINUX_MEMFD_H
 #define _UAPI_LINUX_MEMFD_H
 
<span class="p_add">+#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
<span class="p_add">+</span>
 /* flags for memfd_create(2) (unsigned int) */
 #define MFD_CLOEXEC		0x0001U
 #define MFD_ALLOW_SEALING	0x0002U
<span class="p_add">+#define MFD_HUGETLB		0x0004U</span>
<span class="p_add">+</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Huge page size encoding when MFD_HUGETLB is specified, and a huge page</span>
<span class="p_add">+ * size other than the default is desired.  See hugetlb_encode.h.</span>
<span class="p_add">+ * All known huge page size encodings are provided here.  It is the</span>
<span class="p_add">+ * responsibility of the application to know which sizes are supported on</span>
<span class="p_add">+ * the running system.  See mmap(2) man page for details.</span>
<span class="p_add">+ */</span>
<span class="p_add">+#define MFD_HUGE_SHIFT	HUGETLB_FLAG_ENCODE_SHIFT</span>
<span class="p_add">+#define MFD_HUGE_MASK	HUGETLB_FLAG_ENCODE_MASK</span>
<span class="p_add">+</span>
<span class="p_add">+#define MFD_HUGE_64KB	HUGETLB_FLAG_ENCODE_64KB</span>
<span class="p_add">+#define MFD_HUGE_512KB	HUGETLB_FLAG_ENCODE_512KB</span>
<span class="p_add">+#define MFD_HUGE_1MB	HUGETLB_FLAG_ENCODE_1MB</span>
<span class="p_add">+#define MFD_HUGE_2MB	HUGETLB_FLAG_ENCODE_2MB</span>
<span class="p_add">+#define MFD_HUGE_8MB	HUGETLB_FLAG_ENCODE_8MB</span>
<span class="p_add">+#define MFD_HUGE_16MB	HUGETLB_FLAG_ENCODE_16MB</span>
<span class="p_add">+#define MFD_HUGE_256MB	HUGETLB_FLAG_ENCODE_256MB</span>
<span class="p_add">+#define MFD_HUGE_1GB	HUGETLB_FLAG_ENCODE_1GB</span>
<span class="p_add">+#define MFD_HUGE_2GB	HUGETLB_FLAG_ENCODE_2GB</span>
<span class="p_add">+#define MFD_HUGE_16GB	HUGETLB_FLAG_ENCODE_16GB</span>
 
 #endif /* _UAPI_LINUX_MEMFD_H */
<span class="p_header">diff --git a/mm/shmem.c b/mm/shmem.c</span>
<span class="p_header">index b0aa607..3db79ce 100644</span>
<span class="p_header">--- a/mm/shmem.c</span>
<span class="p_header">+++ b/mm/shmem.c</span>
<span class="p_chunk">@@ -34,6 +34,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/swap.h&gt;
 #include &lt;linux/uio.h&gt;
 #include &lt;linux/khugepaged.h&gt;
<span class="p_add">+#include &lt;linux/hugetlb.h&gt;</span>
 
 #include &lt;asm/tlbflush.h&gt; /* for arch/microblaze update_mmu_cache() */
 
<span class="p_chunk">@@ -3627,7 +3628,7 @@</span> <span class="p_context"> static int shmem_show_options(struct seq_file *seq, struct dentry *root)</span>
 #define MFD_NAME_PREFIX_LEN (sizeof(MFD_NAME_PREFIX) - 1)
 #define MFD_NAME_MAX_LEN (NAME_MAX - MFD_NAME_PREFIX_LEN)
 
<span class="p_del">-#define MFD_ALL_FLAGS (MFD_CLOEXEC | MFD_ALLOW_SEALING)</span>
<span class="p_add">+#define MFD_ALL_FLAGS (MFD_CLOEXEC | MFD_ALLOW_SEALING | MFD_HUGETLB)</span>
 
 SYSCALL_DEFINE2(memfd_create,
 		const char __user *, uname,
<span class="p_chunk">@@ -3639,8 +3640,18 @@</span> <span class="p_context"> SYSCALL_DEFINE2(memfd_create,</span>
 	char *name;
 	long len;
 
<span class="p_del">-	if (flags &amp; ~(unsigned int)MFD_ALL_FLAGS)</span>
<span class="p_del">-		return -EINVAL;</span>
<span class="p_add">+	if (!(flags &amp; MFD_HUGETLB)) {</span>
<span class="p_add">+		if (flags &amp; ~(unsigned int)MFD_ALL_FLAGS)</span>
<span class="p_add">+			return -EINVAL;</span>
<span class="p_add">+	} else {</span>
<span class="p_add">+		/* Sealing not supported in hugetlbfs (MFD_HUGETLB) */</span>
<span class="p_add">+		if (flags &amp; MFD_ALLOW_SEALING)</span>
<span class="p_add">+			return -EINVAL;</span>
<span class="p_add">+		/* Allow huge page size encoding in flags. */</span>
<span class="p_add">+		if (flags &amp; ~(unsigned int)(MFD_ALL_FLAGS |</span>
<span class="p_add">+				(MFD_HUGE_MASK &lt;&lt; MFD_HUGE_SHIFT)))</span>
<span class="p_add">+			return -EINVAL;</span>
<span class="p_add">+	}</span>
 
 	/* length includes terminating zero */
 	len = strnlen_user(uname, MFD_NAME_MAX_LEN + 1);
<span class="p_chunk">@@ -3671,16 +3682,30 @@</span> <span class="p_context"> SYSCALL_DEFINE2(memfd_create,</span>
 		goto err_name;
 	}
 
<span class="p_del">-	file = shmem_file_setup(name, 0, VM_NORESERVE);</span>
<span class="p_add">+	if (flags &amp; MFD_HUGETLB) {</span>
<span class="p_add">+		struct user_struct *user = NULL;</span>
<span class="p_add">+</span>
<span class="p_add">+		file = hugetlb_file_setup(name, 0, VM_NORESERVE, &amp;user,</span>
<span class="p_add">+					HUGETLB_ANONHUGE_INODE,</span>
<span class="p_add">+					(flags &gt;&gt; MFD_HUGE_SHIFT) &amp;</span>
<span class="p_add">+					MFD_HUGE_MASK);</span>
<span class="p_add">+	} else</span>
<span class="p_add">+		file = shmem_file_setup(name, 0, VM_NORESERVE);</span>
 	if (IS_ERR(file)) {
 		error = PTR_ERR(file);
 		goto err_fd;
 	}
<span class="p_del">-	info = SHMEM_I(file_inode(file));</span>
 	file-&gt;f_mode |= FMODE_LSEEK | FMODE_PREAD | FMODE_PWRITE;
 	file-&gt;f_flags |= O_RDWR | O_LARGEFILE;
<span class="p_del">-	if (flags &amp; MFD_ALLOW_SEALING)</span>
<span class="p_add">+</span>
<span class="p_add">+	if (flags &amp; MFD_ALLOW_SEALING) {</span>
<span class="p_add">+		/*</span>
<span class="p_add">+		 * flags check at beginning of function ensures</span>
<span class="p_add">+		 * this is not a hugetlbfs (MFD_HUGETLB) file.</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		info = SHMEM_I(file_inode(file));</span>
 		info-&gt;seals &amp;= ~F_SEAL_SEAL;
<span class="p_add">+	}</span>
 
 	fd_install(fd, file);
 	kfree(name);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



