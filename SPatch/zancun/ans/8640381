
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4/9] mm, oom_reaper: report success/failure - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4/9] mm, oom_reaper: report success/failure</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=137061">Michal Hocko</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 22, 2016, 11 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1458644426-22973-5-git-send-email-mhocko@kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8640381/mbox/"
   >mbox</a>
|
   <a href="/patch/8640381/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8640381/">/patch/8640381/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id A8864C0554
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 22 Mar 2016 11:03:16 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 110E120390
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 22 Mar 2016 11:03:16 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 4FD0A2039D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 22 Mar 2016 11:03:15 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1759173AbcCVLDK (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 22 Mar 2016 07:03:10 -0400
Received: from mail-wm0-f65.google.com ([74.125.82.65]:36461 &quot;EHLO
	mail-wm0-f65.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932730AbcCVLBG (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 22 Mar 2016 07:01:06 -0400
Received: by mail-wm0-f65.google.com with SMTP id l68so28593234wml.3
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Tue, 22 Mar 2016 04:01:05 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20130820;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=boqeA1TEP/4rBZc7xgJtOQ+tM7mHfIbDtpaqmCNUKRQ=;
	b=Sdgv/SI569TlAaLEPJAB80Abe85fvR7JILlUzr2FpKJc1HjfJiIXCTO/LhxxPgoa8M
	JhTlGDKBW1nMOLJl88kC21cRCWBxUWq+KZoDS3z9nnL20eVnoRN3oRzFd4GAL5LbOw3V
	1WLtOC113yJOOxSyApiZeatsOtkpRhu00NgctjSh+3zh0ejfgnTA1Y4VHTq4GhHCMcSN
	rlndCE11959+0GpTrqZy5hb5+6WopzGyErHuv5DBWp8hrxcaoOQFKhDQJiFNXJZHhDRY
	WDNj3GN1dVr50k54U34W4AAb6NlrtL9znQUMMZzZzZDG6Yf9rMFLiyo2tuyD7E7ipeXM
	+BsA==
X-Gm-Message-State: AD7BkJL3wJPv/3jvwYYc6VVzawZUbgIzLBMOuBbZW4sw6F7LAbEv1S8BPD8gyJUidFRvqw==
X-Received: by 10.28.46.132 with SMTP id u126mr20339657wmu.67.1458644464932; 
	Tue, 22 Mar 2016 04:01:04 -0700 (PDT)
Received: from tiehlicka.suse.cz (nat1.scz.suse.com. [213.151.88.250])
	by smtp.gmail.com with ESMTPSA id
	a16sm16764049wmi.0.2016.03.22.04.01.04
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Tue, 22 Mar 2016 04:01:04 -0700 (PDT)
From: Michal Hocko &lt;mhocko@kernel.org&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: &lt;linux-mm@kvack.org&gt;, LKML &lt;linux-kernel@vger.kernel.org&gt;,
	Tetsuo Handa &lt;penguin-kernel@I-love.SAKURA.ne.jp&gt;,
	David Rientjes &lt;rientjes@google.com&gt;, Michal Hocko &lt;mhocko@suse.com&gt;
Subject: [PATCH 4/9] mm, oom_reaper: report success/failure
Date: Tue, 22 Mar 2016 12:00:21 +0100
Message-Id: &lt;1458644426-22973-5-git-send-email-mhocko@kernel.org&gt;
X-Mailer: git-send-email 2.7.0
In-Reply-To: &lt;1458644426-22973-1-git-send-email-mhocko@kernel.org&gt;
References: &lt;1458644426-22973-1-git-send-email-mhocko@kernel.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137061">Michal Hocko</a> - March 22, 2016, 11 a.m.</div>
<pre class="content">
<span class="from">From: Michal Hocko &lt;mhocko@suse.com&gt;</span>

Inform about the successful/failed oom_reaper attempts and dump all the
held locks to tell us more who is blocking the progress.
<span class="signed-off-by">
Signed-off-by: Michal Hocko &lt;mhocko@suse.com&gt;</span>
---
 mm/oom_kill.c | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/oom_kill.c b/mm/oom_kill.c</span>
<span class="p_header">index 2830b1c6483e..e627ce235e38 100644</span>
<span class="p_header">--- a/mm/oom_kill.c</span>
<span class="p_header">+++ b/mm/oom_kill.c</span>
<span class="p_chunk">@@ -419,6 +419,7 @@</span> <span class="p_context"> static struct task_struct *oom_reaper_th;</span>
 static struct task_struct *task_to_reap;
 static DECLARE_WAIT_QUEUE_HEAD(oom_reaper_wait);
 
<span class="p_add">+#define K(x) ((x) &lt;&lt; (PAGE_SHIFT-10))</span>
 static bool __oom_reap_task(struct task_struct *tsk)
 {
 	struct mmu_gather tlb;
<span class="p_chunk">@@ -479,6 +480,11 @@</span> <span class="p_context"> static bool __oom_reap_task(struct task_struct *tsk)</span>
 					 &amp;details);
 	}
 	tlb_finish_mmu(&amp;tlb, 0, -1);
<span class="p_add">+	pr_info(&quot;oom_reaper: reaped process %d (%s), now anon-rss:%lukB, file-rss:%lukB, shmem-rss:%lukB\n&quot;,</span>
<span class="p_add">+			task_pid_nr(tsk), tsk-&gt;comm,</span>
<span class="p_add">+			K(get_mm_counter(mm, MM_ANONPAGES)),</span>
<span class="p_add">+			K(get_mm_counter(mm, MM_FILEPAGES)),</span>
<span class="p_add">+			K(get_mm_counter(mm, MM_SHMEMPAGES)));</span>
 	up_read(&amp;mm-&gt;mmap_sem);
 
 	/*
<span class="p_chunk">@@ -495,14 +501,21 @@</span> <span class="p_context"> static bool __oom_reap_task(struct task_struct *tsk)</span>
 	return ret;
 }
 
<span class="p_add">+#define MAX_OOM_REAP_RETRIES 10</span>
 static void oom_reap_task(struct task_struct *tsk)
 {
 	int attempts = 0;
 
 	/* Retry the down_read_trylock(mmap_sem) a few times */
<span class="p_del">-	while (attempts++ &lt; 10 &amp;&amp; !__oom_reap_task(tsk))</span>
<span class="p_add">+	while (attempts++ &lt; MAX_OOM_REAP_RETRIES &amp;&amp; !__oom_reap_task(tsk))</span>
 		schedule_timeout_idle(HZ/10);
 
<span class="p_add">+	if (attempts &gt; MAX_OOM_REAP_RETRIES) {</span>
<span class="p_add">+		pr_info(&quot;oom_reaper: unable to reap pid:%d (%s)\n&quot;,</span>
<span class="p_add">+				task_pid_nr(tsk), tsk-&gt;comm);</span>
<span class="p_add">+		debug_show_all_locks();</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	/* Drop a reference taken by wake_oom_reaper */
 	put_task_struct(tsk);
 }
<span class="p_chunk">@@ -649,7 +662,6 @@</span> <span class="p_context"> static bool process_shares_mm(struct task_struct *p, struct mm_struct *mm)</span>
 	return false;
 }
 
<span class="p_del">-#define K(x) ((x) &lt;&lt; (PAGE_SHIFT-10))</span>
 /*
  * Must be called while holding a reference to p, which will be released upon
  * returning.

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



