
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>x86/hyper-v: stop suppressing X86_FEATURE_PCID - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    x86/hyper-v: stop suppressing X86_FEATURE_PCID</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=99981">Vitaly Kuznetsov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 24, 2018, 10:36 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180124103629.29980-1-vkuznets@redhat.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10182037/mbox/"
   >mbox</a>
|
   <a href="/patch/10182037/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10182037/">/patch/10182037/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	3F344602B7 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 24 Jan 2018 10:36:51 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 41534287BA
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 24 Jan 2018 10:36:51 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 35E6A288C3; Wed, 24 Jan 2018 10:36:51 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C879C287BA
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 24 Jan 2018 10:36:50 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S933277AbeAXKgt (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 24 Jan 2018 05:36:49 -0500
Received: from mx1.redhat.com ([209.132.183.28]:60676 &quot;EHLO mx1.redhat.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S932859AbeAXKgp (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 24 Jan 2018 05:36:45 -0500
Received: from smtp.corp.redhat.com
	(int-mx03.intmail.prod.int.phx2.redhat.com [10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 438F54DD49;
	Wed, 24 Jan 2018 10:36:45 +0000 (UTC)
Received: from vitty.brq.redhat.com (unknown [10.43.2.155])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 17CB590A06;
	Wed, 24 Jan 2018 10:36:30 +0000 (UTC)
From: Vitaly Kuznetsov &lt;vkuznets@redhat.com&gt;
To: x86@kernel.org
Cc: devel@linuxdriverproject.org, linux-kernel@vger.kernel.org,
	&quot;K. Y. Srinivasan&quot; &lt;kys@microsoft.com&gt;,
	Haiyang Zhang &lt;haiyangz@microsoft.com&gt;,
	Stephen Hemminger &lt;sthemmin@microsoft.com&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;, Andy Lutomirski &lt;luto@kernel.org&gt;,
	Aditya Bhandari &lt;adityabh@microsoft.com&gt;,
	&quot;Michael Kelley (EOSG)&quot; &lt;Michael.H.Kelley@microsoft.com&gt;,
	David Zhang &lt;dazhan@microsoft.com&gt;
Subject: [PATCH] x86/hyper-v: stop suppressing X86_FEATURE_PCID
Date: Wed, 24 Jan 2018 11:36:29 +0100
Message-Id: &lt;20180124103629.29980-1-vkuznets@redhat.com&gt;
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.38]);
	Wed, 24 Jan 2018 10:36:45 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99981">Vitaly Kuznetsov</a> - Jan. 24, 2018, 10:36 a.m.</div>
<pre class="content">
When hypercall-based TLB flush was enabled for Hyper-V guests PCID feature
was deliberately suppressed as a precaution: back then PCID was never
exposed to Hyper-V guests and it wasn&#39;t clear what will happen if some day
it becomes available. The day came and PCID/INVPCID features are already
exposed on certain Hyper-V hosts.

I was asked if we can stop suppressing PCID. From TLFS (as of 5.0b) is is
unclear how TLB flush hypercalls combine with PCID. In particular, I was
worried about our usage of PCID where it is per-cpu based: the same mm gets
different CR3 values on different CPUs and if hypercall does exact matching
we&#39;re screwed. However, this is not the case. David Zhang writes:

&quot;In practice, the AddressSpace argument is ignored on any VM that supports
 PCIDs.

Architecturally, the AddressSpace argument must match the CR3 with PCID
bits stripped out (i.e., the low 12 bits of AddressSpace should be 0 in
long mode). The flush hypercalls flush all PCIDs for the specified
AddressSpace.&quot;

With this, PCID can be enabled.
<span class="signed-off-by">
Signed-off-by: Vitaly Kuznetsov &lt;vkuznets@redhat.com&gt;</span>
---
 arch/x86/hyperv/mmu.c | 16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/hyperv/mmu.c b/arch/x86/hyperv/mmu.c</span>
<span class="p_header">index 9cc9e1c1e2db..993a5dff1e40 100644</span>
<span class="p_header">--- a/arch/x86/hyperv/mmu.c</span>
<span class="p_header">+++ b/arch/x86/hyperv/mmu.c</span>
<span class="p_chunk">@@ -137,7 +137,12 @@</span> <span class="p_context"> static void hyperv_flush_tlb_others(const struct cpumask *cpus,</span>
 	}
 
 	if (info-&gt;mm) {
<span class="p_del">-		flush-&gt;address_space = virt_to_phys(info-&gt;mm-&gt;pgd);</span>
<span class="p_add">+		/*</span>
<span class="p_add">+		 * AddressSpace argument must match the CR3 with PCID bits</span>
<span class="p_add">+		 * stripped out.</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		flush-&gt;address_space =</span>
<span class="p_add">+			virt_to_phys(info-&gt;mm-&gt;pgd) &amp; CR3_ADDR_MASK;</span>
 		flush-&gt;flags = 0;
 	} else {
 		flush-&gt;address_space = 0;
<span class="p_chunk">@@ -219,7 +224,12 @@</span> <span class="p_context"> static void hyperv_flush_tlb_others_ex(const struct cpumask *cpus,</span>
 	}
 
 	if (info-&gt;mm) {
<span class="p_del">-		flush-&gt;address_space = virt_to_phys(info-&gt;mm-&gt;pgd);</span>
<span class="p_add">+		/*</span>
<span class="p_add">+		 * AddressSpace argument must match the CR3 with PCID bits</span>
<span class="p_add">+		 * stripped out.</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		flush-&gt;address_space =</span>
<span class="p_add">+			virt_to_phys(info-&gt;mm-&gt;pgd) &amp; CR3_ADDR_MASK;</span>
 		flush-&gt;flags = 0;
 	} else {
 		flush-&gt;address_space = 0;
<span class="p_chunk">@@ -278,8 +288,6 @@</span> <span class="p_context"> void hyperv_setup_mmu_ops(void)</span>
 	if (!(ms_hyperv.hints &amp; HV_X64_REMOTE_TLB_FLUSH_RECOMMENDED))
 		return;
 
<span class="p_del">-	setup_clear_cpu_cap(X86_FEATURE_PCID);</span>
<span class="p_del">-</span>
 	if (!(ms_hyperv.hints &amp; HV_X64_EX_PROCESSOR_MASKS_RECOMMENDED)) {
 		pr_info(&quot;Using hypercall for remote TLB flush\n&quot;);
 		pv_mmu_ops.flush_tlb_others = hyperv_flush_tlb_others;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



