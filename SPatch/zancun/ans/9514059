
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,04/26] treewide: Consolidate get_dma_ops() implementations - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,04/26] treewide: Consolidate get_dma_ops() implementations</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=119921">Bart Van Assche</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 12, 2017, 7:06 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170112190718.6728-5-bart.vanassche@sandisk.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9514059/mbox/"
   >mbox</a>
|
   <a href="/patch/9514059/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9514059/">/patch/9514059/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	C8D5E601E7 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 12 Jan 2017 19:13:07 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B95CA284C3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 12 Jan 2017 19:13:07 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id ADC5E28522; Thu, 12 Jan 2017 19:13:07 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 62F80284C3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 12 Jan 2017 19:13:06 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751071AbdALTNE (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 12 Jan 2017 14:13:04 -0500
Received: from mail-sn1nam01on0045.outbound.protection.outlook.com
	([104.47.32.45]:59556
	&quot;EHLO NAM01-SN1-obe.outbound.protection.outlook.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1750868AbdALTIJ (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 12 Jan 2017 14:08:09 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=sandiskcorp.onmicrosoft.com; s=selector1-sandisk-com;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version;
	bh=nlYrOuG2B9XdHnx+9Nqs/ocJUze8ihckZ9N4xVi5Qws=;
	b=Y7MzRwTXZIwRLeDGrpUNreP2o/vPCxxg6M8FZHvuYX7+OeyLVsxdS46FXC29U7IwxTLYjs6ssy8j1Kj9u+MFgb0rO0LIrzrDdYx1GSQUS9KllYRkh1A3uOzSmJBfHJaIkg7ZXnp9zslX/ZvrHU+dY7pmBl5IHopC7W7XG4fB2qk=
Received: from MWHPR02CA0013.namprd02.prod.outlook.com (10.168.209.151) by
	SN1PR02MB1424.namprd02.prod.outlook.com (10.162.0.28) with Microsoft
	SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P384) id
	15.1.829.7; Thu, 12 Jan 2017 19:08:05 +0000
Received: from BN1AFFO11FD026.protection.gbl (2a01:111:f400:7c10::128) by
	MWHPR02CA0013.outlook.office365.com (2603:10b6:300:4b::23) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P384) id 15.1.845.12 via
	Frontend Transport; Thu, 12 Jan 2017 19:08:05 +0000
Authentication-Results: spf=pass (sender IP is 63.163.107.225)
	smtp.mailfrom=sandisk.com; oracle.com; dkim=none (message not signed)
	header.d=none;oracle.com; dmarc=bestguesspass action=none
	header.from=sandisk.com;
Received-SPF: Pass (protection.outlook.com: domain of sandisk.com designates
	63.163.107.225 as permitted sender)
	receiver=protection.outlook.com; 
	client-ip=63.163.107.225; helo=milsmgep14.sandisk.com;
Received: from milsmgep14.sandisk.com (63.163.107.225) by
	BN1AFFO11FD026.mail.protection.outlook.com (10.58.52.86) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P384) id
	15.1.803.8 via Frontend Transport; Thu, 12 Jan 2017 19:08:03 +0000
Received: from MILHUBIP03.sdcorp.global.sandisk.com (Unknown_Domain
	[10.201.67.162])
	(using TLS with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(Client did not present a certificate)
	by  (Symantec Messaging Gateway) with SMTP id 2F.6B.01420.4F1D7785;
	Thu, 12 Jan 2017 10:59:00 -0800 (PST)
Received: from milsmgip12.sandisk.com (10.177.9.6) by
	MILHUBIP03.sdcorp.global.sandisk.com (10.177.9.96) with Microsoft
	SMTP Server id 14.3.319.2; Thu, 12 Jan 2017 11:07:58 -0800
X-AuditID: 0ac94371-7ee9b9800001058c-c8-5877d1f4d2b5
Received: from exp-402881.sdcorp.global.sandisk.com ( [10.177.9.6])     by
	(Symantec Messaging Gateway) with SMTP id 56.DF.09762.E04D7785;
	Thu, 12 Jan 2017 11:07:58 -0800 (PST)
From: Bart Van Assche &lt;bart.vanassche@sandisk.com&gt;
To: Doug Ledford &lt;dledford@redhat.com&gt;
CC: &lt;linux-rdma@vger.kernel.org&gt;, &lt;linux-kernel@vger.kernel.org&gt;,
	&quot;Greg Kroah-Hartman&quot; &lt;gregkh@linuxfoundation.org&gt;,
	Bart Van Assche &lt;bart.vanassche@sandisk.com&gt;,
	Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;,
	Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;,
	David Woodhouse &lt;dwmw2@infradead.org&gt;, Juergen Gross &lt;jgross@suse.com&gt;,
	&quot;H . Peter Anvin&quot; &lt;hpa@zytor.com&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	&lt;linux-arch@vger.kernel.org&gt;, Russell King &lt;linux@armlinux.org.uk&gt;,
	&lt;x86@kernel.org&gt;
Subject: [PATCH v2 04/26] treewide: Consolidate get_dma_ops() implementations
Date: Thu, 12 Jan 2017 11:06:56 -0800
Message-ID: &lt;20170112190718.6728-5-bart.vanassche@sandisk.com&gt;
X-Mailer: git-send-email 2.11.0
In-Reply-To: &lt;20170112190718.6728-1-bart.vanassche@sandisk.com&gt;
References: &lt;20170112190718.6728-1-bart.vanassche@sandisk.com&gt;
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFprPIsWRmVeSWpSXmKPExsXCddJ5ke6Xi+URBt/bhC0+NLUyW1yc3spi
	8fL8B1aLiSsnM1s0L17PZjFto7jFnJtGFh27vrJYXN41h83i2aFeFotDU/cyWlw6sIDJ4seG
	x6wOvB6Xr11k9ti8Qsuj500Lq8emVZ1sHvvnrmH3+Pj0FovH+31X2TzWb7nK4vF5k5zHiZYv
	rAFcUVw2Kak5mWWpRfp2CVwZ057uZC+YPo+x4sx+5wbGje2MXYycHBICJhIftz1g6WLk4hAS
	WMok0f/4NitIQkhgG6PE2ScpMEW9E2ezQRRtZJR4+PMzG0iCTcBI4tv7mSwgtoiAmsSmV4vY
	QWxmgffMEtPPu4PYwgK+Ei9f/QTbxiKgKjG58TdYPa+AncSeYwdZIBbIS+xquwi2mFPAXuLb
	/0uMEEfYSew68B/sOgmBt6wSb3d+ZYRoFpQ4OfMJC8QyCYmDL14wQzSoS5xcMp9pAqPQLCRl
	s5CULWBkWsUolpuZU5ybnlpgaKJXnJiXklmcrZecn7uJERJthTsYX9/2PsQowMGoxMO7w6Ys
	Qog1say4MvcQowQHs5II76zz5RFCvCmJlVWpRfnxRaU5qcWHGKU5WJTEeS9GfwwTEkhPLEnN
	Tk0tSC2CyTJxcEo1MPpOLRAJ+RP3pCn4ysu6R698Fv+Zwqrw6KHzqvuNL/Yc0Dh3z+mJ4NLX
	0xas2xws8eridunD+fecHZa/TJx+86RGzsKYJSZKjfFWwbcfVE6ZmK3V1liw8OKmr5MfWb1f
	L35cPsx8yxK18wwOaf+5vn6+e0xrlShrqHma5/cPyy28om/6Hq2fvWOOEktxRqKhFnNRcSIA
	mjIDWrICAAA=
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFvrAJMWRmVeSWpSXmKPExsXCtZGTTZfvSnmEweGPAhYHf7YxWnxoamW2
	uDi9lcXi5fkPrBYTV05mtmhevJ7NYtpGcYs5N40sOnZ9ZbG4vGsOm8WzQ70sFoem7mW0uHRg
	AZPFjw2PWR34PC5fu8jssXmFlkfPmxZWj02rOtk89s9dw+7x8ektFo/3+66yeUxbc57JY/2W
	qywenzfJeZxo+cIawB3FZZOSmpNZllqkb5fAlTHt6U72gunzGCvO7HduYNzYztjFyMkhIWAi
	0TtxNlsXIxeHkMB6RokXdw+BJdgEjCS+vZ/JAmKLCKhJbHq1iB2kiFngI7PE3A/TmEASwgK+
	Ei9f/QRrYBFQlZjc+BusgVfATuJ/31MWiA3yErvaLrKC2JwC9hLf/l8CqxcCqtl14D/LBEbu
	BYwMqxjFcjNzinPTMwsMjfSKE/NSMouz9ZLzczcxQsI0agfj9YnmhxiZODilGhj3Txaqqwiv
	98w63Gdk+Fzysud/G6OQHiWWbt4p6cFPxCbxNNW97mU46/XRnV38uJdXKvPtWO7sT1rnlPvt
	PjrU9TvlP9H3V41Yvcpywr8/tkobNec3Ve++V6ZlpHW23GaG/tI/pQxSPAvSNwt+as/1/jLl
	adqOSVY533cfPfKy1iYn9ch/XyWW4oxEQy3mouJEAOwIpTQDAgAA
MIME-Version: 1.0
Content-Type: text/plain
X-EOPAttributedMessage: 0
X-MS-Office365-Filtering-HT: Tenant
X-Forefront-Antispam-Report: CIP:63.163.107.225; IPV:NLI; CTRY:US; EFV:NLI;
	SFV:NSPM;
	SFS:(10009020)(6009001)(7916002)(39840400002)(39450400003)(39860400002)(39410400002)(39850400002)(2980300002)(438002)(189002)(199003)(50986999)(106466001)(76176999)(54906002)(626004)(5660300001)(33646002)(4326007)(8936002)(2906002)(50466002)(48376002)(50226002)(8676002)(1076002)(68736007)(81166006)(81156014)(2270400002)(6916009)(2950100002)(69596002)(36756003)(92566002)(7416002)(47776003)(356003)(5003940100001)(305945005)(38730400001)(77096006)(110136003)(189998001)(575784001)(86362001)(97736004);
	DIR:OUT; SFP:1101; SCL:1; SRVR:SN1PR02MB1424;
	H:milsmgep14.sandisk.com; FPR:; SPF:Pass;
	PTR:InfoDomainNonexistent; MX:1; A:1; LANG:en; 
X-Microsoft-Exchange-Diagnostics: 1; BN1AFFO11FD026;
	1:7L8SnhDamB2hXTZzDh1YfBnIAyGmbtEoU0a1nRZJAWAk2gNae5NzejLZH+2X6BAfUroMDyMqAyTHoO4/TG2duJHcQNxwp+PoZcBcbG1Atu5DD2EZdBI4HhYODfsV7gpS+fmvgNTz/eiVqbGXwD1r4HHQ+MqAp9s1BTxrhpWmIZbJ1XMpk97VIjOib4MGDreiWFoPvhMDJg/8P0WOQXEOiYRIgv3VW5PeG3pW5+/3m38kMAuZQf7m7+MAlp4K+Y3OVOLO1wEem/xdAeoTB23Y0KGZGeC6p/0Q0pwtYY6Rh/FAqkAzVMSYOQwNswRfwpU8piYy8Qtf3inwINIX5MitTPKEmpvL4l1nyquQm7Djtb0NyNUPo2m11A0JcOR7Z98EXIOOU2JENMllb8ugPk8l5aYulLflb1qfxKPa8Q5udZLejIE+3hMHDWChRgwnX6fvSX7NrBvzSAltJlm7A8QJ515MbIzr6TYa1i8SjjE6czCGeKvwhMkJJVtEGV4khx2f
X-MS-Office365-Filtering-Correlation-Id: 4f6a7425-0056-4eab-cfeb-08d43b1e5641
X-Microsoft-Antispam: UriScan:; BCL:0; PCL:0; RULEID:(22001)(8251501002);
	SRVR:SN1PR02MB1424; 
X-Microsoft-Exchange-Diagnostics: 1; SN1PR02MB1424;
	3:hm1NEFIJJdPSvkJcBRnIfvge4KEUeXZ9kCPAPjPxqdWgg0CCH2xmoxFTD6Zsg1iT1FtPbhs/kdpoh3ri3iJ9CPR+MBOhU1udQz658lfBh+fRWoNeelo+bnynYvzbgrZYC7FODpV1JWn9vEOh9P+emuSVmcwUlFJMeTPBdE4FYQxJkYmkq7xnuEgr2tA9LF6Fmks5w27p6+VhJ9p86wx4HoMWKQFn4hpufEwcmlKKjzlceigzs+r02rIvFxubxda7Mmuz0fQY+3NQkZv5llhR97e6L3H9KwTdH1ix0sU9GOHflk50CcH8MVJbe+qprZy5FcDbAaSFSrnWu5iH6ryBvpuzwiDpyVMzVha06IQ+Jnc1WtPVoa4zFpWAfyzh3Tlbu3/Au7EAeTcoFBYkbmTtSA==;
	25:pIYahRtz5fGoAiF41gpqvRf6KlSpbu+XS1z/5EdVmabD0Z9N+GqNqpysv3JrlacV8BHAohCwAL3737bfB3FImN/48MM60sdHuZgSpXdWXtVTyjDz3N3I7sj5fw6xLChhoVcpf1auAiyqWHtOQHiky9xMcCOpCGyvcnRVgPx6tM84vrW8s74vTBZXiCwbtMr3+MAHwTnCxiKvt03APZ2zCgaxMC4eXDvQ+uWFyNF1Q5yQmRPfRMQu8il59CBjbCRVr5IU7zFYiiCIIAky3fgWi2a3MVsZVsIWFE4uNbCl32xyJ4R1P0SO7bBeWabYf9iOTK7/06rykLfu69Pxto0qhdqbcOeEPW9U3/qoNZCClh/hEPt5kjjkbUEo6PXgS7X1mR/Al9z8KKK+opV3/bP5ty/JvGNb8//SY/9yoTChw+oi80P6d1wIkwYsLqSJK4mVg4311dxmVoTyohFz/eFAaw==
X-Microsoft-Exchange-Diagnostics: 1; SN1PR02MB1424;
	31:5jeqX8jGhq47AMRgKRyOhH2g1f/JbUxwE00DC65vVMI508JI4c9HbFGzPsuzcxVziIe+BaeD93JIVTqCGHU7kM4+xf0VddYdFEse2EFwQedZE+aHGlr+MgNboXPe9fxVnygHDa+3fJYJZf3rTOhN8JQcB8BbKib8yVOZRwvlr0SIDZwXxbGMme+TKnvfPFOgPZCywIu1doydsjIYE5s6jCB3zooLG/6jxiEC6G416/5+fqpXFVg5Bp+TtUfH75QoEO3NZCXMoYXAfN2BewshfQ==;
	20:29l4IkxKUOpZU/IQLMMsS3G3CDxlplLp4a2pZztFRoUukemjQ14ADjskcuVSxvOwNabD4PnHEqK1aQnJPy9iSqeibLXS5zHMTYtBs+YyhHPhWEKu+/qLrLaK7OMMYVQhWxaX0cMtFWC987Z6SehUii7z6nTZFglg6ebZ+FHqn6gdWz0+dYQPm/yv5MO7jcEtb3aeZYowhcHKeTSL3gGy2L/ZjV92JFWgwktARjq8BdGZJsbFuwIV2Y5rtFhy7GkVTAARxEWg2gCIvQ2rW3dEU+uRKit4r4bVSfuuu8C1r2XN1dc0mOh0nWuBQiTsGKDWnovBjLHkhTy7S3SOLWMF/N4ci6ibRgLI2ZKhU+PQ4oGBxY6/yIMYA0f9kXwTVsohVGDD0sEqTRALHPeI1mYXUiemOcqivvyH3fF1mJLH68iEsySh4Xa8CGvNftGudcDOYV8VkTDIJ2pCAmjraYM7fLcP1oE/cHhEngzRZmqHly2V1XRHOuVxQcKpiuNFDa+d
X-Microsoft-Antispam-PRVS: &lt;SN1PR02MB14243CEC6486F4F04AA76E2281790@SN1PR02MB1424.namprd02.prod.outlook.com&gt;
X-Exchange-Antispam-Report-Test: UriScan:(9452136761055)(146099531331640)(42932892334569); 
X-Exchange-Antispam-Report-CFA-Test: BCL:0; PCL:0;
	RULEID:(6040375)(601004)(2401047)(5005006)(8121501046)(13016025)(13018025)(10201501046)(3002001)(6055026)(6041248)(20161123560025)(20161123555025)(20161123562025)(20161123564025)(6072148);
	SRVR:SN1PR02MB1424; BCL:0; PCL:0; RULEID:; SRVR:SN1PR02MB1424;
X-Microsoft-Exchange-Diagnostics: 1; SN1PR02MB1424;
	4:7t8DBSXVYBCRA7kjXf1C2TrkCR2aoNntk96G/1hWD72yc7pl4CAUO0UDVQQdumws3ZyO2aaXu0tRyrrtc8KQrNBY4vQdCJpAdcKHvN7VFSs1Vxx188yWkegPRI4ggfFH3Y1oMhWxlEfsLHh+0W5T84l1lIh11i2dVIqJQoTG0+A5R1ndCbBrWs33UDEoIvVlbGwsWSxMH3Z6ubVu9Jv8ULhDaB2InzM8rGqH4N6b/3fxC1Gmqw6bZK9n6GDNGBoP2rSkP4l3NJTVrHyfVvf5rR4G9J5CC2LEjV7UC+3fHAqxUAnwMfIwBBPp9UPvwLZm+NwYYW1Ceydd5wjkNsuDLfoLswNKjysx3UzlkmuulZSDYrLdtHkDQ6u0Y/sLK/bmXBj/33egDFR57N1TbYKe33ovwIXz4NIL73K+poNCPNA3yB0eqant53ygGTxwvs0vuSSUBGQyTNa725SQHNFsB+/nCtE05lI52TvkORjhxOYDmVUWSeRQzmT38GbU64fSvoLlUc1YqXOG5jgQowFOqdxqAkGkMeY1Il9EtHVMZkBSMO4r+xWRPzrAmEYoAp+7P1sXrVWTWFXhNTATVFWJHVg6HzRvd5hl0UMfhiG6TJuHB/dN/3S46STaMkDlSvLJVGRMgry2L9htdeRj5IQC0sLSJR5U8ZfMPuP6HIpAbAGhp2nZwOAtriohc3P3K2qR++BoN0mlNtC+uq4JbVK3mxJxyiKFY9x8Qcz1sDtLaWY=
X-Forefront-PRVS: 018577E36E
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1; SN1PR02MB1424;
	23:FbdbVziDINaEDk4IblRPoFtNBDTkndcGsXMAZzEqY?=
	=?us-ascii?Q?V+VWTQWdOm+8ErkhGOfCGjcnA9nk4bqaw8kz9Xj06a49AZygvDCmv2Ib38Af?=
	=?us-ascii?Q?IX8Kmkcy54djm5bLqPEYMsoZtrqqh1uqL9buYJRWLbSXq91/YZzmeenfGpcN?=
	=?us-ascii?Q?AMOBlH5wx1gWgZYtTfgICuYzJyRUuoEcwdYvQTIFgKw+ZXF7jOTCYDcMZETR?=
	=?us-ascii?Q?pcGoqLwnRsOiqhpeuNXHypD/RTQFXbpv59qaRgD6hWG+ajZOTX8mT+8o1uLp?=
	=?us-ascii?Q?TKnjY9Q7lhPUbQMq1hPM+c14m2ahAFrCndkfjRSue5Dmd8UYDAZf9c4myaVS?=
	=?us-ascii?Q?dztUZ9rbX1iJpvoP8qZtrvHPcYTJbuZ53v+fZIxHx82adu1qq3N5riArEjHS?=
	=?us-ascii?Q?zloGAzKgUc5DpCp9gv+CO4W4For9+TbFmSk2jivrlAAHRjzWzJrmkOuQ4kdU?=
	=?us-ascii?Q?jjRZ7ev5ccWSUeyf27m31OwD2Gbkldt+M0d4iA5EcIVAPxtQUEec6bW0+I8k?=
	=?us-ascii?Q?IDNvyAT/54rYVxeejaELX2N3QqSzS9swPl1O4oqTczGsmf/kJ38UK/5mlDso?=
	=?us-ascii?Q?5FKtpLZ2YN+YdOCkut4B1eIoXJZntV5+DEtI5Yuu13tJaqqxNcdZ0rXW0TqD?=
	=?us-ascii?Q?QkGeOSQSuP25rB4EGF/fU4SY5UkUHO1dMKH695X59XOuPu5YXw7WM4QvsBug?=
	=?us-ascii?Q?Mh0CErojkLOEQEFV9rY1Llvlyi4k9LbEXV9bxKLQ1Yam3AXpSaPVg4oPiJpO?=
	=?us-ascii?Q?UmGA+zPH08uF2oDeW16/ZlGbXGVmMgS4eBanMNqESH507tIMNzTXwLOQ4mFG?=
	=?us-ascii?Q?44VO0n2SXA8aHwum9Xb4lmJ7xaRwwYMOMn5XzpM9WMisr8wxAIkt/1Vppqyu?=
	=?us-ascii?Q?wUzs2Zn+6uZ2VJVitqa7LLjYoPc2eT/epPSU++t/JcK+kKKtw9O1hAyrMqXk?=
	=?us-ascii?Q?ZYqbSavZQEpxfzn1W8DgtBntFc8bz+CclSFLHpROCAaouhdEgk2YrlDknQhQ?=
	=?us-ascii?Q?J0aCwJ+xLGs6GKzEi0zcKqjIRzFJmGPzzkoz5yhlHsIerQI6sItO/iBfJTBw?=
	=?us-ascii?Q?fMxtXlKL7yJYzWcQuajTvXC9Pfy8vzkenJ2mAUdin2Z1be0D+lfshFgxSWKW?=
	=?us-ascii?Q?WV6cWQ1FD4r3GeDwdsnmJhshm/xTyugD1qpW9My/0uyuBnh2l3IvA=3D=3D?=
X-Microsoft-Exchange-Diagnostics: 1; SN1PR02MB1424;
	6:uuyUJ1Up+A867iLbc6WYuCDUScbq8yvbmmrG/rwkhXoQjEmHd9848mapQMJ+HM/xAiur/KqMTUHPvmL+Vsfj/CjfeuMvAu8sLt5gQKpq3iAQMlR4nf+l5HNHQl7htU1Rv3c9meWMoVGndj2B9ODvu0ZDj8eSY9TxbqMiz7eTMlScRWwDsQa0Z4J98cXqznjxiPnCgUmVCCea5jrh+V8omKHK/UbeoqqiE3SvZI0zX/hGXJebkOuiNQDjMdQOuWtr8it2PWxiJVZIRvX12GTvG8t9OUb42Pr8vxdPJ0K2zFk6RTS5XdxSW9u66CtZudJ1U3oqkaiCg0lTeELJ61F/v4qxzZ8OdQWXU6UEbCd3jea8r3SVL4rHU06QRvpx2LTTJM7fq/gmB68T5pS2qf0SPf9xmL+pH4sdo3lDmEY/Dct2WGd+ftWQliZa7GlxKkOI//N0JCDfU1PqxsOAMdVuXg==;
	5:jaItB0sv3bY2WC4kbSeCQwuHDByBqRhFS3skaPe8ylorcBvoBL2G5/+oglWhzrf+74YgcqVmJi7K1vaCcard8POa/9wjS5c/QMOmaQONeqzlyvRx7kvNwUYZ6U2na0sET1y+7XaktYqDih08ZoPP8g==;
	24:3nwsxwtle/n4l5HGLuH0tXBxaWEpDcVjNcE34Chv5bNkiN6tbAtcmQlTZ5nQOO/wgvnrOfQBMW5FZN2bq9NmIefTXQLWtkbt4v8rPhSERZY=
SpamDiagnosticOutput: 1:99
SpamDiagnosticMetadata: NSPM
X-Microsoft-Exchange-Diagnostics: 1; SN1PR02MB1424;
	7:qSqFeJUGdvxVyoVG3LCl0+pgYwp5X9S6vtbeYyY+SXy4qFJXrtE3GK9aCXb6fUMVhVvGG6UaUzUwXP4L9O5LafL8dbRBTgeaxxGSUiFPRBr+/ikQ4G6tA3aIUer95n3j5rhxxtflqES3pn82fBv33jiDXNyDRsmHtOguIiftbH/bxdjmNwI4yRVsW8YF6Ck829LacRuCsS+4lC5KeP3fNTcR9MvHKjt9lT32m3cPoIlNdyKCm7KetNf5z3h0ZoNyiTg6QZ7CpFnl9KLp3WFt1HHTm8phbPNm9a1cBHE07in2VmngfRO5BzNUzQmOqWwSIrawfvK4W1HNfgg5mOusWL9SnvOHSitEVbyVNalr0ONTsXiZisaihzTUzMj/ws6cOB2mh83Trm+PP8GZOHL6D2QjNI7ZucftUbqXx+5jfmF0bP3GTZdAb1QxjqeuARFrkATXqfhmtDwZQqe2yKI5eQ==
X-OriginatorOrg: sandisk.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 12 Jan 2017 19:08:03.4254
	(UTC)
X-MS-Exchange-CrossTenant-Id: fcd9ea9c-ae8c-460c-ab3c-3db42d7ac64d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=fcd9ea9c-ae8c-460c-ab3c-3db42d7ac64d;
	Ip=[63.163.107.225]; Helo=[milsmgep14.sandisk.com]
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN1PR02MB1424
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=119921">Bart Van Assche</a> - Jan. 12, 2017, 7:06 p.m.</div>
<pre class="content">
Introduce a new architecture-specific get_arch_dma_ops() function
that takes a strut bus_type * argument. Add get_dma_ops() in
&lt;linux/dma-mapping.h&gt;.
<span class="signed-off-by">
Signed-off-by: Bart Van Assche &lt;bart.vanassche@sandisk.com&gt;</span>
Cc: Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;
Cc: Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;
Cc: David Woodhouse &lt;dwmw2@infradead.org&gt;
Cc: Juergen Gross &lt;jgross@suse.com&gt;
Cc: H. Peter Anvin &lt;hpa@zytor.com&gt;
Cc: Ingo Molnar &lt;mingo@redhat.com&gt;
Cc: linux-arch@vger.kernel.org
Cc: linux-kernel@vger.kernel.org
Cc: Russell King &lt;linux@armlinux.org.uk&gt;
Cc: x86@kernel.org
---
 arch/alpha/include/asm/dma-mapping.h      | 2 +-
 arch/arc/include/asm/dma-mapping.h        | 2 +-
 arch/arm/include/asm/dma-mapping.h        | 4 ++--
 arch/arm64/include/asm/dma-mapping.h      | 4 ++--
 arch/avr32/include/asm/dma-mapping.h      | 2 +-
 arch/blackfin/include/asm/dma-mapping.h   | 2 +-
 arch/c6x/include/asm/dma-mapping.h        | 2 +-
 arch/cris/include/asm/dma-mapping.h       | 4 ++--
 arch/frv/include/asm/dma-mapping.h        | 2 +-
 arch/h8300/include/asm/dma-mapping.h      | 2 +-
 arch/hexagon/include/asm/dma-mapping.h    | 5 +----
 arch/ia64/include/asm/dma-mapping.h       | 5 ++++-
 arch/m32r/include/asm/dma-mapping.h       | 4 +---
 arch/m68k/include/asm/dma-mapping.h       | 2 +-
 arch/metag/include/asm/dma-mapping.h      | 2 +-
 arch/microblaze/include/asm/dma-mapping.h | 2 +-
 arch/mips/include/asm/dma-mapping.h       | 7 ++-----
 arch/mn10300/include/asm/dma-mapping.h    | 2 +-
 arch/nios2/include/asm/dma-mapping.h      | 2 +-
 arch/openrisc/include/asm/dma-mapping.h   | 2 +-
 arch/parisc/include/asm/dma-mapping.h     | 2 +-
 arch/powerpc/include/asm/dma-mapping.h    | 7 ++-----
 arch/powerpc/include/asm/ps3.h            | 2 +-
 arch/s390/include/asm/dma-mapping.h       | 4 +---
 arch/sh/include/asm/dma-mapping.h         | 2 +-
 arch/sparc/include/asm/dma-mapping.h      | 4 ++--
 arch/tile/include/asm/dma-mapping.h       | 7 ++-----
 arch/unicore32/include/asm/dma-mapping.h  | 2 +-
 arch/x86/include/asm/dma-mapping.h        | 9 +--------
 arch/xtensa/include/asm/dma-mapping.h     | 7 ++-----
 include/linux/dma-mapping.h               | 7 +++++++
 31 files changed, 48 insertions(+), 64 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/alpha/include/asm/dma-mapping.h b/arch/alpha/include/asm/dma-mapping.h</span>
<span class="p_header">index d3480562411d..5d53666935e6 100644</span>
<span class="p_header">--- a/arch/alpha/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/alpha/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -3,7 +3,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops *dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return dma_ops;
 }
<span class="p_header">diff --git a/arch/arc/include/asm/dma-mapping.h b/arch/arc/include/asm/dma-mapping.h</span>
<span class="p_header">index fdff3aa60052..94285031c4fb 100644</span>
<span class="p_header">--- a/arch/arc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/arc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -20,7 +20,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops arc_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;arc_dma_ops;
 }
<span class="p_header">diff --git a/arch/arm/include/asm/dma-mapping.h b/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_header">index c7432d647e53..716656925975 100644</span>
<span class="p_header">--- a/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -23,12 +23,12 @@</span> <span class="p_context"> static inline const struct dma_map_ops *__generic_dma_ops(struct device *dev)</span>
 	return &amp;arm_dma_ops;
 }
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	if (xen_initial_domain())
 		return xen_dma_ops;
 	else
<span class="p_del">-		return __generic_dma_ops(dev);</span>
<span class="p_add">+		return __generic_dma_ops(NULL);</span>
 }
 
 #define HAVE_ARCH_DMA_SUPPORTED 1
<span class="p_header">diff --git a/arch/arm64/include/asm/dma-mapping.h b/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_header">index 58ae36cc3b60..505756cdc67a 100644</span>
<span class="p_header">--- a/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -39,12 +39,12 @@</span> <span class="p_context"> static inline const struct dma_map_ops *__generic_dma_ops(struct device *dev)</span>
 	return &amp;dummy_dma_ops;
 }
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	if (xen_initial_domain())
 		return xen_dma_ops;
 	else
<span class="p_del">-		return __generic_dma_ops(dev);</span>
<span class="p_add">+		return __generic_dma_ops(NULL);</span>
 }
 
 void arch_setup_dma_ops(struct device *dev, u64 dma_base, u64 size,
<span class="p_header">diff --git a/arch/avr32/include/asm/dma-mapping.h b/arch/avr32/include/asm/dma-mapping.h</span>
<span class="p_header">index b2b43c0e0774..7388451f9905 100644</span>
<span class="p_header">--- a/arch/avr32/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/avr32/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -6,7 +6,7 @@</span> <span class="p_context"> extern void dma_cache_sync(struct device *dev, void *vaddr, size_t size,</span>
 
 extern const struct dma_map_ops avr32_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;avr32_dma_ops;
 }
<span class="p_header">diff --git a/arch/blackfin/include/asm/dma-mapping.h b/arch/blackfin/include/asm/dma-mapping.h</span>
<span class="p_header">index 320fb50fbd41..04254ac36bed 100644</span>
<span class="p_header">--- a/arch/blackfin/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/blackfin/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -38,7 +38,7 @@</span> <span class="p_context"> _dma_sync(dma_addr_t addr, size_t size, enum dma_data_direction dir)</span>
 
 extern const struct dma_map_ops bfin_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;bfin_dma_ops;
 }
<span class="p_header">diff --git a/arch/c6x/include/asm/dma-mapping.h b/arch/c6x/include/asm/dma-mapping.h</span>
<span class="p_header">index 88258b9ebc8e..aca9f755e4f8 100644</span>
<span class="p_header">--- a/arch/c6x/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/c6x/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -19,7 +19,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops c6x_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;c6x_dma_ops;
 }
<span class="p_header">diff --git a/arch/cris/include/asm/dma-mapping.h b/arch/cris/include/asm/dma-mapping.h</span>
<span class="p_header">index aae4fbc0a656..256169de3743 100644</span>
<span class="p_header">--- a/arch/cris/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/cris/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -4,12 +4,12 @@</span> <span class="p_context"></span>
 #ifdef CONFIG_PCI
 extern const struct dma_map_ops v32_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;v32_dma_ops;
 }
 #else
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	BUG();
 	return NULL;
<span class="p_header">diff --git a/arch/frv/include/asm/dma-mapping.h b/arch/frv/include/asm/dma-mapping.h</span>
<span class="p_header">index 150cc00544a8..354900917585 100644</span>
<span class="p_header">--- a/arch/frv/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/frv/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -9,7 +9,7 @@</span> <span class="p_context"> extern unsigned long __nongprelbss dma_coherent_mem_end;</span>
 
 extern const struct dma_map_ops frv_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;frv_dma_ops;
 }
<span class="p_header">diff --git a/arch/h8300/include/asm/dma-mapping.h b/arch/h8300/include/asm/dma-mapping.h</span>
<span class="p_header">index f804bca4c13f..847c7562e046 100644</span>
<span class="p_header">--- a/arch/h8300/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/h8300/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -3,7 +3,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops h8300_dma_map_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;h8300_dma_map_ops;
 }
<span class="p_header">diff --git a/arch/hexagon/include/asm/dma-mapping.h b/arch/hexagon/include/asm/dma-mapping.h</span>
<span class="p_header">index b812e917cd95..d3a87bd9b686 100644</span>
<span class="p_header">--- a/arch/hexagon/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/hexagon/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -34,11 +34,8 @@</span> <span class="p_context"> extern int bad_dma_address;</span>
 
 extern const struct dma_map_ops *dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
<span class="p_del">-	if (unlikely(dev == NULL))</span>
<span class="p_del">-		return NULL;</span>
<span class="p_del">-</span>
 	return dma_ops;
 }
 
<span class="p_header">diff --git a/arch/ia64/include/asm/dma-mapping.h b/arch/ia64/include/asm/dma-mapping.h</span>
<span class="p_header">index 05e467d56d86..73ec3c6f4cfe 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -23,7 +23,10 @@</span> <span class="p_context"> extern void machvec_dma_sync_single(struct device *, dma_addr_t, size_t,</span>
 extern void machvec_dma_sync_sg(struct device *, struct scatterlist *, int,
 				enum dma_data_direction);
 
<span class="p_del">-#define get_dma_ops(dev) platform_dma_get_ops(dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return platform_dma_get_ops(NULL);</span>
<span class="p_add">+}</span>
 
 static inline bool dma_capable(struct device *dev, dma_addr_t addr, size_t size)
 {
<span class="p_header">diff --git a/arch/m32r/include/asm/dma-mapping.h b/arch/m32r/include/asm/dma-mapping.h</span>
<span class="p_header">index 27b1597ac563..c01d9f52d228 100644</span>
<span class="p_header">--- a/arch/m32r/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/m32r/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -10,10 +10,8 @@</span> <span class="p_context"></span>
 
 #define DMA_ERROR_CODE (~(dma_addr_t)0x0)
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_del">-		return dev-&gt;dma_ops;</span>
 	return &amp;dma_noop_ops;
 }
 
<span class="p_header">diff --git a/arch/m68k/include/asm/dma-mapping.h b/arch/m68k/include/asm/dma-mapping.h</span>
<span class="p_header">index 863509939d5a..9210e470771b 100644</span>
<span class="p_header">--- a/arch/m68k/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/m68k/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -3,7 +3,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops m68k_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
         return &amp;m68k_dma_ops;
 }
<span class="p_header">diff --git a/arch/metag/include/asm/dma-mapping.h b/arch/metag/include/asm/dma-mapping.h</span>
<span class="p_header">index c156a7ac732f..fad3dc3cb210 100644</span>
<span class="p_header">--- a/arch/metag/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/metag/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -3,7 +3,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops metag_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;metag_dma_ops;
 }
<span class="p_header">diff --git a/arch/microblaze/include/asm/dma-mapping.h b/arch/microblaze/include/asm/dma-mapping.h</span>
<span class="p_header">index c7faf2fb51d6..3fad5e722a66 100644</span>
<span class="p_header">--- a/arch/microblaze/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/microblaze/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -38,7 +38,7 @@</span> <span class="p_context"></span>
  */
 extern const struct dma_map_ops dma_direct_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;dma_direct_ops;
 }
<span class="p_header">diff --git a/arch/mips/include/asm/dma-mapping.h b/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_header">index dad3b09fe993..aba71385f9d1 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -11,12 +11,9 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops *mips_dma_map_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_del">-		return dev-&gt;dma_ops;</span>
<span class="p_del">-	else</span>
<span class="p_del">-		return mips_dma_map_ops;</span>
<span class="p_add">+	return mips_dma_map_ops;</span>
 }
 
 static inline bool dma_capable(struct device *dev, dma_addr_t addr, size_t size)
<span class="p_header">diff --git a/arch/mn10300/include/asm/dma-mapping.h b/arch/mn10300/include/asm/dma-mapping.h</span>
<span class="p_header">index 564e3927e005..737ef574b3ea 100644</span>
<span class="p_header">--- a/arch/mn10300/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/mn10300/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -16,7 +16,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops mn10300_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;mn10300_dma_ops;
 }
<span class="p_header">diff --git a/arch/nios2/include/asm/dma-mapping.h b/arch/nios2/include/asm/dma-mapping.h</span>
<span class="p_header">index aa00d839a64b..7b3c6f280293 100644</span>
<span class="p_header">--- a/arch/nios2/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/nios2/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -12,7 +12,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops nios2_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;nios2_dma_ops;
 }
<span class="p_header">diff --git a/arch/openrisc/include/asm/dma-mapping.h b/arch/openrisc/include/asm/dma-mapping.h</span>
<span class="p_header">index 88acbedb4947..0c0075f17145 100644</span>
<span class="p_header">--- a/arch/openrisc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/openrisc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -30,7 +30,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops or1k_dma_map_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;or1k_dma_map_ops;
 }
<span class="p_header">diff --git a/arch/parisc/include/asm/dma-mapping.h b/arch/parisc/include/asm/dma-mapping.h</span>
<span class="p_header">index 1749073e44fc..5404c6a726b2 100644</span>
<span class="p_header">--- a/arch/parisc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/parisc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -27,7 +27,7 @@</span> <span class="p_context"> extern const struct dma_map_ops pcx_dma_ops;</span>
 
 extern const struct dma_map_ops *hppa_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return hppa_dma_ops;
 }
<span class="p_header">diff --git a/arch/powerpc/include/asm/dma-mapping.h b/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_header">index 8275603ba4d5..181a095468e4 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -78,17 +78,14 @@</span> <span class="p_context"> extern struct dma_map_ops dma_iommu_ops;</span>
 #endif
 extern const struct dma_map_ops dma_direct_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	/* We don&#39;t handle the NULL dev case for ISA for now. We could
 	 * do it via an out of line call but it is not needed for now. The
 	 * only ISA DMA device we support is the floppy and we have a hack
 	 * in the floppy driver directly to get a device for us.
 	 */
<span class="p_del">-	if (unlikely(dev == NULL))</span>
<span class="p_del">-		return NULL;</span>
<span class="p_del">-</span>
<span class="p_del">-	return dev-&gt;dma_ops;</span>
<span class="p_add">+	return NULL;</span>
 }
 
 /*
<span class="p_header">diff --git a/arch/powerpc/include/asm/ps3.h b/arch/powerpc/include/asm/ps3.h</span>
<span class="p_header">index a19f831a4cc9..17ee719e799f 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/ps3.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/ps3.h</span>
<span class="p_chunk">@@ -435,7 +435,7 @@</span> <span class="p_context"> static inline void *ps3_system_bus_get_drvdata(</span>
 	return dev_get_drvdata(&amp;dev-&gt;core);
 }
 
<span class="p_del">-/* These two need global scope for get_dma_ops(). */</span>
<span class="p_add">+/* These two need global scope for get_arch_dma_ops(). */</span>
 
 extern struct bus_type ps3_system_bus_type;
 
<span class="p_header">diff --git a/arch/s390/include/asm/dma-mapping.h b/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_header">index a872027d0c1b..3108b8dbe266 100644</span>
<span class="p_header">--- a/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -12,10 +12,8 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops s390_pci_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_del">-		return dev-&gt;dma_ops;</span>
 	return &amp;dma_noop_ops;
 }
 
<span class="p_header">diff --git a/arch/sh/include/asm/dma-mapping.h b/arch/sh/include/asm/dma-mapping.h</span>
<span class="p_header">index a7382c34c241..d99008af5f73 100644</span>
<span class="p_header">--- a/arch/sh/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/sh/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -4,7 +4,7 @@</span> <span class="p_context"></span>
 extern const struct dma_map_ops *dma_ops;
 extern void no_iommu_init(void);
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return dma_ops;
 }
<span class="p_header">diff --git a/arch/sparc/include/asm/dma-mapping.h b/arch/sparc/include/asm/dma-mapping.h</span>
<span class="p_header">index 3d2babc0c4c6..69cc627779f2 100644</span>
<span class="p_header">--- a/arch/sparc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -24,14 +24,14 @@</span> <span class="p_context"> extern const struct dma_map_ops pci32_dma_ops;</span>
 
 extern struct bus_type pci_bus_type;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 #ifdef CONFIG_SPARC_LEON
 	if (sparc_cpu_model == sparc_leon)
 		return leon_dma_ops;
 #endif
 #if defined(CONFIG_SPARC32) &amp;&amp; defined(CONFIG_PCI)
<span class="p_del">-	if (dev-&gt;bus == &amp;pci_bus_type)</span>
<span class="p_add">+	if (bus == &amp;pci_bus_type)</span>
 		return &amp;pci32_dma_ops;
 #endif
 	return dma_ops;
<span class="p_header">diff --git a/arch/tile/include/asm/dma-mapping.h b/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_header">index 2562995a6ac9..bbc71a29b2c6 100644</span>
<span class="p_header">--- a/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -29,12 +29,9 @@</span> <span class="p_context"> extern const struct dma_map_ops *gx_pci_dma_map_ops;</span>
 extern const struct dma_map_ops *gx_legacy_pci_dma_map_ops;
 extern const struct dma_map_ops *gx_hybrid_pci_dma_map_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_del">-		return dev-&gt;dma_ops;</span>
<span class="p_del">-	else</span>
<span class="p_del">-		return tile_dma_map_ops;</span>
<span class="p_add">+	return tile_dma_map_ops;</span>
 }
 
 static inline dma_addr_t get_dma_offset(struct device *dev)
<span class="p_header">diff --git a/arch/unicore32/include/asm/dma-mapping.h b/arch/unicore32/include/asm/dma-mapping.h</span>
<span class="p_header">index 14d7729c7b73..518ba5848dd6 100644</span>
<span class="p_header">--- a/arch/unicore32/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/unicore32/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -23,7 +23,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops swiotlb_dma_map_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;swiotlb_dma_map_ops;
 }
<span class="p_header">diff --git a/arch/x86/include/asm/dma-mapping.h b/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_header">index 94b5b96966cb..08a0838b83fb 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -27,16 +27,9 @@</span> <span class="p_context"> extern int panic_on_overflow;</span>
 
 extern const struct dma_map_ops *dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
<span class="p_del">-#ifndef CONFIG_X86_DEV_DMA_OPS</span>
 	return dma_ops;
<span class="p_del">-#else</span>
<span class="p_del">-	if (unlikely(!dev) || !dev-&gt;dma_ops)</span>
<span class="p_del">-		return dma_ops;</span>
<span class="p_del">-	else</span>
<span class="p_del">-		return dev-&gt;dma_ops;</span>
<span class="p_del">-#endif</span>
 }
 
 bool arch_dma_alloc_attrs(struct device **dev, gfp_t *gfp);
<span class="p_header">diff --git a/arch/xtensa/include/asm/dma-mapping.h b/arch/xtensa/include/asm/dma-mapping.h</span>
<span class="p_header">index 9eecfc3c5dc4..c6140fa8c0be 100644</span>
<span class="p_header">--- a/arch/xtensa/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/xtensa/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -20,12 +20,9 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops xtensa_dma_map_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_del">-		return dev-&gt;dma_ops;</span>
<span class="p_del">-	else</span>
<span class="p_del">-		return &amp;xtensa_dma_map_ops;</span>
<span class="p_add">+	return &amp;xtensa_dma_map_ops;</span>
 }
 
 void dma_cache_sync(struct device *dev, void *vaddr, size_t size,
<span class="p_header">diff --git a/include/linux/dma-mapping.h b/include/linux/dma-mapping.h</span>
<span class="p_header">index e97f23e8b2d9..ab8710888ddf 100644</span>
<span class="p_header">--- a/include/linux/dma-mapping.h</span>
<span class="p_header">+++ b/include/linux/dma-mapping.h</span>
<span class="p_chunk">@@ -164,6 +164,13 @@</span> <span class="p_context"> int dma_mmap_from_coherent(struct device *dev, struct vm_area_struct *vma,</span>
 
 #ifdef CONFIG_HAS_DMA
 #include &lt;asm/dma-mapping.h&gt;
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_add">+		return dev-&gt;dma_ops;</span>
<span class="p_add">+	return get_arch_dma_ops(dev ? dev-&gt;bus : NULL);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static inline void set_dma_ops(struct device *dev,
 			       const struct dma_map_ops *dma_ops)
 {

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



