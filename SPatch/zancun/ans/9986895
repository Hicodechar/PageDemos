
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>x86/hyperv: don&#39;t use percpu areas for pcpu_flush/pcpu_flush_ex structures - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    x86/hyperv: don&#39;t use percpu areas for pcpu_flush/pcpu_flush_ex structures</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=99981">Vitaly Kuznetsov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 5, 2017, 11:39 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171005113924.28021-1-vkuznets@redhat.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9986895/mbox/"
   >mbox</a>
|
   <a href="/patch/9986895/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9986895/">/patch/9986895/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	44E006029B for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  5 Oct 2017 11:39:34 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 2CA9B28ABC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  5 Oct 2017 11:39:34 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 2167B28AC5; Thu,  5 Oct 2017 11:39:34 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 142B528ABC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  5 Oct 2017 11:39:32 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751914AbdJELj3 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 5 Oct 2017 07:39:29 -0400
Received: from mx1.redhat.com ([209.132.183.28]:52924 &quot;EHLO mx1.redhat.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751525AbdJELj2 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 5 Oct 2017 07:39:28 -0400
Received: from smtp.corp.redhat.com
	(int-mx02.intmail.prod.int.phx2.redhat.com [10.5.11.12])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 083372579A;
	Thu,  5 Oct 2017 11:39:28 +0000 (UTC)
DMARC-Filter: OpenDMARC Filter v1.3.2 mx1.redhat.com 083372579A
Authentication-Results: ext-mx10.extmail.prod.ext.phx2.redhat.com;
	dmarc=none (p=none dis=none) header.from=redhat.com
Authentication-Results: ext-mx10.extmail.prod.ext.phx2.redhat.com;
	spf=fail smtp.mailfrom=vkuznets@redhat.com
Received: from vitty.brq.redhat.com (unknown [10.43.2.155])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 95E6A61982;
	Thu,  5 Oct 2017 11:39:25 +0000 (UTC)
From: Vitaly Kuznetsov &lt;vkuznets@redhat.com&gt;
To: x86@kernel.org, devel@linuxdriverproject.org
Cc: linux-kernel@vger.kernel.org, &quot;K. Y. Srinivasan&quot; &lt;kys@microsoft.com&gt;,
	Haiyang Zhang &lt;haiyangz@microsoft.com&gt;,
	Stephen Hemminger &lt;sthemmin@microsoft.com&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;,
	Jork Loeser &lt;Jork.Loeser@microsoft.com&gt;, Dexuan Cui &lt;decui@microsoft.com&gt;
Subject: [PATCH] x86/hyperv: don&#39;t use percpu areas for
	pcpu_flush/pcpu_flush_ex structures
Date: Thu,  5 Oct 2017 13:39:24 +0200
Message-Id: &lt;20171005113924.28021-1-vkuznets@redhat.com&gt;
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.39]);
	Thu, 05 Oct 2017 11:39:28 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99981">Vitaly Kuznetsov</a> - Oct. 5, 2017, 11:39 a.m.</div>
<pre class="content">
hv_do_hypercall() does virt_to_phys() translation and with some configs
(CONFIG_SLAB) this doesn&#39;t work for percpu areas, we pass wrong memory to
hypervisor and get #GP. We could use working slow_virt_to_phys() instead
but doing so kills the performance.

Move pcpu_flush/pcpu_flush_ex structures out of percpu areas and
allocate memory on first call. The additional level of indirection gives
us a small performance penalty, in future we may consider introducing
hypercall functions which avoid virt_to_phys() conversion and cache
physical addresses of pcpu_flush/pcpu_flush_ex structures somewhere.

Reported-by: Simon Xiao &lt;sixiao@microsoft.com&gt;
<span class="signed-off-by">Signed-off-by: Vitaly Kuznetsov &lt;vkuznets@redhat.com&gt;</span>
---
- Please cosider this for 4.14.
---
 arch/x86/hyperv/mmu.c | 34 ++++++++++++++++++++++++++++------
 1 file changed, 28 insertions(+), 6 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/hyperv/mmu.c b/arch/x86/hyperv/mmu.c</span>
<span class="p_header">index 123d9b501108..b8957309bdc4 100644</span>
<span class="p_header">--- a/arch/x86/hyperv/mmu.c</span>
<span class="p_header">+++ b/arch/x86/hyperv/mmu.c</span>
<span class="p_chunk">@@ -36,9 +36,9 @@</span> <span class="p_context"> struct hv_flush_pcpu_ex {</span>
 /* Each gva in gva_list encodes up to 4096 pages to flush */
 #define HV_TLB_FLUSH_UNIT (4096 * PAGE_SIZE)
 
<span class="p_del">-static struct hv_flush_pcpu __percpu *pcpu_flush;</span>
<span class="p_add">+static struct hv_flush_pcpu __percpu **pcpu_flush;</span>
 
<span class="p_del">-static struct hv_flush_pcpu_ex __percpu *pcpu_flush_ex;</span>
<span class="p_add">+static struct hv_flush_pcpu_ex __percpu **pcpu_flush_ex;</span>
 
 /*
  * Fills in gva_list starting from offset. Returns the number of items added.
<span class="p_chunk">@@ -102,6 +102,7 @@</span> <span class="p_context"> static void hyperv_flush_tlb_others(const struct cpumask *cpus,</span>
 				    const struct flush_tlb_info *info)
 {
 	int cpu, vcpu, gva_n, max_gvas;
<span class="p_add">+	struct hv_flush_pcpu **flush_pcpu;</span>
 	struct hv_flush_pcpu *flush;
 	u64 status = U64_MAX;
 	unsigned long flags;
<span class="p_chunk">@@ -116,7 +117,17 @@</span> <span class="p_context"> static void hyperv_flush_tlb_others(const struct cpumask *cpus,</span>
 
 	local_irq_save(flags);
 
<span class="p_del">-	flush = this_cpu_ptr(pcpu_flush);</span>
<span class="p_add">+	flush_pcpu = this_cpu_ptr(pcpu_flush);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (unlikely(!*flush_pcpu))</span>
<span class="p_add">+		*flush_pcpu = page_address(alloc_page(GFP_ATOMIC));</span>
<span class="p_add">+</span>
<span class="p_add">+	flush = *flush_pcpu;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (unlikely(!flush)) {</span>
<span class="p_add">+		local_irq_restore(flags);</span>
<span class="p_add">+		goto do_native;</span>
<span class="p_add">+	}</span>
 
 	if (info-&gt;mm) {
 		flush-&gt;address_space = virt_to_phys(info-&gt;mm-&gt;pgd);
<span class="p_chunk">@@ -173,6 +184,7 @@</span> <span class="p_context"> static void hyperv_flush_tlb_others_ex(const struct cpumask *cpus,</span>
 				       const struct flush_tlb_info *info)
 {
 	int nr_bank = 0, max_gvas, gva_n;
<span class="p_add">+	struct hv_flush_pcpu_ex **flush_pcpu;</span>
 	struct hv_flush_pcpu_ex *flush;
 	u64 status = U64_MAX;
 	unsigned long flags;
<span class="p_chunk">@@ -187,7 +199,17 @@</span> <span class="p_context"> static void hyperv_flush_tlb_others_ex(const struct cpumask *cpus,</span>
 
 	local_irq_save(flags);
 
<span class="p_del">-	flush = this_cpu_ptr(pcpu_flush_ex);</span>
<span class="p_add">+	flush_pcpu = this_cpu_ptr(pcpu_flush_ex);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (unlikely(!*flush_pcpu))</span>
<span class="p_add">+		*flush_pcpu = page_address(alloc_page(GFP_ATOMIC));</span>
<span class="p_add">+</span>
<span class="p_add">+	flush = *flush_pcpu;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (unlikely(!flush)) {</span>
<span class="p_add">+		local_irq_restore(flags);</span>
<span class="p_add">+		goto do_native;</span>
<span class="p_add">+	}</span>
 
 	if (info-&gt;mm) {
 		flush-&gt;address_space = virt_to_phys(info-&gt;mm-&gt;pgd);
<span class="p_chunk">@@ -266,7 +288,7 @@</span> <span class="p_context"> void hyper_alloc_mmu(void)</span>
 		return;
 
 	if (!(ms_hyperv.hints &amp; HV_X64_EX_PROCESSOR_MASKS_RECOMMENDED))
<span class="p_del">-		pcpu_flush = __alloc_percpu(PAGE_SIZE, PAGE_SIZE);</span>
<span class="p_add">+		pcpu_flush = alloc_percpu(struct hv_flush_pcpu *);</span>
 	else
<span class="p_del">-		pcpu_flush_ex = __alloc_percpu(PAGE_SIZE, PAGE_SIZE);</span>
<span class="p_add">+		pcpu_flush_ex = alloc_percpu(struct hv_flush_pcpu_ex *);</span>
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



