
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[GIT,PULL] s390 patches for 4.9-rc3 - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [GIT,PULL] s390 patches for 4.9-rc3</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=93">Martin Schwidefsky</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 25, 2016, 7:09 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161025090906.3fd118ab@mschwide&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9394101/mbox/"
   >mbox</a>
|
   <a href="/patch/9394101/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9394101/">/patch/9394101/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	C55526077A for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 25 Oct 2016 07:09:27 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B3534293B0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 25 Oct 2016 07:09:27 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A8117293C0; Tue, 25 Oct 2016 07:09:27 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B889A293B0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 25 Oct 2016 07:09:26 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1758347AbcJYHJQ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 25 Oct 2016 03:09:16 -0400
Received: from mx0a-001b2d01.pphosted.com ([148.163.156.1]:38282 &quot;EHLO
	mx0a-001b2d01.pphosted.com&quot; rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1755482AbcJYHJO (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 25 Oct 2016 03:09:14 -0400
Received: from pps.filterd (m0098399.ppops.net [127.0.0.1])
	by mx0a-001b2d01.pphosted.com (8.16.0.17/8.16.0.17) with SMTP id
	u9P792BP070882
	for &lt;linux-kernel@vger.kernel.org&gt;; Tue, 25 Oct 2016 03:09:13 -0400
Received: from e06smtp11.uk.ibm.com (e06smtp11.uk.ibm.com [195.75.94.107])
	by mx0a-001b2d01.pphosted.com with ESMTP id 269vkueg9g-1
	(version=TLSv1.2 cipher=AES256-SHA bits=256 verify=NOT)
	for &lt;linux-kernel@vger.kernel.org&gt;; Tue, 25 Oct 2016 03:09:13 -0400
Received: from localhost
	by e06smtp11.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use
	Only! Violators will be prosecuted
	for &lt;linux-kernel@vger.kernel.org&gt; from &lt;schwidefsky@de.ibm.com&gt;;
	Tue, 25 Oct 2016 08:09:11 +0100
Received: from d06dlp02.portsmouth.uk.ibm.com (9.149.20.14)
	by e06smtp11.uk.ibm.com (192.168.101.141) with IBM ESMTP SMTP
	Gateway: Authorized Use Only! Violators will be prosecuted; 
	Tue, 25 Oct 2016 08:09:09 +0100
Received: from b06cxnps4074.portsmouth.uk.ibm.com
	(d06relay11.portsmouth.uk.ibm.com [9.149.109.196])
	by d06dlp02.portsmouth.uk.ibm.com (Postfix) with ESMTP id
	A4527219004D; Tue, 25 Oct 2016 08:08:24 +0100 (BST)
Received: from d06av06.portsmouth.uk.ibm.com (d06av06.portsmouth.uk.ibm.com
	[9.149.37.217])
	by b06cxnps4074.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with
	ESMTP id u9P798vt29294608; Tue, 25 Oct 2016 07:09:08 GMT
Received: from d06av06.portsmouth.uk.ibm.com (localhost [127.0.0.1])
	by d06av06.portsmouth.uk.ibm.com (8.14.4/8.14.4/NCO v10.0 AVout) with
	ESMTP id u9P798H1016405; Tue, 25 Oct 2016 03:09:08 -0400
Received: from mschwide (dyn-9-152-212-209.boeblingen.de.ibm.com
	[9.152.212.209])
	by d06av06.portsmouth.uk.ibm.com (8.14.4/8.14.4/NCO v10.0 AVin) with
	ESMTP id u9P797n7016384; Tue, 25 Oct 2016 03:09:07 -0400
Date: Tue, 25 Oct 2016 09:09:06 +0200
From: Martin Schwidefsky &lt;schwidefsky@de.ibm.com&gt;
To: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: linux-kernel &lt;linux-kernel@vger.kernel.org&gt;,
	linux-s390 &lt;linux-s390@vger.kernel.org&gt;,
	Heiko Carstens &lt;heiko.carstens@de.ibm.com&gt;
Subject: [GIT PULL] s390 patches for 4.9-rc3
X-Mailer: Claws Mail 3.9.3 (GTK+ 2.24.23; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-TM-AS-MML: disable
X-Content-Scanned: Fidelis XPS MAILER
x-cbid: 16102507-0040-0000-0000-000002F48088
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 16102507-0041-0000-0000-00001D9792D4
Message-Id: &lt;20161025090906.3fd118ab@mschwide&gt;
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10432:, ,
	definitions=2016-10-25_02:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
	spamscore=0 suspectscore=2
	malwarescore=0 phishscore=0 adultscore=0 bulkscore=0 classifier=spam
	adjust=0 reason=mlx scancount=1 engine=8.0.1-1609300000
	definitions=main-1610250120
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=93">Martin Schwidefsky</a> - Oct. 25, 2016, 7:09 a.m.</div>
<pre class="content">
Hi Linus,

please pull from the &#39;for-linus&#39; branch of

	git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux.git for-linus

to receive the following updates:

A few more s390 patches for 4.9:

 - A fix for an overflow in the dasd driver reported by UBSAN
 - Fix a regression and add hotplug memory to the zone movable again
 - Add ignore defines for the pkey system calls
 - Fix the ouput of the merged stack tracer
 - Replace printk with pr_cont in arch/s390 where appropriate
 - Remove the arch specific return_address function again
 - Ignore reserved channel paths at boot time
 - Add a missing hugetlb_bad_size call to the arch backend

Christian Borntraeger (1):
      s390/dasd: avoid undefined behaviour

Gerald Schaefer (1):
      s390/mm: fix zone calculation in arch_add_memory()

Heiko Carstens (6):
      s390: ignore pkey system calls
      s390/dumpstack: restore reliable indicator for call traces
      s390/dumpstack: use pr_cont where appropriate
      s390/disassambler: use pr_cont where appropriate
      s390/dumpstack: get rid of return_address again
      s390/dumpstack: use pr_cont within show_stack and die

Sebastian Ott (1):
      s390/cio: don&#39;t register chpids in reserved state

Shyam Saini (1):
      s390/mm: use hugetlb_bad_size()

 arch/s390/include/asm/ftrace.h    |  4 +--
 arch/s390/include/asm/processor.h |  2 +-
 arch/s390/include/asm/unistd.h    |  3 ++
 arch/s390/kernel/dis.c            |  4 +--
 arch/s390/kernel/dumpstack.c      | 63 ++++++++++++++-------------------------
 arch/s390/kernel/perf_event.c     |  2 +-
 arch/s390/kernel/stacktrace.c     |  4 +--
 arch/s390/mm/hugetlbpage.c        |  1 +
 arch/s390/mm/init.c               | 38 ++++++++++++-----------
 arch/s390/oprofile/init.c         |  2 +-
 drivers/s390/block/dasd_eckd.c    |  4 +--
 drivers/s390/cio/chp.c            |  6 ++--
 12 files changed, 61 insertions(+), 72 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/s390/include/asm/ftrace.h b/arch/s390/include/asm/ftrace.h</span>
<span class="p_header">index 64053d9..836c562 100644</span>
<span class="p_header">--- a/arch/s390/include/asm/ftrace.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/ftrace.h</span>
<span class="p_chunk">@@ -12,9 +12,7 @@</span> <span class="p_context"></span>
 
 #ifndef __ASSEMBLY__
 
<span class="p_del">-unsigned long return_address(int depth);</span>
<span class="p_del">-</span>
<span class="p_del">-#define ftrace_return_address(n) return_address(n)</span>
<span class="p_add">+#define ftrace_return_address(n) __builtin_return_address(n)</span>
 
 void _mcount(void);
 void ftrace_caller(void);
<span class="p_header">diff --git a/arch/s390/include/asm/processor.h b/arch/s390/include/asm/processor.h</span>
<span class="p_header">index 0332317..602af69 100644</span>
<span class="p_header">--- a/arch/s390/include/asm/processor.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/processor.h</span>
<span class="p_chunk">@@ -192,7 +192,7 @@</span> <span class="p_context"> struct stack_frame {</span>
 struct mm_struct;
 struct seq_file;
 
<span class="p_del">-typedef int (*dump_trace_func_t)(void *data, unsigned long address);</span>
<span class="p_add">+typedef int (*dump_trace_func_t)(void *data, unsigned long address, int reliable);</span>
 void dump_trace(dump_trace_func_t func, void *data,
 		struct task_struct *task, unsigned long sp);
 
<span class="p_header">diff --git a/arch/s390/include/asm/unistd.h b/arch/s390/include/asm/unistd.h</span>
<span class="p_header">index 02613ba..3066031 100644</span>
<span class="p_header">--- a/arch/s390/include/asm/unistd.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/unistd.h</span>
<span class="p_chunk">@@ -9,6 +9,9 @@</span> <span class="p_context"></span>
 #include &lt;uapi/asm/unistd.h&gt;
 
 #define __IGNORE_time
<span class="p_add">+#define __IGNORE_pkey_mprotect</span>
<span class="p_add">+#define __IGNORE_pkey_alloc</span>
<span class="p_add">+#define __IGNORE_pkey_free</span>
 
 #define __ARCH_WANT_OLD_READDIR
 #define __ARCH_WANT_SYS_ALARM
<span class="p_header">diff --git a/arch/s390/kernel/dis.c b/arch/s390/kernel/dis.c</span>
<span class="p_header">index 43446fa..c74c592 100644</span>
<span class="p_header">--- a/arch/s390/kernel/dis.c</span>
<span class="p_header">+++ b/arch/s390/kernel/dis.c</span>
<span class="p_chunk">@@ -2014,12 +2014,12 @@</span> <span class="p_context"> void show_code(struct pt_regs *regs)</span>
 			*ptr++ = &#39;\t&#39;;
 		ptr += print_insn(ptr, code + start, addr);
 		start += opsize;
<span class="p_del">-		printk(&quot;%s&quot;, buffer);</span>
<span class="p_add">+		pr_cont(&quot;%s&quot;, buffer);</span>
 		ptr = buffer;
 		ptr += sprintf(ptr, &quot;\n          &quot;);
 		hops++;
 	}
<span class="p_del">-	printk(&quot;\n&quot;);</span>
<span class="p_add">+	pr_cont(&quot;\n&quot;);</span>
 }
 
 void print_fn_code(unsigned char *code, unsigned long len)
<span class="p_header">diff --git a/arch/s390/kernel/dumpstack.c b/arch/s390/kernel/dumpstack.c</span>
<span class="p_header">index 6693383..55d4fe1 100644</span>
<span class="p_header">--- a/arch/s390/kernel/dumpstack.c</span>
<span class="p_header">+++ b/arch/s390/kernel/dumpstack.c</span>
<span class="p_chunk">@@ -38,10 +38,10 @@</span> <span class="p_context"></span>
 		if (sp &lt; low || sp &gt; high - sizeof(*sf))
 			return sp;
 		sf = (struct stack_frame *) sp;
<span class="p_add">+		if (func(data, sf-&gt;gprs[8], 0))</span>
<span class="p_add">+			return sp;</span>
 		/* Follow the backchain. */
 		while (1) {
<span class="p_del">-			if (func(data, sf-&gt;gprs[8]))</span>
<span class="p_del">-				return sp;</span>
 			low = sp;
 			sp = sf-&gt;back_chain;
 			if (!sp)
<span class="p_chunk">@@ -49,6 +49,8 @@</span> <span class="p_context"></span>
 			if (sp &lt;= low || sp &gt; high - sizeof(*sf))
 				return sp;
 			sf = (struct stack_frame *) sp;
<span class="p_add">+			if (func(data, sf-&gt;gprs[8], 1))</span>
<span class="p_add">+				return sp;</span>
 		}
 		/* Zero backchain detected, check for interrupt frame. */
 		sp = (unsigned long) (sf + 1);
<span class="p_chunk">@@ -56,7 +58,7 @@</span> <span class="p_context"></span>
 			return sp;
 		regs = (struct pt_regs *) sp;
 		if (!user_mode(regs)) {
<span class="p_del">-			if (func(data, regs-&gt;psw.addr))</span>
<span class="p_add">+			if (func(data, regs-&gt;psw.addr, 1))</span>
 				return sp;
 		}
 		low = sp;
<span class="p_chunk">@@ -85,33 +87,12 @@</span> <span class="p_context"> void dump_trace(dump_trace_func_t func, void *data, struct task_struct *task,</span>
 }
 EXPORT_SYMBOL_GPL(dump_trace);
 
<span class="p_del">-struct return_address_data {</span>
<span class="p_del">-	unsigned long address;</span>
<span class="p_del">-	int depth;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-static int __return_address(void *data, unsigned long address)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct return_address_data *rd = data;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (rd-&gt;depth--)</span>
<span class="p_del">-		return 0;</span>
<span class="p_del">-	rd-&gt;address = address;</span>
<span class="p_del">-	return 1;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-unsigned long return_address(int depth)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct return_address_data rd = { .depth = depth + 2 };</span>
<span class="p_del">-</span>
<span class="p_del">-	dump_trace(__return_address, &amp;rd, NULL, current_stack_pointer());</span>
<span class="p_del">-	return rd.address;</span>
<span class="p_del">-}</span>
<span class="p_del">-EXPORT_SYMBOL_GPL(return_address);</span>
<span class="p_del">-</span>
<span class="p_del">-static int show_address(void *data, unsigned long address)</span>
<span class="p_add">+static int show_address(void *data, unsigned long address, int reliable)</span>
 {
<span class="p_del">-	printk(&quot;([&lt;%016lx&gt;] %pSR)\n&quot;, address, (void *)address);</span>
<span class="p_add">+	if (reliable)</span>
<span class="p_add">+		printk(&quot; [&lt;%016lx&gt;] %pSR \n&quot;, address, (void *)address);</span>
<span class="p_add">+	else</span>
<span class="p_add">+		printk(&quot;([&lt;%016lx&gt;] %pSR)\n&quot;, address, (void *)address);</span>
 	return 0;
 }
 
<span class="p_chunk">@@ -138,14 +119,14 @@</span> <span class="p_context"> void show_stack(struct task_struct *task, unsigned long *sp)</span>
 		else
 			stack = (unsigned long *)task-&gt;thread.ksp;
 	}
<span class="p_add">+	printk(KERN_DEFAULT &quot;Stack:\n&quot;);</span>
 	for (i = 0; i &lt; 20; i++) {
 		if (((addr_t) stack &amp; (THREAD_SIZE-1)) == 0)
 			break;
<span class="p_del">-		if ((i * sizeof(long) % 32) == 0)</span>
<span class="p_del">-			printk(&quot;%s       &quot;, i == 0 ? &quot;&quot; : &quot;\n&quot;);</span>
<span class="p_del">-		printk(&quot;%016lx &quot;, *stack++);</span>
<span class="p_add">+		if (i % 4 == 0)</span>
<span class="p_add">+			printk(KERN_DEFAULT &quot;       &quot;);</span>
<span class="p_add">+		pr_cont(&quot;%016lx%c&quot;, *stack++, i % 4 == 3 ? &#39;\n&#39; : &#39; &#39;);</span>
 	}
<span class="p_del">-	printk(&quot;\n&quot;);</span>
 	show_trace(task, (unsigned long)sp);
 }
 
<span class="p_chunk">@@ -163,13 +144,13 @@</span> <span class="p_context"> void show_registers(struct pt_regs *regs)</span>
 	mode = user_mode(regs) ? &quot;User&quot; : &quot;Krnl&quot;;
 	printk(&quot;%s PSW : %p %p&quot;, mode, (void *)regs-&gt;psw.mask, (void *)regs-&gt;psw.addr);
 	if (!user_mode(regs))
<span class="p_del">-		printk(&quot; (%pSR)&quot;, (void *)regs-&gt;psw.addr);</span>
<span class="p_del">-	printk(&quot;\n&quot;);</span>
<span class="p_add">+		pr_cont(&quot; (%pSR)&quot;, (void *)regs-&gt;psw.addr);</span>
<span class="p_add">+	pr_cont(&quot;\n&quot;);</span>
 	printk(&quot;           R:%x T:%x IO:%x EX:%x Key:%x M:%x W:%x &quot;
 	       &quot;P:%x AS:%x CC:%x PM:%x&quot;, psw-&gt;r, psw-&gt;t, psw-&gt;i, psw-&gt;e,
 	       psw-&gt;key, psw-&gt;m, psw-&gt;w, psw-&gt;p, psw-&gt;as, psw-&gt;cc, psw-&gt;pm);
<span class="p_del">-	printk(&quot; RI:%x EA:%x&quot;, psw-&gt;ri, psw-&gt;eaba);</span>
<span class="p_del">-	printk(&quot;\n%s GPRS: %016lx %016lx %016lx %016lx\n&quot;, mode,</span>
<span class="p_add">+	pr_cont(&quot; RI:%x EA:%x\n&quot;, psw-&gt;ri, psw-&gt;eaba);</span>
<span class="p_add">+	printk(&quot;%s GPRS: %016lx %016lx %016lx %016lx\n&quot;, mode,</span>
 	       regs-&gt;gprs[0], regs-&gt;gprs[1], regs-&gt;gprs[2], regs-&gt;gprs[3]);
 	printk(&quot;           %016lx %016lx %016lx %016lx\n&quot;,
 	       regs-&gt;gprs[4], regs-&gt;gprs[5], regs-&gt;gprs[6], regs-&gt;gprs[7]);
<span class="p_chunk">@@ -205,14 +186,14 @@</span> <span class="p_context"> void die(struct pt_regs *regs, const char *str)</span>
 	printk(&quot;%s: %04x ilc:%d [#%d] &quot;, str, regs-&gt;int_code &amp; 0xffff,
 	       regs-&gt;int_code &gt;&gt; 17, ++die_counter);
 #ifdef CONFIG_PREEMPT
<span class="p_del">-	printk(&quot;PREEMPT &quot;);</span>
<span class="p_add">+	pr_cont(&quot;PREEMPT &quot;);</span>
 #endif
 #ifdef CONFIG_SMP
<span class="p_del">-	printk(&quot;SMP &quot;);</span>
<span class="p_add">+	pr_cont(&quot;SMP &quot;);</span>
 #endif
 	if (debug_pagealloc_enabled())
<span class="p_del">-		printk(&quot;DEBUG_PAGEALLOC&quot;);</span>
<span class="p_del">-	printk(&quot;\n&quot;);</span>
<span class="p_add">+		pr_cont(&quot;DEBUG_PAGEALLOC&quot;);</span>
<span class="p_add">+	pr_cont(&quot;\n&quot;);</span>
 	notify_die(DIE_OOPS, str, regs, 0, regs-&gt;int_code &amp; 0xffff, SIGSEGV);
 	print_modules();
 	show_regs(regs);
<span class="p_header">diff --git a/arch/s390/kernel/perf_event.c b/arch/s390/kernel/perf_event.c</span>
<span class="p_header">index 17431f6..955a7b6 100644</span>
<span class="p_header">--- a/arch/s390/kernel/perf_event.c</span>
<span class="p_header">+++ b/arch/s390/kernel/perf_event.c</span>
<span class="p_chunk">@@ -222,7 +222,7 @@</span> <span class="p_context"> static int __init service_level_perf_register(void)</span>
 }
 arch_initcall(service_level_perf_register);
 
<span class="p_del">-static int __perf_callchain_kernel(void *data, unsigned long address)</span>
<span class="p_add">+static int __perf_callchain_kernel(void *data, unsigned long address, int reliable)</span>
 {
 	struct perf_callchain_entry_ctx *entry = data;
 
<span class="p_header">diff --git a/arch/s390/kernel/stacktrace.c b/arch/s390/kernel/stacktrace.c</span>
<span class="p_header">index 44f84b2..355db9d 100644</span>
<span class="p_header">--- a/arch/s390/kernel/stacktrace.c</span>
<span class="p_header">+++ b/arch/s390/kernel/stacktrace.c</span>
<span class="p_chunk">@@ -27,12 +27,12 @@</span> <span class="p_context"> static int __save_address(void *data, unsigned long address, int nosched)</span>
 	return 1;
 }
 
<span class="p_del">-static int save_address(void *data, unsigned long address)</span>
<span class="p_add">+static int save_address(void *data, unsigned long address, int reliable)</span>
 {
 	return __save_address(data, address, 0);
 }
 
<span class="p_del">-static int save_address_nosched(void *data, unsigned long address)</span>
<span class="p_add">+static int save_address_nosched(void *data, unsigned long address, int reliable)</span>
 {
 	return __save_address(data, address, 1);
 }
<span class="p_header">diff --git a/arch/s390/mm/hugetlbpage.c b/arch/s390/mm/hugetlbpage.c</span>
<span class="p_header">index cd404aa..4a0c5bc 100644</span>
<span class="p_header">--- a/arch/s390/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/s390/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -217,6 +217,7 @@</span> <span class="p_context"> static __init int setup_hugepagesz(char *opt)</span>
 	} else if (MACHINE_HAS_EDAT2 &amp;&amp; size == PUD_SIZE) {
 		hugetlb_add_hstate(PUD_SHIFT - PAGE_SHIFT);
 	} else {
<span class="p_add">+		hugetlb_bad_size();</span>
 		pr_err(&quot;hugepagesz= specifies an unsupported page size %s\n&quot;,
 			string);
 		return 0;
<span class="p_header">diff --git a/arch/s390/mm/init.c b/arch/s390/mm/init.c</span>
<span class="p_header">index f56a39b..b3e9d18 100644</span>
<span class="p_header">--- a/arch/s390/mm/init.c</span>
<span class="p_header">+++ b/arch/s390/mm/init.c</span>
<span class="p_chunk">@@ -151,36 +151,40 @@</span> <span class="p_context"> void __init free_initrd_mem(unsigned long start, unsigned long end)</span>
 #ifdef CONFIG_MEMORY_HOTPLUG
 int arch_add_memory(int nid, u64 start, u64 size, bool for_device)
 {
<span class="p_del">-	unsigned long normal_end_pfn = PFN_DOWN(memblock_end_of_DRAM());</span>
<span class="p_del">-	unsigned long dma_end_pfn = PFN_DOWN(MAX_DMA_ADDRESS);</span>
<span class="p_add">+	unsigned long zone_start_pfn, zone_end_pfn, nr_pages;</span>
 	unsigned long start_pfn = PFN_DOWN(start);
 	unsigned long size_pages = PFN_DOWN(size);
<span class="p_del">-	unsigned long nr_pages;</span>
<span class="p_del">-	int rc, zone_enum;</span>
<span class="p_add">+	pg_data_t *pgdat = NODE_DATA(nid);</span>
<span class="p_add">+	struct zone *zone;</span>
<span class="p_add">+	int rc, i;</span>
 
 	rc = vmem_add_mapping(start, size);
 	if (rc)
 		return rc;
 
<span class="p_del">-	while (size_pages &gt; 0) {</span>
<span class="p_del">-		if (start_pfn &lt; dma_end_pfn) {</span>
<span class="p_del">-			nr_pages = (start_pfn + size_pages &gt; dma_end_pfn) ?</span>
<span class="p_del">-				   dma_end_pfn - start_pfn : size_pages;</span>
<span class="p_del">-			zone_enum = ZONE_DMA;</span>
<span class="p_del">-		} else if (start_pfn &lt; normal_end_pfn) {</span>
<span class="p_del">-			nr_pages = (start_pfn + size_pages &gt; normal_end_pfn) ?</span>
<span class="p_del">-				   normal_end_pfn - start_pfn : size_pages;</span>
<span class="p_del">-			zone_enum = ZONE_NORMAL;</span>
<span class="p_add">+	for (i = 0; i &lt; MAX_NR_ZONES; i++) {</span>
<span class="p_add">+		zone = pgdat-&gt;node_zones + i;</span>
<span class="p_add">+		if (zone_idx(zone) != ZONE_MOVABLE) {</span>
<span class="p_add">+			/* Add range within existing zone limits, if possible */</span>
<span class="p_add">+			zone_start_pfn = zone-&gt;zone_start_pfn;</span>
<span class="p_add">+			zone_end_pfn = zone-&gt;zone_start_pfn +</span>
<span class="p_add">+				       zone-&gt;spanned_pages;</span>
 		} else {
<span class="p_del">-			nr_pages = size_pages;</span>
<span class="p_del">-			zone_enum = ZONE_MOVABLE;</span>
<span class="p_add">+			/* Add remaining range to ZONE_MOVABLE */</span>
<span class="p_add">+			zone_start_pfn = start_pfn;</span>
<span class="p_add">+			zone_end_pfn = start_pfn + size_pages;</span>
 		}
<span class="p_del">-		rc = __add_pages(nid, NODE_DATA(nid)-&gt;node_zones + zone_enum,</span>
<span class="p_del">-				 start_pfn, size_pages);</span>
<span class="p_add">+		if (start_pfn &lt; zone_start_pfn || start_pfn &gt;= zone_end_pfn)</span>
<span class="p_add">+			continue;</span>
<span class="p_add">+		nr_pages = (start_pfn + size_pages &gt; zone_end_pfn) ?</span>
<span class="p_add">+			   zone_end_pfn - start_pfn : size_pages;</span>
<span class="p_add">+		rc = __add_pages(nid, zone, start_pfn, nr_pages);</span>
 		if (rc)
 			break;
 		start_pfn += nr_pages;
 		size_pages -= nr_pages;
<span class="p_add">+		if (!size_pages)</span>
<span class="p_add">+			break;</span>
 	}
 	if (rc)
 		vmem_remove_mapping(start, size);
<span class="p_header">diff --git a/arch/s390/oprofile/init.c b/arch/s390/oprofile/init.c</span>
<span class="p_header">index 16f4c39..9a4de45 100644</span>
<span class="p_header">--- a/arch/s390/oprofile/init.c</span>
<span class="p_header">+++ b/arch/s390/oprofile/init.c</span>
<span class="p_chunk">@@ -13,7 +13,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/init.h&gt;
 #include &lt;asm/processor.h&gt;
 
<span class="p_del">-static int __s390_backtrace(void *data, unsigned long address)</span>
<span class="p_add">+static int __s390_backtrace(void *data, unsigned long address, int reliable)</span>
 {
 	unsigned int *depth = data;
 
<span class="p_header">diff --git a/drivers/s390/block/dasd_eckd.c b/drivers/s390/block/dasd_eckd.c</span>
<span class="p_header">index 831935a..a7a8847 100644</span>
<span class="p_header">--- a/drivers/s390/block/dasd_eckd.c</span>
<span class="p_header">+++ b/drivers/s390/block/dasd_eckd.c</span>
<span class="p_chunk">@@ -1205,7 +1205,7 @@</span> <span class="p_context"> static int verify_fcx_max_data(struct dasd_device *device, __u8 lpm)</span>
 				 mdc, lpm);
 			return mdc;
 		}
<span class="p_del">-		fcx_max_data = mdc * FCX_MAX_DATA_FACTOR;</span>
<span class="p_add">+		fcx_max_data = (u32)mdc * FCX_MAX_DATA_FACTOR;</span>
 		if (fcx_max_data &lt; private-&gt;fcx_max_data) {
 			dev_warn(&amp;device-&gt;cdev-&gt;dev,
 				 &quot;The maximum data size for zHPF requests %u &quot;
<span class="p_chunk">@@ -1675,7 +1675,7 @@</span> <span class="p_context"> static u32 get_fcx_max_data(struct dasd_device *device)</span>
 			 &quot; data size for zHPF requests failed\n&quot;);
 		return 0;
 	} else
<span class="p_del">-		return mdc * FCX_MAX_DATA_FACTOR;</span>
<span class="p_add">+		return (u32)mdc * FCX_MAX_DATA_FACTOR;</span>
 }
 
 /*
<span class="p_header">diff --git a/drivers/s390/cio/chp.c b/drivers/s390/cio/chp.c</span>
<span class="p_header">index 46be25c..876c7e6 100644</span>
<span class="p_header">--- a/drivers/s390/cio/chp.c</span>
<span class="p_header">+++ b/drivers/s390/cio/chp.c</span>
<span class="p_chunk">@@ -780,7 +780,7 @@</span> <span class="p_context"> static int cfg_wait_idle(void)</span>
 static int __init chp_init(void)
 {
 	struct chp_id chpid;
<span class="p_del">-	int ret;</span>
<span class="p_add">+	int state, ret;</span>
 
 	ret = crw_register_handler(CRW_RSC_CPATH, chp_process_crw);
 	if (ret)
<span class="p_chunk">@@ -791,7 +791,9 @@</span> <span class="p_context"> static int __init chp_init(void)</span>
 		return 0;
 	/* Register available channel-paths. */
 	chp_id_for_each(&amp;chpid) {
<span class="p_del">-		if (chp_info_get_status(chpid) != CHP_STATUS_NOT_RECOGNIZED)</span>
<span class="p_add">+		state = chp_info_get_status(chpid);</span>
<span class="p_add">+		if (state == CHP_STATUS_CONFIGURED ||</span>
<span class="p_add">+		    state == CHP_STATUS_STANDBY)</span>
 			chp_new(chpid);
 	}
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



