
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[lkp-robot,x86/mm] 9e52fc2b50: will-it-scale.per_thread_ops -16% regression - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [lkp-robot,x86/mm] 9e52fc2b50: will-it-scale.per_thread_ops -16% regression</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=99981">Vitaly Kuznetsov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 20, 2017, 4:58 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;87a7zgc2fq.fsf@vitty.brq.redhat.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10066775/mbox/"
   >mbox</a>
|
   <a href="/patch/10066775/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10066775/">/patch/10066775/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	C0C22603FA for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 20 Nov 2017 16:58:29 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id AEDE529407
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 20 Nov 2017 16:58:29 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A2E1F29441; Mon, 20 Nov 2017 16:58:29 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4572D29407
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 20 Nov 2017 16:58:29 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751893AbdKTQ6Y (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 20 Nov 2017 11:58:24 -0500
Received: from mx1.redhat.com ([209.132.183.28]:37246 &quot;EHLO mx1.redhat.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751620AbdKTQ6W (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 20 Nov 2017 11:58:22 -0500
Received: from smtp.corp.redhat.com
	(int-mx06.intmail.prod.int.phx2.redhat.com [10.5.11.16])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 88F6EC058ECF;
	Mon, 20 Nov 2017 16:58:22 +0000 (UTC)
Received: from vitty.brq.redhat.com.redhat.com (unknown [10.43.2.155])
	by smtp.corp.redhat.com (Postfix) with ESMTPS id 14F685C588;
	Mon, 20 Nov 2017 16:58:18 +0000 (UTC)
From: Vitaly Kuznetsov &lt;vkuznets@redhat.com&gt;
To: LKML &lt;linux-kernel@vger.kernel.org&gt;
Cc: kernel test robot &lt;xiaolong.ye@intel.com&gt;,
	Ingo Molnar &lt;mingo@kernel.org&gt;, Juergen Gross &lt;jgross@suse.com&gt;,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Andrew Cooper &lt;andrew.cooper3@citrix.com&gt;,
	Andy Lutomirski &lt;luto@amacapital.net&gt;,
	Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;,
	Jork Loeser &lt;Jork.Loeser@microsoft.com&gt;,
	KY Srinivasan &lt;kys@microsoft.com&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	&quot;Paul E. McKenney&quot; &lt;paulmck@linux.vnet.ibm.com&gt;,
	Stephen Hemminger &lt;sthemmin@microsoft.com&gt;,
	Steven Rostedt &lt;rostedt@goodmis.org&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;,
	Peter Zijlstra &lt;peterz@infradead.org&gt;, lkp@01.org,
	kemi &lt;kemi.wang@intel.com&gt;
Subject: Re: [lkp-robot] [x86/mm] 9e52fc2b50: will-it-scale.per_thread_ops
	-16% regression
References: &lt;20170927055914.GO17200@yexl-desktop&gt;
	&lt;87d169zo9o.fsf@vitty.brq.redhat.com&gt;
	&lt;20170929131329.tekd6a7yfrkm7lwl@hirez.programming.kicks-ass.net&gt;
	&lt;20170929131609.i5t46af7nkjwekbk@hirez.programming.kicks-ass.net&gt;
	&lt;874lrlzjpo.fsf@vitty.brq.redhat.com&gt;
Date: Mon, 20 Nov 2017 17:58:17 +0100
In-Reply-To: &lt;874lrlzjpo.fsf@vitty.brq.redhat.com&gt; (Vitaly Kuznetsov&#39;s
	message of &quot;Fri, 29 Sep 2017 16:02:27 +0200&quot;)
Message-ID: &lt;87a7zgc2fq.fsf@vitty.brq.redhat.com&gt;
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/25.3 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.32]);
	Mon, 20 Nov 2017 16:58:22 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99981">Vitaly Kuznetsov</a> - Nov. 20, 2017, 4:58 p.m.</div>
<pre class="content">
Vitaly Kuznetsov &lt;vkuznets@redhat.com&gt; writes:
<span class="quote">
&gt; But adding such complexity to the code would require a good</span>
<span class="quote">&gt; justification, of course.</span>

Sorry for necroposting, I got distracted :-(

I think I was able to reproduce the reported regression. The reproducer
is dead simple, just several threads doing malloc(128Mb)/free().

#include &lt;pthread.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

#define nthreads 16
#define nrounds 10000
#define alloc_size 128*1024*1024 /*128Mb*/

void *threadf(void *ptr)
{
	void *addr;
	int i;

	for (i = 0; i &lt; nrounds; i++) {
		addr = malloc(alloc_size);
		if (!addr) {
			fprintf(stderr, &quot;malloc failed\n&quot;);
			exit(1);
		}
		free(addr);
	}
}

int main(int argc, char *argv[]) {
	pthread_t thr[nthreads];
	int i;

	for (i = 0; i &lt; nthreads; i++) {
		if (pthread_create(&amp;thr[i], NULL, threadf, NULL)) {
			fprintf(stderr, &quot;pthread_create failed\n&quot;);
			exit(1);
		}
	}

	for (i = 0; i &lt; nthreads; i++) {
		if (pthread_join(thr[i], NULL)) {
			fprintf(stderr, &quot;pthread_join failed\n&quot;);
			exit(1);
		}
	}

	return 0;
}

The average result on a 16 core host for me is:

With HAVE_RCU_TABLE_FREE (what we have now):
real	0m10.571s
user	0m0.678s
sys	0m12.813s

Without HAVE_RCU_TABLE_FREE (what we had pre-patch):
real	0m9.976s
user	0m0.824s
sys	0m10.960s

I did some investigation and I *think* this is what&#39;s going on. We have
the following call chain:

do_munmap()
  unmap_region()
    free_pgtables()
    tlb_finish_mmu()
      arch_tlb_finish_mmu()
        tlb_flush_mmu()
          tlb_flush_mmu_tlbonly()
            tlb_flush() &lt;- IPIs on bare metal
            tlb_table_flush() &lt;- this is added when CONFIG_HAVE_RCU_TABLE_FREE

tlb_table_flush() does call_rcu_sched() to free the batch but the
problem is that the batch is almost empty -- usually it has just one
entry in it (for the above example).

The following dirty hack:


seems to solve the issue. However, I&#39;m having troubles trying to
understand what would be the best move here. In case we think this
use-case needs addressing I can suggest we employ static_keys and switch
between rcu/non-rcu table free mechanisms for x86 on boot.

I&#39;d be grateful for any thoughts/suggestions on this. Thanks!
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/mm/memory.c</span>
<span class="p_header">+++ b/mm/memory.c</span>
<span class="p_chunk">@@ -367,7 +367,10 @@</span> <span class="p_context"> void tlb_table_flush(struct mmu_gather *tlb)</span>
        struct mmu_table_batch **batch = &amp;tlb-&gt;batch;
 
        if (*batch) {
<span class="p_del">-               call_rcu_sched(&amp;(*batch)-&gt;rcu, tlb_remove_table_rcu);</span>
<span class="p_add">+               if (pv_mmu_ops.flush_tlb_others != native_flush_tlb_others)</span>
<span class="p_add">+                   call_rcu_sched(&amp;(*batch)-&gt;rcu, tlb_remove_table_rcu);</span>
<span class="p_add">+               else</span>
<span class="p_add">+                   tlb_remove_table_rcu(&amp;(*batch)-&gt;rcu);</span>
                *batch = NULL;
        }
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



