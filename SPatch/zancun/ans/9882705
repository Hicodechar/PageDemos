
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.9,007/105] parisc: Prevent TLB speculation on flushed pages on CPUs that only support equivalent aliases - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.9,007/105] parisc: Prevent TLB speculation on flushed pages on CPUs that only support equivalent aliases</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 4, 2017, 11:14 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170804231552.146080813@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9882705/mbox/"
   >mbox</a>
|
   <a href="/patch/9882705/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9882705/">/patch/9882705/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	C198E60375 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat,  5 Aug 2017 00:10:41 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B44A4289F0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat,  5 Aug 2017 00:10:41 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A93A528A14; Sat,  5 Aug 2017 00:10:41 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1A2C928A20
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat,  5 Aug 2017 00:10:38 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753382AbdHEAJu (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 4 Aug 2017 20:09:50 -0400
Received: from mail.linuxfoundation.org ([140.211.169.12]:46602 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753194AbdHDXRk (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 4 Aug 2017 19:17:40 -0400
Received: from localhost (unknown [104.132.0.100])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id 050FDA88;
	Fri,  4 Aug 2017 23:17:39 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, John David Anglin &lt;dave.anglin@bell.net&gt;,
	Helge Deller &lt;deller@gmx.de&gt;
Subject: [PATCH 4.9 007/105] parisc: Prevent TLB speculation on flushed
	pages on CPUs that only support equivalent aliases
Date: Fri,  4 Aug 2017 16:14:35 -0700
Message-Id: &lt;20170804231552.146080813@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.13.4
In-Reply-To: &lt;20170804231551.544678194@linuxfoundation.org&gt;
References: &lt;20170804231551.544678194@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Aug. 4, 2017, 11:14 p.m.</div>
<pre class="content">
4.9-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: John David Anglin &lt;dave.anglin@bell.net&gt;</span>

commit ae7a609c34b6fb12328c553b5f9aab26ae74a28e upstream.

Helge noticed that we flush the TLB page in flush_cache_page but not in
flush_cache_range or flush_cache_mm.

For a long time, we have had random segmentation faults building
packages on machines with PA8800/8900 processors.  These machines only
support equivalent aliases.  We don&#39;t see these faults on machines that
don&#39;t require strict coherency.  So, it appears TLB speculation
sometimes leads to cache corruption on machines that require coherency.

This patch adds TLB flushes to flush_cache_range and flush_cache_mm when
coherency is required.  We only flush the TLB in flush_cache_page when
coherency is required.

The patch also optimizes flush_cache_range.  It turns out we always have
the right context to use flush_user_dcache_range_asm and
flush_user_icache_range_asm.

The patch has been tested for some time on rp3440, rp3410 and A500-44.
It&#39;s been boot tested on c8000.  No random segmentation faults were
observed during testing.
<span class="signed-off-by">
Signed-off-by: John David Anglin &lt;dave.anglin@bell.net&gt;</span>
<span class="signed-off-by">Signed-off-by: Helge Deller &lt;deller@gmx.de&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>

---
 arch/parisc/kernel/cache.c |   34 ++++++++++++++--------------------
 1 file changed, 14 insertions(+), 20 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/parisc/kernel/cache.c</span>
<span class="p_header">+++ b/arch/parisc/kernel/cache.c</span>
<span class="p_chunk">@@ -538,6 +538,10 @@</span> <span class="p_context"> void flush_cache_mm(struct mm_struct *mm</span>
 	struct vm_area_struct *vma;
 	pgd_t *pgd;
 
<span class="p_add">+	/* Flush the TLB to avoid speculation if coherency is required. */</span>
<span class="p_add">+	if (parisc_requires_coherency())</span>
<span class="p_add">+		flush_tlb_all();</span>
<span class="p_add">+</span>
 	/* Flushing the whole cache on each cpu takes forever on
 	   rp3440, etc.  So, avoid it if the mm isn&#39;t too big.  */
 	if (mm_total_size(mm) &gt;= parisc_cache_flush_threshold) {
<span class="p_chunk">@@ -594,33 +598,22 @@</span> <span class="p_context"> flush_user_icache_range(unsigned long st</span>
 void flush_cache_range(struct vm_area_struct *vma,
 		unsigned long start, unsigned long end)
 {
<span class="p_del">-	unsigned long addr;</span>
<span class="p_del">-	pgd_t *pgd;</span>
<span class="p_del">-</span>
 	BUG_ON(!vma-&gt;vm_mm-&gt;context);
 
<span class="p_add">+	/* Flush the TLB to avoid speculation if coherency is required. */</span>
<span class="p_add">+	if (parisc_requires_coherency())</span>
<span class="p_add">+		flush_tlb_range(vma, start, end);</span>
<span class="p_add">+</span>
 	if ((end - start) &gt;= parisc_cache_flush_threshold) {
 		flush_cache_all();
 		return;
 	}
 
<span class="p_del">-	if (vma-&gt;vm_mm-&gt;context == mfsp(3)) {</span>
<span class="p_del">-		flush_user_dcache_range_asm(start, end);</span>
<span class="p_del">-		if (vma-&gt;vm_flags &amp; VM_EXEC)</span>
<span class="p_del">-			flush_user_icache_range_asm(start, end);</span>
<span class="p_del">-		return;</span>
<span class="p_del">-	}</span>
<span class="p_add">+	BUG_ON(vma-&gt;vm_mm-&gt;context != mfsp(3));</span>
 
<span class="p_del">-	pgd = vma-&gt;vm_mm-&gt;pgd;</span>
<span class="p_del">-	for (addr = start &amp; PAGE_MASK; addr &lt; end; addr += PAGE_SIZE) {</span>
<span class="p_del">-		unsigned long pfn;</span>
<span class="p_del">-		pte_t *ptep = get_ptep(pgd, addr);</span>
<span class="p_del">-		if (!ptep)</span>
<span class="p_del">-			continue;</span>
<span class="p_del">-		pfn = pte_pfn(*ptep);</span>
<span class="p_del">-		if (pfn_valid(pfn))</span>
<span class="p_del">-			__flush_cache_page(vma, addr, PFN_PHYS(pfn));</span>
<span class="p_del">-	}</span>
<span class="p_add">+	flush_user_dcache_range_asm(start, end);</span>
<span class="p_add">+	if (vma-&gt;vm_flags &amp; VM_EXEC)</span>
<span class="p_add">+		flush_user_icache_range_asm(start, end);</span>
 }
 
 void
<span class="p_chunk">@@ -629,7 +622,8 @@</span> <span class="p_context"> flush_cache_page(struct vm_area_struct *</span>
 	BUG_ON(!vma-&gt;vm_mm-&gt;context);
 
 	if (pfn_valid(pfn)) {
<span class="p_del">-		flush_tlb_page(vma, vmaddr);</span>
<span class="p_add">+		if (parisc_requires_coherency())</span>
<span class="p_add">+			flush_tlb_page(vma, vmaddr);</span>
 		__flush_cache_page(vma, vmaddr, PFN_PHYS(pfn));
 	}
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



