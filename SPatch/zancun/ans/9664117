
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,3/9] mm/hugetlb: Allow architectures to override huge_pte_clear() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,3/9] mm/hugetlb: Allow architectures to override huge_pte_clear()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=58591">Punit Agrawal</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>April 5, 2017, 1:37 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170405133722.6406-4-punit.agrawal@arm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9664117/mbox/"
   >mbox</a>
|
   <a href="/patch/9664117/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9664117/">/patch/9664117/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	838F2602B5 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  5 Apr 2017 13:39:44 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6C1E4284DB
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  5 Apr 2017 13:39:44 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 5F74A2852E; Wed,  5 Apr 2017 13:39:44 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D3260284DB
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  5 Apr 2017 13:39:43 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754255AbdDENji (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 5 Apr 2017 09:39:38 -0400
Received: from foss.arm.com ([217.140.101.70]:58834 &quot;EHLO foss.arm.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751169AbdDENiH (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 5 Apr 2017 09:38:07 -0400
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
	by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 5B1DE1597;
	Wed,  5 Apr 2017 06:38:07 -0700 (PDT)
Received: from localhost (e105922-lin.cambridge.arm.com [10.1.195.42])
	by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id
	2BD373F3E1; Wed,  5 Apr 2017 06:38:07 -0700 (PDT)
From: Punit Agrawal &lt;punit.agrawal@arm.com&gt;
To: catalin.marinas@arm.com, will.deacon@arm.com,
	akpm@linux-foundation.org, mark.rutland@arm.com
Cc: Punit Agrawal &lt;punit.agrawal@arm.com&gt;, linux-mm@kvack.org,
	linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
	tbaicar@codeaurora.org, kirill.shutemov@linux.intel.com,
	mike.kravetz@oracle.com, hillf.zj@alibaba-inc.com,
	steve.capper@arm.com, Martin Schwidefsky &lt;schwidefsky@de.ibm.com&gt;,
	Heiko Carstens &lt;heiko.carstens@de.ibm.com&gt;,
	Arnd Bergmann &lt;arnd@arndb.de&gt;,
	&quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;
Subject: [PATCH v2 3/9] mm/hugetlb: Allow architectures to override
	huge_pte_clear()
Date: Wed,  5 Apr 2017 14:37:16 +0100
Message-Id: &lt;20170405133722.6406-4-punit.agrawal@arm.com&gt;
X-Mailer: git-send-email 2.11.0
In-Reply-To: &lt;20170405133722.6406-1-punit.agrawal@arm.com&gt;
References: &lt;20170405133722.6406-1-punit.agrawal@arm.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=58591">Punit Agrawal</a> - April 5, 2017, 1:37 p.m.</div>
<pre class="content">
When unmapping a hugepage range, huge_pte_clear() is used to clear the
page table entries that are marked as not present. huge_pte_clear()
internally just ends up calling pte_clear() which does not correctly
deal with hugepages consisting of contiguous page table entries.

Add a size argument and implement huge_pte_clear() as a weak function to
allow architectures to override the default implementation.

Update the s390 to use the new mechanism to override huge_pte_clear().
<span class="signed-off-by">
Signed-off-by: Punit Agrawal &lt;punit.agrawal@arm.com&gt;</span>
Cc: Martin Schwidefsky &lt;schwidefsky@de.ibm.com&gt;
Cc: Heiko Carstens &lt;heiko.carstens@de.ibm.com&gt;
Cc: Arnd Bergmann &lt;arnd@arndb.de&gt;
Cc: &quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;
Cc: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
---
 arch/s390/include/asm/hugetlb.h | 10 ++--------
 arch/s390/mm/hugetlbpage.c      |  9 +++++++++
 include/asm-generic/hugetlb.h   |  7 ++-----
 mm/hugetlb.c                    |  8 +++++++-
 4 files changed, 20 insertions(+), 14 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/s390/include/asm/hugetlb.h b/arch/s390/include/asm/hugetlb.h</span>
<span class="p_header">index cd546a245c68..aa8489c07f24 100644</span>
<span class="p_header">--- a/arch/s390/include/asm/hugetlb.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/hugetlb.h</span>
<span class="p_chunk">@@ -38,14 +38,8 @@</span> <span class="p_context"> static inline int prepare_hugepage_range(struct file *file,</span>
 
 #define arch_clear_hugepage_flags(page)		do { } while (0)
 
<span class="p_del">-static inline void huge_pte_clear(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_del">-				  pte_t *ptep)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if ((pte_val(*ptep) &amp; _REGION_ENTRY_TYPE_MASK) == _REGION_ENTRY_TYPE_R3)</span>
<span class="p_del">-		pte_val(*ptep) = _REGION3_ENTRY_EMPTY;</span>
<span class="p_del">-	else</span>
<span class="p_del">-		pte_val(*ptep) = _SEGMENT_ENTRY_EMPTY;</span>
<span class="p_del">-}</span>
<span class="p_add">+void huge_pte_clear(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_add">+		    pte_t *ptep, unsigned long sz);</span>
 
 static inline void huge_ptep_clear_flush(struct vm_area_struct *vma,
 					 unsigned long address, pte_t *ptep)
<span class="p_header">diff --git a/arch/s390/mm/hugetlbpage.c b/arch/s390/mm/hugetlbpage.c</span>
<span class="p_header">index ae23afc18493..48e19b324017 100644</span>
<span class="p_header">--- a/arch/s390/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/s390/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -144,6 +144,15 @@</span> <span class="p_context"> pte_t huge_ptep_get(pte_t *ptep)</span>
 	return __rste_to_pte(pte_val(*ptep));
 }
 
<span class="p_add">+void huge_pte_clear(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_add">+		    pte_t *ptep, unsigned long sz)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if ((pte_val(*ptep) &amp; _REGION_ENTRY_TYPE_MASK) == _REGION_ENTRY_TYPE_R3)</span>
<span class="p_add">+		pte_val(*ptep) = _REGION3_ENTRY_EMPTY;</span>
<span class="p_add">+	else</span>
<span class="p_add">+		pte_val(*ptep) = _SEGMENT_ENTRY_EMPTY;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 pte_t huge_ptep_get_and_clear(struct mm_struct *mm,
 			      unsigned long addr, pte_t *ptep)
 {
<span class="p_header">diff --git a/include/asm-generic/hugetlb.h b/include/asm-generic/hugetlb.h</span>
<span class="p_header">index 99b490b4d05a..3138e126f43b 100644</span>
<span class="p_header">--- a/include/asm-generic/hugetlb.h</span>
<span class="p_header">+++ b/include/asm-generic/hugetlb.h</span>
<span class="p_chunk">@@ -31,10 +31,7 @@</span> <span class="p_context"> static inline pte_t huge_pte_modify(pte_t pte, pgprot_t newprot)</span>
 	return pte_modify(pte, newprot);
 }
 
<span class="p_del">-static inline void huge_pte_clear(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_del">-				  pte_t *ptep)</span>
<span class="p_del">-{</span>
<span class="p_del">-	pte_clear(mm, addr, ptep);</span>
<span class="p_del">-}</span>
<span class="p_add">+void huge_pte_clear(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_add">+		    pte_t *ptep, unsigned long sz);</span>
 
 #endif /* _ASM_GENERIC_HUGETLB_H */
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 0e4d1fb3122f..2b0f6f96f2c1 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -3289,6 +3289,12 @@</span> <span class="p_context"> int copy_hugetlb_page_range(struct mm_struct *dst, struct mm_struct *src,</span>
 	return ret;
 }
 
<span class="p_add">+void __weak huge_pte_clear(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_add">+			   pte_t *ptep, unsigned long sz)</span>
<span class="p_add">+{</span>
<span class="p_add">+	pte_clear(mm, addr, ptep);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 void __unmap_hugepage_range(struct mmu_gather *tlb, struct vm_area_struct *vma,
 			    unsigned long start, unsigned long end,
 			    struct page *ref_page)
<span class="p_chunk">@@ -3338,7 +3344,7 @@</span> <span class="p_context"> void __unmap_hugepage_range(struct mmu_gather *tlb, struct vm_area_struct *vma,</span>
 		 * unmapped and its refcount is dropped, so just clear pte here.
 		 */
 		if (unlikely(!pte_present(pte))) {
<span class="p_del">-			huge_pte_clear(mm, address, ptep);</span>
<span class="p_add">+			huge_pte_clear(mm, address, ptep, sz);</span>
 			spin_unlock(ptl);
 			continue;
 		}

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



