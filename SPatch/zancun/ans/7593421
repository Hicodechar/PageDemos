
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/2] arm: kvm: Fix STRICT_MM_TYPECHECK errors - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/2] arm: kvm: Fix STRICT_MM_TYPECHECK errors</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=130331">Laura Abbott</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 11, 2015, 2:03 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1447207401-12023-2-git-send-email-labbott@fedoraproject.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7593421/mbox/"
   >mbox</a>
|
   <a href="/patch/7593421/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7593421/">/patch/7593421/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 71C929F392
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 11 Nov 2015 02:03:55 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 9EF9220761
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 11 Nov 2015 02:03:54 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id B57AE20672
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 11 Nov 2015 02:03:53 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752122AbbKKCDo (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 10 Nov 2015 21:03:44 -0500
Received: from mx1.redhat.com ([209.132.183.28]:45990 &quot;EHLO mx1.redhat.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751957AbbKKCDk (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 10 Nov 2015 21:03:40 -0500
Received: from int-mx13.intmail.prod.int.phx2.redhat.com
	(int-mx13.intmail.prod.int.phx2.redhat.com [10.5.11.26])
	by mx1.redhat.com (Postfix) with ESMTPS id 9CD29BBB5D;
	Wed, 11 Nov 2015 02:03:40 +0000 (UTC)
Received: from labbott-redhat-machine.redhat.com
	(ovpn-112-23.phx2.redhat.com [10.3.112.23])
	by int-mx13.intmail.prod.int.phx2.redhat.com (8.14.4/8.14.4) with
	ESMTP id tAB23TAH001724; Tue, 10 Nov 2015 21:03:38 -0500
From: Laura Abbott &lt;labbott@fedoraproject.org&gt;
To: Christoffer Dall &lt;christoffer.dall@linaro.org&gt;,
	Marc Zyngier &lt;marc.zyngier@arm.com&gt;
Cc: Laura Abbott &lt;labbott@fedoraproject.org&gt;,
	Russell King &lt;linux@arm.linux.org.uk&gt;,
	linux-arm-kernel@lists.infradead.org, kvmarm@lists.cs.columbia.edu,
	kvm@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH 2/2] arm: kvm: Fix STRICT_MM_TYPECHECK errors
Date: Tue, 10 Nov 2015 18:03:21 -0800
Message-Id: &lt;1447207401-12023-2-git-send-email-labbott@fedoraproject.org&gt;
In-Reply-To: &lt;1447207401-12023-1-git-send-email-labbott@fedoraproject.org&gt;
References: &lt;1447207401-12023-1-git-send-email-labbott@fedoraproject.org&gt;
X-Scanned-By: MIMEDefang 2.68 on 10.5.11.26
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.2 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=130331">Laura Abbott</a> - Nov. 11, 2015, 2:03 a.m.</div>
<pre class="content">
PAGE_S2_DEVICE is a pgprot val and needs to be accessed using the proper
accessors. Switch to these accessors to avoid errors with
STRICT_MM_TYPECHECK.
<span class="signed-off-by">
Signed-off-by: Laura Abbott &lt;labbott@fedoraproject.org&gt;</span>
---
Found in the course of other work
---
 arch/arm/kvm/mmu.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=66681">Ard Biesheuvel</a> - Nov. 14, 2015, 7:02 a.m.</div>
<pre class="content">
On 11 November 2015 at 03:03, Laura Abbott &lt;labbott@fedoraproject.org&gt; wrote:
<span class="quote">&gt;</span>
<span class="quote">&gt; PAGE_S2_DEVICE is a pgprot val and needs to be accessed using the proper</span>
<span class="quote">&gt; accessors. Switch to these accessors to avoid errors with</span>
<span class="quote">&gt; STRICT_MM_TYPECHECK.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Signed-off-by: Laura Abbott &lt;labbott@fedoraproject.org&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt; Found in the course of other work</span>

Already fixed here:
http://thread.gmane.org/gmane.comp.emulators.kvm.devel/142953

Looks like we may need a mutex :-)
<span class="quote">
&gt; ---</span>
<span class="quote">&gt;  arch/arm/kvm/mmu.c | 6 ++++--</span>
<span class="quote">&gt;  1 file changed, 4 insertions(+), 2 deletions(-)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; diff --git a/arch/arm/kvm/mmu.c b/arch/arm/kvm/mmu.c</span>
<span class="quote">&gt; index 6984342..43f8162 100644</span>
<span class="quote">&gt; --- a/arch/arm/kvm/mmu.c</span>
<span class="quote">&gt; +++ b/arch/arm/kvm/mmu.c</span>
<span class="quote">&gt; @@ -213,7 +213,8 @@ static void unmap_ptes(struct kvm *kvm, pmd_t *pmd,</span>
<span class="quote">&gt;                         kvm_tlb_flush_vmid_ipa(kvm, addr);</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;                         /* No need to invalidate the cache for device mappings */</span>
<span class="quote">&gt; -                       if ((pte_val(old_pte) &amp; PAGE_S2_DEVICE) != PAGE_S2_DEVICE)</span>
<span class="quote">&gt; +                       if ((pte_val(old_pte) &amp; pgprot_val(PAGE_S2_DEVICE)) !=</span>
<span class="quote">&gt; +                            pgprot_val(PAGE_S2_DEVICE))</span>
<span class="quote">&gt;                                 kvm_flush_dcache_pte(old_pte);</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;                         put_page(virt_to_page(pte));</span>
<span class="quote">&gt; @@ -306,7 +307,8 @@ static void stage2_flush_ptes(struct kvm *kvm, pmd_t *pmd,</span>
<span class="quote">&gt;         pte = pte_offset_kernel(pmd, addr);</span>
<span class="quote">&gt;         do {</span>
<span class="quote">&gt;                 if (!pte_none(*pte) &amp;&amp;</span>
<span class="quote">&gt; -                   (pte_val(*pte) &amp; PAGE_S2_DEVICE) != PAGE_S2_DEVICE)</span>
<span class="quote">&gt; +                   (pte_val(*pte) &amp; pgprot_val(PAGE_S2_DEVICE)) !=</span>
<span class="quote">&gt; +                    pgprot_val(PAGE_S2_DEVICE))</span>
<span class="quote">&gt;                         kvm_flush_dcache_pte(*pte);</span>
<span class="quote">&gt;         } while (pte++, addr += PAGE_SIZE, addr != end);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; --</span>
<span class="quote">&gt; 2.5.0</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; _______________________________________________</span>
<span class="quote">&gt; linux-arm-kernel mailing list</span>
<span class="quote">&gt; linux-arm-kernel@lists.infradead.org</span>
<span class="quote">&gt; http://lists.infradead.org/mailman/listinfo/linux-arm-kernel</span>
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm/kvm/mmu.c b/arch/arm/kvm/mmu.c</span>
<span class="p_header">index 6984342..43f8162 100644</span>
<span class="p_header">--- a/arch/arm/kvm/mmu.c</span>
<span class="p_header">+++ b/arch/arm/kvm/mmu.c</span>
<span class="p_chunk">@@ -213,7 +213,8 @@</span> <span class="p_context"> static void unmap_ptes(struct kvm *kvm, pmd_t *pmd,</span>
 			kvm_tlb_flush_vmid_ipa(kvm, addr);
 
 			/* No need to invalidate the cache for device mappings */
<span class="p_del">-			if ((pte_val(old_pte) &amp; PAGE_S2_DEVICE) != PAGE_S2_DEVICE)</span>
<span class="p_add">+			if ((pte_val(old_pte) &amp; pgprot_val(PAGE_S2_DEVICE)) !=</span>
<span class="p_add">+			     pgprot_val(PAGE_S2_DEVICE))</span>
 				kvm_flush_dcache_pte(old_pte);
 
 			put_page(virt_to_page(pte));
<span class="p_chunk">@@ -306,7 +307,8 @@</span> <span class="p_context"> static void stage2_flush_ptes(struct kvm *kvm, pmd_t *pmd,</span>
 	pte = pte_offset_kernel(pmd, addr);
 	do {
 		if (!pte_none(*pte) &amp;&amp;
<span class="p_del">-		    (pte_val(*pte) &amp; PAGE_S2_DEVICE) != PAGE_S2_DEVICE)</span>
<span class="p_add">+		    (pte_val(*pte) &amp; pgprot_val(PAGE_S2_DEVICE)) !=</span>
<span class="p_add">+		     pgprot_val(PAGE_S2_DEVICE))</span>
 			kvm_flush_dcache_pte(*pte);
 	} while (pte++, addr += PAGE_SIZE, addr != end);
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



