
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[GIT,PULL] x86/platform changes for v4.7 - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [GIT,PULL] x86/platform changes for v4.7</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>May 16, 2016, 6:43 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20160516184335.GA14799@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9105001/mbox/"
   >mbox</a>
|
   <a href="/patch/9105001/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9105001/">/patch/9105001/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 78B4A9F1C1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 16 May 2016 18:44:15 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 4275420279
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 16 May 2016 18:44:05 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 9C32020268
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 16 May 2016 18:43:54 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754408AbcEPSnr (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 16 May 2016 14:43:47 -0400
Received: from mail-wm0-f54.google.com ([74.125.82.54]:37484 &quot;EHLO
	mail-wm0-f54.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753561AbcEPSnn (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 16 May 2016 14:43:43 -0400
Received: by mail-wm0-f54.google.com with SMTP id a17so150405770wme.0
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Mon, 16 May 2016 11:43:42 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=sender:date:from:to:cc:subject:message-id:mime-version
	:content-disposition:user-agent;
	bh=ETP36jTVgnUawjBSqvCBA25XtqlSfC4xUPjo2nyM8ws=;
	b=ceVi4F3GzJwrjCHFEvA3A+rlVtEUQjhEKNEa3ZlfaJ59u7xobq0TNLhhloQkLnXG5E
	BoGb2nEswxtlBDbNpBLPciS4ycJNejExw2glORSuY43A4nipUcDBSCLxs/li7CAeRFf3
	T+1whxnzVGXLyQJj823A07ZD8yW0/uYXBwxS2dQZyal2ML7VyW1e8Mr7fpuQ410V2X7c
	Ti1AmrITHwBb97iGH/gBiG+zLCijBkBm5JB/K7uoGtXMZ5MSshEMzDHu9YGwJiwjsZXa
	FyMG7yW1nVuYLHZFzXu4C6FyyQQqz+JoM4PVN089ZzsOdivHMCxbiBVxeFTQGIfS/QZl
	jT4g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20130820;
	h=x-gm-message-state:sender:date:from:to:cc:subject:message-id
	:mime-version:content-disposition:user-agent;
	bh=ETP36jTVgnUawjBSqvCBA25XtqlSfC4xUPjo2nyM8ws=;
	b=JygPQNB9/UgK57L/H7votTzHrNIQqyCdAWtCQfOMTKCTqqp/oCY63POzUVlSNExoRx
	axKvS7eh4UvfTN45M2MRT1EbPa0wY9cnDaPBXWNZJz0jXtsRrrZH4QpgVZlL0Cb2xI00
	CG+BEd6nrVM8MwBloR37yD6CsN8n3c6D0QonEoipwgX1d23Szd4JtqDE4ztEaWhIICRL
	Q0n5ndXa2QcsRjV3v/sJoC8QMw+X2DH/wEjns/cfrnfKtSdVPtGsHcad3/8LeZ4Rr0Qu
	t4XhecryiVS5d6yuVnYX5Fugw3o6tyPWgM8i3nI7Hxr9pSgRvEsgNWm0o54v6dsnj4Ku
	lk9A==
X-Gm-Message-State: AOPr4FUjj4C7ejJSMXsbVxmJZ2pmKjMhAVlNR9cFfmRVjCbA13/bK4+wX2GSS2ZxXEhIzg==
X-Received: by 10.194.153.65 with SMTP id ve1mr30890362wjb.106.1463424219660;
	Mon, 16 May 2016 11:43:39 -0700 (PDT)
Received: from gmail.com (2E8B0CD5.catv.pool.telekom.hu. [46.139.12.213])
	by smtp.gmail.com with ESMTPSA id
	e8sm35176443wjm.23.2016.05.16.11.43.37
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Mon, 16 May 2016 11:43:38 -0700 (PDT)
Date: Mon, 16 May 2016 20:43:35 +0200
From: Ingo Molnar &lt;mingo@kernel.org&gt;
To: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: linux-kernel@vger.kernel.org, Thomas Gleixner &lt;tglx@linutronix.de&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;
Subject: [GIT PULL] x86/platform changes for v4.7
Message-ID: &lt;20160516184335.GA14799@gmail.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.24 (2015-08-30)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-8.2 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,RP_MATCHES_RCVD,T_DKIM_INVALID,UNPARSEABLE_RELAY
	autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a> - May 16, 2016, 6:43 p.m.</div>
<pre class="content">
Linus,

Please pull the latest x86-platform-for-linus git tree from:

   git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git x86-platform-for-linus

   # HEAD: 3cd0b53553ce28da6fc828c601041c974e1c4dde Merge branch &#39;x86/urgent&#39; into x86/platform, to resolve conflict

The main change is the addition of SGI/UV4 support.

  out-of-topic modifications in x86-platform-for-linus:
  -------------------------------------------------------
  drivers/misc/sgi-gru/grukservices.c# 40bfb8eedf1e: x86/platform/UV: Remove Obso

 Thanks,

	Ingo

------------------&gt;
Alex Thorlton (1):
      x86/platform/uv: Disable UV BAU by default

Dimitri Sivanich (2):
      x86/platform/UV: Remove Obsolete GRU MMR address translation
      x86/platform/UV: Fix incorrect nodes and pnodes for cpuless and memoryless nodes

Guenter Roeck (1):
      x86/platform: Remove unused get_bios_ebda_length() function

Mike Travis (18):
      x86/platform/UV: Add Initial UV4 definitions
      x86/platform/UV: Add UV Architecture Defines
      x86/platform/UV: Add UV4 Specific Defines
      x86/platform/UV: Add UV MMR Illegal Access Function
      x86/platform/UV: Prep for UV4 MMR updates
      x86/platform/UV: Add UV4 Specific MMR definitions
      x86/platform/UV: Clean up redunduncies after merge of UV4 MMR definitions
      x86/platform/UV: Update MMIOH setup function to work for both UV3 and UV4
      x86/platform/UV: Create per cpu info structs to replace per hub info structs
      x86/platform/UV: Move scir info to the per cpu info struct
      x86/platform/UV: Move blade local processor ID to the per cpu info struct
      x86/platform/UV: Allocate common per node hub info structs on local node
      x86/platform/UV: Fold blade info into per node hub info structs
      x86/platform/UV: Add UV4 addressing discovery function
      x86/platform/UV: Add obtaining GAM Range Table from UV BIOS
      x86/platform/UV: Support UV4 socket address changes
      x86/platform/UV: Build GAM reference tables
      x86/platform/UV: Update physical address conversions for UV4


 Documentation/kernel-parameters.txt |    8 +
 arch/x86/include/asm/bios_ebda.h    |   21 -
 arch/x86/include/asm/uv/bios.h      |   59 +-
 arch/x86/include/asm/uv/uv_bau.h    |    2 +-
 arch/x86/include/asm/uv/uv_hub.h    |  409 +++++--
 arch/x86/include/asm/uv/uv_mmrs.h   | 2207 ++++++++++++++++++++++++++++-------
 arch/x86/kernel/apic/x2apic_uv_x.c  |  850 +++++++++++---
 arch/x86/platform/uv/bios_uv.c      |   48 +-
 arch/x86/platform/uv/tlb_uv.c       |   38 +-
 arch/x86/platform/uv/uv_sysfs.c     |    2 +-
 arch/x86/platform/uv/uv_time.c      |    6 +-
 drivers/misc/sgi-gru/grukservices.c |   38 +-
 12 files changed, 2895 insertions(+), 793 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/Documentation/kernel-parameters.txt b/Documentation/kernel-parameters.txt</span>
<span class="p_header">index 0b3de80ec8f6..8ba7f82f472c 100644</span>
<span class="p_header">--- a/Documentation/kernel-parameters.txt</span>
<span class="p_header">+++ b/Documentation/kernel-parameters.txt</span>
<span class="p_chunk">@@ -131,6 +131,7 @@</span> <span class="p_context"> the beginning of each description states the restrictions within which a</span>
 			More X86-64 boot options can be found in
 			Documentation/x86/x86_64/boot-options.txt .
 	X86	Either 32-bit or 64-bit x86 (same as X86-32+X86-64)
<span class="p_add">+	X86_UV	SGI UV support is enabled.</span>
 	XEN	Xen support is enabled
 
 In addition, the following text indicates that the option:
<span class="p_chunk">@@ -542,6 +543,13 @@</span> <span class="p_context"> bytes respectively. Such letter suffixes can also be entirely omitted.</span>
 			Format: &lt;int&gt; (must be &gt;=0)
 			Default: 64
 
<span class="p_add">+	bau=		[X86_UV] Enable the BAU on SGI UV.  The default</span>
<span class="p_add">+			behavior is to disable the BAU (i.e. bau=0).</span>
<span class="p_add">+			Format: { &quot;0&quot; | &quot;1&quot; }</span>
<span class="p_add">+			0 - Disable the BAU.</span>
<span class="p_add">+			1 - Enable the BAU.</span>
<span class="p_add">+			unset - Disable the BAU.</span>
<span class="p_add">+</span>
 	baycom_epp=	[HW,AX25]
 			Format: &lt;io&gt;,&lt;mode&gt;
 
<span class="p_header">diff --git a/arch/x86/include/asm/bios_ebda.h b/arch/x86/include/asm/bios_ebda.h</span>
<span class="p_header">index aa6a3170ab5a..2b00c776f223 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/bios_ebda.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/bios_ebda.h</span>
<span class="p_chunk">@@ -17,27 +17,6 @@</span> <span class="p_context"> static inline unsigned int get_bios_ebda(void)</span>
 	return address;	/* 0 means none */
 }
 
<span class="p_del">-/*</span>
<span class="p_del">- * Return the sanitized length of the EBDA in bytes, if it exists.</span>
<span class="p_del">- */</span>
<span class="p_del">-static inline unsigned int get_bios_ebda_length(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	unsigned int address;</span>
<span class="p_del">-	unsigned int length;</span>
<span class="p_del">-</span>
<span class="p_del">-	address = get_bios_ebda();</span>
<span class="p_del">-	if (!address)</span>
<span class="p_del">-		return 0;</span>
<span class="p_del">-</span>
<span class="p_del">-	/* EBDA length is byte 0 of the EBDA (stored in KiB) */</span>
<span class="p_del">-	length = *(unsigned char *)phys_to_virt(address);</span>
<span class="p_del">-	length &lt;&lt;= 10;</span>
<span class="p_del">-</span>
<span class="p_del">-	/* Trim the length if it extends beyond 640KiB */</span>
<span class="p_del">-	length = min_t(unsigned int, (640 * 1024) - address, length);</span>
<span class="p_del">-	return length;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 void reserve_ebda_region(void);
 
 #ifdef CONFIG_X86_CHECK_BIOS_CORRUPTION
<span class="p_header">diff --git a/arch/x86/include/asm/uv/bios.h b/arch/x86/include/asm/uv/bios.h</span>
<span class="p_header">index 71605c7d5c5c..c852590254d5 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/uv/bios.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/uv/bios.h</span>
<span class="p_chunk">@@ -51,15 +51,66 @@</span> <span class="p_context"> enum {</span>
 	BIOS_STATUS_UNAVAIL		= -EBUSY
 };
 
<span class="p_add">+/* Address map parameters */</span>
<span class="p_add">+struct uv_gam_parameters {</span>
<span class="p_add">+	u64	mmr_base;</span>
<span class="p_add">+	u64	gru_base;</span>
<span class="p_add">+	u8	mmr_shift;	/* Convert PNode to MMR space offset */</span>
<span class="p_add">+	u8	gru_shift;	/* Convert PNode to GRU space offset */</span>
<span class="p_add">+	u8	gpa_shift;	/* Size of offset field in GRU phys addr */</span>
<span class="p_add">+	u8	unused1;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+/* UV_TABLE_GAM_RANGE_ENTRY values */</span>
<span class="p_add">+#define UV_GAM_RANGE_TYPE_UNUSED	0 /* End of table */</span>
<span class="p_add">+#define UV_GAM_RANGE_TYPE_RAM		1 /* Normal RAM */</span>
<span class="p_add">+#define UV_GAM_RANGE_TYPE_NVRAM		2 /* Non-volatile memory */</span>
<span class="p_add">+#define UV_GAM_RANGE_TYPE_NV_WINDOW	3 /* NVMDIMM block window */</span>
<span class="p_add">+#define UV_GAM_RANGE_TYPE_NV_MAILBOX	4 /* NVMDIMM mailbox */</span>
<span class="p_add">+#define UV_GAM_RANGE_TYPE_HOLE		5 /* Unused address range */</span>
<span class="p_add">+#define UV_GAM_RANGE_TYPE_MAX		6</span>
<span class="p_add">+</span>
<span class="p_add">+/* The structure stores PA bits 56:26, for 64MB granularity */</span>
<span class="p_add">+#define UV_GAM_RANGE_SHFT		26		/* 64MB */</span>
<span class="p_add">+</span>
<span class="p_add">+struct uv_gam_range_entry {</span>
<span class="p_add">+	char	type;		/* Entry type: GAM_RANGE_TYPE_UNUSED, etc. */</span>
<span class="p_add">+	char	unused1;</span>
<span class="p_add">+	u16	nasid;		/* HNasid */</span>
<span class="p_add">+	u16	sockid;		/* Socket ID, high bits of APIC ID */</span>
<span class="p_add">+	u16	pnode;		/* Index to MMR and GRU spaces */</span>
<span class="p_add">+	u32	pxm;		/* ACPI proximity domain number */</span>
<span class="p_add">+	u32	limit;		/* PA bits 56:26 (UV_GAM_RANGE_SHFT) */</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+#define	UV_SYSTAB_SIG			&quot;UVST&quot;</span>
<span class="p_add">+#define	UV_SYSTAB_VERSION_1		1	/* UV1/2/3 BIOS version */</span>
<span class="p_add">+#define	UV_SYSTAB_VERSION_UV4		0x400	/* UV4 BIOS base version */</span>
<span class="p_add">+#define	UV_SYSTAB_VERSION_UV4_1		0x401	/* + gpa_shift */</span>
<span class="p_add">+#define	UV_SYSTAB_VERSION_UV4_2		0x402	/* + TYPE_NVRAM/WINDOW/MBOX */</span>
<span class="p_add">+#define	UV_SYSTAB_VERSION_UV4_LATEST	UV_SYSTAB_VERSION_UV4_2</span>
<span class="p_add">+</span>
<span class="p_add">+#define	UV_SYSTAB_TYPE_UNUSED		0	/* End of table (offset == 0) */</span>
<span class="p_add">+#define	UV_SYSTAB_TYPE_GAM_PARAMS	1	/* GAM PARAM conversions */</span>
<span class="p_add">+#define	UV_SYSTAB_TYPE_GAM_RNG_TBL	2	/* GAM entry table */</span>
<span class="p_add">+#define	UV_SYSTAB_TYPE_MAX		3</span>
<span class="p_add">+</span>
 /*
  * The UV system table describes specific firmware
  * capabilities available to the Linux kernel at runtime.
  */
 struct uv_systab {
<span class="p_del">-	char signature[4];	/* must be &quot;UVST&quot; */</span>
<span class="p_add">+	char signature[4];	/* must be UV_SYSTAB_SIG */</span>
 	u32 revision;		/* distinguish different firmware revs */
 	u64 function;		/* BIOS runtime callback function ptr */
<span class="p_add">+	u32 size;		/* systab size (starting with _VERSION_UV4) */</span>
<span class="p_add">+	struct {</span>
<span class="p_add">+		u32 type:8;	/* type of entry */</span>
<span class="p_add">+		u32 offset:24;	/* byte offset from struct start to entry */</span>
<span class="p_add">+	} entry[1];		/* additional entries follow */</span>
 };
<span class="p_add">+extern struct uv_systab *uv_systab;</span>
<span class="p_add">+/* (... end of definitions from UV BIOS ...) */</span>
 
 enum {
 	BIOS_FREQ_BASE_PLATFORM = 0,
<span class="p_chunk">@@ -99,7 +150,11 @@</span> <span class="p_context"> extern s64 uv_bios_change_memprotect(u64, u64, enum uv_memprotect);</span>
 extern s64 uv_bios_reserved_page_pa(u64, u64 *, u64 *, u64 *);
 extern int uv_bios_set_legacy_vga_target(bool decode, int domain, int bus);
 
<span class="p_add">+#ifdef CONFIG_EFI</span>
 extern void uv_bios_init(void);
<span class="p_add">+#else</span>
<span class="p_add">+void uv_bios_init(void) { }</span>
<span class="p_add">+#endif</span>
 
 extern unsigned long sn_rtc_cycles_per_second;
 extern int uv_type;
<span class="p_chunk">@@ -107,7 +162,7 @@</span> <span class="p_context"> extern long sn_partition_id;</span>
 extern long sn_coherency_id;
 extern long sn_region_size;
 extern long system_serial_number;
<span class="p_del">-#define partition_coherence_id()	(sn_coherency_id)</span>
<span class="p_add">+#define uv_partition_coherence_id()	(sn_coherency_id)</span>
 
 extern struct kobject *sgi_uv_kobj;	/* /sys/firmware/sgi_uv */
 
<span class="p_header">diff --git a/arch/x86/include/asm/uv/uv_bau.h b/arch/x86/include/asm/uv/uv_bau.h</span>
<span class="p_header">index fc808b83fccb..cc44d926c17e 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/uv/uv_bau.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/uv/uv_bau.h</span>
<span class="p_chunk">@@ -598,7 +598,7 @@</span> <span class="p_context"> struct bau_control {</span>
 	int			timeout_tries;
 	int			ipi_attempts;
 	int			conseccompletes;
<span class="p_del">-	short			nobau;</span>
<span class="p_add">+	bool			nobau;</span>
 	short			baudisabled;
 	short			cpu;
 	short			osnode;
<span class="p_header">diff --git a/arch/x86/include/asm/uv/uv_hub.h b/arch/x86/include/asm/uv/uv_hub.h</span>
<span class="p_header">index ea7074784cc4..097b80c989c4 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/uv/uv_hub.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/uv/uv_hub.h</span>
<span class="p_chunk">@@ -16,9 +16,11 @@</span> <span class="p_context"></span>
 #include &lt;linux/percpu.h&gt;
 #include &lt;linux/timer.h&gt;
 #include &lt;linux/io.h&gt;
<span class="p_add">+#include &lt;linux/topology.h&gt;</span>
 #include &lt;asm/types.h&gt;
 #include &lt;asm/percpu.h&gt;
 #include &lt;asm/uv/uv_mmrs.h&gt;
<span class="p_add">+#include &lt;asm/uv/bios.h&gt;</span>
 #include &lt;asm/irq_vectors.h&gt;
 #include &lt;asm/io_apic.h&gt;
 
<span class="p_chunk">@@ -103,7 +105,6 @@</span> <span class="p_context"></span>
  *	      processor APICID register.
  */
 
<span class="p_del">-</span>
 /*
  * Maximum number of bricks in all partitions and in all coherency domains.
  * This is the total number of bricks accessible in the numalink fabric. It
<span class="p_chunk">@@ -127,6 +128,7 @@</span> <span class="p_context"></span>
  */
 #define UV_MAX_NASID_VALUE	(UV_MAX_NUMALINK_BLADES * 2)
 
<span class="p_add">+/* System Controller Interface Reg info */</span>
 struct uv_scir_s {
 	struct timer_list timer;
 	unsigned long	offset;
<span class="p_chunk">@@ -137,71 +139,173 @@</span> <span class="p_context"> struct uv_scir_s {</span>
 	unsigned char	enabled;
 };
 
<span class="p_add">+/* GAM (globally addressed memory) range table */</span>
<span class="p_add">+struct uv_gam_range_s {</span>
<span class="p_add">+	u32	limit;		/* PA bits 56:26 (GAM_RANGE_SHFT) */</span>
<span class="p_add">+	u16	nasid;		/* node&#39;s global physical address */</span>
<span class="p_add">+	s8	base;		/* entry index of node&#39;s base addr */</span>
<span class="p_add">+	u8	reserved;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 /*
  * The following defines attributes of the HUB chip. These attributes are
<span class="p_del">- * frequently referenced and are kept in the per-cpu data areas of each cpu.</span>
<span class="p_del">- * They are kept together in a struct to minimize cache misses.</span>
<span class="p_add">+ * frequently referenced and are kept in a common per hub struct.</span>
<span class="p_add">+ * After setup, the struct is read only, so it should be readily</span>
<span class="p_add">+ * available in the L3 cache on the cpu socket for the node.</span>
  */
 struct uv_hub_info_s {
 	unsigned long		global_mmr_base;
<span class="p_add">+	unsigned long		global_mmr_shift;</span>
 	unsigned long		gpa_mask;
<span class="p_del">-	unsigned int		gnode_extra;</span>
<span class="p_add">+	unsigned short		*socket_to_node;</span>
<span class="p_add">+	unsigned short		*socket_to_pnode;</span>
<span class="p_add">+	unsigned short		*pnode_to_socket;</span>
<span class="p_add">+	struct uv_gam_range_s	*gr_table;</span>
<span class="p_add">+	unsigned short		min_socket;</span>
<span class="p_add">+	unsigned short		min_pnode;</span>
<span class="p_add">+	unsigned char		m_val;</span>
<span class="p_add">+	unsigned char		n_val;</span>
<span class="p_add">+	unsigned char		gr_table_len;</span>
 	unsigned char		hub_revision;
 	unsigned char		apic_pnode_shift;
<span class="p_add">+	unsigned char		gpa_shift;</span>
 	unsigned char		m_shift;
 	unsigned char		n_lshift;
<span class="p_add">+	unsigned int		gnode_extra;</span>
 	unsigned long		gnode_upper;
 	unsigned long		lowmem_remap_top;
 	unsigned long		lowmem_remap_base;
<span class="p_add">+	unsigned long		global_gru_base;</span>
<span class="p_add">+	unsigned long		global_gru_shift;</span>
 	unsigned short		pnode;
 	unsigned short		pnode_mask;
 	unsigned short		coherency_domain_number;
 	unsigned short		numa_blade_id;
<span class="p_del">-	unsigned char		blade_processor_id;</span>
<span class="p_del">-	unsigned char		m_val;</span>
<span class="p_del">-	unsigned char		n_val;</span>
<span class="p_add">+	unsigned short		nr_possible_cpus;</span>
<span class="p_add">+	unsigned short		nr_online_cpus;</span>
<span class="p_add">+	short			memory_nid;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+/* CPU specific info with a pointer to the hub common info struct */</span>
<span class="p_add">+struct uv_cpu_info_s {</span>
<span class="p_add">+	void			*p_uv_hub_info;</span>
<span class="p_add">+	unsigned char		blade_cpu_id;</span>
 	struct uv_scir_s	scir;
 };
<span class="p_add">+DECLARE_PER_CPU(struct uv_cpu_info_s, __uv_cpu_info);</span>
<span class="p_add">+</span>
<span class="p_add">+#define uv_cpu_info		this_cpu_ptr(&amp;__uv_cpu_info)</span>
<span class="p_add">+#define uv_cpu_info_per(cpu)	(&amp;per_cpu(__uv_cpu_info, cpu))</span>
<span class="p_add">+</span>
<span class="p_add">+#define	uv_scir_info		(&amp;uv_cpu_info-&gt;scir)</span>
<span class="p_add">+#define	uv_cpu_scir_info(cpu)	(&amp;uv_cpu_info_per(cpu)-&gt;scir)</span>
<span class="p_add">+</span>
<span class="p_add">+/* Node specific hub common info struct */</span>
<span class="p_add">+extern void **__uv_hub_info_list;</span>
<span class="p_add">+static inline struct uv_hub_info_s *uv_hub_info_list(int node)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return (struct uv_hub_info_s *)__uv_hub_info_list[node];</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline struct uv_hub_info_s *_uv_hub_info(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return (struct uv_hub_info_s *)uv_cpu_info-&gt;p_uv_hub_info;</span>
<span class="p_add">+}</span>
<span class="p_add">+#define	uv_hub_info	_uv_hub_info()</span>
 
<span class="p_del">-DECLARE_PER_CPU(struct uv_hub_info_s, __uv_hub_info);</span>
<span class="p_del">-#define uv_hub_info		this_cpu_ptr(&amp;__uv_hub_info)</span>
<span class="p_del">-#define uv_cpu_hub_info(cpu)	(&amp;per_cpu(__uv_hub_info, cpu))</span>
<span class="p_add">+static inline struct uv_hub_info_s *uv_cpu_hub_info(int cpu)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return (struct uv_hub_info_s *)uv_cpu_info_per(cpu)-&gt;p_uv_hub_info;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+#define	UV_HUB_INFO_VERSION	0x7150</span>
<span class="p_add">+extern int uv_hub_info_version(void);</span>
<span class="p_add">+static inline int uv_hub_info_check(int version)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if (uv_hub_info_version() == version)</span>
<span class="p_add">+		return 0;</span>
<span class="p_add">+</span>
<span class="p_add">+	pr_crit(&quot;UV: uv_hub_info version(%x) mismatch, expecting(%x)\n&quot;,</span>
<span class="p_add">+		uv_hub_info_version(), version);</span>
<span class="p_add">+</span>
<span class="p_add">+	BUG();	/* Catastrophic - cannot continue on unknown UV system */</span>
<span class="p_add">+}</span>
<span class="p_add">+#define	_uv_hub_info_check()	uv_hub_info_check(UV_HUB_INFO_VERSION)</span>
 
 /*
<span class="p_del">- * Hub revisions less than UV2_HUB_REVISION_BASE are UV1 hubs. All UV2</span>
<span class="p_del">- * hubs have revision numbers greater than or equal to UV2_HUB_REVISION_BASE.</span>
<span class="p_add">+ * HUB revision ranges for each UV HUB architecture.</span>
  * This is a software convention - NOT the hardware revision numbers in
  * the hub chip.
  */
 #define UV1_HUB_REVISION_BASE		1
 #define UV2_HUB_REVISION_BASE		3
 #define UV3_HUB_REVISION_BASE		5
<span class="p_add">+#define UV4_HUB_REVISION_BASE		7</span>
 
<span class="p_add">+#ifdef	UV1_HUB_IS_SUPPORTED</span>
 static inline int is_uv1_hub(void)
 {
 	return uv_hub_info-&gt;hub_revision &lt; UV2_HUB_REVISION_BASE;
 }
<span class="p_add">+#else</span>
<span class="p_add">+static inline int is_uv1_hub(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+#endif</span>
 
<span class="p_add">+#ifdef	UV2_HUB_IS_SUPPORTED</span>
 static inline int is_uv2_hub(void)
 {
 	return ((uv_hub_info-&gt;hub_revision &gt;= UV2_HUB_REVISION_BASE) &amp;&amp;
 		(uv_hub_info-&gt;hub_revision &lt; UV3_HUB_REVISION_BASE));
 }
<span class="p_add">+#else</span>
<span class="p_add">+static inline int is_uv2_hub(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+#endif</span>
 
<span class="p_add">+#ifdef	UV3_HUB_IS_SUPPORTED</span>
<span class="p_add">+static inline int is_uv3_hub(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return ((uv_hub_info-&gt;hub_revision &gt;= UV3_HUB_REVISION_BASE) &amp;&amp;</span>
<span class="p_add">+		(uv_hub_info-&gt;hub_revision &lt; UV4_HUB_REVISION_BASE));</span>
<span class="p_add">+}</span>
<span class="p_add">+#else</span>
 static inline int is_uv3_hub(void)
 {
<span class="p_del">-	return uv_hub_info-&gt;hub_revision &gt;= UV3_HUB_REVISION_BASE;</span>
<span class="p_add">+	return 0;</span>
 }
<span class="p_add">+#endif</span>
 
<span class="p_del">-static inline int is_uv_hub(void)</span>
<span class="p_add">+#ifdef	UV4_HUB_IS_SUPPORTED</span>
<span class="p_add">+static inline int is_uv4_hub(void)</span>
 {
<span class="p_del">-	return uv_hub_info-&gt;hub_revision;</span>
<span class="p_add">+	return uv_hub_info-&gt;hub_revision &gt;= UV4_HUB_REVISION_BASE;</span>
 }
<span class="p_add">+#else</span>
<span class="p_add">+static inline int is_uv4_hub(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+#endif</span>
 
<span class="p_del">-/* code common to uv2 and uv3 only */</span>
 static inline int is_uvx_hub(void)
 {
<span class="p_del">-	return uv_hub_info-&gt;hub_revision &gt;= UV2_HUB_REVISION_BASE;</span>
<span class="p_add">+	if (uv_hub_info-&gt;hub_revision &gt;= UV2_HUB_REVISION_BASE)</span>
<span class="p_add">+		return uv_hub_info-&gt;hub_revision;</span>
<span class="p_add">+</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline int is_uv_hub(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+#ifdef	UV1_HUB_IS_SUPPORTED</span>
<span class="p_add">+	return uv_hub_info-&gt;hub_revision;</span>
<span class="p_add">+#endif</span>
<span class="p_add">+	return is_uvx_hub();</span>
 }
 
 union uvh_apicid {
<span class="p_chunk">@@ -243,24 +347,42 @@</span> <span class="p_context"> union uvh_apicid {</span>
 #define UV3_LOCAL_MMR_SIZE		(32UL * 1024 * 1024)
 #define UV3_GLOBAL_MMR32_SIZE		(32UL * 1024 * 1024)
 
<span class="p_del">-#define UV_LOCAL_MMR_BASE		(is_uv1_hub() ? UV1_LOCAL_MMR_BASE : \</span>
<span class="p_del">-					(is_uv2_hub() ? UV2_LOCAL_MMR_BASE : \</span>
<span class="p_del">-							UV3_LOCAL_MMR_BASE))</span>
<span class="p_del">-#define UV_GLOBAL_MMR32_BASE		(is_uv1_hub() ? UV1_GLOBAL_MMR32_BASE :\</span>
<span class="p_del">-					(is_uv2_hub() ? UV2_GLOBAL_MMR32_BASE :\</span>
<span class="p_del">-							UV3_GLOBAL_MMR32_BASE))</span>
<span class="p_del">-#define UV_LOCAL_MMR_SIZE		(is_uv1_hub() ? UV1_LOCAL_MMR_SIZE : \</span>
<span class="p_del">-					(is_uv2_hub() ? UV2_LOCAL_MMR_SIZE : \</span>
<span class="p_del">-							UV3_LOCAL_MMR_SIZE))</span>
<span class="p_del">-#define UV_GLOBAL_MMR32_SIZE		(is_uv1_hub() ? UV1_GLOBAL_MMR32_SIZE :\</span>
<span class="p_del">-					(is_uv2_hub() ? UV2_GLOBAL_MMR32_SIZE :\</span>
<span class="p_del">-							UV3_GLOBAL_MMR32_SIZE))</span>
<span class="p_add">+#define UV4_LOCAL_MMR_BASE		0xfa000000UL</span>
<span class="p_add">+#define UV4_GLOBAL_MMR32_BASE		0xfc000000UL</span>
<span class="p_add">+#define UV4_LOCAL_MMR_SIZE		(32UL * 1024 * 1024)</span>
<span class="p_add">+#define UV4_GLOBAL_MMR32_SIZE		(16UL * 1024 * 1024)</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV_LOCAL_MMR_BASE		(				\</span>
<span class="p_add">+					is_uv1_hub() ? UV1_LOCAL_MMR_BASE : \</span>
<span class="p_add">+					is_uv2_hub() ? UV2_LOCAL_MMR_BASE : \</span>
<span class="p_add">+					is_uv3_hub() ? UV3_LOCAL_MMR_BASE : \</span>
<span class="p_add">+					/*is_uv4_hub*/ UV4_LOCAL_MMR_BASE)</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV_GLOBAL_MMR32_BASE		(				\</span>
<span class="p_add">+					is_uv1_hub() ? UV1_GLOBAL_MMR32_BASE : \</span>
<span class="p_add">+					is_uv2_hub() ? UV2_GLOBAL_MMR32_BASE : \</span>
<span class="p_add">+					is_uv3_hub() ? UV3_GLOBAL_MMR32_BASE : \</span>
<span class="p_add">+					/*is_uv4_hub*/ UV4_GLOBAL_MMR32_BASE)</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV_LOCAL_MMR_SIZE		(				\</span>
<span class="p_add">+					is_uv1_hub() ? UV1_LOCAL_MMR_SIZE : \</span>
<span class="p_add">+					is_uv2_hub() ? UV2_LOCAL_MMR_SIZE : \</span>
<span class="p_add">+					is_uv3_hub() ? UV3_LOCAL_MMR_SIZE : \</span>
<span class="p_add">+					/*is_uv4_hub*/ UV4_LOCAL_MMR_SIZE)</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV_GLOBAL_MMR32_SIZE		(				\</span>
<span class="p_add">+					is_uv1_hub() ? UV1_GLOBAL_MMR32_SIZE : \</span>
<span class="p_add">+					is_uv2_hub() ? UV2_GLOBAL_MMR32_SIZE : \</span>
<span class="p_add">+					is_uv3_hub() ? UV3_GLOBAL_MMR32_SIZE : \</span>
<span class="p_add">+					/*is_uv4_hub*/ UV4_GLOBAL_MMR32_SIZE)</span>
<span class="p_add">+</span>
 #define UV_GLOBAL_MMR64_BASE		(uv_hub_info-&gt;global_mmr_base)
 
 #define UV_GLOBAL_GRU_MMR_BASE		0x4000000
 
 #define UV_GLOBAL_MMR32_PNODE_SHIFT	15
<span class="p_del">-#define UV_GLOBAL_MMR64_PNODE_SHIFT	26</span>
<span class="p_add">+#define _UV_GLOBAL_MMR64_PNODE_SHIFT	26</span>
<span class="p_add">+#define UV_GLOBAL_MMR64_PNODE_SHIFT	(uv_hub_info-&gt;global_mmr_shift)</span>
 
 #define UV_GLOBAL_MMR32_PNODE_BITS(p)	((p) &lt;&lt; (UV_GLOBAL_MMR32_PNODE_SHIFT))
 
<span class="p_chunk">@@ -307,18 +429,74 @@</span> <span class="p_context"> union uvh_apicid {</span>
  *	      between socket virtual and socket physical addresses.
  */
 
<span class="p_add">+/* global bits offset - number of local address bits in gpa for this UV arch */</span>
<span class="p_add">+static inline unsigned int uv_gpa_shift(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return uv_hub_info-&gt;gpa_shift;</span>
<span class="p_add">+}</span>
<span class="p_add">+#define	_uv_gpa_shift</span>
<span class="p_add">+</span>
<span class="p_add">+/* Find node that has the address range that contains global address  */</span>
<span class="p_add">+static inline struct uv_gam_range_s *uv_gam_range(unsigned long pa)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct uv_gam_range_s *gr = uv_hub_info-&gt;gr_table;</span>
<span class="p_add">+	unsigned long pal = (pa &amp; uv_hub_info-&gt;gpa_mask) &gt;&gt; UV_GAM_RANGE_SHFT;</span>
<span class="p_add">+	int i, num = uv_hub_info-&gt;gr_table_len;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (gr) {</span>
<span class="p_add">+		for (i = 0; i &lt; num; i++, gr++) {</span>
<span class="p_add">+			if (pal &lt; gr-&gt;limit)</span>
<span class="p_add">+				return gr;</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+	pr_crit(&quot;UV: GAM Range for 0x%lx not found at %p!\n&quot;, pa, gr);</span>
<span class="p_add">+	BUG();</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+/* Return base address of node that contains global address  */</span>
<span class="p_add">+static inline unsigned long uv_gam_range_base(unsigned long pa)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct uv_gam_range_s *gr = uv_gam_range(pa);</span>
<span class="p_add">+	int base = gr-&gt;base;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (base &lt; 0)</span>
<span class="p_add">+		return 0UL;</span>
<span class="p_add">+</span>
<span class="p_add">+	return uv_hub_info-&gt;gr_table[base].limit;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+/* socket phys RAM --&gt; UV global NASID (UV4+) */</span>
<span class="p_add">+static inline unsigned long uv_soc_phys_ram_to_nasid(unsigned long paddr)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return uv_gam_range(paddr)-&gt;nasid;</span>
<span class="p_add">+}</span>
<span class="p_add">+#define	_uv_soc_phys_ram_to_nasid</span>
<span class="p_add">+</span>
<span class="p_add">+/* socket virtual --&gt; UV global NASID (UV4+) */</span>
<span class="p_add">+static inline unsigned long uv_gpa_nasid(void *v)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return uv_soc_phys_ram_to_nasid(__pa(v));</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 /* socket phys RAM --&gt; UV global physical address */
 static inline unsigned long uv_soc_phys_ram_to_gpa(unsigned long paddr)
 {
<span class="p_add">+	unsigned int m_val = uv_hub_info-&gt;m_val;</span>
<span class="p_add">+</span>
 	if (paddr &lt; uv_hub_info-&gt;lowmem_remap_top)
 		paddr |= uv_hub_info-&gt;lowmem_remap_base;
 	paddr |= uv_hub_info-&gt;gnode_upper;
<span class="p_del">-	paddr = ((paddr &lt;&lt; uv_hub_info-&gt;m_shift) &gt;&gt; uv_hub_info-&gt;m_shift) |</span>
<span class="p_del">-		((paddr &gt;&gt; uv_hub_info-&gt;m_val) &lt;&lt; uv_hub_info-&gt;n_lshift);</span>
<span class="p_add">+	if (m_val)</span>
<span class="p_add">+		paddr = ((paddr &lt;&lt; uv_hub_info-&gt;m_shift)</span>
<span class="p_add">+						&gt;&gt; uv_hub_info-&gt;m_shift) |</span>
<span class="p_add">+			((paddr &gt;&gt; uv_hub_info-&gt;m_val)</span>
<span class="p_add">+						&lt;&lt; uv_hub_info-&gt;n_lshift);</span>
<span class="p_add">+	else</span>
<span class="p_add">+		paddr |= uv_soc_phys_ram_to_nasid(paddr)</span>
<span class="p_add">+						&lt;&lt; uv_hub_info-&gt;gpa_shift;</span>
 	return paddr;
 }
 
<span class="p_del">-</span>
 /* socket virtual --&gt; UV global physical address */
 static inline unsigned long uv_gpa(void *v)
 {
<span class="p_chunk">@@ -338,54 +516,89 @@</span> <span class="p_context"> static inline unsigned long uv_gpa_to_soc_phys_ram(unsigned long gpa)</span>
 	unsigned long paddr;
 	unsigned long remap_base = uv_hub_info-&gt;lowmem_remap_base;
 	unsigned long remap_top =  uv_hub_info-&gt;lowmem_remap_top;
<span class="p_add">+	unsigned int m_val = uv_hub_info-&gt;m_val;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (m_val)</span>
<span class="p_add">+		gpa = ((gpa &lt;&lt; uv_hub_info-&gt;m_shift) &gt;&gt; uv_hub_info-&gt;m_shift) |</span>
<span class="p_add">+			((gpa &gt;&gt; uv_hub_info-&gt;n_lshift) &lt;&lt; uv_hub_info-&gt;m_val);</span>
 
<span class="p_del">-	gpa = ((gpa &lt;&lt; uv_hub_info-&gt;m_shift) &gt;&gt; uv_hub_info-&gt;m_shift) |</span>
<span class="p_del">-		((gpa &gt;&gt; uv_hub_info-&gt;n_lshift) &lt;&lt; uv_hub_info-&gt;m_val);</span>
 	paddr = gpa &amp; uv_hub_info-&gt;gpa_mask;
 	if (paddr &gt;= remap_base &amp;&amp; paddr &lt; remap_base + remap_top)
 		paddr -= remap_base;
 	return paddr;
 }
 
<span class="p_del">-</span>
<span class="p_del">-/* gpa -&gt; pnode */</span>
<span class="p_add">+/* gpa -&gt; gnode */</span>
 static inline unsigned long uv_gpa_to_gnode(unsigned long gpa)
 {
<span class="p_del">-	return gpa &gt;&gt; uv_hub_info-&gt;n_lshift;</span>
<span class="p_add">+	unsigned int n_lshift = uv_hub_info-&gt;n_lshift;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (n_lshift)</span>
<span class="p_add">+		return gpa &gt;&gt; n_lshift;</span>
<span class="p_add">+</span>
<span class="p_add">+	return uv_gam_range(gpa)-&gt;nasid &gt;&gt; 1;</span>
 }
 
 /* gpa -&gt; pnode */
 static inline int uv_gpa_to_pnode(unsigned long gpa)
 {
<span class="p_del">-	unsigned long n_mask = (1UL &lt;&lt; uv_hub_info-&gt;n_val) - 1;</span>
<span class="p_del">-</span>
<span class="p_del">-	return uv_gpa_to_gnode(gpa) &amp; n_mask;</span>
<span class="p_add">+	return uv_gpa_to_gnode(gpa) &amp; uv_hub_info-&gt;pnode_mask;</span>
 }
 
<span class="p_del">-/* gpa -&gt; node offset*/</span>
<span class="p_add">+/* gpa -&gt; node offset */</span>
 static inline unsigned long uv_gpa_to_offset(unsigned long gpa)
 {
<span class="p_del">-	return (gpa &lt;&lt; uv_hub_info-&gt;m_shift) &gt;&gt; uv_hub_info-&gt;m_shift;</span>
<span class="p_add">+	unsigned int m_shift = uv_hub_info-&gt;m_shift;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (m_shift)</span>
<span class="p_add">+		return (gpa &lt;&lt; m_shift) &gt;&gt; m_shift;</span>
<span class="p_add">+</span>
<span class="p_add">+	return (gpa &amp; uv_hub_info-&gt;gpa_mask) - uv_gam_range_base(gpa);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+/* Convert socket to node */</span>
<span class="p_add">+static inline int _uv_socket_to_node(int socket, unsigned short *s2nid)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return s2nid ? s2nid[socket - uv_hub_info-&gt;min_socket] : socket;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline int uv_socket_to_node(int socket)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return _uv_socket_to_node(socket, uv_hub_info-&gt;socket_to_node);</span>
 }
 
 /* pnode, offset --&gt; socket virtual */
 static inline void *uv_pnode_offset_to_vaddr(int pnode, unsigned long offset)
 {
<span class="p_del">-	return __va(((unsigned long)pnode &lt;&lt; uv_hub_info-&gt;m_val) | offset);</span>
<span class="p_del">-}</span>
<span class="p_add">+	unsigned int m_val = uv_hub_info-&gt;m_val;</span>
<span class="p_add">+	unsigned long base;</span>
<span class="p_add">+	unsigned short sockid, node, *p2s;</span>
 
<span class="p_add">+	if (m_val)</span>
<span class="p_add">+		return __va(((unsigned long)pnode &lt;&lt; m_val) | offset);</span>
 
<span class="p_del">-/*</span>
<span class="p_del">- * Extract a PNODE from an APICID (full apicid, not processor subset)</span>
<span class="p_del">- */</span>
<span class="p_add">+	p2s = uv_hub_info-&gt;pnode_to_socket;</span>
<span class="p_add">+	sockid = p2s ? p2s[pnode - uv_hub_info-&gt;min_pnode] : pnode;</span>
<span class="p_add">+	node = uv_socket_to_node(sockid);</span>
<span class="p_add">+</span>
<span class="p_add">+	/* limit address of previous socket is our base, except node 0 is 0 */</span>
<span class="p_add">+	if (!node)</span>
<span class="p_add">+		return __va((unsigned long)offset);</span>
<span class="p_add">+</span>
<span class="p_add">+	base = (unsigned long)(uv_hub_info-&gt;gr_table[node - 1].limit);</span>
<span class="p_add">+	return __va(base &lt;&lt; UV_GAM_RANGE_SHFT | offset);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+/* Extract/Convert a PNODE from an APICID (full apicid, not processor subset) */</span>
 static inline int uv_apicid_to_pnode(int apicid)
 {
<span class="p_del">-	return (apicid &gt;&gt; uv_hub_info-&gt;apic_pnode_shift);</span>
<span class="p_add">+	int pnode = apicid &gt;&gt; uv_hub_info-&gt;apic_pnode_shift;</span>
<span class="p_add">+	unsigned short *s2pn = uv_hub_info-&gt;socket_to_pnode;</span>
<span class="p_add">+</span>
<span class="p_add">+	return s2pn ? s2pn[pnode - uv_hub_info-&gt;min_socket] : pnode;</span>
 }
 
<span class="p_del">-/*</span>
<span class="p_del">- * Convert an apicid to the socket number on the blade</span>
<span class="p_del">- */</span>
<span class="p_add">+/* Convert an apicid to the socket number on the blade */</span>
 static inline int uv_apicid_to_socket(int apicid)
 {
 	if (is_uv1_hub())
<span class="p_chunk">@@ -434,16 +647,6 @@</span> <span class="p_context"> static inline unsigned long uv_read_global_mmr64(int pnode, unsigned long offset</span>
 	return readq(uv_global_mmr64_address(pnode, offset));
 }
 
<span class="p_del">-/*</span>
<span class="p_del">- * Global MMR space addresses when referenced by the GRU. (GRU does</span>
<span class="p_del">- * NOT use socket addressing).</span>
<span class="p_del">- */</span>
<span class="p_del">-static inline unsigned long uv_global_gru_mmr_address(int pnode, unsigned long offset)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return UV_GLOBAL_GRU_MMR_BASE | offset |</span>
<span class="p_del">-		((unsigned long)pnode &lt;&lt; uv_hub_info-&gt;m_val);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline void uv_write_global_mmr8(int pnode, unsigned long offset, unsigned char val)
 {
 	writeb(val, uv_global_mmr64_address(pnode, offset));
<span class="p_chunk">@@ -483,27 +686,23 @@</span> <span class="p_context"> static inline void uv_write_local_mmr8(unsigned long offset, unsigned char val)</span>
 	writeb(val, uv_local_mmr_address(offset));
 }
 
<span class="p_del">-/*</span>
<span class="p_del">- * Structures and definitions for converting between cpu, node, pnode, and blade</span>
<span class="p_del">- * numbers.</span>
<span class="p_del">- */</span>
<span class="p_del">-struct uv_blade_info {</span>
<span class="p_del">-	unsigned short	nr_possible_cpus;</span>
<span class="p_del">-	unsigned short	nr_online_cpus;</span>
<span class="p_del">-	unsigned short	pnode;</span>
<span class="p_del">-	short		memory_nid;</span>
<span class="p_del">-	spinlock_t	nmi_lock;	/* obsolete, see uv_hub_nmi */</span>
<span class="p_del">-	unsigned long	nmi_count;	/* obsolete, see uv_hub_nmi */</span>
<span class="p_del">-};</span>
<span class="p_del">-extern struct uv_blade_info *uv_blade_info;</span>
<span class="p_del">-extern short *uv_node_to_blade;</span>
<span class="p_del">-extern short *uv_cpu_to_blade;</span>
<span class="p_del">-extern short uv_possible_blades;</span>
<span class="p_del">-</span>
 /* Blade-local cpu number of current cpu. Numbered 0 .. &lt;# cpus on the blade&gt; */
 static inline int uv_blade_processor_id(void)
 {
<span class="p_del">-	return uv_hub_info-&gt;blade_processor_id;</span>
<span class="p_add">+	return uv_cpu_info-&gt;blade_cpu_id;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+/* Blade-local cpu number of cpu N. Numbered 0 .. &lt;# cpus on the blade&gt; */</span>
<span class="p_add">+static inline int uv_cpu_blade_processor_id(int cpu)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return uv_cpu_info_per(cpu)-&gt;blade_cpu_id;</span>
<span class="p_add">+}</span>
<span class="p_add">+#define _uv_cpu_blade_processor_id 1	/* indicate function available */</span>
<span class="p_add">+</span>
<span class="p_add">+/* Blade number to Node number (UV1..UV4 is 1:1) */</span>
<span class="p_add">+static inline int uv_blade_to_node(int blade)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return blade;</span>
 }
 
 /* Blade number of current cpu. Numnbered 0 .. &lt;#blades -1&gt; */
<span class="p_chunk">@@ -512,55 +711,60 @@</span> <span class="p_context"> static inline int uv_numa_blade_id(void)</span>
 	return uv_hub_info-&gt;numa_blade_id;
 }
 
<span class="p_del">-/* Convert a cpu number to the the UV blade number */</span>
<span class="p_del">-static inline int uv_cpu_to_blade_id(int cpu)</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Convert linux node number to the UV blade number.</span>
<span class="p_add">+ * .. Currently for UV1 thru UV4 the node and the blade are identical.</span>
<span class="p_add">+ * .. If this changes then you MUST check references to this function!</span>
<span class="p_add">+ */</span>
<span class="p_add">+static inline int uv_node_to_blade_id(int nid)</span>
 {
<span class="p_del">-	return uv_cpu_to_blade[cpu];</span>
<span class="p_add">+	return nid;</span>
 }
 
<span class="p_del">-/* Convert linux node number to the UV blade number */</span>
<span class="p_del">-static inline int uv_node_to_blade_id(int nid)</span>
<span class="p_add">+/* Convert a cpu number to the the UV blade number */</span>
<span class="p_add">+static inline int uv_cpu_to_blade_id(int cpu)</span>
 {
<span class="p_del">-	return uv_node_to_blade[nid];</span>
<span class="p_add">+	return uv_node_to_blade_id(cpu_to_node(cpu));</span>
 }
 
 /* Convert a blade id to the PNODE of the blade */
 static inline int uv_blade_to_pnode(int bid)
 {
<span class="p_del">-	return uv_blade_info[bid].pnode;</span>
<span class="p_add">+	return uv_hub_info_list(uv_blade_to_node(bid))-&gt;pnode;</span>
 }
 
 /* Nid of memory node on blade. -1 if no blade-local memory */
 static inline int uv_blade_to_memory_nid(int bid)
 {
<span class="p_del">-	return uv_blade_info[bid].memory_nid;</span>
<span class="p_add">+	return uv_hub_info_list(uv_blade_to_node(bid))-&gt;memory_nid;</span>
 }
 
 /* Determine the number of possible cpus on a blade */
 static inline int uv_blade_nr_possible_cpus(int bid)
 {
<span class="p_del">-	return uv_blade_info[bid].nr_possible_cpus;</span>
<span class="p_add">+	return uv_hub_info_list(uv_blade_to_node(bid))-&gt;nr_possible_cpus;</span>
 }
 
 /* Determine the number of online cpus on a blade */
 static inline int uv_blade_nr_online_cpus(int bid)
 {
<span class="p_del">-	return uv_blade_info[bid].nr_online_cpus;</span>
<span class="p_add">+	return uv_hub_info_list(uv_blade_to_node(bid))-&gt;nr_online_cpus;</span>
 }
 
 /* Convert a cpu id to the PNODE of the blade containing the cpu */
 static inline int uv_cpu_to_pnode(int cpu)
 {
<span class="p_del">-	return uv_blade_info[uv_cpu_to_blade_id(cpu)].pnode;</span>
<span class="p_add">+	return uv_cpu_hub_info(cpu)-&gt;pnode;</span>
 }
 
 /* Convert a linux node number to the PNODE of the blade */
 static inline int uv_node_to_pnode(int nid)
 {
<span class="p_del">-	return uv_blade_info[uv_node_to_blade_id(nid)].pnode;</span>
<span class="p_add">+	return uv_hub_info_list(nid)-&gt;pnode;</span>
 }
 
 /* Maximum possible number of blades */
<span class="p_add">+extern short uv_possible_blades;</span>
 static inline int uv_num_possible_blades(void)
 {
 	return uv_possible_blades;
<span class="p_chunk">@@ -578,9 +782,7 @@</span> <span class="p_context"> extern void uv_nmi_setup(void);</span>
 /* Newer SMM NMI handler, not present in all systems */
 #define UVH_NMI_MMRX		UVH_EVENT_OCCURRED0
 #define UVH_NMI_MMRX_CLEAR	UVH_EVENT_OCCURRED0_ALIAS
<span class="p_del">-#define UVH_NMI_MMRX_SHIFT	(is_uv1_hub() ? \</span>
<span class="p_del">-					UV1H_EVENT_OCCURRED0_EXTIO_INT0_SHFT :\</span>
<span class="p_del">-					UVXH_EVENT_OCCURRED0_EXTIO_INT0_SHFT)</span>
<span class="p_add">+#define UVH_NMI_MMRX_SHIFT	UVH_EVENT_OCCURRED0_EXTIO_INT0_SHFT</span>
 #define	UVH_NMI_MMRX_TYPE	&quot;EXTIO_INT0&quot;
 
 /* Non-zero indicates newer SMM NMI handler present */
<span class="p_chunk">@@ -622,9 +824,9 @@</span> <span class="p_context"> DECLARE_PER_CPU(struct uv_cpu_nmi_s, uv_cpu_nmi);</span>
 /* Update SCIR state */
 static inline void uv_set_scir_bits(unsigned char value)
 {
<span class="p_del">-	if (uv_hub_info-&gt;scir.state != value) {</span>
<span class="p_del">-		uv_hub_info-&gt;scir.state = value;</span>
<span class="p_del">-		uv_write_local_mmr8(uv_hub_info-&gt;scir.offset, value);</span>
<span class="p_add">+	if (uv_scir_info-&gt;state != value) {</span>
<span class="p_add">+		uv_scir_info-&gt;state = value;</span>
<span class="p_add">+		uv_write_local_mmr8(uv_scir_info-&gt;offset, value);</span>
 	}
 }
 
<span class="p_chunk">@@ -635,10 +837,10 @@</span> <span class="p_context"> static inline unsigned long uv_scir_offset(int apicid)</span>
 
 static inline void uv_set_cpu_scir_bits(int cpu, unsigned char value)
 {
<span class="p_del">-	if (uv_cpu_hub_info(cpu)-&gt;scir.state != value) {</span>
<span class="p_add">+	if (uv_cpu_scir_info(cpu)-&gt;state != value) {</span>
 		uv_write_global_mmr8(uv_cpu_to_pnode(cpu),
<span class="p_del">-				uv_cpu_hub_info(cpu)-&gt;scir.offset, value);</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;scir.state = value;</span>
<span class="p_add">+				uv_cpu_scir_info(cpu)-&gt;offset, value);</span>
<span class="p_add">+		uv_cpu_scir_info(cpu)-&gt;state = value;</span>
 	}
 }
 
<span class="p_chunk">@@ -666,10 +868,7 @@</span> <span class="p_context"> static inline void uv_hub_send_ipi(int pnode, int apicid, int vector)</span>
 
 /*
  * Get the minimum revision number of the hub chips within the partition.
<span class="p_del">- *     1 - UV1 rev 1.0 initial silicon</span>
<span class="p_del">- *     2 - UV1 rev 2.0 production silicon</span>
<span class="p_del">- *     3 - UV2 rev 1.0 initial silicon</span>
<span class="p_del">- *     5 - UV3 rev 1.0 initial silicon</span>
<span class="p_add">+ * (See UVx_HUB_REVISION_BASE above for specific values.)</span>
  */
 static inline int uv_get_min_hub_revision_id(void)
 {
<span class="p_header">diff --git a/arch/x86/include/asm/uv/uv_mmrs.h b/arch/x86/include/asm/uv/uv_mmrs.h</span>
<span class="p_header">index ddd8db6b6e70..548d684a7960 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/uv/uv_mmrs.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/uv/uv_mmrs.h</span>
<span class="p_chunk">@@ -5,7 +5,7 @@</span> <span class="p_context"></span>
  *
  * SGI UV MMR definitions
  *
<span class="p_del">- * Copyright (C) 2007-2014 Silicon Graphics, Inc. All rights reserved.</span>
<span class="p_add">+ * Copyright (C) 2007-2016 Silicon Graphics, Inc. All rights reserved.</span>
  */
 
 #ifndef _ASM_X86_UV_UV_MMRS_H
<span class="p_chunk">@@ -18,10 +18,11 @@</span> <span class="p_context"></span>
  * grouped by architecture types.
  *
  * UVH  - definitions common to all UV hub types.
<span class="p_del">- * UVXH - definitions common to all UV eXtended hub types (currently 2 &amp; 3).</span>
<span class="p_add">+ * UVXH - definitions common to all UV eXtended hub types (currently 2, 3, 4).</span>
  * UV1H - definitions specific to UV type 1 hub.
  * UV2H - definitions specific to UV type 2 hub.
  * UV3H - definitions specific to UV type 3 hub.
<span class="p_add">+ * UV4H - definitions specific to UV type 4 hub.</span>
  *
  * So in general, MMR addresses and structures are identical on all hubs types.
  * These MMRs are identified as:
<span class="p_chunk">@@ -32,19 +33,25 @@</span> <span class="p_context"></span>
  *		} s;
  *	};
  *
<span class="p_del">- * If the MMR exists on all hub types but have different addresses:</span>
<span class="p_add">+ * If the MMR exists on all hub types but have different addresses,</span>
<span class="p_add">+ * use a conditional operator to define the value at runtime.</span>
  *	#define UV1Hxxx	a
  *	#define UV2Hxxx	b
  *	#define UV3Hxxx	c
<span class="p_add">+ *	#define UV4Hxxx	d</span>
  *	#define UVHxxx	(is_uv1_hub() ? UV1Hxxx :
  *			(is_uv2_hub() ? UV2Hxxx :
<span class="p_del">- *					UV3Hxxx))</span>
<span class="p_add">+ *			(is_uv3_hub() ? UV3Hxxx :</span>
<span class="p_add">+ *					UV4Hxxx))</span>
  *
<span class="p_del">- * If the MMR exists on all hub types &gt; 1 but have different addresses:</span>
<span class="p_add">+ * If the MMR exists on all hub types &gt; 1 but have different addresses, the</span>
<span class="p_add">+ * variation using &quot;UVX&quot; as the prefix exists.</span>
  *	#define UV2Hxxx	b
  *	#define UV3Hxxx	c
<span class="p_del">- *	#define UVXHxxx (is_uv2_hub() ? UV2Hxxx :</span>
<span class="p_del">- *					UV3Hxxx))</span>
<span class="p_add">+ *	#define UV4Hxxx	d</span>
<span class="p_add">+ *	#define UVHxxx	(is_uv2_hub() ? UV2Hxxx :</span>
<span class="p_add">+ *			(is_uv3_hub() ? UV3Hxxx :</span>
<span class="p_add">+ *					UV4Hxxx))</span>
  *
  *	union uvh_xxx {
  *		unsigned long       v;
<span class="p_chunk">@@ -56,6 +63,8 @@</span> <span class="p_context"></span>
  *		} s2;
  *		struct uv3h_xxx_s {	 # Full UV3 definition (*)
  *		} s3;
<span class="p_add">+ *		struct uv4h_xxx_s {	 # Full UV4 definition (*)</span>
<span class="p_add">+ *		} s4;</span>
  *	};
  *		(* - if present and different than the common struct)
  *
<span class="p_chunk">@@ -73,7 +82,7 @@</span> <span class="p_context"></span>
  *		} sn;
  *	};
  *
<span class="p_del">- * (GEN Flags: mflags_opt= undefs=0 UV23=UVXH)</span>
<span class="p_add">+ * (GEN Flags: mflags_opt= undefs=function UV234=UVXH)</span>
  */
 
 #define UV_MMR_ENABLE		(1UL &lt;&lt; 63)
<span class="p_chunk">@@ -83,20 +92,36 @@</span> <span class="p_context"></span>
 #define UV2_HUB_PART_NUMBER_X	0x1111
 #define UV3_HUB_PART_NUMBER	0x9578
 #define UV3_HUB_PART_NUMBER_X	0x4321
<span class="p_add">+#define UV4_HUB_PART_NUMBER	0x99a1</span>
 
 /* Compat: Indicate which UV Hubs are supported. */
<span class="p_add">+#define UV1_HUB_IS_SUPPORTED	1</span>
 #define UV2_HUB_IS_SUPPORTED	1
 #define UV3_HUB_IS_SUPPORTED	1
<span class="p_add">+#define UV4_HUB_IS_SUPPORTED	1</span>
<span class="p_add">+</span>
<span class="p_add">+/* Error function to catch undefined references */</span>
<span class="p_add">+extern unsigned long uv_undefined(char *str);</span>
 
 /* ========================================================================= */
 /*                          UVH_BAU_DATA_BROADCAST                           */
 /* ========================================================================= */
 #define UVH_BAU_DATA_BROADCAST 0x61688UL
<span class="p_del">-#define UVH_BAU_DATA_BROADCAST_32 0x440</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV1H_BAU_DATA_BROADCAST_32 0x440</span>
<span class="p_add">+#define UV2H_BAU_DATA_BROADCAST_32 0x440</span>
<span class="p_add">+#define UV3H_BAU_DATA_BROADCAST_32 0x440</span>
<span class="p_add">+#define UV4H_BAU_DATA_BROADCAST_32 0x360</span>
<span class="p_add">+#define UVH_BAU_DATA_BROADCAST_32 (					\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_BAU_DATA_BROADCAST_32 :			\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_BAU_DATA_BROADCAST_32 :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_BAU_DATA_BROADCAST_32 :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_BAU_DATA_BROADCAST_32)</span>
 
 #define UVH_BAU_DATA_BROADCAST_ENABLE_SHFT		0
 #define UVH_BAU_DATA_BROADCAST_ENABLE_MASK		0x0000000000000001UL
 
<span class="p_add">+</span>
 union uvh_bau_data_broadcast_u {
 	unsigned long	v;
 	struct uvh_bau_data_broadcast_s {
<span class="p_chunk">@@ -109,7 +134,16 @@</span> <span class="p_context"> union uvh_bau_data_broadcast_u {</span>
 /*                           UVH_BAU_DATA_CONFIG                             */
 /* ========================================================================= */
 #define UVH_BAU_DATA_CONFIG 0x61680UL
<span class="p_del">-#define UVH_BAU_DATA_CONFIG_32 0x438</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV1H_BAU_DATA_CONFIG_32 0x438</span>
<span class="p_add">+#define UV2H_BAU_DATA_CONFIG_32 0x438</span>
<span class="p_add">+#define UV3H_BAU_DATA_CONFIG_32 0x438</span>
<span class="p_add">+#define UV4H_BAU_DATA_CONFIG_32 0x358</span>
<span class="p_add">+#define UVH_BAU_DATA_CONFIG_32 (					\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_BAU_DATA_CONFIG_32 :			\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_BAU_DATA_CONFIG_32 :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_BAU_DATA_CONFIG_32 :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_BAU_DATA_CONFIG_32)</span>
 
 #define UVH_BAU_DATA_CONFIG_VECTOR_SHFT			0
 #define UVH_BAU_DATA_CONFIG_DM_SHFT			8
<span class="p_chunk">@@ -128,6 +162,7 @@</span> <span class="p_context"> union uvh_bau_data_broadcast_u {</span>
 #define UVH_BAU_DATA_CONFIG_M_MASK			0x0000000000010000UL
 #define UVH_BAU_DATA_CONFIG_APIC_ID_MASK		0xffffffff00000000UL
 
<span class="p_add">+</span>
 union uvh_bau_data_config_u {
 	unsigned long	v;
 	struct uvh_bau_data_config_s {
<span class="p_chunk">@@ -266,7 +301,6 @@</span> <span class="p_context"> union uvh_bau_data_config_u {</span>
 #define UV1H_EVENT_OCCURRED0_BAU_DATA_MASK		0x0080000000000000UL
 #define UV1H_EVENT_OCCURRED0_POWER_MANAGEMENT_REQ_MASK	0x0100000000000000UL
 
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_QP_HCERR_SHFT		1</span>
 #define UVXH_EVENT_OCCURRED0_RH_HCERR_SHFT		2
 #define UVXH_EVENT_OCCURRED0_LH0_HCERR_SHFT		3
 #define UVXH_EVENT_OCCURRED0_LH1_HCERR_SHFT		4
<span class="p_chunk">@@ -275,55 +309,11 @@</span> <span class="p_context"> union uvh_bau_data_config_u {</span>
 #define UVXH_EVENT_OCCURRED0_NI0_HCERR_SHFT		7
 #define UVXH_EVENT_OCCURRED0_NI1_HCERR_SHFT		8
 #define UVXH_EVENT_OCCURRED0_LB_AOERR0_SHFT		9
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_QP_AOERR0_SHFT		10</span>
 #define UVXH_EVENT_OCCURRED0_LH0_AOERR0_SHFT		12
 #define UVXH_EVENT_OCCURRED0_LH1_AOERR0_SHFT		13
 #define UVXH_EVENT_OCCURRED0_GR0_AOERR0_SHFT		14
 #define UVXH_EVENT_OCCURRED0_GR1_AOERR0_SHFT		15
 #define UVXH_EVENT_OCCURRED0_XB_AOERR0_SHFT		16
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_RT_AOERR0_SHFT		17</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_NI0_AOERR0_SHFT		18</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_NI1_AOERR0_SHFT		19</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_AOERR1_SHFT		20</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_QP_AOERR1_SHFT		21</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_RH_AOERR1_SHFT		22</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LH0_AOERR1_SHFT		23</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LH1_AOERR1_SHFT		24</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_GR0_AOERR1_SHFT		25</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_GR1_AOERR1_SHFT		26</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_XB_AOERR1_SHFT		27</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_RT_AOERR1_SHFT		28</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_NI0_AOERR1_SHFT		29</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_NI1_AOERR1_SHFT		30</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_SYSTEM_SHUTDOWN_INT_SHFT	31</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_0_SHFT		32</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_1_SHFT		33</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_2_SHFT		34</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_3_SHFT		35</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_4_SHFT		36</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_5_SHFT		37</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_6_SHFT		38</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_7_SHFT		39</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_8_SHFT		40</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_9_SHFT		41</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_10_SHFT		42</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_11_SHFT		43</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_12_SHFT		44</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_13_SHFT		45</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_14_SHFT		46</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_15_SHFT		47</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_L1_NMI_INT_SHFT		48</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_STOP_CLOCK_SHFT		49</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_ASIC_TO_L1_SHFT		50</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_L1_TO_ASIC_SHFT		51</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LA_SEQ_TRIGGER_SHFT	52</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_IPI_INT_SHFT		53</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_EXTIO_INT0_SHFT		54</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_EXTIO_INT1_SHFT		55</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_EXTIO_INT2_SHFT		56</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_EXTIO_INT3_SHFT		57</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_PROFILE_INT_SHFT		58</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_QP_HCERR_MASK		0x0000000000000002UL</span>
 #define UVXH_EVENT_OCCURRED0_RH_HCERR_MASK		0x0000000000000004UL
 #define UVXH_EVENT_OCCURRED0_LH0_HCERR_MASK		0x0000000000000008UL
 #define UVXH_EVENT_OCCURRED0_LH1_HCERR_MASK		0x0000000000000010UL
<span class="p_chunk">@@ -332,54 +322,294 @@</span> <span class="p_context"> union uvh_bau_data_config_u {</span>
 #define UVXH_EVENT_OCCURRED0_NI0_HCERR_MASK		0x0000000000000080UL
 #define UVXH_EVENT_OCCURRED0_NI1_HCERR_MASK		0x0000000000000100UL
 #define UVXH_EVENT_OCCURRED0_LB_AOERR0_MASK		0x0000000000000200UL
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_QP_AOERR0_MASK		0x0000000000000400UL</span>
 #define UVXH_EVENT_OCCURRED0_LH0_AOERR0_MASK		0x0000000000001000UL
 #define UVXH_EVENT_OCCURRED0_LH1_AOERR0_MASK		0x0000000000002000UL
 #define UVXH_EVENT_OCCURRED0_GR0_AOERR0_MASK		0x0000000000004000UL
 #define UVXH_EVENT_OCCURRED0_GR1_AOERR0_MASK		0x0000000000008000UL
 #define UVXH_EVENT_OCCURRED0_XB_AOERR0_MASK		0x0000000000010000UL
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_RT_AOERR0_MASK		0x0000000000020000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_NI0_AOERR0_MASK		0x0000000000040000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_NI1_AOERR0_MASK		0x0000000000080000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_AOERR1_MASK		0x0000000000100000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_QP_AOERR1_MASK		0x0000000000200000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_RH_AOERR1_MASK		0x0000000000400000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LH0_AOERR1_MASK		0x0000000000800000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LH1_AOERR1_MASK		0x0000000001000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_GR0_AOERR1_MASK		0x0000000002000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_GR1_AOERR1_MASK		0x0000000004000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_XB_AOERR1_MASK		0x0000000008000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_RT_AOERR1_MASK		0x0000000010000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_NI0_AOERR1_MASK		0x0000000020000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_NI1_AOERR1_MASK		0x0000000040000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_SYSTEM_SHUTDOWN_INT_MASK	0x0000000080000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_0_MASK		0x0000000100000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_1_MASK		0x0000000200000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_2_MASK		0x0000000400000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_3_MASK		0x0000000800000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_4_MASK		0x0000001000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_5_MASK		0x0000002000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_6_MASK		0x0000004000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_7_MASK		0x0000008000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_8_MASK		0x0000010000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_9_MASK		0x0000020000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_10_MASK		0x0000040000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_11_MASK		0x0000080000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_12_MASK		0x0000100000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_13_MASK		0x0000200000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_14_MASK		0x0000400000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LB_IRQ_INT_15_MASK		0x0000800000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_L1_NMI_INT_MASK		0x0001000000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_STOP_CLOCK_MASK		0x0002000000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_ASIC_TO_L1_MASK		0x0004000000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_L1_TO_ASIC_MASK		0x0008000000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_LA_SEQ_TRIGGER_MASK	0x0010000000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_IPI_INT_MASK		0x0020000000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_EXTIO_INT0_MASK		0x0040000000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_EXTIO_INT1_MASK		0x0080000000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_EXTIO_INT2_MASK		0x0100000000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_EXTIO_INT3_MASK		0x0200000000000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED0_PROFILE_INT_MASK		0x0400000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_QP_HCERR_SHFT		1</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_QP_AOERR0_SHFT		10</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_RT_AOERR0_SHFT		17</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_NI0_AOERR0_SHFT		18</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_NI1_AOERR0_SHFT		19</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_AOERR1_SHFT		20</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_QP_AOERR1_SHFT		21</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_RH_AOERR1_SHFT		22</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LH0_AOERR1_SHFT		23</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LH1_AOERR1_SHFT		24</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_GR0_AOERR1_SHFT		25</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_GR1_AOERR1_SHFT		26</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_XB_AOERR1_SHFT		27</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_RT_AOERR1_SHFT		28</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_NI0_AOERR1_SHFT		29</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_NI1_AOERR1_SHFT		30</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_SYSTEM_SHUTDOWN_INT_SHFT	31</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_0_SHFT		32</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_1_SHFT		33</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_2_SHFT		34</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_3_SHFT		35</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_4_SHFT		36</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_5_SHFT		37</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_6_SHFT		38</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_7_SHFT		39</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_8_SHFT		40</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_9_SHFT		41</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_10_SHFT		42</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_11_SHFT		43</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_12_SHFT		44</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_13_SHFT		45</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_14_SHFT		46</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_15_SHFT		47</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_L1_NMI_INT_SHFT		48</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_STOP_CLOCK_SHFT		49</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_ASIC_TO_L1_SHFT		50</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_L1_TO_ASIC_SHFT		51</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LA_SEQ_TRIGGER_SHFT	52</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_IPI_INT_SHFT		53</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_EXTIO_INT0_SHFT		54</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_EXTIO_INT1_SHFT		55</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_EXTIO_INT2_SHFT		56</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_EXTIO_INT3_SHFT		57</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_PROFILE_INT_SHFT		58</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_QP_HCERR_MASK		0x0000000000000002UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_QP_AOERR0_MASK		0x0000000000000400UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_RT_AOERR0_MASK		0x0000000000020000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_NI0_AOERR0_MASK		0x0000000000040000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_NI1_AOERR0_MASK		0x0000000000080000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_AOERR1_MASK		0x0000000000100000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_QP_AOERR1_MASK		0x0000000000200000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_RH_AOERR1_MASK		0x0000000000400000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LH0_AOERR1_MASK		0x0000000000800000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LH1_AOERR1_MASK		0x0000000001000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_GR0_AOERR1_MASK		0x0000000002000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_GR1_AOERR1_MASK		0x0000000004000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_XB_AOERR1_MASK		0x0000000008000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_RT_AOERR1_MASK		0x0000000010000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_NI0_AOERR1_MASK		0x0000000020000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_NI1_AOERR1_MASK		0x0000000040000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_SYSTEM_SHUTDOWN_INT_MASK	0x0000000080000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_0_MASK		0x0000000100000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_1_MASK		0x0000000200000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_2_MASK		0x0000000400000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_3_MASK		0x0000000800000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_4_MASK		0x0000001000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_5_MASK		0x0000002000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_6_MASK		0x0000004000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_7_MASK		0x0000008000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_8_MASK		0x0000010000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_9_MASK		0x0000020000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_10_MASK		0x0000040000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_11_MASK		0x0000080000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_12_MASK		0x0000100000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_13_MASK		0x0000200000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_14_MASK		0x0000400000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LB_IRQ_INT_15_MASK		0x0000800000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_L1_NMI_INT_MASK		0x0001000000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_STOP_CLOCK_MASK		0x0002000000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_ASIC_TO_L1_MASK		0x0004000000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_L1_TO_ASIC_MASK		0x0008000000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_LA_SEQ_TRIGGER_MASK	0x0010000000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_IPI_INT_MASK		0x0020000000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_EXTIO_INT0_MASK		0x0040000000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_EXTIO_INT1_MASK		0x0080000000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_EXTIO_INT2_MASK		0x0100000000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_EXTIO_INT3_MASK		0x0200000000000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED0_PROFILE_INT_MASK		0x0400000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_QP_HCERR_SHFT		1</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_QP_AOERR0_SHFT		10</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_RT_AOERR0_SHFT		17</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_NI0_AOERR0_SHFT		18</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_NI1_AOERR0_SHFT		19</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_AOERR1_SHFT		20</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_QP_AOERR1_SHFT		21</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_RH_AOERR1_SHFT		22</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LH0_AOERR1_SHFT		23</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LH1_AOERR1_SHFT		24</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_GR0_AOERR1_SHFT		25</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_GR1_AOERR1_SHFT		26</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_XB_AOERR1_SHFT		27</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_RT_AOERR1_SHFT		28</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_NI0_AOERR1_SHFT		29</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_NI1_AOERR1_SHFT		30</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_SYSTEM_SHUTDOWN_INT_SHFT	31</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_0_SHFT		32</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_1_SHFT		33</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_2_SHFT		34</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_3_SHFT		35</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_4_SHFT		36</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_5_SHFT		37</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_6_SHFT		38</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_7_SHFT		39</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_8_SHFT		40</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_9_SHFT		41</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_10_SHFT		42</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_11_SHFT		43</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_12_SHFT		44</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_13_SHFT		45</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_14_SHFT		46</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_15_SHFT		47</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_L1_NMI_INT_SHFT		48</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_STOP_CLOCK_SHFT		49</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_ASIC_TO_L1_SHFT		50</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_L1_TO_ASIC_SHFT		51</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LA_SEQ_TRIGGER_SHFT	52</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_IPI_INT_SHFT		53</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_EXTIO_INT0_SHFT		54</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_EXTIO_INT1_SHFT		55</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_EXTIO_INT2_SHFT		56</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_EXTIO_INT3_SHFT		57</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_PROFILE_INT_SHFT		58</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_QP_HCERR_MASK		0x0000000000000002UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_QP_AOERR0_MASK		0x0000000000000400UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_RT_AOERR0_MASK		0x0000000000020000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_NI0_AOERR0_MASK		0x0000000000040000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_NI1_AOERR0_MASK		0x0000000000080000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_AOERR1_MASK		0x0000000000100000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_QP_AOERR1_MASK		0x0000000000200000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_RH_AOERR1_MASK		0x0000000000400000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LH0_AOERR1_MASK		0x0000000000800000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LH1_AOERR1_MASK		0x0000000001000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_GR0_AOERR1_MASK		0x0000000002000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_GR1_AOERR1_MASK		0x0000000004000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_XB_AOERR1_MASK		0x0000000008000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_RT_AOERR1_MASK		0x0000000010000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_NI0_AOERR1_MASK		0x0000000020000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_NI1_AOERR1_MASK		0x0000000040000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_SYSTEM_SHUTDOWN_INT_MASK	0x0000000080000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_0_MASK		0x0000000100000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_1_MASK		0x0000000200000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_2_MASK		0x0000000400000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_3_MASK		0x0000000800000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_4_MASK		0x0000001000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_5_MASK		0x0000002000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_6_MASK		0x0000004000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_7_MASK		0x0000008000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_8_MASK		0x0000010000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_9_MASK		0x0000020000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_10_MASK		0x0000040000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_11_MASK		0x0000080000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_12_MASK		0x0000100000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_13_MASK		0x0000200000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_14_MASK		0x0000400000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LB_IRQ_INT_15_MASK		0x0000800000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_L1_NMI_INT_MASK		0x0001000000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_STOP_CLOCK_MASK		0x0002000000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_ASIC_TO_L1_MASK		0x0004000000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_L1_TO_ASIC_MASK		0x0008000000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_LA_SEQ_TRIGGER_MASK	0x0010000000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_IPI_INT_MASK		0x0020000000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_EXTIO_INT0_MASK		0x0040000000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_EXTIO_INT1_MASK		0x0080000000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_EXTIO_INT2_MASK		0x0100000000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_EXTIO_INT3_MASK		0x0200000000000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED0_PROFILE_INT_MASK		0x0400000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_KT_HCERR_SHFT		1</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_KT_AOERR0_SHFT		10</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RTQ0_AOERR0_SHFT		17</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RTQ1_AOERR0_SHFT		18</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RTQ2_AOERR0_SHFT		19</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RTQ3_AOERR0_SHFT		20</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_NI0_AOERR0_SHFT		21</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_NI1_AOERR0_SHFT		22</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_AOERR1_SHFT		23</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_KT_AOERR1_SHFT		24</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RH_AOERR1_SHFT		25</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LH0_AOERR1_SHFT		26</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LH1_AOERR1_SHFT		27</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_GR0_AOERR1_SHFT		28</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_GR1_AOERR1_SHFT		29</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_XB_AOERR1_SHFT		30</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RTQ0_AOERR1_SHFT		31</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RTQ1_AOERR1_SHFT		32</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RTQ2_AOERR1_SHFT		33</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RTQ3_AOERR1_SHFT		34</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_NI0_AOERR1_SHFT		35</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_NI1_AOERR1_SHFT		36</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_SYSTEM_SHUTDOWN_INT_SHFT	37</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_0_SHFT		38</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_1_SHFT		39</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_2_SHFT		40</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_3_SHFT		41</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_4_SHFT		42</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_5_SHFT		43</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_6_SHFT		44</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_7_SHFT		45</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_8_SHFT		46</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_9_SHFT		47</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_10_SHFT		48</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_11_SHFT		49</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_12_SHFT		50</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_13_SHFT		51</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_14_SHFT		52</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_15_SHFT		53</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_L1_NMI_INT_SHFT		54</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_STOP_CLOCK_SHFT		55</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_ASIC_TO_L1_SHFT		56</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_L1_TO_ASIC_SHFT		57</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LA_SEQ_TRIGGER_SHFT	58</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_IPI_INT_SHFT		59</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_EXTIO_INT0_SHFT		60</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_EXTIO_INT1_SHFT		61</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_EXTIO_INT2_SHFT		62</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_EXTIO_INT3_SHFT		63</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_KT_HCERR_MASK		0x0000000000000002UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_KT_AOERR0_MASK		0x0000000000000400UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RTQ0_AOERR0_MASK		0x0000000000020000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RTQ1_AOERR0_MASK		0x0000000000040000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RTQ2_AOERR0_MASK		0x0000000000080000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RTQ3_AOERR0_MASK		0x0000000000100000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_NI0_AOERR0_MASK		0x0000000000200000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_NI1_AOERR0_MASK		0x0000000000400000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_AOERR1_MASK		0x0000000000800000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_KT_AOERR1_MASK		0x0000000001000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RH_AOERR1_MASK		0x0000000002000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LH0_AOERR1_MASK		0x0000000004000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LH1_AOERR1_MASK		0x0000000008000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_GR0_AOERR1_MASK		0x0000000010000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_GR1_AOERR1_MASK		0x0000000020000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_XB_AOERR1_MASK		0x0000000040000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RTQ0_AOERR1_MASK		0x0000000080000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RTQ1_AOERR1_MASK		0x0000000100000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RTQ2_AOERR1_MASK		0x0000000200000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_RTQ3_AOERR1_MASK		0x0000000400000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_NI0_AOERR1_MASK		0x0000000800000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_NI1_AOERR1_MASK		0x0000001000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_SYSTEM_SHUTDOWN_INT_MASK	0x0000002000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_0_MASK		0x0000004000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_1_MASK		0x0000008000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_2_MASK		0x0000010000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_3_MASK		0x0000020000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_4_MASK		0x0000040000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_5_MASK		0x0000080000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_6_MASK		0x0000100000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_7_MASK		0x0000200000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_8_MASK		0x0000400000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_9_MASK		0x0000800000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_10_MASK		0x0001000000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_11_MASK		0x0002000000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_12_MASK		0x0004000000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_13_MASK		0x0008000000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_14_MASK		0x0010000000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LB_IRQ_INT_15_MASK		0x0020000000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_L1_NMI_INT_MASK		0x0040000000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_STOP_CLOCK_MASK		0x0080000000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_ASIC_TO_L1_MASK		0x0100000000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_L1_TO_ASIC_MASK		0x0200000000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_LA_SEQ_TRIGGER_MASK	0x0400000000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_IPI_INT_MASK		0x0800000000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_EXTIO_INT0_MASK		0x1000000000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_EXTIO_INT1_MASK		0x2000000000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_EXTIO_INT2_MASK		0x4000000000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED0_EXTIO_INT3_MASK		0x8000000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UVH_EVENT_OCCURRED0_EXTIO_INT0_SHFT (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_EVENT_OCCURRED0_EXTIO_INT0_SHFT :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_EVENT_OCCURRED0_EXTIO_INT0_SHFT :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_EVENT_OCCURRED0_EXTIO_INT0_SHFT :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_EVENT_OCCURRED0_EXTIO_INT0_SHFT)</span>
 
 union uvh_event_occurred0_u {
 	unsigned long	v;
<span class="p_chunk">@@ -391,7 +621,7 @@</span> <span class="p_context"> union uvh_event_occurred0_u {</span>
 	} s;
 	struct uvxh_event_occurred0_s {
 		unsigned long	lb_hcerr:1;			/* RW */
<span class="p_del">-		unsigned long	qp_hcerr:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_1:1;</span>
 		unsigned long	rh_hcerr:1;			/* RW */
 		unsigned long	lh0_hcerr:1;			/* RW */
 		unsigned long	lh1_hcerr:1;			/* RW */
<span class="p_chunk">@@ -400,25 +630,51 @@</span> <span class="p_context"> union uvh_event_occurred0_u {</span>
 		unsigned long	ni0_hcerr:1;			/* RW */
 		unsigned long	ni1_hcerr:1;			/* RW */
 		unsigned long	lb_aoerr0:1;			/* RW */
<span class="p_del">-		unsigned long	qp_aoerr0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_10:1;</span>
 		unsigned long	rh_aoerr0:1;			/* RW */
 		unsigned long	lh0_aoerr0:1;			/* RW */
 		unsigned long	lh1_aoerr0:1;			/* RW */
 		unsigned long	gr0_aoerr0:1;			/* RW */
 		unsigned long	gr1_aoerr0:1;			/* RW */
 		unsigned long	xb_aoerr0:1;			/* RW */
<span class="p_del">-		unsigned long	rt_aoerr0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_17_63:47;</span>
<span class="p_add">+	} sx;</span>
<span class="p_add">+	struct uv4h_event_occurred0_s {</span>
<span class="p_add">+		unsigned long	lb_hcerr:1;			/* RW */</span>
<span class="p_add">+		unsigned long	kt_hcerr:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rh_hcerr:1;			/* RW */</span>
<span class="p_add">+		unsigned long	lh0_hcerr:1;			/* RW */</span>
<span class="p_add">+		unsigned long	lh1_hcerr:1;			/* RW */</span>
<span class="p_add">+		unsigned long	gr0_hcerr:1;			/* RW */</span>
<span class="p_add">+		unsigned long	gr1_hcerr:1;			/* RW */</span>
<span class="p_add">+		unsigned long	ni0_hcerr:1;			/* RW */</span>
<span class="p_add">+		unsigned long	ni1_hcerr:1;			/* RW */</span>
<span class="p_add">+		unsigned long	lb_aoerr0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	kt_aoerr0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rh_aoerr0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	lh0_aoerr0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	lh1_aoerr0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	gr0_aoerr0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	gr1_aoerr0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	xb_aoerr0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtq0_aoerr0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtq1_aoerr0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtq2_aoerr0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtq3_aoerr0:1;			/* RW */</span>
 		unsigned long	ni0_aoerr0:1;			/* RW */
 		unsigned long	ni1_aoerr0:1;			/* RW */
 		unsigned long	lb_aoerr1:1;			/* RW */
<span class="p_del">-		unsigned long	qp_aoerr1:1;			/* RW */</span>
<span class="p_add">+		unsigned long	kt_aoerr1:1;			/* RW */</span>
 		unsigned long	rh_aoerr1:1;			/* RW */
 		unsigned long	lh0_aoerr1:1;			/* RW */
 		unsigned long	lh1_aoerr1:1;			/* RW */
 		unsigned long	gr0_aoerr1:1;			/* RW */
 		unsigned long	gr1_aoerr1:1;			/* RW */
 		unsigned long	xb_aoerr1:1;			/* RW */
<span class="p_del">-		unsigned long	rt_aoerr1:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtq0_aoerr1:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtq1_aoerr1:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtq2_aoerr1:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtq3_aoerr1:1;			/* RW */</span>
 		unsigned long	ni0_aoerr1:1;			/* RW */
 		unsigned long	ni1_aoerr1:1;			/* RW */
 		unsigned long	system_shutdown_int:1;		/* RW */
<span class="p_chunk">@@ -448,9 +704,7 @@</span> <span class="p_context"> union uvh_event_occurred0_u {</span>
 		unsigned long	extio_int1:1;			/* RW */
 		unsigned long	extio_int2:1;			/* RW */
 		unsigned long	extio_int3:1;			/* RW */
<span class="p_del">-		unsigned long	profile_int:1;			/* RW */</span>
<span class="p_del">-		unsigned long	rsvd_59_63:5;</span>
<span class="p_del">-	} sx;</span>
<span class="p_add">+	} s4;</span>
 };
 
 /* ========================================================================= */
<span class="p_chunk">@@ -464,11 +718,21 @@</span> <span class="p_context"> union uvh_event_occurred0_u {</span>
 /*                         UVH_EXTIO_INT0_BROADCAST                          */
 /* ========================================================================= */
 #define UVH_EXTIO_INT0_BROADCAST 0x61448UL
<span class="p_del">-#define UVH_EXTIO_INT0_BROADCAST_32 0x3f0</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV1H_EXTIO_INT0_BROADCAST_32 0x3f0</span>
<span class="p_add">+#define UV2H_EXTIO_INT0_BROADCAST_32 0x3f0</span>
<span class="p_add">+#define UV3H_EXTIO_INT0_BROADCAST_32 0x3f0</span>
<span class="p_add">+#define UV4H_EXTIO_INT0_BROADCAST_32 0x310</span>
<span class="p_add">+#define UVH_EXTIO_INT0_BROADCAST_32 (					\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_EXTIO_INT0_BROADCAST_32 :			\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_EXTIO_INT0_BROADCAST_32 :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_EXTIO_INT0_BROADCAST_32 :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_EXTIO_INT0_BROADCAST_32)</span>
 
 #define UVH_EXTIO_INT0_BROADCAST_ENABLE_SHFT		0
 #define UVH_EXTIO_INT0_BROADCAST_ENABLE_MASK		0x0000000000000001UL
 
<span class="p_add">+</span>
 union uvh_extio_int0_broadcast_u {
 	unsigned long	v;
 	struct uvh_extio_int0_broadcast_s {
<span class="p_chunk">@@ -499,6 +763,7 @@</span> <span class="p_context"> union uvh_extio_int0_broadcast_u {</span>
 #define UVH_GR0_TLB_INT0_CONFIG_M_MASK			0x0000000000010000UL
 #define UVH_GR0_TLB_INT0_CONFIG_APIC_ID_MASK		0xffffffff00000000UL
 
<span class="p_add">+</span>
 union uvh_gr0_tlb_int0_config_u {
 	unsigned long	v;
 	struct uvh_gr0_tlb_int0_config_s {
<span class="p_chunk">@@ -537,6 +802,7 @@</span> <span class="p_context"> union uvh_gr0_tlb_int0_config_u {</span>
 #define UVH_GR0_TLB_INT1_CONFIG_M_MASK			0x0000000000010000UL
 #define UVH_GR0_TLB_INT1_CONFIG_APIC_ID_MASK		0xffffffff00000000UL
 
<span class="p_add">+</span>
 union uvh_gr0_tlb_int1_config_u {
 	unsigned long	v;
 	struct uvh_gr0_tlb_int1_config_s {
<span class="p_chunk">@@ -559,19 +825,18 @@</span> <span class="p_context"> union uvh_gr0_tlb_int1_config_u {</span>
 #define UV1H_GR0_TLB_MMR_CONTROL 0x401080UL
 #define UV2H_GR0_TLB_MMR_CONTROL 0xc01080UL
 #define UV3H_GR0_TLB_MMR_CONTROL 0xc01080UL
<span class="p_del">-#define UVH_GR0_TLB_MMR_CONTROL						\</span>
<span class="p_del">-		(is_uv1_hub() ? UV1H_GR0_TLB_MMR_CONTROL :		\</span>
<span class="p_del">-		(is_uv2_hub() ? UV2H_GR0_TLB_MMR_CONTROL :		\</span>
<span class="p_del">-				UV3H_GR0_TLB_MMR_CONTROL))</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL 0x601080UL</span>
<span class="p_add">+#define UVH_GR0_TLB_MMR_CONTROL (					\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_GR0_TLB_MMR_CONTROL :			\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_GR0_TLB_MMR_CONTROL :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_GR0_TLB_MMR_CONTROL :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_GR0_TLB_MMR_CONTROL)</span>
 
 #define UVH_GR0_TLB_MMR_CONTROL_INDEX_SHFT		0
<span class="p_del">-#define UVH_GR0_TLB_MMR_CONTROL_MEM_SEL_SHFT		12</span>
 #define UVH_GR0_TLB_MMR_CONTROL_AUTO_VALID_EN_SHFT	16
 #define UVH_GR0_TLB_MMR_CONTROL_MMR_HASH_INDEX_EN_SHFT	20
 #define UVH_GR0_TLB_MMR_CONTROL_MMR_WRITE_SHFT		30
 #define UVH_GR0_TLB_MMR_CONTROL_MMR_READ_SHFT		31
<span class="p_del">-#define UVH_GR0_TLB_MMR_CONTROL_INDEX_MASK		0x0000000000000fffUL</span>
<span class="p_del">-#define UVH_GR0_TLB_MMR_CONTROL_MEM_SEL_MASK		0x0000000000003000UL</span>
 #define UVH_GR0_TLB_MMR_CONTROL_AUTO_VALID_EN_MASK	0x0000000000010000UL
 #define UVH_GR0_TLB_MMR_CONTROL_MMR_HASH_INDEX_EN_MASK	0x0000000000100000UL
 #define UVH_GR0_TLB_MMR_CONTROL_MMR_WRITE_MASK		0x0000000040000000UL
<span class="p_chunk">@@ -601,14 +866,11 @@</span> <span class="p_context"> union uvh_gr0_tlb_int1_config_u {</span>
 #define UV1H_GR0_TLB_MMR_CONTROL_MMR_INJ_TLBLRUV_MASK	0x1000000000000000UL
 
 #define UVXH_GR0_TLB_MMR_CONTROL_INDEX_SHFT		0
<span class="p_del">-#define UVXH_GR0_TLB_MMR_CONTROL_MEM_SEL_SHFT		12</span>
 #define UVXH_GR0_TLB_MMR_CONTROL_AUTO_VALID_EN_SHFT	16
 #define UVXH_GR0_TLB_MMR_CONTROL_MMR_HASH_INDEX_EN_SHFT	20
 #define UVXH_GR0_TLB_MMR_CONTROL_MMR_WRITE_SHFT		30
 #define UVXH_GR0_TLB_MMR_CONTROL_MMR_READ_SHFT		31
 #define UVXH_GR0_TLB_MMR_CONTROL_MMR_OP_DONE_SHFT	32
<span class="p_del">-#define UVXH_GR0_TLB_MMR_CONTROL_INDEX_MASK		0x0000000000000fffUL</span>
<span class="p_del">-#define UVXH_GR0_TLB_MMR_CONTROL_MEM_SEL_MASK		0x0000000000003000UL</span>
 #define UVXH_GR0_TLB_MMR_CONTROL_AUTO_VALID_EN_MASK	0x0000000000010000UL
 #define UVXH_GR0_TLB_MMR_CONTROL_MMR_HASH_INDEX_EN_MASK	0x0000000000100000UL
 #define UVXH_GR0_TLB_MMR_CONTROL_MMR_WRITE_MASK		0x0000000040000000UL
<span class="p_chunk">@@ -651,12 +913,45 @@</span> <span class="p_context"> union uvh_gr0_tlb_int1_config_u {</span>
 #define UV3H_GR0_TLB_MMR_CONTROL_MMR_READ_MASK		0x0000000080000000UL
 #define UV3H_GR0_TLB_MMR_CONTROL_MMR_OP_DONE_MASK	0x0000000100000000UL
 
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_INDEX_SHFT		0</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_MEM_SEL_SHFT		13</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_AUTO_VALID_EN_SHFT	16</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_MMR_HASH_INDEX_EN_SHFT	20</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_ECC_SEL_SHFT		21</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_MMR_WRITE_SHFT		30</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_MMR_READ_SHFT		31</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_MMR_OP_DONE_SHFT	32</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_PAGE_SIZE_SHFT		59</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_INDEX_MASK		0x0000000000001fffUL</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_MEM_SEL_MASK		0x0000000000006000UL</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_AUTO_VALID_EN_MASK	0x0000000000010000UL</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_MMR_HASH_INDEX_EN_MASK	0x0000000000100000UL</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_ECC_SEL_MASK		0x0000000000200000UL</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_MMR_WRITE_MASK		0x0000000040000000UL</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_MMR_READ_MASK		0x0000000080000000UL</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_MMR_OP_DONE_MASK	0x0000000100000000UL</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_CONTROL_PAGE_SIZE_MASK		0xf800000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UVH_GR0_TLB_MMR_CONTROL_INDEX_MASK (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_GR0_TLB_MMR_CONTROL_INDEX_MASK :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_GR0_TLB_MMR_CONTROL_INDEX_MASK :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_GR0_TLB_MMR_CONTROL_INDEX_MASK :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_GR0_TLB_MMR_CONTROL_INDEX_MASK)</span>
<span class="p_add">+#define UVH_GR0_TLB_MMR_CONTROL_MEM_SEL_MASK (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_GR0_TLB_MMR_CONTROL_MEM_SEL_MASK :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_GR0_TLB_MMR_CONTROL_MEM_SEL_MASK :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_GR0_TLB_MMR_CONTROL_MEM_SEL_MASK :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_GR0_TLB_MMR_CONTROL_MEM_SEL_MASK)</span>
<span class="p_add">+#define UVH_GR0_TLB_MMR_CONTROL_MEM_SEL_SHFT (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_GR0_TLB_MMR_CONTROL_MEM_SEL_SHFT :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_GR0_TLB_MMR_CONTROL_MEM_SEL_SHFT :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_GR0_TLB_MMR_CONTROL_MEM_SEL_SHFT :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_GR0_TLB_MMR_CONTROL_MEM_SEL_SHFT)</span>
<span class="p_add">+</span>
 union uvh_gr0_tlb_mmr_control_u {
 	unsigned long	v;
 	struct uvh_gr0_tlb_mmr_control_s {
<span class="p_del">-		unsigned long	index:12;			/* RW */</span>
<span class="p_del">-		unsigned long	mem_sel:2;			/* RW */</span>
<span class="p_del">-		unsigned long	rsvd_14_15:2;</span>
<span class="p_add">+		unsigned long	rsvd_0_15:16;</span>
 		unsigned long	auto_valid_en:1;		/* RW */
 		unsigned long	rsvd_17_19:3;
 		unsigned long	mmr_hash_index_en:1;		/* RW */
<span class="p_chunk">@@ -690,9 +985,7 @@</span> <span class="p_context"> union uvh_gr0_tlb_mmr_control_u {</span>
 		unsigned long	rsvd_61_63:3;
 	} s1;
 	struct uvxh_gr0_tlb_mmr_control_s {
<span class="p_del">-		unsigned long	index:12;			/* RW */</span>
<span class="p_del">-		unsigned long	mem_sel:2;			/* RW */</span>
<span class="p_del">-		unsigned long	rsvd_14_15:2;</span>
<span class="p_add">+		unsigned long	rsvd_0_15:16;</span>
 		unsigned long	auto_valid_en:1;		/* RW */
 		unsigned long	rsvd_17_19:3;
 		unsigned long	mmr_hash_index_en:1;		/* RW */
<span class="p_chunk">@@ -703,8 +996,7 @@</span> <span class="p_context"> union uvh_gr0_tlb_mmr_control_u {</span>
 		unsigned long	rsvd_33_47:15;
 		unsigned long	rsvd_48:1;
 		unsigned long	rsvd_49_51:3;
<span class="p_del">-		unsigned long	rsvd_52:1;</span>
<span class="p_del">-		unsigned long	rsvd_53_63:11;</span>
<span class="p_add">+		unsigned long	rsvd_52_63:12;</span>
 	} sx;
 	struct uv2h_gr0_tlb_mmr_control_s {
 		unsigned long	index:12;			/* RW */
<span class="p_chunk">@@ -741,6 +1033,24 @@</span> <span class="p_context"> union uvh_gr0_tlb_mmr_control_u {</span>
 		unsigned long	undef_52:1;			/* Undefined */
 		unsigned long	rsvd_53_63:11;
 	} s3;
<span class="p_add">+	struct uv4h_gr0_tlb_mmr_control_s {</span>
<span class="p_add">+		unsigned long	index:13;			/* RW */</span>
<span class="p_add">+		unsigned long	mem_sel:2;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_15:1;</span>
<span class="p_add">+		unsigned long	auto_valid_en:1;		/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_17_19:3;</span>
<span class="p_add">+		unsigned long	mmr_hash_index_en:1;		/* RW */</span>
<span class="p_add">+		unsigned long	ecc_sel:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_22_29:8;</span>
<span class="p_add">+		unsigned long	mmr_write:1;			/* WP */</span>
<span class="p_add">+		unsigned long	mmr_read:1;			/* WP */</span>
<span class="p_add">+		unsigned long	mmr_op_done:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_33_47:15;</span>
<span class="p_add">+		unsigned long	undef_48:1;			/* Undefined */</span>
<span class="p_add">+		unsigned long	rsvd_49_51:3;</span>
<span class="p_add">+		unsigned long	rsvd_52_58:7;</span>
<span class="p_add">+		unsigned long	page_size:5;			/* RW */</span>
<span class="p_add">+	} s4;</span>
 };
 
 /* ========================================================================= */
<span class="p_chunk">@@ -749,19 +1059,14 @@</span> <span class="p_context"> union uvh_gr0_tlb_mmr_control_u {</span>
 #define UV1H_GR0_TLB_MMR_READ_DATA_HI 0x4010a0UL
 #define UV2H_GR0_TLB_MMR_READ_DATA_HI 0xc010a0UL
 #define UV3H_GR0_TLB_MMR_READ_DATA_HI 0xc010a0UL
<span class="p_del">-#define UVH_GR0_TLB_MMR_READ_DATA_HI					\</span>
<span class="p_del">-		(is_uv1_hub() ? UV1H_GR0_TLB_MMR_READ_DATA_HI :		\</span>
<span class="p_del">-		(is_uv2_hub() ? UV2H_GR0_TLB_MMR_READ_DATA_HI :		\</span>
<span class="p_del">-				UV3H_GR0_TLB_MMR_READ_DATA_HI))</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_HI 0x6010a0UL</span>
<span class="p_add">+#define UVH_GR0_TLB_MMR_READ_DATA_HI (					\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_GR0_TLB_MMR_READ_DATA_HI :			\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_GR0_TLB_MMR_READ_DATA_HI :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_GR0_TLB_MMR_READ_DATA_HI :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_GR0_TLB_MMR_READ_DATA_HI)</span>
 
 #define UVH_GR0_TLB_MMR_READ_DATA_HI_PFN_SHFT		0
<span class="p_del">-#define UVH_GR0_TLB_MMR_READ_DATA_HI_GAA_SHFT		41</span>
<span class="p_del">-#define UVH_GR0_TLB_MMR_READ_DATA_HI_DIRTY_SHFT		43</span>
<span class="p_del">-#define UVH_GR0_TLB_MMR_READ_DATA_HI_LARGER_SHFT	44</span>
<span class="p_del">-#define UVH_GR0_TLB_MMR_READ_DATA_HI_PFN_MASK		0x000001ffffffffffUL</span>
<span class="p_del">-#define UVH_GR0_TLB_MMR_READ_DATA_HI_GAA_MASK		0x0000060000000000UL</span>
<span class="p_del">-#define UVH_GR0_TLB_MMR_READ_DATA_HI_DIRTY_MASK		0x0000080000000000UL</span>
<span class="p_del">-#define UVH_GR0_TLB_MMR_READ_DATA_HI_LARGER_MASK	0x0000100000000000UL</span>
 
 #define UV1H_GR0_TLB_MMR_READ_DATA_HI_PFN_SHFT		0
 #define UV1H_GR0_TLB_MMR_READ_DATA_HI_GAA_SHFT		41
<span class="p_chunk">@@ -773,13 +1078,6 @@</span> <span class="p_context"> union uvh_gr0_tlb_mmr_control_u {</span>
 #define UV1H_GR0_TLB_MMR_READ_DATA_HI_LARGER_MASK	0x0000100000000000UL
 
 #define UVXH_GR0_TLB_MMR_READ_DATA_HI_PFN_SHFT		0
<span class="p_del">-#define UVXH_GR0_TLB_MMR_READ_DATA_HI_GAA_SHFT		41</span>
<span class="p_del">-#define UVXH_GR0_TLB_MMR_READ_DATA_HI_DIRTY_SHFT	43</span>
<span class="p_del">-#define UVXH_GR0_TLB_MMR_READ_DATA_HI_LARGER_SHFT	44</span>
<span class="p_del">-#define UVXH_GR0_TLB_MMR_READ_DATA_HI_PFN_MASK		0x000001ffffffffffUL</span>
<span class="p_del">-#define UVXH_GR0_TLB_MMR_READ_DATA_HI_GAA_MASK		0x0000060000000000UL</span>
<span class="p_del">-#define UVXH_GR0_TLB_MMR_READ_DATA_HI_DIRTY_MASK	0x0000080000000000UL</span>
<span class="p_del">-#define UVXH_GR0_TLB_MMR_READ_DATA_HI_LARGER_MASK	0x0000100000000000UL</span>
 
 #define UV2H_GR0_TLB_MMR_READ_DATA_HI_PFN_SHFT		0
 #define UV2H_GR0_TLB_MMR_READ_DATA_HI_GAA_SHFT		41
<span class="p_chunk">@@ -803,15 +1101,24 @@</span> <span class="p_context"> union uvh_gr0_tlb_mmr_control_u {</span>
 #define UV3H_GR0_TLB_MMR_READ_DATA_HI_AA_EXT_MASK	0x0000200000000000UL
 #define UV3H_GR0_TLB_MMR_READ_DATA_HI_WAY_ECC_MASK	0xff80000000000000UL
 
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_HI_PFN_SHFT		0</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_HI_PNID_SHFT		34</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_HI_GAA_SHFT		49</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_HI_DIRTY_SHFT	51</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_HI_LARGER_SHFT	52</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_HI_AA_EXT_SHFT	53</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_HI_WAY_ECC_SHFT	55</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_HI_PFN_MASK		0x00000003ffffffffUL</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_HI_PNID_MASK		0x0001fffc00000000UL</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_HI_GAA_MASK		0x0006000000000000UL</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_HI_DIRTY_MASK	0x0008000000000000UL</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_HI_LARGER_MASK	0x0010000000000000UL</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_HI_AA_EXT_MASK	0x0020000000000000UL</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_HI_WAY_ECC_MASK	0xff80000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
 union uvh_gr0_tlb_mmr_read_data_hi_u {
 	unsigned long	v;
<span class="p_del">-	struct uvh_gr0_tlb_mmr_read_data_hi_s {</span>
<span class="p_del">-		unsigned long	pfn:41;				/* RO */</span>
<span class="p_del">-		unsigned long	gaa:2;				/* RO */</span>
<span class="p_del">-		unsigned long	dirty:1;			/* RO */</span>
<span class="p_del">-		unsigned long	larger:1;			/* RO */</span>
<span class="p_del">-		unsigned long	rsvd_45_63:19;</span>
<span class="p_del">-	} s;</span>
 	struct uv1h_gr0_tlb_mmr_read_data_hi_s {
 		unsigned long	pfn:41;				/* RO */
 		unsigned long	gaa:2;				/* RO */
<span class="p_chunk">@@ -819,13 +1126,6 @@</span> <span class="p_context"> union uvh_gr0_tlb_mmr_read_data_hi_u {</span>
 		unsigned long	larger:1;			/* RO */
 		unsigned long	rsvd_45_63:19;
 	} s1;
<span class="p_del">-	struct uvxh_gr0_tlb_mmr_read_data_hi_s {</span>
<span class="p_del">-		unsigned long	pfn:41;				/* RO */</span>
<span class="p_del">-		unsigned long	gaa:2;				/* RO */</span>
<span class="p_del">-		unsigned long	dirty:1;			/* RO */</span>
<span class="p_del">-		unsigned long	larger:1;			/* RO */</span>
<span class="p_del">-		unsigned long	rsvd_45_63:19;</span>
<span class="p_del">-	} sx;</span>
 	struct uv2h_gr0_tlb_mmr_read_data_hi_s {
 		unsigned long	pfn:41;				/* RO */
 		unsigned long	gaa:2;				/* RO */
<span class="p_chunk">@@ -842,6 +1142,16 @@</span> <span class="p_context"> union uvh_gr0_tlb_mmr_read_data_hi_u {</span>
 		unsigned long	undef_46_54:9;			/* Undefined */
 		unsigned long	way_ecc:9;			/* RO */
 	} s3;
<span class="p_add">+	struct uv4h_gr0_tlb_mmr_read_data_hi_s {</span>
<span class="p_add">+		unsigned long	pfn:34;				/* RO */</span>
<span class="p_add">+		unsigned long	pnid:15;			/* RO */</span>
<span class="p_add">+		unsigned long	gaa:2;				/* RO */</span>
<span class="p_add">+		unsigned long	dirty:1;			/* RO */</span>
<span class="p_add">+		unsigned long	larger:1;			/* RO */</span>
<span class="p_add">+		unsigned long	aa_ext:1;			/* RO */</span>
<span class="p_add">+		unsigned long	undef_54:1;			/* Undefined */</span>
<span class="p_add">+		unsigned long	way_ecc:9;			/* RO */</span>
<span class="p_add">+	} s4;</span>
 };
 
 /* ========================================================================= */
<span class="p_chunk">@@ -850,10 +1160,12 @@</span> <span class="p_context"> union uvh_gr0_tlb_mmr_read_data_hi_u {</span>
 #define UV1H_GR0_TLB_MMR_READ_DATA_LO 0x4010a8UL
 #define UV2H_GR0_TLB_MMR_READ_DATA_LO 0xc010a8UL
 #define UV3H_GR0_TLB_MMR_READ_DATA_LO 0xc010a8UL
<span class="p_del">-#define UVH_GR0_TLB_MMR_READ_DATA_LO					\</span>
<span class="p_del">-		(is_uv1_hub() ? UV1H_GR0_TLB_MMR_READ_DATA_LO :		\</span>
<span class="p_del">-		(is_uv2_hub() ? UV2H_GR0_TLB_MMR_READ_DATA_LO :		\</span>
<span class="p_del">-				UV3H_GR0_TLB_MMR_READ_DATA_LO))</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_LO 0x6010a8UL</span>
<span class="p_add">+#define UVH_GR0_TLB_MMR_READ_DATA_LO (					\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_GR0_TLB_MMR_READ_DATA_LO :			\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_GR0_TLB_MMR_READ_DATA_LO :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_GR0_TLB_MMR_READ_DATA_LO :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_GR0_TLB_MMR_READ_DATA_LO)</span>
 
 #define UVH_GR0_TLB_MMR_READ_DATA_LO_VPN_SHFT		0
 #define UVH_GR0_TLB_MMR_READ_DATA_LO_ASID_SHFT		39
<span class="p_chunk">@@ -890,6 +1202,14 @@</span> <span class="p_context"> union uvh_gr0_tlb_mmr_read_data_hi_u {</span>
 #define UV3H_GR0_TLB_MMR_READ_DATA_LO_ASID_MASK		0x7fffff8000000000UL
 #define UV3H_GR0_TLB_MMR_READ_DATA_LO_VALID_MASK	0x8000000000000000UL
 
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_LO_VPN_SHFT		0</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_LO_ASID_SHFT		39</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_LO_VALID_SHFT	63</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_LO_VPN_MASK		0x0000007fffffffffUL</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_LO_ASID_MASK		0x7fffff8000000000UL</span>
<span class="p_add">+#define UV4H_GR0_TLB_MMR_READ_DATA_LO_VALID_MASK	0x8000000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
 union uvh_gr0_tlb_mmr_read_data_lo_u {
 	unsigned long	v;
 	struct uvh_gr0_tlb_mmr_read_data_lo_s {
<span class="p_chunk">@@ -917,12 +1237,25 @@</span> <span class="p_context"> union uvh_gr0_tlb_mmr_read_data_lo_u {</span>
 		unsigned long	asid:24;			/* RO */
 		unsigned long	valid:1;			/* RO */
 	} s3;
<span class="p_add">+	struct uv4h_gr0_tlb_mmr_read_data_lo_s {</span>
<span class="p_add">+		unsigned long	vpn:39;				/* RO */</span>
<span class="p_add">+		unsigned long	asid:24;			/* RO */</span>
<span class="p_add">+		unsigned long	valid:1;			/* RO */</span>
<span class="p_add">+	} s4;</span>
 };
 
 /* ========================================================================= */
 /*                         UVH_GR1_TLB_INT0_CONFIG                           */
 /* ========================================================================= */
<span class="p_del">-#define UVH_GR1_TLB_INT0_CONFIG 0x61f00UL</span>
<span class="p_add">+#define UV1H_GR1_TLB_INT0_CONFIG 0x61f00UL</span>
<span class="p_add">+#define UV2H_GR1_TLB_INT0_CONFIG 0x61f00UL</span>
<span class="p_add">+#define UV3H_GR1_TLB_INT0_CONFIG 0x61f00UL</span>
<span class="p_add">+#define UV4H_GR1_TLB_INT0_CONFIG 0x62100UL</span>
<span class="p_add">+#define UVH_GR1_TLB_INT0_CONFIG (					\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_GR1_TLB_INT0_CONFIG :			\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_GR1_TLB_INT0_CONFIG :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_GR1_TLB_INT0_CONFIG :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_GR1_TLB_INT0_CONFIG)</span>
 
 #define UVH_GR1_TLB_INT0_CONFIG_VECTOR_SHFT		0
 #define UVH_GR1_TLB_INT0_CONFIG_DM_SHFT			8
<span class="p_chunk">@@ -941,6 +1274,7 @@</span> <span class="p_context"> union uvh_gr0_tlb_mmr_read_data_lo_u {</span>
 #define UVH_GR1_TLB_INT0_CONFIG_M_MASK			0x0000000000010000UL
 #define UVH_GR1_TLB_INT0_CONFIG_APIC_ID_MASK		0xffffffff00000000UL
 
<span class="p_add">+</span>
 union uvh_gr1_tlb_int0_config_u {
 	unsigned long	v;
 	struct uvh_gr1_tlb_int0_config_s {
<span class="p_chunk">@@ -960,7 +1294,15 @@</span> <span class="p_context"> union uvh_gr1_tlb_int0_config_u {</span>
 /* ========================================================================= */
 /*                         UVH_GR1_TLB_INT1_CONFIG                           */
 /* ========================================================================= */
<span class="p_del">-#define UVH_GR1_TLB_INT1_CONFIG 0x61f40UL</span>
<span class="p_add">+#define UV1H_GR1_TLB_INT1_CONFIG 0x61f40UL</span>
<span class="p_add">+#define UV2H_GR1_TLB_INT1_CONFIG 0x61f40UL</span>
<span class="p_add">+#define UV3H_GR1_TLB_INT1_CONFIG 0x61f40UL</span>
<span class="p_add">+#define UV4H_GR1_TLB_INT1_CONFIG 0x62140UL</span>
<span class="p_add">+#define UVH_GR1_TLB_INT1_CONFIG (					\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_GR1_TLB_INT1_CONFIG :			\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_GR1_TLB_INT1_CONFIG :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_GR1_TLB_INT1_CONFIG :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_GR1_TLB_INT1_CONFIG)</span>
 
 #define UVH_GR1_TLB_INT1_CONFIG_VECTOR_SHFT		0
 #define UVH_GR1_TLB_INT1_CONFIG_DM_SHFT			8
<span class="p_chunk">@@ -979,6 +1321,7 @@</span> <span class="p_context"> union uvh_gr1_tlb_int0_config_u {</span>
 #define UVH_GR1_TLB_INT1_CONFIG_M_MASK			0x0000000000010000UL
 #define UVH_GR1_TLB_INT1_CONFIG_APIC_ID_MASK		0xffffffff00000000UL
 
<span class="p_add">+</span>
 union uvh_gr1_tlb_int1_config_u {
 	unsigned long	v;
 	struct uvh_gr1_tlb_int1_config_s {
<span class="p_chunk">@@ -1001,19 +1344,18 @@</span> <span class="p_context"> union uvh_gr1_tlb_int1_config_u {</span>
 #define UV1H_GR1_TLB_MMR_CONTROL 0x801080UL
 #define UV2H_GR1_TLB_MMR_CONTROL 0x1001080UL
 #define UV3H_GR1_TLB_MMR_CONTROL 0x1001080UL
<span class="p_del">-#define UVH_GR1_TLB_MMR_CONTROL						\</span>
<span class="p_del">-		(is_uv1_hub() ? UV1H_GR1_TLB_MMR_CONTROL :		\</span>
<span class="p_del">-		(is_uv2_hub() ? UV2H_GR1_TLB_MMR_CONTROL :		\</span>
<span class="p_del">-				UV3H_GR1_TLB_MMR_CONTROL))</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL 0x701080UL</span>
<span class="p_add">+#define UVH_GR1_TLB_MMR_CONTROL (					\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_GR1_TLB_MMR_CONTROL :			\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_GR1_TLB_MMR_CONTROL :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_GR1_TLB_MMR_CONTROL :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_GR1_TLB_MMR_CONTROL)</span>
 
 #define UVH_GR1_TLB_MMR_CONTROL_INDEX_SHFT		0
<span class="p_del">-#define UVH_GR1_TLB_MMR_CONTROL_MEM_SEL_SHFT		12</span>
 #define UVH_GR1_TLB_MMR_CONTROL_AUTO_VALID_EN_SHFT	16
 #define UVH_GR1_TLB_MMR_CONTROL_MMR_HASH_INDEX_EN_SHFT	20
 #define UVH_GR1_TLB_MMR_CONTROL_MMR_WRITE_SHFT		30
 #define UVH_GR1_TLB_MMR_CONTROL_MMR_READ_SHFT		31
<span class="p_del">-#define UVH_GR1_TLB_MMR_CONTROL_INDEX_MASK		0x0000000000000fffUL</span>
<span class="p_del">-#define UVH_GR1_TLB_MMR_CONTROL_MEM_SEL_MASK		0x0000000000003000UL</span>
 #define UVH_GR1_TLB_MMR_CONTROL_AUTO_VALID_EN_MASK	0x0000000000010000UL
 #define UVH_GR1_TLB_MMR_CONTROL_MMR_HASH_INDEX_EN_MASK	0x0000000000100000UL
 #define UVH_GR1_TLB_MMR_CONTROL_MMR_WRITE_MASK		0x0000000040000000UL
<span class="p_chunk">@@ -1043,14 +1385,11 @@</span> <span class="p_context"> union uvh_gr1_tlb_int1_config_u {</span>
 #define UV1H_GR1_TLB_MMR_CONTROL_MMR_INJ_TLBLRUV_MASK	0x1000000000000000UL
 
 #define UVXH_GR1_TLB_MMR_CONTROL_INDEX_SHFT		0
<span class="p_del">-#define UVXH_GR1_TLB_MMR_CONTROL_MEM_SEL_SHFT		12</span>
 #define UVXH_GR1_TLB_MMR_CONTROL_AUTO_VALID_EN_SHFT	16
 #define UVXH_GR1_TLB_MMR_CONTROL_MMR_HASH_INDEX_EN_SHFT	20
 #define UVXH_GR1_TLB_MMR_CONTROL_MMR_WRITE_SHFT		30
 #define UVXH_GR1_TLB_MMR_CONTROL_MMR_READ_SHFT		31
 #define UVXH_GR1_TLB_MMR_CONTROL_MMR_OP_DONE_SHFT	32
<span class="p_del">-#define UVXH_GR1_TLB_MMR_CONTROL_INDEX_MASK		0x0000000000000fffUL</span>
<span class="p_del">-#define UVXH_GR1_TLB_MMR_CONTROL_MEM_SEL_MASK		0x0000000000003000UL</span>
 #define UVXH_GR1_TLB_MMR_CONTROL_AUTO_VALID_EN_MASK	0x0000000000010000UL
 #define UVXH_GR1_TLB_MMR_CONTROL_MMR_HASH_INDEX_EN_MASK	0x0000000000100000UL
 #define UVXH_GR1_TLB_MMR_CONTROL_MMR_WRITE_MASK		0x0000000040000000UL
<span class="p_chunk">@@ -1093,12 +1432,30 @@</span> <span class="p_context"> union uvh_gr1_tlb_int1_config_u {</span>
 #define UV3H_GR1_TLB_MMR_CONTROL_MMR_READ_MASK		0x0000000080000000UL
 #define UV3H_GR1_TLB_MMR_CONTROL_MMR_OP_DONE_MASK	0x0000000100000000UL
 
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_INDEX_SHFT		0</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_MEM_SEL_SHFT		13</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_AUTO_VALID_EN_SHFT	16</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_MMR_HASH_INDEX_EN_SHFT	20</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_ECC_SEL_SHFT		21</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_MMR_WRITE_SHFT		30</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_MMR_READ_SHFT		31</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_MMR_OP_DONE_SHFT	32</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_PAGE_SIZE_SHFT		59</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_INDEX_MASK		0x0000000000001fffUL</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_MEM_SEL_MASK		0x0000000000006000UL</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_AUTO_VALID_EN_MASK	0x0000000000010000UL</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_MMR_HASH_INDEX_EN_MASK	0x0000000000100000UL</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_ECC_SEL_MASK		0x0000000000200000UL</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_MMR_WRITE_MASK		0x0000000040000000UL</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_MMR_READ_MASK		0x0000000080000000UL</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_MMR_OP_DONE_MASK	0x0000000100000000UL</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_CONTROL_PAGE_SIZE_MASK		0xf800000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
 union uvh_gr1_tlb_mmr_control_u {
 	unsigned long	v;
 	struct uvh_gr1_tlb_mmr_control_s {
<span class="p_del">-		unsigned long	index:12;			/* RW */</span>
<span class="p_del">-		unsigned long	mem_sel:2;			/* RW */</span>
<span class="p_del">-		unsigned long	rsvd_14_15:2;</span>
<span class="p_add">+		unsigned long	rsvd_0_15:16;</span>
 		unsigned long	auto_valid_en:1;		/* RW */
 		unsigned long	rsvd_17_19:3;
 		unsigned long	mmr_hash_index_en:1;		/* RW */
<span class="p_chunk">@@ -1132,9 +1489,7 @@</span> <span class="p_context"> union uvh_gr1_tlb_mmr_control_u {</span>
 		unsigned long	rsvd_61_63:3;
 	} s1;
 	struct uvxh_gr1_tlb_mmr_control_s {
<span class="p_del">-		unsigned long	index:12;			/* RW */</span>
<span class="p_del">-		unsigned long	mem_sel:2;			/* RW */</span>
<span class="p_del">-		unsigned long	rsvd_14_15:2;</span>
<span class="p_add">+		unsigned long	rsvd_0_15:16;</span>
 		unsigned long	auto_valid_en:1;		/* RW */
 		unsigned long	rsvd_17_19:3;
 		unsigned long	mmr_hash_index_en:1;		/* RW */
<span class="p_chunk">@@ -1145,8 +1500,7 @@</span> <span class="p_context"> union uvh_gr1_tlb_mmr_control_u {</span>
 		unsigned long	rsvd_33_47:15;
 		unsigned long	rsvd_48:1;
 		unsigned long	rsvd_49_51:3;
<span class="p_del">-		unsigned long	rsvd_52:1;</span>
<span class="p_del">-		unsigned long	rsvd_53_63:11;</span>
<span class="p_add">+		unsigned long	rsvd_52_63:12;</span>
 	} sx;
 	struct uv2h_gr1_tlb_mmr_control_s {
 		unsigned long	index:12;			/* RW */
<span class="p_chunk">@@ -1183,6 +1537,24 @@</span> <span class="p_context"> union uvh_gr1_tlb_mmr_control_u {</span>
 		unsigned long	undef_52:1;			/* Undefined */
 		unsigned long	rsvd_53_63:11;
 	} s3;
<span class="p_add">+	struct uv4h_gr1_tlb_mmr_control_s {</span>
<span class="p_add">+		unsigned long	index:13;			/* RW */</span>
<span class="p_add">+		unsigned long	mem_sel:2;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_15:1;</span>
<span class="p_add">+		unsigned long	auto_valid_en:1;		/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_17_19:3;</span>
<span class="p_add">+		unsigned long	mmr_hash_index_en:1;		/* RW */</span>
<span class="p_add">+		unsigned long	ecc_sel:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_22_29:8;</span>
<span class="p_add">+		unsigned long	mmr_write:1;			/* WP */</span>
<span class="p_add">+		unsigned long	mmr_read:1;			/* WP */</span>
<span class="p_add">+		unsigned long	mmr_op_done:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_33_47:15;</span>
<span class="p_add">+		unsigned long	undef_48:1;			/* Undefined */</span>
<span class="p_add">+		unsigned long	rsvd_49_51:3;</span>
<span class="p_add">+		unsigned long	rsvd_52_58:7;</span>
<span class="p_add">+		unsigned long	page_size:5;			/* RW */</span>
<span class="p_add">+	} s4;</span>
 };
 
 /* ========================================================================= */
<span class="p_chunk">@@ -1191,19 +1563,14 @@</span> <span class="p_context"> union uvh_gr1_tlb_mmr_control_u {</span>
 #define UV1H_GR1_TLB_MMR_READ_DATA_HI 0x8010a0UL
 #define UV2H_GR1_TLB_MMR_READ_DATA_HI 0x10010a0UL
 #define UV3H_GR1_TLB_MMR_READ_DATA_HI 0x10010a0UL
<span class="p_del">-#define UVH_GR1_TLB_MMR_READ_DATA_HI					\</span>
<span class="p_del">-		(is_uv1_hub() ? UV1H_GR1_TLB_MMR_READ_DATA_HI :		\</span>
<span class="p_del">-		(is_uv2_hub() ? UV2H_GR1_TLB_MMR_READ_DATA_HI :		\</span>
<span class="p_del">-				UV3H_GR1_TLB_MMR_READ_DATA_HI))</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_HI 0x7010a0UL</span>
<span class="p_add">+#define UVH_GR1_TLB_MMR_READ_DATA_HI (					\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_GR1_TLB_MMR_READ_DATA_HI :			\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_GR1_TLB_MMR_READ_DATA_HI :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_GR1_TLB_MMR_READ_DATA_HI :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_GR1_TLB_MMR_READ_DATA_HI)</span>
 
 #define UVH_GR1_TLB_MMR_READ_DATA_HI_PFN_SHFT		0
<span class="p_del">-#define UVH_GR1_TLB_MMR_READ_DATA_HI_GAA_SHFT		41</span>
<span class="p_del">-#define UVH_GR1_TLB_MMR_READ_DATA_HI_DIRTY_SHFT		43</span>
<span class="p_del">-#define UVH_GR1_TLB_MMR_READ_DATA_HI_LARGER_SHFT	44</span>
<span class="p_del">-#define UVH_GR1_TLB_MMR_READ_DATA_HI_PFN_MASK		0x000001ffffffffffUL</span>
<span class="p_del">-#define UVH_GR1_TLB_MMR_READ_DATA_HI_GAA_MASK		0x0000060000000000UL</span>
<span class="p_del">-#define UVH_GR1_TLB_MMR_READ_DATA_HI_DIRTY_MASK		0x0000080000000000UL</span>
<span class="p_del">-#define UVH_GR1_TLB_MMR_READ_DATA_HI_LARGER_MASK	0x0000100000000000UL</span>
 
 #define UV1H_GR1_TLB_MMR_READ_DATA_HI_PFN_SHFT		0
 #define UV1H_GR1_TLB_MMR_READ_DATA_HI_GAA_SHFT		41
<span class="p_chunk">@@ -1215,13 +1582,6 @@</span> <span class="p_context"> union uvh_gr1_tlb_mmr_control_u {</span>
 #define UV1H_GR1_TLB_MMR_READ_DATA_HI_LARGER_MASK	0x0000100000000000UL
 
 #define UVXH_GR1_TLB_MMR_READ_DATA_HI_PFN_SHFT		0
<span class="p_del">-#define UVXH_GR1_TLB_MMR_READ_DATA_HI_GAA_SHFT		41</span>
<span class="p_del">-#define UVXH_GR1_TLB_MMR_READ_DATA_HI_DIRTY_SHFT	43</span>
<span class="p_del">-#define UVXH_GR1_TLB_MMR_READ_DATA_HI_LARGER_SHFT	44</span>
<span class="p_del">-#define UVXH_GR1_TLB_MMR_READ_DATA_HI_PFN_MASK		0x000001ffffffffffUL</span>
<span class="p_del">-#define UVXH_GR1_TLB_MMR_READ_DATA_HI_GAA_MASK		0x0000060000000000UL</span>
<span class="p_del">-#define UVXH_GR1_TLB_MMR_READ_DATA_HI_DIRTY_MASK	0x0000080000000000UL</span>
<span class="p_del">-#define UVXH_GR1_TLB_MMR_READ_DATA_HI_LARGER_MASK	0x0000100000000000UL</span>
 
 #define UV2H_GR1_TLB_MMR_READ_DATA_HI_PFN_SHFT		0
 #define UV2H_GR1_TLB_MMR_READ_DATA_HI_GAA_SHFT		41
<span class="p_chunk">@@ -1245,15 +1605,24 @@</span> <span class="p_context"> union uvh_gr1_tlb_mmr_control_u {</span>
 #define UV3H_GR1_TLB_MMR_READ_DATA_HI_AA_EXT_MASK	0x0000200000000000UL
 #define UV3H_GR1_TLB_MMR_READ_DATA_HI_WAY_ECC_MASK	0xff80000000000000UL
 
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_HI_PFN_SHFT		0</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_HI_PNID_SHFT		34</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_HI_GAA_SHFT		49</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_HI_DIRTY_SHFT	51</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_HI_LARGER_SHFT	52</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_HI_AA_EXT_SHFT	53</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_HI_WAY_ECC_SHFT	55</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_HI_PFN_MASK		0x00000003ffffffffUL</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_HI_PNID_MASK		0x0001fffc00000000UL</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_HI_GAA_MASK		0x0006000000000000UL</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_HI_DIRTY_MASK	0x0008000000000000UL</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_HI_LARGER_MASK	0x0010000000000000UL</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_HI_AA_EXT_MASK	0x0020000000000000UL</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_HI_WAY_ECC_MASK	0xff80000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
 union uvh_gr1_tlb_mmr_read_data_hi_u {
 	unsigned long	v;
<span class="p_del">-	struct uvh_gr1_tlb_mmr_read_data_hi_s {</span>
<span class="p_del">-		unsigned long	pfn:41;				/* RO */</span>
<span class="p_del">-		unsigned long	gaa:2;				/* RO */</span>
<span class="p_del">-		unsigned long	dirty:1;			/* RO */</span>
<span class="p_del">-		unsigned long	larger:1;			/* RO */</span>
<span class="p_del">-		unsigned long	rsvd_45_63:19;</span>
<span class="p_del">-	} s;</span>
 	struct uv1h_gr1_tlb_mmr_read_data_hi_s {
 		unsigned long	pfn:41;				/* RO */
 		unsigned long	gaa:2;				/* RO */
<span class="p_chunk">@@ -1261,13 +1630,6 @@</span> <span class="p_context"> union uvh_gr1_tlb_mmr_read_data_hi_u {</span>
 		unsigned long	larger:1;			/* RO */
 		unsigned long	rsvd_45_63:19;
 	} s1;
<span class="p_del">-	struct uvxh_gr1_tlb_mmr_read_data_hi_s {</span>
<span class="p_del">-		unsigned long	pfn:41;				/* RO */</span>
<span class="p_del">-		unsigned long	gaa:2;				/* RO */</span>
<span class="p_del">-		unsigned long	dirty:1;			/* RO */</span>
<span class="p_del">-		unsigned long	larger:1;			/* RO */</span>
<span class="p_del">-		unsigned long	rsvd_45_63:19;</span>
<span class="p_del">-	} sx;</span>
 	struct uv2h_gr1_tlb_mmr_read_data_hi_s {
 		unsigned long	pfn:41;				/* RO */
 		unsigned long	gaa:2;				/* RO */
<span class="p_chunk">@@ -1284,6 +1646,16 @@</span> <span class="p_context"> union uvh_gr1_tlb_mmr_read_data_hi_u {</span>
 		unsigned long	undef_46_54:9;			/* Undefined */
 		unsigned long	way_ecc:9;			/* RO */
 	} s3;
<span class="p_add">+	struct uv4h_gr1_tlb_mmr_read_data_hi_s {</span>
<span class="p_add">+		unsigned long	pfn:34;				/* RO */</span>
<span class="p_add">+		unsigned long	pnid:15;			/* RO */</span>
<span class="p_add">+		unsigned long	gaa:2;				/* RO */</span>
<span class="p_add">+		unsigned long	dirty:1;			/* RO */</span>
<span class="p_add">+		unsigned long	larger:1;			/* RO */</span>
<span class="p_add">+		unsigned long	aa_ext:1;			/* RO */</span>
<span class="p_add">+		unsigned long	undef_54:1;			/* Undefined */</span>
<span class="p_add">+		unsigned long	way_ecc:9;			/* RO */</span>
<span class="p_add">+	} s4;</span>
 };
 
 /* ========================================================================= */
<span class="p_chunk">@@ -1292,10 +1664,12 @@</span> <span class="p_context"> union uvh_gr1_tlb_mmr_read_data_hi_u {</span>
 #define UV1H_GR1_TLB_MMR_READ_DATA_LO 0x8010a8UL
 #define UV2H_GR1_TLB_MMR_READ_DATA_LO 0x10010a8UL
 #define UV3H_GR1_TLB_MMR_READ_DATA_LO 0x10010a8UL
<span class="p_del">-#define UVH_GR1_TLB_MMR_READ_DATA_LO					\</span>
<span class="p_del">-		(is_uv1_hub() ? UV1H_GR1_TLB_MMR_READ_DATA_LO :		\</span>
<span class="p_del">-		(is_uv2_hub() ? UV2H_GR1_TLB_MMR_READ_DATA_LO :		\</span>
<span class="p_del">-				UV3H_GR1_TLB_MMR_READ_DATA_LO))</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_LO 0x7010a8UL</span>
<span class="p_add">+#define UVH_GR1_TLB_MMR_READ_DATA_LO (					\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_GR1_TLB_MMR_READ_DATA_LO :			\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_GR1_TLB_MMR_READ_DATA_LO :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_GR1_TLB_MMR_READ_DATA_LO :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_GR1_TLB_MMR_READ_DATA_LO)</span>
 
 #define UVH_GR1_TLB_MMR_READ_DATA_LO_VPN_SHFT		0
 #define UVH_GR1_TLB_MMR_READ_DATA_LO_ASID_SHFT		39
<span class="p_chunk">@@ -1332,6 +1706,14 @@</span> <span class="p_context"> union uvh_gr1_tlb_mmr_read_data_hi_u {</span>
 #define UV3H_GR1_TLB_MMR_READ_DATA_LO_ASID_MASK		0x7fffff8000000000UL
 #define UV3H_GR1_TLB_MMR_READ_DATA_LO_VALID_MASK	0x8000000000000000UL
 
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_LO_VPN_SHFT		0</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_LO_ASID_SHFT		39</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_LO_VALID_SHFT	63</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_LO_VPN_MASK		0x0000007fffffffffUL</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_LO_ASID_MASK		0x7fffff8000000000UL</span>
<span class="p_add">+#define UV4H_GR1_TLB_MMR_READ_DATA_LO_VALID_MASK	0x8000000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
 union uvh_gr1_tlb_mmr_read_data_lo_u {
 	unsigned long	v;
 	struct uvh_gr1_tlb_mmr_read_data_lo_s {
<span class="p_chunk">@@ -1359,6 +1741,11 @@</span> <span class="p_context"> union uvh_gr1_tlb_mmr_read_data_lo_u {</span>
 		unsigned long	asid:24;			/* RO */
 		unsigned long	valid:1;			/* RO */
 	} s3;
<span class="p_add">+	struct uv4h_gr1_tlb_mmr_read_data_lo_s {</span>
<span class="p_add">+		unsigned long	vpn:39;				/* RO */</span>
<span class="p_add">+		unsigned long	asid:24;			/* RO */</span>
<span class="p_add">+		unsigned long	valid:1;			/* RO */</span>
<span class="p_add">+	} s4;</span>
 };
 
 /* ========================================================================= */
<span class="p_chunk">@@ -1369,6 +1756,7 @@</span> <span class="p_context"> union uvh_gr1_tlb_mmr_read_data_lo_u {</span>
 #define UVH_INT_CMPB_REAL_TIME_CMPB_SHFT		0
 #define UVH_INT_CMPB_REAL_TIME_CMPB_MASK		0x00ffffffffffffffUL
 
<span class="p_add">+</span>
 union uvh_int_cmpb_u {
 	unsigned long	v;
 	struct uvh_int_cmpb_s {
<span class="p_chunk">@@ -1382,12 +1770,14 @@</span> <span class="p_context"> union uvh_int_cmpb_u {</span>
 /* ========================================================================= */
 #define UVH_INT_CMPC 0x22100UL
 
<span class="p_add">+</span>
 #define UV1H_INT_CMPC_REAL_TIME_CMPC_SHFT		0
 #define UV1H_INT_CMPC_REAL_TIME_CMPC_MASK		0x00ffffffffffffffUL
 
 #define UVXH_INT_CMPC_REAL_TIME_CMP_2_SHFT		0
 #define UVXH_INT_CMPC_REAL_TIME_CMP_2_MASK		0x00ffffffffffffffUL
 
<span class="p_add">+</span>
 union uvh_int_cmpc_u {
 	unsigned long	v;
 	struct uvh_int_cmpc_s {
<span class="p_chunk">@@ -1401,12 +1791,14 @@</span> <span class="p_context"> union uvh_int_cmpc_u {</span>
 /* ========================================================================= */
 #define UVH_INT_CMPD 0x22180UL
 
<span class="p_add">+</span>
 #define UV1H_INT_CMPD_REAL_TIME_CMPD_SHFT		0
 #define UV1H_INT_CMPD_REAL_TIME_CMPD_MASK		0x00ffffffffffffffUL
 
 #define UVXH_INT_CMPD_REAL_TIME_CMP_3_SHFT		0
 #define UVXH_INT_CMPD_REAL_TIME_CMP_3_MASK		0x00ffffffffffffffUL
 
<span class="p_add">+</span>
 union uvh_int_cmpd_u {
 	unsigned long	v;
 	struct uvh_int_cmpd_s {
<span class="p_chunk">@@ -1419,7 +1811,16 @@</span> <span class="p_context"> union uvh_int_cmpd_u {</span>
 /*                               UVH_IPI_INT                                 */
 /* ========================================================================= */
 #define UVH_IPI_INT 0x60500UL
<span class="p_del">-#define UVH_IPI_INT_32 0x348</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV1H_IPI_INT_32 0x348</span>
<span class="p_add">+#define UV2H_IPI_INT_32 0x348</span>
<span class="p_add">+#define UV3H_IPI_INT_32 0x348</span>
<span class="p_add">+#define UV4H_IPI_INT_32 0x268</span>
<span class="p_add">+#define UVH_IPI_INT_32 (						\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_IPI_INT_32 :				\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_IPI_INT_32 :				\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_IPI_INT_32 :				\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_IPI_INT_32)</span>
 
 #define UVH_IPI_INT_VECTOR_SHFT				0
 #define UVH_IPI_INT_DELIVERY_MODE_SHFT			8
<span class="p_chunk">@@ -1432,6 +1833,7 @@</span> <span class="p_context"> union uvh_int_cmpd_u {</span>
 #define UVH_IPI_INT_APIC_ID_MASK			0x0000ffffffff0000UL
 #define UVH_IPI_INT_SEND_MASK				0x8000000000000000UL
 
<span class="p_add">+</span>
 union uvh_ipi_int_u {
 	unsigned long	v;
 	struct uvh_ipi_int_s {
<span class="p_chunk">@@ -1448,103 +1850,269 @@</span> <span class="p_context"> union uvh_ipi_int_u {</span>
 /* ========================================================================= */
 /*                   UVH_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST                     */
 /* ========================================================================= */
<span class="p_del">-#define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST 0x320050UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST 0x320050UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST 0x320050UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST 0x320050UL</span>
<span class="p_add">+#define UV4H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST uv_undefined(&quot;UV4H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST&quot;)</span>
<span class="p_add">+#define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST)</span>
 #define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_32 0x9c0
 
<span class="p_del">-#define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_ADDRESS_SHFT 4</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_NODE_ID_SHFT 49</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_ADDRESS_MASK 0x000007fffffffff0UL</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_NODE_ID_MASK 0x7ffe000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_ADDRESS_SHFT 4</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_NODE_ID_SHFT 49</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_ADDRESS_MASK 0x000007fffffffff0UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_NODE_ID_MASK 0x7ffe000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_ADDRESS_SHFT 4</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_NODE_ID_SHFT 49</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_ADDRESS_MASK 0x000007fffffffff0UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_NODE_ID_MASK 0x7ffe000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_ADDRESS_SHFT 4</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_NODE_ID_SHFT 49</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_ADDRESS_MASK 0x000007fffffffff0UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST_NODE_ID_MASK 0x7ffe000000000000UL</span>
<span class="p_add">+</span>
 
 union uvh_lb_bau_intd_payload_queue_first_u {
 	unsigned long	v;
<span class="p_del">-	struct uvh_lb_bau_intd_payload_queue_first_s {</span>
<span class="p_add">+	struct uv1h_lb_bau_intd_payload_queue_first_s {</span>
 		unsigned long	rsvd_0_3:4;
 		unsigned long	address:39;			/* RW */
 		unsigned long	rsvd_43_48:6;
 		unsigned long	node_id:14;			/* RW */
 		unsigned long	rsvd_63:1;
<span class="p_del">-	} s;</span>
<span class="p_add">+	} s1;</span>
<span class="p_add">+	struct uv2h_lb_bau_intd_payload_queue_first_s {</span>
<span class="p_add">+		unsigned long	rsvd_0_3:4;</span>
<span class="p_add">+		unsigned long	address:39;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_43_48:6;</span>
<span class="p_add">+		unsigned long	node_id:14;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_63:1;</span>
<span class="p_add">+	} s2;</span>
<span class="p_add">+	struct uv3h_lb_bau_intd_payload_queue_first_s {</span>
<span class="p_add">+		unsigned long	rsvd_0_3:4;</span>
<span class="p_add">+		unsigned long	address:39;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_43_48:6;</span>
<span class="p_add">+		unsigned long	node_id:14;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_63:1;</span>
<span class="p_add">+	} s3;</span>
 };
 
 /* ========================================================================= */
 /*                    UVH_LB_BAU_INTD_PAYLOAD_QUEUE_LAST                     */
 /* ========================================================================= */
<span class="p_del">-#define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_LAST 0x320060UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_PAYLOAD_QUEUE_LAST 0x320060UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_PAYLOAD_QUEUE_LAST 0x320060UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_PAYLOAD_QUEUE_LAST 0x320060UL</span>
<span class="p_add">+#define UV4H_LB_BAU_INTD_PAYLOAD_QUEUE_LAST uv_undefined(&quot;UV4H_LB_BAU_INTD_PAYLOAD_QUEUE_LAST&quot;)</span>
<span class="p_add">+#define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_LAST (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_INTD_PAYLOAD_QUEUE_LAST :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_INTD_PAYLOAD_QUEUE_LAST :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_INTD_PAYLOAD_QUEUE_LAST :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_INTD_PAYLOAD_QUEUE_LAST)</span>
 #define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_LAST_32 0x9c8
 
<span class="p_del">-#define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_LAST_ADDRESS_SHFT	4</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_LAST_ADDRESS_MASK	0x000007fffffffff0UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_PAYLOAD_QUEUE_LAST_ADDRESS_SHFT 4</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_PAYLOAD_QUEUE_LAST_ADDRESS_MASK 0x000007fffffffff0UL</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_PAYLOAD_QUEUE_LAST_ADDRESS_SHFT 4</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_PAYLOAD_QUEUE_LAST_ADDRESS_MASK 0x000007fffffffff0UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_PAYLOAD_QUEUE_LAST_ADDRESS_SHFT 4</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_PAYLOAD_QUEUE_LAST_ADDRESS_MASK 0x000007fffffffff0UL</span>
<span class="p_add">+</span>
 
 union uvh_lb_bau_intd_payload_queue_last_u {
 	unsigned long	v;
<span class="p_del">-	struct uvh_lb_bau_intd_payload_queue_last_s {</span>
<span class="p_add">+	struct uv1h_lb_bau_intd_payload_queue_last_s {</span>
 		unsigned long	rsvd_0_3:4;
 		unsigned long	address:39;			/* RW */
 		unsigned long	rsvd_43_63:21;
<span class="p_del">-	} s;</span>
<span class="p_add">+	} s1;</span>
<span class="p_add">+	struct uv2h_lb_bau_intd_payload_queue_last_s {</span>
<span class="p_add">+		unsigned long	rsvd_0_3:4;</span>
<span class="p_add">+		unsigned long	address:39;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_43_63:21;</span>
<span class="p_add">+	} s2;</span>
<span class="p_add">+	struct uv3h_lb_bau_intd_payload_queue_last_s {</span>
<span class="p_add">+		unsigned long	rsvd_0_3:4;</span>
<span class="p_add">+		unsigned long	address:39;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_43_63:21;</span>
<span class="p_add">+	} s3;</span>
 };
 
 /* ========================================================================= */
 /*                    UVH_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL                     */
 /* ========================================================================= */
<span class="p_del">-#define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL 0x320070UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL 0x320070UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL 0x320070UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL 0x320070UL</span>
<span class="p_add">+#define UV4H_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL uv_undefined(&quot;UV4H_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL&quot;)</span>
<span class="p_add">+#define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL)</span>
 #define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL_32 0x9d0
 
<span class="p_del">-#define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL_ADDRESS_SHFT	4</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL_ADDRESS_MASK	0x000007fffffffff0UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL_ADDRESS_SHFT 4</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL_ADDRESS_MASK 0x000007fffffffff0UL</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL_ADDRESS_SHFT 4</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL_ADDRESS_MASK 0x000007fffffffff0UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL_ADDRESS_SHFT 4</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_PAYLOAD_QUEUE_TAIL_ADDRESS_MASK 0x000007fffffffff0UL</span>
<span class="p_add">+</span>
 
 union uvh_lb_bau_intd_payload_queue_tail_u {
 	unsigned long	v;
<span class="p_del">-	struct uvh_lb_bau_intd_payload_queue_tail_s {</span>
<span class="p_add">+	struct uv1h_lb_bau_intd_payload_queue_tail_s {</span>
 		unsigned long	rsvd_0_3:4;
 		unsigned long	address:39;			/* RW */
 		unsigned long	rsvd_43_63:21;
<span class="p_del">-	} s;</span>
<span class="p_add">+	} s1;</span>
<span class="p_add">+	struct uv2h_lb_bau_intd_payload_queue_tail_s {</span>
<span class="p_add">+		unsigned long	rsvd_0_3:4;</span>
<span class="p_add">+		unsigned long	address:39;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_43_63:21;</span>
<span class="p_add">+	} s2;</span>
<span class="p_add">+	struct uv3h_lb_bau_intd_payload_queue_tail_s {</span>
<span class="p_add">+		unsigned long	rsvd_0_3:4;</span>
<span class="p_add">+		unsigned long	address:39;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_43_63:21;</span>
<span class="p_add">+	} s3;</span>
 };
 
 /* ========================================================================= */
 /*                   UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE                    */
 /* ========================================================================= */
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE 0x320080UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE 0x320080UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE 0x320080UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE 0x320080UL</span>
<span class="p_add">+#define UV4H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE uv_undefined(&quot;UV4H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE&quot;)</span>
<span class="p_add">+#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE)</span>
 #define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_32 0xa68
 
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_0_SHFT 0</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_1_SHFT 1</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_2_SHFT 2</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_3_SHFT 3</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_4_SHFT 4</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_5_SHFT 5</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_6_SHFT 6</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_7_SHFT 7</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_0_SHFT 8</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_1_SHFT 9</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_2_SHFT 10</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_3_SHFT 11</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_4_SHFT 12</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_5_SHFT 13</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_6_SHFT 14</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_7_SHFT 15</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_0_MASK 0x0000000000000001UL</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_1_MASK 0x0000000000000002UL</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_2_MASK 0x0000000000000004UL</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_3_MASK 0x0000000000000008UL</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_4_MASK 0x0000000000000010UL</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_5_MASK 0x0000000000000020UL</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_6_MASK 0x0000000000000040UL</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_7_MASK 0x0000000000000080UL</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_0_MASK 0x0000000000000100UL</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_1_MASK 0x0000000000000200UL</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_2_MASK 0x0000000000000400UL</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_3_MASK 0x0000000000000800UL</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_4_MASK 0x0000000000001000UL</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_5_MASK 0x0000000000002000UL</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_6_MASK 0x0000000000004000UL</span>
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_7_MASK 0x0000000000008000UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_0_SHFT 0</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_1_SHFT 1</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_2_SHFT 2</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_3_SHFT 3</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_4_SHFT 4</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_5_SHFT 5</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_6_SHFT 6</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_7_SHFT 7</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_0_SHFT 8</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_1_SHFT 9</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_2_SHFT 10</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_3_SHFT 11</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_4_SHFT 12</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_5_SHFT 13</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_6_SHFT 14</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_7_SHFT 15</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_0_MASK 0x0000000000000001UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_1_MASK 0x0000000000000002UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_2_MASK 0x0000000000000004UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_3_MASK 0x0000000000000008UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_4_MASK 0x0000000000000010UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_5_MASK 0x0000000000000020UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_6_MASK 0x0000000000000040UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_7_MASK 0x0000000000000080UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_0_MASK 0x0000000000000100UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_1_MASK 0x0000000000000200UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_2_MASK 0x0000000000000400UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_3_MASK 0x0000000000000800UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_4_MASK 0x0000000000001000UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_5_MASK 0x0000000000002000UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_6_MASK 0x0000000000004000UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_7_MASK 0x0000000000008000UL</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_0_SHFT 0</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_1_SHFT 1</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_2_SHFT 2</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_3_SHFT 3</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_4_SHFT 4</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_5_SHFT 5</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_6_SHFT 6</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_7_SHFT 7</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_0_SHFT 8</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_1_SHFT 9</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_2_SHFT 10</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_3_SHFT 11</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_4_SHFT 12</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_5_SHFT 13</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_6_SHFT 14</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_7_SHFT 15</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_0_MASK 0x0000000000000001UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_1_MASK 0x0000000000000002UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_2_MASK 0x0000000000000004UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_3_MASK 0x0000000000000008UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_4_MASK 0x0000000000000010UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_5_MASK 0x0000000000000020UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_6_MASK 0x0000000000000040UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_7_MASK 0x0000000000000080UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_0_MASK 0x0000000000000100UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_1_MASK 0x0000000000000200UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_2_MASK 0x0000000000000400UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_3_MASK 0x0000000000000800UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_4_MASK 0x0000000000001000UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_5_MASK 0x0000000000002000UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_6_MASK 0x0000000000004000UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_7_MASK 0x0000000000008000UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_0_SHFT 0</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_1_SHFT 1</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_2_SHFT 2</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_3_SHFT 3</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_4_SHFT 4</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_5_SHFT 5</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_6_SHFT 6</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_7_SHFT 7</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_0_SHFT 8</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_1_SHFT 9</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_2_SHFT 10</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_3_SHFT 11</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_4_SHFT 12</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_5_SHFT 13</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_6_SHFT 14</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_7_SHFT 15</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_0_MASK 0x0000000000000001UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_1_MASK 0x0000000000000002UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_2_MASK 0x0000000000000004UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_3_MASK 0x0000000000000008UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_4_MASK 0x0000000000000010UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_5_MASK 0x0000000000000020UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_6_MASK 0x0000000000000040UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_PENDING_7_MASK 0x0000000000000080UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_0_MASK 0x0000000000000100UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_1_MASK 0x0000000000000200UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_2_MASK 0x0000000000000400UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_3_MASK 0x0000000000000800UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_4_MASK 0x0000000000001000UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_5_MASK 0x0000000000002000UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_6_MASK 0x0000000000004000UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_TIMEOUT_7_MASK 0x0000000000008000UL</span>
<span class="p_add">+</span>
 
 union uvh_lb_bau_intd_software_acknowledge_u {
 	unsigned long	v;
<span class="p_del">-	struct uvh_lb_bau_intd_software_acknowledge_s {</span>
<span class="p_add">+	struct uv1h_lb_bau_intd_software_acknowledge_s {</span>
 		unsigned long	pending_0:1;			/* RW, W1C */
 		unsigned long	pending_1:1;			/* RW, W1C */
 		unsigned long	pending_2:1;			/* RW, W1C */
<span class="p_chunk">@@ -1562,27 +2130,84 @@</span> <span class="p_context"> union uvh_lb_bau_intd_software_acknowledge_u {</span>
 		unsigned long	timeout_6:1;			/* RW, W1C */
 		unsigned long	timeout_7:1;			/* RW, W1C */
 		unsigned long	rsvd_16_63:48;
<span class="p_del">-	} s;</span>
<span class="p_add">+	} s1;</span>
<span class="p_add">+	struct uv2h_lb_bau_intd_software_acknowledge_s {</span>
<span class="p_add">+		unsigned long	pending_0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	pending_1:1;			/* RW */</span>
<span class="p_add">+		unsigned long	pending_2:1;			/* RW */</span>
<span class="p_add">+		unsigned long	pending_3:1;			/* RW */</span>
<span class="p_add">+		unsigned long	pending_4:1;			/* RW */</span>
<span class="p_add">+		unsigned long	pending_5:1;			/* RW */</span>
<span class="p_add">+		unsigned long	pending_6:1;			/* RW */</span>
<span class="p_add">+		unsigned long	pending_7:1;			/* RW */</span>
<span class="p_add">+		unsigned long	timeout_0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	timeout_1:1;			/* RW */</span>
<span class="p_add">+		unsigned long	timeout_2:1;			/* RW */</span>
<span class="p_add">+		unsigned long	timeout_3:1;			/* RW */</span>
<span class="p_add">+		unsigned long	timeout_4:1;			/* RW */</span>
<span class="p_add">+		unsigned long	timeout_5:1;			/* RW */</span>
<span class="p_add">+		unsigned long	timeout_6:1;			/* RW */</span>
<span class="p_add">+		unsigned long	timeout_7:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_16_63:48;</span>
<span class="p_add">+	} s2;</span>
<span class="p_add">+	struct uv3h_lb_bau_intd_software_acknowledge_s {</span>
<span class="p_add">+		unsigned long	pending_0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	pending_1:1;			/* RW */</span>
<span class="p_add">+		unsigned long	pending_2:1;			/* RW */</span>
<span class="p_add">+		unsigned long	pending_3:1;			/* RW */</span>
<span class="p_add">+		unsigned long	pending_4:1;			/* RW */</span>
<span class="p_add">+		unsigned long	pending_5:1;			/* RW */</span>
<span class="p_add">+		unsigned long	pending_6:1;			/* RW */</span>
<span class="p_add">+		unsigned long	pending_7:1;			/* RW */</span>
<span class="p_add">+		unsigned long	timeout_0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	timeout_1:1;			/* RW */</span>
<span class="p_add">+		unsigned long	timeout_2:1;			/* RW */</span>
<span class="p_add">+		unsigned long	timeout_3:1;			/* RW */</span>
<span class="p_add">+		unsigned long	timeout_4:1;			/* RW */</span>
<span class="p_add">+		unsigned long	timeout_5:1;			/* RW */</span>
<span class="p_add">+		unsigned long	timeout_6:1;			/* RW */</span>
<span class="p_add">+		unsigned long	timeout_7:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_16_63:48;</span>
<span class="p_add">+	} s3;</span>
 };
 
 /* ========================================================================= */
 /*                UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_ALIAS                 */
 /* ========================================================================= */
<span class="p_del">-#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_ALIAS 0x320088UL</span>
<span class="p_add">+#define UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_ALIAS 0x320088UL</span>
<span class="p_add">+#define UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_ALIAS 0x320088UL</span>
<span class="p_add">+#define UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_ALIAS 0x320088UL</span>
<span class="p_add">+#define UV4H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_ALIAS uv_undefined(&quot;UV4H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_ALIAS&quot;)</span>
<span class="p_add">+#define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_ALIAS (			\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_ALIAS :	\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_ALIAS :	\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_ALIAS :	\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_ALIAS)</span>
 #define UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE_ALIAS_32 0xa70
 
 
 /* ========================================================================= */
 /*                         UVH_LB_BAU_MISC_CONTROL                           */
 /* ========================================================================= */
<span class="p_del">-#define UVH_LB_BAU_MISC_CONTROL 0x320170UL</span>
 #define UV1H_LB_BAU_MISC_CONTROL 0x320170UL
 #define UV2H_LB_BAU_MISC_CONTROL 0x320170UL
 #define UV3H_LB_BAU_MISC_CONTROL 0x320170UL
<span class="p_del">-#define UVH_LB_BAU_MISC_CONTROL_32 0xa10</span>
<span class="p_del">-#define UV1H_LB_BAU_MISC_CONTROL_32 0x320170UL</span>
<span class="p_del">-#define UV2H_LB_BAU_MISC_CONTROL_32 0x320170UL</span>
<span class="p_del">-#define UV3H_LB_BAU_MISC_CONTROL_32 0x320170UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL 0xc8170UL</span>
<span class="p_add">+#define UVH_LB_BAU_MISC_CONTROL (					\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_MISC_CONTROL :			\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_MISC_CONTROL :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_MISC_CONTROL :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_MISC_CONTROL)</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV1H_LB_BAU_MISC_CONTROL_32 0xa10</span>
<span class="p_add">+#define UV2H_LB_BAU_MISC_CONTROL_32 0xa10</span>
<span class="p_add">+#define UV3H_LB_BAU_MISC_CONTROL_32 0xa10</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_32 0xa18</span>
<span class="p_add">+#define UVH_LB_BAU_MISC_CONTROL_32 (					\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_MISC_CONTROL_32 :			\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_MISC_CONTROL_32 :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_MISC_CONTROL_32 :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_MISC_CONTROL_32)</span>
 
 #define UVH_LB_BAU_MISC_CONTROL_REJECTION_DELAY_SHFT	0
 #define UVH_LB_BAU_MISC_CONTROL_APIC_MODE_SHFT		8
<span class="p_chunk">@@ -1590,8 +2215,6 @@</span> <span class="p_context"> union uvh_lb_bau_intd_software_acknowledge_u {</span>
 #define UVH_LB_BAU_MISC_CONTROL_FORCE_LOCK_NOP_SHFT	10
 #define UVH_LB_BAU_MISC_CONTROL_QPI_AGENT_PRESENCE_VECTOR_SHFT 11
 #define UVH_LB_BAU_MISC_CONTROL_DESCRIPTOR_FETCH_MODE_SHFT 14
<span class="p_del">-#define UVH_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_SHFT 15</span>
<span class="p_del">-#define UVH_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_SHFT 16</span>
 #define UVH_LB_BAU_MISC_CONTROL_ENABLE_DUAL_MAPPING_MODE_SHFT 20
 #define UVH_LB_BAU_MISC_CONTROL_VGA_IO_PORT_DECODE_ENABLE_SHFT 21
 #define UVH_LB_BAU_MISC_CONTROL_VGA_IO_PORT_16_BIT_DECODE_SHFT 22
<span class="p_chunk">@@ -1606,8 +2229,6 @@</span> <span class="p_context"> union uvh_lb_bau_intd_software_acknowledge_u {</span>
 #define UVH_LB_BAU_MISC_CONTROL_FORCE_LOCK_NOP_MASK	0x0000000000000400UL
 #define UVH_LB_BAU_MISC_CONTROL_QPI_AGENT_PRESENCE_VECTOR_MASK 0x0000000000003800UL
 #define UVH_LB_BAU_MISC_CONTROL_DESCRIPTOR_FETCH_MODE_MASK 0x0000000000004000UL
<span class="p_del">-#define UVH_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_MASK 0x0000000000008000UL</span>
<span class="p_del">-#define UVH_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_MASK 0x00000000000f0000UL</span>
 #define UVH_LB_BAU_MISC_CONTROL_ENABLE_DUAL_MAPPING_MODE_MASK 0x0000000000100000UL
 #define UVH_LB_BAU_MISC_CONTROL_VGA_IO_PORT_DECODE_ENABLE_MASK 0x0000000000200000UL
 #define UVH_LB_BAU_MISC_CONTROL_VGA_IO_PORT_16_BIT_DECODE_MASK 0x0000000000400000UL
<span class="p_chunk">@@ -1656,8 +2277,6 @@</span> <span class="p_context"> union uvh_lb_bau_intd_software_acknowledge_u {</span>
 #define UVXH_LB_BAU_MISC_CONTROL_FORCE_LOCK_NOP_SHFT	10
 #define UVXH_LB_BAU_MISC_CONTROL_QPI_AGENT_PRESENCE_VECTOR_SHFT 11
 #define UVXH_LB_BAU_MISC_CONTROL_DESCRIPTOR_FETCH_MODE_SHFT 14
<span class="p_del">-#define UVXH_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_SHFT 15</span>
<span class="p_del">-#define UVXH_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_SHFT 16</span>
 #define UVXH_LB_BAU_MISC_CONTROL_ENABLE_DUAL_MAPPING_MODE_SHFT 20
 #define UVXH_LB_BAU_MISC_CONTROL_VGA_IO_PORT_DECODE_ENABLE_SHFT 21
 #define UVXH_LB_BAU_MISC_CONTROL_VGA_IO_PORT_16_BIT_DECODE_SHFT 22
<span class="p_chunk">@@ -1679,8 +2298,6 @@</span> <span class="p_context"> union uvh_lb_bau_intd_software_acknowledge_u {</span>
 #define UVXH_LB_BAU_MISC_CONTROL_FORCE_LOCK_NOP_MASK	0x0000000000000400UL
 #define UVXH_LB_BAU_MISC_CONTROL_QPI_AGENT_PRESENCE_VECTOR_MASK 0x0000000000003800UL
 #define UVXH_LB_BAU_MISC_CONTROL_DESCRIPTOR_FETCH_MODE_MASK 0x0000000000004000UL
<span class="p_del">-#define UVXH_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_MASK 0x0000000000008000UL</span>
<span class="p_del">-#define UVXH_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_MASK 0x00000000000f0000UL</span>
 #define UVXH_LB_BAU_MISC_CONTROL_ENABLE_DUAL_MAPPING_MODE_MASK 0x0000000000100000UL
 #define UVXH_LB_BAU_MISC_CONTROL_VGA_IO_PORT_DECODE_ENABLE_MASK 0x0000000000200000UL
 #define UVXH_LB_BAU_MISC_CONTROL_VGA_IO_PORT_16_BIT_DECODE_MASK 0x0000000000400000UL
<span class="p_chunk">@@ -1797,6 +2414,88 @@</span> <span class="p_context"> union uvh_lb_bau_intd_software_acknowledge_u {</span>
 #define UV3H_LB_BAU_MISC_CONTROL_THREAD_KILL_TIMEBASE_MASK 0x00003fc000000000UL
 #define UV3H_LB_BAU_MISC_CONTROL_FUN_MASK		0xffff000000000000UL
 
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_REJECTION_DELAY_SHFT	0</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_APIC_MODE_SHFT		8</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_FORCE_BROADCAST_SHFT	9</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_FORCE_LOCK_NOP_SHFT	10</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_QPI_AGENT_PRESENCE_VECTOR_SHFT 11</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_DESCRIPTOR_FETCH_MODE_SHFT 14</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_RESERVED_15_19_SHFT	15</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_ENABLE_DUAL_MAPPING_MODE_SHFT 20</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_VGA_IO_PORT_DECODE_ENABLE_SHFT 21</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_VGA_IO_PORT_16_BIT_DECODE_SHFT 22</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_SUPPRESS_DEST_REGISTRATION_SHFT 23</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_PROGRAMMED_INITIAL_PRIORITY_SHFT 24</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_USE_INCOMING_PRIORITY_SHFT 27</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_ENABLE_PROGRAMMED_INITIAL_PRIORITY_SHFT 28</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_ENABLE_AUTOMATIC_APIC_MODE_SELECTION_SHFT 29</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_APIC_MODE_STATUS_SHFT	30</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_SUPPRESS_INTERRUPTS_TO_SELF_SHFT 31</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_ENABLE_LOCK_BASED_SYSTEM_FLUSH_SHFT 32</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_ENABLE_EXTENDED_SB_STATUS_SHFT 33</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_SUPPRESS_INT_PRIO_UDT_TO_SELF_SHFT 34</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_USE_LEGACY_DESCRIPTOR_FORMATS_SHFT 35</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_SUPPRESS_QUIESCE_MSGS_TO_QPI_SHFT 36</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_RESERVED_37_SHFT	37</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_THREAD_KILL_TIMEBASE_SHFT 38</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_ADDRESS_INTERLEAVE_SELECT_SHFT 46</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_FUN_SHFT		48</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_REJECTION_DELAY_MASK	0x00000000000000ffUL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_APIC_MODE_MASK		0x0000000000000100UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_FORCE_BROADCAST_MASK	0x0000000000000200UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_FORCE_LOCK_NOP_MASK	0x0000000000000400UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_QPI_AGENT_PRESENCE_VECTOR_MASK 0x0000000000003800UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_DESCRIPTOR_FETCH_MODE_MASK 0x0000000000004000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_RESERVED_15_19_MASK	0x00000000000f8000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_ENABLE_DUAL_MAPPING_MODE_MASK 0x0000000000100000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_VGA_IO_PORT_DECODE_ENABLE_MASK 0x0000000000200000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_VGA_IO_PORT_16_BIT_DECODE_MASK 0x0000000000400000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_SUPPRESS_DEST_REGISTRATION_MASK 0x0000000000800000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_PROGRAMMED_INITIAL_PRIORITY_MASK 0x0000000007000000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_USE_INCOMING_PRIORITY_MASK 0x0000000008000000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_ENABLE_PROGRAMMED_INITIAL_PRIORITY_MASK 0x0000000010000000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_ENABLE_AUTOMATIC_APIC_MODE_SELECTION_MASK 0x0000000020000000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_APIC_MODE_STATUS_MASK	0x0000000040000000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_SUPPRESS_INTERRUPTS_TO_SELF_MASK 0x0000000080000000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_ENABLE_LOCK_BASED_SYSTEM_FLUSH_MASK 0x0000000100000000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_ENABLE_EXTENDED_SB_STATUS_MASK 0x0000000200000000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_SUPPRESS_INT_PRIO_UDT_TO_SELF_MASK 0x0000000400000000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_USE_LEGACY_DESCRIPTOR_FORMATS_MASK 0x0000000800000000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_SUPPRESS_QUIESCE_MSGS_TO_QPI_MASK 0x0000001000000000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_RESERVED_37_MASK	0x0000002000000000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_THREAD_KILL_TIMEBASE_MASK 0x00003fc000000000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_ADDRESS_INTERLEAVE_SELECT_MASK 0x0000400000000000UL</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_FUN_MASK		0xffff000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_MASK	\</span>
<span class="p_add">+	uv_undefined(&quot;UV4H_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_MASK&quot;)</span>
<span class="p_add">+#define UVH_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_MASK (	\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_MASK : \</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_MASK : \</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_MASK : \</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_MASK)</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_SHFT	\</span>
<span class="p_add">+	uv_undefined(&quot;UV4H_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_SHFT&quot;)</span>
<span class="p_add">+#define UVH_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_SHFT (	\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_SHFT : \</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_SHFT : \</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_SHFT : \</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_MISC_CONTROL_ENABLE_INTD_SOFT_ACK_MODE_SHFT)</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_MASK	\</span>
<span class="p_add">+	uv_undefined(&quot;UV4H_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_MASK&quot;)</span>
<span class="p_add">+#define UVH_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_MASK (	\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_MASK : \</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_MASK : \</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_MASK : \</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_MASK)</span>
<span class="p_add">+#define UV4H_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_SHFT	\</span>
<span class="p_add">+	uv_undefined(&quot;UV4H_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_SHFT&quot;)</span>
<span class="p_add">+#define UVH_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_SHFT (	\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_SHFT : \</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_SHFT : \</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_SHFT : \</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_MISC_CONTROL_INTD_SOFT_ACK_TIMEOUT_PERIOD_SHFT)</span>
<span class="p_add">+</span>
 union uvh_lb_bau_misc_control_u {
 	unsigned long	v;
 	struct uvh_lb_bau_misc_control_s {
<span class="p_chunk">@@ -1806,8 +2505,7 @@</span> <span class="p_context"> union uvh_lb_bau_misc_control_u {</span>
 		unsigned long	force_lock_nop:1;		/* RW */
 		unsigned long	qpi_agent_presence_vector:3;	/* RW */
 		unsigned long	descriptor_fetch_mode:1;	/* RW */
<span class="p_del">-		unsigned long	enable_intd_soft_ack_mode:1;	/* RW */</span>
<span class="p_del">-		unsigned long	intd_soft_ack_timeout_period:4;	/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_15_19:5;</span>
 		unsigned long	enable_dual_mapping_mode:1;	/* RW */
 		unsigned long	vga_io_port_decode_enable:1;	/* RW */
 		unsigned long	vga_io_port_16_bit_decode:1;	/* RW */
<span class="p_chunk">@@ -1844,8 +2542,7 @@</span> <span class="p_context"> union uvh_lb_bau_misc_control_u {</span>
 		unsigned long	force_lock_nop:1;		/* RW */
 		unsigned long	qpi_agent_presence_vector:3;	/* RW */
 		unsigned long	descriptor_fetch_mode:1;	/* RW */
<span class="p_del">-		unsigned long	enable_intd_soft_ack_mode:1;	/* RW */</span>
<span class="p_del">-		unsigned long	intd_soft_ack_timeout_period:4;	/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_15_19:5;</span>
 		unsigned long	enable_dual_mapping_mode:1;	/* RW */
 		unsigned long	vga_io_port_decode_enable:1;	/* RW */
 		unsigned long	vga_io_port_16_bit_decode:1;	/* RW */
<span class="p_chunk">@@ -1918,13 +2615,59 @@</span> <span class="p_context"> union uvh_lb_bau_misc_control_u {</span>
 		unsigned long	rsvd_46_47:2;
 		unsigned long	fun:16;				/* RW */
 	} s3;
<span class="p_add">+	struct uv4h_lb_bau_misc_control_s {</span>
<span class="p_add">+		unsigned long	rejection_delay:8;		/* RW */</span>
<span class="p_add">+		unsigned long	apic_mode:1;			/* RW */</span>
<span class="p_add">+		unsigned long	force_broadcast:1;		/* RW */</span>
<span class="p_add">+		unsigned long	force_lock_nop:1;		/* RW */</span>
<span class="p_add">+		unsigned long	qpi_agent_presence_vector:3;	/* RW */</span>
<span class="p_add">+		unsigned long	descriptor_fetch_mode:1;	/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_15_19:5;</span>
<span class="p_add">+		unsigned long	enable_dual_mapping_mode:1;	/* RW */</span>
<span class="p_add">+		unsigned long	vga_io_port_decode_enable:1;	/* RW */</span>
<span class="p_add">+		unsigned long	vga_io_port_16_bit_decode:1;	/* RW */</span>
<span class="p_add">+		unsigned long	suppress_dest_registration:1;	/* RW */</span>
<span class="p_add">+		unsigned long	programmed_initial_priority:3;	/* RW */</span>
<span class="p_add">+		unsigned long	use_incoming_priority:1;	/* RW */</span>
<span class="p_add">+		unsigned long	enable_programmed_initial_priority:1;/* RW */</span>
<span class="p_add">+		unsigned long	enable_automatic_apic_mode_selection:1;/* RW */</span>
<span class="p_add">+		unsigned long	apic_mode_status:1;		/* RO */</span>
<span class="p_add">+		unsigned long	suppress_interrupts_to_self:1;	/* RW */</span>
<span class="p_add">+		unsigned long	enable_lock_based_system_flush:1;/* RW */</span>
<span class="p_add">+		unsigned long	enable_extended_sb_status:1;	/* RW */</span>
<span class="p_add">+		unsigned long	suppress_int_prio_udt_to_self:1;/* RW */</span>
<span class="p_add">+		unsigned long	use_legacy_descriptor_formats:1;/* RW */</span>
<span class="p_add">+		unsigned long	suppress_quiesce_msgs_to_qpi:1;	/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_37:1;</span>
<span class="p_add">+		unsigned long	thread_kill_timebase:8;		/* RW */</span>
<span class="p_add">+		unsigned long	address_interleave_select:1;	/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_47:1;</span>
<span class="p_add">+		unsigned long	fun:16;				/* RW */</span>
<span class="p_add">+	} s4;</span>
 };
 
 /* ========================================================================= */
 /*                     UVH_LB_BAU_SB_ACTIVATION_CONTROL                      */
 /* ========================================================================= */
<span class="p_del">-#define UVH_LB_BAU_SB_ACTIVATION_CONTROL 0x320020UL</span>
<span class="p_del">-#define UVH_LB_BAU_SB_ACTIVATION_CONTROL_32 0x9a8</span>
<span class="p_add">+#define UV1H_LB_BAU_SB_ACTIVATION_CONTROL 0x320020UL</span>
<span class="p_add">+#define UV2H_LB_BAU_SB_ACTIVATION_CONTROL 0x320020UL</span>
<span class="p_add">+#define UV3H_LB_BAU_SB_ACTIVATION_CONTROL 0x320020UL</span>
<span class="p_add">+#define UV4H_LB_BAU_SB_ACTIVATION_CONTROL 0xc8020UL</span>
<span class="p_add">+#define UVH_LB_BAU_SB_ACTIVATION_CONTROL (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_SB_ACTIVATION_CONTROL :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_SB_ACTIVATION_CONTROL :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_SB_ACTIVATION_CONTROL :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_SB_ACTIVATION_CONTROL)</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV1H_LB_BAU_SB_ACTIVATION_CONTROL_32 0x9a8</span>
<span class="p_add">+#define UV2H_LB_BAU_SB_ACTIVATION_CONTROL_32 0x9a8</span>
<span class="p_add">+#define UV3H_LB_BAU_SB_ACTIVATION_CONTROL_32 0x9a8</span>
<span class="p_add">+#define UV4H_LB_BAU_SB_ACTIVATION_CONTROL_32 0x9c8</span>
<span class="p_add">+#define UVH_LB_BAU_SB_ACTIVATION_CONTROL_32 (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_SB_ACTIVATION_CONTROL_32 :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_SB_ACTIVATION_CONTROL_32 :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_SB_ACTIVATION_CONTROL_32 :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_SB_ACTIVATION_CONTROL_32)</span>
 
 #define UVH_LB_BAU_SB_ACTIVATION_CONTROL_INDEX_SHFT	0
 #define UVH_LB_BAU_SB_ACTIVATION_CONTROL_PUSH_SHFT	62
<span class="p_chunk">@@ -1933,6 +2676,7 @@</span> <span class="p_context"> union uvh_lb_bau_misc_control_u {</span>
 #define UVH_LB_BAU_SB_ACTIVATION_CONTROL_PUSH_MASK	0x4000000000000000UL
 #define UVH_LB_BAU_SB_ACTIVATION_CONTROL_INIT_MASK	0x8000000000000000UL
 
<span class="p_add">+</span>
 union uvh_lb_bau_sb_activation_control_u {
 	unsigned long	v;
 	struct uvh_lb_bau_sb_activation_control_s {
<span class="p_chunk">@@ -1946,12 +2690,30 @@</span> <span class="p_context"> union uvh_lb_bau_sb_activation_control_u {</span>
 /* ========================================================================= */
 /*                    UVH_LB_BAU_SB_ACTIVATION_STATUS_0                      */
 /* ========================================================================= */
<span class="p_del">-#define UVH_LB_BAU_SB_ACTIVATION_STATUS_0 0x320030UL</span>
<span class="p_del">-#define UVH_LB_BAU_SB_ACTIVATION_STATUS_0_32 0x9b0</span>
<span class="p_add">+#define UV1H_LB_BAU_SB_ACTIVATION_STATUS_0 0x320030UL</span>
<span class="p_add">+#define UV2H_LB_BAU_SB_ACTIVATION_STATUS_0 0x320030UL</span>
<span class="p_add">+#define UV3H_LB_BAU_SB_ACTIVATION_STATUS_0 0x320030UL</span>
<span class="p_add">+#define UV4H_LB_BAU_SB_ACTIVATION_STATUS_0 0xc8030UL</span>
<span class="p_add">+#define UVH_LB_BAU_SB_ACTIVATION_STATUS_0 (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_SB_ACTIVATION_STATUS_0 :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_SB_ACTIVATION_STATUS_0 :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_SB_ACTIVATION_STATUS_0 :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_SB_ACTIVATION_STATUS_0)</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV1H_LB_BAU_SB_ACTIVATION_STATUS_0_32 0x9b0</span>
<span class="p_add">+#define UV2H_LB_BAU_SB_ACTIVATION_STATUS_0_32 0x9b0</span>
<span class="p_add">+#define UV3H_LB_BAU_SB_ACTIVATION_STATUS_0_32 0x9b0</span>
<span class="p_add">+#define UV4H_LB_BAU_SB_ACTIVATION_STATUS_0_32 0x9d0</span>
<span class="p_add">+#define UVH_LB_BAU_SB_ACTIVATION_STATUS_0_32 (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_SB_ACTIVATION_STATUS_0_32 :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_SB_ACTIVATION_STATUS_0_32 :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_SB_ACTIVATION_STATUS_0_32 :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_SB_ACTIVATION_STATUS_0_32)</span>
 
 #define UVH_LB_BAU_SB_ACTIVATION_STATUS_0_STATUS_SHFT	0
 #define UVH_LB_BAU_SB_ACTIVATION_STATUS_0_STATUS_MASK	0xffffffffffffffffUL
 
<span class="p_add">+</span>
 union uvh_lb_bau_sb_activation_status_0_u {
 	unsigned long	v;
 	struct uvh_lb_bau_sb_activation_status_0_s {
<span class="p_chunk">@@ -1962,12 +2724,30 @@</span> <span class="p_context"> union uvh_lb_bau_sb_activation_status_0_u {</span>
 /* ========================================================================= */
 /*                    UVH_LB_BAU_SB_ACTIVATION_STATUS_1                      */
 /* ========================================================================= */
<span class="p_del">-#define UVH_LB_BAU_SB_ACTIVATION_STATUS_1 0x320040UL</span>
<span class="p_del">-#define UVH_LB_BAU_SB_ACTIVATION_STATUS_1_32 0x9b8</span>
<span class="p_add">+#define UV1H_LB_BAU_SB_ACTIVATION_STATUS_1 0x320040UL</span>
<span class="p_add">+#define UV2H_LB_BAU_SB_ACTIVATION_STATUS_1 0x320040UL</span>
<span class="p_add">+#define UV3H_LB_BAU_SB_ACTIVATION_STATUS_1 0x320040UL</span>
<span class="p_add">+#define UV4H_LB_BAU_SB_ACTIVATION_STATUS_1 0xc8040UL</span>
<span class="p_add">+#define UVH_LB_BAU_SB_ACTIVATION_STATUS_1 (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_SB_ACTIVATION_STATUS_1 :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_SB_ACTIVATION_STATUS_1 :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_SB_ACTIVATION_STATUS_1 :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_SB_ACTIVATION_STATUS_1)</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV1H_LB_BAU_SB_ACTIVATION_STATUS_1_32 0x9b8</span>
<span class="p_add">+#define UV2H_LB_BAU_SB_ACTIVATION_STATUS_1_32 0x9b8</span>
<span class="p_add">+#define UV3H_LB_BAU_SB_ACTIVATION_STATUS_1_32 0x9b8</span>
<span class="p_add">+#define UV4H_LB_BAU_SB_ACTIVATION_STATUS_1_32 0x9d8</span>
<span class="p_add">+#define UVH_LB_BAU_SB_ACTIVATION_STATUS_1_32 (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_SB_ACTIVATION_STATUS_1_32 :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_SB_ACTIVATION_STATUS_1_32 :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_SB_ACTIVATION_STATUS_1_32 :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_SB_ACTIVATION_STATUS_1_32)</span>
 
 #define UVH_LB_BAU_SB_ACTIVATION_STATUS_1_STATUS_SHFT	0
 #define UVH_LB_BAU_SB_ACTIVATION_STATUS_1_STATUS_MASK	0xffffffffffffffffUL
 
<span class="p_add">+</span>
 union uvh_lb_bau_sb_activation_status_1_u {
 	unsigned long	v;
 	struct uvh_lb_bau_sb_activation_status_1_s {
<span class="p_chunk">@@ -1978,23 +2758,55 @@</span> <span class="p_context"> union uvh_lb_bau_sb_activation_status_1_u {</span>
 /* ========================================================================= */
 /*                      UVH_LB_BAU_SB_DESCRIPTOR_BASE                        */
 /* ========================================================================= */
<span class="p_del">-#define UVH_LB_BAU_SB_DESCRIPTOR_BASE 0x320010UL</span>
<span class="p_del">-#define UVH_LB_BAU_SB_DESCRIPTOR_BASE_32 0x9a0</span>
<span class="p_add">+#define UV1H_LB_BAU_SB_DESCRIPTOR_BASE 0x320010UL</span>
<span class="p_add">+#define UV2H_LB_BAU_SB_DESCRIPTOR_BASE 0x320010UL</span>
<span class="p_add">+#define UV3H_LB_BAU_SB_DESCRIPTOR_BASE 0x320010UL</span>
<span class="p_add">+#define UV4H_LB_BAU_SB_DESCRIPTOR_BASE 0xc8010UL</span>
<span class="p_add">+#define UVH_LB_BAU_SB_DESCRIPTOR_BASE (					\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_SB_DESCRIPTOR_BASE :			\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_SB_DESCRIPTOR_BASE :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_SB_DESCRIPTOR_BASE :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_SB_DESCRIPTOR_BASE)</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV1H_LB_BAU_SB_DESCRIPTOR_BASE_32 0x9a0</span>
<span class="p_add">+#define UV2H_LB_BAU_SB_DESCRIPTOR_BASE_32 0x9a0</span>
<span class="p_add">+#define UV3H_LB_BAU_SB_DESCRIPTOR_BASE_32 0x9a0</span>
<span class="p_add">+#define UV4H_LB_BAU_SB_DESCRIPTOR_BASE_32 0x9c0</span>
<span class="p_add">+#define UVH_LB_BAU_SB_DESCRIPTOR_BASE_32 (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_LB_BAU_SB_DESCRIPTOR_BASE_32 :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_SB_DESCRIPTOR_BASE_32 :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_SB_DESCRIPTOR_BASE_32 :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_SB_DESCRIPTOR_BASE_32)</span>
 
 #define UVH_LB_BAU_SB_DESCRIPTOR_BASE_PAGE_ADDRESS_SHFT	12
 #define UVH_LB_BAU_SB_DESCRIPTOR_BASE_NODE_ID_SHFT	49
<span class="p_del">-#define UVH_LB_BAU_SB_DESCRIPTOR_BASE_PAGE_ADDRESS_MASK	0x000007fffffff000UL</span>
 #define UVH_LB_BAU_SB_DESCRIPTOR_BASE_NODE_ID_MASK	0x7ffe000000000000UL
 
<span class="p_add">+#define UV1H_LB_BAU_SB_DESCRIPTOR_BASE_PAGE_ADDRESS_MASK 0x000007fffffff000UL</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV2H_LB_BAU_SB_DESCRIPTOR_BASE_PAGE_ADDRESS_MASK 0x000007fffffff000UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV3H_LB_BAU_SB_DESCRIPTOR_BASE_PAGE_ADDRESS_MASK 0x000007fffffff000UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV4H_LB_BAU_SB_DESCRIPTOR_BASE_PAGE_ADDRESS_MASK 0x00003ffffffff000UL</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
 union uvh_lb_bau_sb_descriptor_base_u {
 	unsigned long	v;
 	struct uvh_lb_bau_sb_descriptor_base_s {
 		unsigned long	rsvd_0_11:12;
<span class="p_del">-		unsigned long	page_address:31;		/* RW */</span>
<span class="p_del">-		unsigned long	rsvd_43_48:6;</span>
<span class="p_add">+		unsigned long	rsvd_12_48:37;</span>
 		unsigned long	node_id:14;			/* RW */
 		unsigned long	rsvd_63:1;
 	} s;
<span class="p_add">+	struct uv4h_lb_bau_sb_descriptor_base_s {</span>
<span class="p_add">+		unsigned long	rsvd_0_11:12;</span>
<span class="p_add">+		unsigned long	page_address:34;		/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_46_48:3;</span>
<span class="p_add">+		unsigned long	node_id:14;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_63:1;</span>
<span class="p_add">+	} s4;</span>
 };
 
 /* ========================================================================= */
<span class="p_chunk">@@ -2004,6 +2816,7 @@</span> <span class="p_context"> union uvh_lb_bau_sb_descriptor_base_u {</span>
 #define UV1H_NODE_ID 0x0UL
 #define UV2H_NODE_ID 0x0UL
 #define UV3H_NODE_ID 0x0UL
<span class="p_add">+#define UV4H_NODE_ID 0x0UL</span>
 
 #define UVH_NODE_ID_FORCE1_SHFT				0
 #define UVH_NODE_ID_MANUFACTURER_SHFT			1
<span class="p_chunk">@@ -2080,6 +2893,26 @@</span> <span class="p_context"> union uvh_lb_bau_sb_descriptor_base_u {</span>
 #define UV3H_NODE_ID_NODES_PER_BIT_MASK			0x01fc000000000000UL
 #define UV3H_NODE_ID_NI_PORT_MASK			0x3e00000000000000UL
 
<span class="p_add">+#define UV4H_NODE_ID_FORCE1_SHFT			0</span>
<span class="p_add">+#define UV4H_NODE_ID_MANUFACTURER_SHFT			1</span>
<span class="p_add">+#define UV4H_NODE_ID_PART_NUMBER_SHFT			12</span>
<span class="p_add">+#define UV4H_NODE_ID_REVISION_SHFT			28</span>
<span class="p_add">+#define UV4H_NODE_ID_NODE_ID_SHFT			32</span>
<span class="p_add">+#define UV4H_NODE_ID_ROUTER_SELECT_SHFT			48</span>
<span class="p_add">+#define UV4H_NODE_ID_RESERVED_2_SHFT			49</span>
<span class="p_add">+#define UV4H_NODE_ID_NODES_PER_BIT_SHFT			50</span>
<span class="p_add">+#define UV4H_NODE_ID_NI_PORT_SHFT			57</span>
<span class="p_add">+#define UV4H_NODE_ID_FORCE1_MASK			0x0000000000000001UL</span>
<span class="p_add">+#define UV4H_NODE_ID_MANUFACTURER_MASK			0x0000000000000ffeUL</span>
<span class="p_add">+#define UV4H_NODE_ID_PART_NUMBER_MASK			0x000000000ffff000UL</span>
<span class="p_add">+#define UV4H_NODE_ID_REVISION_MASK			0x00000000f0000000UL</span>
<span class="p_add">+#define UV4H_NODE_ID_NODE_ID_MASK			0x00007fff00000000UL</span>
<span class="p_add">+#define UV4H_NODE_ID_ROUTER_SELECT_MASK			0x0001000000000000UL</span>
<span class="p_add">+#define UV4H_NODE_ID_RESERVED_2_MASK			0x0002000000000000UL</span>
<span class="p_add">+#define UV4H_NODE_ID_NODES_PER_BIT_MASK			0x01fc000000000000UL</span>
<span class="p_add">+#define UV4H_NODE_ID_NI_PORT_MASK			0x3e00000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
 union uvh_node_id_u {
 	unsigned long	v;
 	struct uvh_node_id_s {
<span class="p_chunk">@@ -2137,17 +2970,40 @@</span> <span class="p_context"> union uvh_node_id_u {</span>
 		unsigned long	ni_port:5;			/* RO */
 		unsigned long	rsvd_62_63:2;
 	} s3;
<span class="p_add">+	struct uv4h_node_id_s {</span>
<span class="p_add">+		unsigned long	force1:1;			/* RO */</span>
<span class="p_add">+		unsigned long	manufacturer:11;		/* RO */</span>
<span class="p_add">+		unsigned long	part_number:16;			/* RO */</span>
<span class="p_add">+		unsigned long	revision:4;			/* RO */</span>
<span class="p_add">+		unsigned long	node_id:15;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_47:1;</span>
<span class="p_add">+		unsigned long	router_select:1;		/* RO */</span>
<span class="p_add">+		unsigned long	rsvd_49:1;</span>
<span class="p_add">+		unsigned long	nodes_per_bit:7;		/* RO */</span>
<span class="p_add">+		unsigned long	ni_port:5;			/* RO */</span>
<span class="p_add">+		unsigned long	rsvd_62_63:2;</span>
<span class="p_add">+	} s4;</span>
 };
 
 /* ========================================================================= */
 /*                          UVH_NODE_PRESENT_TABLE                           */
 /* ========================================================================= */
 #define UVH_NODE_PRESENT_TABLE 0x1400UL
<span class="p_del">-#define UVH_NODE_PRESENT_TABLE_DEPTH 16</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV1H_NODE_PRESENT_TABLE_DEPTH 16</span>
<span class="p_add">+#define UV2H_NODE_PRESENT_TABLE_DEPTH 16</span>
<span class="p_add">+#define UV3H_NODE_PRESENT_TABLE_DEPTH 16</span>
<span class="p_add">+#define UV4H_NODE_PRESENT_TABLE_DEPTH 4</span>
<span class="p_add">+#define UVH_NODE_PRESENT_TABLE_DEPTH (					\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_NODE_PRESENT_TABLE_DEPTH :			\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_NODE_PRESENT_TABLE_DEPTH :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_NODE_PRESENT_TABLE_DEPTH :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_NODE_PRESENT_TABLE_DEPTH)</span>
 
 #define UVH_NODE_PRESENT_TABLE_NODES_SHFT		0
 #define UVH_NODE_PRESENT_TABLE_NODES_MASK		0xffffffffffffffffUL
 
<span class="p_add">+</span>
 union uvh_node_present_table_u {
 	unsigned long	v;
 	struct uvh_node_present_table_s {
<span class="p_chunk">@@ -2158,7 +3014,15 @@</span> <span class="p_context"> union uvh_node_present_table_u {</span>
 /* ========================================================================= */
 /*                 UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR                  */
 /* ========================================================================= */
<span class="p_del">-#define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR 0x16000c8UL</span>
<span class="p_add">+#define UV1H_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR 0x16000c8UL</span>
<span class="p_add">+#define UV2H_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR 0x16000c8UL</span>
<span class="p_add">+#define UV3H_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR 0x16000c8UL</span>
<span class="p_add">+#define UV4H_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR 0x4800c8UL</span>
<span class="p_add">+#define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR (			\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR :	\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR :	\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR :	\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR)</span>
 
 #define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR_BASE_SHFT 24
 #define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR_M_ALIAS_SHFT 48
<span class="p_chunk">@@ -2167,6 +3031,7 @@</span> <span class="p_context"> union uvh_node_present_table_u {</span>
 #define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR_M_ALIAS_MASK 0x001f000000000000UL
 #define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR_ENABLE_MASK 0x8000000000000000UL
 
<span class="p_add">+</span>
 union uvh_rh_gam_alias210_overlay_config_0_mmr_u {
 	unsigned long	v;
 	struct uvh_rh_gam_alias210_overlay_config_0_mmr_s {
<span class="p_chunk">@@ -2182,7 +3047,15 @@</span> <span class="p_context"> union uvh_rh_gam_alias210_overlay_config_0_mmr_u {</span>
 /* ========================================================================= */
 /*                 UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR                  */
 /* ========================================================================= */
<span class="p_del">-#define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR 0x16000d8UL</span>
<span class="p_add">+#define UV1H_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR 0x16000d8UL</span>
<span class="p_add">+#define UV2H_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR 0x16000d8UL</span>
<span class="p_add">+#define UV3H_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR 0x16000d8UL</span>
<span class="p_add">+#define UV4H_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR 0x4800d8UL</span>
<span class="p_add">+#define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR (			\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR :	\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR :	\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR :	\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR)</span>
 
 #define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR_BASE_SHFT 24
 #define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR_M_ALIAS_SHFT 48
<span class="p_chunk">@@ -2191,6 +3064,7 @@</span> <span class="p_context"> union uvh_rh_gam_alias210_overlay_config_0_mmr_u {</span>
 #define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR_M_ALIAS_MASK 0x001f000000000000UL
 #define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR_ENABLE_MASK 0x8000000000000000UL
 
<span class="p_add">+</span>
 union uvh_rh_gam_alias210_overlay_config_1_mmr_u {
 	unsigned long	v;
 	struct uvh_rh_gam_alias210_overlay_config_1_mmr_s {
<span class="p_chunk">@@ -2206,7 +3080,15 @@</span> <span class="p_context"> union uvh_rh_gam_alias210_overlay_config_1_mmr_u {</span>
 /* ========================================================================= */
 /*                 UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR                  */
 /* ========================================================================= */
<span class="p_del">-#define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR 0x16000e8UL</span>
<span class="p_add">+#define UV1H_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR 0x16000e8UL</span>
<span class="p_add">+#define UV2H_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR 0x16000e8UL</span>
<span class="p_add">+#define UV3H_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR 0x16000e8UL</span>
<span class="p_add">+#define UV4H_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR 0x4800e8UL</span>
<span class="p_add">+#define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR (			\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR :	\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR :	\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR :	\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR)</span>
 
 #define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR_BASE_SHFT 24
 #define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR_M_ALIAS_SHFT 48
<span class="p_chunk">@@ -2215,6 +3097,7 @@</span> <span class="p_context"> union uvh_rh_gam_alias210_overlay_config_1_mmr_u {</span>
 #define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR_M_ALIAS_MASK 0x001f000000000000UL
 #define UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR_ENABLE_MASK 0x8000000000000000UL
 
<span class="p_add">+</span>
 union uvh_rh_gam_alias210_overlay_config_2_mmr_u {
 	unsigned long	v;
 	struct uvh_rh_gam_alias210_overlay_config_2_mmr_s {
<span class="p_chunk">@@ -2230,11 +3113,20 @@</span> <span class="p_context"> union uvh_rh_gam_alias210_overlay_config_2_mmr_u {</span>
 /* ========================================================================= */
 /*                UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_0_MMR                  */
 /* ========================================================================= */
<span class="p_del">-#define UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_0_MMR 0x16000d0UL</span>
<span class="p_add">+#define UV1H_RH_GAM_ALIAS210_REDIRECT_CONFIG_0_MMR 0x16000d0UL</span>
<span class="p_add">+#define UV2H_RH_GAM_ALIAS210_REDIRECT_CONFIG_0_MMR 0x16000d0UL</span>
<span class="p_add">+#define UV3H_RH_GAM_ALIAS210_REDIRECT_CONFIG_0_MMR 0x16000d0UL</span>
<span class="p_add">+#define UV4H_RH_GAM_ALIAS210_REDIRECT_CONFIG_0_MMR 0x4800d0UL</span>
<span class="p_add">+#define UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_0_MMR (			\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_RH_GAM_ALIAS210_REDIRECT_CONFIG_0_MMR :	\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_RH_GAM_ALIAS210_REDIRECT_CONFIG_0_MMR :	\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_RH_GAM_ALIAS210_REDIRECT_CONFIG_0_MMR :	\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_RH_GAM_ALIAS210_REDIRECT_CONFIG_0_MMR)</span>
 
 #define UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_0_MMR_DEST_BASE_SHFT 24
 #define UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_0_MMR_DEST_BASE_MASK 0x00003fffff000000UL
 
<span class="p_add">+</span>
 union uvh_rh_gam_alias210_redirect_config_0_mmr_u {
 	unsigned long	v;
 	struct uvh_rh_gam_alias210_redirect_config_0_mmr_s {
<span class="p_chunk">@@ -2247,11 +3139,20 @@</span> <span class="p_context"> union uvh_rh_gam_alias210_redirect_config_0_mmr_u {</span>
 /* ========================================================================= */
 /*                UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_1_MMR                  */
 /* ========================================================================= */
<span class="p_del">-#define UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_1_MMR 0x16000e0UL</span>
<span class="p_add">+#define UV1H_RH_GAM_ALIAS210_REDIRECT_CONFIG_1_MMR 0x16000e0UL</span>
<span class="p_add">+#define UV2H_RH_GAM_ALIAS210_REDIRECT_CONFIG_1_MMR 0x16000e0UL</span>
<span class="p_add">+#define UV3H_RH_GAM_ALIAS210_REDIRECT_CONFIG_1_MMR 0x16000e0UL</span>
<span class="p_add">+#define UV4H_RH_GAM_ALIAS210_REDIRECT_CONFIG_1_MMR 0x4800e0UL</span>
<span class="p_add">+#define UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_1_MMR (			\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_RH_GAM_ALIAS210_REDIRECT_CONFIG_1_MMR :	\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_RH_GAM_ALIAS210_REDIRECT_CONFIG_1_MMR :	\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_RH_GAM_ALIAS210_REDIRECT_CONFIG_1_MMR :	\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_RH_GAM_ALIAS210_REDIRECT_CONFIG_1_MMR)</span>
 
 #define UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_1_MMR_DEST_BASE_SHFT 24
 #define UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_1_MMR_DEST_BASE_MASK 0x00003fffff000000UL
 
<span class="p_add">+</span>
 union uvh_rh_gam_alias210_redirect_config_1_mmr_u {
 	unsigned long	v;
 	struct uvh_rh_gam_alias210_redirect_config_1_mmr_s {
<span class="p_chunk">@@ -2264,11 +3165,20 @@</span> <span class="p_context"> union uvh_rh_gam_alias210_redirect_config_1_mmr_u {</span>
 /* ========================================================================= */
 /*                UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_2_MMR                  */
 /* ========================================================================= */
<span class="p_del">-#define UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_2_MMR 0x16000f0UL</span>
<span class="p_add">+#define UV1H_RH_GAM_ALIAS210_REDIRECT_CONFIG_2_MMR 0x16000f0UL</span>
<span class="p_add">+#define UV2H_RH_GAM_ALIAS210_REDIRECT_CONFIG_2_MMR 0x16000f0UL</span>
<span class="p_add">+#define UV3H_RH_GAM_ALIAS210_REDIRECT_CONFIG_2_MMR 0x16000f0UL</span>
<span class="p_add">+#define UV4H_RH_GAM_ALIAS210_REDIRECT_CONFIG_2_MMR 0x4800f0UL</span>
<span class="p_add">+#define UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_2_MMR (			\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_RH_GAM_ALIAS210_REDIRECT_CONFIG_2_MMR :	\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_RH_GAM_ALIAS210_REDIRECT_CONFIG_2_MMR :	\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_RH_GAM_ALIAS210_REDIRECT_CONFIG_2_MMR :	\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_RH_GAM_ALIAS210_REDIRECT_CONFIG_2_MMR)</span>
 
 #define UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_2_MMR_DEST_BASE_SHFT 24
 #define UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_2_MMR_DEST_BASE_MASK 0x00003fffff000000UL
 
<span class="p_add">+</span>
 union uvh_rh_gam_alias210_redirect_config_2_mmr_u {
 	unsigned long	v;
 	struct uvh_rh_gam_alias210_redirect_config_2_mmr_s {
<span class="p_chunk">@@ -2281,14 +3191,17 @@</span> <span class="p_context"> union uvh_rh_gam_alias210_redirect_config_2_mmr_u {</span>
 /* ========================================================================= */
 /*                          UVH_RH_GAM_CONFIG_MMR                            */
 /* ========================================================================= */
<span class="p_del">-#define UVH_RH_GAM_CONFIG_MMR 0x1600000UL</span>
 #define UV1H_RH_GAM_CONFIG_MMR 0x1600000UL
 #define UV2H_RH_GAM_CONFIG_MMR 0x1600000UL
 #define UV3H_RH_GAM_CONFIG_MMR 0x1600000UL
<span class="p_add">+#define UV4H_RH_GAM_CONFIG_MMR 0x480000UL</span>
<span class="p_add">+#define UVH_RH_GAM_CONFIG_MMR (						\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_RH_GAM_CONFIG_MMR :				\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_RH_GAM_CONFIG_MMR :				\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_RH_GAM_CONFIG_MMR :				\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_RH_GAM_CONFIG_MMR)</span>
 
<span class="p_del">-#define UVH_RH_GAM_CONFIG_MMR_M_SKT_SHFT		0</span>
 #define UVH_RH_GAM_CONFIG_MMR_N_SKT_SHFT		6
<span class="p_del">-#define UVH_RH_GAM_CONFIG_MMR_M_SKT_MASK		0x000000000000003fUL</span>
 #define UVH_RH_GAM_CONFIG_MMR_N_SKT_MASK		0x00000000000003c0UL
 
 #define UV1H_RH_GAM_CONFIG_MMR_M_SKT_SHFT		0
<span class="p_chunk">@@ -2298,9 +3211,7 @@</span> <span class="p_context"> union uvh_rh_gam_alias210_redirect_config_2_mmr_u {</span>
 #define UV1H_RH_GAM_CONFIG_MMR_N_SKT_MASK		0x00000000000003c0UL
 #define UV1H_RH_GAM_CONFIG_MMR_MMIOL_CFG_MASK		0x0000000000001000UL
 
<span class="p_del">-#define UVXH_RH_GAM_CONFIG_MMR_M_SKT_SHFT		0</span>
 #define UVXH_RH_GAM_CONFIG_MMR_N_SKT_SHFT		6
<span class="p_del">-#define UVXH_RH_GAM_CONFIG_MMR_M_SKT_MASK		0x000000000000003fUL</span>
 #define UVXH_RH_GAM_CONFIG_MMR_N_SKT_MASK		0x00000000000003c0UL
 
 #define UV2H_RH_GAM_CONFIG_MMR_M_SKT_SHFT		0
<span class="p_chunk">@@ -2313,10 +3224,14 @@</span> <span class="p_context"> union uvh_rh_gam_alias210_redirect_config_2_mmr_u {</span>
 #define UV3H_RH_GAM_CONFIG_MMR_M_SKT_MASK		0x000000000000003fUL
 #define UV3H_RH_GAM_CONFIG_MMR_N_SKT_MASK		0x00000000000003c0UL
 
<span class="p_add">+#define UV4H_RH_GAM_CONFIG_MMR_N_SKT_SHFT		6</span>
<span class="p_add">+#define UV4H_RH_GAM_CONFIG_MMR_N_SKT_MASK		0x00000000000003c0UL</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
 union uvh_rh_gam_config_mmr_u {
 	unsigned long	v;
 	struct uvh_rh_gam_config_mmr_s {
<span class="p_del">-		unsigned long	m_skt:6;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_0_5:6;</span>
 		unsigned long	n_skt:4;			/* RW */
 		unsigned long	rsvd_10_63:54;
 	} s;
<span class="p_chunk">@@ -2328,7 +3243,7 @@</span> <span class="p_context"> union uvh_rh_gam_config_mmr_u {</span>
 		unsigned long	rsvd_13_63:51;
 	} s1;
 	struct uvxh_rh_gam_config_mmr_s {
<span class="p_del">-		unsigned long	m_skt:6;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_0_5:6;</span>
 		unsigned long	n_skt:4;			/* RW */
 		unsigned long	rsvd_10_63:54;
 	} sx;
<span class="p_chunk">@@ -2342,20 +3257,28 @@</span> <span class="p_context"> union uvh_rh_gam_config_mmr_u {</span>
 		unsigned long	n_skt:4;			/* RW */
 		unsigned long	rsvd_10_63:54;
 	} s3;
<span class="p_add">+	struct uv4h_rh_gam_config_mmr_s {</span>
<span class="p_add">+		unsigned long	rsvd_0_5:6;</span>
<span class="p_add">+		unsigned long	n_skt:4;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_10_63:54;</span>
<span class="p_add">+	} s4;</span>
 };
 
 /* ========================================================================= */
 /*                    UVH_RH_GAM_GRU_OVERLAY_CONFIG_MMR                      */
 /* ========================================================================= */
<span class="p_del">-#define UVH_RH_GAM_GRU_OVERLAY_CONFIG_MMR 0x1600010UL</span>
 #define UV1H_RH_GAM_GRU_OVERLAY_CONFIG_MMR 0x1600010UL
 #define UV2H_RH_GAM_GRU_OVERLAY_CONFIG_MMR 0x1600010UL
 #define UV3H_RH_GAM_GRU_OVERLAY_CONFIG_MMR 0x1600010UL
<span class="p_add">+#define UV4H_RH_GAM_GRU_OVERLAY_CONFIG_MMR 0x480010UL</span>
<span class="p_add">+#define UVH_RH_GAM_GRU_OVERLAY_CONFIG_MMR (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_RH_GAM_GRU_OVERLAY_CONFIG_MMR :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_RH_GAM_GRU_OVERLAY_CONFIG_MMR :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_RH_GAM_GRU_OVERLAY_CONFIG_MMR :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_RH_GAM_GRU_OVERLAY_CONFIG_MMR)</span>
 
<span class="p_del">-#define UVH_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_SHFT	28</span>
 #define UVH_RH_GAM_GRU_OVERLAY_CONFIG_MMR_N_GRU_SHFT	52
 #define UVH_RH_GAM_GRU_OVERLAY_CONFIG_MMR_ENABLE_SHFT	63
<span class="p_del">-#define UVH_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_MASK	0x00003ffff0000000UL</span>
 #define UVH_RH_GAM_GRU_OVERLAY_CONFIG_MMR_N_GRU_MASK	0x00f0000000000000UL
 #define UVH_RH_GAM_GRU_OVERLAY_CONFIG_MMR_ENABLE_MASK	0x8000000000000000UL
 
<span class="p_chunk">@@ -2368,10 +3291,8 @@</span> <span class="p_context"> union uvh_rh_gam_config_mmr_u {</span>
 #define UV1H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_N_GRU_MASK	0x00f0000000000000UL
 #define UV1H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_ENABLE_MASK	0x8000000000000000UL
 
<span class="p_del">-#define UVXH_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_SHFT	28</span>
 #define UVXH_RH_GAM_GRU_OVERLAY_CONFIG_MMR_N_GRU_SHFT	52
 #define UVXH_RH_GAM_GRU_OVERLAY_CONFIG_MMR_ENABLE_SHFT	63
<span class="p_del">-#define UVXH_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_MASK	0x00003ffff0000000UL</span>
 #define UVXH_RH_GAM_GRU_OVERLAY_CONFIG_MMR_N_GRU_MASK	0x00f0000000000000UL
 #define UVXH_RH_GAM_GRU_OVERLAY_CONFIG_MMR_ENABLE_MASK	0x8000000000000000UL
 
<span class="p_chunk">@@ -2391,12 +3312,28 @@</span> <span class="p_context"> union uvh_rh_gam_config_mmr_u {</span>
 #define UV3H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_MODE_MASK	0x4000000000000000UL
 #define UV3H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_ENABLE_MASK	0x8000000000000000UL
 
<span class="p_add">+#define UV4H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_SHFT	26</span>
<span class="p_add">+#define UV4H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_N_GRU_SHFT	52</span>
<span class="p_add">+#define UV4H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_ENABLE_SHFT	63</span>
<span class="p_add">+#define UV4H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_MASK	0x00003ffffc000000UL</span>
<span class="p_add">+#define UV4H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_N_GRU_MASK	0x00f0000000000000UL</span>
<span class="p_add">+#define UV4H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_ENABLE_MASK	0x8000000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UVH_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_MASK (			\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_MASK :	\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_MASK :	\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_MASK :	\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_MASK)</span>
<span class="p_add">+#define UVH_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_SHFT (			\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_SHFT :	\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_SHFT :	\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_SHFT :	\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_SHFT)</span>
<span class="p_add">+</span>
 union uvh_rh_gam_gru_overlay_config_mmr_u {
 	unsigned long	v;
 	struct uvh_rh_gam_gru_overlay_config_mmr_s {
<span class="p_del">-		unsigned long	rsvd_0_27:28;</span>
<span class="p_del">-		unsigned long	base:18;			/* RW */</span>
<span class="p_del">-		unsigned long	rsvd_46_51:6;</span>
<span class="p_add">+		unsigned long	rsvd_0_51:52;</span>
 		unsigned long	n_gru:4;			/* RW */
 		unsigned long	rsvd_56_62:7;
 		unsigned long	enable:1;			/* RW */
<span class="p_chunk">@@ -2412,8 +3349,7 @@</span> <span class="p_context"> union uvh_rh_gam_gru_overlay_config_mmr_u {</span>
 		unsigned long	enable:1;			/* RW */
 	} s1;
 	struct uvxh_rh_gam_gru_overlay_config_mmr_s {
<span class="p_del">-		unsigned long	rsvd_0_27:28;</span>
<span class="p_del">-		unsigned long	base:18;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_0_45:46;</span>
 		unsigned long	rsvd_46_51:6;
 		unsigned long	n_gru:4;			/* RW */
 		unsigned long	rsvd_56_62:7;
<span class="p_chunk">@@ -2436,6 +3372,15 @@</span> <span class="p_context"> union uvh_rh_gam_gru_overlay_config_mmr_u {</span>
 		unsigned long	mode:1;				/* RW */
 		unsigned long	enable:1;			/* RW */
 	} s3;
<span class="p_add">+	struct uv4h_rh_gam_gru_overlay_config_mmr_s {</span>
<span class="p_add">+		unsigned long	rsvd_0_24:25;</span>
<span class="p_add">+		unsigned long	undef_25:1;			/* Undefined */</span>
<span class="p_add">+		unsigned long	base:20;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_46_51:6;</span>
<span class="p_add">+		unsigned long	n_gru:4;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_56_62:7;</span>
<span class="p_add">+		unsigned long	enable:1;			/* RW */</span>
<span class="p_add">+	} s4;</span>
 };
 
 /* ========================================================================= */
<span class="p_chunk">@@ -2443,6 +3388,14 @@</span> <span class="p_context"> union uvh_rh_gam_gru_overlay_config_mmr_u {</span>
 /* ========================================================================= */
 #define UV1H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR 0x1600030UL
 #define UV2H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR 0x1600030UL
<span class="p_add">+#define UV3H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR uv_undefined(&quot;UV3H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR&quot;)</span>
<span class="p_add">+#define UV4H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR uv_undefined(&quot;UV4H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR&quot;)</span>
<span class="p_add">+#define UVH_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR)</span>
<span class="p_add">+</span>
 
 #define UV1H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR_BASE_SHFT	30
 #define UV1H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR_M_IO_SHFT	46
<span class="p_chunk">@@ -2453,6 +3406,7 @@</span> <span class="p_context"> union uvh_rh_gam_gru_overlay_config_mmr_u {</span>
 #define UV1H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR_N_IO_MASK	0x00f0000000000000UL
 #define UV1H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR_ENABLE_MASK 0x8000000000000000UL
 
<span class="p_add">+</span>
 #define UV2H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR_BASE_SHFT	27
 #define UV2H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR_M_IO_SHFT	46
 #define UV2H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR_N_IO_SHFT	52
<span class="p_chunk">@@ -2462,6 +3416,7 @@</span> <span class="p_context"> union uvh_rh_gam_gru_overlay_config_mmr_u {</span>
 #define UV2H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR_N_IO_MASK	0x00f0000000000000UL
 #define UV2H_RH_GAM_MMIOH_OVERLAY_CONFIG_MMR_ENABLE_MASK 0x8000000000000000UL
 
<span class="p_add">+</span>
 union uvh_rh_gam_mmioh_overlay_config_mmr_u {
 	unsigned long	v;
 	struct uv1h_rh_gam_mmioh_overlay_config_mmr_s {
<span class="p_chunk">@@ -2485,10 +3440,15 @@</span> <span class="p_context"> union uvh_rh_gam_mmioh_overlay_config_mmr_u {</span>
 /* ========================================================================= */
 /*                    UVH_RH_GAM_MMR_OVERLAY_CONFIG_MMR                      */
 /* ========================================================================= */
<span class="p_del">-#define UVH_RH_GAM_MMR_OVERLAY_CONFIG_MMR 0x1600028UL</span>
 #define UV1H_RH_GAM_MMR_OVERLAY_CONFIG_MMR 0x1600028UL
 #define UV2H_RH_GAM_MMR_OVERLAY_CONFIG_MMR 0x1600028UL
 #define UV3H_RH_GAM_MMR_OVERLAY_CONFIG_MMR 0x1600028UL
<span class="p_add">+#define UV4H_RH_GAM_MMR_OVERLAY_CONFIG_MMR 0x480028UL</span>
<span class="p_add">+#define UVH_RH_GAM_MMR_OVERLAY_CONFIG_MMR (				\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_RH_GAM_MMR_OVERLAY_CONFIG_MMR :		\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_RH_GAM_MMR_OVERLAY_CONFIG_MMR :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_RH_GAM_MMR_OVERLAY_CONFIG_MMR :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_RH_GAM_MMR_OVERLAY_CONFIG_MMR)</span>
 
 #define UVH_RH_GAM_MMR_OVERLAY_CONFIG_MMR_BASE_SHFT	26
 #define UVH_RH_GAM_MMR_OVERLAY_CONFIG_MMR_ENABLE_SHFT	63
<span class="p_chunk">@@ -2517,6 +3477,12 @@</span> <span class="p_context"> union uvh_rh_gam_mmioh_overlay_config_mmr_u {</span>
 #define UV3H_RH_GAM_MMR_OVERLAY_CONFIG_MMR_BASE_MASK	0x00003ffffc000000UL
 #define UV3H_RH_GAM_MMR_OVERLAY_CONFIG_MMR_ENABLE_MASK	0x8000000000000000UL
 
<span class="p_add">+#define UV4H_RH_GAM_MMR_OVERLAY_CONFIG_MMR_BASE_SHFT	26</span>
<span class="p_add">+#define UV4H_RH_GAM_MMR_OVERLAY_CONFIG_MMR_ENABLE_SHFT	63</span>
<span class="p_add">+#define UV4H_RH_GAM_MMR_OVERLAY_CONFIG_MMR_BASE_MASK	0x00003ffffc000000UL</span>
<span class="p_add">+#define UV4H_RH_GAM_MMR_OVERLAY_CONFIG_MMR_ENABLE_MASK	0x8000000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
 union uvh_rh_gam_mmr_overlay_config_mmr_u {
 	unsigned long	v;
 	struct uvh_rh_gam_mmr_overlay_config_mmr_s {
<span class="p_chunk">@@ -2550,16 +3516,31 @@</span> <span class="p_context"> union uvh_rh_gam_mmr_overlay_config_mmr_u {</span>
 		unsigned long	rsvd_46_62:17;
 		unsigned long	enable:1;			/* RW */
 	} s3;
<span class="p_add">+	struct uv4h_rh_gam_mmr_overlay_config_mmr_s {</span>
<span class="p_add">+		unsigned long	rsvd_0_25:26;</span>
<span class="p_add">+		unsigned long	base:20;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_46_62:17;</span>
<span class="p_add">+		unsigned long	enable:1;			/* RW */</span>
<span class="p_add">+	} s4;</span>
 };
 
 /* ========================================================================= */
 /*                                 UVH_RTC                                   */
 /* ========================================================================= */
<span class="p_del">-#define UVH_RTC 0x340000UL</span>
<span class="p_add">+#define UV1H_RTC 0x340000UL</span>
<span class="p_add">+#define UV2H_RTC 0x340000UL</span>
<span class="p_add">+#define UV3H_RTC 0x340000UL</span>
<span class="p_add">+#define UV4H_RTC 0xe0000UL</span>
<span class="p_add">+#define UVH_RTC (							\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_RTC :					\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_RTC :					\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_RTC :					\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_RTC)</span>
 
 #define UVH_RTC_REAL_TIME_CLOCK_SHFT			0
 #define UVH_RTC_REAL_TIME_CLOCK_MASK			0x00ffffffffffffffUL
 
<span class="p_add">+</span>
 union uvh_rtc_u {
 	unsigned long	v;
 	struct uvh_rtc_s {
<span class="p_chunk">@@ -2590,6 +3571,7 @@</span> <span class="p_context"> union uvh_rtc_u {</span>
 #define UVH_RTC1_INT_CONFIG_M_MASK			0x0000000000010000UL
 #define UVH_RTC1_INT_CONFIG_APIC_ID_MASK		0xffffffff00000000UL
 
<span class="p_add">+</span>
 union uvh_rtc1_int_config_u {
 	unsigned long	v;
 	struct uvh_rtc1_int_config_s {
<span class="p_chunk">@@ -2609,12 +3591,30 @@</span> <span class="p_context"> union uvh_rtc1_int_config_u {</span>
 /* ========================================================================= */
 /*                               UVH_SCRATCH5                                */
 /* ========================================================================= */
<span class="p_del">-#define UVH_SCRATCH5 0x2d0200UL</span>
<span class="p_del">-#define UVH_SCRATCH5_32 0x778</span>
<span class="p_add">+#define UV1H_SCRATCH5 0x2d0200UL</span>
<span class="p_add">+#define UV2H_SCRATCH5 0x2d0200UL</span>
<span class="p_add">+#define UV3H_SCRATCH5 0x2d0200UL</span>
<span class="p_add">+#define UV4H_SCRATCH5 0xb0200UL</span>
<span class="p_add">+#define UVH_SCRATCH5 (							\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_SCRATCH5 :					\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_SCRATCH5 :					\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_SCRATCH5 :					\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_SCRATCH5)</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV1H_SCRATCH5_32 0x778</span>
<span class="p_add">+#define UV2H_SCRATCH5_32 0x778</span>
<span class="p_add">+#define UV3H_SCRATCH5_32 0x778</span>
<span class="p_add">+#define UV4H_SCRATCH5_32 0x798</span>
<span class="p_add">+#define UVH_SCRATCH5_32 (						\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_SCRATCH5_32 :				\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_SCRATCH5_32 :				\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_SCRATCH5_32 :				\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_SCRATCH5_32)</span>
 
 #define UVH_SCRATCH5_SCRATCH5_SHFT			0
 #define UVH_SCRATCH5_SCRATCH5_MASK			0xffffffffffffffffUL
 
<span class="p_add">+</span>
 union uvh_scratch5_u {
 	unsigned long	v;
 	struct uvh_scratch5_s {
<span class="p_chunk">@@ -2625,14 +3625,39 @@</span> <span class="p_context"> union uvh_scratch5_u {</span>
 /* ========================================================================= */
 /*                            UVH_SCRATCH5_ALIAS                             */
 /* ========================================================================= */
<span class="p_del">-#define UVH_SCRATCH5_ALIAS 0x2d0208UL</span>
<span class="p_del">-#define UVH_SCRATCH5_ALIAS_32 0x780</span>
<span class="p_add">+#define UV1H_SCRATCH5_ALIAS 0x2d0208UL</span>
<span class="p_add">+#define UV2H_SCRATCH5_ALIAS 0x2d0208UL</span>
<span class="p_add">+#define UV3H_SCRATCH5_ALIAS 0x2d0208UL</span>
<span class="p_add">+#define UV4H_SCRATCH5_ALIAS 0xb0208UL</span>
<span class="p_add">+#define UVH_SCRATCH5_ALIAS (						\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_SCRATCH5_ALIAS :				\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_SCRATCH5_ALIAS :				\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_SCRATCH5_ALIAS :				\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_SCRATCH5_ALIAS)</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV1H_SCRATCH5_ALIAS_32 0x780</span>
<span class="p_add">+#define UV2H_SCRATCH5_ALIAS_32 0x780</span>
<span class="p_add">+#define UV3H_SCRATCH5_ALIAS_32 0x780</span>
<span class="p_add">+#define UV4H_SCRATCH5_ALIAS_32 0x7a0</span>
<span class="p_add">+#define UVH_SCRATCH5_ALIAS_32 (						\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_SCRATCH5_ALIAS_32 :				\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_SCRATCH5_ALIAS_32 :				\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_SCRATCH5_ALIAS_32 :				\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_SCRATCH5_ALIAS_32)</span>
 
 
 /* ========================================================================= */
 /*                           UVH_SCRATCH5_ALIAS_2                            */
 /* ========================================================================= */
<span class="p_del">-#define UVH_SCRATCH5_ALIAS_2 0x2d0210UL</span>
<span class="p_add">+#define UV1H_SCRATCH5_ALIAS_2 0x2d0210UL</span>
<span class="p_add">+#define UV2H_SCRATCH5_ALIAS_2 0x2d0210UL</span>
<span class="p_add">+#define UV3H_SCRATCH5_ALIAS_2 0x2d0210UL</span>
<span class="p_add">+#define UV4H_SCRATCH5_ALIAS_2 0xb0210UL</span>
<span class="p_add">+#define UVH_SCRATCH5_ALIAS_2 (						\</span>
<span class="p_add">+	is_uv1_hub() ? UV1H_SCRATCH5_ALIAS_2 :				\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_SCRATCH5_ALIAS_2 :				\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_SCRATCH5_ALIAS_2 :				\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_SCRATCH5_ALIAS_2)</span>
 #define UVH_SCRATCH5_ALIAS_2_32 0x788
 
 
<span class="p_chunk">@@ -2640,76 +3665,255 @@</span> <span class="p_context"> union uvh_scratch5_u {</span>
 /*                          UVXH_EVENT_OCCURRED2                             */
 /* ========================================================================= */
 #define UVXH_EVENT_OCCURRED2 0x70100UL
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_32 0xb68</span>
<span class="p_del">-</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_0_SHFT			0</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_1_SHFT			1</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_2_SHFT			2</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_3_SHFT			3</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_4_SHFT			4</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_5_SHFT			5</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_6_SHFT			6</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_7_SHFT			7</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_8_SHFT			8</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_9_SHFT			9</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_10_SHFT		10</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_11_SHFT		11</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_12_SHFT		12</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_13_SHFT		13</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_14_SHFT		14</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_15_SHFT		15</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_16_SHFT		16</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_17_SHFT		17</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_18_SHFT		18</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_19_SHFT		19</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_20_SHFT		20</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_21_SHFT		21</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_22_SHFT		22</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_23_SHFT		23</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_24_SHFT		24</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_25_SHFT		25</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_26_SHFT		26</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_27_SHFT		27</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_28_SHFT		28</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_29_SHFT		29</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_30_SHFT		30</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_31_SHFT		31</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_0_MASK			0x0000000000000001UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_1_MASK			0x0000000000000002UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_2_MASK			0x0000000000000004UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_3_MASK			0x0000000000000008UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_4_MASK			0x0000000000000010UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_5_MASK			0x0000000000000020UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_6_MASK			0x0000000000000040UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_7_MASK			0x0000000000000080UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_8_MASK			0x0000000000000100UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_9_MASK			0x0000000000000200UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_10_MASK		0x0000000000000400UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_11_MASK		0x0000000000000800UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_12_MASK		0x0000000000001000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_13_MASK		0x0000000000002000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_14_MASK		0x0000000000004000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_15_MASK		0x0000000000008000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_16_MASK		0x0000000000010000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_17_MASK		0x0000000000020000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_18_MASK		0x0000000000040000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_19_MASK		0x0000000000080000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_20_MASK		0x0000000000100000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_21_MASK		0x0000000000200000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_22_MASK		0x0000000000400000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_23_MASK		0x0000000000800000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_24_MASK		0x0000000001000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_25_MASK		0x0000000002000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_26_MASK		0x0000000004000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_27_MASK		0x0000000008000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_28_MASK		0x0000000010000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_29_MASK		0x0000000020000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_30_MASK		0x0000000040000000UL</span>
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_RTC_31_MASK		0x0000000080000000UL</span>
<span class="p_del">-</span>
<span class="p_del">-union uvxh_event_occurred2_u {</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_32 0xb68</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_32 0xb68</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_32 0x608</span>
<span class="p_add">+#define UVH_EVENT_OCCURRED2_32 (					\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_EVENT_OCCURRED2_32 :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_EVENT_OCCURRED2_32 :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_EVENT_OCCURRED2_32)</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_0_SHFT			0</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_1_SHFT			1</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_2_SHFT			2</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_3_SHFT			3</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_4_SHFT			4</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_5_SHFT			5</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_6_SHFT			6</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_7_SHFT			7</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_8_SHFT			8</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_9_SHFT			9</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_10_SHFT		10</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_11_SHFT		11</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_12_SHFT		12</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_13_SHFT		13</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_14_SHFT		14</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_15_SHFT		15</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_16_SHFT		16</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_17_SHFT		17</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_18_SHFT		18</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_19_SHFT		19</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_20_SHFT		20</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_21_SHFT		21</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_22_SHFT		22</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_23_SHFT		23</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_24_SHFT		24</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_25_SHFT		25</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_26_SHFT		26</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_27_SHFT		27</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_28_SHFT		28</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_29_SHFT		29</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_30_SHFT		30</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_31_SHFT		31</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_0_MASK			0x0000000000000001UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_1_MASK			0x0000000000000002UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_2_MASK			0x0000000000000004UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_3_MASK			0x0000000000000008UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_4_MASK			0x0000000000000010UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_5_MASK			0x0000000000000020UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_6_MASK			0x0000000000000040UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_7_MASK			0x0000000000000080UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_8_MASK			0x0000000000000100UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_9_MASK			0x0000000000000200UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_10_MASK		0x0000000000000400UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_11_MASK		0x0000000000000800UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_12_MASK		0x0000000000001000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_13_MASK		0x0000000000002000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_14_MASK		0x0000000000004000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_15_MASK		0x0000000000008000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_16_MASK		0x0000000000010000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_17_MASK		0x0000000000020000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_18_MASK		0x0000000000040000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_19_MASK		0x0000000000080000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_20_MASK		0x0000000000100000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_21_MASK		0x0000000000200000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_22_MASK		0x0000000000400000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_23_MASK		0x0000000000800000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_24_MASK		0x0000000001000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_25_MASK		0x0000000002000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_26_MASK		0x0000000004000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_27_MASK		0x0000000008000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_28_MASK		0x0000000010000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_29_MASK		0x0000000020000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_30_MASK		0x0000000040000000UL</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_RTC_31_MASK		0x0000000080000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_0_SHFT			0</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_1_SHFT			1</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_2_SHFT			2</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_3_SHFT			3</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_4_SHFT			4</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_5_SHFT			5</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_6_SHFT			6</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_7_SHFT			7</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_8_SHFT			8</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_9_SHFT			9</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_10_SHFT		10</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_11_SHFT		11</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_12_SHFT		12</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_13_SHFT		13</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_14_SHFT		14</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_15_SHFT		15</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_16_SHFT		16</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_17_SHFT		17</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_18_SHFT		18</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_19_SHFT		19</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_20_SHFT		20</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_21_SHFT		21</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_22_SHFT		22</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_23_SHFT		23</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_24_SHFT		24</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_25_SHFT		25</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_26_SHFT		26</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_27_SHFT		27</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_28_SHFT		28</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_29_SHFT		29</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_30_SHFT		30</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_31_SHFT		31</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_0_MASK			0x0000000000000001UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_1_MASK			0x0000000000000002UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_2_MASK			0x0000000000000004UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_3_MASK			0x0000000000000008UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_4_MASK			0x0000000000000010UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_5_MASK			0x0000000000000020UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_6_MASK			0x0000000000000040UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_7_MASK			0x0000000000000080UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_8_MASK			0x0000000000000100UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_9_MASK			0x0000000000000200UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_10_MASK		0x0000000000000400UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_11_MASK		0x0000000000000800UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_12_MASK		0x0000000000001000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_13_MASK		0x0000000000002000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_14_MASK		0x0000000000004000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_15_MASK		0x0000000000008000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_16_MASK		0x0000000000010000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_17_MASK		0x0000000000020000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_18_MASK		0x0000000000040000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_19_MASK		0x0000000000080000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_20_MASK		0x0000000000100000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_21_MASK		0x0000000000200000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_22_MASK		0x0000000000400000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_23_MASK		0x0000000000800000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_24_MASK		0x0000000001000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_25_MASK		0x0000000002000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_26_MASK		0x0000000004000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_27_MASK		0x0000000008000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_28_MASK		0x0000000010000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_29_MASK		0x0000000020000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_30_MASK		0x0000000040000000UL</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_RTC_31_MASK		0x0000000080000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT0_SHFT 0</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT1_SHFT 1</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT2_SHFT 2</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT3_SHFT 3</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT4_SHFT 4</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT5_SHFT 5</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT6_SHFT 6</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT7_SHFT 7</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT8_SHFT 8</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT9_SHFT 9</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT10_SHFT 10</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT11_SHFT 11</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT12_SHFT 12</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT13_SHFT 13</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT14_SHFT 14</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT15_SHFT 15</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_INTERVAL_INT_SHFT	16</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_BAU_DASHBOARD_INT_SHFT	17</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_0_SHFT			18</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_1_SHFT			19</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_2_SHFT			20</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_3_SHFT			21</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_4_SHFT			22</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_5_SHFT			23</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_6_SHFT			24</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_7_SHFT			25</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_8_SHFT			26</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_9_SHFT			27</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_10_SHFT		28</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_11_SHFT		29</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_12_SHFT		30</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_13_SHFT		31</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_14_SHFT		32</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_15_SHFT		33</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_16_SHFT		34</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_17_SHFT		35</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_18_SHFT		36</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_19_SHFT		37</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_20_SHFT		38</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_21_SHFT		39</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_22_SHFT		40</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_23_SHFT		41</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_24_SHFT		42</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_25_SHFT		43</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_26_SHFT		44</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_27_SHFT		45</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_28_SHFT		46</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_29_SHFT		47</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_30_SHFT		48</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_31_SHFT		49</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT0_MASK 0x0000000000000001UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT1_MASK 0x0000000000000002UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT2_MASK 0x0000000000000004UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT3_MASK 0x0000000000000008UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT4_MASK 0x0000000000000010UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT5_MASK 0x0000000000000020UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT6_MASK 0x0000000000000040UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT7_MASK 0x0000000000000080UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT8_MASK 0x0000000000000100UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT9_MASK 0x0000000000000200UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT10_MASK 0x0000000000000400UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT11_MASK 0x0000000000000800UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT12_MASK 0x0000000000001000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT13_MASK 0x0000000000002000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT14_MASK 0x0000000000004000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_MESSAGE_ACCELERATOR_INT15_MASK 0x0000000000008000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_INTERVAL_INT_MASK	0x0000000000010000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_BAU_DASHBOARD_INT_MASK	0x0000000000020000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_0_MASK			0x0000000000040000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_1_MASK			0x0000000000080000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_2_MASK			0x0000000000100000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_3_MASK			0x0000000000200000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_4_MASK			0x0000000000400000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_5_MASK			0x0000000000800000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_6_MASK			0x0000000001000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_7_MASK			0x0000000002000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_8_MASK			0x0000000004000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_9_MASK			0x0000000008000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_10_MASK		0x0000000010000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_11_MASK		0x0000000020000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_12_MASK		0x0000000040000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_13_MASK		0x0000000080000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_14_MASK		0x0000000100000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_15_MASK		0x0000000200000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_16_MASK		0x0000000400000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_17_MASK		0x0000000800000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_18_MASK		0x0000001000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_19_MASK		0x0000002000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_20_MASK		0x0000004000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_21_MASK		0x0000008000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_22_MASK		0x0000010000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_23_MASK		0x0000020000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_24_MASK		0x0000040000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_25_MASK		0x0000080000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_26_MASK		0x0000100000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_27_MASK		0x0000200000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_28_MASK		0x0000400000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_29_MASK		0x0000800000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_30_MASK		0x0001000000000000UL</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_RTC_31_MASK		0x0002000000000000UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UVXH_EVENT_OCCURRED2_RTC_1_MASK (				\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_EVENT_OCCURRED2_RTC_1_MASK :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_EVENT_OCCURRED2_RTC_1_MASK :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_EVENT_OCCURRED2_RTC_1_MASK)</span>
<span class="p_add">+</span>
<span class="p_add">+union uvh_event_occurred2_u {</span>
 	unsigned long	v;
<span class="p_del">-	struct uvxh_event_occurred2_s {</span>
<span class="p_add">+	struct uv2h_event_occurred2_s {</span>
 		unsigned long	rtc_0:1;			/* RW */
 		unsigned long	rtc_1:1;			/* RW */
 		unsigned long	rtc_2:1;			/* RW */
<span class="p_chunk">@@ -2743,25 +3947,129 @@</span> <span class="p_context"> union uvxh_event_occurred2_u {</span>
 		unsigned long	rtc_30:1;			/* RW */
 		unsigned long	rtc_31:1;			/* RW */
 		unsigned long	rsvd_32_63:32;
<span class="p_del">-	} sx;</span>
<span class="p_add">+	} s2;</span>
<span class="p_add">+	struct uv3h_event_occurred2_s {</span>
<span class="p_add">+		unsigned long	rtc_0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_1:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_2:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_3:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_4:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_5:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_6:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_7:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_8:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_9:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_10:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_11:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_12:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_13:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_14:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_15:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_16:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_17:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_18:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_19:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_20:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_21:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_22:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_23:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_24:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_25:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_26:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_27:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_28:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_29:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_30:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_31:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_32_63:32;</span>
<span class="p_add">+	} s3;</span>
<span class="p_add">+	struct uv4h_event_occurred2_s {</span>
<span class="p_add">+		unsigned long	message_accelerator_int0:1;	/* RW */</span>
<span class="p_add">+		unsigned long	message_accelerator_int1:1;	/* RW */</span>
<span class="p_add">+		unsigned long	message_accelerator_int2:1;	/* RW */</span>
<span class="p_add">+		unsigned long	message_accelerator_int3:1;	/* RW */</span>
<span class="p_add">+		unsigned long	message_accelerator_int4:1;	/* RW */</span>
<span class="p_add">+		unsigned long	message_accelerator_int5:1;	/* RW */</span>
<span class="p_add">+		unsigned long	message_accelerator_int6:1;	/* RW */</span>
<span class="p_add">+		unsigned long	message_accelerator_int7:1;	/* RW */</span>
<span class="p_add">+		unsigned long	message_accelerator_int8:1;	/* RW */</span>
<span class="p_add">+		unsigned long	message_accelerator_int9:1;	/* RW */</span>
<span class="p_add">+		unsigned long	message_accelerator_int10:1;	/* RW */</span>
<span class="p_add">+		unsigned long	message_accelerator_int11:1;	/* RW */</span>
<span class="p_add">+		unsigned long	message_accelerator_int12:1;	/* RW */</span>
<span class="p_add">+		unsigned long	message_accelerator_int13:1;	/* RW */</span>
<span class="p_add">+		unsigned long	message_accelerator_int14:1;	/* RW */</span>
<span class="p_add">+		unsigned long	message_accelerator_int15:1;	/* RW */</span>
<span class="p_add">+		unsigned long	rtc_interval_int:1;		/* RW */</span>
<span class="p_add">+		unsigned long	bau_dashboard_int:1;		/* RW */</span>
<span class="p_add">+		unsigned long	rtc_0:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_1:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_2:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_3:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_4:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_5:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_6:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_7:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_8:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_9:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_10:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_11:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_12:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_13:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_14:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_15:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_16:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_17:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_18:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_19:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_20:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_21:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_22:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_23:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_24:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_25:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_26:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_27:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_28:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_29:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_30:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rtc_31:1;			/* RW */</span>
<span class="p_add">+		unsigned long	rsvd_50_63:14;</span>
<span class="p_add">+	} s4;</span>
 };
 
 /* ========================================================================= */
 /*                       UVXH_EVENT_OCCURRED2_ALIAS                          */
 /* ========================================================================= */
 #define UVXH_EVENT_OCCURRED2_ALIAS 0x70108UL
<span class="p_del">-#define UVXH_EVENT_OCCURRED2_ALIAS_32 0xb70</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV2H_EVENT_OCCURRED2_ALIAS_32 0xb70</span>
<span class="p_add">+#define UV3H_EVENT_OCCURRED2_ALIAS_32 0xb70</span>
<span class="p_add">+#define UV4H_EVENT_OCCURRED2_ALIAS_32 0x610</span>
<span class="p_add">+#define UVH_EVENT_OCCURRED2_ALIAS_32 (					\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_EVENT_OCCURRED2_ALIAS_32 :			\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_EVENT_OCCURRED2_ALIAS_32 :			\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_EVENT_OCCURRED2_ALIAS_32)</span>
 
 
 /* ========================================================================= */
 /*                   UVXH_LB_BAU_SB_ACTIVATION_STATUS_2                      */
 /* ========================================================================= */
<span class="p_del">-#define UVXH_LB_BAU_SB_ACTIVATION_STATUS_2 0x320130UL</span>
 #define UV2H_LB_BAU_SB_ACTIVATION_STATUS_2 0x320130UL
 #define UV3H_LB_BAU_SB_ACTIVATION_STATUS_2 0x320130UL
<span class="p_del">-#define UVXH_LB_BAU_SB_ACTIVATION_STATUS_2_32 0x9f0</span>
<span class="p_del">-#define UV2H_LB_BAU_SB_ACTIVATION_STATUS_2_32 0x320130UL</span>
<span class="p_del">-#define UV3H_LB_BAU_SB_ACTIVATION_STATUS_2_32 0x320130UL</span>
<span class="p_add">+#define UV4H_LB_BAU_SB_ACTIVATION_STATUS_2 0xc8130UL</span>
<span class="p_add">+#define UVH_LB_BAU_SB_ACTIVATION_STATUS_2 (				\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_SB_ACTIVATION_STATUS_2 :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_SB_ACTIVATION_STATUS_2 :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_SB_ACTIVATION_STATUS_2)</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV2H_LB_BAU_SB_ACTIVATION_STATUS_2_32 0x9f0</span>
<span class="p_add">+#define UV3H_LB_BAU_SB_ACTIVATION_STATUS_2_32 0x9f0</span>
<span class="p_add">+#define UV4H_LB_BAU_SB_ACTIVATION_STATUS_2_32 0xa10</span>
<span class="p_add">+#define UVH_LB_BAU_SB_ACTIVATION_STATUS_2_32 (				\</span>
<span class="p_add">+	is_uv2_hub() ? UV2H_LB_BAU_SB_ACTIVATION_STATUS_2_32 :		\</span>
<span class="p_add">+	is_uv3_hub() ? UV3H_LB_BAU_SB_ACTIVATION_STATUS_2_32 :		\</span>
<span class="p_add">+	/*is_uv4_hub*/ UV4H_LB_BAU_SB_ACTIVATION_STATUS_2_32)</span>
 
 #define UVXH_LB_BAU_SB_ACTIVATION_STATUS_2_AUX_ERROR_SHFT 0
 #define UVXH_LB_BAU_SB_ACTIVATION_STATUS_2_AUX_ERROR_MASK 0xffffffffffffffffUL
<span class="p_chunk">@@ -2772,6 +4080,10 @@</span> <span class="p_context"> union uvxh_event_occurred2_u {</span>
 #define UV3H_LB_BAU_SB_ACTIVATION_STATUS_2_AUX_ERROR_SHFT 0
 #define UV3H_LB_BAU_SB_ACTIVATION_STATUS_2_AUX_ERROR_MASK 0xffffffffffffffffUL
 
<span class="p_add">+#define UV4H_LB_BAU_SB_ACTIVATION_STATUS_2_AUX_ERROR_SHFT 0</span>
<span class="p_add">+#define UV4H_LB_BAU_SB_ACTIVATION_STATUS_2_AUX_ERROR_MASK 0xffffffffffffffffUL</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
 union uvxh_lb_bau_sb_activation_status_2_u {
 	unsigned long	v;
 	struct uvxh_lb_bau_sb_activation_status_2_s {
<span class="p_chunk">@@ -2783,6 +4095,9 @@</span> <span class="p_context"> union uvxh_lb_bau_sb_activation_status_2_u {</span>
 	struct uv3h_lb_bau_sb_activation_status_2_s {
 		unsigned long	aux_error:64;			/* RW */
 	} s3;
<span class="p_add">+	struct uv4h_lb_bau_sb_activation_status_2_s {</span>
<span class="p_add">+		unsigned long	aux_error:64;			/* RW */</span>
<span class="p_add">+	} s4;</span>
 };
 
 /* ========================================================================= */
<span class="p_chunk">@@ -2823,26 +4138,6 @@</span> <span class="p_context"> union uv3h_gr0_gam_gr_config_u {</span>
 };
 
 /* ========================================================================= */
<span class="p_del">-/*                          UV3H_GR1_GAM_GR_CONFIG                           */</span>
<span class="p_del">-/* ========================================================================= */</span>
<span class="p_del">-#define UV3H_GR1_GAM_GR_CONFIG				0x1000028UL</span>
<span class="p_del">-</span>
<span class="p_del">-#define UV3H_GR1_GAM_GR_CONFIG_M_SKT_SHFT		0</span>
<span class="p_del">-#define UV3H_GR1_GAM_GR_CONFIG_SUBSPACE_SHFT		10</span>
<span class="p_del">-#define UV3H_GR1_GAM_GR_CONFIG_M_SKT_MASK		0x000000000000003fUL</span>
<span class="p_del">-#define UV3H_GR1_GAM_GR_CONFIG_SUBSPACE_MASK		0x0000000000000400UL</span>
<span class="p_del">-</span>
<span class="p_del">-union uv3h_gr1_gam_gr_config_u {</span>
<span class="p_del">-	unsigned long	v;</span>
<span class="p_del">-	struct uv3h_gr1_gam_gr_config_s {</span>
<span class="p_del">-		unsigned long	m_skt:6;			/* RW */</span>
<span class="p_del">-		unsigned long	undef_6_9:4;			/* Undefined */</span>
<span class="p_del">-		unsigned long	subspace:1;			/* RW */</span>
<span class="p_del">-		unsigned long	reserved:53;</span>
<span class="p_del">-	} s3;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-/* ========================================================================= */</span>
 /*                   UV3H_RH_GAM_MMIOH_OVERLAY_CONFIG0_MMR                   */
 /* ========================================================================= */
 #define UV3H_RH_GAM_MMIOH_OVERLAY_CONFIG0_MMR		0x1603000UL
<span class="p_chunk">@@ -2924,5 +4219,67 @@</span> <span class="p_context"> union uv3h_rh_gam_mmioh_redirect_config1_mmr_u {</span>
 	} s3;
 };
 
<span class="p_add">+/* ========================================================================= */</span>
<span class="p_add">+/*                       UV4H_LB_PROC_INTD_QUEUE_FIRST                       */</span>
<span class="p_add">+/* ========================================================================= */</span>
<span class="p_add">+#define UV4H_LB_PROC_INTD_QUEUE_FIRST			0xa4100UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV4H_LB_PROC_INTD_QUEUE_FIRST_FIRST_PAYLOAD_ADDRESS_SHFT 6</span>
<span class="p_add">+#define UV4H_LB_PROC_INTD_QUEUE_FIRST_FIRST_PAYLOAD_ADDRESS_MASK 0x00003fffffffffc0UL</span>
<span class="p_add">+</span>
<span class="p_add">+union uv4h_lb_proc_intd_queue_first_u {</span>
<span class="p_add">+	unsigned long	v;</span>
<span class="p_add">+	struct uv4h_lb_proc_intd_queue_first_s {</span>
<span class="p_add">+		unsigned long	undef_0_5:6;			/* Undefined */</span>
<span class="p_add">+		unsigned long	first_payload_address:40;	/* RW */</span>
<span class="p_add">+	} s4;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+/* ========================================================================= */</span>
<span class="p_add">+/*                       UV4H_LB_PROC_INTD_QUEUE_LAST                        */</span>
<span class="p_add">+/* ========================================================================= */</span>
<span class="p_add">+#define UV4H_LB_PROC_INTD_QUEUE_LAST			0xa4108UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV4H_LB_PROC_INTD_QUEUE_LAST_LAST_PAYLOAD_ADDRESS_SHFT 5</span>
<span class="p_add">+#define UV4H_LB_PROC_INTD_QUEUE_LAST_LAST_PAYLOAD_ADDRESS_MASK 0x00003fffffffffe0UL</span>
<span class="p_add">+</span>
<span class="p_add">+union uv4h_lb_proc_intd_queue_last_u {</span>
<span class="p_add">+	unsigned long	v;</span>
<span class="p_add">+	struct uv4h_lb_proc_intd_queue_last_s {</span>
<span class="p_add">+		unsigned long	undef_0_4:5;			/* Undefined */</span>
<span class="p_add">+		unsigned long	last_payload_address:41;	/* RW */</span>
<span class="p_add">+	} s4;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+/* ========================================================================= */</span>
<span class="p_add">+/*                     UV4H_LB_PROC_INTD_SOFT_ACK_CLEAR                      */</span>
<span class="p_add">+/* ========================================================================= */</span>
<span class="p_add">+#define UV4H_LB_PROC_INTD_SOFT_ACK_CLEAR		0xa4118UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV4H_LB_PROC_INTD_SOFT_ACK_CLEAR_SOFT_ACK_PENDING_FLAGS_SHFT 0</span>
<span class="p_add">+#define UV4H_LB_PROC_INTD_SOFT_ACK_CLEAR_SOFT_ACK_PENDING_FLAGS_MASK 0x00000000000000ffUL</span>
<span class="p_add">+</span>
<span class="p_add">+union uv4h_lb_proc_intd_soft_ack_clear_u {</span>
<span class="p_add">+	unsigned long	v;</span>
<span class="p_add">+	struct uv4h_lb_proc_intd_soft_ack_clear_s {</span>
<span class="p_add">+		unsigned long	soft_ack_pending_flags:8;	/* WP */</span>
<span class="p_add">+	} s4;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+/* ========================================================================= */</span>
<span class="p_add">+/*                    UV4H_LB_PROC_INTD_SOFT_ACK_PENDING                     */</span>
<span class="p_add">+/* ========================================================================= */</span>
<span class="p_add">+#define UV4H_LB_PROC_INTD_SOFT_ACK_PENDING		0xa4110UL</span>
<span class="p_add">+</span>
<span class="p_add">+#define UV4H_LB_PROC_INTD_SOFT_ACK_PENDING_SOFT_ACK_FLAGS_SHFT 0</span>
<span class="p_add">+#define UV4H_LB_PROC_INTD_SOFT_ACK_PENDING_SOFT_ACK_FLAGS_MASK 0x00000000000000ffUL</span>
<span class="p_add">+</span>
<span class="p_add">+union uv4h_lb_proc_intd_soft_ack_pending_u {</span>
<span class="p_add">+	unsigned long	v;</span>
<span class="p_add">+	struct uv4h_lb_proc_intd_soft_ack_pending_s {</span>
<span class="p_add">+		unsigned long	soft_ack_flags:8;		/* RW */</span>
<span class="p_add">+	} s4;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 
 #endif /* _ASM_X86_UV_UV_MMRS_H */
<span class="p_header">diff --git a/arch/x86/kernel/apic/x2apic_uv_x.c b/arch/x86/kernel/apic/x2apic_uv_x.c</span>
<span class="p_header">index d7ce96a7daca..29003154fafd 100644</span>
<span class="p_header">--- a/arch/x86/kernel/apic/x2apic_uv_x.c</span>
<span class="p_header">+++ b/arch/x86/kernel/apic/x2apic_uv_x.c</span>
<span class="p_chunk">@@ -48,12 +48,35 @@</span> <span class="p_context"> static u64 gru_start_paddr, gru_end_paddr;</span>
 static u64 gru_dist_base, gru_first_node_paddr = -1LL, gru_last_node_paddr;
 static u64 gru_dist_lmask, gru_dist_umask;
 static union uvh_apicid uvh_apicid;
<span class="p_add">+</span>
<span class="p_add">+/* info derived from CPUID */</span>
<span class="p_add">+static struct {</span>
<span class="p_add">+	unsigned int apicid_shift;</span>
<span class="p_add">+	unsigned int apicid_mask;</span>
<span class="p_add">+	unsigned int socketid_shift;	/* aka pnode_shift for UV1/2/3 */</span>
<span class="p_add">+	unsigned int pnode_mask;</span>
<span class="p_add">+	unsigned int gpa_shift;</span>
<span class="p_add">+} uv_cpuid;</span>
<span class="p_add">+</span>
 int uv_min_hub_revision_id;
 EXPORT_SYMBOL_GPL(uv_min_hub_revision_id);
 unsigned int uv_apicid_hibits;
 EXPORT_SYMBOL_GPL(uv_apicid_hibits);
 
 static struct apic apic_x2apic_uv_x;
<span class="p_add">+static struct uv_hub_info_s uv_hub_info_node0;</span>
<span class="p_add">+</span>
<span class="p_add">+/* Set this to use hardware error handler instead of kernel panic */</span>
<span class="p_add">+static int disable_uv_undefined_panic = 1;</span>
<span class="p_add">+unsigned long uv_undefined(char *str)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if (likely(!disable_uv_undefined_panic))</span>
<span class="p_add">+		panic(&quot;UV: error: undefined MMR: %s\n&quot;, str);</span>
<span class="p_add">+	else</span>
<span class="p_add">+		pr_crit(&quot;UV: error: undefined MMR: %s\n&quot;, str);</span>
<span class="p_add">+	return ~0ul;	/* cause a machine fault  */</span>
<span class="p_add">+}</span>
<span class="p_add">+EXPORT_SYMBOL(uv_undefined);</span>
 
 static unsigned long __init uv_early_read_mmr(unsigned long addr)
 {
<span class="p_chunk">@@ -108,21 +131,71 @@</span> <span class="p_context"> static int __init early_get_pnodeid(void)</span>
 	case UV3_HUB_PART_NUMBER_X:
 		uv_min_hub_revision_id += UV3_HUB_REVISION_BASE;
 		break;
<span class="p_add">+	case UV4_HUB_PART_NUMBER:</span>
<span class="p_add">+		uv_min_hub_revision_id += UV4_HUB_REVISION_BASE - 1;</span>
<span class="p_add">+		break;</span>
 	}
 
 	uv_hub_info-&gt;hub_revision = uv_min_hub_revision_id;
<span class="p_del">-	pnode = (node_id.s.node_id &gt;&gt; 1) &amp; ((1 &lt;&lt; m_n_config.s.n_skt) - 1);</span>
<span class="p_add">+	uv_cpuid.pnode_mask = (1 &lt;&lt; m_n_config.s.n_skt) - 1;</span>
<span class="p_add">+	pnode = (node_id.s.node_id &gt;&gt; 1) &amp; uv_cpuid.pnode_mask;</span>
<span class="p_add">+	uv_cpuid.gpa_shift = 46;	/* default unless changed */</span>
<span class="p_add">+</span>
<span class="p_add">+	pr_info(&quot;UV: rev:%d part#:%x nodeid:%04x n_skt:%d pnmsk:%x pn:%x\n&quot;,</span>
<span class="p_add">+		node_id.s.revision, node_id.s.part_number, node_id.s.node_id,</span>
<span class="p_add">+		m_n_config.s.n_skt, uv_cpuid.pnode_mask, pnode);</span>
 	return pnode;
 }
 
<span class="p_del">-static void __init early_get_apic_pnode_shift(void)</span>
<span class="p_add">+/* [copied from arch/x86/kernel/cpu/topology.c:detect_extended_topology()] */</span>
<span class="p_add">+#define SMT_LEVEL	0	/* leaf 0xb SMT level */</span>
<span class="p_add">+#define INVALID_TYPE	0	/* leaf 0xb sub-leaf types */</span>
<span class="p_add">+#define SMT_TYPE	1</span>
<span class="p_add">+#define CORE_TYPE	2</span>
<span class="p_add">+#define LEAFB_SUBTYPE(ecx)		(((ecx) &gt;&gt; 8) &amp; 0xff)</span>
<span class="p_add">+#define BITS_SHIFT_NEXT_LEVEL(eax)	((eax) &amp; 0x1f)</span>
<span class="p_add">+</span>
<span class="p_add">+static void set_x2apic_bits(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	unsigned int eax, ebx, ecx, edx, sub_index;</span>
<span class="p_add">+	unsigned int sid_shift;</span>
<span class="p_add">+</span>
<span class="p_add">+	cpuid(0, &amp;eax, &amp;ebx, &amp;ecx, &amp;edx);</span>
<span class="p_add">+	if (eax &lt; 0xb) {</span>
<span class="p_add">+		pr_info(&quot;UV: CPU does not have CPUID.11\n&quot;);</span>
<span class="p_add">+		return;</span>
<span class="p_add">+	}</span>
<span class="p_add">+	cpuid_count(0xb, SMT_LEVEL, &amp;eax, &amp;ebx, &amp;ecx, &amp;edx);</span>
<span class="p_add">+	if (ebx == 0 || (LEAFB_SUBTYPE(ecx) != SMT_TYPE)) {</span>
<span class="p_add">+		pr_info(&quot;UV: CPUID.11 not implemented\n&quot;);</span>
<span class="p_add">+		return;</span>
<span class="p_add">+	}</span>
<span class="p_add">+	sid_shift = BITS_SHIFT_NEXT_LEVEL(eax);</span>
<span class="p_add">+	sub_index = 1;</span>
<span class="p_add">+	do {</span>
<span class="p_add">+		cpuid_count(0xb, sub_index, &amp;eax, &amp;ebx, &amp;ecx, &amp;edx);</span>
<span class="p_add">+		if (LEAFB_SUBTYPE(ecx) == CORE_TYPE) {</span>
<span class="p_add">+			sid_shift = BITS_SHIFT_NEXT_LEVEL(eax);</span>
<span class="p_add">+			break;</span>
<span class="p_add">+		}</span>
<span class="p_add">+		sub_index++;</span>
<span class="p_add">+	} while (LEAFB_SUBTYPE(ecx) != INVALID_TYPE);</span>
<span class="p_add">+	uv_cpuid.apicid_shift = 0;</span>
<span class="p_add">+	uv_cpuid.apicid_mask = (~(-1 &lt;&lt; sid_shift));</span>
<span class="p_add">+	uv_cpuid.socketid_shift = sid_shift;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static void __init early_get_apic_socketid_shift(void)</span>
 {
<span class="p_del">-	uvh_apicid.v = uv_early_read_mmr(UVH_APICID);</span>
<span class="p_del">-	if (!uvh_apicid.v)</span>
<span class="p_del">-		/*</span>
<span class="p_del">-		 * Old bios, use default value</span>
<span class="p_del">-		 */</span>
<span class="p_del">-		uvh_apicid.s.pnode_shift = UV_APIC_PNODE_SHIFT;</span>
<span class="p_add">+	if (is_uv2_hub() || is_uv3_hub())</span>
<span class="p_add">+		uvh_apicid.v = uv_early_read_mmr(UVH_APICID);</span>
<span class="p_add">+</span>
<span class="p_add">+	set_x2apic_bits();</span>
<span class="p_add">+</span>
<span class="p_add">+	pr_info(&quot;UV: apicid_shift:%d apicid_mask:0x%x\n&quot;,</span>
<span class="p_add">+		uv_cpuid.apicid_shift, uv_cpuid.apicid_mask);</span>
<span class="p_add">+	pr_info(&quot;UV: socketid_shift:%d pnode_mask:0x%x\n&quot;,</span>
<span class="p_add">+		uv_cpuid.socketid_shift, uv_cpuid.pnode_mask);</span>
 }
 
 /*
<span class="p_chunk">@@ -150,13 +223,18 @@</span> <span class="p_context"> static int __init uv_acpi_madt_oem_check(char *oem_id, char *oem_table_id)</span>
 	if (strncmp(oem_id, &quot;SGI&quot;, 3) != 0)
 		return 0;
 
<span class="p_add">+	/* Setup early hub type field in uv_hub_info for Node 0 */</span>
<span class="p_add">+	uv_cpu_info-&gt;p_uv_hub_info = &amp;uv_hub_info_node0;</span>
<span class="p_add">+</span>
 	/*
 	 * Determine UV arch type.
 	 *   SGI: UV100/1000
 	 *   SGI2: UV2000/3000
 	 *   SGI3: UV300 (truncated to 4 chars because of different varieties)
<span class="p_add">+	 *   SGI4: UV400 (truncated to 4 chars because of different varieties)</span>
 	 */
 	uv_hub_info-&gt;hub_revision =
<span class="p_add">+		!strncmp(oem_id, &quot;SGI4&quot;, 4) ? UV4_HUB_REVISION_BASE :</span>
 		!strncmp(oem_id, &quot;SGI3&quot;, 4) ? UV3_HUB_REVISION_BASE :
 		!strcmp(oem_id, &quot;SGI2&quot;) ? UV2_HUB_REVISION_BASE :
 		!strcmp(oem_id, &quot;SGI&quot;) ? UV1_HUB_REVISION_BASE : 0;
<span class="p_chunk">@@ -165,7 +243,7 @@</span> <span class="p_context"> static int __init uv_acpi_madt_oem_check(char *oem_id, char *oem_table_id)</span>
 		goto badbios;
 
 	pnodeid = early_get_pnodeid();
<span class="p_del">-	early_get_apic_pnode_shift();</span>
<span class="p_add">+	early_get_apic_socketid_shift();</span>
 	x86_platform.is_untracked_pat_range =  uv_is_untracked_pat_range;
 	x86_platform.nmi_init = uv_nmi_init;
 
<span class="p_chunk">@@ -211,17 +289,11 @@</span> <span class="p_context"> int is_uv_system(void)</span>
 }
 EXPORT_SYMBOL_GPL(is_uv_system);
 
<span class="p_del">-DEFINE_PER_CPU(struct uv_hub_info_s, __uv_hub_info);</span>
<span class="p_del">-EXPORT_PER_CPU_SYMBOL_GPL(__uv_hub_info);</span>
<span class="p_del">-</span>
<span class="p_del">-struct uv_blade_info *uv_blade_info;</span>
<span class="p_del">-EXPORT_SYMBOL_GPL(uv_blade_info);</span>
<span class="p_del">-</span>
<span class="p_del">-short *uv_node_to_blade;</span>
<span class="p_del">-EXPORT_SYMBOL_GPL(uv_node_to_blade);</span>
<span class="p_add">+void **__uv_hub_info_list;</span>
<span class="p_add">+EXPORT_SYMBOL_GPL(__uv_hub_info_list);</span>
 
<span class="p_del">-short *uv_cpu_to_blade;</span>
<span class="p_del">-EXPORT_SYMBOL_GPL(uv_cpu_to_blade);</span>
<span class="p_add">+DEFINE_PER_CPU(struct uv_cpu_info_s, __uv_cpu_info);</span>
<span class="p_add">+EXPORT_PER_CPU_SYMBOL_GPL(__uv_cpu_info);</span>
 
 short uv_possible_blades;
 EXPORT_SYMBOL_GPL(uv_possible_blades);
<span class="p_chunk">@@ -229,6 +301,115 @@</span> <span class="p_context"> EXPORT_SYMBOL_GPL(uv_possible_blades);</span>
 unsigned long sn_rtc_cycles_per_second;
 EXPORT_SYMBOL(sn_rtc_cycles_per_second);
 
<span class="p_add">+/* the following values are used for the per node hub info struct */</span>
<span class="p_add">+static __initdata unsigned short *_node_to_pnode;</span>
<span class="p_add">+static __initdata unsigned short _min_socket, _max_socket;</span>
<span class="p_add">+static __initdata unsigned short _min_pnode, _max_pnode, _gr_table_len;</span>
<span class="p_add">+static __initdata struct uv_gam_range_entry *uv_gre_table;</span>
<span class="p_add">+static __initdata struct uv_gam_parameters *uv_gp_table;</span>
<span class="p_add">+static __initdata unsigned short *_socket_to_node;</span>
<span class="p_add">+static __initdata unsigned short *_socket_to_pnode;</span>
<span class="p_add">+static __initdata unsigned short *_pnode_to_socket;</span>
<span class="p_add">+static __initdata struct uv_gam_range_s *_gr_table;</span>
<span class="p_add">+#define	SOCK_EMPTY	((unsigned short)~0)</span>
<span class="p_add">+</span>
<span class="p_add">+extern int uv_hub_info_version(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return UV_HUB_INFO_VERSION;</span>
<span class="p_add">+}</span>
<span class="p_add">+EXPORT_SYMBOL(uv_hub_info_version);</span>
<span class="p_add">+</span>
<span class="p_add">+/* Build GAM range lookup table */</span>
<span class="p_add">+static __init void build_uv_gr_table(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct uv_gam_range_entry *gre = uv_gre_table;</span>
<span class="p_add">+	struct uv_gam_range_s *grt;</span>
<span class="p_add">+	unsigned long last_limit = 0, ram_limit = 0;</span>
<span class="p_add">+	int bytes, i, sid, lsid = -1;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (!gre)</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	bytes = _gr_table_len * sizeof(struct uv_gam_range_s);</span>
<span class="p_add">+	grt = kzalloc(bytes, GFP_KERNEL);</span>
<span class="p_add">+	BUG_ON(!grt);</span>
<span class="p_add">+	_gr_table = grt;</span>
<span class="p_add">+</span>
<span class="p_add">+	for (; gre-&gt;type != UV_GAM_RANGE_TYPE_UNUSED; gre++) {</span>
<span class="p_add">+		if (gre-&gt;type == UV_GAM_RANGE_TYPE_HOLE) {</span>
<span class="p_add">+			if (!ram_limit) {   /* mark hole between ram/non-ram */</span>
<span class="p_add">+				ram_limit = last_limit;</span>
<span class="p_add">+				last_limit = gre-&gt;limit;</span>
<span class="p_add">+				lsid++;</span>
<span class="p_add">+				continue;</span>
<span class="p_add">+			}</span>
<span class="p_add">+			last_limit = gre-&gt;limit;</span>
<span class="p_add">+			pr_info(&quot;UV: extra hole in GAM RE table @%d\n&quot;,</span>
<span class="p_add">+				(int)(gre - uv_gre_table));</span>
<span class="p_add">+			continue;</span>
<span class="p_add">+		}</span>
<span class="p_add">+		if (_max_socket &lt; gre-&gt;sockid) {</span>
<span class="p_add">+			pr_err(&quot;UV: GAM table sockid(%d) too large(&gt;%d) @%d\n&quot;,</span>
<span class="p_add">+				gre-&gt;sockid, _max_socket,</span>
<span class="p_add">+				(int)(gre - uv_gre_table));</span>
<span class="p_add">+			continue;</span>
<span class="p_add">+		}</span>
<span class="p_add">+		sid = gre-&gt;sockid - _min_socket;</span>
<span class="p_add">+		if (lsid &lt; sid) {		/* new range */</span>
<span class="p_add">+			grt = &amp;_gr_table[sid];</span>
<span class="p_add">+			grt-&gt;base = lsid;</span>
<span class="p_add">+			grt-&gt;nasid = gre-&gt;nasid;</span>
<span class="p_add">+			grt-&gt;limit = last_limit = gre-&gt;limit;</span>
<span class="p_add">+			lsid = sid;</span>
<span class="p_add">+			continue;</span>
<span class="p_add">+		}</span>
<span class="p_add">+		if (lsid == sid &amp;&amp; !ram_limit) {	/* update range */</span>
<span class="p_add">+			if (grt-&gt;limit == last_limit) {	/* .. if contiguous */</span>
<span class="p_add">+				grt-&gt;limit = last_limit = gre-&gt;limit;</span>
<span class="p_add">+				continue;</span>
<span class="p_add">+			}</span>
<span class="p_add">+		}</span>
<span class="p_add">+		if (!ram_limit) {		/* non-contiguous ram range */</span>
<span class="p_add">+			grt++;</span>
<span class="p_add">+			grt-&gt;base = sid - 1;</span>
<span class="p_add">+			grt-&gt;nasid = gre-&gt;nasid;</span>
<span class="p_add">+			grt-&gt;limit = last_limit = gre-&gt;limit;</span>
<span class="p_add">+			continue;</span>
<span class="p_add">+		}</span>
<span class="p_add">+		grt++;				/* non-contiguous/non-ram */</span>
<span class="p_add">+		grt-&gt;base = grt - _gr_table;	/* base is this entry */</span>
<span class="p_add">+		grt-&gt;nasid = gre-&gt;nasid;</span>
<span class="p_add">+		grt-&gt;limit = last_limit = gre-&gt;limit;</span>
<span class="p_add">+		lsid++;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	/* shorten table if possible */</span>
<span class="p_add">+	grt++;</span>
<span class="p_add">+	i = grt - _gr_table;</span>
<span class="p_add">+	if (i &lt; _gr_table_len) {</span>
<span class="p_add">+		void *ret;</span>
<span class="p_add">+</span>
<span class="p_add">+		bytes = i * sizeof(struct uv_gam_range_s);</span>
<span class="p_add">+		ret = krealloc(_gr_table, bytes, GFP_KERNEL);</span>
<span class="p_add">+		if (ret) {</span>
<span class="p_add">+			_gr_table = ret;</span>
<span class="p_add">+			_gr_table_len = i;</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	/* display resultant gam range table */</span>
<span class="p_add">+	for (i = 0, grt = _gr_table; i &lt; _gr_table_len; i++, grt++) {</span>
<span class="p_add">+		int gb = grt-&gt;base;</span>
<span class="p_add">+		unsigned long start = gb &lt; 0 ?  0 :</span>
<span class="p_add">+			(unsigned long)_gr_table[gb].limit &lt;&lt; UV_GAM_RANGE_SHFT;</span>
<span class="p_add">+		unsigned long end =</span>
<span class="p_add">+			(unsigned long)grt-&gt;limit &lt;&lt; UV_GAM_RANGE_SHFT;</span>
<span class="p_add">+</span>
<span class="p_add">+		pr_info(&quot;UV: GAM Range %2d %04x 0x%013lx-0x%013lx (%d)\n&quot;,</span>
<span class="p_add">+			i, grt-&gt;nasid, start, end, gb);</span>
<span class="p_add">+	}</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static int uv_wakeup_secondary(int phys_apicid, unsigned long start_rip)
 {
 	unsigned long val;
<span class="p_chunk">@@ -355,7 +536,6 @@</span> <span class="p_context"> static unsigned long set_apic_id(unsigned int id)</span>
 
 static unsigned int uv_read_apic_id(void)
 {
<span class="p_del">-</span>
 	return x2apic_get_apic_id(apic_read(APIC_ID));
 }
 
<span class="p_chunk">@@ -430,58 +610,38 @@</span> <span class="p_context"> static void set_x2apic_extra_bits(int pnode)</span>
 	__this_cpu_write(x2apic_extra_bits, pnode &lt;&lt; uvh_apicid.s.pnode_shift);
 }
 
<span class="p_del">-/*</span>
<span class="p_del">- * Called on boot cpu.</span>
<span class="p_del">- */</span>
<span class="p_del">-static __init int boot_pnode_to_blade(int pnode)</span>
<span class="p_del">-{</span>
<span class="p_del">-	int blade;</span>
<span class="p_del">-</span>
<span class="p_del">-	for (blade = 0; blade &lt; uv_num_possible_blades(); blade++)</span>
<span class="p_del">-		if (pnode == uv_blade_info[blade].pnode)</span>
<span class="p_del">-			return blade;</span>
<span class="p_del">-	BUG();</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-struct redir_addr {</span>
<span class="p_del">-	unsigned long redirect;</span>
<span class="p_del">-	unsigned long alias;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_add">+#define	UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_LENGTH	3</span>
 #define DEST_SHIFT UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_0_MMR_DEST_BASE_SHFT
 
<span class="p_del">-static __initdata struct redir_addr redir_addrs[] = {</span>
<span class="p_del">-	{UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_0_MMR, UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR},</span>
<span class="p_del">-	{UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_1_MMR, UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR},</span>
<span class="p_del">-	{UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_2_MMR, UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR},</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-static unsigned char get_n_lshift(int m_val)</span>
<span class="p_del">-{</span>
<span class="p_del">-	union uv3h_gr0_gam_gr_config_u m_gr_config;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (is_uv1_hub())</span>
<span class="p_del">-		return m_val;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (is_uv2_hub())</span>
<span class="p_del">-		return m_val == 40 ? 40 : 39;</span>
<span class="p_del">-</span>
<span class="p_del">-	m_gr_config.v = uv_read_local_mmr(UV3H_GR0_GAM_GR_CONFIG);</span>
<span class="p_del">-	return m_gr_config.s3.m_skt;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static __init void get_lowmem_redirect(unsigned long *base, unsigned long *size)
 {
 	union uvh_rh_gam_alias210_overlay_config_2_mmr_u alias;
 	union uvh_rh_gam_alias210_redirect_config_2_mmr_u redirect;
<span class="p_add">+	unsigned long m_redirect;</span>
<span class="p_add">+	unsigned long m_overlay;</span>
 	int i;
 
<span class="p_del">-	for (i = 0; i &lt; ARRAY_SIZE(redir_addrs); i++) {</span>
<span class="p_del">-		alias.v = uv_read_local_mmr(redir_addrs[i].alias);</span>
<span class="p_add">+	for (i = 0; i &lt; UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_LENGTH; i++) {</span>
<span class="p_add">+		switch (i) {</span>
<span class="p_add">+		case 0:</span>
<span class="p_add">+			m_redirect = UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_0_MMR;</span>
<span class="p_add">+			m_overlay = UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_0_MMR;</span>
<span class="p_add">+			break;</span>
<span class="p_add">+		case 1:</span>
<span class="p_add">+			m_redirect = UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_1_MMR;</span>
<span class="p_add">+			m_overlay = UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_1_MMR;</span>
<span class="p_add">+			break;</span>
<span class="p_add">+		case 2:</span>
<span class="p_add">+			m_redirect = UVH_RH_GAM_ALIAS210_REDIRECT_CONFIG_2_MMR;</span>
<span class="p_add">+			m_overlay = UVH_RH_GAM_ALIAS210_OVERLAY_CONFIG_2_MMR;</span>
<span class="p_add">+			break;</span>
<span class="p_add">+		}</span>
<span class="p_add">+		alias.v = uv_read_local_mmr(m_overlay);</span>
 		if (alias.s.enable &amp;&amp; alias.s.base == 0) {
 			*size = (1UL &lt;&lt; alias.s.m_alias);
<span class="p_del">-			redirect.v = uv_read_local_mmr(redir_addrs[i].redirect);</span>
<span class="p_del">-			*base = (unsigned long)redirect.s.dest_base &lt;&lt; DEST_SHIFT;</span>
<span class="p_add">+			redirect.v = uv_read_local_mmr(m_redirect);</span>
<span class="p_add">+			*base = (unsigned long)redirect.s.dest_base</span>
<span class="p_add">+							&lt;&lt; DEST_SHIFT;</span>
 			return;
 		}
 	}
<span class="p_chunk">@@ -544,6 +704,8 @@</span> <span class="p_context"> static __init void map_gru_high(int max_pnode)</span>
 {
 	union uvh_rh_gam_gru_overlay_config_mmr_u gru;
 	int shift = UVH_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_SHFT;
<span class="p_add">+	unsigned long mask = UVH_RH_GAM_GRU_OVERLAY_CONFIG_MMR_BASE_MASK;</span>
<span class="p_add">+	unsigned long base;</span>
 
 	gru.v = uv_read_local_mmr(UVH_RH_GAM_GRU_OVERLAY_CONFIG_MMR);
 	if (!gru.s.enable) {
<span class="p_chunk">@@ -555,8 +717,9 @@</span> <span class="p_context"> static __init void map_gru_high(int max_pnode)</span>
 		map_gru_distributed(gru.v);
 		return;
 	}
<span class="p_del">-	map_high(&quot;GRU&quot;, gru.s.base, shift, shift, max_pnode, map_wb);</span>
<span class="p_del">-	gru_start_paddr = ((u64)gru.s.base &lt;&lt; shift);</span>
<span class="p_add">+	base = (gru.v &amp; mask) &gt;&gt; shift;</span>
<span class="p_add">+	map_high(&quot;GRU&quot;, base, shift, shift, max_pnode, map_wb);</span>
<span class="p_add">+	gru_start_paddr = ((u64)base &lt;&lt; shift);</span>
 	gru_end_paddr = gru_start_paddr + (1UL &lt;&lt; shift) * (max_pnode + 1);
 }
 
<span class="p_chunk">@@ -595,6 +758,7 @@</span> <span class="p_context"> static __initdata struct mmioh_config mmiohs[] = {</span>
 	},
 };
 
<span class="p_add">+/* UV3 &amp; UV4 have identical MMIOH overlay configs */</span>
 static __init void map_mmioh_high_uv3(int index, int min_pnode, int max_pnode)
 {
 	union uv3h_rh_gam_mmioh_overlay_config0_mmr_u overlay;
<span class="p_chunk">@@ -674,7 +838,7 @@</span> <span class="p_context"> static __init void map_mmioh_high(int min_pnode, int max_pnode)</span>
 	unsigned long mmr, base;
 	int shift, enable, m_io, n_io;
 
<span class="p_del">-	if (is_uv3_hub()) {</span>
<span class="p_add">+	if (is_uv3_hub() || is_uv4_hub()) {</span>
 		/* Map both MMIOH Regions */
 		map_mmioh_high_uv3(0, min_pnode, max_pnode);
 		map_mmioh_high_uv3(1, min_pnode, max_pnode);
<span class="p_chunk">@@ -739,8 +903,8 @@</span> <span class="p_context"> static __init void uv_rtc_init(void)</span>
  */
 static void uv_heartbeat(unsigned long ignored)
 {
<span class="p_del">-	struct timer_list *timer = &amp;uv_hub_info-&gt;scir.timer;</span>
<span class="p_del">-	unsigned char bits = uv_hub_info-&gt;scir.state;</span>
<span class="p_add">+	struct timer_list *timer = &amp;uv_scir_info-&gt;timer;</span>
<span class="p_add">+	unsigned char bits = uv_scir_info-&gt;state;</span>
 
 	/* flip heartbeat bit */
 	bits ^= SCIR_CPU_HEARTBEAT;
<span class="p_chunk">@@ -760,14 +924,14 @@</span> <span class="p_context"> static void uv_heartbeat(unsigned long ignored)</span>
 
 static void uv_heartbeat_enable(int cpu)
 {
<span class="p_del">-	while (!uv_cpu_hub_info(cpu)-&gt;scir.enabled) {</span>
<span class="p_del">-		struct timer_list *timer = &amp;uv_cpu_hub_info(cpu)-&gt;scir.timer;</span>
<span class="p_add">+	while (!uv_cpu_scir_info(cpu)-&gt;enabled) {</span>
<span class="p_add">+		struct timer_list *timer = &amp;uv_cpu_scir_info(cpu)-&gt;timer;</span>
 
 		uv_set_cpu_scir_bits(cpu, SCIR_CPU_HEARTBEAT|SCIR_CPU_ACTIVITY);
 		setup_timer(timer, uv_heartbeat, cpu);
 		timer-&gt;expires = jiffies + SCIR_CPU_HB_INTERVAL;
 		add_timer_on(timer, cpu);
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;scir.enabled = 1;</span>
<span class="p_add">+		uv_cpu_scir_info(cpu)-&gt;enabled = 1;</span>
 
 		/* also ensure that boot cpu is enabled */
 		cpu = 0;
<span class="p_chunk">@@ -777,9 +941,9 @@</span> <span class="p_context"> static void uv_heartbeat_enable(int cpu)</span>
 #ifdef CONFIG_HOTPLUG_CPU
 static void uv_heartbeat_disable(int cpu)
 {
<span class="p_del">-	if (uv_cpu_hub_info(cpu)-&gt;scir.enabled) {</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;scir.enabled = 0;</span>
<span class="p_del">-		del_timer(&amp;uv_cpu_hub_info(cpu)-&gt;scir.timer);</span>
<span class="p_add">+	if (uv_cpu_scir_info(cpu)-&gt;enabled) {</span>
<span class="p_add">+		uv_cpu_scir_info(cpu)-&gt;enabled = 0;</span>
<span class="p_add">+		del_timer(&amp;uv_cpu_scir_info(cpu)-&gt;timer);</span>
 	}
 	uv_set_cpu_scir_bits(cpu, 0xff);
 }
<span class="p_chunk">@@ -862,155 +1026,475 @@</span> <span class="p_context"> int uv_set_vga_state(struct pci_dev *pdev, bool decode,</span>
 void uv_cpu_init(void)
 {
 	/* CPU 0 initialization will be done via uv_system_init. */
<span class="p_del">-	if (!uv_blade_info)</span>
<span class="p_add">+	if (smp_processor_id() == 0)</span>
 		return;
 
<span class="p_del">-	uv_blade_info[uv_numa_blade_id()].nr_online_cpus++;</span>
<span class="p_add">+	uv_hub_info-&gt;nr_online_cpus++;</span>
 
 	if (get_uv_system_type() == UV_NON_UNIQUE_APIC)
 		set_x2apic_extra_bits(uv_hub_info-&gt;pnode);
 }
 
<span class="p_del">-void __init uv_system_init(void)</span>
<span class="p_add">+struct mn {</span>
<span class="p_add">+	unsigned char	m_val;</span>
<span class="p_add">+	unsigned char	n_val;</span>
<span class="p_add">+	unsigned char	m_shift;</span>
<span class="p_add">+	unsigned char	n_lshift;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+static void get_mn(struct mn *mnp)</span>
 {
<span class="p_del">-	union uvh_rh_gam_config_mmr_u  m_n_config;</span>
<span class="p_del">-	union uvh_node_id_u node_id;</span>
<span class="p_del">-	unsigned long gnode_upper, lowmem_redir_base, lowmem_redir_size;</span>
<span class="p_del">-	int bytes, nid, cpu, lcpu, pnode, blade, i, j, m_val, n_val;</span>
<span class="p_del">-	int gnode_extra, min_pnode = 999999, max_pnode = -1;</span>
<span class="p_del">-	unsigned long mmr_base, present, paddr;</span>
<span class="p_del">-	unsigned short pnode_mask;</span>
<span class="p_del">-	unsigned char n_lshift;</span>
<span class="p_del">-	char *hub = (is_uv1_hub() ? &quot;UV100/1000&quot; :</span>
<span class="p_del">-		    (is_uv2_hub() ? &quot;UV2000/3000&quot; :</span>
<span class="p_del">-		    (is_uv3_hub() ? &quot;UV300&quot; : NULL)));</span>
<span class="p_add">+	union uvh_rh_gam_config_mmr_u m_n_config;</span>
<span class="p_add">+	union uv3h_gr0_gam_gr_config_u m_gr_config;</span>
 
<span class="p_del">-	if (!hub) {</span>
<span class="p_del">-		pr_err(&quot;UV: Unknown/unsupported UV hub\n&quot;);</span>
<span class="p_del">-		return;</span>
<span class="p_add">+	m_n_config.v = uv_read_local_mmr(UVH_RH_GAM_CONFIG_MMR);</span>
<span class="p_add">+	mnp-&gt;n_val = m_n_config.s.n_skt;</span>
<span class="p_add">+	if (is_uv4_hub()) {</span>
<span class="p_add">+		mnp-&gt;m_val = 0;</span>
<span class="p_add">+		mnp-&gt;n_lshift = 0;</span>
<span class="p_add">+	} else if (is_uv3_hub()) {</span>
<span class="p_add">+		mnp-&gt;m_val = m_n_config.s3.m_skt;</span>
<span class="p_add">+		m_gr_config.v = uv_read_local_mmr(UV3H_GR0_GAM_GR_CONFIG);</span>
<span class="p_add">+		mnp-&gt;n_lshift = m_gr_config.s3.m_skt;</span>
<span class="p_add">+	} else if (is_uv2_hub()) {</span>
<span class="p_add">+		mnp-&gt;m_val = m_n_config.s2.m_skt;</span>
<span class="p_add">+		mnp-&gt;n_lshift = mnp-&gt;m_val == 40 ? 40 : 39;</span>
<span class="p_add">+	} else if (is_uv1_hub()) {</span>
<span class="p_add">+		mnp-&gt;m_val = m_n_config.s1.m_skt;</span>
<span class="p_add">+		mnp-&gt;n_lshift = mnp-&gt;m_val;</span>
 	}
<span class="p_del">-	pr_info(&quot;UV: Found %s hub\n&quot;, hub);</span>
<span class="p_add">+	mnp-&gt;m_shift = mnp-&gt;m_val ? 64 - mnp-&gt;m_val : 0;</span>
<span class="p_add">+}</span>
 
<span class="p_del">-	map_low_mmrs();</span>
<span class="p_add">+void __init uv_init_hub_info(struct uv_hub_info_s *hub_info)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct mn mn = {0};	/* avoid unitialized warnings */</span>
<span class="p_add">+	union uvh_node_id_u node_id;</span>
 
<span class="p_del">-	m_n_config.v = uv_read_local_mmr(UVH_RH_GAM_CONFIG_MMR );</span>
<span class="p_del">-	m_val = m_n_config.s.m_skt;</span>
<span class="p_del">-	n_val = m_n_config.s.n_skt;</span>
<span class="p_del">-	pnode_mask = (1 &lt;&lt; n_val) - 1;</span>
<span class="p_del">-	n_lshift = get_n_lshift(m_val);</span>
<span class="p_del">-	mmr_base =</span>
<span class="p_del">-	    uv_read_local_mmr(UVH_RH_GAM_MMR_OVERLAY_CONFIG_MMR) &amp;</span>
<span class="p_del">-	    ~UV_MMR_ENABLE;</span>
<span class="p_add">+	get_mn(&amp;mn);</span>
<span class="p_add">+	hub_info-&gt;m_val = mn.m_val;</span>
<span class="p_add">+	hub_info-&gt;n_val = mn.n_val;</span>
<span class="p_add">+	hub_info-&gt;m_shift = mn.m_shift;</span>
<span class="p_add">+	hub_info-&gt;n_lshift = mn.n_lshift ? mn.n_lshift : 0;</span>
<span class="p_add">+</span>
<span class="p_add">+	hub_info-&gt;hub_revision = uv_hub_info-&gt;hub_revision;</span>
<span class="p_add">+	hub_info-&gt;pnode_mask = uv_cpuid.pnode_mask;</span>
<span class="p_add">+	hub_info-&gt;min_pnode = _min_pnode;</span>
<span class="p_add">+	hub_info-&gt;min_socket = _min_socket;</span>
<span class="p_add">+	hub_info-&gt;pnode_to_socket = _pnode_to_socket;</span>
<span class="p_add">+	hub_info-&gt;socket_to_node = _socket_to_node;</span>
<span class="p_add">+	hub_info-&gt;socket_to_pnode = _socket_to_pnode;</span>
<span class="p_add">+	hub_info-&gt;gr_table_len = _gr_table_len;</span>
<span class="p_add">+	hub_info-&gt;gr_table = _gr_table;</span>
<span class="p_add">+	hub_info-&gt;gpa_mask = mn.m_val ?</span>
<span class="p_add">+		(1UL &lt;&lt; (mn.m_val + mn.n_val)) - 1 :</span>
<span class="p_add">+		(1UL &lt;&lt; uv_cpuid.gpa_shift) - 1;</span>
 
 	node_id.v = uv_read_local_mmr(UVH_NODE_ID);
<span class="p_del">-	gnode_extra = (node_id.s.node_id &amp; ~((1 &lt;&lt; n_val) - 1)) &gt;&gt; 1;</span>
<span class="p_del">-	gnode_upper = ((unsigned long)gnode_extra  &lt;&lt; m_val);</span>
<span class="p_del">-	pr_info(&quot;UV: N:%d M:%d pnode_mask:0x%x gnode_upper/extra:0x%lx/0x%x n_lshift 0x%x\n&quot;,</span>
<span class="p_del">-			n_val, m_val, pnode_mask, gnode_upper, gnode_extra,</span>
<span class="p_del">-			n_lshift);</span>
<span class="p_add">+	hub_info-&gt;gnode_extra =</span>
<span class="p_add">+		(node_id.s.node_id &amp; ~((1 &lt;&lt; mn.n_val) - 1)) &gt;&gt; 1;</span>
<span class="p_add">+</span>
<span class="p_add">+	hub_info-&gt;gnode_upper =</span>
<span class="p_add">+		((unsigned long)hub_info-&gt;gnode_extra &lt;&lt; mn.m_val);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (uv_gp_table) {</span>
<span class="p_add">+		hub_info-&gt;global_mmr_base = uv_gp_table-&gt;mmr_base;</span>
<span class="p_add">+		hub_info-&gt;global_mmr_shift = uv_gp_table-&gt;mmr_shift;</span>
<span class="p_add">+		hub_info-&gt;global_gru_base = uv_gp_table-&gt;gru_base;</span>
<span class="p_add">+		hub_info-&gt;global_gru_shift = uv_gp_table-&gt;gru_shift;</span>
<span class="p_add">+		hub_info-&gt;gpa_shift = uv_gp_table-&gt;gpa_shift;</span>
<span class="p_add">+		hub_info-&gt;gpa_mask = (1UL &lt;&lt; hub_info-&gt;gpa_shift) - 1;</span>
<span class="p_add">+	} else {</span>
<span class="p_add">+		hub_info-&gt;global_mmr_base =</span>
<span class="p_add">+			uv_read_local_mmr(UVH_RH_GAM_MMR_OVERLAY_CONFIG_MMR) &amp;</span>
<span class="p_add">+					~UV_MMR_ENABLE;</span>
<span class="p_add">+		hub_info-&gt;global_mmr_shift = _UV_GLOBAL_MMR64_PNODE_SHIFT;</span>
<span class="p_add">+	}</span>
 
<span class="p_del">-	pr_info(&quot;UV: global MMR base 0x%lx\n&quot;, mmr_base);</span>
<span class="p_add">+	get_lowmem_redirect(</span>
<span class="p_add">+		&amp;hub_info-&gt;lowmem_remap_base, &amp;hub_info-&gt;lowmem_remap_top);</span>
 
<span class="p_del">-	for(i = 0; i &lt; UVH_NODE_PRESENT_TABLE_DEPTH; i++)</span>
<span class="p_del">-		uv_possible_blades +=</span>
<span class="p_del">-		  hweight64(uv_read_local_mmr( UVH_NODE_PRESENT_TABLE + i * 8));</span>
<span class="p_add">+	hub_info-&gt;apic_pnode_shift = uv_cpuid.socketid_shift;</span>
 
<span class="p_del">-	/* uv_num_possible_blades() is really the hub count */</span>
<span class="p_del">-	pr_info(&quot;UV: Found %d blades, %d hubs\n&quot;,</span>
<span class="p_del">-			is_uv1_hub() ? uv_num_possible_blades() :</span>
<span class="p_del">-			(uv_num_possible_blades() + 1) / 2,</span>
<span class="p_del">-			uv_num_possible_blades());</span>
<span class="p_add">+	/* show system specific info */</span>
<span class="p_add">+	pr_info(&quot;UV: N:%d M:%d m_shift:%d n_lshift:%d\n&quot;,</span>
<span class="p_add">+		hub_info-&gt;n_val, hub_info-&gt;m_val,</span>
<span class="p_add">+		hub_info-&gt;m_shift, hub_info-&gt;n_lshift);</span>
 
<span class="p_del">-	bytes = sizeof(struct uv_blade_info) * uv_num_possible_blades();</span>
<span class="p_del">-	uv_blade_info = kzalloc(bytes, GFP_KERNEL);</span>
<span class="p_del">-	BUG_ON(!uv_blade_info);</span>
<span class="p_add">+	pr_info(&quot;UV: gpa_mask/shift:0x%lx/%d pnode_mask:0x%x apic_pns:%d\n&quot;,</span>
<span class="p_add">+		hub_info-&gt;gpa_mask, hub_info-&gt;gpa_shift,</span>
<span class="p_add">+		hub_info-&gt;pnode_mask, hub_info-&gt;apic_pnode_shift);</span>
 
<span class="p_del">-	for (blade = 0; blade &lt; uv_num_possible_blades(); blade++)</span>
<span class="p_del">-		uv_blade_info[blade].memory_nid = -1;</span>
<span class="p_add">+	pr_info(&quot;UV: mmr_base/shift:0x%lx/%ld gru_base/shift:0x%lx/%ld\n&quot;,</span>
<span class="p_add">+		hub_info-&gt;global_mmr_base, hub_info-&gt;global_mmr_shift,</span>
<span class="p_add">+		hub_info-&gt;global_gru_base, hub_info-&gt;global_gru_shift);</span>
 
<span class="p_del">-	get_lowmem_redirect(&amp;lowmem_redir_base, &amp;lowmem_redir_size);</span>
<span class="p_add">+	pr_info(&quot;UV: gnode_upper:0x%lx gnode_extra:0x%x\n&quot;,</span>
<span class="p_add">+		hub_info-&gt;gnode_upper, hub_info-&gt;gnode_extra);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static void __init decode_gam_params(unsigned long ptr)</span>
<span class="p_add">+{</span>
<span class="p_add">+	uv_gp_table = (struct uv_gam_parameters *)ptr;</span>
<span class="p_add">+</span>
<span class="p_add">+	pr_info(&quot;UV: GAM Params...\n&quot;);</span>
<span class="p_add">+	pr_info(&quot;UV: mmr_base/shift:0x%llx/%d gru_base/shift:0x%llx/%d gpa_shift:%d\n&quot;,</span>
<span class="p_add">+		uv_gp_table-&gt;mmr_base, uv_gp_table-&gt;mmr_shift,</span>
<span class="p_add">+		uv_gp_table-&gt;gru_base, uv_gp_table-&gt;gru_shift,</span>
<span class="p_add">+		uv_gp_table-&gt;gpa_shift);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static void __init decode_gam_rng_tbl(unsigned long ptr)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct uv_gam_range_entry *gre = (struct uv_gam_range_entry *)ptr;</span>
<span class="p_add">+	unsigned long lgre = 0;</span>
<span class="p_add">+	int index = 0;</span>
<span class="p_add">+	int sock_min = 999999, pnode_min = 99999;</span>
<span class="p_add">+	int sock_max = -1, pnode_max = -1;</span>
<span class="p_add">+</span>
<span class="p_add">+	uv_gre_table = gre;</span>
<span class="p_add">+	for (; gre-&gt;type != UV_GAM_RANGE_TYPE_UNUSED; gre++) {</span>
<span class="p_add">+		if (!index) {</span>
<span class="p_add">+			pr_info(&quot;UV: GAM Range Table...\n&quot;);</span>
<span class="p_add">+			pr_info(&quot;UV:  # %20s %14s %5s %4s %5s %3s %2s %3s\n&quot;,</span>
<span class="p_add">+				&quot;Range&quot;, &quot;&quot;, &quot;Size&quot;, &quot;Type&quot;, &quot;NASID&quot;,</span>
<span class="p_add">+				&quot;SID&quot;, &quot;PN&quot;, &quot;PXM&quot;);</span>
<span class="p_add">+		}</span>
<span class="p_add">+		pr_info(</span>
<span class="p_add">+		&quot;UV: %2d: 0x%014lx-0x%014lx %5luG %3d   %04x  %02x %02x %3d\n&quot;,</span>
<span class="p_add">+			index++,</span>
<span class="p_add">+			(unsigned long)lgre &lt;&lt; UV_GAM_RANGE_SHFT,</span>
<span class="p_add">+			(unsigned long)gre-&gt;limit &lt;&lt; UV_GAM_RANGE_SHFT,</span>
<span class="p_add">+			((unsigned long)(gre-&gt;limit - lgre)) &gt;&gt;</span>
<span class="p_add">+				(30 - UV_GAM_RANGE_SHFT), /* 64M -&gt; 1G */</span>
<span class="p_add">+			gre-&gt;type, gre-&gt;nasid, gre-&gt;sockid,</span>
<span class="p_add">+			gre-&gt;pnode, gre-&gt;pxm);</span>
<span class="p_add">+</span>
<span class="p_add">+		lgre = gre-&gt;limit;</span>
<span class="p_add">+		if (sock_min &gt; gre-&gt;sockid)</span>
<span class="p_add">+			sock_min = gre-&gt;sockid;</span>
<span class="p_add">+		if (sock_max &lt; gre-&gt;sockid)</span>
<span class="p_add">+			sock_max = gre-&gt;sockid;</span>
<span class="p_add">+		if (pnode_min &gt; gre-&gt;pnode)</span>
<span class="p_add">+			pnode_min = gre-&gt;pnode;</span>
<span class="p_add">+		if (pnode_max &lt; gre-&gt;pnode)</span>
<span class="p_add">+			pnode_max = gre-&gt;pnode;</span>
<span class="p_add">+	}</span>
<span class="p_add">+	_min_socket = sock_min;</span>
<span class="p_add">+	_max_socket = sock_max;</span>
<span class="p_add">+	_min_pnode = pnode_min;</span>
<span class="p_add">+	_max_pnode = pnode_max;</span>
<span class="p_add">+	_gr_table_len = index;</span>
<span class="p_add">+	pr_info(</span>
<span class="p_add">+	&quot;UV: GRT: %d entries, sockets(min:%x,max:%x) pnodes(min:%x,max:%x)\n&quot;,</span>
<span class="p_add">+		index, _min_socket, _max_socket, _min_pnode, _max_pnode);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static void __init decode_uv_systab(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct uv_systab *st;</span>
<span class="p_add">+	int i;</span>
<span class="p_add">+</span>
<span class="p_add">+	st = uv_systab;</span>
<span class="p_add">+	if ((!st || st-&gt;revision &lt; UV_SYSTAB_VERSION_UV4) &amp;&amp; !is_uv4_hub())</span>
<span class="p_add">+		return;</span>
<span class="p_add">+	if (st-&gt;revision != UV_SYSTAB_VERSION_UV4_LATEST) {</span>
<span class="p_add">+		pr_crit(</span>
<span class="p_add">+		&quot;UV: BIOS UVsystab version(%x) mismatch, expecting(%x)\n&quot;,</span>
<span class="p_add">+			st-&gt;revision, UV_SYSTAB_VERSION_UV4_LATEST);</span>
<span class="p_add">+		BUG();</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	for (i = 0; st-&gt;entry[i].type != UV_SYSTAB_TYPE_UNUSED; i++) {</span>
<span class="p_add">+		unsigned long ptr = st-&gt;entry[i].offset;</span>
 
<span class="p_del">-	bytes = sizeof(uv_node_to_blade[0]) * num_possible_nodes();</span>
<span class="p_del">-	uv_node_to_blade = kmalloc(bytes, GFP_KERNEL);</span>
<span class="p_del">-	BUG_ON(!uv_node_to_blade);</span>
<span class="p_del">-	memset(uv_node_to_blade, 255, bytes);</span>
<span class="p_add">+		if (!ptr)</span>
<span class="p_add">+			continue;</span>
<span class="p_add">+</span>
<span class="p_add">+		ptr = ptr + (unsigned long)st;</span>
<span class="p_add">+</span>
<span class="p_add">+		switch (st-&gt;entry[i].type) {</span>
<span class="p_add">+		case UV_SYSTAB_TYPE_GAM_PARAMS:</span>
<span class="p_add">+			decode_gam_params(ptr);</span>
<span class="p_add">+			break;</span>
<span class="p_add">+</span>
<span class="p_add">+		case UV_SYSTAB_TYPE_GAM_RNG_TBL:</span>
<span class="p_add">+			decode_gam_rng_tbl(ptr);</span>
<span class="p_add">+			break;</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+}</span>
 
<span class="p_del">-	bytes = sizeof(uv_cpu_to_blade[0]) * num_possible_cpus();</span>
<span class="p_del">-	uv_cpu_to_blade = kmalloc(bytes, GFP_KERNEL);</span>
<span class="p_del">-	BUG_ON(!uv_cpu_to_blade);</span>
<span class="p_del">-	memset(uv_cpu_to_blade, 255, bytes);</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Setup physical blade translations from UVH_NODE_PRESENT_TABLE</span>
<span class="p_add">+ * .. NB: UVH_NODE_PRESENT_TABLE is going away,</span>
<span class="p_add">+ * .. being replaced by GAM Range Table</span>
<span class="p_add">+ */</span>
<span class="p_add">+static __init void boot_init_possible_blades(struct uv_hub_info_s *hub_info)</span>
<span class="p_add">+{</span>
<span class="p_add">+	int i, uv_pb = 0;</span>
 
<span class="p_del">-	blade = 0;</span>
<span class="p_add">+	pr_info(&quot;UV: NODE_PRESENT_DEPTH = %d\n&quot;, UVH_NODE_PRESENT_TABLE_DEPTH);</span>
 	for (i = 0; i &lt; UVH_NODE_PRESENT_TABLE_DEPTH; i++) {
<span class="p_del">-		present = uv_read_local_mmr(UVH_NODE_PRESENT_TABLE + i * 8);</span>
<span class="p_del">-		for (j = 0; j &lt; 64; j++) {</span>
<span class="p_del">-			if (!test_bit(j, &amp;present))</span>
<span class="p_del">-				continue;</span>
<span class="p_del">-			pnode = (i * 64 + j) &amp; pnode_mask;</span>
<span class="p_del">-			uv_blade_info[blade].pnode = pnode;</span>
<span class="p_del">-			uv_blade_info[blade].nr_possible_cpus = 0;</span>
<span class="p_del">-			uv_blade_info[blade].nr_online_cpus = 0;</span>
<span class="p_del">-			spin_lock_init(&amp;uv_blade_info[blade].nmi_lock);</span>
<span class="p_del">-			min_pnode = min(pnode, min_pnode);</span>
<span class="p_del">-			max_pnode = max(pnode, max_pnode);</span>
<span class="p_del">-			blade++;</span>
<span class="p_add">+		unsigned long np;</span>
<span class="p_add">+</span>
<span class="p_add">+		np = uv_read_local_mmr(UVH_NODE_PRESENT_TABLE + i * 8);</span>
<span class="p_add">+		if (np)</span>
<span class="p_add">+			pr_info(&quot;UV: NODE_PRESENT(%d) = 0x%016lx\n&quot;, i, np);</span>
<span class="p_add">+</span>
<span class="p_add">+		uv_pb += hweight64(np);</span>
<span class="p_add">+	}</span>
<span class="p_add">+	if (uv_possible_blades != uv_pb)</span>
<span class="p_add">+		uv_possible_blades = uv_pb;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static void __init build_socket_tables(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct uv_gam_range_entry *gre = uv_gre_table;</span>
<span class="p_add">+	int num, nump;</span>
<span class="p_add">+	int cpu, i, lnid;</span>
<span class="p_add">+	int minsock = _min_socket;</span>
<span class="p_add">+	int maxsock = _max_socket;</span>
<span class="p_add">+	int minpnode = _min_pnode;</span>
<span class="p_add">+	int maxpnode = _max_pnode;</span>
<span class="p_add">+	size_t bytes;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (!gre) {</span>
<span class="p_add">+		if (is_uv1_hub() || is_uv2_hub() || is_uv3_hub()) {</span>
<span class="p_add">+			pr_info(&quot;UV: No UVsystab socket table, ignoring\n&quot;);</span>
<span class="p_add">+			return;		/* not required */</span>
 		}
<span class="p_add">+		pr_crit(</span>
<span class="p_add">+		&quot;UV: Error: UVsystab address translations not available!\n&quot;);</span>
<span class="p_add">+		BUG();</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	/* build socket id -&gt; node id, pnode */</span>
<span class="p_add">+	num = maxsock - minsock + 1;</span>
<span class="p_add">+	bytes = num * sizeof(_socket_to_node[0]);</span>
<span class="p_add">+	_socket_to_node = kmalloc(bytes, GFP_KERNEL);</span>
<span class="p_add">+	_socket_to_pnode = kmalloc(bytes, GFP_KERNEL);</span>
<span class="p_add">+</span>
<span class="p_add">+	nump = maxpnode - minpnode + 1;</span>
<span class="p_add">+	bytes = nump * sizeof(_pnode_to_socket[0]);</span>
<span class="p_add">+	_pnode_to_socket = kmalloc(bytes, GFP_KERNEL);</span>
<span class="p_add">+	BUG_ON(!_socket_to_node || !_socket_to_pnode || !_pnode_to_socket);</span>
<span class="p_add">+</span>
<span class="p_add">+	for (i = 0; i &lt; num; i++)</span>
<span class="p_add">+		_socket_to_node[i] = _socket_to_pnode[i] = SOCK_EMPTY;</span>
<span class="p_add">+</span>
<span class="p_add">+	for (i = 0; i &lt; nump; i++)</span>
<span class="p_add">+		_pnode_to_socket[i] = SOCK_EMPTY;</span>
<span class="p_add">+</span>
<span class="p_add">+	/* fill in pnode/node/addr conversion list values */</span>
<span class="p_add">+	pr_info(&quot;UV: GAM Building socket/pnode/pxm conversion tables\n&quot;);</span>
<span class="p_add">+	for (; gre-&gt;type != UV_GAM_RANGE_TYPE_UNUSED; gre++) {</span>
<span class="p_add">+		if (gre-&gt;type == UV_GAM_RANGE_TYPE_HOLE)</span>
<span class="p_add">+			continue;</span>
<span class="p_add">+		i = gre-&gt;sockid - minsock;</span>
<span class="p_add">+		if (_socket_to_pnode[i] != SOCK_EMPTY)</span>
<span class="p_add">+			continue;	/* duplicate */</span>
<span class="p_add">+		_socket_to_pnode[i] = gre-&gt;pnode;</span>
<span class="p_add">+		_socket_to_node[i] = gre-&gt;pxm;</span>
<span class="p_add">+</span>
<span class="p_add">+		i = gre-&gt;pnode - minpnode;</span>
<span class="p_add">+		_pnode_to_socket[i] = gre-&gt;sockid;</span>
<span class="p_add">+</span>
<span class="p_add">+		pr_info(</span>
<span class="p_add">+		&quot;UV: sid:%02x type:%d nasid:%04x pn:%02x pxm:%2d pn2s:%2x\n&quot;,</span>
<span class="p_add">+			gre-&gt;sockid, gre-&gt;type, gre-&gt;nasid,</span>
<span class="p_add">+			_socket_to_pnode[gre-&gt;sockid - minsock],</span>
<span class="p_add">+			_socket_to_node[gre-&gt;sockid - minsock],</span>
<span class="p_add">+			_pnode_to_socket[gre-&gt;pnode - minpnode]);</span>
 	}
 
<span class="p_del">-	uv_bios_init();</span>
<span class="p_add">+	/* check socket -&gt; node values */</span>
<span class="p_add">+	lnid = -1;</span>
<span class="p_add">+	for_each_present_cpu(cpu) {</span>
<span class="p_add">+		int nid = cpu_to_node(cpu);</span>
<span class="p_add">+		int apicid, sockid;</span>
<span class="p_add">+</span>
<span class="p_add">+		if (lnid == nid)</span>
<span class="p_add">+			continue;</span>
<span class="p_add">+		lnid = nid;</span>
<span class="p_add">+		apicid = per_cpu(x86_cpu_to_apicid, cpu);</span>
<span class="p_add">+		sockid = apicid &gt;&gt; uv_cpuid.socketid_shift;</span>
<span class="p_add">+		i = sockid - minsock;</span>
<span class="p_add">+</span>
<span class="p_add">+		if (nid != _socket_to_node[i]) {</span>
<span class="p_add">+			pr_warn(</span>
<span class="p_add">+			&quot;UV: %02x: type:%d socket:%02x PXM:%02x != node:%2d\n&quot;,</span>
<span class="p_add">+				i, sockid, gre-&gt;type, _socket_to_node[i], nid);</span>
<span class="p_add">+			_socket_to_node[i] = nid;</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	/* Setup physical blade to pnode translation from GAM Range Table */</span>
<span class="p_add">+	bytes = num_possible_nodes() * sizeof(_node_to_pnode[0]);</span>
<span class="p_add">+	_node_to_pnode = kmalloc(bytes, GFP_KERNEL);</span>
<span class="p_add">+	BUG_ON(!_node_to_pnode);</span>
<span class="p_add">+</span>
<span class="p_add">+	for (lnid = 0; lnid &lt; num_possible_nodes(); lnid++) {</span>
<span class="p_add">+		unsigned short sockid;</span>
<span class="p_add">+</span>
<span class="p_add">+		for (sockid = minsock; sockid &lt;= maxsock; sockid++) {</span>
<span class="p_add">+			if (lnid == _socket_to_node[sockid - minsock]) {</span>
<span class="p_add">+				_node_to_pnode[lnid] =</span>
<span class="p_add">+					_socket_to_pnode[sockid - minsock];</span>
<span class="p_add">+				break;</span>
<span class="p_add">+			}</span>
<span class="p_add">+		}</span>
<span class="p_add">+		if (sockid &gt; maxsock) {</span>
<span class="p_add">+			pr_err(&quot;UV: socket for node %d not found!\n&quot;, lnid);</span>
<span class="p_add">+			BUG();</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * If socket id == pnode or socket id == node for all nodes,</span>
<span class="p_add">+	 *   system runs faster by removing corresponding conversion table.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	pr_info(&quot;UV: Checking socket-&gt;node/pnode for identity maps\n&quot;);</span>
<span class="p_add">+	if (minsock == 0) {</span>
<span class="p_add">+		for (i = 0; i &lt; num; i++)</span>
<span class="p_add">+			if (_socket_to_node[i] == SOCK_EMPTY ||</span>
<span class="p_add">+				i != _socket_to_node[i])</span>
<span class="p_add">+				break;</span>
<span class="p_add">+		if (i &gt;= num) {</span>
<span class="p_add">+			kfree(_socket_to_node);</span>
<span class="p_add">+			_socket_to_node = NULL;</span>
<span class="p_add">+			pr_info(&quot;UV: 1:1 socket_to_node table removed\n&quot;);</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+	if (minsock == minpnode) {</span>
<span class="p_add">+		for (i = 0; i &lt; num; i++)</span>
<span class="p_add">+			if (_socket_to_pnode[i] != SOCK_EMPTY &amp;&amp;</span>
<span class="p_add">+				_socket_to_pnode[i] != i + minpnode)</span>
<span class="p_add">+				break;</span>
<span class="p_add">+		if (i &gt;= num) {</span>
<span class="p_add">+			kfree(_socket_to_pnode);</span>
<span class="p_add">+			_socket_to_pnode = NULL;</span>
<span class="p_add">+			pr_info(&quot;UV: 1:1 socket_to_pnode table removed\n&quot;);</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+void __init uv_system_init(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct uv_hub_info_s hub_info = {0};</span>
<span class="p_add">+	int bytes, cpu, nodeid;</span>
<span class="p_add">+	unsigned short min_pnode = 9999, max_pnode = 0;</span>
<span class="p_add">+	char *hub = is_uv4_hub() ? &quot;UV400&quot; :</span>
<span class="p_add">+		    is_uv3_hub() ? &quot;UV300&quot; :</span>
<span class="p_add">+		    is_uv2_hub() ? &quot;UV2000/3000&quot; :</span>
<span class="p_add">+		    is_uv1_hub() ? &quot;UV100/1000&quot; : NULL;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (!hub) {</span>
<span class="p_add">+		pr_err(&quot;UV: Unknown/unsupported UV hub\n&quot;);</span>
<span class="p_add">+		return;</span>
<span class="p_add">+	}</span>
<span class="p_add">+	pr_info(&quot;UV: Found %s hub\n&quot;, hub);</span>
<span class="p_add">+</span>
<span class="p_add">+	map_low_mmrs();</span>
<span class="p_add">+</span>
<span class="p_add">+	uv_bios_init();			/* get uv_systab for decoding */</span>
<span class="p_add">+	decode_uv_systab();</span>
<span class="p_add">+	build_socket_tables();</span>
<span class="p_add">+	build_uv_gr_table();</span>
<span class="p_add">+	uv_init_hub_info(&amp;hub_info);</span>
<span class="p_add">+	uv_possible_blades = num_possible_nodes();</span>
<span class="p_add">+	if (!_node_to_pnode)</span>
<span class="p_add">+		boot_init_possible_blades(&amp;hub_info);</span>
<span class="p_add">+</span>
<span class="p_add">+	/* uv_num_possible_blades() is really the hub count */</span>
<span class="p_add">+	pr_info(&quot;UV: Found %d hubs, %d nodes, %d cpus\n&quot;,</span>
<span class="p_add">+			uv_num_possible_blades(),</span>
<span class="p_add">+			num_possible_nodes(),</span>
<span class="p_add">+			num_possible_cpus());</span>
<span class="p_add">+</span>
 	uv_bios_get_sn_info(0, &amp;uv_type, &amp;sn_partition_id, &amp;sn_coherency_id,
 			    &amp;sn_region_size, &amp;system_serial_number);
<span class="p_add">+	hub_info.coherency_domain_number = sn_coherency_id;</span>
 	uv_rtc_init();
 
<span class="p_del">-	for_each_present_cpu(cpu) {</span>
<span class="p_del">-		int apicid = per_cpu(x86_cpu_to_apicid, cpu);</span>
<span class="p_add">+	bytes = sizeof(void *) * uv_num_possible_blades();</span>
<span class="p_add">+	__uv_hub_info_list = kzalloc(bytes, GFP_KERNEL);</span>
<span class="p_add">+	BUG_ON(!__uv_hub_info_list);</span>
 
<span class="p_del">-		nid = cpu_to_node(cpu);</span>
<span class="p_del">-		/*</span>
<span class="p_del">-		 * apic_pnode_shift must be set before calling uv_apicid_to_pnode();</span>
<span class="p_del">-		 */</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;pnode_mask = pnode_mask;</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;apic_pnode_shift = uvh_apicid.s.pnode_shift;</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;hub_revision = uv_hub_info-&gt;hub_revision;</span>
<span class="p_add">+	bytes = sizeof(struct uv_hub_info_s);</span>
<span class="p_add">+	for_each_node(nodeid) {</span>
<span class="p_add">+		struct uv_hub_info_s *new_hub;</span>
 
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;m_shift = 64 - m_val;</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;n_lshift = n_lshift;</span>
<span class="p_add">+		if (__uv_hub_info_list[nodeid]) {</span>
<span class="p_add">+			pr_err(&quot;UV: Node %d UV HUB already initialized!?\n&quot;,</span>
<span class="p_add">+				nodeid);</span>
<span class="p_add">+			BUG();</span>
<span class="p_add">+		}</span>
<span class="p_add">+</span>
<span class="p_add">+		/* Allocate new per hub info list */</span>
<span class="p_add">+		new_hub = (nodeid == 0) ?</span>
<span class="p_add">+			&amp;uv_hub_info_node0 :</span>
<span class="p_add">+			kzalloc_node(bytes, GFP_KERNEL, nodeid);</span>
<span class="p_add">+		BUG_ON(!new_hub);</span>
<span class="p_add">+		__uv_hub_info_list[nodeid] = new_hub;</span>
<span class="p_add">+		new_hub = uv_hub_info_list(nodeid);</span>
<span class="p_add">+		BUG_ON(!new_hub);</span>
<span class="p_add">+		*new_hub = hub_info;</span>
<span class="p_add">+</span>
<span class="p_add">+		/* Use information from GAM table if available */</span>
<span class="p_add">+		if (_node_to_pnode)</span>
<span class="p_add">+			new_hub-&gt;pnode = _node_to_pnode[nodeid];</span>
<span class="p_add">+		else	/* Fill in during cpu loop */</span>
<span class="p_add">+			new_hub-&gt;pnode = 0xffff;</span>
<span class="p_add">+		new_hub-&gt;numa_blade_id = uv_node_to_blade_id(nodeid);</span>
<span class="p_add">+		new_hub-&gt;memory_nid = -1;</span>
<span class="p_add">+		new_hub-&gt;nr_possible_cpus = 0;</span>
<span class="p_add">+		new_hub-&gt;nr_online_cpus = 0;</span>
<span class="p_add">+	}</span>
 
<span class="p_add">+	/* Initialize per cpu info */</span>
<span class="p_add">+	for_each_possible_cpu(cpu) {</span>
<span class="p_add">+		int apicid = per_cpu(x86_cpu_to_apicid, cpu);</span>
<span class="p_add">+		int numa_node_id;</span>
<span class="p_add">+		unsigned short pnode;</span>
<span class="p_add">+</span>
<span class="p_add">+		nodeid = cpu_to_node(cpu);</span>
<span class="p_add">+		numa_node_id = numa_cpu_node(cpu);</span>
 		pnode = uv_apicid_to_pnode(apicid);
<span class="p_del">-		blade = boot_pnode_to_blade(pnode);</span>
<span class="p_del">-		lcpu = uv_blade_info[blade].nr_possible_cpus;</span>
<span class="p_del">-		uv_blade_info[blade].nr_possible_cpus++;</span>
<span class="p_del">-</span>
<span class="p_del">-		/* Any node on the blade, else will contain -1. */</span>
<span class="p_del">-		uv_blade_info[blade].memory_nid = nid;</span>
<span class="p_del">-</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;lowmem_remap_base = lowmem_redir_base;</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;lowmem_remap_top = lowmem_redir_size;</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;m_val = m_val;</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;n_val = n_val;</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;numa_blade_id = blade;</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;blade_processor_id = lcpu;</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;pnode = pnode;</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;gpa_mask = (1UL &lt;&lt; (m_val + n_val)) - 1;</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;gnode_upper = gnode_upper;</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;gnode_extra = gnode_extra;</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;global_mmr_base = mmr_base;</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;coherency_domain_number = sn_coherency_id;</span>
<span class="p_del">-		uv_cpu_hub_info(cpu)-&gt;scir.offset = uv_scir_offset(apicid);</span>
<span class="p_del">-		uv_node_to_blade[nid] = blade;</span>
<span class="p_del">-		uv_cpu_to_blade[cpu] = blade;</span>
<span class="p_add">+</span>
<span class="p_add">+		uv_cpu_info_per(cpu)-&gt;p_uv_hub_info = uv_hub_info_list(nodeid);</span>
<span class="p_add">+		uv_cpu_info_per(cpu)-&gt;blade_cpu_id =</span>
<span class="p_add">+			uv_cpu_hub_info(cpu)-&gt;nr_possible_cpus++;</span>
<span class="p_add">+		if (uv_cpu_hub_info(cpu)-&gt;memory_nid == -1)</span>
<span class="p_add">+			uv_cpu_hub_info(cpu)-&gt;memory_nid = cpu_to_node(cpu);</span>
<span class="p_add">+		if (nodeid != numa_node_id &amp;&amp;	/* init memoryless node */</span>
<span class="p_add">+		    uv_hub_info_list(numa_node_id)-&gt;pnode == 0xffff)</span>
<span class="p_add">+			uv_hub_info_list(numa_node_id)-&gt;pnode = pnode;</span>
<span class="p_add">+		else if (uv_cpu_hub_info(cpu)-&gt;pnode == 0xffff)</span>
<span class="p_add">+			uv_cpu_hub_info(cpu)-&gt;pnode = pnode;</span>
<span class="p_add">+		uv_cpu_scir_info(cpu)-&gt;offset = uv_scir_offset(apicid);</span>
 	}
 
<span class="p_del">-	/* Add blade/pnode info for nodes without cpus */</span>
<span class="p_del">-	for_each_online_node(nid) {</span>
<span class="p_del">-		if (uv_node_to_blade[nid] &gt;= 0)</span>
<span class="p_del">-			continue;</span>
<span class="p_del">-		paddr = node_start_pfn(nid) &lt;&lt; PAGE_SHIFT;</span>
<span class="p_del">-		pnode = uv_gpa_to_pnode(uv_soc_phys_ram_to_gpa(paddr));</span>
<span class="p_del">-		blade = boot_pnode_to_blade(pnode);</span>
<span class="p_del">-		uv_node_to_blade[nid] = blade;</span>
<span class="p_add">+	for_each_node(nodeid) {</span>
<span class="p_add">+		unsigned short pnode = uv_hub_info_list(nodeid)-&gt;pnode;</span>
<span class="p_add">+</span>
<span class="p_add">+		/* Add pnode info for pre-GAM list nodes without cpus */</span>
<span class="p_add">+		if (pnode == 0xffff) {</span>
<span class="p_add">+			unsigned long paddr;</span>
<span class="p_add">+</span>
<span class="p_add">+			paddr = node_start_pfn(nodeid) &lt;&lt; PAGE_SHIFT;</span>
<span class="p_add">+			pnode = uv_gpa_to_pnode(uv_soc_phys_ram_to_gpa(paddr));</span>
<span class="p_add">+			uv_hub_info_list(nodeid)-&gt;pnode = pnode;</span>
<span class="p_add">+		}</span>
<span class="p_add">+		min_pnode = min(pnode, min_pnode);</span>
<span class="p_add">+		max_pnode = max(pnode, max_pnode);</span>
<span class="p_add">+		pr_info(&quot;UV: UVHUB node:%2d pn:%02x nrcpus:%d\n&quot;,</span>
<span class="p_add">+			nodeid,</span>
<span class="p_add">+			uv_hub_info_list(nodeid)-&gt;pnode,</span>
<span class="p_add">+			uv_hub_info_list(nodeid)-&gt;nr_possible_cpus);</span>
 	}
 
<span class="p_add">+	pr_info(&quot;UV: min_pnode:%02x max_pnode:%02x\n&quot;, min_pnode, max_pnode);</span>
 	map_gru_high(max_pnode);
 	map_mmr_high(max_pnode);
 	map_mmioh_high(min_pnode, max_pnode);
<span class="p_header">diff --git a/arch/x86/platform/uv/bios_uv.c b/arch/x86/platform/uv/bios_uv.c</span>
<span class="p_header">index 1584cbed0dce..815fec6e05e2 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/bios_uv.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/bios_uv.c</span>
<span class="p_chunk">@@ -21,19 +21,20 @@</span> <span class="p_context"></span>
 
 #include &lt;linux/efi.h&gt;
 #include &lt;linux/export.h&gt;
<span class="p_add">+#include &lt;linux/slab.h&gt;</span>
 #include &lt;asm/efi.h&gt;
 #include &lt;linux/io.h&gt;
 #include &lt;asm/uv/bios.h&gt;
 #include &lt;asm/uv/uv_hub.h&gt;
 
<span class="p_del">-static struct uv_systab uv_systab;</span>
<span class="p_add">+struct uv_systab *uv_systab;</span>
 
 s64 uv_bios_call(enum uv_bios_cmd which, u64 a1, u64 a2, u64 a3, u64 a4, u64 a5)
 {
<span class="p_del">-	struct uv_systab *tab = &amp;uv_systab;</span>
<span class="p_add">+	struct uv_systab *tab = uv_systab;</span>
 	s64 ret;
 
<span class="p_del">-	if (!tab-&gt;function)</span>
<span class="p_add">+	if (!tab || !tab-&gt;function)</span>
 		/*
 		 * BIOS does not support UV systab
 		 */
<span class="p_chunk">@@ -183,34 +184,31 @@</span> <span class="p_context"> int uv_bios_set_legacy_vga_target(bool decode, int domain, int bus)</span>
 }
 EXPORT_SYMBOL_GPL(uv_bios_set_legacy_vga_target);
 
<span class="p_del">-</span>
 #ifdef CONFIG_EFI
 void uv_bios_init(void)
 {
<span class="p_del">-	struct uv_systab *tab;</span>
<span class="p_del">-</span>
<span class="p_del">-	if ((efi.uv_systab == EFI_INVALID_TABLE_ADDR) ||</span>
<span class="p_del">-	    (efi.uv_systab == (unsigned long)NULL)) {</span>
<span class="p_del">-		printk(KERN_CRIT &quot;No EFI UV System Table.\n&quot;);</span>
<span class="p_del">-		uv_systab.function = (unsigned long)NULL;</span>
<span class="p_add">+	uv_systab = NULL;</span>
<span class="p_add">+	if ((efi.uv_systab == EFI_INVALID_TABLE_ADDR) || !efi.uv_systab) {</span>
<span class="p_add">+		pr_crit(&quot;UV: UVsystab: missing\n&quot;);</span>
 		return;
 	}
 
<span class="p_del">-	tab = (struct uv_systab *)ioremap(efi.uv_systab,</span>
<span class="p_del">-					sizeof(struct uv_systab));</span>
<span class="p_del">-	if (strncmp(tab-&gt;signature, &quot;UVST&quot;, 4) != 0)</span>
<span class="p_del">-		printk(KERN_ERR &quot;bad signature in UV system table!&quot;);</span>
<span class="p_del">-</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * Copy table to permanent spot for later use.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	memcpy(&amp;uv_systab, tab, sizeof(struct uv_systab));</span>
<span class="p_del">-	iounmap(tab);</span>
<span class="p_add">+	uv_systab = ioremap(efi.uv_systab, sizeof(struct uv_systab));</span>
<span class="p_add">+	if (!uv_systab || strncmp(uv_systab-&gt;signature, UV_SYSTAB_SIG, 4)) {</span>
<span class="p_add">+		pr_err(&quot;UV: UVsystab: bad signature!\n&quot;);</span>
<span class="p_add">+		iounmap(uv_systab);</span>
<span class="p_add">+		return;</span>
<span class="p_add">+	}</span>
 
<span class="p_del">-	printk(KERN_INFO &quot;EFI UV System Table Revision %d\n&quot;,</span>
<span class="p_del">-					uv_systab.revision);</span>
<span class="p_add">+	if (uv_systab-&gt;revision &gt;= UV_SYSTAB_VERSION_UV4) {</span>
<span class="p_add">+		iounmap(uv_systab);</span>
<span class="p_add">+		uv_systab = ioremap(efi.uv_systab, uv_systab-&gt;size);</span>
<span class="p_add">+		if (!uv_systab) {</span>
<span class="p_add">+			pr_err(&quot;UV: UVsystab: ioremap(%d) failed!\n&quot;,</span>
<span class="p_add">+				uv_systab-&gt;size);</span>
<span class="p_add">+			return;</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+	pr_info(&quot;UV: UVsystab: Revision:%x\n&quot;, uv_systab-&gt;revision);</span>
 }
<span class="p_del">-#else	/* !CONFIG_EFI */</span>
<span class="p_del">-</span>
<span class="p_del">-void uv_bios_init(void) { }</span>
 #endif
<span class="p_header">diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">index 3b6ec42718e4..fdb4d42b4ce5 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_chunk">@@ -37,7 +37,7 @@</span> <span class="p_context"> static int timeout_base_ns[] = {</span>
 };
 
 static int timeout_us;
<span class="p_del">-static int nobau;</span>
<span class="p_add">+static bool nobau = true;</span>
 static int nobau_perm;
 static cycles_t congested_cycles;
 
<span class="p_chunk">@@ -106,13 +106,28 @@</span> <span class="p_context"> static char *stat_description[] = {</span>
 	&quot;enable:   number times use of the BAU was re-enabled&quot;
 };
 
<span class="p_del">-static int __init</span>
<span class="p_del">-setup_nobau(char *arg)</span>
<span class="p_add">+static int __init setup_bau(char *arg)</span>
 {
<span class="p_del">-	nobau = 1;</span>
<span class="p_add">+	int result;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (!arg)</span>
<span class="p_add">+		return -EINVAL;</span>
<span class="p_add">+</span>
<span class="p_add">+	result = strtobool(arg, &amp;nobau);</span>
<span class="p_add">+	if (result)</span>
<span class="p_add">+		return result;</span>
<span class="p_add">+</span>
<span class="p_add">+	/* we need to flip the logic here, so that bau=y sets nobau to false */</span>
<span class="p_add">+	nobau = !nobau;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (!nobau)</span>
<span class="p_add">+		pr_info(&quot;UV BAU Enabled\n&quot;);</span>
<span class="p_add">+	else</span>
<span class="p_add">+		pr_info(&quot;UV BAU Disabled\n&quot;);</span>
<span class="p_add">+</span>
 	return 0;
 }
<span class="p_del">-early_param(&quot;nobau&quot;, setup_nobau);</span>
<span class="p_add">+early_param(&quot;bau&quot;, setup_bau);</span>
 
 /* base pnode in this partition */
 static int uv_base_pnode __read_mostly;
<span class="p_chunk">@@ -131,10 +146,10 @@</span> <span class="p_context"> set_bau_on(void)</span>
 		pr_info(&quot;BAU not initialized; cannot be turned on\n&quot;);
 		return;
 	}
<span class="p_del">-	nobau = 0;</span>
<span class="p_add">+	nobau = false;</span>
 	for_each_present_cpu(cpu) {
 		bcp = &amp;per_cpu(bau_control, cpu);
<span class="p_del">-		bcp-&gt;nobau = 0;</span>
<span class="p_add">+		bcp-&gt;nobau = false;</span>
 	}
 	pr_info(&quot;BAU turned on\n&quot;);
 	return;
<span class="p_chunk">@@ -146,10 +161,10 @@</span> <span class="p_context"> set_bau_off(void)</span>
 	int cpu;
 	struct bau_control *bcp;
 
<span class="p_del">-	nobau = 1;</span>
<span class="p_add">+	nobau = true;</span>
 	for_each_present_cpu(cpu) {
 		bcp = &amp;per_cpu(bau_control, cpu);
<span class="p_del">-		bcp-&gt;nobau = 1;</span>
<span class="p_add">+		bcp-&gt;nobau = true;</span>
 	}
 	pr_info(&quot;BAU turned off\n&quot;);
 	return;
<span class="p_chunk">@@ -1886,7 +1901,7 @@</span> <span class="p_context"> static void __init init_per_cpu_tunables(void)</span>
 		bcp = &amp;per_cpu(bau_control, cpu);
 		bcp-&gt;baudisabled		= 0;
 		if (nobau)
<span class="p_del">-			bcp-&gt;nobau		= 1;</span>
<span class="p_add">+			bcp-&gt;nobau		= true;</span>
 		bcp-&gt;statp			= &amp;per_cpu(ptcstats, cpu);
 		/* time interval to catch a hardware stay-busy bug */
 		bcp-&gt;timeout_interval		= usec_2_cycles(2*timeout_us);
<span class="p_chunk">@@ -2025,7 +2040,8 @@</span> <span class="p_context"> static int scan_sock(struct socket_desc *sdp, struct uvhub_desc *bdp,</span>
 			return 1;
 		}
 		bcp-&gt;uvhub_master = *hmasterp;
<span class="p_del">-		bcp-&gt;uvhub_cpu = uv_cpu_hub_info(cpu)-&gt;blade_processor_id;</span>
<span class="p_add">+		bcp-&gt;uvhub_cpu = uv_cpu_blade_processor_id(cpu);</span>
<span class="p_add">+</span>
 		if (bcp-&gt;uvhub_cpu &gt;= MAX_CPUS_PER_UVHUB) {
 			printk(KERN_EMERG &quot;%d cpus per uvhub invalid\n&quot;,
 				bcp-&gt;uvhub_cpu);
<span class="p_header">diff --git a/arch/x86/platform/uv/uv_sysfs.c b/arch/x86/platform/uv/uv_sysfs.c</span>
<span class="p_header">index 5d4ba301e776..e9da9ebd924a 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/uv_sysfs.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/uv_sysfs.c</span>
<span class="p_chunk">@@ -34,7 +34,7 @@</span> <span class="p_context"> static ssize_t partition_id_show(struct kobject *kobj,</span>
 static ssize_t coherence_id_show(struct kobject *kobj,
 			struct kobj_attribute *attr, char *buf)
 {
<span class="p_del">-	return snprintf(buf, PAGE_SIZE, &quot;%ld\n&quot;, partition_coherence_id());</span>
<span class="p_add">+	return snprintf(buf, PAGE_SIZE, &quot;%ld\n&quot;, uv_partition_coherence_id());</span>
 }
 
 static struct kobj_attribute partition_id_attr =
<span class="p_header">diff --git a/arch/x86/platform/uv/uv_time.c b/arch/x86/platform/uv/uv_time.c</span>
<span class="p_header">index 2b158a9fa1d7..b333fc45f9ec 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/uv_time.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/uv_time.c</span>
<span class="p_chunk">@@ -165,7 +165,7 @@</span> <span class="p_context"> static __init int uv_rtc_allocate_timers(void)</span>
 	for_each_present_cpu(cpu) {
 		int nid = cpu_to_node(cpu);
 		int bid = uv_cpu_to_blade_id(cpu);
<span class="p_del">-		int bcpu = uv_cpu_hub_info(cpu)-&gt;blade_processor_id;</span>
<span class="p_add">+		int bcpu = uv_cpu_blade_processor_id(cpu);</span>
 		struct uv_rtc_timer_head *head = blade_info[bid];
 
 		if (!head) {
<span class="p_chunk">@@ -226,7 +226,7 @@</span> <span class="p_context"> static int uv_rtc_set_timer(int cpu, u64 expires)</span>
 	int pnode = uv_cpu_to_pnode(cpu);
 	int bid = uv_cpu_to_blade_id(cpu);
 	struct uv_rtc_timer_head *head = blade_info[bid];
<span class="p_del">-	int bcpu = uv_cpu_hub_info(cpu)-&gt;blade_processor_id;</span>
<span class="p_add">+	int bcpu = uv_cpu_blade_processor_id(cpu);</span>
 	u64 *t = &amp;head-&gt;cpu[bcpu].expires;
 	unsigned long flags;
 	int next_cpu;
<span class="p_chunk">@@ -262,7 +262,7 @@</span> <span class="p_context"> static int uv_rtc_unset_timer(int cpu, int force)</span>
 	int pnode = uv_cpu_to_pnode(cpu);
 	int bid = uv_cpu_to_blade_id(cpu);
 	struct uv_rtc_timer_head *head = blade_info[bid];
<span class="p_del">-	int bcpu = uv_cpu_hub_info(cpu)-&gt;blade_processor_id;</span>
<span class="p_add">+	int bcpu = uv_cpu_blade_processor_id(cpu);</span>
 	u64 *t = &amp;head-&gt;cpu[bcpu].expires;
 	unsigned long flags;
 	int rc = 0;
<span class="p_header">diff --git a/drivers/misc/sgi-gru/grukservices.c b/drivers/misc/sgi-gru/grukservices.c</span>
<span class="p_header">index 967b9dd24fe9..030769018461 100644</span>
<span class="p_header">--- a/drivers/misc/sgi-gru/grukservices.c</span>
<span class="p_header">+++ b/drivers/misc/sgi-gru/grukservices.c</span>
<span class="p_chunk">@@ -718,8 +718,8 @@</span> <span class="p_context"> static int send_message_queue_full(void *cb, struct gru_message_queue_desc *mqd,</span>
 static int send_message_put_nacked(void *cb, struct gru_message_queue_desc *mqd,
 			void *mesg, int lines)
 {
<span class="p_del">-	unsigned long m, *val = mesg, gpa, save;</span>
<span class="p_del">-	int ret;</span>
<span class="p_add">+	unsigned long m;</span>
<span class="p_add">+	int ret, loops = 200;	/* experimentally determined */</span>
 
 	m = mqd-&gt;mq_gpa + (gru_get_amo_value_head(cb) &lt;&lt; 6);
 	if (lines == 2) {
<span class="p_chunk">@@ -735,22 +735,28 @@</span> <span class="p_context"> static int send_message_put_nacked(void *cb, struct gru_message_queue_desc *mqd,</span>
 		return MQE_OK;
 
 	/*
<span class="p_del">-	 * Send a cross-partition interrupt to the SSI that contains the target</span>
<span class="p_del">-	 * message queue. Normally, the interrupt is automatically delivered by</span>
<span class="p_del">-	 * hardware but some error conditions require explicit delivery.</span>
<span class="p_del">-	 * Use the GRU to deliver the interrupt. Otherwise partition failures</span>
<span class="p_add">+	 * Send a noop message in order to deliver a cross-partition interrupt</span>
<span class="p_add">+	 * to the SSI that contains the target message queue. Normally, the</span>
<span class="p_add">+	 * interrupt is automatically delivered by hardware following mesq</span>
<span class="p_add">+	 * operations, but some error conditions require explicit delivery.</span>
<span class="p_add">+	 * The noop message will trigger delivery. Otherwise partition failures</span>
 	 * could cause unrecovered errors.
 	 */
<span class="p_del">-	gpa = uv_global_gru_mmr_address(mqd-&gt;interrupt_pnode, UVH_IPI_INT);</span>
<span class="p_del">-	save = *val;</span>
<span class="p_del">-	*val = uv_hub_ipi_value(mqd-&gt;interrupt_apicid, mqd-&gt;interrupt_vector,</span>
<span class="p_del">-				dest_Fixed);</span>
<span class="p_del">-	gru_vstore_phys(cb, gpa, gru_get_tri(mesg), IAA_REGISTER, IMA);</span>
<span class="p_del">-	ret = gru_wait(cb);</span>
<span class="p_del">-	*val = save;</span>
<span class="p_del">-	if (ret != CBS_IDLE)</span>
<span class="p_del">-		return MQE_UNEXPECTED_CB_ERR;</span>
<span class="p_del">-	return MQE_OK;</span>
<span class="p_add">+	do {</span>
<span class="p_add">+		ret = send_noop_message(cb, mqd, mesg);</span>
<span class="p_add">+	} while ((ret == MQIE_AGAIN || ret == MQE_CONGESTION) &amp;&amp; (loops-- &gt; 0));</span>
<span class="p_add">+</span>
<span class="p_add">+	if (ret == MQIE_AGAIN || ret == MQE_CONGESTION) {</span>
<span class="p_add">+		/*</span>
<span class="p_add">+		 * Don&#39;t indicate to the app to resend the message, as it&#39;s</span>
<span class="p_add">+		 * already been successfully sent.  We simply send an OK</span>
<span class="p_add">+		 * (rather than fail the send with MQE_UNEXPECTED_CB_ERR),</span>
<span class="p_add">+		 * assuming that the other side is receiving enough</span>
<span class="p_add">+		 * interrupts to get this message processed anyway.</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		ret = MQE_OK;</span>
<span class="p_add">+	}</span>
<span class="p_add">+	return ret;</span>
 }
 
 /*

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



