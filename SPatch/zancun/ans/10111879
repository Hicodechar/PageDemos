
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,02/17] mm: Exempt special mappings from mlock(), mprotect() and madvise() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,02/17] mm: Exempt special mappings from mlock(), mprotect() and madvise()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 14, 2017, 11:27 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171214113851.197682513@infradead.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10111879/mbox/"
   >mbox</a>
|
   <a href="/patch/10111879/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10111879/">/patch/10111879/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	8CD6460327 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 14 Dec 2017 11:44:03 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7C4DE29C18
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 14 Dec 2017 11:44:03 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 6F7DD29C23; Thu, 14 Dec 2017 11:44:03 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 23F7B29C18
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 14 Dec 2017 11:44:03 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752208AbdLNLn7 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 14 Dec 2017 06:43:59 -0500
Received: from merlin.infradead.org ([205.233.59.134]:54784 &quot;EHLO
	merlin.infradead.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752017AbdLNLnu (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 14 Dec 2017 06:43:50 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=infradead.org; s=merlin.20170209;
	h=Content-Type:MIME-Version:References:
	Subject:Cc:To:From:Date:Message-Id:Sender:Reply-To:Content-Transfer-Encoding:
	Content-ID:Content-Description:Resent-Date:Resent-From:Resent-Sender:
	Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:List-Id:List-Help:
	List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
	bh=qIllGtP78kf9TD42bMgTJWwBFSsDj014HSzWQpqdtnE=;
	b=pTwkKrY0/lnWd8G9VlI6ue1sHs
	zNk6y9fdcDQQnSTY+YQ+s5QkbigL+X4qnjfwEkOH29RiSLBsDmUuCzRj8CeGkt7kRTLZ4B4szTcZw
	yCk/ujGKvnd3YzIhl7L6FLFzQo/E7plZOR+PDBXBeD4iccSNQ6DnV6DqsJvUBAwyWSE8bG0PjDj0c
	aW7FIeuagEMX30y6lw3kEKwL+8jIMTnDcCmRdLwsUfrSNKel6dgc8GCBJG1WQuv/SfmVfe6dI9vVO
	Uk3rQPpny6Ftw2EnIKEhkeL9Ce9IXEk8U50Z48+aBV1Skf80EgAMPQauliYfMbui/fvKgkU90SN+M
	EnbBIwRg==;
Received: from j217100.upc-j.chello.nl ([24.132.217.100]
	helo=hirez.programming.kicks-ass.net)
	by merlin.infradead.org with esmtpsa (Exim 4.87 #1 (Red Hat Linux))
	id 1ePRvA-0000l7-Kd; Thu, 14 Dec 2017 11:43:25 +0000
Received: by hirez.programming.kicks-ass.net (Postfix, from userid 0)
	id 589F02029FD6B; Thu, 14 Dec 2017 12:43:23 +0100 (CET)
Message-Id: &lt;20171214113851.197682513@infradead.org&gt;
User-Agent: quilt/0.63-1
Date: Thu, 14 Dec 2017 12:27:28 +0100
From: Peter Zijlstra &lt;peterz@infradead.org&gt;
To: linux-kernel@vger.kernel.org, tglx@linutronix.de
Cc: x86@kernel.org, Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Andy Lutomirsky &lt;luto@kernel.org&gt;, Peter Zijlstra &lt;peterz@infradead.org&gt;,
	Dave Hansen &lt;dave.hansen@intel.com&gt;, Borislav Petkov &lt;bpetkov@suse.de&gt;,
	Greg KH &lt;gregkh@linuxfoundation.org&gt;, keescook@google.com,
	hughd@google.com, Brian Gerst &lt;brgerst@gmail.com&gt;,
	Josh Poimboeuf &lt;jpoimboe@redhat.com&gt;,
	Denys Vlasenko &lt;dvlasenk@redhat.com&gt;,
	Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;,
	Juergen Gross &lt;jgross@suse.com&gt;, David Laight &lt;David.Laight@aculab.com&gt;,
	Eduardo Valentin &lt;eduval@amazon.com&gt;, aliguori@amazon.com,
	Will Deacon &lt;will.deacon@arm.com&gt;, linux-mm@kvack.org,
	kirill.shutemov@linux.intel.com, dan.j.williams@intel.com
Subject: [PATCH v2 02/17] mm: Exempt special mappings from mlock(),
	mprotect() and madvise()
References: &lt;20171214112726.742649793@infradead.org&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline; filename=peterz-vm-no-special-mapping.patch
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a> - Dec. 14, 2017, 11:27 a.m.</div>
<pre class="content">
It makes no sense to ever prod at special mappings with any of these
syscalls.

XXX should we include munmap() ?
<span class="signed-off-by">
Signed-off-by: Peter Zijlstra (Intel) &lt;peterz@infradead.org&gt;</span>
---
 mm/madvise.c  |    3 +++
 mm/mlock.c    |    3 ++-
 mm/mprotect.c |    3 +++
 3 files changed, 8 insertions(+), 1 deletion(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=125831">Andrew Lutomirski</a> - Dec. 14, 2017, 4:19 p.m.</div>
<pre class="content">
On Thu, Dec 14, 2017 at 3:27 AM, Peter Zijlstra &lt;peterz@infradead.org&gt; wrote:
<span class="quote">&gt; It makes no sense to ever prod at special mappings with any of these</span>
<span class="quote">&gt; syscalls.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; XXX should we include munmap() ?</span>

This is an ABI break for the vdso.  Maybe that&#39;s okay, but mremap() on
the vdso is certainly used, and I can imagine debuggers using
mprotect().
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a> - Dec. 14, 2017, 5:36 p.m.</div>
<pre class="content">
On Thu, Dec 14, 2017 at 08:19:36AM -0800, Andy Lutomirski wrote:
<span class="quote">&gt; On Thu, Dec 14, 2017 at 3:27 AM, Peter Zijlstra &lt;peterz@infradead.org&gt; wrote:</span>
<span class="quote">&gt; &gt; It makes no sense to ever prod at special mappings with any of these</span>
<span class="quote">&gt; &gt; syscalls.</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; XXX should we include munmap() ?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This is an ABI break for the vdso.  Maybe that&#39;s okay, but mremap() on</span>
<span class="quote">&gt; the vdso is certainly used, and I can imagine debuggers using</span>
<span class="quote">&gt; mprotect().</span>

*groan*, ok so mremap() will actually still work after this, but yes,
mprotect() will not. I hadn&#39;t figured people would muck with the VDSO
like that.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137481">Dmitry Safonov</a> - Jan. 2, 2018, 4:44 p.m.</div>
<pre class="content">
Hi, sorry for the late reply,

2017-12-14 17:36 GMT+00:00 Peter Zijlstra &lt;peterz@infradead.org&gt;:
<span class="quote">&gt; On Thu, Dec 14, 2017 at 08:19:36AM -0800, Andy Lutomirski wrote:</span>
<span class="quote">&gt;&gt; On Thu, Dec 14, 2017 at 3:27 AM, Peter Zijlstra &lt;peterz@infradead.org&gt; wrote:</span>
<span class="quote">&gt;&gt; &gt; It makes no sense to ever prod at special mappings with any of these</span>
<span class="quote">&gt;&gt; &gt; syscalls.</span>
<span class="quote">&gt;&gt; &gt;</span>
<span class="quote">&gt;&gt; &gt; XXX should we include munmap() ?</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; This is an ABI break for the vdso.  Maybe that&#39;s okay, but mremap() on</span>
<span class="quote">&gt;&gt; the vdso is certainly used, and I can imagine debuggers using</span>
<span class="quote">&gt;&gt; mprotect().</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; *groan*, ok so mremap() will actually still work after this, but yes,</span>
<span class="quote">&gt; mprotect() will not. I hadn&#39;t figured people would muck with the VDSO</span>
<span class="quote">&gt; like that.</span>

mremap() is needed for CRIU, at least.

Please, don&#39;t restrict munmap(), as ARCH_MAP_VDSO_* allows to map vdso
iff it&#39;s not already mapped.
We don&#39;t need +w vdso mapping, but I guess that may break gdb breakpoints
on vdso.

Also, AFAICS, vma_is_special_mapping() has two parameters in linux-next,
and your patches set doesn&#39;t change that.

Thanks,
             Dmitry
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/mm/madvise.c</span>
<span class="p_header">+++ b/mm/madvise.c</span>
<span class="p_chunk">@@ -678,6 +678,9 @@</span> <span class="p_context"> static long</span>
 madvise_vma(struct vm_area_struct *vma, struct vm_area_struct **prev,
 		unsigned long start, unsigned long end, int behavior)
 {
<span class="p_add">+	if (vma_is_special_mapping(vma))</span>
<span class="p_add">+		return -EINVAL;</span>
<span class="p_add">+</span>
 	switch (behavior) {
 	case MADV_REMOVE:
 		return madvise_remove(vma, prev, start, end);
<span class="p_header">--- a/mm/mlock.c</span>
<span class="p_header">+++ b/mm/mlock.c</span>
<span class="p_chunk">@@ -521,7 +521,8 @@</span> <span class="p_context"> static int mlock_fixup(struct vm_area_st</span>
 	vm_flags_t old_flags = vma-&gt;vm_flags;
 
 	if (newflags == vma-&gt;vm_flags || (vma-&gt;vm_flags &amp; VM_SPECIAL) ||
<span class="p_del">-	    is_vm_hugetlb_page(vma) || vma == get_gate_vma(current-&gt;mm))</span>
<span class="p_add">+	    is_vm_hugetlb_page(vma) || vma == get_gate_vma(current-&gt;mm) ||</span>
<span class="p_add">+	    vma_is_special_mapping(vma))</span>
 		/* don&#39;t set VM_LOCKED or VM_LOCKONFAULT and don&#39;t count */
 		goto out;
 
<span class="p_header">--- a/mm/mprotect.c</span>
<span class="p_header">+++ b/mm/mprotect.c</span>
<span class="p_chunk">@@ -307,6 +307,9 @@</span> <span class="p_context"> mprotect_fixup(struct vm_area_struct *vm</span>
 		return 0;
 	}
 
<span class="p_add">+	if (vma_is_special_mapping(vma))</span>
<span class="p_add">+		return -ENOMEM;</span>
<span class="p_add">+</span>
 	/*
 	 * If we make a private mapping writable we increase our commit;
 	 * but (without finer accounting) cannot reduce our commit if we

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



