
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[6/6] x86/mm/kaiser: Optimize __native_flush_tlb - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [6/6] x86/mm/kaiser: Optimize __native_flush_tlb</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 30, 2017, 12:43 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171130124319.ovyierac7ywxzhjy@hirez.programming.kicks-ass.net&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10084771/mbox/"
   >mbox</a>
|
   <a href="/patch/10084771/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10084771/">/patch/10084771/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	10EB8602B9 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 30 Nov 2017 12:43:49 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id F0C6029F81
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 30 Nov 2017 12:43:48 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id E2E1329F83; Thu, 30 Nov 2017 12:43:48 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 665BA29F81
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 30 Nov 2017 12:43:48 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752316AbdK3Mnn (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 30 Nov 2017 07:43:43 -0500
Received: from bombadil.infradead.org ([65.50.211.133]:49159 &quot;EHLO
	bombadil.infradead.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751806AbdK3Mnl (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 30 Nov 2017 07:43:41 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=infradead.org; s=bombadil.20170209;
	h=In-Reply-To:Content-Type:MIME-Version
	:References:Message-ID:Subject:Cc:To:From:Date:Sender:Reply-To:
	Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
	Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
	List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
	bh=sIICjuJ6Y/8MQHykpVJUJtEuZbkoG/npaGxd8/YRa1E=;
	b=oNi0NmSETJinwTTrY9oOtGoT8
	ro58cInFYAbwj5gJAVa2H8M65HEqehMeoo7svB2aktNw3rAio17kRKnR0/IlpNVNsC6/13rwqHbaA
	Px3HAERL5072nO3lWUrQF7ti+C4eODsfPvvLdJZP5Kc6U7NS+sM4pFFkh8VNGppt9rCRoc7PrRVCI
	j5owW9XLUpPtAmyOswpJMbDeePoWVfqGwsKIMHs2O4o8sIbZTqww4iupA7jlMO0uX0vqTOThs/DGl
	MpC4T6Kic/hAD9m+8XiW7kzx5P0kmUcejtcWvgBFHZa27TuhlOegzii5Y6L8KZv9fbVhmIEtN6z0C
	g9IbyLZ9w==;
Received: from j217100.upc-j.chello.nl ([24.132.217.100]
	helo=hirez.programming.kicks-ass.net)
	by bombadil.infradead.org with esmtpsa (Exim 4.87 #1 (Red Hat Linux))
	id 1eKOBV-0005s7-Ts; Thu, 30 Nov 2017 12:43:22 +0000
Received: by hirez.programming.kicks-ass.net (Postfix, from userid 1000)
	id 25670207153CA; Thu, 30 Nov 2017 13:43:19 +0100 (CET)
Date: Thu, 30 Nov 2017 13:43:19 +0100
From: Peter Zijlstra &lt;peterz@infradead.org&gt;
To: linux-kernel@vger.kernel.org, Thomas Gleixner &lt;tglx@linutronix.de&gt;
Cc: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;,
	Andy Lutomirski &lt;luto@kernel.org&gt;,
	Ingo Molnar &lt;mingo@kernel.org&gt;, Borislav Petkov &lt;bp@alien8.de&gt;,
	Brian Gerst &lt;brgerst@gmail.com&gt;, Denys Vlasenko &lt;dvlasenk@redhat.com&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;, Josh Poimboeuf &lt;jpoimboe@redhat.com&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Rik van Riel &lt;riel@redhat.com&gt;, daniel.gruss@iaik.tugraz.at,
	hughd@google.com, keescook@google.com, linux-mm@kvack.org,
	michael.schwarz@iaik.tugraz.at, moritz.lipp@iaik.tugraz.at,
	richard.fellner@student.tugraz.at
Subject: Re: [PATCH 6/6] x86/mm/kaiser: Optimize __native_flush_tlb
Message-ID: &lt;20171130124319.ovyierac7ywxzhjy@hirez.programming.kicks-ass.net&gt;
References: &lt;20171129103301.131535445@infradead.org&gt;
	&lt;20171129103512.918991807@infradead.org&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: &lt;20171129103512.918991807@infradead.org&gt;
User-Agent: NeoMutt/20170609 (1.8.3)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a> - Nov. 30, 2017, 12:43 p.m.</div>
<pre class="content">
On Wed, Nov 29, 2017 at 11:33:07AM +0100, Peter Zijlstra wrote:
<span class="quote">
&gt;  static inline void __native_flush_tlb(void)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; +	flush_user_asid(this_cpu_read(cpu_tlbstate.loaded_mm_asid));</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	/*</span>
<span class="quote">&gt; +	 * If current-&gt;mm == NULL then we borrow a mm</span>
<span class="quote">&gt; +	 * which may change during a task switch and</span>
<span class="quote">&gt; +	 * therefore we must not be preempted while we</span>
<span class="quote">&gt; +	 * write CR3 back:</span>
<span class="quote">&gt;  	 */</span>
<span class="quote">&gt; +	preempt_disable();</span>
<span class="quote">&gt; +	native_write_cr3(__native_read_cr3());</span>
<span class="quote">&gt; +	preempt_enable();</span>
<span class="quote">


&gt; +	/*</span>
<span class="quote">&gt; +	 * Does not need tlb_flush_shared_nonglobals()</span>
<span class="quote">&gt; +	 * since the CR3 write without PCIDs flushes all</span>
<span class="quote">&gt; +	 * non-globals.</span>
<span class="quote">&gt; +	 */</span>
<span class="quote">&gt; +	return;</span>

OK, so seeing that comment today made me realize I had so far failed to
audit the whole flush user vs flush kernel thing.

In short the above comment is complete crap.
<span class="quote">
&gt;  }</span>


The longer story is that:

  flush_tlb_all()
  flush_tlb_kernel_range()

need to flush kernel pages and thus flush _all_ the (kernel) ASIDs.

Whereas:

  flush_tlb_mm()
  flush_tlb_range()
  flush_tlb_page()

Only flush user pages, and thus only need to flush the respective user
and kernel ASID.

The last 3 all map to flush_tlb_mm_range() which, through
flush_tlb_func_{local,remote} ends up in flush_tlb_func_common(), which
then uses either __flush_tlb() or __flush_tlb_single().

Both __flush_tlb() (the above function) and __flush_tlb_single() only
(need to) flush the 2 ASIDs that contain the user mapping.

Now the problem is that flush_tlb_kernel_range() is implemented using
either __flush_tlb_all() or __flush_tlb_single(), and it is that last
use that is buggered.

So at the very least we need the below to cure things, but there is
another inconsistency; do_flush_tlb_all() is used by both
flush_tlb_all() and flush_tlb_kernel_range() and increments NR_TLB_*,
do_kernel_range_flush() OTOH does not increment NR_TLB_*. I&#39;m not fixing
that, but I&#39;ll leave a comment around or something, so we can later try
and figure out what exact statistics we want.

---
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a> - Nov. 30, 2017, 1:13 p.m.</div>
<pre class="content">
On Thu, Nov 30, 2017 at 01:43:19PM +0100, Peter Zijlstra wrote:
<span class="quote">&gt; Now the problem is that flush_tlb_kernel_range() is implemented using</span>
<span class="quote">&gt; either __flush_tlb_all() or __flush_tlb_single(), and it is that last</span>
<span class="quote">&gt; use that is buggered.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; So at the very least we need the below to cure things, but there is</span>
<span class="quote">&gt; another inconsistency; do_flush_tlb_all() is used by both</span>
<span class="quote">&gt; flush_tlb_all() and flush_tlb_kernel_range() and increments NR_TLB_*,</span>
<span class="quote">&gt; do_kernel_range_flush() OTOH does not increment NR_TLB_*. I&#39;m not fixing</span>
<span class="quote">&gt; that, but I&#39;ll leave a comment around or something, so we can later try</span>
<span class="quote">&gt; and figure out what exact statistics we want.</span>

Alternatively, we&#39;d simply kill the entire invlpg path for
flush_tlb_kernel_range() and simply do __flush_tlb_all().
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/tlbflush.h b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">index 9587722162ee..ccaf6e126582 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_chunk">@@ -388,12 +388,6 @@</span> <span class="p_context"> static inline void __native_flush_tlb(void)</span>
 	preempt_disable();
 	native_write_cr3(__native_read_cr3());
 	preempt_enable();
<span class="p_del">-	/*</span>
<span class="p_del">-	 * Does not need tlb_flush_shared_nonglobals()</span>
<span class="p_del">-	 * since the CR3 write without PCIDs flushes all</span>
<span class="p_del">-	 * non-globals.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	return;</span>
 }
 
 static inline void __native_flush_tlb_global_irq_disabled(void)
<span class="p_header">diff --git a/arch/x86/mm/tlb.c b/arch/x86/mm/tlb.c</span>
<span class="p_header">index 122c48fa6012..24bd86118b46 100644</span>
<span class="p_header">--- a/arch/x86/mm/tlb.c</span>
<span class="p_header">+++ b/arch/x86/mm/tlb.c</span>
<span class="p_chunk">@@ -609,6 +609,8 @@</span> <span class="p_context"> static void do_kernel_range_flush(void *info)</span>
 	/* flush range by one by one &#39;invlpg&#39; */
 	for (addr = f-&gt;start; addr &lt; f-&gt;end; addr += PAGE_SIZE)
 		__flush_tlb_single(addr);
<span class="p_add">+</span>
<span class="p_add">+	tlb_flush_shared_nonglobals();</span>
 }
 
 void flush_tlb_kernel_range(unsigned long start, unsigned long end)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



