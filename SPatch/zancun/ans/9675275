
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>mm/migrate: check for null vma before dereferencing it - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    mm/migrate: check for null vma before dereferencing it</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=1168">Colin Ian King</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>April 11, 2017, 12:51 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170411125102.19497-1-colin.king@canonical.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9675275/mbox/"
   >mbox</a>
|
   <a href="/patch/9675275/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9675275/">/patch/9675275/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	A9A53600CB for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 11 Apr 2017 12:51:25 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 97B3728462
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 11 Apr 2017 12:51:25 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 8BDA2284F7; Tue, 11 Apr 2017 12:51:25 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1BB4128462
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 11 Apr 2017 12:51:25 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752305AbdDKMvN (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 11 Apr 2017 08:51:13 -0400
Received: from youngberry.canonical.com ([91.189.89.112]:36197 &quot;EHLO
	youngberry.canonical.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751951AbdDKMvL (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 11 Apr 2017 08:51:11 -0400
Received: from 1.general.cking.uk.vpn ([10.172.193.212] helo=localhost)
	by youngberry.canonical.com with esmtpsa
	(TLS1.0:RSA_AES_256_CBC_SHA1:32) (Exim 4.76)
	(envelope-from &lt;colin.king@canonical.com&gt;)
	id 1cxvGB-000752-5W; Tue, 11 Apr 2017 12:51:03 +0000
From: Colin King &lt;colin.king@canonical.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Vlastimil Babka &lt;vbabka@suse.cz&gt;, Minchan Kim &lt;minchan@kernel.org&gt;,
	Mel Gorman &lt;mgorman@techsingularity.net&gt;,
	Johannes Weiner &lt;hannes@cmpxchg.org&gt;,
	=?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= &lt;jglisse@redhat.com&gt;,
	&quot;Kirill A . Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	linux-mm@kvack.org
Cc: kernel-janitors@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH] mm/migrate: check for null vma before dereferencing it
Date: Tue, 11 Apr 2017 13:51:02 +0100
Message-Id: &lt;20170411125102.19497-1-colin.king@canonical.com&gt;
X-Mailer: git-send-email 2.11.0
MIME-Version: 1.0
Content-Type: text/plain; charset=&quot;utf-8&quot;
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1168">Colin Ian King</a> - April 11, 2017, 12:51 p.m.</div>
<pre class="content">
<span class="from">From: Colin Ian King &lt;colin.king@canonical.com&gt;</span>

check if vma is null before dereferencing it, this avoiding any
potential null pointer dereferences on vma via the is_vm_hugetlb_page
call or the direct vma-&gt;vm_flags reference.

Detected with CoverityScan, CID#1427995 (&quot;Dereference before null check&quot;)
<span class="signed-off-by">
Signed-off-by: Colin Ian King &lt;colin.king@canonical.com&gt;</span>
---
 mm/migrate.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41">Andrew Morton</a> - April 11, 2017, 9:26 p.m.</div>
<pre class="content">
On Tue, 11 Apr 2017 13:51:02 +0100 Colin King &lt;colin.king@canonical.com&gt; wrote:
<span class="quote">
&gt; From: Colin Ian King &lt;colin.king@canonical.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; check if vma is null before dereferencing it, this avoiding any</span>
<span class="quote">&gt; potential null pointer dereferences on vma via the is_vm_hugetlb_page</span>
<span class="quote">&gt; call or the direct vma-&gt;vm_flags reference.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Detected with CoverityScan, CID#1427995 (&quot;Dereference before null check&quot;)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; ...</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; --- a/mm/migrate.c</span>
<span class="quote">&gt; +++ b/mm/migrate.c</span>
<span class="quote">&gt; @@ -2757,10 +2757,10 @@ int migrate_vma(const struct migrate_vma_ops *ops,</span>
<span class="quote">&gt;  	/* Sanity check the arguments */</span>
<span class="quote">&gt;  	start &amp;= PAGE_MASK;</span>
<span class="quote">&gt;  	end &amp;= PAGE_MASK;</span>
<span class="quote">&gt; -	if (is_vm_hugetlb_page(vma) || (vma-&gt;vm_flags &amp; VM_SPECIAL))</span>
<span class="quote">&gt; -		return -EINVAL;</span>
<span class="quote">&gt;  	if (!vma || !ops || !src || !dst || start &gt;= end)</span>
<span class="quote">&gt;  		return -EINVAL;</span>
<span class="quote">&gt; +	if (is_vm_hugetlb_page(vma) || (vma-&gt;vm_flags &amp; VM_SPECIAL))</span>
<span class="quote">&gt; +		return -EINVAL;</span>
<span class="quote">&gt;  	if (start &lt; vma-&gt;vm_start || start &gt;= vma-&gt;vm_end)</span>
<span class="quote">&gt;  		return -EINVAL;</span>
<span class="quote">&gt;  	if (end &lt;= vma-&gt;vm_start || end &gt; vma-&gt;vm_end)</span>

I don&#39;t know what kernel version this is against but I don&#39;t think it&#39;s
anything recent?
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1168">Colin Ian King</a> - April 11, 2017, 9:31 p.m.</div>
<pre class="content">
On 11/04/17 22:26, Andrew Morton wrote:
<span class="quote">&gt; On Tue, 11 Apr 2017 13:51:02 +0100 Colin King &lt;colin.king@canonical.com&gt; wrote:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;&gt; From: Colin Ian King &lt;colin.king@canonical.com&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; check if vma is null before dereferencing it, this avoiding any</span>
<span class="quote">&gt;&gt; potential null pointer dereferences on vma via the is_vm_hugetlb_page</span>
<span class="quote">&gt;&gt; call or the direct vma-&gt;vm_flags reference.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Detected with CoverityScan, CID#1427995 (&quot;Dereference before null check&quot;)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; ...</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; --- a/mm/migrate.c</span>
<span class="quote">&gt;&gt; +++ b/mm/migrate.c</span>
<span class="quote">&gt;&gt; @@ -2757,10 +2757,10 @@ int migrate_vma(const struct migrate_vma_ops *ops,</span>
<span class="quote">&gt;&gt;  	/* Sanity check the arguments */</span>
<span class="quote">&gt;&gt;  	start &amp;= PAGE_MASK;</span>
<span class="quote">&gt;&gt;  	end &amp;= PAGE_MASK;</span>
<span class="quote">&gt;&gt; -	if (is_vm_hugetlb_page(vma) || (vma-&gt;vm_flags &amp; VM_SPECIAL))</span>
<span class="quote">&gt;&gt; -		return -EINVAL;</span>
<span class="quote">&gt;&gt;  	if (!vma || !ops || !src || !dst || start &gt;= end)</span>
<span class="quote">&gt;&gt;  		return -EINVAL;</span>
<span class="quote">&gt;&gt; +	if (is_vm_hugetlb_page(vma) || (vma-&gt;vm_flags &amp; VM_SPECIAL))</span>
<span class="quote">&gt;&gt; +		return -EINVAL;</span>
<span class="quote">&gt;&gt;  	if (start &lt; vma-&gt;vm_start || start &gt;= vma-&gt;vm_end)</span>
<span class="quote">&gt;&gt;  		return -EINVAL;</span>
<span class="quote">&gt;&gt;  	if (end &lt;= vma-&gt;vm_start || end &gt; vma-&gt;vm_end)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I don&#39;t know what kernel version this is against but I don&#39;t think it&#39;s</span>
<span class="quote">&gt; anything recent?</span>

I should have said it was against linux-next
<span class="quote">&gt; </span>
<span class="quote">&gt; --</span>
<span class="quote">&gt; To unsubscribe from this list: send the line &quot;unsubscribe kernel-janitors&quot; in</span>
<span class="quote">&gt; the body of a message to majordomo@vger.kernel.org</span>
<span class="quote">&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html</span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41">Andrew Morton</a> - April 11, 2017, 9:46 p.m.</div>
<pre class="content">
On Tue, 11 Apr 2017 22:31:12 +0100 Colin Ian King &lt;colin.king@canonical.com&gt; wrote:
<span class="quote">
&gt; On 11/04/17 22:26, Andrew Morton wrote:</span>
<span class="quote">&gt; &gt; On Tue, 11 Apr 2017 13:51:02 +0100 Colin King &lt;colin.king@canonical.com&gt; wrote:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;&gt; From: Colin Ian King &lt;colin.king@canonical.com&gt;</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; check if vma is null before dereferencing it, this avoiding any</span>
<span class="quote">&gt; &gt;&gt; potential null pointer dereferences on vma via the is_vm_hugetlb_page</span>
<span class="quote">&gt; &gt;&gt; call or the direct vma-&gt;vm_flags reference.</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; Detected with CoverityScan, CID#1427995 (&quot;Dereference before null check&quot;)</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; ...</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; --- a/mm/migrate.c</span>
<span class="quote">&gt; &gt;&gt; +++ b/mm/migrate.c</span>
<span class="quote">&gt; &gt;&gt; @@ -2757,10 +2757,10 @@ int migrate_vma(const struct migrate_vma_ops *ops,</span>
<span class="quote">&gt; &gt;&gt;  	/* Sanity check the arguments */</span>
<span class="quote">&gt; &gt;&gt;  	start &amp;= PAGE_MASK;</span>
<span class="quote">&gt; &gt;&gt;  	end &amp;= PAGE_MASK;</span>
<span class="quote">&gt; &gt;&gt; -	if (is_vm_hugetlb_page(vma) || (vma-&gt;vm_flags &amp; VM_SPECIAL))</span>
<span class="quote">&gt; &gt;&gt; -		return -EINVAL;</span>
<span class="quote">&gt; &gt;&gt;  	if (!vma || !ops || !src || !dst || start &gt;= end)</span>
<span class="quote">&gt; &gt;&gt;  		return -EINVAL;</span>
<span class="quote">&gt; &gt;&gt; +	if (is_vm_hugetlb_page(vma) || (vma-&gt;vm_flags &amp; VM_SPECIAL))</span>
<span class="quote">&gt; &gt;&gt; +		return -EINVAL;</span>
<span class="quote">&gt; &gt;&gt;  	if (start &lt; vma-&gt;vm_start || start &gt;= vma-&gt;vm_end)</span>
<span class="quote">&gt; &gt;&gt;  		return -EINVAL;</span>
<span class="quote">&gt; &gt;&gt;  	if (end &lt;= vma-&gt;vm_start || end &gt; vma-&gt;vm_end)</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; I don&#39;t know what kernel version this is against but I don&#39;t think it&#39;s</span>
<span class="quote">&gt; &gt; anything recent?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I should have said it was against linux-next</span>

ah, it modifies an HMM patch which I dropped a couple of hours ago.  One
for Jerome, please.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/migrate.c b/mm/migrate.c</span>
<span class="p_header">index 7958dfa01b16..039f7bc3b9ee 100644</span>
<span class="p_header">--- a/mm/migrate.c</span>
<span class="p_header">+++ b/mm/migrate.c</span>
<span class="p_chunk">@@ -2757,10 +2757,10 @@</span> <span class="p_context"> int migrate_vma(const struct migrate_vma_ops *ops,</span>
 	/* Sanity check the arguments */
 	start &amp;= PAGE_MASK;
 	end &amp;= PAGE_MASK;
<span class="p_del">-	if (is_vm_hugetlb_page(vma) || (vma-&gt;vm_flags &amp; VM_SPECIAL))</span>
<span class="p_del">-		return -EINVAL;</span>
 	if (!vma || !ops || !src || !dst || start &gt;= end)
 		return -EINVAL;
<span class="p_add">+	if (is_vm_hugetlb_page(vma) || (vma-&gt;vm_flags &amp; VM_SPECIAL))</span>
<span class="p_add">+		return -EINVAL;</span>
 	if (start &lt; vma-&gt;vm_start || start &gt;= vma-&gt;vm_end)
 		return -EINVAL;
 	if (end &lt;= vma-&gt;vm_start || end &gt; vma-&gt;vm_end)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



