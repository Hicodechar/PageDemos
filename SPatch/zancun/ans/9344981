
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[tip:x86/platform] x86/platform/uv/BAU: Add UV4-specific functions - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [tip:x86/platform] x86/platform/uv/BAU: Add UV4-specific functions</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 22, 2016, 10:33 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;tip-4f059d514f7119a4fdd9934189ff31f2c26b2647@git.kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9344981/mbox/"
   >mbox</a>
|
   <a href="/patch/9344981/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9344981/">/patch/9344981/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	4EEB760757 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 22 Sep 2016 10:33:45 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 410DD2A981
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 22 Sep 2016 10:33:45 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 3500E2A983; Thu, 22 Sep 2016 10:33:45 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7D6A12A981
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 22 Sep 2016 10:33:44 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753087AbcIVKdj (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 22 Sep 2016 06:33:39 -0400
Received: from terminus.zytor.com ([198.137.202.10]:51990 &quot;EHLO
	terminus.zytor.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751187AbcIVKdg (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 22 Sep 2016 06:33:36 -0400
Received: from terminus.zytor.com (localhost [127.0.0.1])
	by terminus.zytor.com (8.15.2/8.15.2) with ESMTP id u8MAX2It026744;
	Thu, 22 Sep 2016 03:33:02 -0700
Received: (from tipbot@localhost)
	by terminus.zytor.com (8.15.2/8.15.2/Submit) id u8MAX1IT026668;
	Thu, 22 Sep 2016 03:33:01 -0700
Date: Thu, 22 Sep 2016 03:33:01 -0700
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to
	tipbot@zytor.com using -f
From: tip-bot for Andrew Banman &lt;tipbot@zytor.com&gt;
Message-ID: &lt;tip-4f059d514f7119a4fdd9934189ff31f2c26b2647@git.kernel.org&gt;
Cc: travis@sgi.com, tglx@linutronix.de, hpa@zytor.com, abanman@sgi.com,
	linux-kernel@vger.kernel.org, torvalds@linux-foundation.org,
	peterz@infradead.org, sivanich@sgi.com, mingo@kernel.org
Reply-To: sivanich@sgi.com, torvalds@linux-foundation.org,
	peterz@infradead.org, abanman@sgi.com,
	linux-kernel@vger.kernel.org, mingo@kernel.org, travis@sgi.com,
	hpa@zytor.com, tglx@linutronix.de
In-Reply-To: &lt;1474474161-265604-11-git-send-email-abanman@sgi.com&gt;
References: &lt;1474474161-265604-11-git-send-email-abanman@sgi.com&gt;
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/platform] x86/platform/uv/BAU: Add UV4-specific functions
Git-Commit-ID: 4f059d514f7119a4fdd9934189ff31f2c26b2647
X-Mailer: tip-git-log-daemon
Robot-ID: &lt;tip-bot.git.kernel.org&gt;
Robot-Unsubscribe: Contact &lt;mailto:hpa@kernel.org&gt; to get blacklisted from
	these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a> - Sept. 22, 2016, 10:33 a.m.</div>
<pre class="content">
Commit-ID:  4f059d514f7119a4fdd9934189ff31f2c26b2647
Gitweb:     http://git.kernel.org/tip/4f059d514f7119a4fdd9934189ff31f2c26b2647
Author:     Andrew Banman &lt;abanman@sgi.com&gt;
AuthorDate: Wed, 21 Sep 2016 11:09:21 -0500
Committer:  Ingo Molnar &lt;mingo@kernel.org&gt;
CommitDate: Thu, 22 Sep 2016 11:16:15 +0200

x86/platform/uv/BAU: Add UV4-specific functions

Add the UV4-specific function definitions and define an operations struct
to implement them in the BAU driver.

Many BAU MMRs, although functionally the same, have new addresses on UV4
due to hardware changes. Each MMR requires new read/write functions, but
their implementation in the driver does not change. Thus, it is enough to
enumerate them in the operations struct for the changes to take effect.
<span class="signed-off-by">
Signed-off-by: Andrew Banman &lt;abanman@sgi.com&gt;</span>
<span class="acked-by">Acked-by: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>
<span class="acked-by">Acked-by: Mike Travis &lt;travis@sgi.com&gt;</span>
<span class="acked-by">Acked-by: Dimitri Sivanich &lt;sivanich@sgi.com&gt;</span>
<span class="acked-by">Acked-by: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: akpm@linux-foundation.org
Cc: rja@sgi.com
Link: http://lkml.kernel.org/r/1474474161-265604-11-git-send-email-abanman@sgi.com
<span class="signed-off-by">Signed-off-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
---
 arch/x86/include/asm/uv/uv_bau.h | 30 ++++++++++++++++++++++++++++++
 arch/x86/platform/uv/tlb_uv.c    | 15 ++++++++++++++-
 2 files changed, 44 insertions(+), 1 deletion(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/uv/uv_bau.h b/arch/x86/include/asm/uv/uv_bau.h</span>
<span class="p_header">index a7a93a5..57ab86d 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/uv/uv_bau.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/uv/uv_bau.h</span>
<span class="p_chunk">@@ -664,6 +664,16 @@</span> <span class="p_context"> static inline void write_gmmr_activation(int pnode, unsigned long mmr_image)</span>
 	write_gmmr(pnode, UVH_LB_BAU_SB_ACTIVATION_CONTROL, mmr_image);
 }
 
<span class="p_add">+static inline void write_mmr_proc_payload_first(int pnode, unsigned long mmr_image)</span>
<span class="p_add">+{</span>
<span class="p_add">+	write_gmmr(pnode, UV4H_LB_PROC_INTD_QUEUE_FIRST, mmr_image);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline void write_mmr_proc_payload_last(int pnode, unsigned long mmr_image)</span>
<span class="p_add">+{</span>
<span class="p_add">+	write_gmmr(pnode, UV4H_LB_PROC_INTD_QUEUE_LAST, mmr_image);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static inline void write_mmr_payload_first(int pnode, unsigned long mmr_image)
 {
 	write_gmmr(pnode, UVH_LB_BAU_INTD_PAYLOAD_QUEUE_FIRST, mmr_image);
<span class="p_chunk">@@ -709,6 +719,26 @@</span> <span class="p_context"> static inline unsigned long read_gmmr_sw_ack(int pnode)</span>
 	return read_gmmr(pnode, UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE);
 }
 
<span class="p_add">+static inline void write_mmr_proc_sw_ack(unsigned long mr)</span>
<span class="p_add">+{</span>
<span class="p_add">+	uv_write_local_mmr(UV4H_LB_PROC_INTD_SOFT_ACK_CLEAR, mr);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline void write_gmmr_proc_sw_ack(int pnode, unsigned long mr)</span>
<span class="p_add">+{</span>
<span class="p_add">+	write_gmmr(pnode, UV4H_LB_PROC_INTD_SOFT_ACK_CLEAR, mr);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline unsigned long read_mmr_proc_sw_ack(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return read_lmmr(UV4H_LB_PROC_INTD_SOFT_ACK_PENDING);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline unsigned long read_gmmr_proc_sw_ack(int pnode)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return read_gmmr(pnode, UV4H_LB_PROC_INTD_SOFT_ACK_PENDING);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static inline void write_mmr_data_config(int pnode, unsigned long mr)
 {
 	uv_write_global_mmr64(pnode, UVH_BAU_DATA_CONFIG, mr);
<span class="p_header">diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">index 7ca0e5c..56c5a3a 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_chunk">@@ -36,6 +36,17 @@</span> <span class="p_context"> static struct bau_operations uv123_bau_ops = {</span>
 	.write_payload_last      = write_mmr_payload_last,
 };
 
<span class="p_add">+static struct bau_operations uv4_bau_ops = {</span>
<span class="p_add">+	.bau_gpa_to_offset       = uv_gpa_to_soc_phys_ram,</span>
<span class="p_add">+	.read_l_sw_ack           = read_mmr_proc_sw_ack,</span>
<span class="p_add">+	.read_g_sw_ack           = read_gmmr_proc_sw_ack,</span>
<span class="p_add">+	.write_l_sw_ack          = write_mmr_proc_sw_ack,</span>
<span class="p_add">+	.write_g_sw_ack          = write_gmmr_proc_sw_ack,</span>
<span class="p_add">+	.write_payload_first     = write_mmr_proc_payload_first,</span>
<span class="p_add">+	.write_payload_last      = write_mmr_proc_payload_last,</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
 /* timeouts in nanoseconds (indexed by UVH_AGING_PRESCALE_SEL urgency7 30:28) */
 static int timeout_base_ns[] = {
 		20,
<span class="p_chunk">@@ -2158,7 +2169,9 @@</span> <span class="p_context"> static int __init uv_bau_init(void)</span>
 	if (!is_uv_system())
 		return 0;
 
<span class="p_del">-	if (is_uv3_hub())</span>
<span class="p_add">+	if (is_uv4_hub())</span>
<span class="p_add">+		ops = uv4_bau_ops;</span>
<span class="p_add">+	else if (is_uv3_hub())</span>
 		ops = uv123_bau_ops;
 	else if (is_uv2_hub())
 		ops = uv123_bau_ops;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



