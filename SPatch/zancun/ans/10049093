
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[30/30] x86, kaiser, xen: Dynamically disable KAISER when running under Xen PV - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [30/30] x86, kaiser, xen: Dynamically disable KAISER when running under Xen PV</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=64071">Dave Hansen</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 8, 2017, 7:47 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171108194742.8CD79E09@viggo.jf.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10049093/mbox/"
   >mbox</a>
|
   <a href="/patch/10049093/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10049093/">/patch/10049093/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	CF285603FA for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  8 Nov 2017 19:48:01 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id BF7B029364
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  8 Nov 2017 19:48:01 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id B260C297FB; Wed,  8 Nov 2017 19:48:01 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 2C86029364
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  8 Nov 2017 19:48:01 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752975AbdKHTr5 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 8 Nov 2017 14:47:57 -0500
Received: from mga04.intel.com ([192.55.52.120]:40273 &quot;EHLO mga04.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752913AbdKHTry (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 8 Nov 2017 14:47:54 -0500
Received: from fmsmga006.fm.intel.com ([10.253.24.20])
	by fmsmga104.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
	08 Nov 2017 11:47:53 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.44,365,1505804400&quot;; d=&quot;scan&#39;208&quot;;a=&quot;173894030&quot;
Received: from viggo.jf.intel.com (HELO localhost.localdomain)
	([10.54.39.119])
	by fmsmga006.fm.intel.com with ESMTP; 08 Nov 2017 11:47:53 -0800
Subject: [PATCH 30/30] x86, kaiser,
	xen: Dynamically disable KAISER when running under Xen PV
To: linux-kernel@vger.kernel.org
Cc: linux-mm@kvack.org, dave.hansen@linux.intel.com,
	moritz.lipp@iaik.tugraz.at, daniel.gruss@iaik.tugraz.at,
	michael.schwarz@iaik.tugraz.at, richard.fellner@student.tugraz.at,
	luto@kernel.org, torvalds@linux-foundation.org,
	keescook@google.com, hughd@google.com, x86@kernel.org, jgross@suse.com
From: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;
Date: Wed, 08 Nov 2017 11:47:42 -0800
References: &lt;20171108194646.907A1942@viggo.jf.intel.com&gt;
In-Reply-To: &lt;20171108194646.907A1942@viggo.jf.intel.com&gt;
Message-Id: &lt;20171108194742.8CD79E09@viggo.jf.intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=64071">Dave Hansen</a> - Nov. 8, 2017, 7:47 p.m.</div>
<pre class="content">
<span class="from">From: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;</span>

If you paravirtualize the MMU, you can not use KAISER.  This boils down
to the fact that KAISER needs to do CR3 writes in places that it is not
feasible to do real hypercalls.

If we detect that Xen PV is in use, do not do the KAISER CR3 switches.

I don&#39;t think this too bug of a deal for Xen.  I was under the
impression that the Xen guest kernel and Xen guest userspace didn&#39;t
share an address space *anyway* so Xen PV is not normally even exposed
to the kinds of things that KAISER protects against.

This allows KAISER=y kernels to deployed in environments that also
require PARAVIRT=y.
<span class="signed-off-by">
Signed-off-by: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;</span>
Cc: Moritz Lipp &lt;moritz.lipp@iaik.tugraz.at&gt;
Cc: Daniel Gruss &lt;daniel.gruss@iaik.tugraz.at&gt;
Cc: Michael Schwarz &lt;michael.schwarz@iaik.tugraz.at&gt;
Cc: Richard Fellner &lt;richard.fellner@student.tugraz.at&gt;
Cc: Andy Lutomirski &lt;luto@kernel.org&gt;
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Kees Cook &lt;keescook@google.com&gt;
Cc: Hugh Dickins &lt;hughd@google.com&gt;
Cc: x86@kernel.org
Cc: Juergen Gross &lt;jgross@suse.com&gt;
---

 b/arch/x86/mm/kaiser.c |   24 ++++++++++++++++++++++--
 b/security/Kconfig     |    2 +-
 2 files changed, 23 insertions(+), 3 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=100191">Juergen Gross</a> - Nov. 9, 2017, 3:01 p.m.</div>
<pre class="content">
On 08/11/17 20:47, Dave Hansen wrote:
<span class="quote">&gt; From: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; If you paravirtualize the MMU, you can not use KAISER.  This boils down</span>
<span class="quote">&gt; to the fact that KAISER needs to do CR3 writes in places that it is not</span>
<span class="quote">&gt; feasible to do real hypercalls.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; If we detect that Xen PV is in use, do not do the KAISER CR3 switches.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I don&#39;t think this too bug of a deal for Xen.  I was under the</span>
<span class="quote">&gt; impression that the Xen guest kernel and Xen guest userspace didn&#39;t</span>
<span class="quote">&gt; share an address space *anyway* so Xen PV is not normally even exposed</span>
<span class="quote">&gt; to the kinds of things that KAISER protects against.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This allows KAISER=y kernels to deployed in environments that also</span>
<span class="quote">&gt; require PARAVIRT=y.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;</span>
<span class="acked-by">
Acked-by: Juergen Gross &lt;jgross@suse.com&gt;</span>


Juergen
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff -puN arch/x86/mm/kaiser.c~kaiser-disable-for-xen-pv arch/x86/mm/kaiser.c</span>
<span class="p_header">--- a/arch/x86/mm/kaiser.c~kaiser-disable-for-xen-pv	2017-11-08 10:46:16.913681276 -0800</span>
<span class="p_header">+++ b/arch/x86/mm/kaiser.c	2017-11-08 10:46:16.918681276 -0800</span>
<span class="p_chunk">@@ -31,8 +31,20 @@</span> <span class="p_context"></span>
 #include &lt;asm/tlbflush.h&gt;
 #include &lt;asm/desc.h&gt;
 
<span class="p_add">+/*</span>
<span class="p_add">+ * We need a two-stage enable/disable.  One (kaiser_enabled) to stop</span>
<span class="p_add">+ * the ongoing work that keeps KAISER from being disabled (like PGD</span>
<span class="p_add">+ * poisoning) and another (kaiser_asm_do_switch) that we set when it</span>
<span class="p_add">+ * is completely safe to run without doing KAISER switches.</span>
<span class="p_add">+ */</span>
<span class="p_add">+int kaiser_enabled;</span>
<span class="p_add">+</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Sized and aligned so that we can easily map it out to userspace</span>
<span class="p_add">+ * for use before we have done the assembly CR3 switching.</span>
<span class="p_add">+ */</span>
 __aligned(PAGE_SIZE)
<span class="p_del">-unsigned long kaiser_asm_do_switch[PAGE_SIZE/sizeof(unsigned long)] = { 1 };</span>
<span class="p_add">+unsigned long kaiser_asm_do_switch[PAGE_SIZE/sizeof(unsigned long)];</span>
 
 /*
  * At runtime, the only things we map are some things for CPU
<span class="p_chunk">@@ -404,6 +416,15 @@</span> <span class="p_context"> void __init kaiser_init(void)</span>
 	kaiser_add_user_map_ptrs_early(__irqentry_text_start,
 				       __irqentry_text_end,
 				       __PAGE_KERNEL_RX | _PAGE_GLOBAL);
<span class="p_add">+</span>
<span class="p_add">+	if (cpu_feature_enabled(X86_FEATURE_XENPV)) {</span>
<span class="p_add">+		pr_info(&quot;x86/kaiser: Xen PV detected, disabling &quot;</span>
<span class="p_add">+			&quot;KAISER protection\n&quot;);</span>
<span class="p_add">+	} else {</span>
<span class="p_add">+		pr_info(&quot;x86/kaiser: Unmapping kernel while in userspace\n&quot;);</span>
<span class="p_add">+		kaiser_asm_do_switch[0] = 1;</span>
<span class="p_add">+		kaiser_enabled = 1;</span>
<span class="p_add">+	}</span>
 }
 
 int kaiser_add_mapping(unsigned long addr, unsigned long size,
<span class="p_chunk">@@ -454,7 +475,6 @@</span> <span class="p_context"> void kaiser_remove_mapping(unsigned long</span>
 	__native_flush_tlb_global();
 }
 
<span class="p_del">-int kaiser_enabled = 1;</span>
 static ssize_t kaiser_enabled_read_file(struct file *file, char __user *user_buf,
 			     size_t count, loff_t *ppos)
 {
<span class="p_header">diff -puN security/Kconfig~kaiser-disable-for-xen-pv security/Kconfig</span>
<span class="p_header">--- a/security/Kconfig~kaiser-disable-for-xen-pv	2017-11-08 10:46:16.914681276 -0800</span>
<span class="p_header">+++ b/security/Kconfig	2017-11-08 10:46:16.918681276 -0800</span>
<span class="p_chunk">@@ -56,7 +56,7 @@</span> <span class="p_context"> config SECURITY_NETWORK</span>
 
 config KAISER
 	bool &quot;Remove the kernel mapping in user mode&quot;
<span class="p_del">-	depends on X86_64 &amp;&amp; SMP &amp;&amp; !PARAVIRT</span>
<span class="p_add">+	depends on X86_64 &amp;&amp; SMP</span>
 	help
 	  This feature reduces the number of hardware side channels by
 	  ensuring that the majority of kernel addresses are not mapped

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



