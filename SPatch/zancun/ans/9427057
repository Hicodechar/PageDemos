
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v7,2/7] iommu/exynos: Remove dead code - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v7,2/7] iommu/exynos: Remove dead code</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=2061">Marek Szyprowski</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 14, 2016, 10:08 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1479118092-1365-3-git-send-email-m.szyprowski@samsung.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9427057/mbox/"
   >mbox</a>
|
   <a href="/patch/9427057/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9427057/">/patch/9427057/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	9E12D60476 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 14 Nov 2016 10:10:56 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 870CB287CC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 14 Nov 2016 10:10:56 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 7BC0C287DC; Mon, 14 Nov 2016 10:10:56 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id F253C2883B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 14 Nov 2016 10:10:55 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754803AbcKNKKs (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 14 Nov 2016 05:10:48 -0500
Received: from mailout3.w1.samsung.com ([210.118.77.13]:25066 &quot;EHLO
	mailout3.w1.samsung.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753718AbcKNKJP (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 14 Nov 2016 05:09:15 -0500
Received: from eucas1p1.samsung.com (unknown [182.198.249.206])
	by mailout3.w1.samsung.com
	(Oracle Communications Messaging Server 7.0.5.31.0 64bit (built May 5
	2014))
	with ESMTP id &lt;0OGM007BBMVBO010@mailout3.w1.samsung.com&gt;; Mon,
	14 Nov 2016 10:09:11 +0000 (GMT)
Received: from eusmges5.samsung.com (unknown [203.254.199.245])
	by     eucas1p1.samsung.com (KnoxPortal) with ESMTP id
	20161114100910eucas1p1681e90a2f59200ca2c5b1ffe1181f055~G4h8Nf2Uv1167211672eucas1p1W;
	Mon, 14 Nov 2016 10:09:10 +0000 (GMT)
Received: from eucas1p2.samsung.com ( [182.198.249.207])
	by eusmges5.samsung.com (EUCPMTA) with SMTP id FB.4F.19540.64D89285;
	Mon, 14     Nov 2016 10:09:10 +0000 (GMT)
Received: from eusmgms1.samsung.com (unknown [182.198.249.179])
	by     eucas1p1.samsung.com (KnoxPortal) with ESMTP id
	20161114100909eucas1p1bc6b64109f463f12879b2e3eccb76434~G4h7lCl-e1588215882eucas1p1F;
	Mon, 14 Nov 2016 10:09:09 +0000 (GMT)
X-AuditID: cbfec7f5-f79ce6d000004c54-d0-58298d461301
Received: from eusync4.samsung.com ( [203.254.199.214])
	by eusmgms1.samsung.com (EUCPMTA) with SMTP id B1.B3.07726.94D89285;
	Mon, 14     Nov 2016 10:09:13 +0000 (GMT)
Received: from AMDC2765.digital.local ([106.116.147.25])
	by eusync4.samsung.com (Oracle Communications Messaging Server
	7.0.5.31.0 64bit  (built May  5 2014))
	with ESMTPA id &lt;0OGM00IDHMV2LBA0@eusync4.samsung.com&gt;; Mon,
	14 Nov 2016 10:09:09 +0000 (GMT)
From: Marek Szyprowski &lt;m.szyprowski@samsung.com&gt;
To: linux-pm@vger.kernel.org, linux-kernel@vger.kernel.org,
	iommu@lists.linux-foundation.org,
	linux-samsung-soc@vger.kernel.org, Joerg Roedel &lt;joro@8bytes.org&gt;
Cc: Marek Szyprowski &lt;m.szyprowski@samsung.com&gt;,
	Inki Dae &lt;inki.dae@samsung.com&gt;, Kukjin Kim &lt;kgene@kernel.org&gt;,
	Krzysztof Kozlowski &lt;krzk@kernel.org&gt;,
	Bartlomiej Zolnierkiewicz &lt;b.zolnierkie@samsung.com&gt;,
	&quot;Rafael J. Wysocki&quot; &lt;rjw@rjwysocki.net&gt;, Mark Brown &lt;broonie@kernel.org&gt;,
	&quot;Luis R. Rodriguez&quot; &lt;mcgrof@kernel.org&gt;,
	Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	Tomeu Vizoso &lt;tomeu.vizoso@collabora.com&gt;,
	Lukas Wunner &lt;lukas@wunner.de&gt;, Kevin Hilman &lt;khilman@kernel.org&gt;,
	Tobias Jakobi &lt;tjakobi@math.uni-bielefeld.de&gt;,
	Tomasz Figa &lt;tomasz.figa@gmail.com&gt;
Subject: [PATCH v7 2/7] iommu/exynos: Remove dead code
Date: Mon, 14 Nov 2016 11:08:07 +0100
Message-id: &lt;1479118092-1365-3-git-send-email-m.szyprowski@samsung.com&gt;
X-Mailer: git-send-email 1.9.1
In-reply-to: &lt;1479118092-1365-1-git-send-email-m.szyprowski@samsung.com&gt;
X-Brightmail-Tracker: H4sIAAAAAAAAAzWSa0gUURTHuzszO7NbE8MqdlHzw6alRpZQcssIhaj5EOg3l/C16aSSq7Kj
	khHkA3VdfKVI6zPDNFwzTW3zha6mq2ZpWorhI8x3ZZmmYg9Jd/Tb73D+5/8/93IoTPaQsKbC
	IqI5dYQyXC6W4gbT1uCpKxlOijMtTVboua6GQHnTs2KUVFYjRjmfsnFU2u6O0gprSZQ18xVD
	c/UzIjQ4uFO+by4So7WMLoB0g20itLhgg6q7Jkk0lj0H0Jv+YQKlVK0QSN/8F6DM6mGxhwU7
	21EiYhsnHwO2qWCSZOv0aWK2vfgpyeaOPQHstolkG0ZScTazQQ/YtTo7VpdqILwPXpdeDObC
	w2I59elLgdLQqkYdEWVyuD1Q0kfGg1U7LZBQkDkLC5KWSIGt4LupGrEWSCkZUw7go61JYrch
	Y9YAHF+23x9IrMjDBVEFgPnGWpFQxItg73ot2FWJGVeoXdaarSyZMgB7C0fNKowx4nDp/gym
	BRRlwbjBuQLzHjjjAIdb87FdppmrUNM2IBLi7GCfKde8hoRhYfHaqjkaMuskbF/oJHd9IHMU
	1hkxQX8ZJn/swQW2gF96GvbeZgvTNB17nlkAJiafFFgH4MAyLbA7fNUzZM7CmMMwx/AAE+xp
	qEmRCRIWfu/T7kV5woJvy0D4oUIAiyrpbGBbCg7ogSUXw6tCOP6cC69U8TERIS5Bkao6sHM2
	/ds9642g3HShEzAUkB+iNZGOChmhjOXjVJ0AUpjckj6W7qSQ0cHKuDucOjJAHRPO8Z3AhsLl
	R+jW0g8+MiZEGc3d4rgoTr3fFVES63hwT+mpQccbflbqAoImfA36E4Eev69Xt5TLF117r9nf
	2F79YVk05fnrvLPfzWlSMuTf3fXZLXmkjfcDC6GpG/XzxdMvRv8Rq/7PltI2yjr+OBq8Mllr
	mlW0G197JziqfO5OS96OGn37VxJEPmxFie9LLCW9297LaTxGsTm/KZ2Q43yo0tUZU/PK/y5C
	JmgyAwAA
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFjrIIsWRmVeSWpSXmKPExsVy+t/xa7qevZoRBgdWWVtsnLGe1WLqwyds
	Fs2L17NZTLo/gcViwX5ri87ZG9gt+h+/ZrZ4uvkxk8X580Du5V1z2Cw+9x5htJhxfh+TxYvn
	0hZrj9xlt7gx4SmjxZnTl1gt2lZ/YLVYtesPo0Xf2ktsDsIeTw7OY/LYcXcJo8fOWXfZPTat
	6mTz2D93DbvH5BvLGT3+HWP32HK1ncWjb8sqRo/Pm+Q8ZrRvYw3gjnKzyUhNTEktUkjNS85P
	ycxLt1UKDXHTtVBSyEvMTbVVitD1DQlSUihLzCkF8owM0ICDc4B7sJK+XYJbxuodM1gLjqlW
	nJt3kr2B8ZNcFyMnh4SAiUTTsqksELaYxIV769m6GLk4hASWMEq8//qTHcJpYpK4e2IeE0gV
	m4ChRNfbLrAqEYHFjBINh6YwgjjMAsdYJBb3HGTuYuTgEBYwk3g6C2wFi4CqxKU9M5lBbF4B
	d4mOfeeYINbJSZw8NpkVxOYU8JCY+/kT2BlCQDVXL+9nnsDIu4CRYRWjSGppcW56brGhXnFi
	bnFpXrpecn7uJkZg9G079nPzDsZLG4MPMQpwMCrx8Hbka0QIsSaWFVfmHmKU4GBWEuFV7tGM
	EOJNSaysSi3Kjy8qzUktPsRoCnTURGYp0eR8YGLIK4k3NDE0tzQ0MrawMDcyUhLnLflwJVxI
	ID2xJDU7NbUgtQimj4mDU6qBsclq3jOXgvLFpf4vtXxKBdKcp9//9L87OvrjJ+/Uc4WV+lVe
	qpa6SdNi6n6IHtbXM3IqCY/oDW685SUWOHsvS84CZd78OfFXLi3ObpvzwvGJn5OtybFdsodO
	vLFnX1x968wctm7dq4677gXwvjuwWP6YS/LsjJPv/TlWnRTxa3zjdD9wwZ8XSizFGYmGWsxF
	xYkABALHSNQCAAA=
X-MTR: 20000000000000000@CPGS
X-CMS-MailID: 20161114100909eucas1p1bc6b64109f463f12879b2e3eccb76434
X-Msg-Generator: CA
X-Sender-IP: 182.198.249.179
X-Local-Sender: =?UTF-8?B?TWFyZWsgU3p5cHJvd3NraRtTUlBPTC1LZXJuZWwgKFRQKRs=?=
	=?UTF-8?B?7IK87ISx7KCE7J6QG1NlbmlvciBTb2Z0d2FyZSBFbmdpbmVlcg==?=
X-Global-Sender: =?UTF-8?B?TWFyZWsgU3p5cHJvd3NraRtTUlBPTC1LZXJuZWwgKFRQKRtT?=
	=?UTF-8?B?YW1zdW5nIEVsZWN0cm9uaWNzG1NlbmlvciBTb2Z0d2FyZSBFbmdpbmVlcg==?=
X-Sender-Code: =?UTF-8?B?QzEwG0VIURtDMTBDRDAyQ0QwMjczOTI=?=
CMS-TYPE: 201P
X-HopCount: 7
X-CMS-RootMailID: 20161114100909eucas1p1bc6b64109f463f12879b2e3eccb76434
X-RootMTR: 20161114100909eucas1p1bc6b64109f463f12879b2e3eccb76434
References: &lt;1479118092-1365-1-git-send-email-m.szyprowski@samsung.com&gt;
	&lt;CGME20161114100909eucas1p1bc6b64109f463f12879b2e3eccb76434@eucas1p1.samsung.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2061">Marek Szyprowski</a> - Nov. 14, 2016, 10:08 a.m.</div>
<pre class="content">
__sysmmu_enable/disable functions were designed to do ref-count based
operations, but current code always calls them only once, so the code for
checking the conditions and invalid conditions can be simply removed
without any influence to the driver operation.
<span class="signed-off-by">
Signed-off-by: Marek Szyprowski &lt;m.szyprowski@samsung.com&gt;</span>
---
 drivers/iommu/exynos-iommu.c | 65 ++++++++++++--------------------------------
 1 file changed, 17 insertions(+), 48 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/iommu/exynos-iommu.c b/drivers/iommu/exynos-iommu.c</span>
<span class="p_header">index 8ba0d60..4056228 100644</span>
<span class="p_header">--- a/drivers/iommu/exynos-iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/exynos-iommu.c</span>
<span class="p_chunk">@@ -460,9 +460,6 @@</span> <span class="p_context"> static bool __sysmmu_disable(struct sysmmu_drvdata *data)</span>
 		__sysmmu_disable_nocount(data);
 
 		dev_dbg(data-&gt;sysmmu, &quot;Disabled\n&quot;);
<span class="p_del">-	} else  {</span>
<span class="p_del">-		dev_dbg(data-&gt;sysmmu, &quot;%d times left to disable\n&quot;,</span>
<span class="p_del">-					data-&gt;activations);</span>
 	}
 
 	spin_unlock_irqrestore(&amp;data-&gt;lock, flags);
<span class="p_chunk">@@ -508,29 +505,18 @@</span> <span class="p_context"> static void __sysmmu_enable_nocount(struct sysmmu_drvdata *data)</span>
 static int __sysmmu_enable(struct sysmmu_drvdata *data, phys_addr_t pgtable,
 			   struct exynos_iommu_domain *domain)
 {
<span class="p_del">-	int ret = 0;</span>
 	unsigned long flags;
 
 	spin_lock_irqsave(&amp;data-&gt;lock, flags);
 	if (set_sysmmu_active(data)) {
 		data-&gt;pgtable = pgtable;
 		data-&gt;domain = domain;
<span class="p_del">-</span>
 		__sysmmu_enable_nocount(data);
<span class="p_del">-</span>
 		dev_dbg(data-&gt;sysmmu, &quot;Enabled\n&quot;);
<span class="p_del">-	} else {</span>
<span class="p_del">-		ret = (pgtable == data-&gt;pgtable) ? 1 : -EBUSY;</span>
<span class="p_del">-</span>
<span class="p_del">-		dev_dbg(data-&gt;sysmmu, &quot;already enabled\n&quot;);</span>
 	}
<span class="p_del">-</span>
<span class="p_del">-	if (WARN_ON(ret &lt; 0))</span>
<span class="p_del">-		set_sysmmu_inactive(data); /* decrement count */</span>
<span class="p_del">-</span>
 	spin_unlock_irqrestore(&amp;data-&gt;lock, flags);
 
<span class="p_del">-	return ret;</span>
<span class="p_add">+	return 0;</span>
 }
 
 static void sysmmu_tlb_invalidate_flpdcache(struct sysmmu_drvdata *data,
<span class="p_chunk">@@ -793,8 +779,8 @@</span> <span class="p_context"> static void exynos_iommu_domain_free(struct iommu_domain *iommu_domain)</span>
 	spin_lock_irqsave(&amp;domain-&gt;lock, flags);
 
 	list_for_each_entry_safe(data, next, &amp;domain-&gt;clients, domain_node) {
<span class="p_del">-		if (__sysmmu_disable(data))</span>
<span class="p_del">-			data-&gt;master = NULL;</span>
<span class="p_add">+		__sysmmu_disable(data);</span>
<span class="p_add">+		data-&gt;master = NULL;</span>
 		list_del_init(&amp;data-&gt;domain_node);
 	}
 
<span class="p_chunk">@@ -829,31 +815,23 @@</span> <span class="p_context"> static void exynos_iommu_detach_device(struct iommu_domain *iommu_domain,</span>
 	phys_addr_t pagetable = virt_to_phys(domain-&gt;pgtable);
 	struct sysmmu_drvdata *data, *next;
 	unsigned long flags;
<span class="p_del">-	bool found = false;</span>
 
 	if (!has_sysmmu(dev) || owner-&gt;domain != iommu_domain)
 		return;
 
 	spin_lock_irqsave(&amp;domain-&gt;lock, flags);
 	list_for_each_entry_safe(data, next, &amp;domain-&gt;clients, domain_node) {
<span class="p_del">-		if (data-&gt;master == dev) {</span>
<span class="p_del">-			if (__sysmmu_disable(data)) {</span>
<span class="p_del">-				data-&gt;master = NULL;</span>
<span class="p_del">-				list_del_init(&amp;data-&gt;domain_node);</span>
<span class="p_del">-			}</span>
<span class="p_del">-			pm_runtime_put(data-&gt;sysmmu);</span>
<span class="p_del">-			found = true;</span>
<span class="p_del">-		}</span>
<span class="p_add">+		__sysmmu_disable(data);</span>
<span class="p_add">+		data-&gt;master = NULL;</span>
<span class="p_add">+		list_del_init(&amp;data-&gt;domain_node);</span>
<span class="p_add">+		pm_runtime_put(data-&gt;sysmmu);</span>
 	}
 	spin_unlock_irqrestore(&amp;domain-&gt;lock, flags);
 
 	owner-&gt;domain = NULL;
 
<span class="p_del">-	if (found)</span>
<span class="p_del">-		dev_dbg(dev, &quot;%s: Detached IOMMU with pgtable %pa\n&quot;,</span>
<span class="p_del">-					__func__, &amp;pagetable);</span>
<span class="p_del">-	else</span>
<span class="p_del">-		dev_err(dev, &quot;%s: No IOMMU is attached\n&quot;, __func__);</span>
<span class="p_add">+	dev_dbg(dev, &quot;%s: Detached IOMMU with pgtable %pa\n&quot;, __func__,</span>
<span class="p_add">+		&amp;pagetable);</span>
 }
 
 static int exynos_iommu_attach_device(struct iommu_domain *iommu_domain,
<span class="p_chunk">@@ -864,7 +842,6 @@</span> <span class="p_context"> static int exynos_iommu_attach_device(struct iommu_domain *iommu_domain,</span>
 	struct sysmmu_drvdata *data;
 	phys_addr_t pagetable = virt_to_phys(domain-&gt;pgtable);
 	unsigned long flags;
<span class="p_del">-	int ret = -ENODEV;</span>
 
 	if (!has_sysmmu(dev))
 		return -ENODEV;
<span class="p_chunk">@@ -874,27 +851,19 @@</span> <span class="p_context"> static int exynos_iommu_attach_device(struct iommu_domain *iommu_domain,</span>
 
 	list_for_each_entry(data, &amp;owner-&gt;controllers, owner_node) {
 		pm_runtime_get_sync(data-&gt;sysmmu);
<span class="p_del">-		ret = __sysmmu_enable(data, pagetable, domain);</span>
<span class="p_del">-		if (ret &gt;= 0) {</span>
<span class="p_del">-			data-&gt;master = dev;</span>
<span class="p_add">+		__sysmmu_enable(data, pagetable, domain);</span>
<span class="p_add">+		data-&gt;master = dev;</span>
 
<span class="p_del">-			spin_lock_irqsave(&amp;domain-&gt;lock, flags);</span>
<span class="p_del">-			list_add_tail(&amp;data-&gt;domain_node, &amp;domain-&gt;clients);</span>
<span class="p_del">-			spin_unlock_irqrestore(&amp;domain-&gt;lock, flags);</span>
<span class="p_del">-		}</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	if (ret &lt; 0) {</span>
<span class="p_del">-		dev_err(dev, &quot;%s: Failed to attach IOMMU with pgtable %pa\n&quot;,</span>
<span class="p_del">-					__func__, &amp;pagetable);</span>
<span class="p_del">-		return ret;</span>
<span class="p_add">+		spin_lock_irqsave(&amp;domain-&gt;lock, flags);</span>
<span class="p_add">+		list_add_tail(&amp;data-&gt;domain_node, &amp;domain-&gt;clients);</span>
<span class="p_add">+		spin_unlock_irqrestore(&amp;domain-&gt;lock, flags);</span>
 	}
 
 	owner-&gt;domain = iommu_domain;
<span class="p_del">-	dev_dbg(dev, &quot;%s: Attached IOMMU with pgtable %pa %s\n&quot;,</span>
<span class="p_del">-		__func__, &amp;pagetable, (ret == 0) ? &quot;&quot; : &quot;, again&quot;);</span>
<span class="p_add">+	dev_dbg(dev, &quot;%s: Attached IOMMU with pgtable %pa\n&quot;, __func__,</span>
<span class="p_add">+		&amp;pagetable);</span>
 
<span class="p_del">-	return ret;</span>
<span class="p_add">+	return 0;</span>
 }
 
 static sysmmu_pte_t *alloc_lv2entry(struct exynos_iommu_domain *domain,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



