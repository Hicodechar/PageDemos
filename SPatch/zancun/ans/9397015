
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.4,094/112] s390/mm: fix gmap tlb flush issues - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.4,094/112] s390/mm: fix gmap tlb flush issues</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 26, 2016, 12:23 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161026122308.733079752@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9397015/mbox/"
   >mbox</a>
|
   <a href="/patch/9397015/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9397015/">/patch/9397015/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	88E2960231 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 26 Oct 2016 12:42:37 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4D89E29B18
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 26 Oct 2016 12:42:37 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 3E34729B1C; Wed, 26 Oct 2016 12:42:37 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 0697529B18
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 26 Oct 2016 12:42:36 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S942520AbcJZMmY (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 26 Oct 2016 08:42:24 -0400
Received: from mail.linuxfoundation.org ([140.211.169.12]:56391 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S942280AbcJZMmN (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 26 Oct 2016 08:42:13 -0400
Received: from localhost (pes75-3-78-192-101-3.fbxo.proxad.net
	[78.192.101.3])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id 14A9E9D;
	Wed, 26 Oct 2016 12:42:11 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, Sascha Silbe &lt;silbe@linux.vnet.ibm.com&gt;,
	Martin Schwidefsky &lt;schwidefsky@de.ibm.com&gt;,
	David Hildenbrand &lt;dahi@linux.vnet.ibm.com&gt;
Subject: [PATCH 4.4 094/112] s390/mm: fix gmap tlb flush issues
Date: Wed, 26 Oct 2016 14:23:17 +0200
Message-Id: &lt;20161026122308.733079752@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.10.1
In-Reply-To: &lt;20161026122304.797016625@linuxfoundation.org&gt;
References: &lt;20161026122304.797016625@linuxfoundation.org&gt;
User-Agent: quilt/0.64
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Oct. 26, 2016, 12:23 p.m.</div>
<pre class="content">
4.4-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: David Hildenbrand &lt;dahi@linux.vnet.ibm.com&gt;</span>

commit f045402984404ddc11016358411e445192919047 upstream.

__tlb_flush_asce() should never be used if multiple asce belong to a mm.

As this function changes mm logic determining if local or global tlb
flushes will be neded, we might end up flushing only the gmap asce on all
CPUs and a follow up mm asce flushes will only flush on the local CPU,
although that asce ran on multiple CPUs.

The missing tlb flushes will provoke strange faults in user space and even
low address protections in user space, crashing the kernel.

Fixes: 1b948d6caec4 (&quot;s390/mm,tlb: optimize TLB flushing for zEC12&quot;)
Cc: stable@vger.kernel.org # 3.15+
Reported-by: Sascha Silbe &lt;silbe@linux.vnet.ibm.com&gt;
<span class="acked-by">Acked-by: Martin Schwidefsky &lt;schwidefsky@de.ibm.com&gt;</span>
<span class="signed-off-by">Signed-off-by: David Hildenbrand &lt;dahi@linux.vnet.ibm.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Martin Schwidefsky &lt;schwidefsky@de.ibm.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>

---
 arch/s390/include/asm/tlbflush.h |    3 ++-
 arch/s390/mm/pgtable.c           |    4 ++--
 2 files changed, 4 insertions(+), 3 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/s390/include/asm/tlbflush.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/tlbflush.h</span>
<span class="p_chunk">@@ -81,7 +81,8 @@</span> <span class="p_context"> static inline void __tlb_flush_full(stru</span>
 }
 
 /*
<span class="p_del">- * Flush TLB entries for a specific ASCE on all CPUs.</span>
<span class="p_add">+ * Flush TLB entries for a specific ASCE on all CPUs. Should never be used</span>
<span class="p_add">+ * when more than one asce (e.g. gmap) ran on this mm.</span>
  */
 static inline void __tlb_flush_asce(struct mm_struct *mm, unsigned long asce)
 {
<span class="p_header">--- a/arch/s390/mm/pgtable.c</span>
<span class="p_header">+++ b/arch/s390/mm/pgtable.c</span>
<span class="p_chunk">@@ -166,7 +166,7 @@</span> <span class="p_context"> EXPORT_SYMBOL_GPL(gmap_alloc);</span>
 static void gmap_flush_tlb(struct gmap *gmap)
 {
 	if (MACHINE_HAS_IDTE)
<span class="p_del">-		__tlb_flush_asce(gmap-&gt;mm, gmap-&gt;asce);</span>
<span class="p_add">+		__tlb_flush_idte(gmap-&gt;asce);</span>
 	else
 		__tlb_flush_global();
 }
<span class="p_chunk">@@ -205,7 +205,7 @@</span> <span class="p_context"> void gmap_free(struct gmap *gmap)</span>
 
 	/* Flush tlb. */
 	if (MACHINE_HAS_IDTE)
<span class="p_del">-		__tlb_flush_asce(gmap-&gt;mm, gmap-&gt;asce);</span>
<span class="p_add">+		__tlb_flush_idte(gmap-&gt;asce);</span>
 	else
 		__tlb_flush_global();
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



