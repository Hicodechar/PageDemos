
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v4,3/5] pagemap: rework hugetlb and thp report - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v4,3/5] pagemap: rework hugetlb and thp report</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=120261">Konstantin Khebnikov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 14, 2015, 3:37 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20150714153738.29844.39039.stgit@buzz&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6787901/mbox/"
   >mbox</a>
|
   <a href="/patch/6787901/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6787901/">/patch/6787901/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 18EDD9F2E8
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 14 Jul 2015 15:38:53 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 26EE2205B9
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 14 Jul 2015 15:38:52 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 3089A205E7
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 14 Jul 2015 15:38:50 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753274AbbGNPid (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 14 Jul 2015 11:38:33 -0400
Received: from forward-corp1o.mail.yandex.net ([37.140.190.172]:44983 &quot;EHLO
	forward-corp1o.mail.yandex.net&quot; rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1751719AbbGNPhu (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 14 Jul 2015 11:37:50 -0400
Received: from smtpcorp4.mail.yandex.net (smtpcorp4.mail.yandex.net
	[95.108.252.2])
	by forward-corp1o.mail.yandex.net (Yandex) with ESMTP id 9E52E3920EA0;
	Tue, 14 Jul 2015 18:37:46 +0300 (MSK)
Received: from smtpcorp4.mail.yandex.net (localhost [127.0.0.1])
	by smtpcorp4.mail.yandex.net (Yandex) with ESMTP id 518172C031F;
	Tue, 14 Jul 2015 18:37:46 +0300 (MSK)
Received: from unknown (unknown [2a02:6b8:0:40c:1811:5890:3243:c9ea])
	by smtpcorp4.mail.yandex.net (nwsmtp/Yandex) with ESMTPSA id
	60e11eD9BL-bks433Hf; Tue, 14 Jul 2015 18:37:46 +0300
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128
	bits)) (Client certificate not present)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=yandex-team.ru;
	s=default; 
	t=1436888266; bh=lrDsicMWm28JLEz0k/184OqgsroVS9QVofbnXy5MNIs=;
	h=Subject:From:To:Cc:Date:Message-ID:In-Reply-To:References:
	User-Agent:MIME-Version:Content-Type:Content-Transfer-Encoding;
	b=mREGeP6fFSFx6xMz4dmQiBaU2A/B4X9ihSgkYoh8HvPsaC6XpjyaY0cJccqVIL8yO
	VPXoch72g9Lxz+QMtnwVmq3AdWCwVcEEW3pOekQjXxsVaKWjw2zT6zSNBhLmk9TwoP
	0NswtDjDmwcfR6ASxPnvdKqOc9R4BnwozuY3neWI=
Authentication-Results: smtpcorp4.mail.yandex.net;
	dkim=pass header.i=@yandex-team.ru
Subject: [PATCH v4 3/5] pagemap: rework hugetlb and thp report
From: Konstantin Khlebnikov &lt;khlebnikov@yandex-team.ru&gt;
To: linux-mm@kvack.org, Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;
Cc: &quot;Kirill A. Shutemov&quot; &lt;kirill@shutemov.name&gt;,
	Mark Williamson &lt;mwilliamson@undo-software.com&gt;,
	linux-kernel@vger.kernel.org, linux-api@vger.kernel.org
Date: Tue, 14 Jul 2015 18:37:39 +0300
Message-ID: &lt;20150714153738.29844.39039.stgit@buzz&gt;
In-Reply-To: &lt;20150714152516.29844.69929.stgit@buzz&gt;
References: &lt;20150714152516.29844.69929.stgit@buzz&gt;
User-Agent: StGit/0.17.1-dirty
MIME-Version: 1.0
Content-Type: text/plain; charset=&quot;utf-8&quot;
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-8.2 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,RP_MATCHES_RCVD,T_DKIM_INVALID,UNPARSEABLE_RELAY
	autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=120261">Konstantin Khebnikov</a> - July 14, 2015, 3:37 p.m.</div>
<pre class="content">
This patch moves pmd dissection out of reporting loop: huge pages
are reported as bunch of normal pages with contiguous PFNs.

Add missing &quot;FILE&quot; bit in hugetlb vmas.
<span class="signed-off-by">
Signed-off-by: Konstantin Khlebnikov &lt;khlebnikov@yandex-team.ru&gt;</span>
---
 fs/proc/task_mmu.c |  100 +++++++++++++++++++++++-----------------------------
 1 file changed, 44 insertions(+), 56 deletions(-)


--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=874">Kirill A. Shutemov</a> - July 19, 2015, 11:10 a.m.</div>
<pre class="content">
On Tue, Jul 14, 2015 at 06:37:39PM +0300, Konstantin Khlebnikov wrote:
<span class="quote">&gt; @@ -1073,35 +1047,48 @@ static int pagemap_pte_range(pmd_t *pmd, unsigned long addr, unsigned long end,</span>
<span class="quote">&gt;  	pte_t *pte, *orig_pte;</span>
<span class="quote">&gt;  	int err = 0;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -	if (pmd_trans_huge_lock(pmd, vma, &amp;ptl) == 1) {</span>
<span class="quote">&gt; -		u64 flags = 0;</span>
<span class="quote">&gt; +#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="quote">&gt; +	if (pmd_trans_huge_lock(pmdp, vma, &amp;ptl) == 1) {</span>

#ifdef is redundant. pmd_trans_huge_lock() always return 0 for !THP.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=4407">Naoya Horiguchi</a> - July 21, 2015, 8 a.m.</div>
<pre class="content">
On Tue, Jul 14, 2015 at 06:37:39PM +0300, Konstantin Khlebnikov wrote:
<span class="quote">&gt; This patch moves pmd dissection out of reporting loop: huge pages</span>
<span class="quote">&gt; are reported as bunch of normal pages with contiguous PFNs.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Add missing &quot;FILE&quot; bit in hugetlb vmas.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Konstantin Khlebnikov &lt;khlebnikov@yandex-team.ru&gt;</span>

With reflecting Kirill&#39;s comment about #ifdef, I&#39;m OK for this patch.
<span class="reviewed-by">
Reviewed-by: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;--</span>
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=80221">Konstantin Khlebnikov</a> - July 21, 2015, 8:43 a.m.</div>
<pre class="content">
On Tue, Jul 21, 2015 at 11:00 AM, Naoya Horiguchi
&lt;n-horiguchi@ah.jp.nec.com&gt; wrote:
<span class="quote">&gt; On Tue, Jul 14, 2015 at 06:37:39PM +0300, Konstantin Khlebnikov wrote:</span>
<span class="quote">&gt;&gt; This patch moves pmd dissection out of reporting loop: huge pages</span>
<span class="quote">&gt;&gt; are reported as bunch of normal pages with contiguous PFNs.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Add missing &quot;FILE&quot; bit in hugetlb vmas.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Konstantin Khlebnikov &lt;khlebnikov@yandex-team.ru&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; With reflecting Kirill&#39;s comment about #ifdef, I&#39;m OK for this patch.</span>

That ifdef works most like documentation: &quot;all thp magic happens here&quot;.
I&#39;d like to keep it, if two redundant lines isn&#39;t a big deal.
<span class="quote">
&gt;</span>
<span class="quote">&gt; Reviewed-by: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>
<span class="quote">&gt; --</span>
<span class="quote">&gt; To unsubscribe, send a message with &#39;unsubscribe linux-mm&#39; in</span>
<span class="quote">&gt; the body to majordomo@kvack.org.  For more info on Linux MM,</span>
<span class="quote">&gt; see: http://www.linux-mm.org/ .</span>
<span class="quote">&gt; Don&#39;t email: &lt;a hrefmailto:&quot;dont@kvack.org&quot;&gt; email@kvack.org &lt;/a&gt;</span>
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=131641">Mark Williamson</a> - July 24, 2015, 6:17 p.m.</div>
<pre class="content">
<span class="reviewed-by">Reviewed-by: Mark Williamson &lt;mwilliamson@undo-software.com&gt;</span>

On Tue, Jul 21, 2015 at 9:43 AM, Konstantin Khlebnikov &lt;koct9i@gmail.com&gt; wrote:
<span class="quote">&gt; On Tue, Jul 21, 2015 at 11:00 AM, Naoya Horiguchi</span>
<span class="quote">&gt; &lt;n-horiguchi@ah.jp.nec.com&gt; wrote:</span>
<span class="quote">&gt;&gt; On Tue, Jul 14, 2015 at 06:37:39PM +0300, Konstantin Khlebnikov wrote:</span>
<span class="quote">&gt;&gt;&gt; This patch moves pmd dissection out of reporting loop: huge pages</span>
<span class="quote">&gt;&gt;&gt; are reported as bunch of normal pages with contiguous PFNs.</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; Add missing &quot;FILE&quot; bit in hugetlb vmas.</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; Signed-off-by: Konstantin Khlebnikov &lt;khlebnikov@yandex-team.ru&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; With reflecting Kirill&#39;s comment about #ifdef, I&#39;m OK for this patch.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; That ifdef works most like documentation: &quot;all thp magic happens here&quot;.</span>
<span class="quote">&gt; I&#39;d like to keep it, if two redundant lines isn&#39;t a big deal.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Reviewed-by: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>
<span class="quote">&gt;&gt; --</span>
<span class="quote">&gt;&gt; To unsubscribe, send a message with &#39;unsubscribe linux-mm&#39; in</span>
<span class="quote">&gt;&gt; the body to majordomo@kvack.org.  For more info on Linux MM,</span>
<span class="quote">&gt;&gt; see: http://www.linux-mm.org/ .</span>
<span class="quote">&gt;&gt; Don&#39;t email: &lt;a hrefmailto:&quot;dont@kvack.org&quot;&gt; email@kvack.org &lt;/a&gt;</span>
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=131641">Mark Williamson</a> - July 24, 2015, 6:19 p.m.</div>
<pre class="content">
(my review on this patch comes with the caveat that the specifics of
hugetlb / thp are a bit outside my experience)

On Fri, Jul 24, 2015 at 7:17 PM, Mark Williamson
&lt;mwilliamson@undo-software.com&gt; wrote:
<span class="quote">&gt; Reviewed-by: Mark Williamson &lt;mwilliamson@undo-software.com&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; On Tue, Jul 21, 2015 at 9:43 AM, Konstantin Khlebnikov &lt;koct9i@gmail.com&gt; wrote:</span>
<span class="quote">&gt;&gt; On Tue, Jul 21, 2015 at 11:00 AM, Naoya Horiguchi</span>
<span class="quote">&gt;&gt; &lt;n-horiguchi@ah.jp.nec.com&gt; wrote:</span>
<span class="quote">&gt;&gt;&gt; On Tue, Jul 14, 2015 at 06:37:39PM +0300, Konstantin Khlebnikov wrote:</span>
<span class="quote">&gt;&gt;&gt;&gt; This patch moves pmd dissection out of reporting loop: huge pages</span>
<span class="quote">&gt;&gt;&gt;&gt; are reported as bunch of normal pages with contiguous PFNs.</span>
<span class="quote">&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt; Add missing &quot;FILE&quot; bit in hugetlb vmas.</span>
<span class="quote">&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt; Signed-off-by: Konstantin Khlebnikov &lt;khlebnikov@yandex-team.ru&gt;</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; With reflecting Kirill&#39;s comment about #ifdef, I&#39;m OK for this patch.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; That ifdef works most like documentation: &quot;all thp magic happens here&quot;.</span>
<span class="quote">&gt;&gt; I&#39;d like to keep it, if two redundant lines isn&#39;t a big deal.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; Reviewed-by: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>
<span class="quote">&gt;&gt;&gt; --</span>
<span class="quote">&gt;&gt;&gt; To unsubscribe, send a message with &#39;unsubscribe linux-mm&#39; in</span>
<span class="quote">&gt;&gt;&gt; the body to majordomo@kvack.org.  For more info on Linux MM,</span>
<span class="quote">&gt;&gt;&gt; see: http://www.linux-mm.org/ .</span>
<span class="quote">&gt;&gt;&gt; Don&#39;t email: &lt;a hrefmailto:&quot;dont@kvack.org&quot;&gt; email@kvack.org &lt;/a&gt;</span>
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/fs/proc/task_mmu.c b/fs/proc/task_mmu.c</span>
<span class="p_header">index c05db6acdc35..040721fa405a 100644</span>
<span class="p_header">--- a/fs/proc/task_mmu.c</span>
<span class="p_header">+++ b/fs/proc/task_mmu.c</span>
<span class="p_chunk">@@ -1038,33 +1038,7 @@</span> <span class="p_context"> static pagemap_entry_t pte_to_pagemap_entry(struct pagemapread *pm,</span>
 	return make_pme(frame, flags);
 }
 
<span class="p_del">-#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="p_del">-static pagemap_entry_t thp_pmd_to_pagemap_entry(struct pagemapread *pm,</span>
<span class="p_del">-		pmd_t pmd, int offset, u64 flags)</span>
<span class="p_del">-{</span>
<span class="p_del">-	u64 frame = 0;</span>
<span class="p_del">-</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * Currently pmd for thp is always present because thp can not be</span>
<span class="p_del">-	 * swapped-out, migrated, or HWPOISONed (split in such cases instead.)</span>
<span class="p_del">-	 * This if-check is just to prepare for future implementation.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	if (pmd_present(pmd)) {</span>
<span class="p_del">-		frame = pmd_pfn(pmd) + offset;</span>
<span class="p_del">-		flags |= PM_PRESENT;</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	return make_pme(frame, flags);</span>
<span class="p_del">-}</span>
<span class="p_del">-#else</span>
<span class="p_del">-static pagemap_entry_t thp_pmd_to_pagemap_entry(struct pagemapread *pm,</span>
<span class="p_del">-		pmd_t pmd, int offset, u64 flags)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return make_pme(0, 0);</span>
<span class="p_del">-}</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
<span class="p_del">-static int pagemap_pte_range(pmd_t *pmd, unsigned long addr, unsigned long end,</span>
<span class="p_add">+static int pagemap_pmd_range(pmd_t *pmdp, unsigned long addr, unsigned long end,</span>
 			     struct mm_walk *walk)
 {
 	struct vm_area_struct *vma = walk-&gt;vma;
<span class="p_chunk">@@ -1073,35 +1047,48 @@</span> <span class="p_context"> static int pagemap_pte_range(pmd_t *pmd, unsigned long addr, unsigned long end,</span>
 	pte_t *pte, *orig_pte;
 	int err = 0;
 
<span class="p_del">-	if (pmd_trans_huge_lock(pmd, vma, &amp;ptl) == 1) {</span>
<span class="p_del">-		u64 flags = 0;</span>
<span class="p_add">+#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="p_add">+	if (pmd_trans_huge_lock(pmdp, vma, &amp;ptl) == 1) {</span>
<span class="p_add">+		u64 flags = 0, frame = 0;</span>
<span class="p_add">+		pmd_t pmd = *pmdp;</span>
 
<span class="p_del">-		if ((vma-&gt;vm_flags &amp; VM_SOFTDIRTY) || pmd_soft_dirty(*pmd))</span>
<span class="p_add">+		if ((vma-&gt;vm_flags &amp; VM_SOFTDIRTY) || pmd_soft_dirty(pmd))</span>
 			flags |= PM_SOFT_DIRTY;
 
<span class="p_add">+		/*</span>
<span class="p_add">+		 * Currently pmd for thp is always present because thp</span>
<span class="p_add">+		 * can not be swapped-out, migrated, or HWPOISONed</span>
<span class="p_add">+		 * (split in such cases instead.)</span>
<span class="p_add">+		 * This if-check is just to prepare for future implementation.</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		if (pmd_present(pmd)) {</span>
<span class="p_add">+			flags |= PM_PRESENT;</span>
<span class="p_add">+			frame = pmd_pfn(pmd) +</span>
<span class="p_add">+				((addr &amp; ~PMD_MASK) &gt;&gt; PAGE_SHIFT);</span>
<span class="p_add">+		}</span>
<span class="p_add">+</span>
 		for (; addr != end; addr += PAGE_SIZE) {
<span class="p_del">-			unsigned long offset;</span>
<span class="p_del">-			pagemap_entry_t pme;</span>
<span class="p_add">+			pagemap_entry_t pme = make_pme(frame, flags);</span>
 
<span class="p_del">-			offset = (addr &amp; ~PAGEMAP_WALK_MASK) &gt;&gt;</span>
<span class="p_del">-					PAGE_SHIFT;</span>
<span class="p_del">-			pme = thp_pmd_to_pagemap_entry(pm, *pmd, offset, flags);</span>
 			err = add_to_pagemap(addr, &amp;pme, pm);
 			if (err)
 				break;
<span class="p_add">+			if (flags &amp; PM_PRESENT)</span>
<span class="p_add">+				frame++;</span>
 		}
 		spin_unlock(ptl);
 		return err;
 	}
 
<span class="p_del">-	if (pmd_trans_unstable(pmd))</span>
<span class="p_add">+	if (pmd_trans_unstable(pmdp))</span>
 		return 0;
<span class="p_add">+#endif /* CONFIG_TRANSPARENT_HUGEPAGE */</span>
 
 	/*
 	 * We can assume that @vma always points to a valid one and @end never
 	 * goes beyond vma-&gt;vm_end.
 	 */
<span class="p_del">-	orig_pte = pte = pte_offset_map_lock(walk-&gt;mm, pmd, addr, &amp;ptl);</span>
<span class="p_add">+	orig_pte = pte = pte_offset_map_lock(walk-&gt;mm, pmdp, addr, &amp;ptl);</span>
 	for (; addr &lt; end; pte++, addr += PAGE_SIZE) {
 		pagemap_entry_t pme;
 
<span class="p_chunk">@@ -1118,39 +1105,40 @@</span> <span class="p_context"> static int pagemap_pte_range(pmd_t *pmd, unsigned long addr, unsigned long end,</span>
 }
 
 #ifdef CONFIG_HUGETLB_PAGE
<span class="p_del">-static pagemap_entry_t huge_pte_to_pagemap_entry(struct pagemapread *pm,</span>
<span class="p_del">-					pte_t pte, int offset, u64 flags)</span>
<span class="p_del">-{</span>
<span class="p_del">-	u64 frame = 0;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (pte_present(pte)) {</span>
<span class="p_del">-		frame = pte_pfn(pte) + offset;</span>
<span class="p_del">-		flags |= PM_PRESENT;</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	return make_pme(frame, flags);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 /* This function walks within one hugetlb entry in the single call */
<span class="p_del">-static int pagemap_hugetlb_range(pte_t *pte, unsigned long hmask,</span>
<span class="p_add">+static int pagemap_hugetlb_range(pte_t *ptep, unsigned long hmask,</span>
 				 unsigned long addr, unsigned long end,
 				 struct mm_walk *walk)
 {
 	struct pagemapread *pm = walk-&gt;private;
 	struct vm_area_struct *vma = walk-&gt;vma;
<span class="p_add">+	u64 flags = 0, frame = 0;</span>
 	int err = 0;
<span class="p_del">-	u64 flags = 0;</span>
<span class="p_del">-	pagemap_entry_t pme;</span>
<span class="p_add">+	pte_t pte;</span>
 
 	if (vma-&gt;vm_flags &amp; VM_SOFTDIRTY)
 		flags |= PM_SOFT_DIRTY;
 
<span class="p_add">+	pte = huge_ptep_get(ptep);</span>
<span class="p_add">+	if (pte_present(pte)) {</span>
<span class="p_add">+		struct page *page = pte_page(pte);</span>
<span class="p_add">+</span>
<span class="p_add">+		if (!PageAnon(page))</span>
<span class="p_add">+			flags |= PM_FILE;</span>
<span class="p_add">+</span>
<span class="p_add">+		flags |= PM_PRESENT;</span>
<span class="p_add">+		frame = pte_pfn(pte) +</span>
<span class="p_add">+			((addr &amp; ~hmask) &gt;&gt; PAGE_SHIFT);</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	for (; addr != end; addr += PAGE_SIZE) {
<span class="p_del">-		int offset = (addr &amp; ~hmask) &gt;&gt; PAGE_SHIFT;</span>
<span class="p_del">-		pme = huge_pte_to_pagemap_entry(pm, *pte, offset, flags);</span>
<span class="p_add">+		pagemap_entry_t pme = make_pme(frame, flags);</span>
<span class="p_add">+</span>
 		err = add_to_pagemap(addr, &amp;pme, pm);
 		if (err)
 			return err;
<span class="p_add">+		if (flags &amp; PM_PRESENT)</span>
<span class="p_add">+			frame++;</span>
 	}
 
 	cond_resched();
<span class="p_chunk">@@ -1214,7 +1202,7 @@</span> <span class="p_context"> static ssize_t pagemap_read(struct file *file, char __user *buf,</span>
 	if (!pm.buffer)
 		goto out_mm;
 
<span class="p_del">-	pagemap_walk.pmd_entry = pagemap_pte_range;</span>
<span class="p_add">+	pagemap_walk.pmd_entry = pagemap_pmd_range;</span>
 	pagemap_walk.pte_hole = pagemap_pte_hole;
 #ifdef CONFIG_HUGETLB_PAGE
 	pagemap_walk.hugetlb_entry = pagemap_hugetlb_range;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



