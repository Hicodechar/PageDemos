
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[5/5] dma-mapping: consolidate dma_set_mask - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [5/5] dma-mapping: consolidate dma_set_mask</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 13, 2015, 3:04 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1439478248-15183-6-git-send-email-hch@lst.de&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7008951/mbox/"
   >mbox</a>
|
   <a href="/patch/7008951/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7008951/">/patch/7008951/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 630D3C05AC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 13 Aug 2015 15:08:21 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id A357420117
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 13 Aug 2015 15:08:19 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 948E62060D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 13 Aug 2015 15:08:17 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753138AbbHMPIK (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 13 Aug 2015 11:08:10 -0400
Received: from bombadil.infradead.org ([198.137.202.9]:37336 &quot;EHLO
	bombadil.infradead.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752079AbbHMPIF (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 13 Aug 2015 11:08:05 -0400
Received: from p5de57d0c.dip0.t-ipconnect.de ([93.229.125.12] helo=localhost)
	by bombadil.infradead.org with esmtpsa (Exim 4.80.1 #2 (Red Hat
	Linux)) id 1ZPu68-0000yy-Om; Thu, 13 Aug 2015 15:07:18 +0000
From: Christoph Hellwig &lt;hch@lst.de&gt;
To: akpm@linux-foundation.org
Cc: arnd@arndb.de, linux@arm.linux.org.uk, catalin.marinas@arm.com,
	will.deacon@arm.com, ysato@users.sourceforge.jp, monstr@monstr.eu,
	jonas@southpole.se, cmetcalf@ezchip.com, gxt@mprc.pku.edu.cn,
	x86@kernel.org, linux-alpha@vger.kernel.org,
	linux-hexagon@vger.kernel.org, linux-ia64@vger.kernel.org,
	linux-mips@linux-mips.org, linuxppc-dev@lists.ozlabs.org,
	linux-s390@vger.kernel.org, linux-sh@vger.kernel.org,
	sparclinux@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH 5/5] dma-mapping: consolidate dma_set_mask
Date: Thu, 13 Aug 2015 17:04:08 +0200
Message-Id: &lt;1439478248-15183-6-git-send-email-hch@lst.de&gt;
X-Mailer: git-send-email 1.9.1
In-Reply-To: &lt;1439478248-15183-1-git-send-email-hch@lst.de&gt;
References: &lt;1439478248-15183-1-git-send-email-hch@lst.de&gt;
X-SRS-Rewrite: SMTP reverse-path rewritten from &lt;hch@infradead.org&gt; by
	bombadil.infradead.org See http://www.infradead.org/rpr.html
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a> - Aug. 13, 2015, 3:04 p.m.</div>
<pre class="content">
Almost everyone implements dma_set_mask the same way, although some time
that&#39;s hidden in -&gt;set_dma_mask methods.

Move this implementation to common code, including a callout to override
the post-check action, and remove duplicate instaces in methods as well.

Unfortunately some architectures overload unrelated semantics like changing
the dma_ops into it so we still need to allow for an architecture override
for now.
<span class="signed-off-by">
Signed-off-by: Christoph Hellwig &lt;hch@lst.de&gt;</span>
---
 arch/alpha/include/asm/dma-mapping.h      |  5 -----
 arch/alpha/kernel/pci-noop.c              | 10 ----------
 arch/alpha/kernel/pci_iommu.c             | 11 -----------
 arch/arm/common/dmabounce.c               |  9 ---------
 arch/arm/include/asm/dma-mapping.h        |  5 -----
 arch/arm/mm/dma-mapping.c                 | 16 ----------------
 arch/arm/xen/mm.c                         |  1 -
 arch/arm64/include/asm/dma-mapping.h      |  9 ---------
 arch/h8300/include/asm/dma-mapping.h      |  5 -----
 arch/hexagon/include/asm/dma-mapping.h    |  1 -
 arch/hexagon/kernel/dma.c                 | 11 -----------
 arch/ia64/include/asm/dma-mapping.h       |  9 ---------
 arch/microblaze/include/asm/dma-mapping.h | 14 --------------
 arch/mips/include/asm/dma-mapping.h       | 16 ----------------
 arch/openrisc/include/asm/dma-mapping.h   |  9 ---------
 arch/powerpc/include/asm/dma-mapping.h    |  4 +++-
 arch/powerpc/platforms/cell/iommu.c       |  3 ---
 arch/s390/include/asm/dma-mapping.h       |  2 --
 arch/s390/pci/pci_dma.c                   | 10 ----------
 arch/sh/include/asm/dma-mapping.h         | 14 --------------
 arch/sparc/include/asm/dma-mapping.h      |  5 +++--
 arch/tile/include/asm/dma-mapping.h       |  5 +++--
 arch/unicore32/include/asm/dma-mapping.h  | 10 ----------
 arch/x86/include/asm/dma-mapping.h        |  2 --
 arch/x86/kernel/pci-dma.c                 | 11 -----------
 drivers/xen/swiotlb-xen.c                 | 12 ------------
 include/asm-generic/dma-mapping-common.h  | 16 ++++++++++++++++
 include/xen/swiotlb-xen.h                 |  2 --
 28 files changed, 25 insertions(+), 202 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=709">Russell King - ARM Linux</a> - Aug. 13, 2015, 3:25 p.m.</div>
<pre class="content">
On Thu, Aug 13, 2015 at 05:04:08PM +0200, Christoph Hellwig wrote:
<span class="quote">&gt; diff --git a/arch/arm/common/dmabounce.c b/arch/arm/common/dmabounce.c</span>
<span class="quote">&gt; index 1143c4d..260f52a 100644</span>
<span class="quote">&gt; --- a/arch/arm/common/dmabounce.c</span>
<span class="quote">&gt; +++ b/arch/arm/common/dmabounce.c</span>
<span class="quote">&gt; @@ -440,14 +440,6 @@ static void dmabounce_sync_for_device(struct device *dev,</span>
<span class="quote">&gt;  	arm_dma_ops.sync_single_for_device(dev, handle, size, dir);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -static int dmabounce_set_mask(struct device *dev, u64 dma_mask)</span>
<span class="quote">&gt; -{</span>
<span class="quote">&gt; -	if (dev-&gt;archdata.dmabounce)</span>
<span class="quote">&gt; -		return 0;</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	return arm_dma_ops.set_dma_mask(dev, dma_mask);</span>

Are you sure about this?  A user of dmabounce gets to request any mask
with the original code (even though it was never written back... which
is a separate bug.)  After this, it seems that this will get limited
by the dma_supported() check.  As this old code is about bouncing any
buffer into DMA-able memory, it doesn&#39;t care about the DMA mask.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a> - Aug. 13, 2015, 5:58 p.m.</div>
<pre class="content">
On Thu, Aug 13, 2015 at 04:25:05PM +0100, Russell King - ARM Linux wrote:
<span class="quote">&gt; On Thu, Aug 13, 2015 at 05:04:08PM +0200, Christoph Hellwig wrote:</span>
<span class="quote">&gt; &gt; diff --git a/arch/arm/common/dmabounce.c b/arch/arm/common/dmabounce.c</span>
<span class="quote">&gt; &gt; index 1143c4d..260f52a 100644</span>
<span class="quote">&gt; &gt; --- a/arch/arm/common/dmabounce.c</span>
<span class="quote">&gt; &gt; +++ b/arch/arm/common/dmabounce.c</span>
<span class="quote">&gt; &gt; @@ -440,14 +440,6 @@ static void dmabounce_sync_for_device(struct device *dev,</span>
<span class="quote">&gt; &gt;  	arm_dma_ops.sync_single_for_device(dev, handle, size, dir);</span>
<span class="quote">&gt; &gt;  }</span>
<span class="quote">&gt; &gt;  </span>
<span class="quote">&gt; &gt; -static int dmabounce_set_mask(struct device *dev, u64 dma_mask)</span>
<span class="quote">&gt; &gt; -{</span>
<span class="quote">&gt; &gt; -	if (dev-&gt;archdata.dmabounce)</span>
<span class="quote">&gt; &gt; -		return 0;</span>
<span class="quote">&gt; &gt; -</span>
<span class="quote">&gt; &gt; -	return arm_dma_ops.set_dma_mask(dev, dma_mask);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Are you sure about this?  A user of dmabounce gets to request any mask</span>
<span class="quote">&gt; with the original code (even though it was never written back... which</span>
<span class="quote">&gt; is a separate bug.)  After this, it seems that this will get limited</span>
<span class="quote">&gt; by the dma_supported() check.  As this old code is about bouncing any</span>
<span class="quote">&gt; buffer into DMA-able memory, it doesn&#39;t care about the DMA mask.</span>

I think you&#39;re right.  With the default dma_supported implementation
it would be fine, but ARM uses a custom one.  I&#39;ll keep the arm
specific dma_set_mask implementation for the next round.
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/alpha/include/asm/dma-mapping.h b/arch/alpha/include/asm/dma-mapping.h</span>
<span class="p_header">index 9d763e5..72a8ca7 100644</span>
<span class="p_header">--- a/arch/alpha/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/alpha/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -12,11 +12,6 @@</span> <span class="p_context"> static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 
 #include &lt;asm-generic/dma-mapping-common.h&gt;
 
<span class="p_del">-static inline int dma_set_mask(struct device *dev, u64 mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return get_dma_ops(dev)-&gt;set_dma_mask(dev, mask);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 #define dma_cache_sync(dev, va, size, dir)		  ((void)0)
 
 #endif	/* _ALPHA_DMA_MAPPING_H */
<span class="p_header">diff --git a/arch/alpha/kernel/pci-noop.c b/arch/alpha/kernel/pci-noop.c</span>
<span class="p_header">index df24b76..2b1f4a1 100644</span>
<span class="p_header">--- a/arch/alpha/kernel/pci-noop.c</span>
<span class="p_header">+++ b/arch/alpha/kernel/pci-noop.c</span>
<span class="p_chunk">@@ -166,15 +166,6 @@</span> <span class="p_context"> static int alpha_noop_supported(struct device *dev, u64 mask)</span>
 	return mask &lt; 0x00ffffffUL ? 0 : 1;
 }
 
<span class="p_del">-static int alpha_noop_set_mask(struct device *dev, u64 mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (!dev-&gt;dma_mask || !dma_supported(dev, mask))</span>
<span class="p_del">-		return -EIO;</span>
<span class="p_del">-</span>
<span class="p_del">-	*dev-&gt;dma_mask = mask;</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 struct dma_map_ops alpha_noop_ops = {
 	.alloc			= alpha_noop_alloc_coherent,
 	.free			= alpha_noop_free_coherent,
<span class="p_chunk">@@ -182,7 +173,6 @@</span> <span class="p_context"> struct dma_map_ops alpha_noop_ops = {</span>
 	.map_sg			= alpha_noop_map_sg,
 	.mapping_error		= alpha_noop_mapping_error,
 	.dma_supported		= alpha_noop_supported,
<span class="p_del">-	.set_dma_mask		= alpha_noop_set_mask,</span>
 };
 
 struct dma_map_ops *dma_ops = &amp;alpha_noop_ops;
<span class="p_header">diff --git a/arch/alpha/kernel/pci_iommu.c b/arch/alpha/kernel/pci_iommu.c</span>
<span class="p_header">index eddee77..8969bf2 100644</span>
<span class="p_header">--- a/arch/alpha/kernel/pci_iommu.c</span>
<span class="p_header">+++ b/arch/alpha/kernel/pci_iommu.c</span>
<span class="p_chunk">@@ -939,16 +939,6 @@</span> <span class="p_context"> static int alpha_pci_mapping_error(struct device *dev, dma_addr_t dma_addr)</span>
 	return dma_addr == 0;
 }
 
<span class="p_del">-static int alpha_pci_set_mask(struct device *dev, u64 mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (!dev-&gt;dma_mask ||</span>
<span class="p_del">-	    !pci_dma_supported(alpha_gendev_to_pci(dev), mask))</span>
<span class="p_del">-		return -EIO;</span>
<span class="p_del">-</span>
<span class="p_del">-	*dev-&gt;dma_mask = mask;</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 struct dma_map_ops alpha_pci_ops = {
 	.alloc			= alpha_pci_alloc_coherent,
 	.free			= alpha_pci_free_coherent,
<span class="p_chunk">@@ -958,7 +948,6 @@</span> <span class="p_context"> struct dma_map_ops alpha_pci_ops = {</span>
 	.unmap_sg		= alpha_pci_unmap_sg,
 	.mapping_error		= alpha_pci_mapping_error,
 	.dma_supported		= alpha_pci_supported,
<span class="p_del">-	.set_dma_mask		= alpha_pci_set_mask,</span>
 };
 
 struct dma_map_ops *dma_ops = &amp;alpha_pci_ops;
<span class="p_header">diff --git a/arch/arm/common/dmabounce.c b/arch/arm/common/dmabounce.c</span>
<span class="p_header">index 1143c4d..260f52a 100644</span>
<span class="p_header">--- a/arch/arm/common/dmabounce.c</span>
<span class="p_header">+++ b/arch/arm/common/dmabounce.c</span>
<span class="p_chunk">@@ -440,14 +440,6 @@</span> <span class="p_context"> static void dmabounce_sync_for_device(struct device *dev,</span>
 	arm_dma_ops.sync_single_for_device(dev, handle, size, dir);
 }
 
<span class="p_del">-static int dmabounce_set_mask(struct device *dev, u64 dma_mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (dev-&gt;archdata.dmabounce)</span>
<span class="p_del">-		return 0;</span>
<span class="p_del">-</span>
<span class="p_del">-	return arm_dma_ops.set_dma_mask(dev, dma_mask);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static struct dma_map_ops dmabounce_ops = {
 	.alloc			= arm_dma_alloc,
 	.free			= arm_dma_free,
<span class="p_chunk">@@ -461,7 +453,6 @@</span> <span class="p_context"> static struct dma_map_ops dmabounce_ops = {</span>
 	.unmap_sg		= arm_dma_unmap_sg,
 	.sync_sg_for_cpu	= arm_dma_sync_sg_for_cpu,
 	.sync_sg_for_device	= arm_dma_sync_sg_for_device,
<span class="p_del">-	.set_dma_mask		= dmabounce_set_mask,</span>
 };
 
 static int dmabounce_init_pool(struct dmabounce_pool *pool, struct device *dev,
<span class="p_header">diff --git a/arch/arm/include/asm/dma-mapping.h b/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_header">index b90d247..5f4262ea 100644</span>
<span class="p_header">--- a/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -43,11 +43,6 @@</span> <span class="p_context"> extern int dma_supported(struct device *dev, u64 mask);</span>
 
 #include &lt;asm-generic/dma-mapping-common.h&gt;
 
<span class="p_del">-static inline int dma_set_mask(struct device *dev, u64 mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return get_dma_ops(dev)-&gt;set_dma_mask(dev, mask);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 #ifdef __arch_page_to_dma
 #error Please update to __arch_pfn_to_dma
 #endif
<span class="p_header">diff --git a/arch/arm/mm/dma-mapping.c b/arch/arm/mm/dma-mapping.c</span>
<span class="p_header">index e556e0e..00b1e75 100644</span>
<span class="p_header">--- a/arch/arm/mm/dma-mapping.c</span>
<span class="p_header">+++ b/arch/arm/mm/dma-mapping.c</span>
<span class="p_chunk">@@ -140,7 +140,6 @@</span> <span class="p_context"> struct dma_map_ops arm_dma_ops = {</span>
 	.sync_single_for_device	= arm_dma_sync_single_for_device,
 	.sync_sg_for_cpu	= arm_dma_sync_sg_for_cpu,
 	.sync_sg_for_device	= arm_dma_sync_sg_for_device,
<span class="p_del">-	.set_dma_mask		= arm_dma_set_mask,</span>
 };
 EXPORT_SYMBOL(arm_dma_ops);
 
<span class="p_chunk">@@ -159,7 +158,6 @@</span> <span class="p_context"> struct dma_map_ops arm_coherent_dma_ops = {</span>
 	.get_sgtable		= arm_dma_get_sgtable,
 	.map_page		= arm_coherent_dma_map_page,
 	.map_sg			= arm_dma_map_sg,
<span class="p_del">-	.set_dma_mask		= arm_dma_set_mask,</span>
 };
 EXPORT_SYMBOL(arm_coherent_dma_ops);
 
<span class="p_chunk">@@ -1001,16 +999,6 @@</span> <span class="p_context"> int dma_supported(struct device *dev, u64 mask)</span>
 }
 EXPORT_SYMBOL(dma_supported);
 
<span class="p_del">-int arm_dma_set_mask(struct device *dev, u64 dma_mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (!dev-&gt;dma_mask || !dma_supported(dev, dma_mask))</span>
<span class="p_del">-		return -EIO;</span>
<span class="p_del">-</span>
<span class="p_del">-	*dev-&gt;dma_mask = dma_mask;</span>
<span class="p_del">-</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 #define PREALLOC_DMA_DEBUG_ENTRIES	4096
 
 static int __init dma_debug_do_init(void)
<span class="p_chunk">@@ -1852,8 +1840,6 @@</span> <span class="p_context"> struct dma_map_ops iommu_ops = {</span>
 	.unmap_sg		= arm_iommu_unmap_sg,
 	.sync_sg_for_cpu	= arm_iommu_sync_sg_for_cpu,
 	.sync_sg_for_device	= arm_iommu_sync_sg_for_device,
<span class="p_del">-</span>
<span class="p_del">-	.set_dma_mask		= arm_dma_set_mask,</span>
 };
 
 struct dma_map_ops iommu_coherent_ops = {
<span class="p_chunk">@@ -1867,8 +1853,6 @@</span> <span class="p_context"> struct dma_map_ops iommu_coherent_ops = {</span>
 
 	.map_sg		= arm_coherent_iommu_map_sg,
 	.unmap_sg	= arm_coherent_iommu_unmap_sg,
<span class="p_del">-</span>
<span class="p_del">-	.set_dma_mask	= arm_dma_set_mask,</span>
 };
 
 /**
<span class="p_header">diff --git a/arch/arm/xen/mm.c b/arch/arm/xen/mm.c</span>
<span class="p_header">index 03e75fe..b7bcf17 100644</span>
<span class="p_header">--- a/arch/arm/xen/mm.c</span>
<span class="p_header">+++ b/arch/arm/xen/mm.c</span>
<span class="p_chunk">@@ -179,7 +179,6 @@</span> <span class="p_context"> static struct dma_map_ops xen_swiotlb_dma_ops = {</span>
 	.map_page = xen_swiotlb_map_page,
 	.unmap_page = xen_swiotlb_unmap_page,
 	.dma_supported = xen_swiotlb_dma_supported,
<span class="p_del">-	.set_dma_mask = xen_swiotlb_set_dma_mask,</span>
 };
 
 int __init xen_mm_init(void)
<span class="p_header">diff --git a/arch/arm64/include/asm/dma-mapping.h b/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_header">index f519a58..cfdb34b 100644</span>
<span class="p_header">--- a/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -84,15 +84,6 @@</span> <span class="p_context"> static inline phys_addr_t dma_to_phys(struct device *dev, dma_addr_t dev_addr)</span>
 	return (phys_addr_t)dev_addr;
 }
 
<span class="p_del">-static inline int dma_set_mask(struct device *dev, u64 mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (!dev-&gt;dma_mask || !dma_supported(dev, mask))</span>
<span class="p_del">-		return -EIO;</span>
<span class="p_del">-	*dev-&gt;dma_mask = mask;</span>
<span class="p_del">-</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline bool dma_capable(struct device *dev, dma_addr_t addr, size_t size)
 {
 	if (!dev-&gt;dma_mask)
<span class="p_header">diff --git a/arch/h8300/include/asm/dma-mapping.h b/arch/h8300/include/asm/dma-mapping.h</span>
<span class="p_header">index 48d652e..d9b5b80 100644</span>
<span class="p_header">--- a/arch/h8300/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/h8300/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -10,9 +10,4 @@</span> <span class="p_context"> static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 
 #include &lt;asm-generic/dma-mapping-common.h&gt;
 
<span class="p_del">-static inline int dma_set_mask(struct device *dev, u64 mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 #endif
<span class="p_header">diff --git a/arch/hexagon/include/asm/dma-mapping.h b/arch/hexagon/include/asm/dma-mapping.h</span>
<span class="p_header">index 36e8de7..268fde8 100644</span>
<span class="p_header">--- a/arch/hexagon/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/hexagon/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -45,7 +45,6 @@</span> <span class="p_context"> static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 
 #define HAVE_ARCH_DMA_SUPPORTED 1
 extern int dma_supported(struct device *dev, u64 mask);
<span class="p_del">-extern int dma_set_mask(struct device *dev, u64 mask);</span>
 extern int dma_is_consistent(struct device *dev, dma_addr_t dma_handle);
 extern void dma_cache_sync(struct device *dev, void *vaddr, size_t size,
 			   enum dma_data_direction direction);
<span class="p_header">diff --git a/arch/hexagon/kernel/dma.c b/arch/hexagon/kernel/dma.c</span>
<span class="p_header">index b74f9ba..9e3ddf7 100644</span>
<span class="p_header">--- a/arch/hexagon/kernel/dma.c</span>
<span class="p_header">+++ b/arch/hexagon/kernel/dma.c</span>
<span class="p_chunk">@@ -44,17 +44,6 @@</span> <span class="p_context"> int dma_supported(struct device *dev, u64 mask)</span>
 }
 EXPORT_SYMBOL(dma_supported);
 
<span class="p_del">-int dma_set_mask(struct device *dev, u64 mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (!dev-&gt;dma_mask || !dma_supported(dev, mask))</span>
<span class="p_del">-		return -EIO;</span>
<span class="p_del">-</span>
<span class="p_del">-	*dev-&gt;dma_mask = mask;</span>
<span class="p_del">-</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-EXPORT_SYMBOL(dma_set_mask);</span>
<span class="p_del">-</span>
 static struct gen_pool *coherent_pool;
 
 
<span class="p_header">diff --git a/arch/ia64/include/asm/dma-mapping.h b/arch/ia64/include/asm/dma-mapping.h</span>
<span class="p_header">index 7982caa..9beccf8 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -27,15 +27,6 @@</span> <span class="p_context"> extern void machvec_dma_sync_sg(struct device *, struct scatterlist *, int,</span>
 
 #include &lt;asm-generic/dma-mapping-common.h&gt;
 
<span class="p_del">-static inline int</span>
<span class="p_del">-dma_set_mask (struct device *dev, u64 mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (!dev-&gt;dma_mask || !dma_supported(dev, mask))</span>
<span class="p_del">-		return -EIO;</span>
<span class="p_del">-	*dev-&gt;dma_mask = mask;</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline bool dma_capable(struct device *dev, dma_addr_t addr, size_t size)
 {
 	if (!dev-&gt;dma_mask)
<span class="p_header">diff --git a/arch/microblaze/include/asm/dma-mapping.h b/arch/microblaze/include/asm/dma-mapping.h</span>
<span class="p_header">index 0aa5d8a..24b1297 100644</span>
<span class="p_header">--- a/arch/microblaze/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/microblaze/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -44,20 +44,6 @@</span> <span class="p_context"> static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 	return &amp;dma_direct_ops;
 }
 
<span class="p_del">-static inline int dma_set_mask(struct device *dev, u64 dma_mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (unlikely(ops == NULL))</span>
<span class="p_del">-		return -EIO;</span>
<span class="p_del">-	if (ops-&gt;set_dma_mask)</span>
<span class="p_del">-		return ops-&gt;set_dma_mask(dev, dma_mask);</span>
<span class="p_del">-	if (!dev-&gt;dma_mask || !dma_supported(dev, dma_mask))</span>
<span class="p_del">-		return -EIO;</span>
<span class="p_del">-	*dev-&gt;dma_mask = dma_mask;</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 #include &lt;asm-generic/dma-mapping-common.h&gt;
 
 static inline void __dma_sync(unsigned long paddr,
<span class="p_header">diff --git a/arch/mips/include/asm/dma-mapping.h b/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_header">index 8bf8ec3..e604f76 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -31,22 +31,6 @@</span> <span class="p_context"> static inline void dma_mark_clean(void *addr, size_t size) {}</span>
 
 #include &lt;asm-generic/dma-mapping-common.h&gt;
 
<span class="p_del">-static inline int</span>
<span class="p_del">-dma_set_mask(struct device *dev, u64 mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	if(!dev-&gt;dma_mask || !dma_supported(dev, mask))</span>
<span class="p_del">-		return -EIO;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (ops-&gt;set_dma_mask)</span>
<span class="p_del">-		return ops-&gt;set_dma_mask(dev, mask);</span>
<span class="p_del">-</span>
<span class="p_del">-	*dev-&gt;dma_mask = mask;</span>
<span class="p_del">-</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 extern void dma_cache_sync(struct device *dev, void *vaddr, size_t size,
 	       enum dma_data_direction direction);
 
<span class="p_header">diff --git a/arch/openrisc/include/asm/dma-mapping.h b/arch/openrisc/include/asm/dma-mapping.h</span>
<span class="p_header">index 8fc08b8..413bfcf 100644</span>
<span class="p_header">--- a/arch/openrisc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/openrisc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -44,13 +44,4 @@</span> <span class="p_context"> static inline int dma_supported(struct device *dev, u64 dma_mask)</span>
 
 #include &lt;asm-generic/dma-mapping-common.h&gt;
 
<span class="p_del">-static inline int dma_set_mask(struct device *dev, u64 dma_mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (!dev-&gt;dma_mask || !dma_supported(dev, dma_mask))</span>
<span class="p_del">-		return -EIO;</span>
<span class="p_del">-</span>
<span class="p_del">-	*dev-&gt;dma_mask = dma_mask;</span>
<span class="p_del">-</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
 #endif	/* __ASM_OPENRISC_DMA_MAPPING_H */
<span class="p_header">diff --git a/arch/powerpc/include/asm/dma-mapping.h b/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_header">index e2ff85c..6dd7a0e 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -122,9 +122,11 @@</span> <span class="p_context"> static inline void set_dma_offset(struct device *dev, dma_addr_t off)</span>
 /* this will be removed soon */
 #define flush_write_buffers()
 
<span class="p_add">+#define HAVE_ARCH_DMA_SET_MASK 1</span>
<span class="p_add">+extern int dma_set_mask(struct device *dev, u64 dma_mask);</span>
<span class="p_add">+</span>
 #include &lt;asm-generic/dma-mapping-common.h&gt;
 
<span class="p_del">-extern int dma_set_mask(struct device *dev, u64 dma_mask);</span>
 extern int __dma_set_mask(struct device *dev, u64 dma_mask);
 extern u64 __dma_get_required_mask(struct device *dev);
 
<span class="p_header">diff --git a/arch/powerpc/platforms/cell/iommu.c b/arch/powerpc/platforms/cell/iommu.c</span>
<span class="p_header">index 14a582b..55c60f4 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/cell/iommu.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/cell/iommu.c</span>
<span class="p_chunk">@@ -958,9 +958,6 @@</span> <span class="p_context"> out:</span>
 
 static int dma_set_mask_and_switch(struct device *dev, u64 dma_mask)
 {
<span class="p_del">-	if (!dev-&gt;dma_mask || !dma_supported(dev, dma_mask))</span>
<span class="p_del">-		return -EIO;</span>
<span class="p_del">-</span>
 	if (dma_mask == DMA_BIT_MASK(64) &amp;&amp;
 		cell_iommu_get_fixed_address(dev) != OF_BAD_ADDR)
 	{
<span class="p_header">diff --git a/arch/s390/include/asm/dma-mapping.h b/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_header">index 1f42489..b3fd54d 100644</span>
<span class="p_header">--- a/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -18,8 +18,6 @@</span> <span class="p_context"> static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 	return &amp;s390_dma_ops;
 }
 
<span class="p_del">-extern int dma_set_mask(struct device *dev, u64 mask);</span>
<span class="p_del">-</span>
 static inline void dma_cache_sync(struct device *dev, void *vaddr, size_t size,
 				  enum dma_data_direction direction)
 {
<span class="p_header">diff --git a/arch/s390/pci/pci_dma.c b/arch/s390/pci/pci_dma.c</span>
<span class="p_header">index 6fd8d58..ad5a1b4 100644</span>
<span class="p_header">--- a/arch/s390/pci/pci_dma.c</span>
<span class="p_header">+++ b/arch/s390/pci/pci_dma.c</span>
<span class="p_chunk">@@ -262,16 +262,6 @@</span> <span class="p_context"> out:</span>
 	spin_unlock_irqrestore(&amp;zdev-&gt;iommu_bitmap_lock, flags);
 }
 
<span class="p_del">-int dma_set_mask(struct device *dev, u64 mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (!dev-&gt;dma_mask || !dma_supported(dev, mask))</span>
<span class="p_del">-		return -EIO;</span>
<span class="p_del">-</span>
<span class="p_del">-	*dev-&gt;dma_mask = mask;</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-EXPORT_SYMBOL_GPL(dma_set_mask);</span>
<span class="p_del">-</span>
 static dma_addr_t s390_dma_map_pages(struct device *dev, struct page *page,
 				     unsigned long offset, size_t size,
 				     enum dma_data_direction direction,
<span class="p_header">diff --git a/arch/sh/include/asm/dma-mapping.h b/arch/sh/include/asm/dma-mapping.h</span>
<span class="p_header">index 088f6e5..a3745a3 100644</span>
<span class="p_header">--- a/arch/sh/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/sh/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -13,20 +13,6 @@</span> <span class="p_context"> static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 
 #include &lt;asm-generic/dma-mapping-common.h&gt;
 
<span class="p_del">-static inline int dma_set_mask(struct device *dev, u64 mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (!dev-&gt;dma_mask || !dma_supported(dev, mask))</span>
<span class="p_del">-		return -EIO;</span>
<span class="p_del">-	if (ops-&gt;set_dma_mask)</span>
<span class="p_del">-		return ops-&gt;set_dma_mask(dev, mask);</span>
<span class="p_del">-</span>
<span class="p_del">-	*dev-&gt;dma_mask = mask;</span>
<span class="p_del">-</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 void dma_cache_sync(struct device *dev, void *vaddr, size_t size,
 		    enum dma_data_direction dir);
 
<span class="p_header">diff --git a/arch/sparc/include/asm/dma-mapping.h b/arch/sparc/include/asm/dma-mapping.h</span>
<span class="p_header">index 184651b..c643170 100644</span>
<span class="p_header">--- a/arch/sparc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -37,8 +37,7 @@</span> <span class="p_context"> static inline struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 	return dma_ops;
 }
 
<span class="p_del">-#include &lt;asm-generic/dma-mapping-common.h&gt;</span>
<span class="p_del">-</span>
<span class="p_add">+#define HAVE_ARCH_DMA_SET_MASK 1</span>
 static inline int dma_set_mask(struct device *dev, u64 mask)
 {
 #ifdef CONFIG_PCI
<span class="p_chunk">@@ -52,4 +51,6 @@</span> <span class="p_context"> static inline int dma_set_mask(struct device *dev, u64 mask)</span>
 	return -EINVAL;
 }
 
<span class="p_add">+#include &lt;asm-generic/dma-mapping-common.h&gt;</span>
<span class="p_add">+</span>
 #endif
<span class="p_header">diff --git a/arch/tile/include/asm/dma-mapping.h b/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_header">index 559ed4a..ed0d4ed 100644</span>
<span class="p_header">--- a/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -59,8 +59,6 @@</span> <span class="p_context"> static inline phys_addr_t dma_to_phys(struct device *dev, dma_addr_t daddr)</span>
 
 static inline void dma_mark_clean(void *addr, size_t size) {}
 
<span class="p_del">-#include &lt;asm-generic/dma-mapping-common.h&gt;</span>
<span class="p_del">-</span>
 static inline void set_dma_ops(struct device *dev, struct dma_map_ops *ops)
 {
 	dev-&gt;archdata.dma_ops = ops;
<span class="p_chunk">@@ -74,6 +72,7 @@</span> <span class="p_context"> static inline bool dma_capable(struct device *dev, dma_addr_t addr, size_t size)</span>
 	return addr + size - 1 &lt;= *dev-&gt;dma_mask;
 }
 
<span class="p_add">+#define HAVE_ARCH_DMA_SET_MASK 1</span>
 static inline int
 dma_set_mask(struct device *dev, u64 mask)
 {
<span class="p_chunk">@@ -103,6 +102,8 @@</span> <span class="p_context"> dma_set_mask(struct device *dev, u64 mask)</span>
 	return 0;
 }
 
<span class="p_add">+#include &lt;asm-generic/dma-mapping-common.h&gt;</span>
<span class="p_add">+</span>
 /*
  * dma_alloc_noncoherent() is #defined to return coherent memory,
  * so there&#39;s no need to do any flushing here.
<span class="p_header">diff --git a/arch/unicore32/include/asm/dma-mapping.h b/arch/unicore32/include/asm/dma-mapping.h</span>
<span class="p_header">index 21231c1..8140e05 100644</span>
<span class="p_header">--- a/arch/unicore32/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/unicore32/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -50,16 +50,6 @@</span> <span class="p_context"> static inline phys_addr_t dma_to_phys(struct device *dev, dma_addr_t daddr)</span>
 
 static inline void dma_mark_clean(void *addr, size_t size) {}
 
<span class="p_del">-static inline int dma_set_mask(struct device *dev, u64 dma_mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (!dev-&gt;dma_mask || !dma_supported(dev, dma_mask))</span>
<span class="p_del">-		return -EIO;</span>
<span class="p_del">-</span>
<span class="p_del">-	*dev-&gt;dma_mask = dma_mask;</span>
<span class="p_del">-</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline void dma_cache_sync(struct device *dev, void *vaddr,
 		size_t size, enum dma_data_direction direction)
 {
<span class="p_header">diff --git a/arch/x86/include/asm/dma-mapping.h b/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_header">index b1fbf58..953b726 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -48,8 +48,6 @@</span> <span class="p_context"> extern int dma_supported(struct device *hwdev, u64 mask);</span>
 
 #include &lt;asm-generic/dma-mapping-common.h&gt;
 
<span class="p_del">-extern int dma_set_mask(struct device *dev, u64 mask);</span>
<span class="p_del">-</span>
 extern void *dma_generic_alloc_coherent(struct device *dev, size_t size,
 					dma_addr_t *dma_addr, gfp_t flag,
 					struct dma_attrs *attrs);
<span class="p_header">diff --git a/arch/x86/kernel/pci-dma.c b/arch/x86/kernel/pci-dma.c</span>
<span class="p_header">index bd23971..84b8ef8 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-dma.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-dma.c</span>
<span class="p_chunk">@@ -58,17 +58,6 @@</span> <span class="p_context"> EXPORT_SYMBOL(x86_dma_fallback_dev);</span>
 /* Number of entries preallocated for DMA-API debugging */
 #define PREALLOC_DMA_DEBUG_ENTRIES       65536
 
<span class="p_del">-int dma_set_mask(struct device *dev, u64 mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (!dev-&gt;dma_mask || !dma_supported(dev, mask))</span>
<span class="p_del">-		return -EIO;</span>
<span class="p_del">-</span>
<span class="p_del">-	*dev-&gt;dma_mask = mask;</span>
<span class="p_del">-</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-EXPORT_SYMBOL(dma_set_mask);</span>
<span class="p_del">-</span>
 void __init pci_iommu_alloc(void)
 {
 	struct iommu_table_entry *p;
<span class="p_header">diff --git a/drivers/xen/swiotlb-xen.c b/drivers/xen/swiotlb-xen.c</span>
<span class="p_header">index da1029e..0fff76b 100644</span>
<span class="p_header">--- a/drivers/xen/swiotlb-xen.c</span>
<span class="p_header">+++ b/drivers/xen/swiotlb-xen.c</span>
<span class="p_chunk">@@ -668,15 +668,3 @@</span> <span class="p_context"> xen_swiotlb_dma_supported(struct device *hwdev, u64 mask)</span>
 	return xen_virt_to_bus(xen_io_tlb_end - 1) &lt;= mask;
 }
 EXPORT_SYMBOL_GPL(xen_swiotlb_dma_supported);
<span class="p_del">-</span>
<span class="p_del">-int</span>
<span class="p_del">-xen_swiotlb_set_dma_mask(struct device *dev, u64 dma_mask)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (!dev-&gt;dma_mask || !xen_swiotlb_dma_supported(dev, dma_mask))</span>
<span class="p_del">-		return -EIO;</span>
<span class="p_del">-</span>
<span class="p_del">-	*dev-&gt;dma_mask = dma_mask;</span>
<span class="p_del">-</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-EXPORT_SYMBOL_GPL(xen_swiotlb_set_dma_mask);</span>
<span class="p_header">diff --git a/include/asm-generic/dma-mapping-common.h b/include/asm-generic/dma-mapping-common.h</span>
<span class="p_header">index 67fa6bc..ca65214 100644</span>
<span class="p_header">--- a/include/asm-generic/dma-mapping-common.h</span>
<span class="p_header">+++ b/include/asm-generic/dma-mapping-common.h</span>
<span class="p_chunk">@@ -340,4 +340,20 @@</span> <span class="p_context"> static inline int dma_supported(struct device *dev, u64 mask)</span>
 }
 #endif
 
<span class="p_add">+#ifndef HAVE_ARCH_DMA_SET_MASK</span>
<span class="p_add">+static inline int dma_set_mask(struct device *dev, u64 mask)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (!dev-&gt;dma_mask || !dma_supported(dev, mask))</span>
<span class="p_add">+		return -EIO;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (ops-&gt;set_dma_mask)</span>
<span class="p_add">+		return ops-&gt;set_dma_mask(dev, mask);</span>
<span class="p_add">+</span>
<span class="p_add">+	*dev-&gt;dma_mask = mask;</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+#endif</span>
<span class="p_add">+</span>
 #endif
<span class="p_header">diff --git a/include/xen/swiotlb-xen.h b/include/xen/swiotlb-xen.h</span>
<span class="p_header">index 8b2eb93..4d81ccc 100644</span>
<span class="p_header">--- a/include/xen/swiotlb-xen.h</span>
<span class="p_header">+++ b/include/xen/swiotlb-xen.h</span>
<span class="p_chunk">@@ -56,6 +56,4 @@</span> <span class="p_context"> xen_swiotlb_dma_mapping_error(struct device *hwdev, dma_addr_t dma_addr);</span>
 extern int
 xen_swiotlb_dma_supported(struct device *hwdev, u64 mask);
 
<span class="p_del">-extern int</span>
<span class="p_del">-xen_swiotlb_set_dma_mask(struct device *dev, u64 dma_mask);</span>
 #endif /* __LINUX_SWIOTLB_XEN_H */

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



