
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>arm64: Add support for DMA_ATTR_SKIP_CPU_SYNC attribute to swiotlb - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    arm64: Add support for DMA_ATTR_SKIP_CPU_SYNC attribute to swiotlb</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=94301">Geert Uytterhoeven</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 11, 2017, 10:11 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1484129477-24121-1-git-send-email-geert+renesas@glider.be&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9509781/mbox/"
   >mbox</a>
|
   <a href="/patch/9509781/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9509781/">/patch/9509781/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	572726075C for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 11 Jan 2017 10:11:49 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3D111284F6
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 11 Jan 2017 10:11:49 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 2F6BA284B4; Wed, 11 Jan 2017 10:11:49 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.4 required=2.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RCVD_IN_SORBS_SPAM autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D64E7284B4
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 11 Jan 2017 10:11:48 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1756759AbdAKKLo (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 11 Jan 2017 05:11:44 -0500
Received: from xavier.telenet-ops.be ([195.130.132.52]:48322 &quot;EHLO
	xavier.telenet-ops.be&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753999AbdAKKLm (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 11 Jan 2017 05:11:42 -0500
Received: from ayla.of.borg ([84.193.137.253])
	by xavier.telenet-ops.be with bizsmtp
	id WyBg1u00B5UCtCs01yBgbS; Wed, 11 Jan 2017 11:11:41 +0100
Received: from ramsan.of.borg ([192.168.97.29] helo=ramsan)
	by ayla.of.borg with esmtp (Exim 4.82)
	(envelope-from &lt;geert@linux-m68k.org&gt;)
	id 1cRFsa-00037e-53; Wed, 11 Jan 2017 11:11:40 +0100
Received: from geert by ramsan with local (Exim 4.82)
	(envelope-from &lt;geert@linux-m68k.org&gt;)
	id 1cRFsc-0006Hs-26; Wed, 11 Jan 2017 11:11:42 +0100
From: Geert Uytterhoeven &lt;geert+renesas@glider.be&gt;
To: Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	Will Deacon &lt;will.deacon@arm.com&gt;, Robin Murphy &lt;robin.murphy@arm.com&gt;
Cc: Laurent Pinchart &lt;laurent.pinchart@ideasonboard.com&gt;,
	linux-arm-kernel@lists.infradead.org,
	linux-renesas-soc@vger.kernel.org, linux-kernel@vger.kernel.org,
	Takeshi Kihara &lt;takeshi.kihara.df@renesas.com&gt;,
	Geert Uytterhoeven &lt;geert+renesas@glider.be&gt;
Subject: [PATCH] arm64: Add support for DMA_ATTR_SKIP_CPU_SYNC attribute to
	swiotlb
Date: Wed, 11 Jan 2017 11:11:17 +0100
Message-Id: &lt;1484129477-24121-1-git-send-email-geert+renesas@glider.be&gt;
X-Mailer: git-send-email 1.9.1
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=94301">Geert Uytterhoeven</a> - Jan. 11, 2017, 10:11 a.m.</div>
<pre class="content">
<span class="from">From: Takeshi Kihara &lt;takeshi.kihara.df@renesas.com&gt;</span>

This patch adds support for DMA_ATTR_SKIP_CPU_SYNC attribute for
dma_{un}map_{page,sg} functions family to swiotlb.

DMA_ATTR_SKIP_CPU_SYNC allows platform code to skip synchronization of
the CPU cache for the given buffer assuming that it has been already
transferred to &#39;device&#39; domain.

Ported from IOMMU .{un}map_{sg,page} ops.
<span class="signed-off-by">
Signed-off-by: Takeshi Kihara &lt;takeshi.kihara.df@renesas.com&gt;</span>
<span class="acked-by">Acked-by: Laurent Pinchart &lt;laurent.pinchart@ideasonboard.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Geert Uytterhoeven &lt;geert+renesas@glider.be&gt;</span>
---
v2:
  - Add Acked-by.

Support for DMA_ATTR_SKIP_CPU_SYNC was included when porting the IOMMU
ops from arm to arm64 in commit 13b8629f651164d7 (&quot;arm64: Add IOMMU
dma_ops&quot;).

Presumably it was an oversight that the existing swiotlb based
implementation didn&#39;t have support for DMA_ATTR_SKIP_CPU_SYNC yet?
---
 arch/arm64/mm/dma-mapping.c | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=77581">Robin Murphy</a> - Jan. 11, 2017, 2:24 p.m.</div>
<pre class="content">
On 11/01/17 10:11, Geert Uytterhoeven wrote:
<span class="quote">&gt; From: Takeshi Kihara &lt;takeshi.kihara.df@renesas.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This patch adds support for DMA_ATTR_SKIP_CPU_SYNC attribute for</span>
<span class="quote">&gt; dma_{un}map_{page,sg} functions family to swiotlb.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; DMA_ATTR_SKIP_CPU_SYNC allows platform code to skip synchronization of</span>
<span class="quote">&gt; the CPU cache for the given buffer assuming that it has been already</span>
<span class="quote">&gt; transferred to &#39;device&#39; domain.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Ported from IOMMU .{un}map_{sg,page} ops.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Takeshi Kihara &lt;takeshi.kihara.df@renesas.com&gt;</span>
<span class="quote">&gt; Acked-by: Laurent Pinchart &lt;laurent.pinchart@ideasonboard.com&gt;</span>
<span class="quote">&gt; Signed-off-by: Geert Uytterhoeven &lt;geert+renesas@glider.be&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt; v2:</span>
<span class="quote">&gt;   - Add Acked-by.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Support for DMA_ATTR_SKIP_CPU_SYNC was included when porting the IOMMU</span>
<span class="quote">&gt; ops from arm to arm64 in commit 13b8629f651164d7 (&quot;arm64: Add IOMMU</span>
<span class="quote">&gt; dma_ops&quot;).</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Presumably it was an oversight that the existing swiotlb based</span>
<span class="quote">&gt; implementation didn&#39;t have support for DMA_ATTR_SKIP_CPU_SYNC yet?</span>

Less an oversight, more that nobody&#39;s wanted to use it until now ;)

Personally I&#39;d prefer flag tests to be &quot;!(x)&quot; rather than &quot;(x) == 0&quot;,
but the latter is already in place, so I&#39;ll leave the final word on
style/consistency nitpicks to Catalin and Will.
<span class="reviewed-by">
Reviewed-by: Robin Murphy &lt;robin.murphy@arm.com&gt;</span>
<span class="quote">
&gt; ---</span>
<span class="quote">&gt;  arch/arm64/mm/dma-mapping.c | 12 ++++++++----</span>
<span class="quote">&gt;  1 file changed, 8 insertions(+), 4 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/arch/arm64/mm/dma-mapping.c b/arch/arm64/mm/dma-mapping.c</span>
<span class="quote">&gt; index e04082700bb16c35..1d7d5d2881db7c19 100644</span>
<span class="quote">&gt; --- a/arch/arm64/mm/dma-mapping.c</span>
<span class="quote">&gt; +++ b/arch/arm64/mm/dma-mapping.c</span>
<span class="quote">&gt; @@ -211,7 +211,8 @@ static dma_addr_t __swiotlb_map_page(struct device *dev, struct page *page,</span>
<span class="quote">&gt;  	dma_addr_t dev_addr;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	dev_addr = swiotlb_map_page(dev, page, offset, size, dir, attrs);</span>
<span class="quote">&gt; -	if (!is_device_dma_coherent(dev))</span>
<span class="quote">&gt; +	if (!is_device_dma_coherent(dev) &amp;&amp;</span>
<span class="quote">&gt; +	    (attrs &amp; DMA_ATTR_SKIP_CPU_SYNC) == 0)</span>
<span class="quote">&gt;  		__dma_map_area(phys_to_virt(dma_to_phys(dev, dev_addr)), size, dir);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	return dev_addr;</span>
<span class="quote">&gt; @@ -222,7 +223,8 @@ static void __swiotlb_unmap_page(struct device *dev, dma_addr_t dev_addr,</span>
<span class="quote">&gt;  				 size_t size, enum dma_data_direction dir,</span>
<span class="quote">&gt;  				 unsigned long attrs)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -	if (!is_device_dma_coherent(dev))</span>
<span class="quote">&gt; +	if (!is_device_dma_coherent(dev) &amp;&amp;</span>
<span class="quote">&gt; +	    (attrs &amp; DMA_ATTR_SKIP_CPU_SYNC) == 0)</span>
<span class="quote">&gt;  		__dma_unmap_area(phys_to_virt(dma_to_phys(dev, dev_addr)), size, dir);</span>
<span class="quote">&gt;  	swiotlb_unmap_page(dev, dev_addr, size, dir, attrs);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; @@ -235,7 +237,8 @@ static int __swiotlb_map_sg_attrs(struct device *dev, struct scatterlist *sgl,</span>
<span class="quote">&gt;  	int i, ret;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	ret = swiotlb_map_sg_attrs(dev, sgl, nelems, dir, attrs);</span>
<span class="quote">&gt; -	if (!is_device_dma_coherent(dev))</span>
<span class="quote">&gt; +	if (!is_device_dma_coherent(dev) &amp;&amp;</span>
<span class="quote">&gt; +	    (attrs &amp; DMA_ATTR_SKIP_CPU_SYNC) == 0)</span>
<span class="quote">&gt;  		for_each_sg(sgl, sg, ret, i)</span>
<span class="quote">&gt;  			__dma_map_area(phys_to_virt(dma_to_phys(dev, sg-&gt;dma_address)),</span>
<span class="quote">&gt;  				       sg-&gt;length, dir);</span>
<span class="quote">&gt; @@ -251,7 +254,8 @@ static void __swiotlb_unmap_sg_attrs(struct device *dev,</span>
<span class="quote">&gt;  	struct scatterlist *sg;</span>
<span class="quote">&gt;  	int i;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -	if (!is_device_dma_coherent(dev))</span>
<span class="quote">&gt; +	if (!is_device_dma_coherent(dev) &amp;&amp;</span>
<span class="quote">&gt; +	    (attrs &amp; DMA_ATTR_SKIP_CPU_SYNC) == 0)</span>
<span class="quote">&gt;  		for_each_sg(sgl, sg, nelems, i)</span>
<span class="quote">&gt;  			__dma_unmap_area(phys_to_virt(dma_to_phys(dev, sg-&gt;dma_address)),</span>
<span class="quote">&gt;  					 sg-&gt;length, dir);</span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7096">Will Deacon</a> - Jan. 12, 2017, 3:35 p.m.</div>
<pre class="content">
On Wed, Jan 11, 2017 at 11:11:17AM +0100, Geert Uytterhoeven wrote:
<span class="quote">&gt; From: Takeshi Kihara &lt;takeshi.kihara.df@renesas.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This patch adds support for DMA_ATTR_SKIP_CPU_SYNC attribute for</span>
<span class="quote">&gt; dma_{un}map_{page,sg} functions family to swiotlb.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; DMA_ATTR_SKIP_CPU_SYNC allows platform code to skip synchronization of</span>
<span class="quote">&gt; the CPU cache for the given buffer assuming that it has been already</span>
<span class="quote">&gt; transferred to &#39;device&#39; domain.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Ported from IOMMU .{un}map_{sg,page} ops.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Takeshi Kihara &lt;takeshi.kihara.df@renesas.com&gt;</span>
<span class="quote">&gt; Acked-by: Laurent Pinchart &lt;laurent.pinchart@ideasonboard.com&gt;</span>
<span class="quote">&gt; Signed-off-by: Geert Uytterhoeven &lt;geert+renesas@glider.be&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt; v2:</span>
<span class="quote">&gt;   - Add Acked-by.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Support for DMA_ATTR_SKIP_CPU_SYNC was included when porting the IOMMU</span>
<span class="quote">&gt; ops from arm to arm64 in commit 13b8629f651164d7 (&quot;arm64: Add IOMMU</span>
<span class="quote">&gt; dma_ops&quot;).</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Presumably it was an oversight that the existing swiotlb based</span>
<span class="quote">&gt; implementation didn&#39;t have support for DMA_ATTR_SKIP_CPU_SYNC yet?</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/arm64/mm/dma-mapping.c | 12 ++++++++----</span>
<span class="quote">&gt;  1 file changed, 8 insertions(+), 4 deletions(-)</span>

Thanks. Applied for 4.11, with Robin&#39;s Reviewed-by.

Will
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/mm/dma-mapping.c b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">index e04082700bb16c35..1d7d5d2881db7c19 100644</span>
<span class="p_header">--- a/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">+++ b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_chunk">@@ -211,7 +211,8 @@</span> <span class="p_context"> static dma_addr_t __swiotlb_map_page(struct device *dev, struct page *page,</span>
 	dma_addr_t dev_addr;
 
 	dev_addr = swiotlb_map_page(dev, page, offset, size, dir, attrs);
<span class="p_del">-	if (!is_device_dma_coherent(dev))</span>
<span class="p_add">+	if (!is_device_dma_coherent(dev) &amp;&amp;</span>
<span class="p_add">+	    (attrs &amp; DMA_ATTR_SKIP_CPU_SYNC) == 0)</span>
 		__dma_map_area(phys_to_virt(dma_to_phys(dev, dev_addr)), size, dir);
 
 	return dev_addr;
<span class="p_chunk">@@ -222,7 +223,8 @@</span> <span class="p_context"> static void __swiotlb_unmap_page(struct device *dev, dma_addr_t dev_addr,</span>
 				 size_t size, enum dma_data_direction dir,
 				 unsigned long attrs)
 {
<span class="p_del">-	if (!is_device_dma_coherent(dev))</span>
<span class="p_add">+	if (!is_device_dma_coherent(dev) &amp;&amp;</span>
<span class="p_add">+	    (attrs &amp; DMA_ATTR_SKIP_CPU_SYNC) == 0)</span>
 		__dma_unmap_area(phys_to_virt(dma_to_phys(dev, dev_addr)), size, dir);
 	swiotlb_unmap_page(dev, dev_addr, size, dir, attrs);
 }
<span class="p_chunk">@@ -235,7 +237,8 @@</span> <span class="p_context"> static int __swiotlb_map_sg_attrs(struct device *dev, struct scatterlist *sgl,</span>
 	int i, ret;
 
 	ret = swiotlb_map_sg_attrs(dev, sgl, nelems, dir, attrs);
<span class="p_del">-	if (!is_device_dma_coherent(dev))</span>
<span class="p_add">+	if (!is_device_dma_coherent(dev) &amp;&amp;</span>
<span class="p_add">+	    (attrs &amp; DMA_ATTR_SKIP_CPU_SYNC) == 0)</span>
 		for_each_sg(sgl, sg, ret, i)
 			__dma_map_area(phys_to_virt(dma_to_phys(dev, sg-&gt;dma_address)),
 				       sg-&gt;length, dir);
<span class="p_chunk">@@ -251,7 +254,8 @@</span> <span class="p_context"> static void __swiotlb_unmap_sg_attrs(struct device *dev,</span>
 	struct scatterlist *sg;
 	int i;
 
<span class="p_del">-	if (!is_device_dma_coherent(dev))</span>
<span class="p_add">+	if (!is_device_dma_coherent(dev) &amp;&amp;</span>
<span class="p_add">+	    (attrs &amp; DMA_ATTR_SKIP_CPU_SYNC) == 0)</span>
 		for_each_sg(sgl, sg, nelems, i)
 			__dma_unmap_area(phys_to_virt(dma_to_phys(dev, sg-&gt;dma_address)),
 					 sg-&gt;length, dir);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



