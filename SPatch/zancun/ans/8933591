
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v3] mm, hugetlb_cgroup: round limit_in_bytes down to hugepage size - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v3] mm, hugetlb_cgroup: round limit_in_bytes down to hugepage size</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=579">David Rientjes</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>April 25, 2016, 11:54 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;alpine.DEB.2.10.1604251654380.31930@chino.kir.corp.google.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8933591/mbox/"
   >mbox</a>
|
   <a href="/patch/8933591/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8933591/">/patch/8933591/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 9F8AB9F441
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 25 Apr 2016 23:55:16 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 09AD720120
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 25 Apr 2016 23:55:16 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 3F7AB2011D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 25 Apr 2016 23:55:15 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752501AbcDYXzA (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 25 Apr 2016 19:55:00 -0400
Received: from mail-pf0-f172.google.com ([209.85.192.172]:34639 &quot;EHLO
	mail-pf0-f172.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752394AbcDYXy5 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 25 Apr 2016 19:54:57 -0400
Received: by mail-pf0-f172.google.com with SMTP id y69so53065821pfb.1
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Mon, 25 Apr 2016 16:54:57 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=google.com; s=20120113;
	h=date:from:to:cc:subject:in-reply-to:message-id:references
	:user-agent:mime-version;
	bh=T5yNo9HkUkxKOfuNHmFAXTXbrrjQP86mw2UCbti9X9o=;
	b=TQ9qwI2ZUnYvtKu58fLbIiXok4dP6Vz0lV6hfTklRN4VDHW2u80wmFoDjhz7PbHfSR
	4s4k6Afi7Pe3k7ScgHTb79IKiMmUy2zIK7AKYGWPku6C99hKPxuJuqWvsj6TQv2JsLaz
	wDN4qdXSyRfTrExTvTbnHA8R6yvjSARW0derB//OWV3ivmFjIZWs2zvfEpON/fHKg9RB
	riv8HT8qWlBozTFlaae+8kNZnXDYoijarlW9HXOIavUAmCLH81kYnByCM2K+fe1y+G8X
	tANv/ZNPC6stFMEMLB+eU0aSMyKK4J8wsDRTns0danj1VKwfNl7k2CXQ0H/WTmgKRavv
	2MPA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20130820;
	h=x-gm-message-state:date:from:to:cc:subject:in-reply-to:message-id
	:references:user-agent:mime-version;
	bh=T5yNo9HkUkxKOfuNHmFAXTXbrrjQP86mw2UCbti9X9o=;
	b=SZ2/AM9hmiVDm0lubfhpaTqi5Gt705fdUxqgdq99YiwJfWTsPwth++LiVFWiC/GbFW
	bhCdmBwOVzbDc9EvflcRI+wxAf15HEHe0BDw4ONgIB26Q9M2oI8OiWvTNkx4Al2oKFim
	9jALqVaNnSHAs6mlbYkckp6n+5ffMay6is7I+7tHGkJicojhYle/jZMEVxrLOtlkbuPE
	rMoAx9tCLreM37lEqo5Cbr5yIB26FrR43JjUOfKhzzsAvt0NQqKYCOk12gSyYXndhG2S
	j/yagegH3qG04phNmd62RTlbQnhVy0IAxOpXSi1GWHsc8w1TgZeI7P0CJ6fboFkNhUyn
	kw6A==
X-Gm-Message-State: AOPr4FWep/dYGVvT7YWEtTF4AISIyn2/BPeTTCBhgRLgw685AYbnMY5nxoApkQQFapm3tgqF
X-Received: by 10.98.21.136 with SMTP id 130mr881816pfv.51.1461628496635;
	Mon, 25 Apr 2016 16:54:56 -0700 (PDT)
Received: from [2620:0:1008:1201:6cdd:4cd0:7b48:b317]
	([2620:0:1008:1201:6cdd:4cd0:7b48:b317])
	by smtp.gmail.com with ESMTPSA id
	p78sm31468490pfa.75.2016.04.25.16.54.55
	(version=TLS1 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Mon, 25 Apr 2016 16:54:55 -0700 (PDT)
Date: Mon, 25 Apr 2016 16:54:55 -0700 (PDT)
From: David Rientjes &lt;rientjes@google.com&gt;
X-X-Sender: rientjes@chino.kir.corp.google.com
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
cc: Michal Hocko &lt;mhocko@kernel.org&gt;, Nikolay Borisov &lt;kernel@kyup.com&gt;,
	Johannes Weiner &lt;hannes@cmpxchg.org&gt;,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	linux-kernel@vger.kernel.org, linux-mm@kvack.org
Subject: [patch v3] mm, hugetlb_cgroup: round limit_in_bytes down to hugepage
	size
In-Reply-To: &lt;20160425145223.22617d4c1f12b0f7f4702988@linux-foundation.org&gt;
Message-ID: &lt;alpine.DEB.2.10.1604251654380.31930@chino.kir.corp.google.com&gt;
References: &lt;alpine.DEB.2.10.1604051824320.32718@chino.kir.corp.google.com&gt;
	&lt;5704BA37.2080508@kyup.com&gt; &lt;5704BBBF.8040302@kyup.com&gt;
	&lt;alpine.DEB.2.10.1604061510040.10401@chino.kir.corp.google.com&gt;
	&lt;20160407125145.GD32755@dhcp22.suse.cz&gt;
	&lt;alpine.DEB.2.10.1604141321350.6593@chino.kir.corp.google.com&gt;
	&lt;20160415132451.GL32377@dhcp22.suse.cz&gt;
	&lt;alpine.DEB.2.10.1604181422220.23710@chino.kir.corp.google.com&gt;
	&lt;20160425145223.22617d4c1f12b0f7f4702988@linux-foundation.org&gt;
User-Agent: Alpine 2.10 (DEB 1266 2009-07-14)
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-8.0 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, RCVD_IN_DNSWL_HI, RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=579">David Rientjes</a> - April 25, 2016, 11:54 p.m.</div>
<pre class="content">
The page_counter rounds limits down to page size values.  This makes
sense, except in the case of hugetlb_cgroup where it&#39;s not possible to
charge partial hugepages.  If the hugetlb_cgroup margin is less than the
hugepage size being charged, it will fail as expected.

Round the hugetlb_cgroup limit down to hugepage size, since it is the
effective limit of the cgroup.

For consistency, round down PAGE_COUNTER_MAX as well when a
hugetlb_cgroup is created: this prevents error reports when a user cannot
restore the value to the kernel default.
<span class="signed-off-by">
Signed-off-by: David Rientjes &lt;rientjes@google.com&gt;</span>
---
 v3: update changelog per akpm
     no stable backport needed

 mm/hugetlb_cgroup.c | 35 ++++++++++++++++++++++++++---------
 1 file changed, 26 insertions(+), 9 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/hugetlb_cgroup.c b/mm/hugetlb_cgroup.c</span>
<span class="p_header">--- a/mm/hugetlb_cgroup.c</span>
<span class="p_header">+++ b/mm/hugetlb_cgroup.c</span>
<span class="p_chunk">@@ -67,26 +67,42 @@</span> <span class="p_context"> static inline bool hugetlb_cgroup_have_usage(struct hugetlb_cgroup *h_cg)</span>
 	return false;
 }
 
<span class="p_add">+static void hugetlb_cgroup_init(struct hugetlb_cgroup *h_cgroup,</span>
<span class="p_add">+				struct hugetlb_cgroup *parent_h_cgroup)</span>
<span class="p_add">+{</span>
<span class="p_add">+	int idx;</span>
<span class="p_add">+</span>
<span class="p_add">+	for (idx = 0; idx &lt; HUGE_MAX_HSTATE; idx++) {</span>
<span class="p_add">+		struct page_counter *counter = &amp;h_cgroup-&gt;hugepage[idx];</span>
<span class="p_add">+		struct page_counter *parent = NULL;</span>
<span class="p_add">+		unsigned long limit;</span>
<span class="p_add">+		int ret;</span>
<span class="p_add">+</span>
<span class="p_add">+		if (parent_h_cgroup)</span>
<span class="p_add">+			parent = &amp;parent_h_cgroup-&gt;hugepage[idx];</span>
<span class="p_add">+		page_counter_init(counter, parent);</span>
<span class="p_add">+</span>
<span class="p_add">+		limit = round_down(PAGE_COUNTER_MAX,</span>
<span class="p_add">+				   1 &lt;&lt; huge_page_order(&amp;hstates[idx]));</span>
<span class="p_add">+		ret = page_counter_limit(counter, limit);</span>
<span class="p_add">+		VM_BUG_ON(ret);</span>
<span class="p_add">+	}</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static struct cgroup_subsys_state *
 hugetlb_cgroup_css_alloc(struct cgroup_subsys_state *parent_css)
 {
 	struct hugetlb_cgroup *parent_h_cgroup = hugetlb_cgroup_from_css(parent_css);
 	struct hugetlb_cgroup *h_cgroup;
<span class="p_del">-	int idx;</span>
 
 	h_cgroup = kzalloc(sizeof(*h_cgroup), GFP_KERNEL);
 	if (!h_cgroup)
 		return ERR_PTR(-ENOMEM);
 
<span class="p_del">-	if (parent_h_cgroup) {</span>
<span class="p_del">-		for (idx = 0; idx &lt; HUGE_MAX_HSTATE; idx++)</span>
<span class="p_del">-			page_counter_init(&amp;h_cgroup-&gt;hugepage[idx],</span>
<span class="p_del">-					  &amp;parent_h_cgroup-&gt;hugepage[idx]);</span>
<span class="p_del">-	} else {</span>
<span class="p_add">+	if (!parent_h_cgroup)</span>
 		root_h_cgroup = h_cgroup;
<span class="p_del">-		for (idx = 0; idx &lt; HUGE_MAX_HSTATE; idx++)</span>
<span class="p_del">-			page_counter_init(&amp;h_cgroup-&gt;hugepage[idx], NULL);</span>
<span class="p_del">-	}</span>
<span class="p_add">+</span>
<span class="p_add">+	hugetlb_cgroup_init(h_cgroup, parent_h_cgroup);</span>
 	return &amp;h_cgroup-&gt;css;
 }
 
<span class="p_chunk">@@ -285,6 +301,7 @@</span> <span class="p_context"> static ssize_t hugetlb_cgroup_write(struct kernfs_open_file *of,</span>
 		return ret;
 
 	idx = MEMFILE_IDX(of_cft(of)-&gt;private);
<span class="p_add">+	nr_pages = round_down(nr_pages, 1 &lt;&lt; huge_page_order(&amp;hstates[idx]));</span>
 
 	switch (MEMFILE_ATTR(of_cft(of)-&gt;private)) {
 	case RES_LIMIT:

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



