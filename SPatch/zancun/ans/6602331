
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[04/12] x86/mm/hotplug: Simplify sync_global_pgds() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [04/12] x86/mm/hotplug: Simplify sync_global_pgds()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 13, 2015, 9:49 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1434188955-31397-5-git-send-email-mingo@kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6602331/mbox/"
   >mbox</a>
|
   <a href="/patch/6602331/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6602331/">/patch/6602331/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 2623EC0020
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 13 Jun 2015 09:51:18 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 29DD82051A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 13 Jun 2015 09:51:17 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 1559F20504
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 13 Jun 2015 09:51:16 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753434AbbFMJuM (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sat, 13 Jun 2015 05:50:12 -0400
Received: from mail-wi0-f172.google.com ([209.85.212.172]:34666 &quot;EHLO
	mail-wi0-f172.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752002AbbFMJtj (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sat, 13 Jun 2015 05:49:39 -0400
Received: by wibut5 with SMTP id ut5so35641666wib.1
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Sat, 13 Jun 2015 02:49:38 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=sender:from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=5zWxWD28Zbem06O/yaS0A0YCV0ZizHNzbj/4mbhdXyI=;
	b=qH9ZyW93/8OcO/JvDeVpC7zWg1qHo1cj25zctnFGALvt6ni6S3Lv2jh9DUa5EmsW6Z
	RX/7rz7KSKUHDcs5zAU8OIaTjcjqP98Fbb46gSUYT50dO40WTceaqqxtuQX7l6tYXa9o
	xbxG5qrGi+kOip6tjDs2R7OsH28bHZ93tdNoyYCeksE4n8cmWj3yV8+tJiLvtVkF8ZKd
	LnlEdxBPQtOFure67kpLJsKpJZmTHj38VlaykBgfDt4msImvunG1XyiZAzM4VYk5pwc3
	xLYQoJTggApBSo25GpFUc53n1CtGkNpHCURaAvxyke/SkmM9KHeSkfzb6dcONKRH80u8
	UzLA==
X-Received: by 10.194.71.82 with SMTP id s18mr34624377wju.102.1434188978539; 
	Sat, 13 Jun 2015 02:49:38 -0700 (PDT)
Received: from localhost.localdomain (54033495.catv.pool.telekom.hu.
	[84.3.52.149]) by mx.google.com with ESMTPSA id
	u9sm9624601wju.44.2015.06.13.02.49.36
	(version=TLSv1.2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Sat, 13 Jun 2015 02:49:37 -0700 (PDT)
From: Ingo Molnar &lt;mingo@kernel.org&gt;
To: linux-kernel@vger.kernel.org
Cc: linux-mm@kvack.org, Andy Lutomirski &lt;luto@amacapital.net&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Denys Vlasenko &lt;dvlasenk@redhat.com&gt;, Brian Gerst &lt;brgerst@gmail.com&gt;,
	Peter Zijlstra &lt;peterz@infradead.org&gt;, Borislav Petkov &lt;bp@alien8.de&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Oleg Nesterov &lt;oleg@redhat.com&gt;, Thomas Gleixner &lt;tglx@linutronix.de&gt;,
	Waiman Long &lt;Waiman.Long@hp.com&gt;
Subject: [PATCH 04/12] x86/mm/hotplug: Simplify sync_global_pgds()
Date: Sat, 13 Jun 2015 11:49:07 +0200
Message-Id: &lt;1434188955-31397-5-git-send-email-mingo@kernel.org&gt;
X-Mailer: git-send-email 2.1.4
In-Reply-To: &lt;1434188955-31397-1-git-send-email-mingo@kernel.org&gt;
References: &lt;1434188955-31397-1-git-send-email-mingo@kernel.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.8 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID,T_RP_MATCHES_RCVD,UNPARSEABLE_RELAY
	autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a> - June 13, 2015, 9:49 a.m.</div>
<pre class="content">
Now that the memory hotplug code does not remove PGD entries anymore,
the only users of sync_global_pgds() use it after extending the
PGD.

So remove the &#39;removed&#39; parameter and simplify the call sites.

Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Andy Lutomirski &lt;luto@amacapital.net&gt;
Cc: Borislav Petkov &lt;bp@alien8.de&gt;
Cc: Brian Gerst &lt;brgerst@gmail.com&gt;
Cc: Denys Vlasenko &lt;dvlasenk@redhat.com&gt;
Cc: H. Peter Anvin &lt;hpa@zytor.com&gt;
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Oleg Nesterov &lt;oleg@redhat.com&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: Rik van Riel &lt;riel@redhat.com&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Cc: Waiman Long &lt;Waiman.Long@hp.com&gt;
Cc: linux-mm@kvack.org
<span class="signed-off-by">Signed-off-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
---
 arch/x86/include/asm/pgtable_64.h |  3 +--
 arch/x86/mm/fault.c               |  2 +-
 arch/x86/mm/init_64.c             | 27 ++++++++-------------------
 3 files changed, 10 insertions(+), 22 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/pgtable_64.h b/arch/x86/include/asm/pgtable_64.h</span>
<span class="p_header">index 2ee781114d34..f405fc3bb719 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/pgtable_64.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/pgtable_64.h</span>
<span class="p_chunk">@@ -116,8 +116,7 @@</span> <span class="p_context"> static inline void native_pgd_clear(pgd_t *pgd)</span>
 	native_set_pgd(pgd, native_make_pgd(0));
 }
 
<span class="p_del">-extern void sync_global_pgds(unsigned long start, unsigned long end,</span>
<span class="p_del">-			     int removed);</span>
<span class="p_add">+extern void sync_global_pgds(unsigned long start, unsigned long end);</span>
 
 /*
  * Conversion functions: convert a page and protection to a page entry,
<span class="p_header">diff --git a/arch/x86/mm/fault.c b/arch/x86/mm/fault.c</span>
<span class="p_header">index 181c53bac3a7..50342825f221 100644</span>
<span class="p_header">--- a/arch/x86/mm/fault.c</span>
<span class="p_header">+++ b/arch/x86/mm/fault.c</span>
<span class="p_chunk">@@ -349,7 +349,7 @@</span> <span class="p_context"> static void dump_pagetable(unsigned long address)</span>
 
 void vmalloc_sync_all(void)
 {
<span class="p_del">-	sync_global_pgds(VMALLOC_START &amp; PGDIR_MASK, VMALLOC_END, 0);</span>
<span class="p_add">+	sync_global_pgds(VMALLOC_START &amp; PGDIR_MASK, VMALLOC_END);</span>
 }
 
 /*
<span class="p_header">diff --git a/arch/x86/mm/init_64.c b/arch/x86/mm/init_64.c</span>
<span class="p_header">index 7a988dbad240..dcb2f45caf0e 100644</span>
<span class="p_header">--- a/arch/x86/mm/init_64.c</span>
<span class="p_header">+++ b/arch/x86/mm/init_64.c</span>
<span class="p_chunk">@@ -160,10 +160,10 @@</span> <span class="p_context"> static int __init nonx32_setup(char *str)</span>
 __setup(&quot;noexec32=&quot;, nonx32_setup);
 
 /*
<span class="p_del">- * When memory was added/removed make sure all the process MMs have</span>
<span class="p_add">+ * When memory was added make sure all the process MMs have</span>
  * matching PGD entries in the local PGD level page as well.
  */
<span class="p_del">-void sync_global_pgds(unsigned long start, unsigned long end, int removed)</span>
<span class="p_add">+void sync_global_pgds(unsigned long start, unsigned long end)</span>
 {
 	unsigned long address;
 
<span class="p_chunk">@@ -171,14 +171,8 @@</span> <span class="p_context"> void sync_global_pgds(unsigned long start, unsigned long end, int removed)</span>
 		const pgd_t *pgd_ref = pgd_offset_k(address);
 		struct task_struct *g, *p;
 
<span class="p_del">-		/*</span>
<span class="p_del">-		 * When this function is called after memory hot remove,</span>
<span class="p_del">-		 * pgd_none() already returns true, but only the reference</span>
<span class="p_del">-		 * kernel PGD has been cleared, not the process PGDs.</span>
<span class="p_del">-		 *</span>
<span class="p_del">-		 * So clear the affected entries in every process PGD as well:</span>
<span class="p_del">-		 */</span>
<span class="p_del">-		if (pgd_none(*pgd_ref) &amp;&amp; !removed)</span>
<span class="p_add">+		/* Only sync (potentially) newly added PGD entries: */</span>
<span class="p_add">+		if (pgd_none(*pgd_ref))</span>
 			continue;
 
 		spin_lock(&amp;pgd_lock); /* Implies rcu_read_lock() for the task list iteration: */
<span class="p_chunk">@@ -204,13 +198,8 @@</span> <span class="p_context"> void sync_global_pgds(unsigned long start, unsigned long end, int removed)</span>
 			if (!pgd_none(*pgd_ref) &amp;&amp; !pgd_none(*pgd))
 				BUG_ON(pgd_page_vaddr(*pgd) != pgd_page_vaddr(*pgd_ref));
 
<span class="p_del">-			if (removed) {</span>
<span class="p_del">-				if (pgd_none(*pgd_ref) &amp;&amp; !pgd_none(*pgd))</span>
<span class="p_del">-					pgd_clear(pgd);</span>
<span class="p_del">-			} else {</span>
<span class="p_del">-				if (pgd_none(*pgd))</span>
<span class="p_del">-					set_pgd(pgd, *pgd_ref);</span>
<span class="p_del">-			}</span>
<span class="p_add">+			if (pgd_none(*pgd))</span>
<span class="p_add">+				set_pgd(pgd, *pgd_ref);</span>
 
 			spin_unlock(pgt_lock);
 			task_unlock(p);
<span class="p_chunk">@@ -644,7 +633,7 @@</span> <span class="p_context"> kernel_physical_mapping_init(unsigned long start,</span>
 	}
 
 	if (pgd_changed)
<span class="p_del">-		sync_global_pgds(addr, end - 1, 0);</span>
<span class="p_add">+		sync_global_pgds(addr, end - 1);</span>
 
 	__flush_tlb_all();
 
<span class="p_chunk">@@ -1284,7 +1273,7 @@</span> <span class="p_context"> int __meminit vmemmap_populate(unsigned long start, unsigned long end, int node)</span>
 	else
 		err = vmemmap_populate_basepages(start, end, node);
 	if (!err)
<span class="p_del">-		sync_global_pgds(start, end - 1, 0);</span>
<span class="p_add">+		sync_global_pgds(start, end - 1);</span>
 	return err;
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



