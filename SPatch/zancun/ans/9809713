
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/5] iommu: add a new member unmap_tlb_sync into struct iommu_ops - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/5] iommu: add a new member unmap_tlb_sync into struct iommu_ops</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=72826">lei zhen</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 26, 2017, 1:38 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1498484330-10840-3-git-send-email-thunder.leizhen@huawei.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9809713/mbox/"
   >mbox</a>
|
   <a href="/patch/9809713/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9809713/">/patch/9809713/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	7692160329 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 26 Jun 2017 13:39:55 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7BB732846F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 26 Jun 2017 13:39:55 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 6F8D5285CA; Mon, 26 Jun 2017 13:39:55 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C8EE82846F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 26 Jun 2017 13:39:54 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752523AbdFZNjq (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 26 Jun 2017 09:39:46 -0400
Received: from szxga02-in.huawei.com ([45.249.212.188]:8858 &quot;EHLO
	szxga02-in.huawei.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752187AbdFZNj2 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 26 Jun 2017 09:39:28 -0400
Received: from 172.30.72.53 (EHLO DGGEML401-HUB.china.huawei.com)
	([172.30.72.53])
	by dggrg02-dlp.huawei.com (MOS 4.4.6-GA FastPath queued)
	with ESMTP id AQA47791; Mon, 26 Jun 2017 21:39:25 +0800 (CST)
Received: from localhost (10.177.23.164) by DGGEML401-HUB.china.huawei.com
	(10.3.17.32) with Microsoft SMTP Server id 14.3.301.0;
	Mon, 26 Jun 2017 21:39:18 +0800
From: Zhen Lei &lt;thunder.leizhen@huawei.com&gt;
To: Will Deacon &lt;will.deacon@arm.com&gt;, Joerg Roedel &lt;joro@8bytes.org&gt;,
	linux-arm-kernel &lt;linux-arm-kernel@lists.infradead.org&gt;,
	iommu &lt;iommu@lists.linux-foundation.org&gt;,
	Robin Murphy &lt;robin.murphy@arm.com&gt;,
	linux-kernel &lt;linux-kernel@vger.kernel.org&gt;
CC: Zefan Li &lt;lizefan@huawei.com&gt;, Xinwei Hu &lt;huxinwei@huawei.com&gt;,
	&quot;Tianhong Ding&quot; &lt;dingtianhong@huawei.com&gt;,
	Hanjun Guo &lt;guohanjun@huawei.com&gt;, Zhen Lei &lt;thunder.leizhen@huawei.com&gt;,
	John Garry &lt;john.garry@huawei.com&gt;
Subject: [PATCH 2/5] iommu: add a new member unmap_tlb_sync into struct
	iommu_ops
Date: Mon, 26 Jun 2017 21:38:47 +0800
Message-ID: &lt;1498484330-10840-3-git-send-email-thunder.leizhen@huawei.com&gt;
X-Mailer: git-send-email 1.9.5.msysgit.0
In-Reply-To: &lt;1498484330-10840-1-git-send-email-thunder.leizhen@huawei.com&gt;
References: &lt;1498484330-10840-1-git-send-email-thunder.leizhen@huawei.com&gt;
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [10.177.23.164]
X-CFilter-Loop: Reflected
X-Mirapoint-Virus-RAPID-Raw: score=unknown(0),
	refid=str=0001.0A020204.59510E8E.000F, ss=1, re=0.000, recu=0.000,
	reip=0.000, cl=1, cld=1, fgs=0, ip=0.0.0.0,
	so=2014-11-16 11:51:01, dmn=2013-03-21 17:37:32
X-Mirapoint-Loop-Id: ed5302fe4556ae41e7f51ba1eefc20de
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72826">lei zhen</a> - June 26, 2017, 1:38 p.m.</div>
<pre class="content">
An iova range may contain many pages/blocks, especially for the case of
unmap_sg. Currently, for each page/block unmapping, a tlb invalidation
operation will be followed and wait(called tlb_sync) until the operation&#39;s
over. But actually we only need one tlb_sync in the last stage. Look at
the loop in function iommu_unmap:
	while (unmapped &lt; size) {
		...
		unmapped_page = domain-&gt;ops-&gt;unmap(domain, iova, pgsize);
		...
	}
It&#39;s not a good idea to add the tlb_sync in domain-&gt;ops-&gt;unmap.

There are many profits, below actions can be reduced:
1. iommu hardware is a shared resource for cpus, for the tlb_sync operation,
   lock protection is needed.
2. iommu hardware is not inside CPU, to start tlb_sync and check it finished
   may take a lot of time.

Some people might ask: Is it safe to do so? The answer is yes. The standard
processing flow is:
	alloc iova
	map
	process data
	unmap
	tlb invalidation and sync
	free iova

What should be guaranteed is: &quot;free iova&quot; action is behind &quot;unmap&quot; and &quot;tlbi
operation&quot; action, that is what we are doing right now. This ensures that:
all TLBs of an iova-range have been invalidated before the iova reallocated.
<span class="signed-off-by">
Signed-off-by: Zhen Lei &lt;thunder.leizhen@huawei.com&gt;</span>
---
 drivers/iommu/iommu.c | 3 +++
 include/linux/iommu.h | 1 +
 2 files changed, 4 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/iommu/iommu.c b/drivers/iommu/iommu.c</span>
<span class="p_header">index cf7ca7e..01e91a8 100644</span>
<span class="p_header">--- a/drivers/iommu/iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/iommu.c</span>
<span class="p_chunk">@@ -1610,6 +1610,9 @@</span> <span class="p_context"> size_t iommu_unmap(struct iommu_domain *domain, unsigned long iova, size_t size)</span>
 		unmapped += unmapped_page;
 	}
 
<span class="p_add">+	if (domain-&gt;ops-&gt;unmap_tlb_sync)</span>
<span class="p_add">+		domain-&gt;ops-&gt;unmap_tlb_sync(domain);</span>
<span class="p_add">+</span>
 	trace_unmap(orig_iova, size, unmapped);
 	return unmapped;
 }
<span class="p_header">diff --git a/include/linux/iommu.h b/include/linux/iommu.h</span>
<span class="p_header">index 2cb54ad..5964121 100644</span>
<span class="p_header">--- a/include/linux/iommu.h</span>
<span class="p_header">+++ b/include/linux/iommu.h</span>
<span class="p_chunk">@@ -197,6 +197,7 @@</span> <span class="p_context"> struct iommu_ops {</span>
 		   phys_addr_t paddr, size_t size, int prot);
 	size_t (*unmap)(struct iommu_domain *domain, unsigned long iova,
 		     size_t size);
<span class="p_add">+	void (*unmap_tlb_sync)(struct iommu_domain *domain);</span>
 	size_t (*map_sg)(struct iommu_domain *domain, unsigned long iova,
 			 struct scatterlist *sg, unsigned int nents, int prot);
 	phys_addr_t (*iova_to_phys)(struct iommu_domain *domain, dma_addr_t iova);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



