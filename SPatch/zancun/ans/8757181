
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>mm, hugetlb_cgroup: round limit_in_bytes down to hugepage size - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    mm, hugetlb_cgroup: round limit_in_bytes down to hugepage size</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=579">David Rientjes</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>April 6, 2016, 1:25 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;alpine.DEB.2.10.1604051824320.32718@chino.kir.corp.google.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8757181/mbox/"
   >mbox</a>
|
   <a href="/patch/8757181/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8757181/">/patch/8757181/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 7BF6FC0553
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  6 Apr 2016 01:25:24 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id EA876202AE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  6 Apr 2016 01:25:23 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 54C5D20172
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  6 Apr 2016 01:25:23 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1759701AbcDFBZR (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 5 Apr 2016 21:25:17 -0400
Received: from mail-pa0-f44.google.com ([209.85.220.44]:34554 &quot;EHLO
	mail-pa0-f44.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752950AbcDFBZP (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 5 Apr 2016 21:25:15 -0400
Received: by mail-pa0-f44.google.com with SMTP id fe3so21770101pab.1
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Tue, 05 Apr 2016 18:25:15 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=google.com; s=20120113;
	h=date:from:to:cc:subject:message-id:user-agent:mime-version;
	bh=rJ5HwHiAL+3ihHykYtkVQstI5afcNRzv0gDnKFolaag=;
	b=Modzdk8EN1reAl3lk7iOhUBgk+fyNj4VTZP8kiykEoJmr4nIJA7M/tFeqz1SOU22nd
	9j71R07pvcsDZKkCSVqAem2tnjniKJSd2G1Xz5OmYASWXIV5lY+xlHTSVX//7TJ9SLTa
	2dBI49XaJj31mMPbqbrXC5wZIbSSD6VBAcr8lkuexJxjd/kO9ifYxiqZNlkhZFIyW5PJ
	mrMiSzK/c+fltAffTM0cddcgH8s9K1oqFYn5sb1Tz3zFQRP1AhZc5D8b4Ndta8bXea8T
	eNccn3jI7n/2KJCE9cQgFwLT4dSDI1rVls9gQd+uMg2XXmT5LqRCMFhKIKNgdfu4CCpv
	BxSA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20130820;
	h=x-gm-message-state:date:from:to:cc:subject:message-id:user-agent
	:mime-version;
	bh=rJ5HwHiAL+3ihHykYtkVQstI5afcNRzv0gDnKFolaag=;
	b=Z65wV4AETfq8l1eOPPnJu02HxJJ6CJyY7RQous9BqMe92vGuQF1CcuWNkPiozA8XR5
	pEnfwDLY/HvwO47lD6AZeLTdYj6ajwUgIkUgUwPd64fipmtr7JhmADFmuL98dHqgMfog
	/s4p9jw7r0dpkMAih+O4f+sfjSLYS7hgYKK+DfnD6D+4nc04TeJzdw9CQHRWyUZZNkAt
	H8PSbTuvFfvnR0lUcrUl/1KzEOyUAMBM+D3305MZrisR4Pr6Ku9zNxyMUOiZ+jZhaskh
	eLlm9ZkMAQey+3DNTdtCyaUrn+CxmNbKd0XpmN7WC5fAEpFK1fdYIFU28VxoYb/wrRv+
	vq0A==
X-Gm-Message-State: AD7BkJL+d7VpCqTmcba+25SQnjswO7Y3Rlo3Osa8Al135B0O2X8ON2MLqbuc4tzh4XV7Qe/W
X-Received: by 10.66.222.202 with SMTP id
	qo10mr34276778pac.141.1459905914611; 
	Tue, 05 Apr 2016 18:25:14 -0700 (PDT)
Received: from [2620:0:1008:1201:4c80:7c8e:bb13:8249]
	([2620:0:1008:1201:4c80:7c8e:bb13:8249])
	by smtp.gmail.com with ESMTPSA id
	z2sm315678pfa.90.2016.04.05.18.25.13
	(version=TLS1 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Tue, 05 Apr 2016 18:25:13 -0700 (PDT)
Date: Tue, 5 Apr 2016 18:25:13 -0700 (PDT)
From: David Rientjes &lt;rientjes@google.com&gt;
X-X-Sender: rientjes@chino.kir.corp.google.com
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
cc: Michal Hocko &lt;mhocko@suse.com&gt;, Johannes Weiner &lt;hannes@cmpxchg.org&gt;,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	linux-kernel@vger.kernel.org, linux-mm@kvack.org
Subject: [patch] mm, hugetlb_cgroup: round limit_in_bytes down to hugepage
	size
Message-ID: &lt;alpine.DEB.2.10.1604051824320.32718@chino.kir.corp.google.com&gt;
User-Agent: Alpine 2.10 (DEB 1266 2009-07-14)
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-8.0 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, RCVD_IN_DNSWL_HI, RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=579">David Rientjes</a> - April 6, 2016, 1:25 a.m.</div>
<pre class="content">
The page_counter rounds limits down to page size values.  This makes
sense, except in the case of hugetlb_cgroup where it&#39;s not possible to
charge partial hugepages.

Round the hugetlb_cgroup limit down to hugepage size.
<span class="signed-off-by">
Signed-off-by: David Rientjes &lt;rientjes@google.com&gt;</span>
---
 mm/hugetlb_cgroup.c | 1 +
 1 file changed, 1 insertion(+)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=131881">kernel@kyup.com</a> - April 6, 2016, 7:26 a.m.</div>
<pre class="content">
On 04/06/2016 04:25 AM, David Rientjes wrote:
<span class="quote">&gt; The page_counter rounds limits down to page size values.  This makes</span>
<span class="quote">&gt; sense, except in the case of hugetlb_cgroup where it&#39;s not possible to</span>
<span class="quote">&gt; charge partial hugepages.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Round the hugetlb_cgroup limit down to hugepage size.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: David Rientjes &lt;rientjes@google.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  mm/hugetlb_cgroup.c | 1 +</span>
<span class="quote">&gt;  1 file changed, 1 insertion(+)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/mm/hugetlb_cgroup.c b/mm/hugetlb_cgroup.c</span>
<span class="quote">&gt; --- a/mm/hugetlb_cgroup.c</span>
<span class="quote">&gt; +++ b/mm/hugetlb_cgroup.c</span>
<span class="quote">&gt; @@ -288,6 +288,7 @@ static ssize_t hugetlb_cgroup_write(struct kernfs_open_file *of,</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	switch (MEMFILE_ATTR(of_cft(of)-&gt;private)) {</span>
<span class="quote">&gt;  	case RES_LIMIT:</span>
<span class="quote">&gt; +		nr_pages &amp;= ~((1 &lt;&lt; huge_page_order(&amp;hstates[idx])) - 1);</span>

Why not:

nr_pages = round_down(nr_pages, huge_page_order(&amp;hstates[idx]));
<span class="quote">

&gt;  		mutex_lock(&amp;hugetlb_limit_mutex);</span>
<span class="quote">&gt;  		ret = page_counter_limit(&amp;h_cg-&gt;hugepage[idx], nr_pages);</span>
<span class="quote">&gt;  		mutex_unlock(&amp;hugetlb_limit_mutex);</span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=131881">kernel@kyup.com</a> - April 6, 2016, 7:33 a.m.</div>
<pre class="content">
On 04/06/2016 10:26 AM, Nikolay Borisov wrote:
<span class="quote">&gt; </span>
<span class="quote">&gt; </span>
<span class="quote">&gt; On 04/06/2016 04:25 AM, David Rientjes wrote:</span>
<span class="quote">&gt;&gt; The page_counter rounds limits down to page size values.  This makes</span>
<span class="quote">&gt;&gt; sense, except in the case of hugetlb_cgroup where it&#39;s not possible to</span>
<span class="quote">&gt;&gt; charge partial hugepages.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Round the hugetlb_cgroup limit down to hugepage size.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: David Rientjes &lt;rientjes@google.com&gt;</span>
<span class="quote">&gt;&gt; ---</span>
<span class="quote">&gt;&gt;  mm/hugetlb_cgroup.c | 1 +</span>
<span class="quote">&gt;&gt;  1 file changed, 1 insertion(+)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; diff --git a/mm/hugetlb_cgroup.c b/mm/hugetlb_cgroup.c</span>
<span class="quote">&gt;&gt; --- a/mm/hugetlb_cgroup.c</span>
<span class="quote">&gt;&gt; +++ b/mm/hugetlb_cgroup.c</span>
<span class="quote">&gt;&gt; @@ -288,6 +288,7 @@ static ssize_t hugetlb_cgroup_write(struct kernfs_open_file *of,</span>
<span class="quote">&gt;&gt;  </span>
<span class="quote">&gt;&gt;  	switch (MEMFILE_ATTR(of_cft(of)-&gt;private)) {</span>
<span class="quote">&gt;&gt;  	case RES_LIMIT:</span>
<span class="quote">&gt;&gt; +		nr_pages &amp;= ~((1 &lt;&lt; huge_page_order(&amp;hstates[idx])) - 1);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Why not:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; nr_pages = round_down(nr_pages, huge_page_order(&amp;hstates[idx]));</span>

Oops, that should be:

round_down(nr_pages, 1 &lt;&lt; huge_page_order(&amp;hstates[idx]));
<span class="quote">
&gt; </span>
<span class="quote">&gt; </span>
<span class="quote">&gt;&gt;  		mutex_lock(&amp;hugetlb_limit_mutex);</span>
<span class="quote">&gt;&gt;  		ret = page_counter_limit(&amp;h_cg-&gt;hugepage[idx], nr_pages);</span>
<span class="quote">&gt;&gt;  		mutex_unlock(&amp;hugetlb_limit_mutex);</span>
<span class="quote">&gt;&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137061">Michal Hocko</a> - April 6, 2016, 9:09 a.m.</div>
<pre class="content">
On Wed 06-04-16 10:33:19, Nikolay Borisov wrote:
<span class="quote">&gt; </span>
<span class="quote">&gt; </span>
<span class="quote">&gt; On 04/06/2016 10:26 AM, Nikolay Borisov wrote:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; On 04/06/2016 04:25 AM, David Rientjes wrote:</span>
<span class="quote">&gt; &gt;&gt; The page_counter rounds limits down to page size values.  This makes</span>
<span class="quote">&gt; &gt;&gt; sense, except in the case of hugetlb_cgroup where it&#39;s not possible to</span>
<span class="quote">&gt; &gt;&gt; charge partial hugepages.</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; Round the hugetlb_cgroup limit down to hugepage size.</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; Signed-off-by: David Rientjes &lt;rientjes@google.com&gt;</span>
<span class="quote">&gt; &gt;&gt; ---</span>
<span class="quote">&gt; &gt;&gt;  mm/hugetlb_cgroup.c | 1 +</span>
<span class="quote">&gt; &gt;&gt;  1 file changed, 1 insertion(+)</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; diff --git a/mm/hugetlb_cgroup.c b/mm/hugetlb_cgroup.c</span>
<span class="quote">&gt; &gt;&gt; --- a/mm/hugetlb_cgroup.c</span>
<span class="quote">&gt; &gt;&gt; +++ b/mm/hugetlb_cgroup.c</span>
<span class="quote">&gt; &gt;&gt; @@ -288,6 +288,7 @@ static ssize_t hugetlb_cgroup_write(struct kernfs_open_file *of,</span>
<span class="quote">&gt; &gt;&gt;  </span>
<span class="quote">&gt; &gt;&gt;  	switch (MEMFILE_ATTR(of_cft(of)-&gt;private)) {</span>
<span class="quote">&gt; &gt;&gt;  	case RES_LIMIT:</span>
<span class="quote">&gt; &gt;&gt; +		nr_pages &amp;= ~((1 &lt;&lt; huge_page_order(&amp;hstates[idx])) - 1);</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Why not:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; nr_pages = round_down(nr_pages, huge_page_order(&amp;hstates[idx]));</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Oops, that should be:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; round_down(nr_pages, 1 &lt;&lt; huge_page_order(&amp;hstates[idx]));</span>

round_down is a bit nicer.

Anyway
<span class="acked-by">Acked-by: Michal Hocko &lt;mhocko@suse.com&gt;</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/hugetlb_cgroup.c b/mm/hugetlb_cgroup.c</span>
<span class="p_header">--- a/mm/hugetlb_cgroup.c</span>
<span class="p_header">+++ b/mm/hugetlb_cgroup.c</span>
<span class="p_chunk">@@ -288,6 +288,7 @@</span> <span class="p_context"> static ssize_t hugetlb_cgroup_write(struct kernfs_open_file *of,</span>
 
 	switch (MEMFILE_ATTR(of_cft(of)-&gt;private)) {
 	case RES_LIMIT:
<span class="p_add">+		nr_pages &amp;= ~((1 &lt;&lt; huge_page_order(&amp;hstates[idx])) - 1);</span>
 		mutex_lock(&amp;hugetlb_limit_mutex);
 		ret = page_counter_limit(&amp;h_cg-&gt;hugepage[idx], nr_pages);
 		mutex_unlock(&amp;hugetlb_limit_mutex);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



