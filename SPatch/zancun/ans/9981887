
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC] mm, hugetlb: drop hugepages_treat_as_movable sysctl - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC] mm, hugetlb: drop hugepages_treat_as_movable sysctl</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=137061">Michal Hocko</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 3, 2017, 7:26 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171003072619.8654-1-mhocko@kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9981887/mbox/"
   >mbox</a>
|
   <a href="/patch/9981887/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9981887/">/patch/9981887/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	782C560291 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  3 Oct 2017 07:26:34 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 69CA5286DB
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  3 Oct 2017 07:26:34 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 5E4BC28848; Tue,  3 Oct 2017 07:26:34 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.4 required=2.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RCVD_IN_SORBS_SPAM autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D0867286DB
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  3 Oct 2017 07:26:33 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751146AbdJCH0b (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 3 Oct 2017 03:26:31 -0400
Received: from mail-wr0-f193.google.com ([209.85.128.193]:32958 &quot;EHLO
	mail-wr0-f193.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751059AbdJCH03 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 3 Oct 2017 03:26:29 -0400
Received: by mail-wr0-f193.google.com with SMTP id z96so4038747wrb.0;
	Tue, 03 Oct 2017 00:26:29 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id;
	bh=K77F9xXRrxxEVqrNaiwfTIVW3mcAzvYhP5EEQZM3Y5U=;
	b=Ge8d8YlkTG5DWmNiodc3juRv5Mvsv7YgjFX4hzwcAjyoXlz2jJKye+HTwKXowUV0RA
	6C/fb9rVvY/aZN+aY7GOBh7YvdO0iTWbuuaYvhLGbpLbtroZO96Ie4mMYKviSkvPaZk0
	s66yxtLDwGeO8YFCePe7pF4NAIQGQVVDmy4qmJ9OAtNaTVzFf5wDe27W4F+fS+eUGaot
	75ksbO18YUFDwraw7/Qim7rZd4RyByRaf7sVCrIwzKF1uwIACpSZpSXOW0NIs2FLvFK1
	0l/x/Bc5ku8CAf+2bzvAD18iKTFhuzJjQ1T7GF/Ow7jzhEzGXFfGMt6W1a41dORUFlcq
	FH+g==
X-Gm-Message-State: AHPjjUhgNE8qXFkJCxo3mXlDklTQuQh4/ei8RcbkevZ8xrMIu9PzOnS5
	NN+qnHcJ82iQMN+PpOFhh4Q=
X-Google-Smtp-Source: AOwi7QA5sJRHyDwwl38YOeVhzE6q0Ddd1wsOcjhJO1+Ehnsmd7MRBBhA3imfOgHKqqfFUftLudAzsw==
X-Received: by 10.223.197.132 with SMTP id m4mr17132194wrg.37.1507015588178; 
	Tue, 03 Oct 2017 00:26:28 -0700 (PDT)
Received: from tiehlicka.suse.cz (prg-ext-pat.suse.com. [213.151.95.130])
	by smtp.gmail.com with ESMTPSA id
	69sm16107757wmp.11.2017.10.03.00.26.26
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Tue, 03 Oct 2017 00:26:27 -0700 (PDT)
From: Michal Hocko &lt;mhocko@kernel.org&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Mel Gorman &lt;mgorman@suse.de&gt;,
	Alexandru Moise &lt;00moses.alexander00@gmail.com&gt;,
	Mike Kravetz &lt;mike.kravetz@oracle.com&gt;, &lt;linux-mm@kvack.org&gt;,
	LKML &lt;linux-kernel@vger.kernel.org&gt;, linux-api@vger.kernel.org,
	Michal Hocko &lt;mhocko@suse.com&gt;
Subject: [RFC PATCH] mm, hugetlb: drop hugepages_treat_as_movable sysctl
Date: Tue,  3 Oct 2017 09:26:19 +0200
Message-Id: &lt;20171003072619.8654-1-mhocko@kernel.org&gt;
X-Mailer: git-send-email 2.14.2
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137061">Michal Hocko</a> - Oct. 3, 2017, 7:26 a.m.</div>
<pre class="content">
<span class="from">From: Michal Hocko &lt;mhocko@suse.com&gt;</span>

hugepages_treat_as_movable has been introduced by 396faf0303d2 (&quot;Allow
huge page allocations to use GFP_HIGH_MOVABLE&quot;) to allow hugetlb
allocations from ZONE_MOVABLE even when hugetlb pages were not
migrateable. The purpose of the movable zone was different at the time.
It aimed at reducing memory fragmentation and hugetlb pages being long
lived and large werre not contributing to the fragmentation so it was
acceptable to use the zone back then.

Things have changed though and the primary purpose of the zone became
migratability guarantee. If we allow non migrateable hugetlb pages to
be in ZONE_MOVABLE memory hotplug might fail to offline the memory.

Remove the knob and only rely on hugepage_migration_supported to allow
movable zones.
<span class="signed-off-by">
Signed-off-by: Michal Hocko &lt;mhocko@suse.com&gt;</span>
---

Hi,
Alexandru Moise has noticed that hugepages_treat_as_movable has a weird
semantic [1] and tried to fix it. I think that the sysctl is a relict
which should go away finaly because assumptions which it was based on
no longer hold.

What do you think?

[1] http://lkml.kernel.org/r/20171001225111.GA16432@gmail.com

 Documentation/sysctl/vm.txt | 25 -------------------------
 include/linux/hugetlb.h     |  1 -
 kernel/sysctl.c             |  7 -------
 mm/hugetlb.c                |  4 +---
 4 files changed, 1 insertion(+), 36 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=24451">Mel Gorman</a> - Oct. 3, 2017, 7:53 a.m.</div>
<pre class="content">
On Tue, Oct 03, 2017 at 09:26:19AM +0200, Michal Hocko wrote:
<span class="quote">&gt; From: Michal Hocko &lt;mhocko@suse.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; hugepages_treat_as_movable has been introduced by 396faf0303d2 (&quot;Allow</span>
<span class="quote">&gt; huge page allocations to use GFP_HIGH_MOVABLE&quot;) to allow hugetlb</span>
<span class="quote">&gt; allocations from ZONE_MOVABLE even when hugetlb pages were not</span>
<span class="quote">&gt; migrateable. The purpose of the movable zone was different at the time.</span>
<span class="quote">&gt; It aimed at reducing memory fragmentation and hugetlb pages being long</span>
<span class="quote">&gt; lived and large werre not contributing to the fragmentation so it was</span>
<span class="quote">&gt; acceptable to use the zone back then.</span>
<span class="quote">&gt; </span>

Well, primarily it was aimed at allowing the hugetlb pool to safely shrink
with the ability to grow it again. The use case was for batched jobs,
some of which needed huge pages and others that did not but didn&#39;t want
the memory useless pinned in the huge pages pool.
<span class="quote">
&gt; Things have changed though and the primary purpose of the zone became</span>
<span class="quote">&gt; migratability guarantee. If we allow non migrateable hugetlb pages to</span>
<span class="quote">&gt; be in ZONE_MOVABLE memory hotplug might fail to offline the memory.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Remove the knob and only rely on hugepage_migration_supported to allow</span>
<span class="quote">&gt; movable zones.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Michal Hocko &lt;mhocko@suse.com&gt;</span>

I suspect that more users rely on THP than hugetlbfs for flexible use
of huge pages with fallback options so I think that removing the option
should be ok.
<span class="acked-by">
Acked-by: Mel Gorman &lt;mgorman@suse.de&gt;</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/Documentation/sysctl/vm.txt b/Documentation/sysctl/vm.txt</span>
<span class="p_header">index 0752430d4562..44a6c7f226f5 100644</span>
<span class="p_header">--- a/Documentation/sysctl/vm.txt</span>
<span class="p_header">+++ b/Documentation/sysctl/vm.txt</span>
<span class="p_chunk">@@ -30,7 +30,6 @@</span> <span class="p_context"> files can be found in mm/swap.c.</span>
 - dirty_writeback_centisecs
 - drop_caches
 - extfrag_threshold
<span class="p_del">-- hugepages_treat_as_movable</span>
 - hugetlb_shm_group
 - laptop_mode
 - legacy_va_layout
<span class="p_chunk">@@ -268,30 +267,6 @@</span> <span class="p_context"> any throttling.</span>
 
 ==============================================================
 
<span class="p_del">-hugepages_treat_as_movable</span>
<span class="p_del">-</span>
<span class="p_del">-This parameter controls whether we can allocate hugepages from ZONE_MOVABLE</span>
<span class="p_del">-or not. If set to non-zero, hugepages can be allocated from ZONE_MOVABLE.</span>
<span class="p_del">-ZONE_MOVABLE is created when kernel boot parameter kernelcore= is specified,</span>
<span class="p_del">-so this parameter has no effect if used without kernelcore=.</span>
<span class="p_del">-</span>
<span class="p_del">-Hugepage migration is now available in some situations which depend on the</span>
<span class="p_del">-architecture and/or the hugepage size. If a hugepage supports migration,</span>
<span class="p_del">-allocation from ZONE_MOVABLE is always enabled for the hugepage regardless</span>
<span class="p_del">-of the value of this parameter.</span>
<span class="p_del">-IOW, this parameter affects only non-migratable hugepages.</span>
<span class="p_del">-</span>
<span class="p_del">-Assuming that hugepages are not migratable in your system, one usecase of</span>
<span class="p_del">-this parameter is that users can make hugepage pool more extensible by</span>
<span class="p_del">-enabling the allocation from ZONE_MOVABLE. This is because on ZONE_MOVABLE</span>
<span class="p_del">-page reclaim/migration/compaction work more and you can get contiguous</span>
<span class="p_del">-memory more likely. Note that using ZONE_MOVABLE for non-migratable</span>
<span class="p_del">-hugepages can do harm to other features like memory hotremove (because</span>
<span class="p_del">-memory hotremove expects that memory blocks on ZONE_MOVABLE are always</span>
<span class="p_del">-removable,) so it&#39;s a trade-off responsible for the users.</span>
<span class="p_del">-</span>
<span class="p_del">-==============================================================</span>
<span class="p_del">-</span>
 hugetlb_shm_group
 
 hugetlb_shm_group contains group id that is allowed to create SysV
<span class="p_header">diff --git a/include/linux/hugetlb.h b/include/linux/hugetlb.h</span>
<span class="p_header">index 19a3ed54a1b7..c78654421e7d 100644</span>
<span class="p_header">--- a/include/linux/hugetlb.h</span>
<span class="p_header">+++ b/include/linux/hugetlb.h</span>
<span class="p_chunk">@@ -128,7 +128,6 @@</span> <span class="p_context"> u32 hugetlb_fault_mutex_hash(struct hstate *h, struct mm_struct *mm,</span>
 
 pte_t *huge_pmd_share(struct mm_struct *mm, unsigned long addr, pud_t *pud);
 
<span class="p_del">-extern int hugepages_treat_as_movable;</span>
 extern int sysctl_hugetlb_shm_group;
 extern struct list_head huge_boot_pages;
 
<span class="p_header">diff --git a/kernel/sysctl.c b/kernel/sysctl.c</span>
<span class="p_header">index c848c3652472..50c813ef1747 100644</span>
<span class="p_header">--- a/kernel/sysctl.c</span>
<span class="p_header">+++ b/kernel/sysctl.c</span>
<span class="p_chunk">@@ -1389,13 +1389,6 @@</span> <span class="p_context"> static struct ctl_table vm_table[] = {</span>
 		.mode		= 0644,
 		.proc_handler	= proc_dointvec,
 	 },
<span class="p_del">-	 {</span>
<span class="p_del">-		.procname	= &quot;hugepages_treat_as_movable&quot;,</span>
<span class="p_del">-		.data		= &amp;hugepages_treat_as_movable,</span>
<span class="p_del">-		.maxlen		= sizeof(int),</span>
<span class="p_del">-		.mode		= 0644,</span>
<span class="p_del">-		.proc_handler	= proc_dointvec,</span>
<span class="p_del">-	},</span>
 	{
 		.procname	= &quot;nr_overcommit_hugepages&quot;,
 		.data		= NULL,
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 34625b257128..ab7f665b83e6 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -36,8 +36,6 @@</span> <span class="p_context"></span>
 #include &lt;linux/userfaultfd_k.h&gt;
 #include &quot;internal.h&quot;
 
<span class="p_del">-int hugepages_treat_as_movable;</span>
<span class="p_del">-</span>
 int hugetlb_max_hstate __read_mostly;
 unsigned int default_hstate_idx;
 struct hstate hstates[HUGE_MAX_HSTATE];
<span class="p_chunk">@@ -926,7 +924,7 @@</span> <span class="p_context"> static struct page *dequeue_huge_page_nodemask(struct hstate *h, gfp_t gfp_mask,</span>
 /* Movability of hugepages depends on migration support. */
 static inline gfp_t htlb_alloc_mask(struct hstate *h)
 {
<span class="p_del">-	if (hugepages_treat_as_movable || hugepage_migration_supported(h))</span>
<span class="p_add">+	if (hugepage_migration_supported(h))</span>
 		return GFP_HIGHUSER_MOVABLE;
 	else
 		return GFP_HIGHUSER;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



