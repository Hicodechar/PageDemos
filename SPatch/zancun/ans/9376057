
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v6,6/6] mm/cma: remove per zone CMA stat - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v6,6/6] mm/cma: remove per zone CMA stat</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=39721">Joonsoo Kim</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 14, 2016, 3:03 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1476414196-3514-7-git-send-email-iamjoonsoo.kim@lge.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9376057/mbox/"
   >mbox</a>
|
   <a href="/patch/9376057/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9376057/">/patch/9376057/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	CFDFB60839 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 14 Oct 2016 03:04:02 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id BED0F2A193
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 14 Oct 2016 03:04:02 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id B37702A198; Fri, 14 Oct 2016 03:04:02 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, FREEMAIL_FROM,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3F0902A193
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 14 Oct 2016 03:04:02 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1756668AbcJNDD7 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 13 Oct 2016 23:03:59 -0400
Received: from mail-pf0-f195.google.com ([209.85.192.195]:33710 &quot;EHLO
	mail-pf0-f195.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1755365AbcJNDDb (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 13 Oct 2016 23:03:31 -0400
Received: by mail-pf0-f195.google.com with SMTP id i85so2814194pfa.0
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Thu, 13 Oct 2016 20:03:31 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=Z6+E7qe8QNwOJ7m8/0SmICNuZv/RMc+Ubl5ExLOej2c=;
	b=CpTjtd+9mser9jMyn2U0wtD8R0MlqPeTJyPq3ADKKQDLi/qpcczjzoGkd26x7oWwoT
	0fc44AGrFpEenhzQ0X2doCGRhHvBS8gv1i45muZco8bepaufGmQDc5zfhLxQzB+HJf4G
	8YqsEeQDHXGW+t0d5DAUHCoUZPU7Zkjnp2z+/Y+F2CZTDX56Mv1r+lSseDQtsKYWQW9d
	bC3y0bYvZcLZRIkygXIrBPRp7O5sPyjTJJA+Y/cS/1/7W6VdXgnXCXc/VKiR2hh++YRU
	x+D9nMCWHwNXWwPa3a4xGNBpVujyw0B9Arac/ArN143L9ZMlJrNp6yoaJfdpLTdbVv50
	HwAg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20130820;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=Z6+E7qe8QNwOJ7m8/0SmICNuZv/RMc+Ubl5ExLOej2c=;
	b=aN4qG9IMjR2qcFm1qkbr/WYksRQEcOMxh0gl1BdRT1r6xp1qwgsPEp6qJZw4jnKSqH
	BJE9RQhIhYoKYMvSMq0PzomH229WTKysvy0L1Xc551jAc7qjsBDqvm3ICxTPKJI3FcSD
	DQeQPv4Ty8snNPMmiguuyPI6DRGjgqu2DPBd72RAnnuhwuP3LZw8tjH4h9q/3A0TkSaZ
	4hA2K4CicQl4LPYCRDtEo+f8n7ue8Alk0KcZBA0RRafJKt6U5JcfoeB119JNaFqX9Yu4
	z2cGT0ezfHBmy1Kom/a9fMuPi40R7iM1QIPJum0i8b9uQ3JgPaf0xvM/vkk8Q2Jab8G7
	EEPw==
X-Gm-Message-State: AA6/9RllgvvvQjWtkPmZTqio3IOZVqtPmzBc/hHA0xowIz7p4mgihkjspkn/xiyKY1IZIg==
X-Received: by 10.98.55.193 with SMTP id e184mr14703162pfa.11.1476414211139; 
	Thu, 13 Oct 2016 20:03:31 -0700 (PDT)
Received: from localhost.localdomain ([119.69.155.252])
	by smtp.gmail.com with ESMTPSA id
	w65sm22671367pfd.48.2016.10.13.20.03.27
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Thu, 13 Oct 2016 20:03:30 -0700 (PDT)
From: js1304@gmail.com
X-Google-Original-From: iamjoonsoo.kim@lge.com
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Rik van Riel &lt;riel@redhat.com&gt;, Johannes Weiner &lt;hannes@cmpxchg.org&gt;,
	mgorman@techsingularity.net, Laura Abbott &lt;lauraa@codeaurora.org&gt;,
	Minchan Kim &lt;minchan@kernel.org&gt;,
	Marek Szyprowski &lt;m.szyprowski@samsung.com&gt;,
	Michal Nazarewicz &lt;mina86@mina86.com&gt;,
	&quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;,
	Vlastimil Babka &lt;vbabka@suse.cz&gt;, linux-mm@kvack.org,
	linux-kernel@vger.kernel.org, Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;
Subject: [PATCH v6 6/6] mm/cma: remove per zone CMA stat
Date: Fri, 14 Oct 2016 12:03:16 +0900
Message-Id: &lt;1476414196-3514-7-git-send-email-iamjoonsoo.kim@lge.com&gt;
X-Mailer: git-send-email 1.9.1
In-Reply-To: &lt;1476414196-3514-1-git-send-email-iamjoonsoo.kim@lge.com&gt;
References: &lt;1476414196-3514-1-git-send-email-iamjoonsoo.kim@lge.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=39721">Joonsoo Kim</a> - Oct. 14, 2016, 3:03 a.m.</div>
<pre class="content">
<span class="from">From: Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;</span>

Now, all reserved pages for CMA region are belong to the ZONE_CMA
so we don&#39;t need to maintain CMA stat in other zones. Remove it.
<span class="reviewed-by">
Reviewed-by: Aneesh Kumar K.V &lt;aneesh.kumar@linux.vnet.ibm.com&gt;</span>
<span class="acked-by">Acked-by: Vlastimil Babka &lt;vbabka@suse.cz&gt;</span>
<span class="signed-off-by">Signed-off-by: Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;</span>
---
 fs/proc/meminfo.c      |  2 +-
 include/linux/cma.h    |  6 ++++++
 include/linux/mmzone.h |  1 -
 mm/cma.c               | 15 +++++++++++++++
 mm/page_alloc.c        |  7 +++----
 mm/vmstat.c            |  1 -
 6 files changed, 25 insertions(+), 7 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/fs/proc/meminfo.c b/fs/proc/meminfo.c</span>
<span class="p_header">index 8a42849..0ca6f38 100644</span>
<span class="p_header">--- a/fs/proc/meminfo.c</span>
<span class="p_header">+++ b/fs/proc/meminfo.c</span>
<span class="p_chunk">@@ -151,7 +151,7 @@</span> <span class="p_context"> static int meminfo_proc_show(struct seq_file *m, void *v)</span>
 #ifdef CONFIG_CMA
 	show_val_kb(m, &quot;CmaTotal:       &quot;, totalcma_pages);
 	show_val_kb(m, &quot;CmaFree:        &quot;,
<span class="p_del">-		    global_page_state(NR_FREE_CMA_PAGES));</span>
<span class="p_add">+		    cma_get_free());</span>
 #endif
 
 	hugetlb_report_meminfo(m);
<span class="p_header">diff --git a/include/linux/cma.h b/include/linux/cma.h</span>
<span class="p_header">index 29f9e77..816290c 100644</span>
<span class="p_header">--- a/include/linux/cma.h</span>
<span class="p_header">+++ b/include/linux/cma.h</span>
<span class="p_chunk">@@ -28,4 +28,10 @@</span> <span class="p_context"> extern int cma_init_reserved_mem(phys_addr_t base, phys_addr_t size,</span>
 					struct cma **res_cma);
 extern struct page *cma_alloc(struct cma *cma, size_t count, unsigned int align);
 extern bool cma_release(struct cma *cma, const struct page *pages, unsigned int count);
<span class="p_add">+</span>
<span class="p_add">+#ifdef CONFIG_CMA</span>
<span class="p_add">+extern unsigned long cma_get_free(void);</span>
<span class="p_add">+#else</span>
<span class="p_add">+static inline unsigned long cma_get_free(void) { return 0; }</span>
<span class="p_add">+#endif</span>
 #endif
<span class="p_header">diff --git a/include/linux/mmzone.h b/include/linux/mmzone.h</span>
<span class="p_header">index dd37da9..f5cd27a4 100644</span>
<span class="p_header">--- a/include/linux/mmzone.h</span>
<span class="p_header">+++ b/include/linux/mmzone.h</span>
<span class="p_chunk">@@ -113,7 +113,6 @@</span> <span class="p_context"> enum zone_stat_item {</span>
 	NUMA_LOCAL,		/* allocation from local node */
 	NUMA_OTHER,		/* allocation from other node */
 #endif
<span class="p_del">-	NR_FREE_CMA_PAGES,</span>
 	NR_VM_ZONE_STAT_ITEMS };
 
 enum node_stat_item {
<span class="p_header">diff --git a/mm/cma.c b/mm/cma.c</span>
<span class="p_header">index adc2785..cd869d7 100644</span>
<span class="p_header">--- a/mm/cma.c</span>
<span class="p_header">+++ b/mm/cma.c</span>
<span class="p_chunk">@@ -54,6 +54,21 @@</span> <span class="p_context"> unsigned long cma_get_size(const struct cma *cma)</span>
 	return cma-&gt;count &lt;&lt; PAGE_SHIFT;
 }
 
<span class="p_add">+unsigned long cma_get_free(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct zone *zone;</span>
<span class="p_add">+	unsigned long freecma = 0;</span>
<span class="p_add">+</span>
<span class="p_add">+	for_each_populated_zone(zone) {</span>
<span class="p_add">+		if (!is_zone_cma(zone))</span>
<span class="p_add">+			continue;</span>
<span class="p_add">+</span>
<span class="p_add">+		freecma += zone_page_state(zone, NR_FREE_PAGES);</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	return freecma;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static unsigned long cma_bitmap_aligned_mask(const struct cma *cma,
 					     int align_order)
 {
<span class="p_header">diff --git a/mm/page_alloc.c b/mm/page_alloc.c</span>
<span class="p_header">index 6df8533..45a35de 100644</span>
<span class="p_header">--- a/mm/page_alloc.c</span>
<span class="p_header">+++ b/mm/page_alloc.c</span>
<span class="p_chunk">@@ -65,6 +65,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/kthread.h&gt;
 #include &lt;linux/memcontrol.h&gt;
 #include &lt;linux/random.h&gt;
<span class="p_add">+#include &lt;linux/cma.h&gt;</span>
 
 #include &lt;asm/sections.h&gt;
 #include &lt;asm/tlbflush.h&gt;
<span class="p_chunk">@@ -4268,7 +4269,7 @@</span> <span class="p_context"> void show_free_areas(unsigned int filter)</span>
 		global_page_state(NR_BOUNCE),
 		global_page_state(NR_FREE_PAGES),
 		free_pcp,
<span class="p_del">-		global_page_state(NR_FREE_CMA_PAGES));</span>
<span class="p_add">+		cma_get_free());</span>
 
 	for_each_online_pgdat(pgdat) {
 		printk(&quot;Node %d&quot;
<span class="p_chunk">@@ -4349,7 +4350,6 @@</span> <span class="p_context"> void show_free_areas(unsigned int filter)</span>
 			&quot; bounce:%lukB&quot;
 			&quot; free_pcp:%lukB&quot;
 			&quot; local_pcp:%ukB&quot;
<span class="p_del">-			&quot; free_cma:%lukB&quot;</span>
 			&quot;\n&quot;,
 			zone-&gt;name,
 			K(zone_page_state(zone, NR_FREE_PAGES)),
<span class="p_chunk">@@ -4371,8 +4371,7 @@</span> <span class="p_context"> void show_free_areas(unsigned int filter)</span>
 			K(zone_page_state(zone, NR_PAGETABLE)),
 			K(zone_page_state(zone, NR_BOUNCE)),
 			K(free_pcp),
<span class="p_del">-			K(this_cpu_read(zone-&gt;pageset-&gt;pcp.count)),</span>
<span class="p_del">-			K(zone_page_state(zone, NR_FREE_CMA_PAGES)));</span>
<span class="p_add">+			K(this_cpu_read(zone-&gt;pageset-&gt;pcp.count)));</span>
 		printk(&quot;lowmem_reserve[]:&quot;);
 		for (i = 0; i &lt; MAX_NR_ZONES; i++)
 			printk(&quot; %ld&quot;, zone-&gt;lowmem_reserve[i]);
<span class="p_header">diff --git a/mm/vmstat.c b/mm/vmstat.c</span>
<span class="p_header">index 429742f..c1ead13 100644</span>
<span class="p_header">--- a/mm/vmstat.c</span>
<span class="p_header">+++ b/mm/vmstat.c</span>
<span class="p_chunk">@@ -951,7 +951,6 @@</span> <span class="p_context"> int fragmentation_index(struct zone *zone, unsigned int order)</span>
 	&quot;numa_local&quot;,
 	&quot;numa_other&quot;,
 #endif
<span class="p_del">-	&quot;nr_free_cma&quot;,</span>
 
 	/* Node-based counters */
 	&quot;nr_inactive_anon&quot;,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



