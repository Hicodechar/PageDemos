
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[3.16.y-ckt,052/130] MIPS: do_mcheck: Fix kernel code dump with EVA - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [3.16.y-ckt,052/130] MIPS: do_mcheck: Fix kernel code dump with EVA</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=45061">Luis Henriques</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 4, 2015, 1:07 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1441372118-5933-53-git-send-email-luis.henriques@canonical.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7123321/mbox/"
   >mbox</a>
|
   <a href="/patch/7123321/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7123321/">/patch/7123321/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id E1454BEEC1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  4 Sep 2015 13:46:28 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 072422069E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  4 Sep 2015 13:46:28 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id E91752089C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  4 Sep 2015 13:46:26 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1759483AbbIDNpH (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 4 Sep 2015 09:45:07 -0400
Received: from youngberry.canonical.com ([91.189.89.112]:50024 &quot;EHLO
	youngberry.canonical.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932784AbbIDNJ3 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 4 Sep 2015 09:09:29 -0400
Received: from av-217-129-142-138.netvisao.pt ([217.129.142.138]
	helo=localhost) by youngberry.canonical.com with esmtpsa
	(TLS1.0:RSA_AES_128_CBC_SHA1:16) (Exim 4.76)
	(envelope-from &lt;luis.henriques@canonical.com&gt;)
	id 1ZXqkB-0006Uv-Qh; Fri, 04 Sep 2015 13:09:27 +0000
From: Luis Henriques &lt;luis.henriques@canonical.com&gt;
To: linux-kernel@vger.kernel.org, stable@vger.kernel.org,
	kernel-team@lists.ubuntu.com
Cc: James Hogan &lt;james.hogan@imgtec.com&gt;,
	Markos Chandras &lt;markos.chandras@imgtec.com&gt;,
	Leonid Yegoshin &lt;leonid.yegoshin@imgtec.com&gt;,
	linux-mips@linux-mips.org, Ralf Baechle &lt;ralf@linux-mips.org&gt;,
	Luis Henriques &lt;luis.henriques@canonical.com&gt;
Subject: [PATCH 3.16.y-ckt 052/130] MIPS: do_mcheck: Fix kernel code dump
	with EVA
Date: Fri,  4 Sep 2015 14:07:20 +0100
Message-Id: &lt;1441372118-5933-53-git-send-email-luis.henriques@canonical.com&gt;
X-Mailer: git-send-email 2.1.4
In-Reply-To: &lt;1441372118-5933-1-git-send-email-luis.henriques@canonical.com&gt;
References: &lt;1441372118-5933-1-git-send-email-luis.henriques@canonical.com&gt;
X-Extended-Stable: 3.16
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=45061">Luis Henriques</a> - Sept. 4, 2015, 1:07 p.m.</div>
<pre class="content">
3.16.7-ckt17 -stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: James Hogan &lt;james.hogan@imgtec.com&gt;</span>

commit 55c723e181ccec30fb5c672397fe69ec35967d97 upstream.

If a machine check exception is raised in kernel mode, user context,
with EVA enabled, then the do_mcheck handler will attempt to read the
code around the EPC using EVA load instructions, i.e. as if the reads
were from user mode. This will either read random user data if the
process has anything mapped at the same address, or it will cause an
exception which is handled by __get_user, resulting in this output:

 Code: (Bad address in epc)

Fix by setting the current user access mode to kernel if the saved
register context indicates the exception was taken in kernel mode. This
causes __get_user to use normal loads to read the kernel code.
<span class="signed-off-by">
Signed-off-by: James Hogan &lt;james.hogan@imgtec.com&gt;</span>
Cc: Markos Chandras &lt;markos.chandras@imgtec.com&gt;
Cc: Leonid Yegoshin &lt;leonid.yegoshin@imgtec.com&gt;
Cc: linux-mips@linux-mips.org
Patchwork: https://patchwork.linux-mips.org/patch/10777/
<span class="signed-off-by">Signed-off-by: Ralf Baechle &lt;ralf@linux-mips.org&gt;</span>
<span class="signed-off-by">Signed-off-by: Luis Henriques &lt;luis.henriques@canonical.com&gt;</span>
---
 arch/mips/kernel/traps.c | 6 ++++++
 1 file changed, 6 insertions(+)

--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/mips/kernel/traps.c b/arch/mips/kernel/traps.c</span>
<span class="p_header">index c65062a6ff23..a47405caa0b7 100644</span>
<span class="p_header">--- a/arch/mips/kernel/traps.c</span>
<span class="p_header">+++ b/arch/mips/kernel/traps.c</span>
<span class="p_chunk">@@ -1338,6 +1338,7 @@</span> <span class="p_context"> asmlinkage void do_mcheck(struct pt_regs *regs)</span>
 	const int field = 2 * sizeof(unsigned long);
 	int multi_match = regs-&gt;cp0_status &amp; ST0_TS;
 	enum ctx_state prev_state;
<span class="p_add">+	mm_segment_t old_fs = get_fs();</span>
 
 	prev_state = exception_enter();
 	show_regs(regs);
<span class="p_chunk">@@ -1352,8 +1353,13 @@</span> <span class="p_context"> asmlinkage void do_mcheck(struct pt_regs *regs)</span>
 		dump_tlb_all();
 	}
 
<span class="p_add">+	if (!user_mode(regs))</span>
<span class="p_add">+		set_fs(KERNEL_DS);</span>
<span class="p_add">+</span>
 	show_code((unsigned int __user *) regs-&gt;cp0_epc);
 
<span class="p_add">+	set_fs(old_fs);</span>
<span class="p_add">+</span>
 	/*
 	 * Some chips may have other causes of machine check (e.g. SB1
 	 * graduation timer)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



