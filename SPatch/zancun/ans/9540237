
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,3/4] x86, mpx: extend MPX prctl() to pass in size of bounds directory - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,3/4] x86, mpx: extend MPX prctl() to pass in size of bounds directory</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=64071">Dave Hansen</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 26, 2017, 10:40 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170126224009.ECA68304@viggo.jf.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9540237/mbox/"
   >mbox</a>
|
   <a href="/patch/9540237/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9540237/">/patch/9540237/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	030C6601D7 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 26 Jan 2017 22:40:32 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id EBFC127D29
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 26 Jan 2017 22:40:31 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id E0D7A28305; Thu, 26 Jan 2017 22:40:31 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 8F25F27F17
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 26 Jan 2017 22:40:29 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753558AbdAZWkV (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 26 Jan 2017 17:40:21 -0500
Received: from mga02.intel.com ([134.134.136.20]:10475 &quot;EHLO mga02.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752397AbdAZWkP (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 26 Jan 2017 17:40:15 -0500
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
	by orsmga101.jf.intel.com with ESMTP; 26 Jan 2017 14:40:09 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.33,291,1477983600&quot;; d=&quot;scan&#39;208&quot;;a=&quot;813769202&quot;
Received: from viggo.jf.intel.com (HELO localhost.localdomain)
	([10.54.39.121])
	by FMSMGA003.fm.intel.com with ESMTP; 26 Jan 2017 14:40:09 -0800
Subject: [RFC][PATCH 3/4] x86,
	mpx: extend MPX prctl() to pass in size of bounds directory
To: linux-kernel@vger.kernel.org
Cc: linux-mm@kvack.org, x86@kernel.org,
	Dave Hansen &lt;dave.hansen@linux.intel.com&gt;
From: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;
Date: Thu, 26 Jan 2017 14:40:09 -0800
References: &lt;20170126224005.A6BBEF2C@viggo.jf.intel.com&gt;
In-Reply-To: &lt;20170126224005.A6BBEF2C@viggo.jf.intel.com&gt;
Message-Id: &lt;20170126224009.ECA68304@viggo.jf.intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=64071">Dave Hansen</a> - Jan. 26, 2017, 10:40 p.m.</div>
<pre class="content">
The MPX bounds tables are indexed by virtual address.  A larger virtual
address space means that we need larger tables.  But, we need to ensure
that userspace and the kernel agree about the size of these tables.

To do this, we require that userspace pass in the size of the tables
if they want a non-legacy size.  They do this with a previously unused
(required to be 0) argument to the PR_MPX_ENABLE_MANAGEMENT ptctl().

This way, the kernel can make sure that the size of the tables is
consistent with the size of the address space and can return an error
if there is a mismatch.

There are essentially 3 table sizes that matter:
1. 32-bit table sized for a 32-bit address space
2. 64-bit table sized for a 48-bit address space
3. 64-bit table sized for a 57-bit address space

We cover all three of those cases.

FIXME: we also need to ensure that we check the current state of the
larger address space opt-in.  If we&#39;ve opted in to larger address spaces
we can not allow a small bounds directory to be used.  Also, if we&#39;ve
not opted in, we can not allow the larger bounds directory to be used.

---

 b/arch/x86/include/asm/mpx.h       |    5 +++
 b/arch/x86/include/asm/processor.h |    6 ++--
 b/arch/x86/mm/mpx.c                |   54 +++++++++++++++++++++++++++++++++++--
 b/arch/x86/mm/pgtable.c            |    2 -
 b/kernel/sys.c                     |    6 ++--
 5 files changed, 64 insertions(+), 9 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff -puN arch/x86/include/asm/mpx.h~mawa-040-prctl-set-mawa arch/x86/include/asm/mpx.h</span>
<span class="p_header">--- a/arch/x86/include/asm/mpx.h~mawa-040-prctl-set-mawa	2017-01-26 14:31:33.564714660 -0800</span>
<span class="p_header">+++ b/arch/x86/include/asm/mpx.h	2017-01-26 14:31:33.574715109 -0800</span>
<span class="p_chunk">@@ -40,6 +40,11 @@</span> <span class="p_context"></span>
 #define MPX_BD_LEGACY_NR_ENTRIES_64	(1UL&lt;&lt;28)
 
 /*
<span class="p_add">+ * We only support one value for MAWA</span>
<span class="p_add">+ */</span>
<span class="p_add">+#define MPX_MAWA_VALUE		9</span>
<span class="p_add">+</span>
<span class="p_add">+/*</span>
  * The 32-bit directory is 4MB (2^22) in size, and with 4-byte
  * entries it has 2^20 entries.
  */
<span class="p_header">diff -puN arch/x86/include/asm/processor.h~mawa-040-prctl-set-mawa arch/x86/include/asm/processor.h</span>
<span class="p_header">--- a/arch/x86/include/asm/processor.h~mawa-040-prctl-set-mawa	2017-01-26 14:31:33.566714750 -0800</span>
<span class="p_header">+++ b/arch/x86/include/asm/processor.h	2017-01-26 14:31:33.575715154 -0800</span>
<span class="p_chunk">@@ -863,14 +863,14 @@</span> <span class="p_context"> extern int get_tsc_mode(unsigned long ad</span>
 extern int set_tsc_mode(unsigned int val);
 
 /* Register/unregister a process&#39; MPX related resource */
<span class="p_del">-#define MPX_ENABLE_MANAGEMENT()	mpx_enable_management()</span>
<span class="p_add">+#define MPX_ENABLE_MANAGEMENT(bd_size)	mpx_enable_management(bd_size)</span>
 #define MPX_DISABLE_MANAGEMENT()	mpx_disable_management()
 
 #ifdef CONFIG_X86_INTEL_MPX
<span class="p_del">-extern int mpx_enable_management(void);</span>
<span class="p_add">+extern int mpx_enable_management(unsigned long bd_size);</span>
 extern int mpx_disable_management(void);
 #else
<span class="p_del">-static inline int mpx_enable_management(void)</span>
<span class="p_add">+static inline int mpx_enable_management(unsigned long bd_size)</span>
 {
 	return -EINVAL;
 }
<span class="p_header">diff -puN arch/x86/mm/mpx.c~mawa-040-prctl-set-mawa arch/x86/mm/mpx.c</span>
<span class="p_header">--- a/arch/x86/mm/mpx.c~mawa-040-prctl-set-mawa	2017-01-26 14:31:33.567714795 -0800</span>
<span class="p_header">+++ b/arch/x86/mm/mpx.c	2017-01-26 14:31:33.575715154 -0800</span>
<span class="p_chunk">@@ -339,7 +339,54 @@</span> <span class="p_context"> static __user void *mpx_get_bounds_dir(v</span>
 		(bndcsr-&gt;bndcfgu &amp; MPX_BNDCFG_ADDR_MASK);
 }
 
<span class="p_del">-int mpx_enable_management(void)</span>
<span class="p_add">+int mpx_set_mm_bd_size(unsigned long bd_size)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct mm_struct *mm = current-&gt;mm;</span>
<span class="p_add">+</span>
<span class="p_add">+	switch ((unsigned long long)bd_size) {</span>
<span class="p_add">+	case 0:</span>
<span class="p_add">+		/* Legacy call to prctl(): */</span>
<span class="p_add">+		mm-&gt;context.mpx_mawa = 0;</span>
<span class="p_add">+		return 0;</span>
<span class="p_add">+	case MPX_BD_SIZE_BYTES_32:</span>
<span class="p_add">+		/* 32-bit, legacy-sized bounds directory: */</span>
<span class="p_add">+		if (is_64bit_mm(mm))</span>
<span class="p_add">+			return -EINVAL;</span>
<span class="p_add">+		mm-&gt;context.mpx_mawa = 0;</span>
<span class="p_add">+		return 0;</span>
<span class="p_add">+	case MPX_BD_BASE_SIZE_BYTES_64:</span>
<span class="p_add">+		/* 64-bit, legacy-sized bounds directory: */</span>
<span class="p_add">+		if (!is_64bit_mm(mm)</span>
<span class="p_add">+		// FIXME &amp;&amp; ! opted-in to larger address space</span>
<span class="p_add">+		)</span>
<span class="p_add">+			return -EINVAL;</span>
<span class="p_add">+		mm-&gt;context.mpx_mawa = 0;</span>
<span class="p_add">+		return 0;</span>
<span class="p_add">+	case MPX_BD_BASE_SIZE_BYTES_64 &lt;&lt; MPX_MAWA_VALUE:</span>
<span class="p_add">+		/*</span>
<span class="p_add">+		 * Non-legacy call, with larger directory.</span>
<span class="p_add">+		 * Note that there is no 32-bit equivalent for</span>
<span class="p_add">+		 * this case since its address space does not</span>
<span class="p_add">+		 * change sizes.</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		if (!is_64bit_mm(mm))</span>
<span class="p_add">+			return -EINVAL;</span>
<span class="p_add">+		/*</span>
<span class="p_add">+		 * Do not let this be enabled unles we are on</span>
<span class="p_add">+		 * 5-level hardware *and* have that feature</span>
<span class="p_add">+		 * enabled. FIXME: need runtime check</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		if (!cpu_feature_enabled(X86_FEATURE_LA57)</span>
<span class="p_add">+		// FIXME &amp;&amp; opted into larger address space</span>
<span class="p_add">+		)</span>
<span class="p_add">+			return -EINVAL;</span>
<span class="p_add">+		mm-&gt;context.mpx_mawa = MPX_MAWA_VALUE;</span>
<span class="p_add">+		return 0;</span>
<span class="p_add">+	}</span>
<span class="p_add">+	return -EINVAL;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+int mpx_enable_management(unsigned long bd_size)</span>
 {
 	void __user *bd_base = MPX_INVALID_BOUNDS_DIR;
 	struct mm_struct *mm = current-&gt;mm;
<span class="p_chunk">@@ -358,10 +405,13 @@</span> <span class="p_context"> int mpx_enable_management(void)</span>
 	 */
 	bd_base = mpx_get_bounds_dir();
 	down_write(&amp;mm-&gt;mmap_sem);
<span class="p_add">+	ret = mpx_set_mm_bd_size(bd_size);</span>
<span class="p_add">+	if (ret)</span>
<span class="p_add">+		goto out;</span>
 	mm-&gt;context.bd_addr = bd_base;
 	if (mm-&gt;context.bd_addr == MPX_INVALID_BOUNDS_DIR)
 		ret = -ENXIO;
<span class="p_del">-</span>
<span class="p_add">+out:</span>
 	up_write(&amp;mm-&gt;mmap_sem);
 	return ret;
 }
<span class="p_header">diff -puN arch/x86/mm/pgtable.c~mawa-040-prctl-set-mawa arch/x86/mm/pgtable.c</span>
<span class="p_header">--- a/arch/x86/mm/pgtable.c~mawa-040-prctl-set-mawa	2017-01-26 14:31:33.569714885 -0800</span>
<span class="p_header">+++ b/arch/x86/mm/pgtable.c	2017-01-26 14:31:33.575715154 -0800</span>
<span class="p_chunk">@@ -85,7 +85,7 @@</span> <span class="p_context"> void ___pud_free_tlb(struct mmu_gather *</span>
 #if CONFIG_PGTABLE_LEVELS &gt; 4
 void ___p4d_free_tlb(struct mmu_gather *tlb, p4d_t *p4d)
 {
<span class="p_del">-	paravirt_release_p4d(__pa(p4d) &gt;&gt; PAGE_SHIFT);</span>
<span class="p_add">+	//paravirt_release_p4d(__pa(p4d) &gt;&gt; PAGE_SHIFT);</span>
 	tlb_remove_page(tlb, virt_to_page(p4d));
 }
 #endif	/* CONFIG_PGTABLE_LEVELS &gt; 4 */
<span class="p_header">diff -puN kernel/sys.c~mawa-040-prctl-set-mawa kernel/sys.c</span>
<span class="p_header">--- a/kernel/sys.c~mawa-040-prctl-set-mawa	2017-01-26 14:31:33.571714974 -0800</span>
<span class="p_header">+++ b/kernel/sys.c	2017-01-26 14:31:33.576715199 -0800</span>
<span class="p_chunk">@@ -92,7 +92,7 @@</span> <span class="p_context"></span>
 # define SET_TSC_CTL(a)		(-EINVAL)
 #endif
 #ifndef MPX_ENABLE_MANAGEMENT
<span class="p_del">-# define MPX_ENABLE_MANAGEMENT()	(-EINVAL)</span>
<span class="p_add">+# define MPX_ENABLE_MANAGEMENT(bd_size)	(-EINVAL)</span>
 #endif
 #ifndef MPX_DISABLE_MANAGEMENT
 # define MPX_DISABLE_MANAGEMENT()	(-EINVAL)
<span class="p_chunk">@@ -2246,9 +2246,9 @@</span> <span class="p_context"> SYSCALL_DEFINE5(prctl, int, option, unsi</span>
 		up_write(&amp;me-&gt;mm-&gt;mmap_sem);
 		break;
 	case PR_MPX_ENABLE_MANAGEMENT:
<span class="p_del">-		if (arg2 || arg3 || arg4 || arg5)</span>
<span class="p_add">+		if (arg3 || arg4 || arg5)</span>
 			return -EINVAL;
<span class="p_del">-		error = MPX_ENABLE_MANAGEMENT();</span>
<span class="p_add">+		error = MPX_ENABLE_MANAGEMENT(arg2);</span>
 		break;
 	case PR_MPX_DISABLE_MANAGEMENT:
 		if (arg2 || arg3 || arg4 || arg5)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



