
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.14,4/4] powerpc/mm/slice: Fix hugepage allocation at hint address on 8xx - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.14,4/4] powerpc/mm/slice: Fix hugepage allocation at hint address on 8xx</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=11492">LEROY Christophe</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 9, 2018, 3:49 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;2506aa6efe6f3ddf4c8158e708afbb62fb7fff17.1520468013.git.christophe.leroy@c-s.fr&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10271039/mbox/"
   >mbox</a>
|
   <a href="/patch/10271039/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10271039/">/patch/10271039/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	437066016D for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  9 Mar 2018 15:49:18 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 2BD4128C77
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  9 Mar 2018 15:49:18 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 207D129E88; Fri,  9 Mar 2018 15:49:18 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6974C28C77
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  9 Mar 2018 15:49:17 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932242AbeCIPtN (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 9 Mar 2018 10:49:13 -0500
Received: from pegase1.c-s.fr ([93.17.236.30]:49550 &quot;EHLO pegase1.c-s.fr&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S932084AbeCIPtH (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 9 Mar 2018 10:49:07 -0500
Received: from localhost (mailhub1-int [192.168.12.234])
	by localhost (Postfix) with ESMTP id 3zyWyB3kZ5z9tvmZ;
	Fri,  9 Mar 2018 16:48:50 +0100 (CET)
X-Virus-Scanned: Debian amavisd-new at c-s.fr
Received: from pegase1.c-s.fr ([192.168.12.234])
	by localhost (pegase1.c-s.fr [192.168.12.234]) (amavisd-new,
	port 10024)
	with ESMTP id T0PdkBBWA-tF; Fri,  9 Mar 2018 16:48:50 +0100 (CET)
Received: from messagerie.si.c-s.fr (messagerie.si.c-s.fr [192.168.25.192])
	by pegase1.c-s.fr (Postfix) with ESMTP id 3zyWyB37xtz9tvlj;
	Fri,  9 Mar 2018 16:48:50 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by messagerie.si.c-s.fr (Postfix) with ESMTP id 1236F8BB6B;
	Fri,  9 Mar 2018 16:49:06 +0100 (CET)
X-Virus-Scanned: amavisd-new at c-s.fr
Received: from messagerie.si.c-s.fr ([127.0.0.1])
	by localhost (messagerie.si.c-s.fr [127.0.0.1]) (amavisd-new,
	port 10023)
	with ESMTP id RVDkFU4mo1I0; Fri,  9 Mar 2018 16:49:05 +0100 (CET)
Received: from po15720vm.idsi0.si.c-s.fr (po15451.idsi0.si.c-s.fr
	[172.25.231.30])
	by messagerie.si.c-s.fr (Postfix) with ESMTP id D63ED8BB5E;
	Fri,  9 Mar 2018 16:49:05 +0100 (CET)
Received: by po15720vm.idsi0.si.c-s.fr (Postfix, from userid 0)
	id C8B8A67B75; Fri,  9 Mar 2018 16:49:05 +0100 (CET)
Message-Id: &lt;2506aa6efe6f3ddf4c8158e708afbb62fb7fff17.1520468013.git.christophe.leroy@c-s.fr&gt;
In-Reply-To: &lt;69684e92a32d00c491540e8adfa34fcb50c36244.1520468013.git.christophe.leroy@c-s.fr&gt;
References: &lt;69684e92a32d00c491540e8adfa34fcb50c36244.1520468013.git.christophe.leroy@c-s.fr&gt;
From: Christophe Leroy &lt;christophe.leroy@c-s.fr&gt;
Subject: [PATCH 4.14 4/4] powerpc/mm/slice: Fix hugepage allocation at hint
	address on 8xx
To: stable@vger.kernel.org, Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
Cc: linux-kernel@vger.kernel.org, linuxppc-dev@lists.ozlabs.org
Date: Fri,  9 Mar 2018 16:49:05 +0100 (CET)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=11492">LEROY Christophe</a> - March 9, 2018, 3:49 p.m.</div>
<pre class="content">
Upstream aa0ab02ba992eb956934b21373e0138211486ddd

On the 8xx, the page size is set in the PMD entry and applies to
all pages of the page table pointed by the said PMD entry.

When an app has some regular pages allocated (e.g. see below) and tries
to mmap() a huge page at a hint address covered by the same PMD entry,
the kernel accepts the hint allthough the 8xx cannot handle different
page sizes in the same PMD entry.

10000000-10001000 r-xp 00000000 00:0f 2597 /root/malloc
10010000-10011000 rwxp 00000000 00:0f 2597 /root/malloc

mmap(0x10080000, 524288, PROT_READ|PROT_WRITE,
     MAP_PRIVATE|MAP_ANONYMOUS|0x40000, -1, 0) = 0x10080000

This results the app remaining forever in do_page_fault()/hugetlb_fault()
and when interrupting that app, we get the following warning:

[162980.035629] WARNING: CPU: 0 PID: 2777 at arch/powerpc/mm/hugetlbpage.c:354 hugetlb_free_pgd_range+0xc8/0x1e4
[162980.035699] CPU: 0 PID: 2777 Comm: malloc Tainted: G W       4.14.6 #85
[162980.035744] task: c67e2c00 task.stack: c668e000
[162980.035783] NIP:  c000fe18 LR: c00e1eec CTR: c00f90c0
[162980.035830] REGS: c668fc20 TRAP: 0700   Tainted: G W        (4.14.6)
[162980.035854] MSR:  00029032 &lt;EE,ME,IR,DR,RI&gt;  CR: 24044224 XER: 20000000
[162980.036003]
[162980.036003] GPR00: c00e1eec c668fcd0 c67e2c00 00000010 c6869410 10080000 00000000 77fb4000
[162980.036003] GPR08: ffff0001 0683c001 00000000 ffffff80 44028228 10018a34 00004008 418004fc
[162980.036003] GPR16: c668e000 00040100 c668e000 c06c0000 c668fe78 c668e000 c6835ba0 c668fd48
[162980.036003] GPR24: 00000000 73ffffff 74000000 00000001 77fb4000 100fffff 10100000 10100000
[162980.036743] NIP [c000fe18] hugetlb_free_pgd_range+0xc8/0x1e4
[162980.036839] LR [c00e1eec] free_pgtables+0x12c/0x150
[162980.036861] Call Trace:
[162980.036939] [c668fcd0] [c00f0774] unlink_anon_vmas+0x1c4/0x214 (unreliable)
[162980.037040] [c668fd10] [c00e1eec] free_pgtables+0x12c/0x150
[162980.037118] [c668fd40] [c00eabac] exit_mmap+0xe8/0x1b4
[162980.037210] [c668fda0] [c0019710] mmput.part.9+0x20/0xd8
[162980.037301] [c668fdb0] [c001ecb0] do_exit+0x1f0/0x93c
[162980.037386] [c668fe00] [c001f478] do_group_exit+0x40/0xcc
[162980.037479] [c668fe10] [c002a76c] get_signal+0x47c/0x614
[162980.037570] [c668fe70] [c0007840] do_signal+0x54/0x244
[162980.037654] [c668ff30] [c0007ae8] do_notify_resume+0x34/0x88
[162980.037744] [c668ff40] [c000dae8] do_user_signal+0x74/0xc4
[162980.037781] Instruction dump:
[162980.037821] 7fdff378 81370000 54a3463a 80890020 7d24182e 7c841a14 712a0004 4082ff94
[162980.038014] 2f890000 419e0010 712a0ff0 408200e0 &lt;0fe00000&gt; 54a9000a 7f984840 419d0094
[162980.038216] ---[ end trace c0ceeca8e7a5800a ]---
[162980.038754] BUG: non-zero nr_ptes on freeing mm: 1
[162985.363322] BUG: non-zero nr_ptes on freeing mm: -1

In order to fix this, this patch uses the address space &quot;slices&quot;
implemented for BOOK3S/64 and enhanced to support PPC32 by the
preceding patch.

This patch modifies the context.id on the 8xx to be in the range
[1:16] instead of [0:15] in order to identify context.id == 0 as
not initialised contexts as done on BOOK3S

This patch activates CONFIG_PPC_MM_SLICES when CONFIG_HUGETLB_PAGE is
selected for the 8xx

Alltough we could in theory have as many slices as PMD entries, the
current slices implementation limits the number of low slices to 16.
This limitation is not preventing us to fix the initial issue allthough
it is suboptimal. It will be cured in a subsequent patch.

Fixes: 4b91428699477 (&quot;powerpc/8xx: Implement support of hugepages&quot;)
<span class="signed-off-by">Signed-off-by: Christophe Leroy &lt;christophe.leroy@c-s.fr&gt;</span>
<span class="reviewed-by">Reviewed-by: Aneesh Kumar K.V &lt;aneesh.kumar@linux.vnet.ibm.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Michael Ellerman &lt;mpe@ellerman.id.au&gt;</span>
---
 arch/powerpc/include/asm/mmu-8xx.h     |  6 ++++++
 arch/powerpc/kernel/setup-common.c     |  2 ++
 arch/powerpc/mm/8xx_mmu.c              |  2 +-
 arch/powerpc/mm/hugetlbpage.c          |  2 ++
 arch/powerpc/mm/mmu_context_nohash.c   | 18 ++++++++++++++++--
 arch/powerpc/platforms/Kconfig.cputype |  1 +
 6 files changed, 28 insertions(+), 3 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/powerpc/include/asm/mmu-8xx.h b/arch/powerpc/include/asm/mmu-8xx.h</span>
<span class="p_header">index 5bb3dbede41a..1325e5b5f680 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/mmu-8xx.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/mmu-8xx.h</span>
<span class="p_chunk">@@ -169,6 +169,12 @@</span> <span class="p_context"> typedef struct {</span>
 	unsigned int id;
 	unsigned int active;
 	unsigned long vdso_base;
<span class="p_add">+#ifdef CONFIG_PPC_MM_SLICES</span>
<span class="p_add">+	u16 user_psize;		/* page size index */</span>
<span class="p_add">+	u64 low_slices_psize;	/* page size encodings */</span>
<span class="p_add">+	unsigned char high_slices_psize[0];</span>
<span class="p_add">+	unsigned long addr_limit;</span>
<span class="p_add">+#endif</span>
 } mm_context_t;
 
 #define PHYS_IMMR_BASE (mfspr(SPRN_IMMR) &amp; 0xfff80000)
<span class="p_header">diff --git a/arch/powerpc/kernel/setup-common.c b/arch/powerpc/kernel/setup-common.c</span>
<span class="p_header">index 2e3bc16d02b2..ddf62a690c23 100644</span>
<span class="p_header">--- a/arch/powerpc/kernel/setup-common.c</span>
<span class="p_header">+++ b/arch/powerpc/kernel/setup-common.c</span>
<span class="p_chunk">@@ -899,6 +899,8 @@</span> <span class="p_context"> void __init setup_arch(char **cmdline_p)</span>
 #ifdef CONFIG_PPC_MM_SLICES
 #ifdef CONFIG_PPC64
 	init_mm.context.addr_limit = DEFAULT_MAP_WINDOW_USER64;
<span class="p_add">+#elif defined(CONFIG_PPC_8xx)</span>
<span class="p_add">+	init_mm.context.addr_limit = DEFAULT_MAP_WINDOW;</span>
 #else
 #error	&quot;context.addr_limit not initialized.&quot;
 #endif
<span class="p_header">diff --git a/arch/powerpc/mm/8xx_mmu.c b/arch/powerpc/mm/8xx_mmu.c</span>
<span class="p_header">index f29212e40f40..0be77709446c 100644</span>
<span class="p_header">--- a/arch/powerpc/mm/8xx_mmu.c</span>
<span class="p_header">+++ b/arch/powerpc/mm/8xx_mmu.c</span>
<span class="p_chunk">@@ -192,7 +192,7 @@</span> <span class="p_context"> void set_context(unsigned long id, pgd_t *pgd)</span>
 	mtspr(SPRN_M_TW, __pa(pgd) - offset);
 
 	/* Update context */
<span class="p_del">-	mtspr(SPRN_M_CASID, id);</span>
<span class="p_add">+	mtspr(SPRN_M_CASID, id - 1);</span>
 	/* sync */
 	mb();
 }
<span class="p_header">diff --git a/arch/powerpc/mm/hugetlbpage.c b/arch/powerpc/mm/hugetlbpage.c</span>
<span class="p_header">index 1571a498a33f..4c9e5f9c7a44 100644</span>
<span class="p_header">--- a/arch/powerpc/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/powerpc/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -552,9 +552,11 @@</span> <span class="p_context"> unsigned long hugetlb_get_unmapped_area(struct file *file, unsigned long addr,</span>
 	struct hstate *hstate = hstate_file(file);
 	int mmu_psize = shift_to_mmu_psize(huge_page_shift(hstate));
 
<span class="p_add">+#ifdef CONFIG_PPC_RADIX_MMU</span>
 	if (radix_enabled())
 		return radix__hugetlb_get_unmapped_area(file, addr, len,
 						       pgoff, flags);
<span class="p_add">+#endif</span>
 	return slice_get_unmapped_area(addr, len, flags, mmu_psize, 1);
 }
 #endif
<span class="p_header">diff --git a/arch/powerpc/mm/mmu_context_nohash.c b/arch/powerpc/mm/mmu_context_nohash.c</span>
<span class="p_header">index 4554d6527682..e2b28b3a512e 100644</span>
<span class="p_header">--- a/arch/powerpc/mm/mmu_context_nohash.c</span>
<span class="p_header">+++ b/arch/powerpc/mm/mmu_context_nohash.c</span>
<span class="p_chunk">@@ -331,6 +331,20 @@</span> <span class="p_context"> int init_new_context(struct task_struct *t, struct mm_struct *mm)</span>
 {
 	pr_hard(&quot;initing context for mm @%p\n&quot;, mm);
 
<span class="p_add">+#ifdef	CONFIG_PPC_MM_SLICES</span>
<span class="p_add">+	if (!mm-&gt;context.addr_limit)</span>
<span class="p_add">+		mm-&gt;context.addr_limit = DEFAULT_MAP_WINDOW;</span>
<span class="p_add">+</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * We have MMU_NO_CONTEXT set to be ~0. Hence check</span>
<span class="p_add">+	 * explicitly against context.id == 0. This ensures that we properly</span>
<span class="p_add">+	 * initialize context slice details for newly allocated mm&#39;s (which will</span>
<span class="p_add">+	 * have id == 0) and don&#39;t alter context slice inherited via fork (which</span>
<span class="p_add">+	 * will have id != 0).</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	if (mm-&gt;context.id == 0)</span>
<span class="p_add">+		slice_set_user_psize(mm, mmu_virtual_psize);</span>
<span class="p_add">+#endif</span>
 	mm-&gt;context.id = MMU_NO_CONTEXT;
 	mm-&gt;context.active = 0;
 	return 0;
<span class="p_chunk">@@ -428,8 +442,8 @@</span> <span class="p_context"> void __init mmu_context_init(void)</span>
 	 *      -- BenH
 	 */
 	if (mmu_has_feature(MMU_FTR_TYPE_8xx)) {
<span class="p_del">-		first_context = 0;</span>
<span class="p_del">-		last_context = 15;</span>
<span class="p_add">+		first_context = 1;</span>
<span class="p_add">+		last_context = 16;</span>
 		no_selective_tlbil = true;
 	} else if (mmu_has_feature(MMU_FTR_TYPE_47x)) {
 		first_context = 1;
<span class="p_header">diff --git a/arch/powerpc/platforms/Kconfig.cputype b/arch/powerpc/platforms/Kconfig.cputype</span>
<span class="p_header">index a78f255111f2..3ce376b42330 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/Kconfig.cputype</span>
<span class="p_header">+++ b/arch/powerpc/platforms/Kconfig.cputype</span>
<span class="p_chunk">@@ -325,6 +325,7 @@</span> <span class="p_context"> config PPC_BOOK3E_MMU</span>
 config PPC_MM_SLICES
 	bool
 	default y if PPC_STD_MMU_64
<span class="p_add">+	default y if PPC_8xx &amp;&amp; HUGETLB_PAGE</span>
 	default n
 
 config PPC_HAVE_PMU_SUPPORT

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



