
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>linux-next: build failure after merge of the akpm-current tree - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    linux-next: build failure after merge of the akpm-current tree</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=79">Stephen Rothwell</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 11, 2017, 5:05 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171211160554.00c79749@canb.auug.org.au&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10104167/mbox/"
   >mbox</a>
|
   <a href="/patch/10104167/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10104167/">/patch/10104167/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	3F461602B3 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 11 Dec 2017 05:06:11 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E3CFC29363
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 11 Dec 2017 05:06:10 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D876029367; Mon, 11 Dec 2017 05:06:10 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 31A9229363
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 11 Dec 2017 05:06:10 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751663AbdLKFGB (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 11 Dec 2017 00:06:01 -0500
Received: from ozlabs.org ([103.22.144.67]:41769 &quot;EHLO ozlabs.org&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751274AbdLKFF5 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 11 Dec 2017 00:05:57 -0500
Received: from authenticated.ozlabs.org (localhost [127.0.0.1])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256
	bits)) (No client certificate requested)
	by ozlabs.org (Postfix) with ESMTPSA id 3yw9rz297tz9s7F;
	Mon, 11 Dec 2017 16:05:55 +1100 (AEDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=canb.auug.org.au;
	s=201702; t=1512968755;
	bh=uDQp0j0aJwnWyuEF+OHaeueAa6FzB+teqjJ3G5ttG4I=;
	h=Date:From:To:Cc:Subject:From;
	b=cGct6FvmPd4mWRMVtSj/W2l/QuA1B6OUUDvAD1OIEQW4yojRVJPJ1Iqss+AJBzLon
	HogOsbGuviwRfdK4QHt7Kca9E8VNRZEU+FVK/8bi0vOktFxmNgurM+xACmq5zrrT9B
	LCcCCBGyOX5TazTGjAnIkdlVohfWeZL+Eb2zGZk60fg+XoaWZfc5ADS5WCeERrS+zC
	GfOBzEhH6vOnAoTOj9ZTRrezY8tHkjoeW9a20BQqnbB9hBdANRvOC3kxmSSxWWiARG
	tAV+dB1p3e3D1p5gzzUufSIvW5VHpcPO4dEqGQ3OTvprp10XRJ/YS1P30ABENGIQa5
	wC/+cr+eKqXiA==
Date: Mon, 11 Dec 2017 16:05:54 +1100
From: Stephen Rothwell &lt;sfr@canb.auug.org.au&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Linux-Next Mailing List &lt;linux-next@vger.kernel.org&gt;,
	Linux Kernel Mailing List &lt;linux-kernel@vger.kernel.org&gt;,
	Dan Williams &lt;dan.j.williams@intel.com&gt;,
	Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;,
	Michael Ellerman &lt;mpe@ellerman.id.au&gt;
Subject: linux-next: build failure after merge of the akpm-current tree
Message-ID: &lt;20171211160554.00c79749@canb.auug.org.au&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=79">Stephen Rothwell</a> - Dec. 11, 2017, 5:05 a.m.</div>
<pre class="content">
Hi Andrew,

After merging the akpm-current tree, today&#39;s linux-next build (powerpc
ppc64_defconfig) failed like this:

In file included from include/linux/hugetlb.h:451:0,
                 from arch/powerpc/mm/hugetlbpage.c:14:
arch/powerpc/include/asm/hugetlb.h:125:26: error: redefinition of &#39;vma_mmu_pagesize&#39;
 #define vma_mmu_pagesize vma_mmu_pagesize
                          ^
arch/powerpc/mm/hugetlbpage.c:563:15: note: in expansion of macro &#39;vma_mmu_pagesize&#39;
 unsigned long vma_mmu_pagesize(struct vm_area_struct *vma)
               ^
In file included from arch/powerpc/mm/hugetlbpage.c:14:0:
include/linux/hugetlb.h:274:29: note: previous definition of &#39;vma_mmu_pagesize&#39; was here
 static inline unsigned long vma_mmu_pagesize(struct vm_area_struct *vma)
                             ^

Caused by commit

  ac9284a6b670 (&quot;mm, hugetlbfs: introduce -&gt;pagesize() to vm_operations_struct&quot;)

I have added the following fix patch for today:
<span class="from">
From: Stephen Rothwell &lt;sfr@canb.auug.org.au&gt;</span>
Date: Mon, 11 Dec 2017 15:51:41 +1100
Subject: [PATCH] mm, hugetlbfs: move testing of vma_mmu_pagesize to after
 inclusion of asm/hugetlb.h
<span class="signed-off-by">
Signed-off-by: Stephen Rothwell &lt;sfr@canb.auug.org.au&gt;</span>
---
 arch/powerpc/include/asm/hugetlb.h |  1 +
 include/linux/hugetlb.h            | 26 +++++++++++++-------------
 2 files changed, 14 insertions(+), 13 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/powerpc/include/asm/hugetlb.h b/arch/powerpc/include/asm/hugetlb.h</span>
<span class="p_header">index 14c9d44f355b..3cc6ca1bdaf2 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/hugetlb.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/hugetlb.h</span>
<span class="p_chunk">@@ -123,6 +123,7 @@</span> <span class="p_context"> void hugetlb_free_pgd_range(struct mmu_gather *tlb, unsigned long addr,</span>
  * to override the version in mm/hugetlb.c
  */
 #define vma_mmu_pagesize vma_mmu_pagesize
<span class="p_add">+unsigned long vma_mmu_pagesize(struct vm_area_struct *vma);</span>
 
 /*
  * If the arch doesn&#39;t supply something else, assume that hugepage
<span class="p_header">diff --git a/include/linux/hugetlb.h b/include/linux/hugetlb.h</span>
<span class="p_header">index c354befab724..b0f1f6768336 100644</span>
<span class="p_header">--- a/include/linux/hugetlb.h</span>
<span class="p_header">+++ b/include/linux/hugetlb.h</span>
<span class="p_chunk">@@ -264,19 +264,6 @@</span> <span class="p_context"> static inline unsigned long vma_kernel_pagesize(struct vm_area_struct *vma)</span>
 	return PAGE_SIZE;
 }
 
<span class="p_del">-/*</span>
<span class="p_del">- * Return the page size being used by the MMU to back a VMA. In the majority</span>
<span class="p_del">- * of cases, the page size used by the kernel matches the MMU size. On</span>
<span class="p_del">- * architectures where it differs, an architecture-specific version of this</span>
<span class="p_del">- * function is required.</span>
<span class="p_del">- */</span>
<span class="p_del">-#ifndef vma_mmu_pagesize</span>
<span class="p_del">-static inline unsigned long vma_mmu_pagesize(struct vm_area_struct *vma)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return vma_kernel_pagesize(vma);</span>
<span class="p_del">-}</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
 #ifdef CONFIG_HUGETLBFS
 struct hugetlbfs_sb_info {
 	long	max_inodes;   /* inodes allowed */
<span class="p_chunk">@@ -615,6 +602,19 @@</span> <span class="p_context"> static inline void set_huge_swap_pte_at(struct mm_struct *mm, unsigned long addr</span>
 }
 #endif	/* CONFIG_HUGETLB_PAGE */
 
<span class="p_add">+/*</span>
<span class="p_add">+ * Return the page size being used by the MMU to back a VMA. In the majority</span>
<span class="p_add">+ * of cases, the page size used by the kernel matches the MMU size. On</span>
<span class="p_add">+ * architectures where it differs, an architecture-specific version of this</span>
<span class="p_add">+ * function is required.</span>
<span class="p_add">+ */</span>
<span class="p_add">+#ifndef vma_mmu_pagesize</span>
<span class="p_add">+static inline unsigned long vma_mmu_pagesize(struct vm_area_struct *vma)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return vma_kernel_pagesize(vma);</span>
<span class="p_add">+}</span>
<span class="p_add">+#endif</span>
<span class="p_add">+</span>
 static inline spinlock_t *huge_pte_lock(struct hstate *h,
 					struct mm_struct *mm, pte_t *pte)
 {

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



