
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[35/43] x86/mm: Put mmu-to-h/w ASID translation in one place - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [35/43] x86/mm: Put mmu-to-h/w ASID translation in one place</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 24, 2017, 5:24 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171124172411.19476-36-mingo@kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10074477/mbox/"
   >mbox</a>
|
   <a href="/patch/10074477/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10074477/">/patch/10074477/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	334EF602DC for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 24 Nov 2017 17:28:10 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 19F462A224
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 24 Nov 2017 17:28:10 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 0ED7C2A288; Fri, 24 Nov 2017 17:28:10 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 72A632A224
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 24 Nov 2017 17:28:09 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754223AbdKXR1x (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 24 Nov 2017 12:27:53 -0500
Received: from mail-wm0-f68.google.com ([74.125.82.68]:42233 &quot;EHLO
	mail-wm0-f68.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754074AbdKXRZa (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 24 Nov 2017 12:25:30 -0500
Received: by mail-wm0-f68.google.com with SMTP id 124so6933445wmv.1
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Fri, 24 Nov 2017 09:25:29 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=sender:from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=U9kUV7Of7i8jef5GtEODLTbCZeBwkU8uAwgtONugkdo=;
	b=UnzHkIcKJhVQCxhW5tXeYHg80Hcfbhh9pqhMGOHE0wA3d8O5Wto7xLywfFT7aWVj9V
	694vGc8CpDsUvfXxXIJ1BJZaflRfdIa14W1ZMCCfP8NV55wC24QAkbDLrZFrDS81vLop
	ZWFRM7RO/p984LpMjpaFwdQIreHjqcYDJbefzYPdCHZHgYh/jymuZIDzgbhc6qEhah16
	Bm5i/ZoBM6FQ79yoXZA2abkfEbdFYT1cNAfpd9MTElyMKFJhrI5zBu7tlME5uYA1UoO2
	+sclxBX58ckt1darKSxFCm3tzZ5e4AJAsDHBsyBeZhHr69PcoqesX3LYfO1TOrXwwZa+
	Zmbw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:sender:from:to:cc:subject:date:message-id
	:in-reply-to:references;
	bh=U9kUV7Of7i8jef5GtEODLTbCZeBwkU8uAwgtONugkdo=;
	b=XohfHBgM8yCPEHOhYZdloWg59WWoS1tJXRsqA/qHxU79/7/sFCEaJLzM8XBdSYO2Yh
	x1ZZLvVpnNjByYFe5z6IQTOKwAALVKiFquptY7msX4cIdb3EX/qOocHiy31FvdsJOvJi
	ckaLbB5zxtULZhd4fFnXKcF0tOfR7YxxBHI0+I1tKGriWTSOEOYUCknbgJMR/JyJ7UmU
	Wt2a0W1Nq0lQzBOkc4nkitI9TKRtFoTNaau6Y6w+scq1XU5ffdSjHuhbkEkRkxaY5/Ds
	5n31zxDDw2ey5qMBY2vY0w+OBNMOorHUU9roeXW4Bx90ZEEIsmlHG74fFZ2ytUrfTfMi
	DYjQ==
X-Gm-Message-State: AJaThX6VhPYTnrE2hSXHdl1Q3xgRKyXxwOmjPJDhhvsNTTEx11qCaksi
	LCfoj0I3tCVa04qqXm3R6JYLbQ==
X-Google-Smtp-Source: AGs4zMb2WiloUVpv2bIbSiDkkmpQkXym926Vpy4SHA1lvqdLmLBumJnq2EWM1PdhHczgFcn8uH2qZA==
X-Received: by 10.28.30.213 with SMTP id e204mr8236714wme.40.1511544328493; 
	Fri, 24 Nov 2017 09:25:28 -0800 (PST)
Received: from localhost.localdomain (2E8B0CD5.catv.pool.telekom.hu.
	[46.139.12.213]) by smtp.gmail.com with ESMTPSA id
	y145sm4603992wmd.40.2017.11.24.09.25.27
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Fri, 24 Nov 2017 09:25:27 -0800 (PST)
From: Ingo Molnar &lt;mingo@kernel.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;,
	Andy Lutomirski &lt;luto@amacapital.net&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;, &quot;H . Peter Anvin&quot; &lt;hpa@zytor.com&gt;,
	Peter Zijlstra &lt;peterz@infradead.org&gt;, Borislav Petkov &lt;bp@alien8.de&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Subject: [PATCH 35/43] x86/mm: Put mmu-to-h/w ASID translation in one place
Date: Fri, 24 Nov 2017 18:24:03 +0100
Message-Id: &lt;20171124172411.19476-36-mingo@kernel.org&gt;
X-Mailer: git-send-email 2.14.1
In-Reply-To: &lt;20171124172411.19476-1-mingo@kernel.org&gt;
References: &lt;20171124172411.19476-1-mingo@kernel.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a> - Nov. 24, 2017, 5:24 p.m.</div>
<pre class="content">
<span class="from">From: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;</span>

There are effectively two ASID types:
1. The one stored in the mmu_context that goes from 0-&gt;5
2. The one programmed into the hardware that goes from 1-&gt;6

This consolidates the locations where converting beween the two
(by doing +1) to a single place which gives us a nice place to
comment.  KAISER will also need to, given an ASID, know which
hardware ASID to flush for the userspace mapping.
<span class="signed-off-by">
Signed-off-by: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: daniel.gruss@iaik.tugraz.at
Cc: hughd@google.com
Cc: keescook@google.com
Cc: linux-mm@kvack.org
Cc: luto@kernel.org
Cc: michael.schwarz@iaik.tugraz.at
Cc: moritz.lipp@iaik.tugraz.at
Cc: richard.fellner@student.tugraz.at
Link: https://lkml.kernel.org/r/20171123003506.67E81D7F@viggo.jf.intel.com
<span class="signed-off-by">Signed-off-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
---
 arch/x86/include/asm/tlbflush.h | 30 ++++++++++++++++++------------
 1 file changed, 18 insertions(+), 12 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/tlbflush.h b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">index 3101581c5da0..24b27eb5904c 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_chunk">@@ -88,21 +88,26 @@</span> <span class="p_context"> static inline u64 inc_mm_tlb_gen(struct mm_struct *mm)</span>
  */
 #define MAX_ASID_AVAILABLE ((1&lt;&lt;CR3_AVAIL_ASID_BITS) - 2)
 
<span class="p_del">-/*</span>
<span class="p_del">- * If PCID is on, ASID-aware code paths put the ASID+1 into the PCID</span>
<span class="p_del">- * bits.  This serves two purposes.  It prevents a nasty situation in</span>
<span class="p_del">- * which PCID-unaware code saves CR3, loads some other value (with PCID</span>
<span class="p_del">- * == 0), and then restores CR3, thus corrupting the TLB for ASID 0 if</span>
<span class="p_del">- * the saved ASID was nonzero.  It also means that any bugs involving</span>
<span class="p_del">- * loading a PCID-enabled CR3 with CR4.PCIDE off will trigger</span>
<span class="p_del">- * deterministically.</span>
<span class="p_del">- */</span>
<span class="p_add">+static inline u16 kern_asid(u16 asid)</span>
<span class="p_add">+{</span>
<span class="p_add">+	VM_WARN_ON_ONCE(asid &gt; MAX_ASID_AVAILABLE);</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * If PCID is on, ASID-aware code paths put the ASID+1 into the PCID</span>
<span class="p_add">+	 * bits.  This serves two purposes.  It prevents a nasty situation in</span>
<span class="p_add">+	 * which PCID-unaware code saves CR3, loads some other value (with PCID</span>
<span class="p_add">+	 * == 0), and then restores CR3, thus corrupting the TLB for ASID 0 if</span>
<span class="p_add">+	 * the saved ASID was nonzero.  It also means that any bugs involving</span>
<span class="p_add">+	 * loading a PCID-enabled CR3 with CR4.PCIDE off will trigger</span>
<span class="p_add">+	 * deterministically.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	return asid + 1;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 struct pgd_t;
 static inline unsigned long build_cr3(pgd_t *pgd, u16 asid)
 {
 	if (static_cpu_has(X86_FEATURE_PCID)) {
<span class="p_del">-		VM_WARN_ON_ONCE(asid &gt; MAX_ASID_AVAILABLE);</span>
<span class="p_del">-		return __sme_pa(pgd) | (asid + 1);</span>
<span class="p_add">+		return __sme_pa(pgd) | kern_asid(asid);</span>
 	} else {
 		VM_WARN_ON_ONCE(asid != 0);
 		return __sme_pa(pgd);
<span class="p_chunk">@@ -112,7 +117,8 @@</span> <span class="p_context"> static inline unsigned long build_cr3(pgd_t *pgd, u16 asid)</span>
 static inline unsigned long build_cr3_noflush(pgd_t *pgd, u16 asid)
 {
 	VM_WARN_ON_ONCE(asid &gt; MAX_ASID_AVAILABLE);
<span class="p_del">-	return __sme_pa(pgd) | (asid + 1) | CR3_NOFLUSH;</span>
<span class="p_add">+	VM_WARN_ON_ONCE(!this_cpu_has(X86_FEATURE_PCID));</span>
<span class="p_add">+	return __sme_pa(pgd) | kern_asid(asid) | CR3_NOFLUSH;</span>
 }
 
 #ifdef CONFIG_PARAVIRT

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



