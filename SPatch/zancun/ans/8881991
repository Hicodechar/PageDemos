
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>sparc64: recognize and support Sonoma CPU type - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    sparc64: recognize and support Sonoma CPU type</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=63231">Khalid Aziz</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>April 19, 2016, 5:12 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1461085974-13534-1-git-send-email-khalid.aziz@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8881991/mbox/"
   >mbox</a>
|
   <a href="/patch/8881991/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8881991/">/patch/8881991/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id C65C49F36E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 19 Apr 2016 17:14:01 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id E92FC2026F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 19 Apr 2016 17:14:00 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 38FAD202E9
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 19 Apr 2016 17:13:59 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932980AbcDSRN5 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 19 Apr 2016 13:13:57 -0400
Received: from mailout.easymail.ca ([64.68.201.169]:55317 &quot;EHLO
	mailout.easymail.ca&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932747AbcDSRNy (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 19 Apr 2016 13:13:54 -0400
Received: from localhost (localhost [127.0.0.1])
	by mailout.easymail.ca (Postfix) with ESMTP id AFC26E954;
	Tue, 19 Apr 2016 13:13:51 -0400 (EDT)
X-Virus-Scanned: Debian amavisd-new at mailout.easymail.ca
X-Spam-Score: -3.707
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD, UNPARSEABLE_RELAY autolearn=ham version=3.3.1
Received: from mailout.easymail.ca ([127.0.0.1])
	by localhost (easymail-mailout.easydns.vpn [127.0.0.1]) (amavisd-new,
	port 10024)
	with ESMTP id PIwIHOXiayDI; Tue, 19 Apr 2016 13:13:51 -0400 (EDT)
Received: from mail.gonehiking.org (c-73-181-52-62.hsd1.co.comcast.net
	[73.181.52.62])
	by mailout.easymail.ca (Postfix) with ESMTPA id 57C4CE918;
	Tue, 19 Apr 2016 13:13:51 -0400 (EDT)
Received: from concerto.us.oracle.com (concerto-wl.internal [192.168.1.22])
	by mail.gonehiking.org (Postfix) with ESMTP id 9A0D59F3E8;
	Tue, 19 Apr 2016 11:13:50 -0600 (MDT)
From: Khalid Aziz &lt;khalid.aziz@oracle.com&gt;
To: davem@davemloft.net, allen.pais@oracle.com
Cc: Khalid Aziz &lt;khalid.aziz@oracle.com&gt;, david.j.aldridge@oracle.com,
	rob.gardner@oracle.com, nitin.m.gupta@oracle.com,
	sparclinux@vger.kernel.org, linux-kernel@vger.kernel.org,
	khalid@gonehiking.org
Subject: [PATCH] sparc64: recognize and support Sonoma CPU type
Date: Tue, 19 Apr 2016 11:12:54 -0600
Message-Id: &lt;1461085974-13534-1-git-send-email-khalid.aziz@oracle.com&gt;
X-Mailer: git-send-email 2.1.4
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=63231">Khalid Aziz</a> - April 19, 2016, 5:12 p.m.</div>
<pre class="content">
Add code to recognize SPARC-Sonoma cpu correctly and update cpu hardware
caps and cpu distribution map. SPARC-Sonoma is based upon SPARC-M7 core
along with additional PCI functions added on and is reported by firmware
as &quot;SPARC-SN&quot;.
<span class="signed-off-by">
Signed-off-by: Khalid Aziz &lt;khalid.aziz@oracle.com&gt;</span>
---
 arch/sparc/include/asm/spitfire.h | 1 +
 arch/sparc/kernel/cpu.c           | 6 ++++++
 arch/sparc/kernel/cpumap.c        | 1 +
 arch/sparc/kernel/head_64.S       | 8 ++++++++
 arch/sparc/kernel/setup_64.c      | 7 ++++++-
 arch/sparc/mm/init_64.c           | 3 +++
 6 files changed, 25 insertions(+), 1 deletion(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=83901">Allen Pais</a> - April 20, 2016, 3:54 p.m.</div>
<pre class="content">
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Khalid Aziz &lt;khalid.aziz@oracle.com &lt;mailto:khalid.aziz@oracle.com&gt;&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/sparc/include/asm/spitfire.h | 1 +</span>
<span class="quote">&gt;  arch/sparc/kernel/cpu.c           | 6 ++++++</span>
<span class="quote">&gt;  arch/sparc/kernel/cpumap.c        | 1 +</span>
<span class="quote">&gt;  arch/sparc/kernel/head_64.S       | 8 ++++++++</span>
<span class="quote">&gt;  arch/sparc/kernel/setup_64.c      | 7 ++++++-</span>
<span class="quote">&gt;  arch/sparc/mm/init_64.c           | 3 +++</span>
<span class="quote">&gt;  6 files changed, 25 insertions(+), 1 deletion(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/arch/sparc/include/asm/spitfire.h b/arch/sparc/include/asm/spitfire.h</span>
<span class="quote">&gt; index 56f9338..1d8321c 100644</span>
<span class="quote">&gt; --- a/arch/sparc/include/asm/spitfire.h</span>
<span class="quote">&gt; +++ b/arch/sparc/include/asm/spitfire.h</span>
<span class="quote">&gt; @@ -48,6 +48,7 @@</span>
<span class="quote">&gt;  #define SUN4V_CHIP_SPARC_M6    0x06</span>
<span class="quote">&gt;  #define SUN4V_CHIP_SPARC_M7    0x07</span>
<span class="quote">&gt;  #define SUN4V_CHIP_SPARC64X    0x8a</span>
<span class="quote">&gt; +#define SUN4V_CHIP_SPARC_SN    0x8b</span>
<span class="quote">&gt;  #define SUN4V_CHIP_UNKNOWN     0xff</span>

Looks good to me. Do you think adding these also this patch makes sense or
it could be a separate patch.

        }
-       if (!strcmp(sparc_pmu_type, &quot;sparc-m7&quot;)) {
+       if (!strcmp(sparc_pmu_type, &quot;sparc-m7&quot;) ||
+           !strcmp(sparc_pmu_type, &quot;sparc-sn&quot;)) {
                sparc_pmu = &amp;sparc_m7_pmu;
                return true;
<span class="acked-by">
Acked-by: Allen Pais &lt;allen.pais@oracle.com&gt;</span>

- Allen
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=63231">Khalid Aziz</a> - April 20, 2016, 4:02 p.m.</div>
<pre class="content">
On 04/20/2016 09:54 AM, Allen Pais wrote:
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Khalid Aziz &lt;khalid.aziz@oracle.com &lt;mailto:khalid.aziz@oracle.com&gt;&gt;</span>
<span class="quote">&gt;&gt; ---</span>
<span class="quote">&gt;&gt;   arch/sparc/include/asm/spitfire.h | 1 +</span>
<span class="quote">&gt;&gt;   arch/sparc/kernel/cpu.c           | 6 ++++++</span>
<span class="quote">&gt;&gt;   arch/sparc/kernel/cpumap.c        | 1 +</span>
<span class="quote">&gt;&gt;   arch/sparc/kernel/head_64.S       | 8 ++++++++</span>
<span class="quote">&gt;&gt;   arch/sparc/kernel/setup_64.c      | 7 ++++++-</span>
<span class="quote">&gt;&gt;   arch/sparc/mm/init_64.c           | 3 +++</span>
<span class="quote">&gt;&gt;   6 files changed, 25 insertions(+), 1 deletion(-)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; diff --git a/arch/sparc/include/asm/spitfire.h b/arch/sparc/include/asm/spitfire.h</span>
<span class="quote">&gt;&gt; index 56f9338..1d8321c 100644</span>
<span class="quote">&gt;&gt; --- a/arch/sparc/include/asm/spitfire.h</span>
<span class="quote">&gt;&gt; +++ b/arch/sparc/include/asm/spitfire.h</span>
<span class="quote">&gt;&gt; @@ -48,6 +48,7 @@</span>
<span class="quote">&gt;&gt;   #define SUN4V_CHIP_SPARC_M6    0x06</span>
<span class="quote">&gt;&gt;   #define SUN4V_CHIP_SPARC_M7    0x07</span>
<span class="quote">&gt;&gt;   #define SUN4V_CHIP_SPARC64X    0x8a</span>
<span class="quote">&gt;&gt; +#define SUN4V_CHIP_SPARC_SN    0x8b</span>
<span class="quote">&gt;&gt;   #define SUN4V_CHIP_UNKNOWN     0xff</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Looks good to me. Do you think adding these also this patch makes sense or</span>
<span class="quote">&gt; it could be a separate patch.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;          }</span>
<span class="quote">&gt; -       if (!strcmp(sparc_pmu_type, &quot;sparc-m7&quot;)) {</span>
<span class="quote">&gt; +       if (!strcmp(sparc_pmu_type, &quot;sparc-m7&quot;) ||</span>
<span class="quote">&gt; +           !strcmp(sparc_pmu_type, &quot;sparc-sn&quot;)) {</span>
<span class="quote">&gt;                  sparc_pmu = &amp;sparc_m7_pmu;</span>
<span class="quote">&gt;                  return true;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Acked-by: Allen Pais &lt;allen.pais@oracle.com&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; - Allen</span>
<span class="quote">&gt;</span>

I would recommend that to be a separate patch. My goal with this patch 
is to address the core capabilities of sonoma and enable kernel to get 
optimized performance from the processor. Monitoring the performance can 
be a separate patch.

--
Khalid
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=129">David Miller</a> - April 27, 2016, 8:39 p.m.</div>
<pre class="content">
<span class="from">From: Khalid Aziz &lt;khalid.aziz@oracle.com&gt;</span>
Date: Tue, 19 Apr 2016 11:12:54 -0600
<span class="quote">
&gt; Add code to recognize SPARC-Sonoma cpu correctly and update cpu hardware</span>
<span class="quote">&gt; caps and cpu distribution map. SPARC-Sonoma is based upon SPARC-M7 core</span>
<span class="quote">&gt; along with additional PCI functions added on and is reported by firmware</span>
<span class="quote">&gt; as &quot;SPARC-SN&quot;.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Khalid Aziz &lt;khalid.aziz@oracle.com&gt;</span>

Applied.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/sparc/include/asm/spitfire.h b/arch/sparc/include/asm/spitfire.h</span>
<span class="p_header">index 56f9338..1d8321c 100644</span>
<span class="p_header">--- a/arch/sparc/include/asm/spitfire.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/spitfire.h</span>
<span class="p_chunk">@@ -48,6 +48,7 @@</span> <span class="p_context"></span>
 #define SUN4V_CHIP_SPARC_M6	0x06
 #define SUN4V_CHIP_SPARC_M7	0x07
 #define SUN4V_CHIP_SPARC64X	0x8a
<span class="p_add">+#define SUN4V_CHIP_SPARC_SN	0x8b</span>
 #define SUN4V_CHIP_UNKNOWN	0xff
 
 #ifndef __ASSEMBLY__
<span class="p_header">diff --git a/arch/sparc/kernel/cpu.c b/arch/sparc/kernel/cpu.c</span>
<span class="p_header">index dfad8b1..493e023 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/cpu.c</span>
<span class="p_header">+++ b/arch/sparc/kernel/cpu.c</span>
<span class="p_chunk">@@ -506,6 +506,12 @@</span> <span class="p_context"> static void __init sun4v_cpu_probe(void)</span>
 		sparc_pmu_type = &quot;sparc-m7&quot;;
 		break;
 
<span class="p_add">+	case SUN4V_CHIP_SPARC_SN:</span>
<span class="p_add">+		sparc_cpu_type = &quot;SPARC-SN&quot;;</span>
<span class="p_add">+		sparc_fpu_type = &quot;SPARC-SN integrated FPU&quot;;</span>
<span class="p_add">+		sparc_pmu_type = &quot;sparc-sn&quot;;</span>
<span class="p_add">+		break;</span>
<span class="p_add">+</span>
 	case SUN4V_CHIP_SPARC64X:
 		sparc_cpu_type = &quot;SPARC64-X&quot;;
 		sparc_fpu_type = &quot;SPARC64-X integrated FPU&quot;;
<span class="p_header">diff --git a/arch/sparc/kernel/cpumap.c b/arch/sparc/kernel/cpumap.c</span>
<span class="p_header">index e69ec0e..45c820e 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/cpumap.c</span>
<span class="p_header">+++ b/arch/sparc/kernel/cpumap.c</span>
<span class="p_chunk">@@ -328,6 +328,7 @@</span> <span class="p_context"> static int iterate_cpu(struct cpuinfo_tree *t, unsigned int root_index)</span>
 	case SUN4V_CHIP_NIAGARA5:
 	case SUN4V_CHIP_SPARC_M6:
 	case SUN4V_CHIP_SPARC_M7:
<span class="p_add">+	case SUN4V_CHIP_SPARC_SN:</span>
 	case SUN4V_CHIP_SPARC64X:
 		rover_inc_table = niagara_iterate_method;
 		break;
<span class="p_header">diff --git a/arch/sparc/kernel/head_64.S b/arch/sparc/kernel/head_64.S</span>
<span class="p_header">index f2d30ca..aff3ea8 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/head_64.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/head_64.S</span>
<span class="p_chunk">@@ -414,6 +414,8 @@</span> <span class="p_context"> sun4v_chip_type:</span>
 	cmp	%g2, &#39;T&#39;
 	be,pt	%xcc, 70f
 	 cmp	%g2, &#39;M&#39;
<span class="p_add">+	be,pt	%xcc, 70f</span>
<span class="p_add">+	 cmp	%g2, &#39;S&#39;</span>
 	bne,pn	%xcc, 49f
 	 nop
 
<span class="p_chunk">@@ -433,6 +435,9 @@</span> <span class="p_context"> sun4v_chip_type:</span>
 	cmp	%g2, &#39;7&#39;
 	be,pt	%xcc, 5f
 	 mov	SUN4V_CHIP_SPARC_M7, %g4
<span class="p_add">+	cmp	%g2, &#39;N&#39;</span>
<span class="p_add">+	be,pt	%xcc, 5f</span>
<span class="p_add">+	 mov	SUN4V_CHIP_SPARC_SN, %g4</span>
 	ba,pt	%xcc, 49f
 	 nop
 
<span class="p_chunk">@@ -597,6 +602,9 @@</span> <span class="p_context"> niagara_tlb_fixup:</span>
 	cmp	%g1, SUN4V_CHIP_SPARC_M7
 	be,pt	%xcc, niagara4_patch
 	 nop
<span class="p_add">+	cmp	%g1, SUN4V_CHIP_SPARC_SN</span>
<span class="p_add">+	be,pt	%xcc, niagara4_patch</span>
<span class="p_add">+	 nop</span>
 
 	call	generic_patch_copyops
 	 nop
<span class="p_header">diff --git a/arch/sparc/kernel/setup_64.c b/arch/sparc/kernel/setup_64.c</span>
<span class="p_header">index f3185e2..9e3cdfc 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/setup_64.c</span>
<span class="p_header">+++ b/arch/sparc/kernel/setup_64.c</span>
<span class="p_chunk">@@ -285,7 +285,8 @@</span> <span class="p_context"> static void __init sun4v_patch(void)</span>
 
 	sun4v_patch_2insn_range(&amp;__sun4v_2insn_patch,
 				&amp;__sun4v_2insn_patch_end);
<span class="p_del">-	if (sun4v_chip_type == SUN4V_CHIP_SPARC_M7)</span>
<span class="p_add">+	if (sun4v_chip_type == SUN4V_CHIP_SPARC_M7 ||</span>
<span class="p_add">+	    sun4v_chip_type == SUN4V_CHIP_SPARC_SN)</span>
 		sun_m7_patch_2insn_range(&amp;__sun_m7_2insn_patch,
 					 &amp;__sun_m7_2insn_patch_end);
 
<span class="p_chunk">@@ -524,6 +525,7 @@</span> <span class="p_context"> static void __init init_sparc64_elf_hwcap(void)</span>
 		    sun4v_chip_type == SUN4V_CHIP_NIAGARA5 ||
 		    sun4v_chip_type == SUN4V_CHIP_SPARC_M6 ||
 		    sun4v_chip_type == SUN4V_CHIP_SPARC_M7 ||
<span class="p_add">+		    sun4v_chip_type == SUN4V_CHIP_SPARC_SN ||</span>
 		    sun4v_chip_type == SUN4V_CHIP_SPARC64X)
 			cap |= HWCAP_SPARC_BLKINIT;
 		if (sun4v_chip_type == SUN4V_CHIP_NIAGARA2 ||
<span class="p_chunk">@@ -532,6 +534,7 @@</span> <span class="p_context"> static void __init init_sparc64_elf_hwcap(void)</span>
 		    sun4v_chip_type == SUN4V_CHIP_NIAGARA5 ||
 		    sun4v_chip_type == SUN4V_CHIP_SPARC_M6 ||
 		    sun4v_chip_type == SUN4V_CHIP_SPARC_M7 ||
<span class="p_add">+		    sun4v_chip_type == SUN4V_CHIP_SPARC_SN ||</span>
 		    sun4v_chip_type == SUN4V_CHIP_SPARC64X)
 			cap |= HWCAP_SPARC_N2;
 	}
<span class="p_chunk">@@ -561,6 +564,7 @@</span> <span class="p_context"> static void __init init_sparc64_elf_hwcap(void)</span>
 			    sun4v_chip_type == SUN4V_CHIP_NIAGARA5 ||
 			    sun4v_chip_type == SUN4V_CHIP_SPARC_M6 ||
 			    sun4v_chip_type == SUN4V_CHIP_SPARC_M7 ||
<span class="p_add">+			    sun4v_chip_type == SUN4V_CHIP_SPARC_SN ||</span>
 			    sun4v_chip_type == SUN4V_CHIP_SPARC64X)
 				cap |= (AV_SPARC_VIS | AV_SPARC_VIS2 |
 					AV_SPARC_ASI_BLK_INIT |
<span class="p_chunk">@@ -570,6 +574,7 @@</span> <span class="p_context"> static void __init init_sparc64_elf_hwcap(void)</span>
 			    sun4v_chip_type == SUN4V_CHIP_NIAGARA5 ||
 			    sun4v_chip_type == SUN4V_CHIP_SPARC_M6 ||
 			    sun4v_chip_type == SUN4V_CHIP_SPARC_M7 ||
<span class="p_add">+			    sun4v_chip_type == SUN4V_CHIP_SPARC_SN ||</span>
 			    sun4v_chip_type == SUN4V_CHIP_SPARC64X)
 				cap |= (AV_SPARC_VIS3 | AV_SPARC_HPC |
 					AV_SPARC_FMAF);
<span class="p_header">diff --git a/arch/sparc/mm/init_64.c b/arch/sparc/mm/init_64.c</span>
<span class="p_header">index 6f21685..ee953f9 100644</span>
<span class="p_header">--- a/arch/sparc/mm/init_64.c</span>
<span class="p_header">+++ b/arch/sparc/mm/init_64.c</span>
<span class="p_chunk">@@ -1769,6 +1769,7 @@</span> <span class="p_context"> static void __init setup_page_offset(void)</span>
 			max_phys_bits = 47;
 			break;
 		case SUN4V_CHIP_SPARC_M7:
<span class="p_add">+		case SUN4V_CHIP_SPARC_SN:</span>
 		default:
 			/* M7 and later support 52-bit virtual addresses.  */
 			sparc64_va_hole_top =    0xfff8000000000000UL;
<span class="p_chunk">@@ -1986,6 +1987,7 @@</span> <span class="p_context"> static void __init sun4v_linear_pte_xor_finalize(void)</span>
 	 */
 	switch (sun4v_chip_type) {
 	case SUN4V_CHIP_SPARC_M7:
<span class="p_add">+	case SUN4V_CHIP_SPARC_SN:</span>
 		pagecv_flag = 0x00;
 		break;
 	default:
<span class="p_chunk">@@ -2138,6 +2140,7 @@</span> <span class="p_context"> void __init paging_init(void)</span>
 	 */
 	switch (sun4v_chip_type) {
 	case SUN4V_CHIP_SPARC_M7:
<span class="p_add">+	case SUN4V_CHIP_SPARC_SN:</span>
 		page_cache4v_flag = _PAGE_CP_4V;
 		break;
 	default:

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



