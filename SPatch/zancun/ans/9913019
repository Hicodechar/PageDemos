
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[PATCHv5,09/19] x86/mm: Make MAX_PHYSADDR_BITS and MAX_PHYSMEM_BITS dynamic - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [PATCHv5,09/19] x86/mm: Make MAX_PHYSADDR_BITS and MAX_PHYSMEM_BITS dynamic</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=40781">Kirill A. Shutemov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 21, 2017, 3:29 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170821152916.40124-10-kirill.shutemov@linux.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9913019/mbox/"
   >mbox</a>
|
   <a href="/patch/9913019/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9913019/">/patch/9913019/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	B08B0602A0 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 21 Aug 2017 15:29:53 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id A90B8286F5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 21 Aug 2017 15:29:53 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 9DFA828703; Mon, 21 Aug 2017 15:29:53 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3EC7B286F5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 21 Aug 2017 15:29:53 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754065AbdHUP3h (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 21 Aug 2017 11:29:37 -0400
Received: from mga03.intel.com ([134.134.136.65]:17822 &quot;EHLO mga03.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753877AbdHUP3a (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 21 Aug 2017 11:29:30 -0400
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
	by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
	21 Aug 2017 08:29:29 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.41,409,1498546800&quot;; d=&quot;scan&#39;208&quot;;a=&quot;1208445401&quot;
Received: from black.fi.intel.com ([10.237.72.28])
	by fmsmga002.fm.intel.com with ESMTP; 21 Aug 2017 08:29:26 -0700
Received: by black.fi.intel.com (Postfix, from userid 1000)
	id DEBE16FF; Mon, 21 Aug 2017 18:29:20 +0300 (EEST)
From: &quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
To: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;, x86@kernel.org,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Andy Lutomirski &lt;luto@amacapital.net&gt;,
	Dmitry Safonov &lt;dsafonov@virtuozzo.com&gt;,
	Cyrill Gorcunov &lt;gorcunov@openvz.org&gt;,
	Borislav Petkov &lt;bp@suse.de&gt;, linux-mm@kvack.org,
	linux-kernel@vger.kernel.org,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
Subject: [PATCHv5 09/19] x86/mm: Make MAX_PHYSADDR_BITS and MAX_PHYSMEM_BITS
	dynamic
Date: Mon, 21 Aug 2017 18:29:06 +0300
Message-Id: &lt;20170821152916.40124-10-kirill.shutemov@linux.intel.com&gt;
X-Mailer: git-send-email 2.14.1
In-Reply-To: &lt;20170821152916.40124-1-kirill.shutemov@linux.intel.com&gt;
References: &lt;20170821152916.40124-1-kirill.shutemov@linux.intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=40781">Kirill A. Shutemov</a> - Aug. 21, 2017, 3:29 p.m.</div>
<pre class="content">
For boot-time switching between paging modes, we need to be able to
adjust size of physical address space at runtime.

As part of making physical address space size variable, we have to make
X86_5LEVEL dependent on SPARSEMEM_VMEMMAP. !SPARSEMEM_VMEMMAP
configuration doesn&#39;t work well with variable MAX_PHYSMEM_BITS.

Affect on kernel image size:

   text    data     bss     dec     hex filename
10710340        4880000  860160 16450500         fb03c4 vmlinux.before
10710666        4880000  860160 16450826         fb050a vmlinux.after
<span class="signed-off-by">
Signed-off-by: Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt;</span>
---
 arch/x86/Kconfig                        | 1 +
 arch/x86/include/asm/pgtable_64_types.h | 2 +-
 arch/x86/include/asm/sparsemem.h        | 9 ++-------
 arch/x86/kernel/setup.c                 | 5 ++---
 4 files changed, 6 insertions(+), 11 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/Kconfig b/arch/x86/Kconfig</span>
<span class="p_header">index 2c9c4899d9ff..ac3358bb7bd2 100644</span>
<span class="p_header">--- a/arch/x86/Kconfig</span>
<span class="p_header">+++ b/arch/x86/Kconfig</span>
<span class="p_chunk">@@ -1401,6 +1401,7 @@</span> <span class="p_context"> config X86_PAE</span>
 config X86_5LEVEL
 	bool &quot;Enable 5-level page tables support&quot;
 	depends on X86_64
<span class="p_add">+	depends on SPARSEMEM_VMEMMAP</span>
 	---help---
 	  5-level paging enables access to larger address space:
 	  upto 128 PiB of virtual address space and 4 PiB of
<span class="p_header">diff --git a/arch/x86/include/asm/pgtable_64_types.h b/arch/x86/include/asm/pgtable_64_types.h</span>
<span class="p_header">index 163a049bbb56..51364e705b35 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/pgtable_64_types.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/pgtable_64_types.h</span>
<span class="p_chunk">@@ -86,7 +86,7 @@</span> <span class="p_context"> extern unsigned int ptrs_per_p4d;</span>
 #define PGDIR_MASK	(~(PGDIR_SIZE - 1))
 
 /* See Documentation/x86/x86_64/mm.txt for a description of the memory map. */
<span class="p_del">-#define MAXMEM		_AC(__AC(1, UL) &lt;&lt; MAX_PHYSMEM_BITS, UL)</span>
<span class="p_add">+#define MAXMEM		(1UL &lt;&lt; MAX_PHYSMEM_BITS)</span>
 #ifdef CONFIG_X86_5LEVEL
 #define VMALLOC_SIZE_TB _AC(16384, UL)
 #define __VMALLOC_BASE	_AC(0xff92000000000000, UL)
<span class="p_header">diff --git a/arch/x86/include/asm/sparsemem.h b/arch/x86/include/asm/sparsemem.h</span>
<span class="p_header">index 1f5bee2c202f..b857715633de 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/sparsemem.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/sparsemem.h</span>
<span class="p_chunk">@@ -26,13 +26,8 @@</span> <span class="p_context"></span>
 # endif
 #else /* CONFIG_X86_32 */
 # define SECTION_SIZE_BITS	27 /* matt - 128 is convenient right now */
<span class="p_del">-# ifdef CONFIG_X86_5LEVEL</span>
<span class="p_del">-#  define MAX_PHYSADDR_BITS	52</span>
<span class="p_del">-#  define MAX_PHYSMEM_BITS	52</span>
<span class="p_del">-# else</span>
<span class="p_del">-#  define MAX_PHYSADDR_BITS	44</span>
<span class="p_del">-#  define MAX_PHYSMEM_BITS	46</span>
<span class="p_del">-# endif</span>
<span class="p_add">+# define MAX_PHYSADDR_BITS	(pgtable_l5_enabled ? 52 : 44)</span>
<span class="p_add">+# define MAX_PHYSMEM_BITS	(pgtable_l5_enabled ? 52 : 46)</span>
 #endif
 
 #endif /* CONFIG_SPARSEMEM */
<span class="p_header">diff --git a/arch/x86/kernel/setup.c b/arch/x86/kernel/setup.c</span>
<span class="p_header">index 022ebddb3734..10e6dd1cb948 100644</span>
<span class="p_header">--- a/arch/x86/kernel/setup.c</span>
<span class="p_header">+++ b/arch/x86/kernel/setup.c</span>
<span class="p_chunk">@@ -202,9 +202,7 @@</span> <span class="p_context"> struct ist_info ist_info;</span>
 #endif
 
 #else
<span class="p_del">-struct cpuinfo_x86 boot_cpu_data __read_mostly = {</span>
<span class="p_del">-	.x86_phys_bits = MAX_PHYSMEM_BITS,</span>
<span class="p_del">-};</span>
<span class="p_add">+struct cpuinfo_x86 boot_cpu_data __read_mostly;</span>
 EXPORT_SYMBOL(boot_cpu_data);
 #endif
 
<span class="p_chunk">@@ -892,6 +890,7 @@</span> <span class="p_context"> void __init setup_arch(char **cmdline_p)</span>
 	__flush_tlb_all();
 #else
 	printk(KERN_INFO &quot;Command line: %s\n&quot;, boot_command_line);
<span class="p_add">+	boot_cpu_data.x86_phys_bits = MAX_PHYSMEM_BITS;</span>
 #endif
 
 	/*

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



