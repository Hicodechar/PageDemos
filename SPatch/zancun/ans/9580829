
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,6/6] x86/platform/uv/BAU: Implement uv4_wait_completion with read_status - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,6/6] x86/platform/uv/BAU: Implement uv4_wait_completion with read_status</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=172707">Andrew Banman</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 17, 2017, 10:06 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1487369197-79054-7-git-send-email-abanman@hpe.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9580829/mbox/"
   >mbox</a>
|
   <a href="/patch/9580829/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9580829/">/patch/9580829/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	0CDE96043A for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 17 Feb 2017 22:07:38 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E7E262875B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 17 Feb 2017 22:07:37 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D9C4D28779; Fri, 17 Feb 2017 22:07:37 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3B31A2875B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 17 Feb 2017 22:07:37 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S964785AbdBQWHa (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 17 Feb 2017 17:07:30 -0500
Received: from relay3.sgi.com ([192.48.152.1]:40882 &quot;EHLO relay.sgi.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S934926AbdBQWH2 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 17 Feb 2017 17:07:28 -0500
Received: from stormcage.americas.sgi.com (stormcage.americas.sgi.com
	[128.162.236.70])
	by relay3.corp.sgi.com (Postfix) with ESMTP id A928EAC007;
	Fri, 17 Feb 2017 14:07:08 -0800 (PST)
Received: by stormcage.americas.sgi.com (Postfix, from userid 200151)
	id 7C4CD20162367; Fri, 17 Feb 2017 16:07:08 -0600 (CST)
From: Andrew Banman &lt;abanman@hpe.com&gt;
To: tglx@linutronix.de
Cc: mingo@redhat.com, akpm@linux-foundation.org, hpa@zytor.com,
	mike.travis@hpe.com, rja@hpe.com, sivanich@hpe.com, x86@kernel.org,
	linux-kernel@vger.kernel.org, abanman@hpe.com
Subject: [PATCH v2 6/6] x86/platform/uv/BAU: Implement uv4_wait_completion
	with read_status
Date: Fri, 17 Feb 2017 16:06:37 -0600
Message-Id: &lt;1487369197-79054-7-git-send-email-abanman@hpe.com&gt;
X-Mailer: git-send-email 1.8.2.1
In-Reply-To: &lt;1487369197-79054-1-git-send-email-abanman@hpe.com&gt;
References: &lt;1487369197-79054-1-git-send-email-abanman@hpe.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=172707">Andrew Banman</a> - Feb. 17, 2017, 10:06 p.m.</div>
<pre class="content">
UV4 does not employ a software-timeout as in previous generations so a new
wait_completion routine without this logic is required. Certain completion
statuses require the AUX status bit in addition to ERROR and BUSY.

Add the read_status routine to construct the full completion status. Use
read_status in the uv4_wait_completion routine to handle all possible
completion statuses.
<span class="signed-off-by">
Signed-off-by: Andrew Banman &lt;abanman@hpe.com&gt;</span>
<span class="acked-by">Acked-by: Mike Travis &lt;mike.travis@hpe.com&gt;</span>
---
 arch/x86/platform/uv/tlb_uv.c | 58 ++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 57 insertions(+), 1 deletion(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">index 2a826dd..42e65fe 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_chunk">@@ -687,6 +687,62 @@</span> <span class="p_context"> static int uv2_3_wait_completion(struct bau_desc *bau_desc,</span>
 }
 
 /*
<span class="p_add">+ * Returns the status of current BAU message for cpu desc as a bit field</span>
<span class="p_add">+ * [Error][Busy][Aux]</span>
<span class="p_add">+ */</span>
<span class="p_add">+static u64 read_status(u64 status_mmr, int index, int desc)</span>
<span class="p_add">+{</span>
<span class="p_add">+	u64 stat;</span>
<span class="p_add">+</span>
<span class="p_add">+	stat = ((read_lmmr(status_mmr) &gt;&gt; index) &amp; UV_ACT_STATUS_MASK) &lt;&lt; 1;</span>
<span class="p_add">+	stat |= (read_lmmr(UVH_LB_BAU_SB_ACTIVATION_STATUS_2) &gt;&gt; desc) &amp; 0x1;</span>
<span class="p_add">+</span>
<span class="p_add">+	return stat;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static int uv4_wait_completion(struct bau_desc *bau_desc,</span>
<span class="p_add">+				struct bau_control *bcp, long try)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct ptc_stats *stat = bcp-&gt;statp;</span>
<span class="p_add">+	u64 descriptor_stat;</span>
<span class="p_add">+	u64 mmr = bcp-&gt;status_mmr;</span>
<span class="p_add">+	int index = bcp-&gt;status_index;</span>
<span class="p_add">+	int desc = bcp-&gt;uvhub_cpu;</span>
<span class="p_add">+</span>
<span class="p_add">+	descriptor_stat = read_status(mmr, index, desc);</span>
<span class="p_add">+</span>
<span class="p_add">+	/* spin on the status MMR, waiting for it to go idle */</span>
<span class="p_add">+	while (descriptor_stat != UV2H_DESC_IDLE) {</span>
<span class="p_add">+		switch (descriptor_stat) {</span>
<span class="p_add">+		case UV2H_DESC_SOURCE_TIMEOUT:</span>
<span class="p_add">+			stat-&gt;s_stimeout++;</span>
<span class="p_add">+			return FLUSH_GIVEUP;</span>
<span class="p_add">+</span>
<span class="p_add">+		case UV2H_DESC_DEST_TIMEOUT:</span>
<span class="p_add">+			stat-&gt;s_dtimeout++;</span>
<span class="p_add">+			bcp-&gt;conseccompletes = 0;</span>
<span class="p_add">+			return FLUSH_RETRY_TIMEOUT;</span>
<span class="p_add">+</span>
<span class="p_add">+		case UV2H_DESC_DEST_STRONG_NACK:</span>
<span class="p_add">+			stat-&gt;s_plugged++;</span>
<span class="p_add">+			bcp-&gt;conseccompletes = 0;</span>
<span class="p_add">+			return FLUSH_RETRY_PLUGGED;</span>
<span class="p_add">+</span>
<span class="p_add">+		case UV2H_DESC_DEST_PUT_ERR:</span>
<span class="p_add">+			bcp-&gt;conseccompletes = 0;</span>
<span class="p_add">+			return FLUSH_GIVEUP;</span>
<span class="p_add">+</span>
<span class="p_add">+		default:</span>
<span class="p_add">+			/* descriptor_stat is still BUSY */</span>
<span class="p_add">+			cpu_relax();</span>
<span class="p_add">+		}</span>
<span class="p_add">+		descriptor_stat = read_status(mmr, index, desc);</span>
<span class="p_add">+	}</span>
<span class="p_add">+	bcp-&gt;conseccompletes++;</span>
<span class="p_add">+	return FLUSH_COMPLETE;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+/*</span>
  * Our retries are blocked by all destination sw ack resources being
  * in use, and a timeout is pending. In that case hardware immediately
  * returns the ERROR that looks like a destination timeout.
<span class="p_chunk">@@ -2157,7 +2213,7 @@</span> <span class="p_context"> static int __init init_per_cpu(int nuvhubs, int base_part_pnode)</span>
 	.write_g_sw_ack          = write_gmmr_proc_sw_ack,
 	.write_payload_first     = write_mmr_proc_payload_first,
 	.write_payload_last      = write_mmr_proc_payload_last,
<span class="p_del">-	.wait_completion	 = uv2_3_wait_completion,</span>
<span class="p_add">+	.wait_completion         = uv4_wait_completion,</span>
 };
 
 /*

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



