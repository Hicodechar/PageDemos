
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[13/22] ia64: use generic swiotlb_ops - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [13/22] ia64: use generic swiotlb_ops</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 10, 2018, 8:09 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180110080932.14157-14-hch@lst.de&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10154417/mbox/"
   >mbox</a>
|
   <a href="/patch/10154417/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10154417/">/patch/10154417/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	E96B960231 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Jan 2018 08:10:28 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id DF41526E47
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Jan 2018 08:10:28 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D3F4127853; Wed, 10 Jan 2018 08:10:28 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1A3A726E47
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Jan 2018 08:10:28 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S965053AbeAJIKZ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 10 Jan 2018 03:10:25 -0500
Received: from bombadil.infradead.org ([65.50.211.133]:37408 &quot;EHLO
	bombadil.infradead.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S933154AbeAJIKU (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 10 Jan 2018 03:10:20 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=infradead.org; s=bombadil.20170209;
	h=References:In-Reply-To:Message-Id:
	Date:Subject:Cc:To:From:Sender:Reply-To:MIME-Version:Content-Type:
	Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
	Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
	List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
	bh=00HyE5fkLqbN2OfRQppfjCeGNVBTMhzaZ/BdNWAymcg=;
	b=g+yb8cMvJHmcx2c35sHn7DRVC
	lLHa/ZgNy8G/bVgKRimGar3YeUWKMSRguICmHj4P8nDbcElbaan91A9LNZQQtlLbp0QLGesUHUSro
	nY5RqjSZOzUCyJkRuYn7/2F5A7VUImV5OIuic2Sth5KbEt4m2BgL2/dZwIFeqzF5vjCMBCh/cqR0u
	I83M97r5KRHLd9t3il36mv3jLAlaN140PIgdEfwlJVsuv0ArySSKdCAcgEG7GlgpTySsgy46YlHbd
	f2sZFWrrLN5UWfLBPMHmCSchc9k4QHe+cPRd/lF36NQEFbGVHFUSUOsSdjg0ZbgFK/n7OYx+b7YQ5
	2HmRXAO0A==;
Received: from clnet-p099-196.ikbnet.co.at ([83.175.99.196] helo=localhost)
	by bombadil.infradead.org with esmtpsa (Exim 4.89 #1 (Red Hat
	Linux)) id 1eZBSe-00006I-Hy; Wed, 10 Jan 2018 08:10:12 +0000
From: Christoph Hellwig &lt;hch@lst.de&gt;
To: iommu@lists.linux-foundation.org
Cc: Konrad Rzeszutek Wilk &lt;konrad@darnok.org&gt;,
	Michal Simek &lt;monstr@monstr.eu&gt;, Guan Xuetao &lt;gxt@mprc.pku.edu.cn&gt;,
	=?UTF-8?q?Christian=20K=C3=B6nig?= &lt;ckoenig.leichtzumerken@gmail.com&gt;,
	linux-arm-kernel@lists.infradead.org, linux-ia64@vger.kernel.org,
	linux-mips@linux-mips.org, linuxppc-dev@lists.ozlabs.org,
	x86@kernel.org, linux-arch@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH 13/22] ia64: use generic swiotlb_ops
Date: Wed, 10 Jan 2018 09:09:23 +0100
Message-Id: &lt;20180110080932.14157-14-hch@lst.de&gt;
X-Mailer: git-send-email 2.14.2
In-Reply-To: &lt;20180110080932.14157-1-hch@lst.de&gt;
References: &lt;20180110080932.14157-1-hch@lst.de&gt;
X-SRS-Rewrite: SMTP reverse-path rewritten from &lt;hch@infradead.org&gt; by
	bombadil.infradead.org. See http://www.infradead.org/rpr.html
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a> - Jan. 10, 2018, 8:09 a.m.</div>
<pre class="content">
These are identical to the ia64 ops, and would also support CMA
if enabled on ia64.
<span class="signed-off-by">
Signed-off-by: Christoph Hellwig &lt;hch@lst.de&gt;</span>
---
 arch/ia64/Kconfig                |  5 +++++
 arch/ia64/hp/common/hwsw_iommu.c |  4 ++--
 arch/ia64/hp/common/sba_iommu.c  |  6 +++---
 arch/ia64/kernel/pci-swiotlb.c   | 38 +++-----------------------------------
 4 files changed, 13 insertions(+), 40 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/ia64/Kconfig b/arch/ia64/Kconfig</span>
<span class="p_header">index 888acdb163cb..29148fe4bf5a 100644</span>
<span class="p_header">--- a/arch/ia64/Kconfig</span>
<span class="p_header">+++ b/arch/ia64/Kconfig</span>
<span class="p_chunk">@@ -146,6 +146,7 @@</span> <span class="p_context"> config IA64_GENERIC</span>
 	bool &quot;generic&quot;
 	select NUMA
 	select ACPI_NUMA
<span class="p_add">+	select DMA_DIRECT_OPS</span>
 	select SWIOTLB
 	select PCI_MSI
 	help
<span class="p_chunk">@@ -166,6 +167,7 @@</span> <span class="p_context"> config IA64_GENERIC</span>
 
 config IA64_DIG
 	bool &quot;DIG-compliant&quot;
<span class="p_add">+	select DMA_DIRECT_OPS</span>
 	select SWIOTLB
 
 config IA64_DIG_VTD
<span class="p_chunk">@@ -181,6 +183,7 @@</span> <span class="p_context"> config IA64_HP_ZX1</span>
 
 config IA64_HP_ZX1_SWIOTLB
 	bool &quot;HP-zx1/sx1000 with software I/O TLB&quot;
<span class="p_add">+	select DMA_DIRECT_OPS</span>
 	select SWIOTLB
 	help
 	  Build a kernel that runs on HP zx1 and sx1000 systems even when they
<span class="p_chunk">@@ -204,6 +207,7 @@</span> <span class="p_context"> config IA64_SGI_UV</span>
 	bool &quot;SGI-UV&quot;
 	select NUMA
 	select ACPI_NUMA
<span class="p_add">+	select DMA_DIRECT_OPS</span>
 	select SWIOTLB
 	help
 	  Selecting this option will optimize the kernel for use on UV based
<span class="p_chunk">@@ -214,6 +218,7 @@</span> <span class="p_context"> config IA64_SGI_UV</span>
 
 config IA64_HP_SIM
 	bool &quot;Ski-simulator&quot;
<span class="p_add">+	select DMA_DIRECT_OPS</span>
 	select SWIOTLB
 	depends on !PM
 
<span class="p_header">diff --git a/arch/ia64/hp/common/hwsw_iommu.c b/arch/ia64/hp/common/hwsw_iommu.c</span>
<span class="p_header">index 41279f0442bd..58969039bed2 100644</span>
<span class="p_header">--- a/arch/ia64/hp/common/hwsw_iommu.c</span>
<span class="p_header">+++ b/arch/ia64/hp/common/hwsw_iommu.c</span>
<span class="p_chunk">@@ -19,7 +19,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/export.h&gt;
 #include &lt;asm/machvec.h&gt;
 
<span class="p_del">-extern const struct dma_map_ops sba_dma_ops, ia64_swiotlb_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops sba_dma_ops;</span>
 
 /* swiotlb declarations &amp; definitions: */
 extern int swiotlb_late_init_with_default_size (size_t size);
<span class="p_chunk">@@ -38,7 +38,7 @@</span> <span class="p_context"> static inline int use_swiotlb(struct device *dev)</span>
 const struct dma_map_ops *hwsw_dma_get_ops(struct device *dev)
 {
 	if (use_swiotlb(dev))
<span class="p_del">-		return &amp;ia64_swiotlb_dma_ops;</span>
<span class="p_add">+		return &amp;swiotlb_dma_ops;</span>
 	return &amp;sba_dma_ops;
 }
 EXPORT_SYMBOL(hwsw_dma_get_ops);
<span class="p_header">diff --git a/arch/ia64/hp/common/sba_iommu.c b/arch/ia64/hp/common/sba_iommu.c</span>
<span class="p_header">index 8c0a9ae6afec..aec4a3354abe 100644</span>
<span class="p_header">--- a/arch/ia64/hp/common/sba_iommu.c</span>
<span class="p_header">+++ b/arch/ia64/hp/common/sba_iommu.c</span>
<span class="p_chunk">@@ -2096,7 +2096,7 @@</span> <span class="p_context"> static int __init acpi_sba_ioc_init_acpi(void)</span>
 /* This has to run before acpi_scan_init(). */
 arch_initcall(acpi_sba_ioc_init_acpi);
 
<span class="p_del">-extern const struct dma_map_ops ia64_swiotlb_dma_ops;</span>
<span class="p_add">+extern const struct dma_map_ops swiotlb_dma_ops;</span>
 
 static int __init
 sba_init(void)
<span class="p_chunk">@@ -2111,7 +2111,7 @@</span> <span class="p_context"> sba_init(void)</span>
 	 * a successful kdump kernel boot is to use the swiotlb.
 	 */
 	if (is_kdump_kernel()) {
<span class="p_del">-		dma_ops = &amp;ia64_swiotlb_dma_ops;</span>
<span class="p_add">+		dma_ops = &amp;swiotlb_dma_ops;</span>
 		if (swiotlb_late_init_with_default_size(64 * (1&lt;&lt;20)) != 0)
 			panic(&quot;Unable to initialize software I/O TLB:&quot;
 				  &quot; Try machvec=dig boot option&quot;);
<span class="p_chunk">@@ -2133,7 +2133,7 @@</span> <span class="p_context"> sba_init(void)</span>
 		 * If we didn&#39;t find something sba_iommu can claim, we
 		 * need to setup the swiotlb and switch to the dig machvec.
 		 */
<span class="p_del">-		dma_ops = &amp;ia64_swiotlb_dma_ops;</span>
<span class="p_add">+		dma_ops = &amp;swiotlb_dma_ops;</span>
 		if (swiotlb_late_init_with_default_size(64 * (1&lt;&lt;20)) != 0)
 			panic(&quot;Unable to find SBA IOMMU or initialize &quot;
 			      &quot;software I/O TLB: Try machvec=dig boot option&quot;);
<span class="p_header">diff --git a/arch/ia64/kernel/pci-swiotlb.c b/arch/ia64/kernel/pci-swiotlb.c</span>
<span class="p_header">index 4a9a6e58ad6a..0f8d5fbd86bd 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/pci-swiotlb.c</span>
<span class="p_header">+++ b/arch/ia64/kernel/pci-swiotlb.c</span>
<span class="p_chunk">@@ -6,8 +6,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/cache.h&gt;
 #include &lt;linux/module.h&gt;
 #include &lt;linux/dma-mapping.h&gt;
<span class="p_del">-</span>
<span class="p_del">-#include &lt;asm/swiotlb.h&gt;</span>
<span class="p_add">+#include &lt;linux/swiotlb.h&gt;</span>
 #include &lt;asm/dma.h&gt;
 #include &lt;asm/iommu.h&gt;
 #include &lt;asm/machvec.h&gt;
<span class="p_chunk">@@ -15,40 +14,9 @@</span> <span class="p_context"></span>
 int swiotlb __read_mostly;
 EXPORT_SYMBOL(swiotlb);
 
<span class="p_del">-static void *ia64_swiotlb_alloc_coherent(struct device *dev, size_t size,</span>
<span class="p_del">-					 dma_addr_t *dma_handle, gfp_t gfp,</span>
<span class="p_del">-					 unsigned long attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (dev-&gt;coherent_dma_mask != DMA_BIT_MASK(64))</span>
<span class="p_del">-		gfp |= GFP_DMA32;</span>
<span class="p_del">-	return swiotlb_alloc_coherent(dev, size, dma_handle, gfp);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static void ia64_swiotlb_free_coherent(struct device *dev, size_t size,</span>
<span class="p_del">-				       void *vaddr, dma_addr_t dma_addr,</span>
<span class="p_del">-				       unsigned long attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	swiotlb_free_coherent(dev, size, vaddr, dma_addr);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-const struct dma_map_ops ia64_swiotlb_dma_ops = {</span>
<span class="p_del">-	.alloc = ia64_swiotlb_alloc_coherent,</span>
<span class="p_del">-	.free = ia64_swiotlb_free_coherent,</span>
<span class="p_del">-	.map_page = swiotlb_map_page,</span>
<span class="p_del">-	.unmap_page = swiotlb_unmap_page,</span>
<span class="p_del">-	.map_sg = swiotlb_map_sg_attrs,</span>
<span class="p_del">-	.unmap_sg = swiotlb_unmap_sg_attrs,</span>
<span class="p_del">-	.sync_single_for_cpu = swiotlb_sync_single_for_cpu,</span>
<span class="p_del">-	.sync_single_for_device = swiotlb_sync_single_for_device,</span>
<span class="p_del">-	.sync_sg_for_cpu = swiotlb_sync_sg_for_cpu,</span>
<span class="p_del">-	.sync_sg_for_device = swiotlb_sync_sg_for_device,</span>
<span class="p_del">-	.dma_supported = swiotlb_dma_supported,</span>
<span class="p_del">-	.mapping_error = swiotlb_dma_mapping_error,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
 void __init swiotlb_dma_init(void)
 {
<span class="p_del">-	dma_ops = &amp;ia64_swiotlb_dma_ops;</span>
<span class="p_add">+	dma_ops = &amp;swiotlb_dma_ops;</span>
 	swiotlb_init(1);
 }
 
<span class="p_chunk">@@ -60,7 +28,7 @@</span> <span class="p_context"> void __init pci_swiotlb_init(void)</span>
 		printk(KERN_INFO &quot;PCI-DMA: Re-initialize machine vector.\n&quot;);
 		machvec_init(&quot;dig&quot;);
 		swiotlb_init(1);
<span class="p_del">-		dma_ops = &amp;ia64_swiotlb_dma_ops;</span>
<span class="p_add">+		dma_ops = &amp;swiotlb_dma_ops;</span>
 #else
 		panic(&quot;Unable to find Intel IOMMU&quot;);
 #endif

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



