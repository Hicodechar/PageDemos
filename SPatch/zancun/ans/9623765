
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[tip:x86/mm] x86/hugetlb: Adjust to the new native/compat mmap bases - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [tip:x86/mm] x86/hugetlb: Adjust to the new native/compat mmap bases</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 14, 2017, 3:33 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;tip-e13b73dd9c8003993b171173ba803363faf74238@git.kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9623765/mbox/"
   >mbox</a>
|
   <a href="/patch/9623765/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9623765/">/patch/9623765/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	5E33360244 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 14 Mar 2017 15:34:59 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4E594285A3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 14 Mar 2017 15:34:59 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 400EC285B0; Tue, 14 Mar 2017 15:34:59 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 89E48285A3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 14 Mar 2017 15:34:58 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752422AbdCNPeQ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 14 Mar 2017 11:34:16 -0400
Received: from terminus.zytor.com ([65.50.211.136]:35406 &quot;EHLO
	terminus.zytor.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1750949AbdCNPeG (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 14 Mar 2017 11:34:06 -0400
Received: from terminus.zytor.com (localhost [127.0.0.1])
	by terminus.zytor.com (8.15.2/8.15.2) with ESMTP id v2EFXqJj010604;
	Tue, 14 Mar 2017 08:33:52 -0700
Received: (from tipbot@localhost)
	by terminus.zytor.com (8.15.2/8.15.2/Submit) id v2EFXqp7010597;
	Tue, 14 Mar 2017 08:33:52 -0700
Date: Tue, 14 Mar 2017 08:33:52 -0700
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to
	tipbot@zytor.com using -f
From: tip-bot for Dmitry Safonov &lt;tipbot@zytor.com&gt;
Message-ID: &lt;tip-e13b73dd9c8003993b171173ba803363faf74238@git.kernel.org&gt;
Cc: bp@suse.de, mingo@kernel.org, luto@kernel.org,
	linux-kernel@vger.kernel.org, kirill.shutemov@linux.intel.com,
	dsafonov@virtuozzo.com, gorcunov@openvz.org, xiaolong.ye@intel.com,
	hpa@zytor.com, tglx@linutronix.de
Reply-To: hpa@zytor.com, tglx@linutronix.de, bp@suse.de, luto@kernel.org,
	mingo@kernel.org, gorcunov@openvz.org, xiaolong.ye@intel.com,
	dsafonov@virtuozzo.com, kirill.shutemov@linux.intel.com,
	linux-kernel@vger.kernel.org
In-Reply-To: &lt;20170314114126.9280-1-dsafonov@virtuozzo.com&gt;
References: &lt;20170314114126.9280-1-dsafonov@virtuozzo.com&gt;
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/mm] x86/hugetlb: Adjust to the new native/compat mmap bases
Git-Commit-ID: e13b73dd9c8003993b171173ba803363faf74238
X-Mailer: tip-git-log-daemon
Robot-ID: &lt;tip-bot.git.kernel.org&gt;
Robot-Unsubscribe: Contact &lt;mailto:hpa@kernel.org&gt; to get blacklisted from
	these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a> - March 14, 2017, 3:33 p.m.</div>
<pre class="content">
Commit-ID:  e13b73dd9c8003993b171173ba803363faf74238
Gitweb:     http://git.kernel.org/tip/e13b73dd9c8003993b171173ba803363faf74238
Author:     Dmitry Safonov &lt;dsafonov@virtuozzo.com&gt;
AuthorDate: Tue, 14 Mar 2017 14:41:26 +0300
Committer:  Thomas Gleixner &lt;tglx@linutronix.de&gt;
CommitDate: Tue, 14 Mar 2017 16:29:16 +0100

x86/hugetlb: Adjust to the new native/compat mmap bases

Commit 1b028f784e8c introduced two mmap() bases for 32-bit syscalls and for
64-bit syscalls. The mmap() code in x86 was modified to handle the
separation, but the patch series missed to update the hugetlb code.

As a consequence a 32bit application mapping a file on hugetlbfs uses the
64-bit mmap base for address space allocation, which fails.

Adjust the hugetlb mapping code to use the proper bases depending on the
syscall invocation mode (64-bit or compat).

[ tglx: Massaged changelog and switched from asm/compat.h to linux/compat.h ]

Fixes: commit 1b028f784e8c (&quot;x86/mm: Introduce mmap_compat_base() for 32-bit mmap()&quot;)
Reported-by: kernel test robot &lt;xiaolong.ye@intel.com&gt;
<span class="signed-off-by">Signed-off-by: Dmitry Safonov &lt;dsafonov@virtuozzo.com&gt;</span>
Cc: 0x7f454c46@gmail.com
Cc: linux-mm@kvack.org
Cc: Andy Lutomirski &lt;luto@kernel.org&gt;
Cc: Cyrill Gorcunov &lt;gorcunov@openvz.org&gt;
Cc: Borislav Petkov &lt;bp@suse.de&gt;
Cc: &quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
Link: http://lkml.kernel.org/r/20170314114126.9280-1-dsafonov@virtuozzo.com
<span class="signed-off-by">Signed-off-by: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>
---
 arch/x86/include/asm/elf.h   |  1 +
 arch/x86/kernel/sys_x86_64.c | 12 ------------
 arch/x86/mm/hugetlbpage.c    |  9 ++++++---
 arch/x86/mm/mmap.c           | 14 ++++++++++++++
 4 files changed, 21 insertions(+), 15 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/elf.h b/arch/x86/include/asm/elf.h</span>
<span class="p_header">index ac5be5b..d4d3ed4 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/elf.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/elf.h</span>
<span class="p_chunk">@@ -305,6 +305,7 @@</span> <span class="p_context"> static inline int mmap_is_ia32(void)</span>
 
 extern unsigned long tasksize_32bit(void);
 extern unsigned long tasksize_64bit(void);
<span class="p_add">+extern unsigned long get_mmap_base(int is_legacy);</span>
 
 #ifdef CONFIG_X86_32
 
<span class="p_header">diff --git a/arch/x86/kernel/sys_x86_64.c b/arch/x86/kernel/sys_x86_64.c</span>
<span class="p_header">index 63e89df..207b8f2 100644</span>
<span class="p_header">--- a/arch/x86/kernel/sys_x86_64.c</span>
<span class="p_header">+++ b/arch/x86/kernel/sys_x86_64.c</span>
<span class="p_chunk">@@ -100,18 +100,6 @@</span> <span class="p_context"> out:</span>
 	return error;
 }
 
<span class="p_del">-static unsigned long get_mmap_base(int is_legacy)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct mm_struct *mm = current-&gt;mm;</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef CONFIG_HAVE_ARCH_COMPAT_MMAP_BASES</span>
<span class="p_del">-	if (in_compat_syscall())</span>
<span class="p_del">-		return is_legacy ? mm-&gt;mmap_compat_legacy_base</span>
<span class="p_del">-				 : mm-&gt;mmap_compat_base;</span>
<span class="p_del">-#endif</span>
<span class="p_del">-	return is_legacy ? mm-&gt;mmap_legacy_base : mm-&gt;mmap_base;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static void find_start_end(unsigned long flags, unsigned long *begin,
 			   unsigned long *end)
 {
<span class="p_header">diff --git a/arch/x86/mm/hugetlbpage.c b/arch/x86/mm/hugetlbpage.c</span>
<span class="p_header">index c5066a2..302f43f 100644</span>
<span class="p_header">--- a/arch/x86/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/x86/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -12,10 +12,12 @@</span> <span class="p_context"></span>
 #include &lt;linux/pagemap.h&gt;
 #include &lt;linux/err.h&gt;
 #include &lt;linux/sysctl.h&gt;
<span class="p_add">+#include &lt;linux/compat.h&gt;</span>
 #include &lt;asm/mman.h&gt;
 #include &lt;asm/tlb.h&gt;
 #include &lt;asm/tlbflush.h&gt;
 #include &lt;asm/pgalloc.h&gt;
<span class="p_add">+#include &lt;asm/elf.h&gt;</span>
 
 #if 0	/* This is just for testing */
 struct page *
<span class="p_chunk">@@ -82,8 +84,9 @@</span> <span class="p_context"> static unsigned long hugetlb_get_unmapped_area_bottomup(struct file *file,</span>
 
 	info.flags = 0;
 	info.length = len;
<span class="p_del">-	info.low_limit = current-&gt;mm-&gt;mmap_legacy_base;</span>
<span class="p_del">-	info.high_limit = TASK_SIZE;</span>
<span class="p_add">+	info.low_limit = get_mmap_base(1);</span>
<span class="p_add">+	info.high_limit = in_compat_syscall() ?</span>
<span class="p_add">+		tasksize_32bit() : tasksize_64bit();</span>
 	info.align_mask = PAGE_MASK &amp; ~huge_page_mask(h);
 	info.align_offset = 0;
 	return vm_unmapped_area(&amp;info);
<span class="p_chunk">@@ -100,7 +103,7 @@</span> <span class="p_context"> static unsigned long hugetlb_get_unmapped_area_topdown(struct file *file,</span>
 	info.flags = VM_UNMAPPED_AREA_TOPDOWN;
 	info.length = len;
 	info.low_limit = PAGE_SIZE;
<span class="p_del">-	info.high_limit = current-&gt;mm-&gt;mmap_base;</span>
<span class="p_add">+	info.high_limit = get_mmap_base(0);</span>
 	info.align_mask = PAGE_MASK &amp; ~huge_page_mask(h);
 	info.align_offset = 0;
 	addr = vm_unmapped_area(&amp;info);
<span class="p_header">diff --git a/arch/x86/mm/mmap.c b/arch/x86/mm/mmap.c</span>
<span class="p_header">index 529ab79..19ad095 100644</span>
<span class="p_header">--- a/arch/x86/mm/mmap.c</span>
<span class="p_header">+++ b/arch/x86/mm/mmap.c</span>
<span class="p_chunk">@@ -30,6 +30,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/limits.h&gt;
 #include &lt;linux/sched/signal.h&gt;
 #include &lt;linux/sched/mm.h&gt;
<span class="p_add">+#include &lt;linux/compat.h&gt;</span>
 #include &lt;asm/elf.h&gt;
 
 struct va_alignment __read_mostly va_align = {
<span class="p_chunk">@@ -153,6 +154,19 @@</span> <span class="p_context"> void arch_pick_mmap_layout(struct mm_struct *mm)</span>
 #endif
 }
 
<span class="p_add">+unsigned long get_mmap_base(int is_legacy)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct mm_struct *mm = current-&gt;mm;</span>
<span class="p_add">+</span>
<span class="p_add">+#ifdef CONFIG_HAVE_ARCH_COMPAT_MMAP_BASES</span>
<span class="p_add">+	if (in_compat_syscall()) {</span>
<span class="p_add">+		return is_legacy ? mm-&gt;mmap_compat_legacy_base</span>
<span class="p_add">+				 : mm-&gt;mmap_compat_base;</span>
<span class="p_add">+	}</span>
<span class="p_add">+#endif</span>
<span class="p_add">+	return is_legacy ? mm-&gt;mmap_legacy_base : mm-&gt;mmap_base;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 const char *arch_vma_name(struct vm_area_struct *vma)
 {
 	if (vma-&gt;vm_flags &amp; VM_MPX)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



