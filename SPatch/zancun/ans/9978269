
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>mm, hugetlb: fix &quot;treat_as_movable&quot; condition in htlb_alloc_mask - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    mm, hugetlb: fix &quot;treat_as_movable&quot; condition in htlb_alloc_mask</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=140631">Alexandru Moise</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 29, 2017, 3:13 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170929151339.GA4398@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9978269/mbox/"
   >mbox</a>
|
   <a href="/patch/9978269/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9978269/">/patch/9978269/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	0883660311 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 29 Sep 2017 15:14:07 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E5CF52841C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 29 Sep 2017 15:14:06 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id DA81C284AF; Fri, 29 Sep 2017 15:14:06 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.5 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, FREEMAIL_FROM, RCVD_IN_DNSWL_HI,
	RCVD_IN_SORBS_SPAM autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3C6E62841C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 29 Sep 2017 15:14:03 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752294AbdI2POB (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 29 Sep 2017 11:14:01 -0400
Received: from mail-wm0-f68.google.com ([74.125.82.68]:44698 &quot;EHLO
	mail-wm0-f68.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751920AbdI2PN7 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 29 Sep 2017 11:13:59 -0400
Received: by mail-wm0-f68.google.com with SMTP id m127so478645wmm.1
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Fri, 29 Sep 2017 08:13:58 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=date:from:to:cc:subject:message-id:mime-version:content-disposition
	:user-agent; bh=xciDzi6gnVACwZM1kYs0HmVeOkwUD+aN09K6lj8+iVM=;
	b=GGR8COZh8VV9HHLIzyAy+n0ol8IcrzawzWU3nrkz5yw3ZoeMryQUgpWpokae9WCkEP
	c05mf5YuqMTwSSl0zNQ+0Vx44v8BuktKIObKdFTJ/AsQsjw/viULcxZE4h/v30uJ/cL4
	9blWNSFhHMGxRcgra9i1ujXwRTTGLZzllyMO/vhah3VwANOtopPt/XZZrub/aRpGi/Yg
	9GforvZAR13WmEf/EgkXeABiH3eNfkKCzmCC3/lqH3dc4ojeS5/7SVzSj6jnqiZJBpAp
	NqLyhFCjS58L6lfQUwBgpgEkwX2dsnXa77mmPZwZg6B/tRH78Tp3IfUtLnj/yxtv1iwp
	fQlg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:date:from:to:cc:subject:message-id:mime-version
	:content-disposition:user-agent;
	bh=xciDzi6gnVACwZM1kYs0HmVeOkwUD+aN09K6lj8+iVM=;
	b=UAmokTUMFJUVN5jPt72iQyMBxbpJ5BpkG2qcVHzMdnxroY89QET6EaTL/0l2IROu0p
	KvgTVrwKD+AXV2dQcdYh68fe3LNbmCp/o0Ob9TkTuXPILy29Ab5TTlGsB5spE6RRndNB
	aPWnThimJui1bWxfQ10oHzUHB96yUpfu31KHiJK50ZPOARtGVpVmPhf252fTEJivb/oW
	AKQr6K/kI1Wqx0BFsf+hbnRbTn+cOqK2FZUKtKYjFR5DQkXgUxyC+vv+zPWmt/39BOCW
	u0UYyEzzZ9gYra8CAObIIBZ5f5NPSJwtFgy8qsczw3jCRxQC+lnHsJjTLZDMP/594BjF
	6ZXw==
X-Gm-Message-State: AHPjjUgDKNG9rzJrxyw+G/Ufpw7O12/KJR76XG70Kwxm7cm/0cHGgHas
	P22IvijZ0/Gvid5d/mU8HAc=
X-Google-Smtp-Source: AOwi7QAvgZUFYIwGpuD7OMYCNfP+fYps4exgB/IjgPoNnVM44lJz8hXkoe0YRN6ZrIGxEqYaVFnUqw==
X-Received: by 10.28.127.135 with SMTP id a129mr4010782wmd.12.1506698038170; 
	Fri, 29 Sep 2017 08:13:58 -0700 (PDT)
Received: from gmail.com (51B691AA.dsl.pool.telekom.hu. [81.182.145.170])
	by smtp.gmail.com with ESMTPSA id
	o59sm8637511wrc.45.2017.09.29.08.13.57
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Fri, 29 Sep 2017 08:13:57 -0700 (PDT)
Date: Fri, 29 Sep 2017 17:13:39 +0200
From: Alexandru Moise &lt;00moses.alexander00@gmail.com&gt;
To: akpm@linux-foundation.org
Cc: mike.kravetz@oracle.com, mhocko@suse.com,
	n-horiguchi@ah.jp.nec.com, aneesh.kumar@linux.vnet.ibm.com,
	punit.agrawal@arm.com, gerald.schaefer@de.ibm.com,
	aarcange@redhat.com, linux-mm@kvack.org,
	linux-kernel@vger.kernel.org, kirill@shutemov.name
Subject: [PATCH] mm, hugetlb: fix &quot;treat_as_movable&quot; condition in
	htlb_alloc_mask
Message-ID: &lt;20170929151339.GA4398@gmail.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.9.1 (2017-09-22)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=140631">Alexandru Moise</a> - Sept. 29, 2017, 3:13 p.m.</div>
<pre class="content">
If hugepage_migration_supported() returns true, this renders the
hugepages_treat_as_movable sysctl completely pointless.

Let&#39;s keep this behavior optional by switching the if() condition
from || to &amp;&amp;.
<span class="signed-off-by">
Signed-off-by: Alexandru Moise &lt;00moses.alexander00@gmail.com&gt;</span>
---
 mm/hugetlb.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=140631">Alexandru Moise</a> - Sept. 29, 2017, 8:43 p.m.</div>
<pre class="content">
On Fri, Sep 29, 2017 at 05:13:39PM +0200, Alexandru Moise wrote:
<span class="quote">&gt; If hugepage_migration_supported() returns true, this renders the</span>
<span class="quote">&gt; hugepages_treat_as_movable sysctl completely pointless.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Let&#39;s keep this behavior optional by switching the if() condition</span>
<span class="quote">&gt; from || to &amp;&amp;.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Alexandru Moise &lt;00moses.alexander00@gmail.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  mm/hugetlb.c | 2 +-</span>
<span class="quote">&gt;  1 file changed, 1 insertion(+), 1 deletion(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="quote">&gt; index 424b0ef08a60..ab28de0122af 100644</span>
<span class="quote">&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt; @@ -926,7 +926,7 @@ static struct page *dequeue_huge_page_nodemask(struct hstate *h, gfp_t gfp_mask,</span>
<span class="quote">&gt;  /* Movability of hugepages depends on migration support. */</span>
<span class="quote">&gt;  static inline gfp_t htlb_alloc_mask(struct hstate *h)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -	if (hugepages_treat_as_movable || hugepage_migration_supported(h))</span>
<span class="quote">&gt; +	if (hugepages_treat_as_movable &amp;&amp; hugepage_migration_supported(h))</span>
<span class="quote">&gt;  		return GFP_HIGHUSER_MOVABLE;</span>
<span class="quote">&gt;  	else</span>
<span class="quote">&gt;  		return GFP_HIGHUSER;</span>
<span class="quote">&gt; -- </span>
<span class="quote">&gt; 2.14.2</span>
<span class="quote">&gt; </span>

I seem to have terribly misunderstood the semantics of this flag wrt hugepages,
please ignore this for now.

../Alex
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - Sept. 29, 2017, 9:16 p.m.</div>
<pre class="content">
Adding Anshuman

On 09/29/2017 01:43 PM, Alexandru Moise wrote:
<span class="quote">&gt; On Fri, Sep 29, 2017 at 05:13:39PM +0200, Alexandru Moise wrote:</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="quote">&gt;&gt; index 424b0ef08a60..ab28de0122af 100644</span>
<span class="quote">&gt;&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt;&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt;&gt; @@ -926,7 +926,7 @@ static struct page *dequeue_huge_page_nodemask(struct hstate *h, gfp_t gfp_mask,</span>
<span class="quote">&gt;&gt;  /* Movability of hugepages depends on migration support. */</span>
<span class="quote">&gt;&gt;  static inline gfp_t htlb_alloc_mask(struct hstate *h)</span>
<span class="quote">&gt;&gt;  {</span>
<span class="quote">&gt;&gt; -	if (hugepages_treat_as_movable || hugepage_migration_supported(h))</span>
<span class="quote">&gt;&gt; +	if (hugepages_treat_as_movable &amp;&amp; hugepage_migration_supported(h))</span>
<span class="quote">&gt;&gt;  		return GFP_HIGHUSER_MOVABLE;</span>
<span class="quote">&gt;&gt;  	else</span>
<span class="quote">&gt;&gt;  		return GFP_HIGHUSER;</span>
<span class="quote">&gt;&gt; -- </span>
<span class="quote">&gt;&gt; 2.14.2</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I seem to have terribly misunderstood the semantics of this flag wrt hugepages,</span>
<span class="quote">&gt; please ignore this for now.</span>

That is Okay, it made me look at this code more closely.

static inline bool hugepage_migration_supported(struct hstate *h)
{
#ifdef CONFIG_ARCH_ENABLE_HUGEPAGE_MIGRATION
        if ((huge_page_shift(h) == PMD_SHIFT) ||
                (huge_page_shift(h) == PGDIR_SHIFT))
                return true;
        else
                return false;
#else
        return false;
#endif
}

So, hugepage_migration_supported() can only return true if
ARCH_ENABLE_HUGEPAGE_MIGRATION is defined.  Commit c177c81e09e5
restricts hugepage_migration_support to x86_64.  So,
ARCH_ENABLE_HUGEPAGE_MIGRATION is only defined for x86_64.

Commit 94310cbcaa3c added the ability to migrate gigantic hugetlb pages
at the PGD level.  This added the check for PGD level pages to
hugepage_migration_supported(), which is only there if
ARCH_ENABLE_HUGEPAGE_MIGRATION is defined.  IIUC, this functionality
was added for powerpc.  Yet, powerpc does not define
ARCH_ENABLE_HUGEPAGE_MIGRATION (unless I am missing something).
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=140631">Alexandru Moise</a> - Sept. 30, 2017, 8:35 a.m.</div>
<pre class="content">
On Fri, Sep 29, 2017 at 02:16:10PM -0700, Mike Kravetz wrote:
<span class="quote">&gt; Adding Anshuman</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; On 09/29/2017 01:43 PM, Alexandru Moise wrote:</span>
<span class="quote">&gt; &gt; On Fri, Sep 29, 2017 at 05:13:39PM +0200, Alexandru Moise wrote:</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="quote">&gt; &gt;&gt; index 424b0ef08a60..ab28de0122af 100644</span>
<span class="quote">&gt; &gt;&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt; &gt;&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt; &gt;&gt; @@ -926,7 +926,7 @@ static struct page *dequeue_huge_page_nodemask(struct hstate *h, gfp_t gfp_mask,</span>
<span class="quote">&gt; &gt;&gt;  /* Movability of hugepages depends on migration support. */</span>
<span class="quote">&gt; &gt;&gt;  static inline gfp_t htlb_alloc_mask(struct hstate *h)</span>
<span class="quote">&gt; &gt;&gt;  {</span>
<span class="quote">&gt; &gt;&gt; -	if (hugepages_treat_as_movable || hugepage_migration_supported(h))</span>
<span class="quote">&gt; &gt;&gt; +	if (hugepages_treat_as_movable &amp;&amp; hugepage_migration_supported(h))</span>
<span class="quote">&gt; &gt;&gt;  		return GFP_HIGHUSER_MOVABLE;</span>
<span class="quote">&gt; &gt;&gt;  	else</span>
<span class="quote">&gt; &gt;&gt;  		return GFP_HIGHUSER;</span>
<span class="quote">&gt; &gt;&gt; -- </span>
<span class="quote">&gt; &gt;&gt; 2.14.2</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; I seem to have terribly misunderstood the semantics of this flag wrt hugepages,</span>
<span class="quote">&gt; &gt; please ignore this for now.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; That is Okay, it made me look at this code more closely.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; static inline bool hugepage_migration_supported(struct hstate *h)</span>
<span class="quote">&gt; {</span>
<span class="quote">&gt; #ifdef CONFIG_ARCH_ENABLE_HUGEPAGE_MIGRATION</span>
<span class="quote">&gt;         if ((huge_page_shift(h) == PMD_SHIFT) ||</span>
<span class="quote">&gt;                 (huge_page_shift(h) == PGDIR_SHIFT))</span>
<span class="quote">&gt;                 return true;</span>
<span class="quote">&gt;         else</span>
<span class="quote">&gt;                 return false;</span>
<span class="quote">&gt; #else</span>
<span class="quote">&gt;         return false;</span>
<span class="quote">&gt; #endif</span>
<span class="quote">&gt; }</span>

The real problem is that I still get movable hugepages somehow
even when that hugepages_treat_as_movable is 0, I need to dig
a bit deeper because this behavior really should be optional.

Tools like mcelog are not hugepage aware (IIRC) so users should be able
to rather choose between the balance of having their hugepage using
application run for longer or run with the higher risk of memory
corruption.
<span class="quote">
&gt; </span>
<span class="quote">&gt; So, hugepage_migration_supported() can only return true if</span>
<span class="quote">&gt; ARCH_ENABLE_HUGEPAGE_MIGRATION is defined.  Commit c177c81e09e5</span>
<span class="quote">&gt; restricts hugepage_migration_support to x86_64.  So,</span>
<span class="quote">&gt; ARCH_ENABLE_HUGEPAGE_MIGRATION is only defined for x86_64.</span>
Hmm?

linux$ grep -rin ARCH_ENABLE_HUGEPAGE_MIGRATION *
arch/powerpc/platforms/Kconfig.cputype:311:config ARCH_ENABLE_HUGEPAGE_MIGRATION
arch/x86/Kconfig:2345:config ARCH_ENABLE_HUGEPAGE_MIGRATION

It is present on PPC_BOOK3S_64

../Alex
<span class="quote">
&gt; </span>
<span class="quote">&gt; Commit 94310cbcaa3c added the ability to migrate gigantic hugetlb pages</span>
<span class="quote">&gt; at the PGD level.  This added the check for PGD level pages to</span>
<span class="quote">&gt; hugepage_migration_supported(), which is only there if</span>
<span class="quote">&gt; ARCH_ENABLE_HUGEPAGE_MIGRATION is defined.  IIUC, this functionality</span>
<span class="quote">&gt; was added for powerpc.  Yet, powerpc does not define</span>
<span class="quote">&gt; ARCH_ENABLE_HUGEPAGE_MIGRATION (unless I am missing something).</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -- </span>
<span class="quote">&gt; Mike Kravetz</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 424b0ef08a60..ab28de0122af 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -926,7 +926,7 @@</span> <span class="p_context"> static struct page *dequeue_huge_page_nodemask(struct hstate *h, gfp_t gfp_mask,</span>
 /* Movability of hugepages depends on migration support. */
 static inline gfp_t htlb_alloc_mask(struct hstate *h)
 {
<span class="p_del">-	if (hugepages_treat_as_movable || hugepage_migration_supported(h))</span>
<span class="p_add">+	if (hugepages_treat_as_movable &amp;&amp; hugepage_migration_supported(h))</span>
 		return GFP_HIGHUSER_MOVABLE;
 	else
 		return GFP_HIGHUSER;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



