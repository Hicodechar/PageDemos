
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[tip:x86/urgent] x86/irq: Do not substract irq_tlb_count from irq_call_count - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [tip:x86/urgent] x86/irq: Do not substract irq_tlb_count from irq_call_count</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 11, 2016, 11:57 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;tip-82ba4faca1bffad429f15c90c980ffd010366c25@git.kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9275153/mbox/"
   >mbox</a>
|
   <a href="/patch/9275153/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9275153/">/patch/9275153/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	826F960CDC for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 11 Aug 2016 11:59:25 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6D79A285E2
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 11 Aug 2016 11:59:25 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 620EA2861C; Thu, 11 Aug 2016 11:59:25 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C21CC2861A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 11 Aug 2016 11:59:24 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752707AbcHKL7M (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 11 Aug 2016 07:59:12 -0400
Received: from terminus.zytor.com ([198.137.202.10]:53390 &quot;EHLO
	terminus.zytor.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932380AbcHKL6z (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 11 Aug 2016 07:58:55 -0400
Received: from terminus.zytor.com (localhost [127.0.0.1])
	by terminus.zytor.com (8.15.2/8.15.2) with ESMTP id u7BBvP5r016419;
	Thu, 11 Aug 2016 04:57:25 -0700
Received: (from tipbot@localhost)
	by terminus.zytor.com (8.15.2/8.15.2/Submit) id u7BBvOte016416;
	Thu, 11 Aug 2016 04:57:24 -0700
Date: Thu, 11 Aug 2016 04:57:24 -0700
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to
	tipbot@zytor.com using -f
From: tip-bot for Aaron Lu &lt;tipbot@zytor.com&gt;
Message-ID: &lt;tip-82ba4faca1bffad429f15c90c980ffd010366c25@git.kernel.org&gt;
Cc: tomoki.sekiyama.qu@hitachi.com, luto@kernel.org,
	jpoimboe@redhat.com, ying.huang@intel.com,
	torvalds@linux-foundation.org, aaron.lu@intel.com,
	peterz@infradead.org, hpa@zytor.com, dave@stgolabs.net,
	mingo@kernel.org, dvlasenk@redhat.com, brgerst@gmail.com,
	alex.shi@linaro.org, linux-kernel@vger.kernel.org, bp@alien8.de,
	tglx@linutronix.de
Reply-To: linux-kernel@vger.kernel.org, bp@alien8.de, tglx@linutronix.de,
	dvlasenk@redhat.com, alex.shi@linaro.org, brgerst@gmail.com,
	mingo@kernel.org, tomoki.sekiyama.qu@hitachi.com,
	luto@kernel.org, aaron.lu@intel.com, peterz@infradead.org,
	torvalds@linux-foundation.org, ying.huang@intel.com,
	jpoimboe@redhat.com, dave@stgolabs.net, hpa@zytor.com
In-Reply-To: &lt;20160811074430.GA18163@aaronlu.sh.intel.com&gt;
References: &lt;20160811074430.GA18163@aaronlu.sh.intel.com&gt;
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/urgent] x86/irq: Do not substract irq_tlb_count from
	irq_call_count
Git-Commit-ID: 82ba4faca1bffad429f15c90c980ffd010366c25
X-Mailer: tip-git-log-daemon
Robot-ID: &lt;tip-bot.git.kernel.org&gt;
Robot-Unsubscribe: Contact &lt;mailto:hpa@kernel.org&gt; to get blacklisted from
	these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a> - Aug. 11, 2016, 11:57 a.m.</div>
<pre class="content">
Commit-ID:  82ba4faca1bffad429f15c90c980ffd010366c25
Gitweb:     http://git.kernel.org/tip/82ba4faca1bffad429f15c90c980ffd010366c25
Author:     Aaron Lu &lt;aaron.lu@intel.com&gt;
AuthorDate: Thu, 11 Aug 2016 15:44:30 +0800
Committer:  Ingo Molnar &lt;mingo@kernel.org&gt;
CommitDate: Thu, 11 Aug 2016 11:14:59 +0200

x86/irq: Do not substract irq_tlb_count from irq_call_count

Since commit:

  52aec3308db8 (&quot;x86/tlb: replace INVALIDATE_TLB_VECTOR by CALL_FUNCTION_VECTOR&quot;)

the TLB remote shootdown is done through call function vector. That
commit didn&#39;t take care of irq_tlb_count, which a later commit:

  fd0f5869724f (&quot;x86: Distinguish TLB shootdown interrupts from other functions call interrupts&quot;)

... tried to fix.

The fix assumes every increase of irq_tlb_count has a corresponding
increase of irq_call_count. So the irq_call_count is always bigger than
irq_tlb_count and we could substract irq_tlb_count from irq_call_count.

Unfortunately this is not true for the smp_call_function_single() case.
The IPI is only sent if the target CPU&#39;s call_single_queue is empty when
adding a csd into it in generic_exec_single. That means if two threads
are both adding flush tlb csds to the same CPU&#39;s call_single_queue, only
one IPI is sent. In other words, the irq_call_count is incremented by 1
but irq_tlb_count is incremented by 2. Over time, irq_tlb_count will be
bigger than irq_call_count and the substract will produce a very large
irq_call_count value due to overflow.

Considering that:

  1) it&#39;s not worth to send more IPIs for the sake of accurate counting of
     irq_call_count in generic_exec_single();

  2) it&#39;s not easy to tell if the call function interrupt is for TLB
     shootdown in __smp_call_function_single_interrupt().

Not to exclude TLB shootdown from call function count seems to be the
simplest fix and this patch just does that.

This bug was found by LKP&#39;s cyclic performance regression tracking recently
with the vm-scalability test suite. I have bisected to commit:

  3dec0ba0be6a (&quot;mm/rmap: share the i_mmap_rwsem&quot;)

This commit didn&#39;t do anything wrong but revealed the irq_call_count
problem. IIUC, the commit makes rwc-&gt;remap_one in rmap_walk_file
concurrent with multiple threads.  When remap_one is try_to_unmap_one(),
then multiple threads could queue flush TLB to the same CPU but only
one IPI will be sent.

Since the commit was added in Linux v3.19, the counting problem only
shows up from v3.19 onwards.
<span class="signed-off-by">
Signed-off-by: Aaron Lu &lt;aaron.lu@intel.com&gt;</span>
Cc: Alex Shi &lt;alex.shi@linaro.org&gt;
Cc: Andy Lutomirski &lt;luto@kernel.org&gt;
Cc: Borislav Petkov &lt;bp@alien8.de&gt;
Cc: Brian Gerst &lt;brgerst@gmail.com&gt;
Cc: Davidlohr Bueso &lt;dave@stgolabs.net&gt;
Cc: Denys Vlasenko &lt;dvlasenk@redhat.com&gt;
Cc: H. Peter Anvin &lt;hpa@zytor.com&gt;
Cc: Huang Ying &lt;ying.huang@intel.com&gt;
Cc: Josh Poimboeuf &lt;jpoimboe@redhat.com&gt;
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Cc: Tomoki Sekiyama &lt;tomoki.sekiyama.qu@hitachi.com&gt;
Link: http://lkml.kernel.org/r/20160811074430.GA18163@aaronlu.sh.intel.com
<span class="signed-off-by">Signed-off-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
---
 arch/x86/include/asm/hardirq.h | 4 ----
 arch/x86/kernel/irq.c          | 3 +--
 2 files changed, 1 insertion(+), 6 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/hardirq.h b/arch/x86/include/asm/hardirq.h</span>
<span class="p_header">index 7178043..59405a2 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/hardirq.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/hardirq.h</span>
<span class="p_chunk">@@ -22,10 +22,6 @@</span> <span class="p_context"> typedef struct {</span>
 #ifdef CONFIG_SMP
 	unsigned int irq_resched_count;
 	unsigned int irq_call_count;
<span class="p_del">-	/*</span>
<span class="p_del">-	 * irq_tlb_count is double-counted in irq_call_count, so it must be</span>
<span class="p_del">-	 * subtracted from irq_call_count when displaying irq_call_count</span>
<span class="p_del">-	 */</span>
 	unsigned int irq_tlb_count;
 #endif
 #ifdef CONFIG_X86_THERMAL_VECTOR
<span class="p_header">diff --git a/arch/x86/kernel/irq.c b/arch/x86/kernel/irq.c</span>
<span class="p_header">index 61521dc..9f669fd 100644</span>
<span class="p_header">--- a/arch/x86/kernel/irq.c</span>
<span class="p_header">+++ b/arch/x86/kernel/irq.c</span>
<span class="p_chunk">@@ -102,8 +102,7 @@</span> <span class="p_context"> int arch_show_interrupts(struct seq_file *p, int prec)</span>
 	seq_puts(p, &quot;  Rescheduling interrupts\n&quot;);
 	seq_printf(p, &quot;%*s: &quot;, prec, &quot;CAL&quot;);
 	for_each_online_cpu(j)
<span class="p_del">-		seq_printf(p, &quot;%10u &quot;, irq_stats(j)-&gt;irq_call_count -</span>
<span class="p_del">-					irq_stats(j)-&gt;irq_tlb_count);</span>
<span class="p_add">+		seq_printf(p, &quot;%10u &quot;, irq_stats(j)-&gt;irq_call_count);</span>
 	seq_puts(p, &quot;  Function call interrupts\n&quot;);
 	seq_printf(p, &quot;%*s: &quot;, prec, &quot;TLB&quot;);
 	for_each_online_cpu(j)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



