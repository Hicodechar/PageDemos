
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>mm, hugetlb: don&#39;t require CMA for runtime gigantic pages - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    mm, hugetlb: don&#39;t require CMA for runtime gigantic pages</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=72672">Vlastimil Babka</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 5, 2016, 12:02 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;56B48F40.1060205@suse.cz&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8233691/mbox/"
   >mbox</a>
|
   <a href="/patch/8233691/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8233691/">/patch/8233691/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id C9BF3BEEE5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  5 Feb 2016 12:02:17 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 357AB2022A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  5 Feb 2016 12:02:17 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 473A2203A0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  5 Feb 2016 12:02:16 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752605AbcBEMCN (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 5 Feb 2016 07:02:13 -0500
Received: from mx2.suse.de ([195.135.220.15]:38409 &quot;EHLO mx2.suse.de&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1750989AbcBEMCM (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 5 Feb 2016 07:02:12 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (charybdis-ext.suse.de [195.135.220.254])
	by mx2.suse.de (Postfix) with ESMTP id 25078AC0D;
	Fri,  5 Feb 2016 12:02:10 +0000 (UTC)
Subject: Re: [PATCH] mm,
	hugetlb: don&#39;t require CMA for runtime gigantic pages
To: &quot;Kirill A. Shutemov&quot; &lt;kirill@shutemov.name&gt;
References: &lt;1454521811-11409-1-git-send-email-vbabka@suse.cz&gt;
	&lt;20160204060221.GA14877@js1304-P5Q-DELUXE&gt; &lt;56B31A31.3070406@suse.cz&gt;
	&lt;56B324D4.6030703@suse.cz&gt;
	&lt;20160205001459.GA24412@node.shutemov.name&gt;
Cc: Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;, linux-mm@kvack.org,
	linux-kernel@vger.kernel.org, Luiz Capitulino &lt;lcapitulino@redhat.com&gt;,
	&quot;Kirill A . Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Zhang Yanfei &lt;zhangyanfei@cn.fujitsu.com&gt;,
	Yasuaki Ishimatsu &lt;isimatu.yasuaki@jp.fujitsu.com&gt;,
	Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;,
	Mel Gorman &lt;mgorman@techsingularity.net&gt;,
	Davidlohr Bueso &lt;dave@stgolabs.net&gt;,
	Hillf Danton &lt;hillf.zj@alibaba-inc.com&gt;,
	Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
From: Vlastimil Babka &lt;vbabka@suse.cz&gt;
Message-ID: &lt;56B48F40.1060205@suse.cz&gt;
Date: Fri, 5 Feb 2016 13:02:08 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101
	Thunderbird/38.5.0
MIME-Version: 1.0
In-Reply-To: &lt;20160205001459.GA24412@node.shutemov.name&gt;
Content-Type: text/plain; charset=windows-1252
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.2 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72672">Vlastimil Babka</a> - Feb. 5, 2016, 12:02 p.m.</div>
<pre class="content">
On 02/05/2016 01:14 AM, Kirill A. Shutemov wrote:
<span class="quote">&gt;&gt;  include/linux/gfp.h | 6 +++---</span>
<span class="quote">&gt;&gt;  mm/hugetlb.c        | 2 +-</span>
<span class="quote">&gt;&gt;  mm/page_alloc.c     | 2 +-</span>
<span class="quote">&gt;&gt;  3 files changed, 5 insertions(+), 5 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; One more place missed: gigantic_pages_init() in arch/x86/mm/hugetlbpage.c</span>
<span class="quote">&gt; Could you relax the check there as well?</span>

Crap, thanks. This file was hidden in different commit and didn&#39;t cause
compilation failure. Patch below, tested that 1gb pages are available
with COMPACTION+ISOLATION.

----8&lt;----
<span class="from">From: Vlastimil Babka &lt;vbabka@suse.cz&gt;</span>
Date: Fri, 5 Feb 2016 10:59:38 +0100
Subject: [PATCH 2/2] 
 mm-hugetlb-dont-require-cma-for-runtime-gigantic-pages-fix2

Update also arch-specific code as Kirill pointed out.
<span class="signed-off-by">
Signed-off-by: Vlastimil Babka &lt;vbabka@suse.cz&gt;</span>
---
 arch/x86/mm/hugetlbpage.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/mm/hugetlbpage.c b/arch/x86/mm/hugetlbpage.c</span>
<span class="p_header">index 42982b26e32b..740d7ac03a55 100644</span>
<span class="p_header">--- a/arch/x86/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/x86/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -173,10 +173,10 @@</span> <span class="p_context"> static __init int setup_hugepagesz(char *opt)</span>
 }
 __setup(&quot;hugepagesz=&quot;, setup_hugepagesz);
 
<span class="p_del">-#ifdef CONFIG_CMA</span>
<span class="p_add">+#if (defined(CONFIG_MEMORY_ISOLATION) &amp;&amp; defined(CONFIG_COMPACTION)) || defined(CONFIG_CMA)</span>
 static __init int gigantic_pages_init(void)
 {
<span class="p_del">-	/* With CMA we can allocate gigantic pages at runtime */</span>
<span class="p_add">+	/* With compaction or CMA we can allocate gigantic pages at runtime */</span>
 	if (cpu_has_gbpages &amp;&amp; !size_to_hstate(1UL &lt;&lt; PUD_SHIFT))
 		hugetlb_add_hstate(PUD_SHIFT - PAGE_SHIFT);
 	return 0;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



