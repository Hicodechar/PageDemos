
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>arm64/dma-mapping: Fix null-pointer check - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    arm64/dma-mapping: Fix null-pointer check</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=63761">Olav Haugan</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 10, 2017, 7:41 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170610194110.27712-1-ohaugan@codeaurora.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9779949/mbox/"
   >mbox</a>
|
   <a href="/patch/9779949/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9779949/">/patch/9779949/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	52EEB601EA for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 10 Jun 2017 19:41:38 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3C80728643
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 10 Jun 2017 19:41:38 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 1E3F42866B; Sat, 10 Jun 2017 19:41:38 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 8655828643
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 10 Jun 2017 19:41:37 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751642AbdFJTl2 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sat, 10 Jun 2017 15:41:28 -0400
Received: from smtp.codeaurora.org ([198.145.29.96]:44382 &quot;EHLO
	smtp.codeaurora.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751137AbdFJTl1 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sat, 10 Jun 2017 15:41:27 -0400
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
	id 568F760EB7; Sat, 10 Jun 2017 19:41:26 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
	s=default; t=1497123686;
	bh=fLc06Ndxrvg/tQCsdwLXvf64HgRydijDu4Jncy/w/HY=;
	h=From:To:Cc:Subject:Date:From;
	b=bpHCdGrd0EAM80qbKowZccqG1IOWOtNpE3s6cWsLu9S2YHAmENvFWeWKo0UvBnRPZ
	JdByDzQEw5HS3q/ZTutIOcG9K3IT8E54tl24L/GURKArsCNy5Pds+AiPv97LhJPg9P
	oYR5FXBOKSy401TXZwJhPAIxvmaBfqKiYCDjSLI0=
Received: from ohaugan-linux.qualcomm.com (i-global254.qualcomm.com
	[199.106.103.254])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
	(No client certificate requested)
	(Authenticated sender: ohaugan@smtp.codeaurora.org)
	by smtp.codeaurora.org (Postfix) with ESMTPSA id 7A4DE60EB7;
	Sat, 10 Jun 2017 19:41:25 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
	s=default; t=1497123685;
	bh=fLc06Ndxrvg/tQCsdwLXvf64HgRydijDu4Jncy/w/HY=;
	h=From:To:Cc:Subject:Date:From;
	b=dXvzF625NbobIZDoRfCz5f9V2Rq7JIV6EUYyLp2ZeXIvP9DPFBpJx0uDv+089vAwi
	jqR+7R/kFpcCWWxw0JbUrajWF/yqGciu1I0y4yfGYpCbduTlQm8kWirNBPcdozip3d
	sgBSltwXWjxVKPvRFE+2IK2wcnsibQHUJLFSEJ7E=
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 7A4DE60EB7
Authentication-Results: pdx-caf-mail.web.codeaurora.org;
	dmarc=none (p=none dis=none)
	header.from=codeaurora.org
Authentication-Results: pdx-caf-mail.web.codeaurora.org;
	spf=none smtp.mailfrom=ohaugan@codeaurora.org
From: Olav Haugan &lt;ohaugan@codeaurora.org&gt;
To: ohaugan@codeaurora.org, catalin.marinas@arm.com,
	will.deacon@arm.com, robin.murphy@arm.com
Cc: linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org
Subject: [PATCH] arm64/dma-mapping: Fix null-pointer check
Date: Sat, 10 Jun 2017 12:41:10 -0700
Message-Id: &lt;20170610194110.27712-1-ohaugan@codeaurora.org&gt;
X-Mailer: git-send-email 2.13.0
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=63761">Olav Haugan</a> - June 10, 2017, 7:41 p.m.</div>
<pre class="content">
The current null-pointer check in __dma_alloc_coherent and
__dma_free_coherent is pretty much useless since we are dereferencing
the pointer before checking for null.
Check for null-pointer before the actual dereferencing of the pointer.
<span class="signed-off-by">
Signed-off-by: Olav Haugan &lt;ohaugan@codeaurora.org&gt;</span>
---
 arch/arm64/mm/dma-mapping.c | 21 +++++++++++----------
 1 file changed, 11 insertions(+), 10 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=166571">Russell King - ARM Linux</a> - June 10, 2017, 10:03 p.m.</div>
<pre class="content">
On Sat, Jun 10, 2017 at 12:41:10PM -0700, Olav Haugan wrote:
<span class="quote">&gt; @@ -149,6 +140,11 @@ static void *__dma_alloc(struct device *dev, size_t size,</span>
<span class="quote">&gt;  	bool coherent = is_device_dma_coherent(dev);</span>
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This re-introduces an instance that you say you&#39;re getting rid of...
<span class="quote">
&gt;  	pgprot_t prot = __get_dma_pgprot(attrs, PAGE_KERNEL, false);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +	if (!dev) {</span>
<span class="quote">&gt; +		WARN_ONCE(1, &quot;Use an actual device structure for DMA allocation\n&quot;);</span>
<span class="quote">&gt; +		return NULL;</span>
<span class="quote">&gt; +	}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  	size = PAGE_ALIGN(size);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	if (!coherent &amp;&amp; !gfpflags_allow_blocking(flags)) {</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=352">Catalin Marinas</a> - June 12, 2017, 12:29 p.m.</div>
<pre class="content">
On Sat, Jun 10, 2017 at 12:41:10PM -0700, Olav Haugan wrote:
<span class="quote">&gt; @@ -149,6 +140,11 @@ static void *__dma_alloc(struct device *dev, size_t size,</span>
<span class="quote">&gt;  	bool coherent = is_device_dma_coherent(dev);</span>
<span class="quote">&gt;  	pgprot_t prot = __get_dma_pgprot(attrs, PAGE_KERNEL, false);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +	if (!dev) {</span>
<span class="quote">&gt; +		WARN_ONCE(1, &quot;Use an actual device structure for DMA allocation\n&quot;);</span>
<span class="quote">&gt; +		return NULL;</span>
<span class="quote">&gt; +	}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  	size = PAGE_ALIGN(size);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	if (!coherent &amp;&amp; !gfpflags_allow_blocking(flags)) {</span>
<span class="quote">&gt; @@ -192,8 +188,13 @@ static void __dma_free(struct device *dev, size_t size,</span>
<span class="quote">&gt;  		       void *vaddr, dma_addr_t dma_handle,</span>
<span class="quote">&gt;  		       unsigned long attrs)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -	void *swiotlb_addr = phys_to_virt(dma_to_phys(dev, dma_handle));</span>
<span class="quote">&gt; +	void *swiotlb_addr;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +	if (!dev) {</span>
<span class="quote">&gt; +		WARN_ONCE(1, &quot;Use an actual device structure for DMA free\n&quot;);</span>
<span class="quote">&gt; +		return;</span>
<span class="quote">&gt; +	}</span>
<span class="quote">&gt; +	swiotlb_addr = phys_to_virt(dma_to_phys(dev, dma_handle));</span>

I don&#39;t think we need the checks anymore. With commit 1dccb598df54
(&quot;arm64: simplify dma_get_ops&quot;) __generic_dma_ops() returns
dummy_dma_ops when dev == NULL, so the above __dma_alloc/__dma_free
functions would not be called.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=63761">Olav Haugan</a> - June 12, 2017, 8:33 p.m.</div>
<pre class="content">
On 17-06-12 13:29:04, Catalin Marinas wrote:
<span class="quote">&gt; On Sat, Jun 10, 2017 at 12:41:10PM -0700, Olav Haugan wrote:</span>
<span class="quote">&gt; &gt; @@ -149,6 +140,11 @@ static void *__dma_alloc(struct device *dev, size_t size,</span>
<span class="quote">&gt; &gt;  	bool coherent = is_device_dma_coherent(dev);</span>
<span class="quote">&gt; &gt;  	pgprot_t prot = __get_dma_pgprot(attrs, PAGE_KERNEL, false);</span>
<span class="quote">&gt; &gt;  </span>
<span class="quote">&gt; &gt; +	if (!dev) {</span>
<span class="quote">&gt; &gt; +		WARN_ONCE(1, &quot;Use an actual device structure for DMA allocation\n&quot;);</span>
<span class="quote">&gt; &gt; +		return NULL;</span>
<span class="quote">&gt; &gt; +	}</span>
<span class="quote">&gt; &gt; +</span>
<span class="quote">&gt; &gt;  	size = PAGE_ALIGN(size);</span>
<span class="quote">&gt; &gt;  </span>
<span class="quote">&gt; &gt;  	if (!coherent &amp;&amp; !gfpflags_allow_blocking(flags)) {</span>
<span class="quote">&gt; &gt; @@ -192,8 +188,13 @@ static void __dma_free(struct device *dev, size_t size,</span>
<span class="quote">&gt; &gt;  		       void *vaddr, dma_addr_t dma_handle,</span>
<span class="quote">&gt; &gt;  		       unsigned long attrs)</span>
<span class="quote">&gt; &gt;  {</span>
<span class="quote">&gt; &gt; -	void *swiotlb_addr = phys_to_virt(dma_to_phys(dev, dma_handle));</span>
<span class="quote">&gt; &gt; +	void *swiotlb_addr;</span>
<span class="quote">&gt; &gt;  </span>
<span class="quote">&gt; &gt; +	if (!dev) {</span>
<span class="quote">&gt; &gt; +		WARN_ONCE(1, &quot;Use an actual device structure for DMA free\n&quot;);</span>
<span class="quote">&gt; &gt; +		return;</span>
<span class="quote">&gt; &gt; +	}</span>
<span class="quote">&gt; &gt; +	swiotlb_addr = phys_to_virt(dma_to_phys(dev, dma_handle));</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I don&#39;t think we need the checks anymore. With commit 1dccb598df54</span>
<span class="quote">&gt; (&quot;arm64: simplify dma_get_ops&quot;) __generic_dma_ops() returns</span>
<span class="quote">&gt; dummy_dma_ops when dev == NULL, so the above __dma_alloc/__dma_free</span>
<span class="quote">&gt; functions would not be called.</span>

Ah, you are right. I will remove the checks then! Thanks.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=63761">Olav Haugan</a> - June 12, 2017, 8:36 p.m.</div>
<pre class="content">
On 17-06-10 23:03:54, Russell King - ARM Linux wrote:
<span class="quote">&gt; On Sat, Jun 10, 2017 at 12:41:10PM -0700, Olav Haugan wrote:</span>
<span class="quote">&gt; &gt; @@ -149,6 +140,11 @@ static void *__dma_alloc(struct device *dev, size_t size,</span>
<span class="quote">&gt; &gt;  	bool coherent = is_device_dma_coherent(dev);</span>
<span class="quote">&gt;                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This re-introduces an instance that you say you&#39;re getting rid of...</span>
<span class="quote">&gt; </span>

The ARM64 version of is_device_dma_coherent() checks for !dev
already...But anyway I will completely remove the !dev checks in the
alloc/free functions since as Catalin pointed out it is coverted
elsewhere.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=63761">Olav Haugan</a> - June 12, 2017, 8:50 p.m.</div>
<pre class="content">
On 17-06-12 13:29:04, Catalin Marinas wrote:
<span class="quote">&gt; On Sat, Jun 10, 2017 at 12:41:10PM -0700, Olav Haugan wrote:</span>
<span class="quote">&gt; &gt; @@ -149,6 +140,11 @@ static void *__dma_alloc(struct device *dev, size_t size,</span>
<span class="quote">&gt; &gt;  	bool coherent = is_device_dma_coherent(dev);</span>
<span class="quote">&gt; &gt;  	pgprot_t prot = __get_dma_pgprot(attrs, PAGE_KERNEL, false);</span>
<span class="quote">&gt; &gt;  </span>
<span class="quote">&gt; &gt; +	if (!dev) {</span>
<span class="quote">&gt; &gt; +		WARN_ONCE(1, &quot;Use an actual device structure for DMA allocation\n&quot;);</span>
<span class="quote">&gt; &gt; +		return NULL;</span>
<span class="quote">&gt; &gt; +	}</span>
<span class="quote">&gt; &gt; +</span>
<span class="quote">&gt; &gt;  	size = PAGE_ALIGN(size);</span>
<span class="quote">&gt; &gt;  </span>
<span class="quote">&gt; &gt;  	if (!coherent &amp;&amp; !gfpflags_allow_blocking(flags)) {</span>
<span class="quote">&gt; &gt; @@ -192,8 +188,13 @@ static void __dma_free(struct device *dev, size_t size,</span>
<span class="quote">&gt; &gt;  		       void *vaddr, dma_addr_t dma_handle,</span>
<span class="quote">&gt; &gt;  		       unsigned long attrs)</span>
<span class="quote">&gt; &gt;  {</span>
<span class="quote">&gt; &gt; -	void *swiotlb_addr = phys_to_virt(dma_to_phys(dev, dma_handle));</span>
<span class="quote">&gt; &gt; +	void *swiotlb_addr;</span>
<span class="quote">&gt; &gt;  </span>
<span class="quote">&gt; &gt; +	if (!dev) {</span>
<span class="quote">&gt; &gt; +		WARN_ONCE(1, &quot;Use an actual device structure for DMA free\n&quot;);</span>
<span class="quote">&gt; &gt; +		return;</span>
<span class="quote">&gt; &gt; +	}</span>
<span class="quote">&gt; &gt; +	swiotlb_addr = phys_to_virt(dma_to_phys(dev, dma_handle));</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I don&#39;t think we need the checks anymore. With commit 1dccb598df54</span>
<span class="quote">&gt; (&quot;arm64: simplify dma_get_ops&quot;) __generic_dma_ops() returns</span>
<span class="quote">&gt; dummy_dma_ops when dev == NULL, so the above __dma_alloc/__dma_free</span>
<span class="quote">&gt; functions would not be called.</span>
<span class="quote">&gt; </span>

We don&#39;t need the check in is_device_dma_coherent() either then right?
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=352">Catalin Marinas</a> - June 13, 2017, 9:03 a.m.</div>
<pre class="content">
On Mon, Jun 12, 2017 at 01:50:28PM -0700, Olav Haugan wrote:
<span class="quote">&gt; On 17-06-12 13:29:04, Catalin Marinas wrote:</span>
<span class="quote">&gt; &gt; On Sat, Jun 10, 2017 at 12:41:10PM -0700, Olav Haugan wrote:</span>
<span class="quote">&gt; &gt; &gt; @@ -149,6 +140,11 @@ static void *__dma_alloc(struct device *dev, size_t size,</span>
<span class="quote">&gt; &gt; &gt;  	bool coherent = is_device_dma_coherent(dev);</span>
<span class="quote">&gt; &gt; &gt;  	pgprot_t prot = __get_dma_pgprot(attrs, PAGE_KERNEL, false);</span>
<span class="quote">&gt; &gt; &gt;  </span>
<span class="quote">&gt; &gt; &gt; +	if (!dev) {</span>
<span class="quote">&gt; &gt; &gt; +		WARN_ONCE(1, &quot;Use an actual device structure for DMA allocation\n&quot;);</span>
<span class="quote">&gt; &gt; &gt; +		return NULL;</span>
<span class="quote">&gt; &gt; &gt; +	}</span>
<span class="quote">&gt; &gt; &gt; +</span>
<span class="quote">&gt; &gt; &gt;  	size = PAGE_ALIGN(size);</span>
<span class="quote">&gt; &gt; &gt;  </span>
<span class="quote">&gt; &gt; &gt;  	if (!coherent &amp;&amp; !gfpflags_allow_blocking(flags)) {</span>
<span class="quote">&gt; &gt; &gt; @@ -192,8 +188,13 @@ static void __dma_free(struct device *dev, size_t size,</span>
<span class="quote">&gt; &gt; &gt;  		       void *vaddr, dma_addr_t dma_handle,</span>
<span class="quote">&gt; &gt; &gt;  		       unsigned long attrs)</span>
<span class="quote">&gt; &gt; &gt;  {</span>
<span class="quote">&gt; &gt; &gt; -	void *swiotlb_addr = phys_to_virt(dma_to_phys(dev, dma_handle));</span>
<span class="quote">&gt; &gt; &gt; +	void *swiotlb_addr;</span>
<span class="quote">&gt; &gt; &gt;  </span>
<span class="quote">&gt; &gt; &gt; +	if (!dev) {</span>
<span class="quote">&gt; &gt; &gt; +		WARN_ONCE(1, &quot;Use an actual device structure for DMA free\n&quot;);</span>
<span class="quote">&gt; &gt; &gt; +		return;</span>
<span class="quote">&gt; &gt; &gt; +	}</span>
<span class="quote">&gt; &gt; &gt; +	swiotlb_addr = phys_to_virt(dma_to_phys(dev, dma_handle));</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; I don&#39;t think we need the checks anymore. With commit 1dccb598df54</span>
<span class="quote">&gt; &gt; (&quot;arm64: simplify dma_get_ops&quot;) __generic_dma_ops() returns</span>
<span class="quote">&gt; &gt; dummy_dma_ops when dev == NULL, so the above __dma_alloc/__dma_free</span>
<span class="quote">&gt; &gt; functions would not be called.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; We don&#39;t need the check in is_device_dma_coherent() either then right?</span>

Right. The only user of this function outside
arch/arm64/mm/dma-mapping.c is Xen (shared with arm32 under
arch/arm/xen/) but since arm32 doesn&#39;t do this NULL check either, we
should be fine.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/mm/dma-mapping.c b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">index 3216e098c058..a4b65773711d 100644</span>
<span class="p_header">--- a/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">+++ b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_chunk">@@ -95,11 +95,6 @@</span> <span class="p_context"> static void *__dma_alloc_coherent(struct device *dev, size_t size,</span>
 				  dma_addr_t *dma_handle, gfp_t flags,
 				  unsigned long attrs)
 {
<span class="p_del">-	if (dev == NULL) {</span>
<span class="p_del">-		WARN_ONCE(1, &quot;Use an actual device structure for DMA allocation\n&quot;);</span>
<span class="p_del">-		return NULL;</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
 	if (IS_ENABLED(CONFIG_ZONE_DMA) &amp;&amp;
 	    dev-&gt;coherent_dma_mask &lt;= DMA_BIT_MASK(32))
 		flags |= GFP_DMA;
<span class="p_chunk">@@ -128,10 +123,6 @@</span> <span class="p_context"> static void __dma_free_coherent(struct device *dev, size_t size,</span>
 	bool freed;
 	phys_addr_t paddr = dma_to_phys(dev, dma_handle);
 
<span class="p_del">-	if (dev == NULL) {</span>
<span class="p_del">-		WARN_ONCE(1, &quot;Use an actual device structure for DMA allocation\n&quot;);</span>
<span class="p_del">-		return;</span>
<span class="p_del">-	}</span>
 
 	freed = dma_release_from_contiguous(dev,
 					phys_to_page(paddr),
<span class="p_chunk">@@ -149,6 +140,11 @@</span> <span class="p_context"> static void *__dma_alloc(struct device *dev, size_t size,</span>
 	bool coherent = is_device_dma_coherent(dev);
 	pgprot_t prot = __get_dma_pgprot(attrs, PAGE_KERNEL, false);
 
<span class="p_add">+	if (!dev) {</span>
<span class="p_add">+		WARN_ONCE(1, &quot;Use an actual device structure for DMA allocation\n&quot;);</span>
<span class="p_add">+		return NULL;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	size = PAGE_ALIGN(size);
 
 	if (!coherent &amp;&amp; !gfpflags_allow_blocking(flags)) {
<span class="p_chunk">@@ -192,8 +188,13 @@</span> <span class="p_context"> static void __dma_free(struct device *dev, size_t size,</span>
 		       void *vaddr, dma_addr_t dma_handle,
 		       unsigned long attrs)
 {
<span class="p_del">-	void *swiotlb_addr = phys_to_virt(dma_to_phys(dev, dma_handle));</span>
<span class="p_add">+	void *swiotlb_addr;</span>
 
<span class="p_add">+	if (!dev) {</span>
<span class="p_add">+		WARN_ONCE(1, &quot;Use an actual device structure for DMA free\n&quot;);</span>
<span class="p_add">+		return;</span>
<span class="p_add">+	}</span>
<span class="p_add">+	swiotlb_addr = phys_to_virt(dma_to_phys(dev, dma_handle));</span>
 	size = PAGE_ALIGN(size);
 
 	if (!is_device_dma_coherent(dev)) {

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



