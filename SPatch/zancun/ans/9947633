
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,1/1] mm/hugetlb: Clarify OOM message on size of hugetlb and requested hugepages total - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,1/1] mm/hugetlb: Clarify OOM message on size of hugetlb and requested hugepages total</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=176341">Liam R. Howlett</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 11, 2017, 3:48 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170911154820.16203-2-Liam.Howlett@Oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9947633/mbox/"
   >mbox</a>
|
   <a href="/patch/9947633/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9947633/">/patch/9947633/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	DFFD76024A for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 11 Sep 2017 15:49:29 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D379D28C61
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 11 Sep 2017 15:49:29 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id C82CE28C62; Mon, 11 Sep 2017 15:49:29 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	UNPARSEABLE_RELAY autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 32C0028C5F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 11 Sep 2017 15:49:29 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751587AbdIKPsz (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 11 Sep 2017 11:48:55 -0400
Received: from aserp1040.oracle.com ([141.146.126.69]:31925 &quot;EHLO
	aserp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1750983AbdIKPsy (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 11 Sep 2017 11:48:54 -0400
Received: from aserv0021.oracle.com (aserv0021.oracle.com [141.146.126.233])
	by aserp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2)
	with ESMTP id v8BFmWuX030797
	(version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Mon, 11 Sep 2017 15:48:32 GMT
Received: from userv0122.oracle.com (userv0122.oracle.com [156.151.31.75])
	by aserv0021.oracle.com (8.14.4/8.14.4) with ESMTP id v8BFmWGc016242
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Mon, 11 Sep 2017 15:48:32 GMT
Received: from ubhmp0003.oracle.com (ubhmp0003.oracle.com [156.151.24.56])
	by userv0122.oracle.com (8.14.4/8.14.4) with ESMTP id v8BFmVGA006702; 
	Mon, 11 Sep 2017 15:48:31 GMT
Received: from heffner.jebus.ca (/24.246.5.213)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Mon, 11 Sep 2017 15:48:30 +0000
From: &quot;Liam R. Howlett&quot; &lt;Liam.Howlett@Oracle.com&gt;
To: linux-mm@kvack.org
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Michal Hocko &lt;mhocko@suse.com&gt;, Mike Kravetz &lt;mike.kravetz@Oracle.com&gt;,
	Andrea Arcangeli &lt;aarcange@redhat.com&gt;,
	Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Gerald Schaefer &lt;gerald.schaefer@de.ibm.com&gt;,
	zhong jiang &lt;zhongjiang@huawei.com&gt;,
	Hillf Danton &lt;hillf.zj@alibaba-inc.com&gt;,
	&quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;,
	linux-kernel@vger.kernel.org
Subject: [RFC Patch 1/1] mm/hugetlb: Clarify OOM message on size of hugetlb
	and requested hugepages total
Date: Mon, 11 Sep 2017 11:48:20 -0400
Message-Id: &lt;20170911154820.16203-2-Liam.Howlett@Oracle.com&gt;
X-Mailer: git-send-email 2.14.1.145.gb3622a4ee
In-Reply-To: &lt;20170911154820.16203-1-Liam.Howlett@Oracle.com&gt;
References: &lt;20170911154820.16203-1-Liam.Howlett@Oracle.com&gt;
X-Source-IP: aserv0021.oracle.com [141.146.126.233]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=176341">Liam R. Howlett</a> - Sept. 11, 2017, 3:48 p.m.</div>
<pre class="content">
Change the output of hugetlb_show_meminfo to give the size of the
hugetlb in more than just Kb and add a warning message if the requested
hugepages is larger than the allocated hugepages.  The warning message
for very badly configured hugepages has been removed in favour of this
method.

The new messages look like this:
----
Node 0 hugepages_total=1 hugepages_free=1 hugepages_surp=0
hugepages_size=1.00 GiB

Node 0 hugepages_total=1326 hugepages_free=1326 hugepages_surp=0
hugepages_size=2.00 MiB

hugepage_size 1.00 GiB: Requested 5 hugepages (5.00 GiB) but 1 hugepages
(1.00 GiB) were allocated.

hugepage_size 2.00 MiB: Requested 4000 hugepages (7.81 GiB) but 1326
hugepages (2.59 GiB) were allocated.
----

The old messages look like this:
----
Node 0 hugepages_total=1 hugepages_free=1 hugepages_surp=0
hugepages_size=1048576kB

Node 0 hugepages_total=1435 hugepages_free=1435 hugepages_surp=0
hugepages_size=2048kB
----
<span class="signed-off-by">
Signed-off-by: Liam R. Howlett &lt;Liam.Howlett@Oracle.com&gt;</span>
---
 include/linux/hugetlb.h |  1 +
 mm/hugetlb.c            | 35 +++++++++++++++++++++++++++++++----
 2 files changed, 32 insertions(+), 4 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137061">Michal Hocko</a> - Sept. 13, 2017, 12:42 p.m.</div>
<pre class="content">
On Mon 11-09-17 11:48:20, Liam R. Howlett wrote:
<span class="quote">&gt; Change the output of hugetlb_show_meminfo to give the size of the</span>
<span class="quote">&gt; hugetlb in more than just Kb and add a warning message if the requested</span>
<span class="quote">&gt; hugepages is larger than the allocated hugepages.  The warning message</span>
<span class="quote">&gt; for very badly configured hugepages has been removed in favour of this</span>
<span class="quote">&gt; method.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The new messages look like this:</span>
<span class="quote">&gt; ----</span>
<span class="quote">&gt; Node 0 hugepages_total=1 hugepages_free=1 hugepages_surp=0</span>
<span class="quote">&gt; hugepages_size=1.00 GiB</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Node 0 hugepages_total=1326 hugepages_free=1326 hugepages_surp=0</span>
<span class="quote">&gt; hugepages_size=2.00 MiB</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; hugepage_size 1.00 GiB: Requested 5 hugepages (5.00 GiB) but 1 hugepages</span>
<span class="quote">&gt; (1.00 GiB) were allocated.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; hugepage_size 2.00 MiB: Requested 4000 hugepages (7.81 GiB) but 1326</span>
<span class="quote">&gt; hugepages (2.59 GiB) were allocated.</span>
<span class="quote">&gt; ----</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The old messages look like this:</span>
<span class="quote">&gt; ----</span>
<span class="quote">&gt; Node 0 hugepages_total=1 hugepages_free=1 hugepages_surp=0</span>
<span class="quote">&gt; hugepages_size=1048576kB</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Node 0 hugepages_total=1435 hugepages_free=1435 hugepages_surp=0</span>
<span class="quote">&gt; hugepages_size=2048kB</span>
<span class="quote">&gt; ----</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Liam R. Howlett &lt;Liam.Howlett@Oracle.com&gt;</span>

To be honest, I really dislike this. It doesn&#39;t really add anything
really new to the OOM report. We already know how much memory is
unreclaimable because it is reserved for hugetlb usage. Why does the
requested size make any difference? We could fail to allocate requested
number of pages because of memory pressure or fragmentation without any
sign of misconfiguration.

Also req_max_huge_pages would have to be per NUMA node othwerise you are
just losing information when allocation hugetlb pages via sysfs per node
interface.
<span class="quote">
&gt; ---</span>
<span class="quote">&gt;  include/linux/hugetlb.h |  1 +</span>
<span class="quote">&gt;  mm/hugetlb.c            | 35 +++++++++++++++++++++++++++++++----</span>
<span class="quote">&gt;  2 files changed, 32 insertions(+), 4 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/include/linux/hugetlb.h b/include/linux/hugetlb.h</span>
<span class="quote">&gt; index b857fc8cc2ec..9f188d621ae0 100644</span>
<span class="quote">&gt; --- a/include/linux/hugetlb.h</span>
<span class="quote">&gt; +++ b/include/linux/hugetlb.h</span>
<span class="quote">&gt; @@ -313,6 +313,7 @@ struct hstate {</span>
<span class="quote">&gt;  	unsigned int order;</span>
<span class="quote">&gt;  	unsigned long mask;</span>
<span class="quote">&gt;  	unsigned long max_huge_pages;</span>
<span class="quote">&gt; +	unsigned long req_max_huge_pages;</span>
<span class="quote">&gt;  	unsigned long nr_huge_pages;</span>
<span class="quote">&gt;  	unsigned long free_huge_pages;</span>
<span class="quote">&gt;  	unsigned long resv_huge_pages;</span>
<span class="quote">&gt; diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="quote">&gt; index 3eedb187e549..83c06ce89bfd 100644</span>
<span class="quote">&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt; @@ -1461,6 +1461,7 @@ static int dissolve_free_huge_page(struct page *page)</span>
<span class="quote">&gt;  		h-&gt;free_huge_pages--;</span>
<span class="quote">&gt;  		h-&gt;free_huge_pages_node[nid]--;</span>
<span class="quote">&gt;  		h-&gt;max_huge_pages--;</span>
<span class="quote">&gt; +		h-&gt;req_max_huge_pages--;</span>
<span class="quote">&gt;  		update_and_free_page(h, head);</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt;  out:</span>
<span class="quote">&gt; @@ -2430,6 +2431,7 @@ static ssize_t __nr_hugepages_store_common(bool obey_mempolicy,</span>
<span class="quote">&gt;  		goto out;</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +	h-&gt;req_max_huge_pages = count;</span>
<span class="quote">&gt;  	if (nid == NUMA_NO_NODE) {</span>
<span class="quote">&gt;  		/*</span>
<span class="quote">&gt;  		 * global hstate attribute</span>
<span class="quote">&gt; @@ -3026,14 +3028,39 @@ void hugetlb_show_meminfo(void)</span>
<span class="quote">&gt;  	if (!hugepages_supported())</span>
<span class="quote">&gt;  		return;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -	for_each_node_state(nid, N_MEMORY)</span>
<span class="quote">&gt; -		for_each_hstate(h)</span>
<span class="quote">&gt; -			pr_info(&quot;Node %d hugepages_total=%u hugepages_free=%u hugepages_surp=%u hugepages_size=%lukB\n&quot;,</span>
<span class="quote">&gt; +	for_each_node_state(nid, N_MEMORY) {</span>
<span class="quote">&gt; +		for_each_hstate(h) {</span>
<span class="quote">&gt; +			char hp_size[32];</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +			string_get_size(huge_page_size(h), 1, STRING_UNITS_2,</span>
<span class="quote">&gt; +					hp_size, 32);</span>
<span class="quote">&gt; +			pr_info(&quot;Node %d hugepages_total=%u hugepages_free=%u hugepages_surp=%u hugepages_size=%s\n&quot;,</span>
<span class="quote">&gt;  				nid,</span>
<span class="quote">&gt;  				h-&gt;nr_huge_pages_node[nid],</span>
<span class="quote">&gt;  				h-&gt;free_huge_pages_node[nid],</span>
<span class="quote">&gt;  				h-&gt;surplus_huge_pages_node[nid],</span>
<span class="quote">&gt; -				1UL &lt;&lt; (huge_page_order(h) + PAGE_SHIFT - 10));</span>
<span class="quote">&gt; +				hp_size);</span>
<span class="quote">&gt; +		}</span>
<span class="quote">&gt; +	}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	for_each_hstate(h) {</span>
<span class="quote">&gt; +		if (h-&gt;max_huge_pages &lt; h-&gt;req_max_huge_pages) {</span>
<span class="quote">&gt; +			char hp_size[32];</span>
<span class="quote">&gt; +			char hpr_size[32];</span>
<span class="quote">&gt; +			char hpt_size[32];</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +			string_get_size(huge_page_size(h), 1, STRING_UNITS_2,</span>
<span class="quote">&gt; +					hp_size, 32);</span>
<span class="quote">&gt; +			string_get_size(huge_page_size(h),</span>
<span class="quote">&gt; +					h-&gt;req_max_huge_pages, STRING_UNITS_2,</span>
<span class="quote">&gt; +					hpr_size, 32);</span>
<span class="quote">&gt; +			string_get_size(huge_page_size(h), h-&gt;max_huge_pages,</span>
<span class="quote">&gt; +					STRING_UNITS_2, hpt_size, 32);</span>
<span class="quote">&gt; +			pr_warn(&quot;hugepage_size %s: Requested %lu hugepages (%s) but %lu hugepages (%s) were allocated.\n&quot;,</span>
<span class="quote">&gt; +				hp_size, h-&gt;req_max_huge_pages, hpr_size,</span>
<span class="quote">&gt; +				h-&gt;max_huge_pages, hpt_size);</span>
<span class="quote">&gt; +		}</span>
<span class="quote">&gt; +	}</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  void hugetlb_report_usage(struct seq_file *m, struct mm_struct *mm)</span>
<span class="quote">&gt; -- </span>
<span class="quote">&gt; 2.14.1.145.gb3622a4ee</span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=176341">Liam R. Howlett</a> - Sept. 13, 2017, 3:52 p.m.</div>
<pre class="content">
* Michal Hocko &lt;mhocko@kernel.org&gt; [170913 08:43]:
<span class="quote">&gt; On Mon 11-09-17 11:48:20, Liam R. Howlett wrote:</span>
<span class="quote">&gt; &gt; Change the output of hugetlb_show_meminfo to give the size of the</span>
<span class="quote">&gt; &gt; hugetlb in more than just Kb and add a warning message if the requested</span>
<span class="quote">&gt; &gt; hugepages is larger than the allocated hugepages.  The warning message</span>
<span class="quote">&gt; &gt; for very badly configured hugepages has been removed in favour of this</span>
<span class="quote">&gt; &gt; method.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; The new messages look like this:</span>
<span class="quote">&gt; &gt; ----</span>
<span class="quote">&gt; &gt; Node 0 hugepages_total=1 hugepages_free=1 hugepages_surp=0</span>
<span class="quote">&gt; &gt; hugepages_size=1.00 GiB</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Node 0 hugepages_total=1326 hugepages_free=1326 hugepages_surp=0</span>
<span class="quote">&gt; &gt; hugepages_size=2.00 MiB</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; hugepage_size 1.00 GiB: Requested 5 hugepages (5.00 GiB) but 1 hugepages</span>
<span class="quote">&gt; &gt; (1.00 GiB) were allocated.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; hugepage_size 2.00 MiB: Requested 4000 hugepages (7.81 GiB) but 1326</span>
<span class="quote">&gt; &gt; hugepages (2.59 GiB) were allocated.</span>
<span class="quote">&gt; &gt; ----</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; The old messages look like this:</span>
<span class="quote">&gt; &gt; ----</span>
<span class="quote">&gt; &gt; Node 0 hugepages_total=1 hugepages_free=1 hugepages_surp=0</span>
<span class="quote">&gt; &gt; hugepages_size=1048576kB</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Node 0 hugepages_total=1435 hugepages_free=1435 hugepages_surp=0</span>
<span class="quote">&gt; &gt; hugepages_size=2048kB</span>
<span class="quote">&gt; &gt; ----</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Signed-off-by: Liam R. Howlett &lt;Liam.Howlett@Oracle.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; To be honest, I really dislike this. It doesn&#39;t really add anything</span>
<span class="quote">&gt; really new to the OOM report. We already know how much memory is</span>
<span class="quote">&gt; unreclaimable because it is reserved for hugetlb usage. Why does the</span>
<span class="quote">&gt; requested size make any difference? We could fail to allocate requested</span>
<span class="quote">&gt; number of pages because of memory pressure or fragmentation without any</span>
<span class="quote">&gt; sign of misconfiguration.</span>

Okay, thanks.  I was trying to address the issues you had with the
previous logging addition.

I understand that the OOM report is clear to many, but I thought it
would be more clear if the hugepage size was printed in a human readable
format instead of KB, especially with platforms supporting a lot of
huge page sizes and we already use the formatting elsewhere.

My thoughts for the requested size was to expose the failure to allocate
a resource which currently doesn&#39;t have any reporting back to the user -
except on boot failures, which you also disliked.  I thought reporting
in the OOM message would be less of a change than reporting at
allocation time and it would be more clear what happened on poorly
configured systems as the failure would be printed closer to the panic.
<span class="quote">
&gt; </span>
<span class="quote">&gt; Also req_max_huge_pages would have to be per NUMA node othwerise you are</span>
<span class="quote">&gt; just losing information when allocation hugetlb pages via sysfs per node</span>
<span class="quote">&gt; interface.</span>
<span class="quote">&gt; </span>

Thank you for your thorough review and time,
Liam
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/linux/hugetlb.h b/include/linux/hugetlb.h</span>
<span class="p_header">index b857fc8cc2ec..9f188d621ae0 100644</span>
<span class="p_header">--- a/include/linux/hugetlb.h</span>
<span class="p_header">+++ b/include/linux/hugetlb.h</span>
<span class="p_chunk">@@ -313,6 +313,7 @@</span> <span class="p_context"> struct hstate {</span>
 	unsigned int order;
 	unsigned long mask;
 	unsigned long max_huge_pages;
<span class="p_add">+	unsigned long req_max_huge_pages;</span>
 	unsigned long nr_huge_pages;
 	unsigned long free_huge_pages;
 	unsigned long resv_huge_pages;
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 3eedb187e549..83c06ce89bfd 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -1461,6 +1461,7 @@</span> <span class="p_context"> static int dissolve_free_huge_page(struct page *page)</span>
 		h-&gt;free_huge_pages--;
 		h-&gt;free_huge_pages_node[nid]--;
 		h-&gt;max_huge_pages--;
<span class="p_add">+		h-&gt;req_max_huge_pages--;</span>
 		update_and_free_page(h, head);
 	}
 out:
<span class="p_chunk">@@ -2430,6 +2431,7 @@</span> <span class="p_context"> static ssize_t __nr_hugepages_store_common(bool obey_mempolicy,</span>
 		goto out;
 	}
 
<span class="p_add">+	h-&gt;req_max_huge_pages = count;</span>
 	if (nid == NUMA_NO_NODE) {
 		/*
 		 * global hstate attribute
<span class="p_chunk">@@ -3026,14 +3028,39 @@</span> <span class="p_context"> void hugetlb_show_meminfo(void)</span>
 	if (!hugepages_supported())
 		return;
 
<span class="p_del">-	for_each_node_state(nid, N_MEMORY)</span>
<span class="p_del">-		for_each_hstate(h)</span>
<span class="p_del">-			pr_info(&quot;Node %d hugepages_total=%u hugepages_free=%u hugepages_surp=%u hugepages_size=%lukB\n&quot;,</span>
<span class="p_add">+	for_each_node_state(nid, N_MEMORY) {</span>
<span class="p_add">+		for_each_hstate(h) {</span>
<span class="p_add">+			char hp_size[32];</span>
<span class="p_add">+</span>
<span class="p_add">+			string_get_size(huge_page_size(h), 1, STRING_UNITS_2,</span>
<span class="p_add">+					hp_size, 32);</span>
<span class="p_add">+			pr_info(&quot;Node %d hugepages_total=%u hugepages_free=%u hugepages_surp=%u hugepages_size=%s\n&quot;,</span>
 				nid,
 				h-&gt;nr_huge_pages_node[nid],
 				h-&gt;free_huge_pages_node[nid],
 				h-&gt;surplus_huge_pages_node[nid],
<span class="p_del">-				1UL &lt;&lt; (huge_page_order(h) + PAGE_SHIFT - 10));</span>
<span class="p_add">+				hp_size);</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	for_each_hstate(h) {</span>
<span class="p_add">+		if (h-&gt;max_huge_pages &lt; h-&gt;req_max_huge_pages) {</span>
<span class="p_add">+			char hp_size[32];</span>
<span class="p_add">+			char hpr_size[32];</span>
<span class="p_add">+			char hpt_size[32];</span>
<span class="p_add">+</span>
<span class="p_add">+			string_get_size(huge_page_size(h), 1, STRING_UNITS_2,</span>
<span class="p_add">+					hp_size, 32);</span>
<span class="p_add">+			string_get_size(huge_page_size(h),</span>
<span class="p_add">+					h-&gt;req_max_huge_pages, STRING_UNITS_2,</span>
<span class="p_add">+					hpr_size, 32);</span>
<span class="p_add">+			string_get_size(huge_page_size(h), h-&gt;max_huge_pages,</span>
<span class="p_add">+					STRING_UNITS_2, hpt_size, 32);</span>
<span class="p_add">+			pr_warn(&quot;hugepage_size %s: Requested %lu hugepages (%s) but %lu hugepages (%s) were allocated.\n&quot;,</span>
<span class="p_add">+				hp_size, h-&gt;req_max_huge_pages, hpr_size,</span>
<span class="p_add">+				h-&gt;max_huge_pages, hpt_size);</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
 }
 
 void hugetlb_report_usage(struct seq_file *m, struct mm_struct *mm)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



