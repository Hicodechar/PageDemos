
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code explicitly non-modular vs CONFIG_TIMER_STATS) - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code explicitly non-modular vs CONFIG_TIMER_STATS)</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 28, 2016, 10:18 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;56AA939D.6080104@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8154701/mbox/"
   >mbox</a>
|
   <a href="/patch/8154701/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8154701/">/patch/8154701/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 876E8BEEE5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 28 Jan 2016 22:18:33 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id D10CE202C8
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 28 Jan 2016 22:18:32 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id EE48620225
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 28 Jan 2016 22:18:31 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S934727AbcA1WS2 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 28 Jan 2016 17:18:28 -0500
Received: from userp1040.oracle.com ([156.151.31.81]:18658 &quot;EHLO
	userp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S933533AbcA1WSZ (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 28 Jan 2016 17:18:25 -0500
Received: from aserv0021.oracle.com (aserv0021.oracle.com [141.146.126.233])
	by userp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2)
	with ESMTP id u0SMI7A3026973
	(version=TLSv1 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Thu, 28 Jan 2016 22:18:08 GMT
Received: from aserv0121.oracle.com (aserv0121.oracle.com [141.146.126.235])
	by aserv0021.oracle.com (8.13.8/8.13.8) with ESMTP id
	u0SMI6NF023189
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL); 
	Thu, 28 Jan 2016 22:18:06 GMT
Received: from abhmp0009.oracle.com (abhmp0009.oracle.com [141.146.116.15])
	by aserv0121.oracle.com (8.13.8/8.13.8) with ESMTP id
	u0SMI6Wm014558; Thu, 28 Jan 2016 22:18:06 GMT
Received: from [192.168.1.82] (/23.117.50.170)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Thu, 28 Jan 2016 14:18:06 -0800
Subject: Re: Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code
	explicitly non-modular vs CONFIG_TIMER_STATS)
To: Paul Gortmaker &lt;paul.gortmaker@windriver.com&gt;,
	Christian Borntraeger &lt;borntraeger@de.ibm.com&gt;
References: &lt;56A9DC76.2030502@de.ibm.com&gt;
	&lt;059e01d159af$e4317390$ac945ab0$@alibaba-inc.com&gt;
	&lt;56A9E404.7000409@de.ibm.com&gt; &lt;20160128143723.GN8889@windriver.com&gt;
	&lt;56AA2E44.4070709@oracle.com&gt;
Cc: Hillf Danton &lt;hillf.zj@alibaba-inc.com&gt;,
	&quot;&#39;Andrew Morton&#39;&quot; &lt;akpm@linux-foundation.org&gt;,
	&quot;&#39;Nadia Yvette Chambers&#39;&quot; &lt;nyc@holomorphy.com&gt;,
	&quot;&#39;Alexander Viro&#39;&quot; &lt;viro@zeniv.linux.org.uk&gt;,
	&quot;&#39;Naoya Horiguchi&#39;&quot; &lt;n-horiguchi@ah.jp.nec.com&gt;,
	&quot;&#39;David Rientjes&#39;&quot; &lt;rientjes@google.com&gt;,
	&quot;&#39;Davidlohr Bueso&#39;&quot; &lt;dave@stgolabs.net&gt;,
	&quot;&#39;Linux Kernel Mailing List&#39;&quot; &lt;linux-kernel@vger.kernel.org&gt;
From: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
Message-ID: &lt;56AA939D.6080104@oracle.com&gt;
Date: Thu, 28 Jan 2016 14:18:05 -0800
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101
	Thunderbird/38.5.0
MIME-Version: 1.0
In-Reply-To: &lt;56AA2E44.4070709@oracle.com&gt;
Content-Type: text/plain; charset=windows-1252
Content-Transfer-Encoding: 7bit
X-Source-IP: aserv0021.oracle.com [141.146.126.233]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - Jan. 28, 2016, 10:18 p.m.</div>
<pre class="content">
On 01/28/2016 07:05 AM, Mike Kravetz wrote:
<span class="quote">&gt; On 01/28/2016 06:37 AM, Paul Gortmaker wrote:</span>
<span class="quote">&gt;&gt; [Re: Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code explicitly non-modular vs CONFIG_TIMER_STATS)] On 28/01/2016 (Thu 10:48) Christian Borntraeger wrote:</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; On 01/28/2016 10:40 AM, Hillf Danton wrote:</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; Paul,</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; the commit 3e89e1c5ea842 (&quot;hugetlb: make mm and fs code explicitly non-modular&quot;)</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; triggers belows warning/oops, if CONFIG_TIMER_STATS is set.</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; Looking at the patch the only &quot;real&quot; change is the init_call,</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; and indeed</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; @@ -2653,7 +2653,7 @@ static int __init hugetlb_init(void)</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;                 mutex_init(&amp;hugetlb_fault_mutex_table[i]);</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;         return 0;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;  }</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; -subsys_initcall(hugetlb_init);</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; +device_initcall(hugetlb_init);</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;  /* Should be called on processing a hugepagesz=... option */</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;  void __init hugetlb_add_hstate(unsigned int order)</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; makes the problem go away.</span>
<span class="quote">&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt; Helps more if a patch is delivered.</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; The problem is that the original change was intentional. So I do not not</span>
<span class="quote">&gt;&gt;&gt; what the right fix is.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Thanks for the report ; let me see if I can work out what TIMER_STATS</span>
<span class="quote">&gt;&gt; is doing to cause this sometime today.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Hmmm?  CONFIG_TIMER_STATS is set in my config and I am not seeing the</span>
<span class="quote">&gt; issue.  Not sure, but it looks like Christian is building/running on</span>
<span class="quote">&gt; s390. This &#39;might&#39; be a contributing factor.</span>

I do not see how CONFIG_TIMER_STATS contributes to this issue.  However,
on s390 numa nodes are initialized at device_initcall in the appropriately
named routine numa_init_late().  hugetlb_init must be done after numa
initialization.  So, I suggest we just move the hugetlb initialization
back to device_initcall.  What do you think Paul?  Patch below.

Is there a way to add checks for this type of thing in the code?  I&#39;m
guessing not.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1553">Paul Gortmaker</a> - Jan. 28, 2016, 10:59 p.m.</div>
<pre class="content">
[Re: Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code explicitly non-modular vs CONFIG_TIMER_STATS)] On 28/01/2016 (Thu 14:18) Mike Kravetz wrote:
<span class="quote">
&gt; On 01/28/2016 07:05 AM, Mike Kravetz wrote:</span>
<span class="quote">&gt; &gt; On 01/28/2016 06:37 AM, Paul Gortmaker wrote:</span>
<span class="quote">&gt; &gt;&gt; [Re: Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code explicitly non-modular vs CONFIG_TIMER_STATS)] On 28/01/2016 (Thu 10:48) Christian Borntraeger wrote:</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;&gt; On 01/28/2016 10:40 AM, Hillf Danton wrote:</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt; Paul,</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt; the commit 3e89e1c5ea842 (&quot;hugetlb: make mm and fs code explicitly non-modular&quot;)</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt; triggers belows warning/oops, if CONFIG_TIMER_STATS is set.</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt; Looking at the patch the only &quot;real&quot; change is the init_call,</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt; and indeed</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt; @@ -2653,7 +2653,7 @@ static int __init hugetlb_init(void)</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt;                 mutex_init(&amp;hugetlb_fault_mutex_table[i]);</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt;         return 0;</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt;  }</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt; -subsys_initcall(hugetlb_init);</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt; +device_initcall(hugetlb_init);</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt;  /* Should be called on processing a hugepagesz=... option */</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt;  void __init hugetlb_add_hstate(unsigned int order)</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;&gt; makes the problem go away.</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt; Helps more if a patch is delivered.</span>
<span class="quote">&gt; &gt;&gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;&gt; The problem is that the original change was intentional. So I do not not</span>
<span class="quote">&gt; &gt;&gt;&gt; what the right fix is.</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; Thanks for the report ; let me see if I can work out what TIMER_STATS</span>
<span class="quote">&gt; &gt;&gt; is doing to cause this sometime today.</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Hmmm?  CONFIG_TIMER_STATS is set in my config and I am not seeing the</span>
<span class="quote">&gt; &gt; issue.  Not sure, but it looks like Christian is building/running on</span>
<span class="quote">&gt; &gt; s390. This &#39;might&#39; be a contributing factor.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I do not see how CONFIG_TIMER_STATS contributes to this issue.  However,</span>

I looked at all the TIMER_STATS ifdef blocks and was also thinking the
same thing.  If it did toggle the problem then it was a red herring.
My test config had this set and I retested x86-64 today with it set.
<span class="quote">
&gt; on s390 numa nodes are initialized at device_initcall in the appropriately</span>
<span class="quote">&gt; named routine numa_init_late().  hugetlb_init must be done after numa</span>
<span class="quote">&gt; initialization.  So, I suggest we just move the hugetlb initialization</span>
<span class="quote">&gt; back to device_initcall.  What do you think Paul?  Patch below.</span>

We could, but that ignores the fact that the original priorities worked
by chance and not by design, as my commit log indicates.  Instead, I&#39;d
like to know why S390 does core NUMA operations as late as
device_initcall.   Setting up NUMA nodes should be arch_initcall or
subsys_initcall, or earlier --- it should not be device_initcall as if
it was some leaf node UART driver or ethernet driver.  There is no
endpoint &quot;device&quot; in NUMA in this context.

If possible, I&#39;d rather us look at the s390 ordering vs. doing a partial
revert of what is IMHO a sensible change.

Can I do qemu s390 defconfig boots to see this locally, or is that
simply unobtanium?  I&#39;d like to resolve this since I caused it, but I&#39;d
also like to avoid making a knee-jerk revert to do so.

Thanks,
P.
--
<span class="quote">
&gt; </span>
<span class="quote">&gt; Is there a way to add checks for this type of thing in the code?  I&#39;m</span>
<span class="quote">&gt; guessing not.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -- </span>
<span class="quote">&gt; Mike Kravetz</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; hugetlb: move hugetlb_init and init_hugetlbfs_fs to device_initcall level</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; hugetlb_init() must be called after numa initialization for all</span>
<span class="quote">&gt; architectures.  Currently, numa initialization happens as late as</span>
<span class="quote">&gt; device_initcall.  Therefore, move hugetlb_init to device_initcall</span>
<span class="quote">&gt; level.  init_hugetlbfs_fs() depends on hugetlb_init(), so move it</span>
<span class="quote">&gt; to device_initcall as well.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Fixes: 3e89e1c5ea (&quot;hugetlb: make mm and fs code explicitly non-modular&quot;)</span>
<span class="quote">&gt; Reported-by: Christian Borntraeger &lt;borntraeger@de.ibm.com&gt;</span>
<span class="quote">&gt; Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  fs/hugetlbfs/inode.c | 3 ++-</span>
<span class="quote">&gt;  mm/hugetlb.c         | 6 +++++-</span>
<span class="quote">&gt;  2 files changed, 7 insertions(+), 2 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/fs/hugetlbfs/inode.c b/fs/hugetlbfs/inode.c</span>
<span class="quote">&gt; index 540ddc9..d27d3f6 100644</span>
<span class="quote">&gt; --- a/fs/hugetlbfs/inode.c</span>
<span class="quote">&gt; +++ b/fs/hugetlbfs/inode.c</span>
<span class="quote">&gt; @@ -1363,4 +1363,5 @@ static int __init init_hugetlbfs_fs(void)</span>
<span class="quote">&gt;   out2:</span>
<span class="quote">&gt;  	return error;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -fs_initcall(init_hugetlbfs_fs)</span>
<span class="quote">&gt; +/* Must happen after hugetlb_init() */</span>
<span class="quote">&gt; +device_initcall(init_hugetlbfs_fs)</span>
<span class="quote">&gt; diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="quote">&gt; index 12908dc..a4c0015 100644</span>
<span class="quote">&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt; @@ -2653,7 +2653,11 @@ static int __init hugetlb_init(void)</span>
<span class="quote">&gt;  		mutex_init(&amp;hugetlb_fault_mutex_table[i]);</span>
<span class="quote">&gt;  	return 0;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -subsys_initcall(hugetlb_init);</span>
<span class="quote">&gt; +/*</span>
<span class="quote">&gt; + * hugetlb_init must be called after numa initialization for all</span>
<span class="quote">&gt; architectures.</span>
<span class="quote">&gt; + * Currently, this is as late as device_initcall().</span>
<span class="quote">&gt; + */</span>
<span class="quote">&gt; +device_initcall(hugetlb_init);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  /* Should be called on processing a hugepagesz=... option */</span>
<span class="quote">&gt;  void __init hugetlb_add_hstate(unsigned int order)</span>
<span class="quote">&gt; -- </span>
<span class="quote">&gt; 2.4.3</span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - Jan. 29, 2016, 12:27 a.m.</div>
<pre class="content">
On 01/28/2016 02:59 PM, Paul Gortmaker wrote:
<span class="quote">&gt; [Re: Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code explicitly non-modular vs CONFIG_TIMER_STATS)] On 28/01/2016 (Thu 14:18) Mike Kravetz wrote:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;&gt; On 01/28/2016 07:05 AM, Mike Kravetz wrote:</span>
<span class="quote">&gt;&gt;&gt; On 01/28/2016 06:37 AM, Paul Gortmaker wrote:</span>
<span class="quote">&gt;&gt;&gt;&gt; [Re: Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code explicitly non-modular vs CONFIG_TIMER_STATS)] On 28/01/2016 (Thu 10:48) Christian Borntraeger wrote:</span>
<span class="quote">&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; On 01/28/2016 10:40 AM, Hillf Danton wrote:</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt; Paul,</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt; the commit 3e89e1c5ea842 (&quot;hugetlb: make mm and fs code explicitly non-modular&quot;)</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt; triggers belows warning/oops, if CONFIG_TIMER_STATS is set.</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt; Looking at the patch the only &quot;real&quot; change is the init_call,</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt; and indeed</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt; @@ -2653,7 +2653,7 @@ static int __init hugetlb_init(void)</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;                 mutex_init(&amp;hugetlb_fault_mutex_table[i]);</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;         return 0;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;  }</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt; -subsys_initcall(hugetlb_init);</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt; +device_initcall(hugetlb_init);</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;  /* Should be called on processing a hugepagesz=... option */</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;  void __init hugetlb_add_hstate(unsigned int order)</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt; makes the problem go away.</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt; Helps more if a patch is delivered.</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; The problem is that the original change was intentional. So I do not not</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; what the right fix is.</span>
<span class="quote">&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt; Thanks for the report ; let me see if I can work out what TIMER_STATS</span>
<span class="quote">&gt;&gt;&gt;&gt; is doing to cause this sometime today.</span>
<span class="quote">&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; Hmmm?  CONFIG_TIMER_STATS is set in my config and I am not seeing the</span>
<span class="quote">&gt;&gt;&gt; issue.  Not sure, but it looks like Christian is building/running on</span>
<span class="quote">&gt;&gt;&gt; s390. This &#39;might&#39; be a contributing factor.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; I do not see how CONFIG_TIMER_STATS contributes to this issue.  However,</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I looked at all the TIMER_STATS ifdef blocks and was also thinking the</span>
<span class="quote">&gt; same thing.  If it did toggle the problem then it was a red herring.</span>
<span class="quote">&gt; My test config had this set and I retested x86-64 today with it set.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;&gt; on s390 numa nodes are initialized at device_initcall in the appropriately</span>
<span class="quote">&gt;&gt; named routine numa_init_late().  hugetlb_init must be done after numa</span>
<span class="quote">&gt;&gt; initialization.  So, I suggest we just move the hugetlb initialization</span>
<span class="quote">&gt;&gt; back to device_initcall.  What do you think Paul?  Patch below.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; We could, but that ignores the fact that the original priorities worked</span>
<span class="quote">&gt; by chance and not by design, as my commit log indicates.  Instead, I&#39;d</span>
<span class="quote">&gt; like to know why S390 does core NUMA operations as late as</span>
<span class="quote">&gt; device_initcall.   Setting up NUMA nodes should be arch_initcall or</span>
<span class="quote">&gt; subsys_initcall, or earlier --- it should not be device_initcall as if</span>
<span class="quote">&gt; it was some leaf node UART driver or ethernet driver.  There is no</span>
<span class="quote">&gt; endpoint &quot;device&quot; in NUMA in this context.</span>

This is in linux-next after 4.5-rc1

commit 2d0f76a6ca1f2cdcffca7ce130f67ec61caa0999
Author: Michael Holzheu &lt;holzheu@linux.vnet.ibm.com&gt;
Date:   Wed Jan 20 19:22:16 2016 +0100

    s390/numa: move numa_init_late() from device to arch_initcall

    Commit 3e89e1c5ea (&quot;hugetlb: make mm and fs code explicitly
non-modular&quot;)
    moves hugetlb_init() from module_init to subsys_initcall.

    The hugetlb_init()-&gt;hugetlb_register_node() code accesses
&quot;node-&gt;dev.kobj&quot;
    which is initialized in numa_init_late().

    Since numa_init_late() is a device_initcall which is called *after*
    subsys_initcall the above mentioned patch breaks NUMA on s390.

    So fix this and move numa_init_late() to arch_initcall.

    Fixes: 3e89e1c5ea (&quot;hugetlb: make mm and fs code explicitly
non-modular&quot;)
<span class="reviewed-by">    Reviewed-by: Heiko Carstens &lt;heiko.carstens@de.ibm.com&gt;</span>
<span class="signed-off-by">    Signed-off-by: Michael Holzheu &lt;holzheu@linux.vnet.ibm.com&gt;</span>
<span class="signed-off-by">    Signed-off-by: Martin Schwidefsky &lt;schwidefsky@de.ibm.com&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=447">Christian Borntraeger</a> - Jan. 29, 2016, 8:23 a.m.</div>
<pre class="content">
On 01/29/2016 01:27 AM, Mike Kravetz wrote:
<span class="quote">&gt; On 01/28/2016 02:59 PM, Paul Gortmaker wrote:</span>
<span class="quote">&gt;&gt; [Re: Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code explicitly non-modular vs CONFIG_TIMER_STATS)] On 28/01/2016 (Thu 14:18) Mike Kravetz wrote:</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; On 01/28/2016 07:05 AM, Mike Kravetz wrote:</span>
<span class="quote">&gt;&gt;&gt;&gt; On 01/28/2016 06:37 AM, Paul Gortmaker wrote:</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; [Re: Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code explicitly non-modular vs CONFIG_TIMER_STATS)] On 28/01/2016 (Thu 10:48) Christian Borntraeger wrote:</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt; On 01/28/2016 10:40 AM, Hillf Danton wrote:</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Paul,</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; the commit 3e89e1c5ea842 (&quot;hugetlb: make mm and fs code explicitly non-modular&quot;)</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; triggers belows warning/oops, if CONFIG_TIMER_STATS is set.</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Looking at the patch the only &quot;real&quot; change is the init_call,</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; and indeed</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; @@ -2653,7 +2653,7 @@ static int __init hugetlb_init(void)</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;                 mutex_init(&amp;hugetlb_fault_mutex_table[i]);</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;         return 0;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;  }</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; -subsys_initcall(hugetlb_init);</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; +device_initcall(hugetlb_init);</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;  /* Should be called on processing a hugepagesz=... option */</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;  void __init hugetlb_add_hstate(unsigned int order)</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; makes the problem go away.</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;&gt; Helps more if a patch is delivered.</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt; The problem is that the original change was intentional. So I do not not</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;&gt; what the right fix is.</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; Thanks for the report ; let me see if I can work out what TIMER_STATS</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt; is doing to cause this sometime today.</span>
<span class="quote">&gt;&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt; Hmmm?  CONFIG_TIMER_STATS is set in my config and I am not seeing the</span>
<span class="quote">&gt;&gt;&gt;&gt; issue.  Not sure, but it looks like Christian is building/running on</span>
<span class="quote">&gt;&gt;&gt;&gt; s390. This &#39;might&#39; be a contributing factor.</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; I do not see how CONFIG_TIMER_STATS contributes to this issue.  However,</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; I looked at all the TIMER_STATS ifdef blocks and was also thinking the</span>
<span class="quote">&gt;&gt; same thing.  If it did toggle the problem then it was a red herring.</span>
<span class="quote">&gt;&gt; My test config had this set and I retested x86-64 today with it set.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; on s390 numa nodes are initialized at device_initcall in the appropriately</span>
<span class="quote">&gt;&gt;&gt; named routine numa_init_late().  hugetlb_init must be done after numa</span>
<span class="quote">&gt;&gt;&gt; initialization.  So, I suggest we just move the hugetlb initialization</span>
<span class="quote">&gt;&gt;&gt; back to device_initcall.  What do you think Paul?  Patch below.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; We could, but that ignores the fact that the original priorities worked</span>
<span class="quote">&gt;&gt; by chance and not by design, as my commit log indicates.  Instead, I&#39;d</span>
<span class="quote">&gt;&gt; like to know why S390 does core NUMA operations as late as</span>
<span class="quote">&gt;&gt; device_initcall.   Setting up NUMA nodes should be arch_initcall or</span>
<span class="quote">&gt;&gt; subsys_initcall, or earlier --- it should not be device_initcall as if</span>
<span class="quote">&gt;&gt; it was some leaf node UART driver or ethernet driver.  There is no</span>
<span class="quote">&gt;&gt; endpoint &quot;device&quot; in NUMA in this context.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This is in linux-next after 4.5-rc1</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; commit 2d0f76a6ca1f2cdcffca7ce130f67ec61caa0999</span>
<span class="quote">&gt; Author: Michael Holzheu &lt;holzheu@linux.vnet.ibm.com&gt;</span>
<span class="quote">&gt; Date:   Wed Jan 20 19:22:16 2016 +0100</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;     s390/numa: move numa_init_late() from device to arch_initcall</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;     Commit 3e89e1c5ea (&quot;hugetlb: make mm and fs code explicitly</span>
<span class="quote">&gt; non-modular&quot;)</span>
<span class="quote">&gt;     moves hugetlb_init() from module_init to subsys_initcall.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;     The hugetlb_init()-&gt;hugetlb_register_node() code accesses</span>
<span class="quote">&gt; &quot;node-&gt;dev.kobj&quot;</span>
<span class="quote">&gt;     which is initialized in numa_init_late().</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;     Since numa_init_late() is a device_initcall which is called *after*</span>
<span class="quote">&gt;     subsys_initcall the above mentioned patch breaks NUMA on s390.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;     So fix this and move numa_init_late() to arch_initcall.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;     Fixes: 3e89e1c5ea (&quot;hugetlb: make mm and fs code explicitly</span>
<span class="quote">&gt; non-modular&quot;)</span>
<span class="quote">&gt;     Reviewed-by: Heiko Carstens &lt;heiko.carstens@de.ibm.com&gt;</span>
<span class="quote">&gt;     Signed-off-by: Michael Holzheu &lt;holzheu@linux.vnet.ibm.com&gt;</span>
<span class="quote">&gt;     Signed-off-by: Martin Schwidefsky &lt;schwidefsky@de.ibm.com&gt;</span>
<span class="quote">&gt; </span>


Ah, ok. thanks. Yes that makes a lot of sense. Thanks for pointing me
to this patch.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1553">Paul Gortmaker</a> - Jan. 29, 2016, 2:24 p.m.</div>
<pre class="content">
[Re: Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code explicitly non-modular vs CONFIG_TIMER_STATS)] On 28/01/2016 (Thu 16:27) Mike Kravetz wrote:
<span class="quote">
&gt; On 01/28/2016 02:59 PM, Paul Gortmaker wrote:</span>
<span class="quote">&gt; &gt; [Re: Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code explicitly non-modular vs CONFIG_TIMER_STATS)] On 28/01/2016 (Thu 14:18) Mike Kravetz wrote:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;&gt; On 01/28/2016 07:05 AM, Mike Kravetz wrote:</span>

[...]
<span class="quote">
&gt; &gt;&gt; on s390 numa nodes are initialized at device_initcall in the appropriately</span>
<span class="quote">&gt; &gt;&gt; named routine numa_init_late().  hugetlb_init must be done after numa</span>
<span class="quote">&gt; &gt;&gt; initialization.  So, I suggest we just move the hugetlb initialization</span>
<span class="quote">&gt; &gt;&gt; back to device_initcall.  What do you think Paul?  Patch below.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; We could, but that ignores the fact that the original priorities worked</span>
<span class="quote">&gt; &gt; by chance and not by design, as my commit log indicates.  Instead, I&#39;d</span>
<span class="quote">&gt; &gt; like to know why S390 does core NUMA operations as late as</span>
<span class="quote">&gt; &gt; device_initcall.   Setting up NUMA nodes should be arch_initcall or</span>
<span class="quote">&gt; &gt; subsys_initcall, or earlier --- it should not be device_initcall as if</span>
<span class="quote">&gt; &gt; it was some leaf node UART driver or ethernet driver.  There is no</span>
<span class="quote">&gt; &gt; endpoint &quot;device&quot; in NUMA in this context.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This is in linux-next after 4.5-rc1</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; commit 2d0f76a6ca1f2cdcffca7ce130f67ec61caa0999</span>
<span class="quote">&gt; Author: Michael Holzheu &lt;holzheu@linux.vnet.ibm.com&gt;</span>
<span class="quote">&gt; Date:   Wed Jan 20 19:22:16 2016 +0100</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;     s390/numa: move numa_init_late() from device to arch_initcall</span>

Nice.  Too bad one of us didn&#39;t see this a few hours earlier, but oh
well.  At least it backs up what I said above.

Thanks,
Paul.
--
<span class="quote">
&gt; </span>
<span class="quote">&gt;     Commit 3e89e1c5ea (&quot;hugetlb: make mm and fs code explicitly</span>
<span class="quote">&gt; non-modular&quot;)</span>
<span class="quote">&gt;     moves hugetlb_init() from module_init to subsys_initcall.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;     The hugetlb_init()-&gt;hugetlb_register_node() code accesses</span>
<span class="quote">&gt; &quot;node-&gt;dev.kobj&quot;</span>
<span class="quote">&gt;     which is initialized in numa_init_late().</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;     Since numa_init_late() is a device_initcall which is called *after*</span>
<span class="quote">&gt;     subsys_initcall the above mentioned patch breaks NUMA on s390.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;     So fix this and move numa_init_late() to arch_initcall.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;     Fixes: 3e89e1c5ea (&quot;hugetlb: make mm and fs code explicitly</span>
<span class="quote">&gt; non-modular&quot;)</span>
<span class="quote">&gt;     Reviewed-by: Heiko Carstens &lt;heiko.carstens@de.ibm.com&gt;</span>
<span class="quote">&gt;     Signed-off-by: Michael Holzheu &lt;holzheu@linux.vnet.ibm.com&gt;</span>
<span class="quote">&gt;     Signed-off-by: Martin Schwidefsky &lt;schwidefsky@de.ibm.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -- </span>
<span class="quote">&gt; Mike Kravetz</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/fs/hugetlbfs/inode.c b/fs/hugetlbfs/inode.c</span>
<span class="p_header">index 540ddc9..d27d3f6 100644</span>
<span class="p_header">--- a/fs/hugetlbfs/inode.c</span>
<span class="p_header">+++ b/fs/hugetlbfs/inode.c</span>
<span class="p_chunk">@@ -1363,4 +1363,5 @@</span> <span class="p_context"> static int __init init_hugetlbfs_fs(void)</span>
  out2:
 	return error;
 }
<span class="p_del">-fs_initcall(init_hugetlbfs_fs)</span>
<span class="p_add">+/* Must happen after hugetlb_init() */</span>
<span class="p_add">+device_initcall(init_hugetlbfs_fs)</span>
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 12908dc..a4c0015 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -2653,7 +2653,11 @@</span> <span class="p_context"> static int __init hugetlb_init(void)</span>
 		mutex_init(&amp;hugetlb_fault_mutex_table[i]);
 	return 0;
 }
<span class="p_del">-subsys_initcall(hugetlb_init);</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * hugetlb_init must be called after numa initialization for all</span>
architectures.
<span class="p_add">+ * Currently, this is as late as device_initcall().</span>
<span class="p_add">+ */</span>
<span class="p_add">+device_initcall(hugetlb_init);</span>

 /* Should be called on processing a hugepagesz=... option */

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



