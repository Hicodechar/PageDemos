
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[54/67] x86: remove sta2x11_dma_ops - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [54/67] x86: remove sta2x11_dma_ops</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 29, 2017, 8:18 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171229081911.2802-55-hch@lst.de&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10136559/mbox/"
   >mbox</a>
|
   <a href="/patch/10136559/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10136559/">/patch/10136559/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	A6051603FA for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 29 Dec 2017 08:27:49 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 93B772BF45
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 29 Dec 2017 08:27:49 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 885772C169; Fri, 29 Dec 2017 08:27:49 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 25D942BFAA
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 29 Dec 2017 08:27:49 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755570AbdL2I1q (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 29 Dec 2017 03:27:46 -0500
Received: from bombadil.infradead.org ([65.50.211.133]:42308 &quot;EHLO
	bombadil.infradead.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1756088AbdL2IX0 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 29 Dec 2017 03:23:26 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=infradead.org; s=bombadil.20170209;
	h=References:In-Reply-To:Message-Id:
	Date:Subject:Cc:To:From:Sender:Reply-To:MIME-Version:Content-Type:
	Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
	Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
	List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
	bh=A0kfiSMeqvEnCbWIrVFOWN+hMDNGIZs6YHa3GV4n6ME=;
	b=reycdxmsrvl9S2hLFWvFHC2xg
	n0duzSFmSvBqMrZgRltZhOZuznN8QZmoORSIGRIYi2Y5lMRwZUjxMJyfWnkm83wKResPJkKb5t5zY
	JorYbOB6FiUbUWfo/rjtEPh7RmtP0qqwEZOIy1BEimEU9k3vVCXDp1o0/ar5ZfgcoVNhJn4CaCYVj
	wS35IN4WolH2uBjTCk4s5Z5p8G29efhe3hKTvK2mZH4tpUzeFdUuqE/p5W31zE25BzLkxH6oya4t9
	cEC7j/FfLPd4x5PTL+jYGEMpSnz494OKyMPRzP7fKG6KQehIkQgNZYgJJ+iJgGRHIRvq9LGFRMWzq
	tfTsMrisA==;
Received: from 77.117.237.29.wireless.dyn.drei.com ([77.117.237.29]
	helo=localhost)
	by bombadil.infradead.org with esmtpsa (Exim 4.89 #1 (Red Hat Linux))
	id 1eUpwf-0003Ur-5D; Fri, 29 Dec 2017 08:23:13 +0000
From: Christoph Hellwig &lt;hch@lst.de&gt;
To: iommu@lists.linux-foundation.org
Cc: linux-alpha@vger.kernel.org, linux-snps-arc@lists.infradead.org,
	linux-arm-kernel@lists.infradead.org,
	adi-buildroot-devel@lists.sourceforge.net,
	linux-c6x-dev@linux-c6x.org, linux-cris-kernel@axis.com,
	linux-hexagon@vger.kernel.org, linux-ia64@vger.kernel.org,
	linux-m68k@lists.linux-m68k.org, linux-metag@vger.kernel.org,
	Michal Simek &lt;monstr@monstr.eu&gt;, linux-mips@linux-mips.org,
	linux-parisc@vger.kernel.org, linuxppc-dev@lists.ozlabs.org,
	patches@groups.riscv.org, linux-s390@vger.kernel.org,
	linux-sh@vger.kernel.org, sparclinux@vger.kernel.org,
	Guan Xuetao &lt;gxt@mprc.pku.edu.cn&gt;, x86@kernel.org,
	linux-arch@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH 54/67] x86: remove sta2x11_dma_ops
Date: Fri, 29 Dec 2017 09:18:58 +0100
Message-Id: &lt;20171229081911.2802-55-hch@lst.de&gt;
X-Mailer: git-send-email 2.14.2
In-Reply-To: &lt;20171229081911.2802-1-hch@lst.de&gt;
References: &lt;20171229081911.2802-1-hch@lst.de&gt;
X-SRS-Rewrite: SMTP reverse-path rewritten from &lt;hch@infradead.org&gt; by
	bombadil.infradead.org. See http://www.infradead.org/rpr.html
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a> - Dec. 29, 2017, 8:18 a.m.</div>
<pre class="content">
Both the swiotlb and the dma-direct code already call into phys_to_dma
to translate the DMA address.  So the sta2x11 into phys_to_dma and
dma_to_phys are enough to handle this &quot;special&quot; device, and we can use
the plain old swiotlb ops.
<span class="signed-off-by">
Signed-off-by: Christoph Hellwig &lt;hch@lst.de&gt;</span>
---
 arch/x86/include/asm/device.h |  3 +++
 arch/x86/pci/sta2x11-fixup.c  | 46 +++++--------------------------------------
 2 files changed, 8 insertions(+), 41 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/device.h b/arch/x86/include/asm/device.h</span>
<span class="p_header">index 5e12c63b47aa..812bd6c5d602 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/device.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/device.h</span>
<span class="p_chunk">@@ -6,6 +6,9 @@</span> <span class="p_context"> struct dev_archdata {</span>
 #if defined(CONFIG_INTEL_IOMMU) || defined(CONFIG_AMD_IOMMU)
 	void *iommu; /* hook for IOMMU specific extension */
 #endif
<span class="p_add">+#ifdef CONFIG_STA2X11</span>
<span class="p_add">+	bool is_sta2x11 : 1;</span>
<span class="p_add">+#endif</span>
 };
 
 #if defined(CONFIG_X86_DEV_DMA_OPS) &amp;&amp; defined(CONFIG_PCI_DOMAINS)
<span class="p_header">diff --git a/arch/x86/pci/sta2x11-fixup.c b/arch/x86/pci/sta2x11-fixup.c</span>
<span class="p_header">index 15ad3025e439..7a5bafb76d77 100644</span>
<span class="p_header">--- a/arch/x86/pci/sta2x11-fixup.c</span>
<span class="p_header">+++ b/arch/x86/pci/sta2x11-fixup.c</span>
<span class="p_chunk">@@ -159,43 +159,6 @@</span> <span class="p_context"> static dma_addr_t a2p(dma_addr_t a, struct pci_dev *pdev)</span>
 	return p;
 }
 
<span class="p_del">-/**</span>
<span class="p_del">- * sta2x11_swiotlb_alloc_coherent - Allocate swiotlb bounce buffers</span>
<span class="p_del">- *     returns virtual address. This is the only &quot;special&quot; function here.</span>
<span class="p_del">- * @dev: PCI device</span>
<span class="p_del">- * @size: Size of the buffer</span>
<span class="p_del">- * @dma_handle: DMA address</span>
<span class="p_del">- * @flags: memory flags</span>
<span class="p_del">- */</span>
<span class="p_del">-static void *sta2x11_swiotlb_alloc_coherent(struct device *dev,</span>
<span class="p_del">-					    size_t size,</span>
<span class="p_del">-					    dma_addr_t *dma_handle,</span>
<span class="p_del">-					    gfp_t flags,</span>
<span class="p_del">-					    unsigned long attrs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	void *vaddr;</span>
<span class="p_del">-</span>
<span class="p_del">-	vaddr = swiotlb_alloc(dev, size, dma_handle, flags, attrs);</span>
<span class="p_del">-	*dma_handle = p2a(*dma_handle, to_pci_dev(dev));</span>
<span class="p_del">-	return vaddr;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-/* We have our own dma_ops: the same as swiotlb but from alloc (above) */</span>
<span class="p_del">-static const struct dma_map_ops sta2x11_dma_ops = {</span>
<span class="p_del">-	.alloc = sta2x11_swiotlb_alloc_coherent,</span>
<span class="p_del">-	.free = swiotlb_free,</span>
<span class="p_del">-	.map_page = swiotlb_map_page,</span>
<span class="p_del">-	.unmap_page = swiotlb_unmap_page,</span>
<span class="p_del">-	.map_sg = swiotlb_map_sg_attrs,</span>
<span class="p_del">-	.unmap_sg = swiotlb_unmap_sg_attrs,</span>
<span class="p_del">-	.sync_single_for_cpu = swiotlb_sync_single_for_cpu,</span>
<span class="p_del">-	.sync_single_for_device = swiotlb_sync_single_for_device,</span>
<span class="p_del">-	.sync_sg_for_cpu = swiotlb_sync_sg_for_cpu,</span>
<span class="p_del">-	.sync_sg_for_device = swiotlb_sync_sg_for_device,</span>
<span class="p_del">-	.mapping_error = swiotlb_dma_mapping_error,</span>
<span class="p_del">-	.dma_supported = dma_direct_supported,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
 /* At setup time, we use our own ops if the device is a ConneXt one */
 static void sta2x11_setup_pdev(struct pci_dev *pdev)
 {
<span class="p_chunk">@@ -205,7 +168,8 @@</span> <span class="p_context"> static void sta2x11_setup_pdev(struct pci_dev *pdev)</span>
 		return;
 	pci_set_consistent_dma_mask(pdev, STA2X11_AMBA_SIZE - 1);
 	pci_set_dma_mask(pdev, STA2X11_AMBA_SIZE - 1);
<span class="p_del">-	pdev-&gt;dev.dma_ops = &amp;sta2x11_dma_ops;</span>
<span class="p_add">+	pdev-&gt;dev.dma_ops = &amp;swiotlb_dma_ops;</span>
<span class="p_add">+	pdev-&gt;dev.archdata.is_sta2x11 = true;</span>
 
 	/* We must enable all devices as master, for audio DMA to work */
 	pci_set_master(pdev);
<span class="p_chunk">@@ -225,7 +189,7 @@</span> <span class="p_context"> bool dma_capable(struct device *dev, dma_addr_t addr, size_t size)</span>
 {
 	struct sta2x11_mapping *map;
 
<span class="p_del">-	if (dev-&gt;dma_ops != &amp;sta2x11_dma_ops) {</span>
<span class="p_add">+	if (!dev-&gt;archdata.is_sta2x11) {</span>
 		if (!dev-&gt;dma_mask)
 			return false;
 		return addr + size - 1 &lt;= *dev-&gt;dma_mask;
<span class="p_chunk">@@ -249,7 +213,7 @@</span> <span class="p_context"> bool dma_capable(struct device *dev, dma_addr_t addr, size_t size)</span>
  */
 dma_addr_t __phys_to_dma(struct device *dev, phys_addr_t paddr)
 {
<span class="p_del">-	if (dev-&gt;dma_ops != &amp;sta2x11_dma_ops)</span>
<span class="p_add">+	if (!dev-&gt;archdata.is_sta2x11)</span>
 		return paddr;
 	return p2a(paddr, to_pci_dev(dev));
 }
<span class="p_chunk">@@ -261,7 +225,7 @@</span> <span class="p_context"> dma_addr_t __phys_to_dma(struct device *dev, phys_addr_t paddr)</span>
  */
 phys_addr_t __dma_to_phys(struct device *dev, dma_addr_t daddr)
 {
<span class="p_del">-	if (dev-&gt;dma_ops != &amp;sta2x11_dma_ops)</span>
<span class="p_add">+	if (!dev-&gt;archdata.is_sta2x11)</span>
 		return daddr;
 	return a2p(daddr, to_pci_dev(dev));
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



