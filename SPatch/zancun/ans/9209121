
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[5/6] mm: make tlb_flush_mmu_tlbonly() return whether it flushed - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [5/6] mm: make tlb_flush_mmu_tlbonly() return whether it flushed</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=2302">Dave Hansen</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 1, 2016, 12:12 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20160701001216.9CFEC460@viggo.jf.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9209121/mbox/"
   >mbox</a>
|
   <a href="/patch/9209121/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9209121/">/patch/9209121/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	66D196075F for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  1 Jul 2016 00:14:38 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 580ED28654
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  1 Jul 2016 00:14:38 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 4C9922868A; Fri,  1 Jul 2016 00:14:38 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B4F1128654
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  1 Jul 2016 00:14:37 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752630AbcGAAOE (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 30 Jun 2016 20:14:04 -0400
Received: from mga03.intel.com ([134.134.136.65]:13863 &quot;EHLO mga03.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751699AbcGAANM (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 30 Jun 2016 20:13:12 -0400
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
	by orsmga103.jf.intel.com with ESMTP; 30 Jun 2016 17:12:28 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.26,554,1459839600&quot;; d=&quot;scan&#39;208&quot;;a=&quot;998432633&quot;
Received: from viggo.jf.intel.com (HELO localhost.localdomain)
	([10.54.39.121])
	by fmsmga001.fm.intel.com with ESMTP; 30 Jun 2016 17:12:16 -0700
Subject: [PATCH 5/6] mm: make tlb_flush_mmu_tlbonly() return whether it
	flushed
To: linux-kernel@vger.kernel.org
Cc: x86@kernel.org, linux-mm@kvack.org, torvalds@linux-foundation.org,
	akpm@linux-foundation.org, bp@alien8.de, ak@linux.intel.com,
	mhocko@suse.com, Dave Hansen &lt;dave@sr71.net&gt;, dave.hansen@linux.intel.com
From: Dave Hansen &lt;dave@sr71.net&gt;
Date: Thu, 30 Jun 2016 17:12:16 -0700
References: &lt;20160701001209.7DA24D1C@viggo.jf.intel.com&gt;
In-Reply-To: &lt;20160701001209.7DA24D1C@viggo.jf.intel.com&gt;
Message-Id: &lt;20160701001216.9CFEC460@viggo.jf.intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2302">Dave Hansen</a> - July 1, 2016, 12:12 a.m.</div>
<pre class="content">
<span class="from">From: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;</span>

When batching TLB operations, we track the scope of the needed
TLB invalidation inside the &#39;struct mmu_gather&#39;.  With
mmu_gather-&gt;end, we indicate whether any operations required
a flush.

If the flush was not performed, then we know that no
pte_present() PTEs were found and no workaround is needed.
But, we do not know this unless tlb_flush_mmu_tlbonly()
tells us whether it flushed or not.

Have it return a bool to tell us.
<span class="signed-off-by">
Signed-off-by: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;</span>
---

 b/arch/arm/include/asm/tlb.h  |    3 ++-
 b/arch/ia64/include/asm/tlb.h |    3 ++-
 b/arch/s390/include/asm/tlb.h |    3 ++-
 b/arch/sh/include/asm/tlb.h   |    1 +
 b/arch/um/include/asm/tlb.h   |    3 ++-
 b/mm/memory.c                 |    5 +++--
 6 files changed, 12 insertions(+), 6 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff -puN arch/arm/include/asm/tlb.h~knl-leak-50-bool-return-tlb_flush_mmu_tlbonly arch/arm/include/asm/tlb.h</span>
<span class="p_header">--- a/arch/arm/include/asm/tlb.h~knl-leak-50-bool-return-tlb_flush_mmu_tlbonly	2016-06-30 17:10:42.947264449 -0700</span>
<span class="p_header">+++ b/arch/arm/include/asm/tlb.h	2016-06-30 17:10:42.958264947 -0700</span>
<span class="p_chunk">@@ -126,12 +126,13 @@</span> <span class="p_context"> static inline void __tlb_alloc_page(stru</span>
 	}
 }
 
<span class="p_del">-static inline void tlb_flush_mmu_tlbonly(struct mmu_gather *tlb)</span>
<span class="p_add">+static inline bool tlb_flush_mmu_tlbonly(struct mmu_gather *tlb)</span>
 {
 	tlb_flush(tlb);
 #ifdef CONFIG_HAVE_RCU_TABLE_FREE
 	tlb_table_flush(tlb);
 #endif
<span class="p_add">+	return true;</span>
 }
 
 static inline void tlb_flush_mmu_free(struct mmu_gather *tlb)
<span class="p_header">diff -puN arch/ia64/include/asm/tlb.h~knl-leak-50-bool-return-tlb_flush_mmu_tlbonly arch/ia64/include/asm/tlb.h</span>
<span class="p_header">--- a/arch/ia64/include/asm/tlb.h~knl-leak-50-bool-return-tlb_flush_mmu_tlbonly	2016-06-30 17:10:42.948264494 -0700</span>
<span class="p_header">+++ b/arch/ia64/include/asm/tlb.h	2016-06-30 17:10:42.959264993 -0700</span>
<span class="p_chunk">@@ -219,9 +219,10 @@</span> <span class="p_context"> static inline int __tlb_remove_page(stru</span>
 	return tlb-&gt;max - tlb-&gt;nr;
 }
 
<span class="p_del">-static inline void tlb_flush_mmu_tlbonly(struct mmu_gather *tlb)</span>
<span class="p_add">+static inline bool tlb_flush_mmu_tlbonly(struct mmu_gather *tlb)</span>
 {
 	ia64_tlb_flush_mmu_tlbonly(tlb, tlb-&gt;start_addr, tlb-&gt;end_addr);
<span class="p_add">+	return true;</span>
 }
 
 static inline void tlb_flush_mmu_free(struct mmu_gather *tlb)
<span class="p_header">diff -puN arch/s390/include/asm/tlb.h~knl-leak-50-bool-return-tlb_flush_mmu_tlbonly arch/s390/include/asm/tlb.h</span>
<span class="p_header">--- a/arch/s390/include/asm/tlb.h~knl-leak-50-bool-return-tlb_flush_mmu_tlbonly	2016-06-30 17:10:42.950264585 -0700</span>
<span class="p_header">+++ b/arch/s390/include/asm/tlb.h	2016-06-30 17:10:42.960265038 -0700</span>
<span class="p_chunk">@@ -60,9 +60,10 @@</span> <span class="p_context"> static inline void tlb_gather_mmu(struct</span>
 	tlb-&gt;batch = NULL;
 }
 
<span class="p_del">-static inline void tlb_flush_mmu_tlbonly(struct mmu_gather *tlb)</span>
<span class="p_add">+static inline bool tlb_flush_mmu_tlbonly(struct mmu_gather *tlb)</span>
 {
 	__tlb_flush_mm_lazy(tlb-&gt;mm);
<span class="p_add">+	return true;</span>
 }
 
 static inline void tlb_flush_mmu_free(struct mmu_gather *tlb)
<span class="p_header">diff -puN arch/sh/include/asm/tlb.h~knl-leak-50-bool-return-tlb_flush_mmu_tlbonly arch/sh/include/asm/tlb.h</span>
<span class="p_header">--- a/arch/sh/include/asm/tlb.h~knl-leak-50-bool-return-tlb_flush_mmu_tlbonly	2016-06-30 17:10:42.952264675 -0700</span>
<span class="p_header">+++ b/arch/sh/include/asm/tlb.h	2016-06-30 17:10:42.960265038 -0700</span>
<span class="p_chunk">@@ -89,6 +89,7 @@</span> <span class="p_context"> tlb_end_vma(struct mmu_gather *tlb, stru</span>
 
 static inline void tlb_flush_mmu_tlbonly(struct mmu_gather *tlb)
 {
<span class="p_add">+	return true;</span>
 }
 
 static inline void tlb_flush_mmu_free(struct mmu_gather *tlb)
<span class="p_header">diff -puN arch/um/include/asm/tlb.h~knl-leak-50-bool-return-tlb_flush_mmu_tlbonly arch/um/include/asm/tlb.h</span>
<span class="p_header">--- a/arch/um/include/asm/tlb.h~knl-leak-50-bool-return-tlb_flush_mmu_tlbonly	2016-06-30 17:10:42.953264721 -0700</span>
<span class="p_header">+++ b/arch/um/include/asm/tlb.h	2016-06-30 17:10:42.960265038 -0700</span>
<span class="p_chunk">@@ -59,10 +59,11 @@</span> <span class="p_context"> tlb_gather_mmu(struct mmu_gather *tlb, s</span>
 extern void flush_tlb_mm_range(struct mm_struct *mm, unsigned long start,
 			       unsigned long end);
 
<span class="p_del">-static inline void</span>
<span class="p_add">+static inline bool</span>
 tlb_flush_mmu_tlbonly(struct mmu_gather *tlb)
 {
 	flush_tlb_mm_range(tlb-&gt;mm, tlb-&gt;start, tlb-&gt;end);
<span class="p_add">+	return true;</span>
 }
 
 static inline void
<span class="p_header">diff -puN mm/memory.c~knl-leak-50-bool-return-tlb_flush_mmu_tlbonly mm/memory.c</span>
<span class="p_header">--- a/mm/memory.c~knl-leak-50-bool-return-tlb_flush_mmu_tlbonly	2016-06-30 17:10:42.955264811 -0700</span>
<span class="p_header">+++ b/mm/memory.c	2016-06-30 17:10:42.962265129 -0700</span>
<span class="p_chunk">@@ -240,10 +240,10 @@</span> <span class="p_context"> void tlb_gather_mmu(struct mmu_gather *t</span>
 	__tlb_reset_range(tlb);
 }
 
<span class="p_del">-static void tlb_flush_mmu_tlbonly(struct mmu_gather *tlb)</span>
<span class="p_add">+static bool tlb_flush_mmu_tlbonly(struct mmu_gather *tlb)</span>
 {
 	if (!tlb-&gt;end)
<span class="p_del">-		return;</span>
<span class="p_add">+		return false;</span>
 
 	tlb_flush(tlb);
 	mmu_notifier_invalidate_range(tlb-&gt;mm, tlb-&gt;start, tlb-&gt;end);
<span class="p_chunk">@@ -251,6 +251,7 @@</span> <span class="p_context"> static void tlb_flush_mmu_tlbonly(struct</span>
 	tlb_table_flush(tlb);
 #endif
 	__tlb_reset_range(tlb);
<span class="p_add">+	return true;</span>
 }
 
 static void tlb_flush_mmu_free(struct mmu_gather *tlb)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



