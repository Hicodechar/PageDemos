
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[48/64] arch/tile: use mm locking wrappers - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [48/64] arch/tile: use mm locking wrappers</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=109101">Davidlohr Bueso</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 5, 2018, 1:27 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180205012754.23615-49-dbueso@wotan.suse.de&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10199713/mbox/"
   >mbox</a>
|
   <a href="/patch/10199713/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10199713/">/patch/10199713/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	A2D5A60247 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  5 Feb 2018 01:33:40 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 92D752841F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  5 Feb 2018 01:33:40 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 87633285B6; Mon,  5 Feb 2018 01:33:40 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 2905D2841F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  5 Feb 2018 01:33:40 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752420AbeBEBdh (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 4 Feb 2018 20:33:37 -0500
Received: from mx2.suse.de ([195.135.220.15]:44160 &quot;EHLO mx2.suse.de&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752786AbeBEB3V (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 4 Feb 2018 20:29:21 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (charybdis-ext.suse.de [195.135.220.254])
	by mx2.suse.de (Postfix) with ESMTP id 94844AE1B;
	Mon,  5 Feb 2018 01:28:01 +0000 (UTC)
From: Davidlohr Bueso &lt;dbueso@suse.de&gt;
To: akpm@linux-foundation.org, mingo@kernel.org
Cc: peterz@infradead.org, ldufour@linux.vnet.ibm.com, jack@suse.cz,
	mhocko@kernel.org, kirill.shutemov@linux.intel.com,
	mawilcox@microsoft.com, mgorman@techsingularity.net,
	dave@stgolabs.net, linux-mm@kvack.org,
	linux-kernel@vger.kernel.org, Davidlohr Bueso &lt;dbueso@suse.de&gt;
Subject: [PATCH 48/64] arch/tile: use mm locking wrappers
Date: Mon,  5 Feb 2018 02:27:38 +0100
Message-Id: &lt;20180205012754.23615-49-dbueso@wotan.suse.de&gt;
X-Mailer: git-send-email 2.12.3
In-Reply-To: &lt;20180205012754.23615-1-dbueso@wotan.suse.de&gt;
References: &lt;20180205012754.23615-1-dbueso@wotan.suse.de&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=109101">Davidlohr Bueso</a> - Feb. 5, 2018, 1:27 a.m.</div>
<pre class="content">
<span class="from">From: Davidlohr Bueso &lt;dave@stgolabs.net&gt;</span>

* THIS IS A HACK *

Breaks arch/um/. See comment in fix_range_common().
<span class="signed-off-by">
Signed-off-by: Davidlohr Bueso &lt;dbueso@suse.de&gt;</span>
---
 arch/um/include/asm/mmu_context.h |  5 +++--
 arch/um/kernel/tlb.c              | 12 +++++++++++-
 arch/um/kernel/trap.c             |  6 +++---
 3 files changed, 17 insertions(+), 6 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/um/include/asm/mmu_context.h b/arch/um/include/asm/mmu_context.h</span>
<span class="p_header">index 98cc3e36385a..7dc202c611db 100644</span>
<span class="p_header">--- a/arch/um/include/asm/mmu_context.h</span>
<span class="p_header">+++ b/arch/um/include/asm/mmu_context.h</span>
<span class="p_chunk">@@ -49,14 +49,15 @@</span> <span class="p_context"> extern void force_flush_all(void);</span>
 
 static inline void activate_mm(struct mm_struct *old, struct mm_struct *new)
 {
<span class="p_add">+	DEFINE_RANGE_LOCK_FULL(mmrange);</span>
 	/*
 	 * This is called by fs/exec.c and sys_unshare()
 	 * when the new -&gt;mm is used for the first time.
 	 */
 	__switch_mm(&amp;new-&gt;context.id);
<span class="p_del">-	down_write(&amp;new-&gt;mmap_sem);</span>
<span class="p_add">+        mm_write_lock(new, &amp;mmrange);</span>
 	uml_setup_stubs(new);
<span class="p_del">-	up_write(&amp;new-&gt;mmap_sem);</span>
<span class="p_add">+	mm_write_unlock(new, &amp;mmrange);</span>
 }
 
 static inline void switch_mm(struct mm_struct *prev, struct mm_struct *next, 
<span class="p_header">diff --git a/arch/um/kernel/tlb.c b/arch/um/kernel/tlb.c</span>
<span class="p_header">index 37508b190106..eeeeb048b6f4 100644</span>
<span class="p_header">--- a/arch/um/kernel/tlb.c</span>
<span class="p_header">+++ b/arch/um/kernel/tlb.c</span>
<span class="p_chunk">@@ -297,10 +297,20 @@</span> <span class="p_context"> void fix_range_common(struct mm_struct *mm, unsigned long start_addr,</span>
 
 	/* This is not an else because ret is modified above */
 	if (ret) {
<span class="p_add">+		/*</span>
<span class="p_add">+		 * FIXME: this is _wrong_ and will break arch/um.</span>
<span class="p_add">+		 *</span>
<span class="p_add">+		 *  The right thing to do is modify the flush_tlb_range()</span>
<span class="p_add">+		 *  api, but that in turn would require file_operations</span>
<span class="p_add">+		 *  knowing about mmrange... Compiles cleanly, but sucks</span>
<span class="p_add">+		 *  otherwise.</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		DEFINE_RANGE_LOCK_FULL(mmrange);</span>
<span class="p_add">+</span>
 		printk(KERN_ERR &quot;fix_range_common: failed, killing current &quot;
 		       &quot;process: %d\n&quot;, task_tgid_vnr(current));
 		/* We are under mmap_sem, release it such that current can terminate */
<span class="p_del">-		up_write(&amp;current-&gt;mm-&gt;mmap_sem);</span>
<span class="p_add">+		mm_write_unlock(current-&gt;mm, &amp;mmrange);</span>
 		force_sig(SIGKILL, current);
 		do_signal(&amp;current-&gt;thread.regs);
 	}
<span class="p_header">diff --git a/arch/um/kernel/trap.c b/arch/um/kernel/trap.c</span>
<span class="p_header">index e632a14e896e..14dcb83d00a9 100644</span>
<span class="p_header">--- a/arch/um/kernel/trap.c</span>
<span class="p_header">+++ b/arch/um/kernel/trap.c</span>
<span class="p_chunk">@@ -47,7 +47,7 @@</span> <span class="p_context"> int handle_page_fault(unsigned long address, unsigned long ip,</span>
 	if (is_user)
 		flags |= FAULT_FLAG_USER;
 retry:
<span class="p_del">-	down_read(&amp;mm-&gt;mmap_sem);</span>
<span class="p_add">+	mm_read_lock(mm, &amp;mmrange);</span>
 	vma = find_vma(mm, address);
 	if (!vma)
 		goto out;
<span class="p_chunk">@@ -123,7 +123,7 @@</span> <span class="p_context"> int handle_page_fault(unsigned long address, unsigned long ip,</span>
 #endif
 	flush_tlb_page(vma, address);
 out:
<span class="p_del">-	up_read(&amp;mm-&gt;mmap_sem);</span>
<span class="p_add">+	mm_read_unlock(mm, &amp;mmrange);</span>
 out_nosemaphore:
 	return err;
 
<span class="p_chunk">@@ -132,7 +132,7 @@</span> <span class="p_context"> int handle_page_fault(unsigned long address, unsigned long ip,</span>
 	 * We ran out of memory, call the OOM killer, and return the userspace
 	 * (which will retry the fault, or kill us if we got oom-killed).
 	 */
<span class="p_del">-	up_read(&amp;mm-&gt;mmap_sem);</span>
<span class="p_add">+	mm_read_unlock(mm, &amp;mmrange);</span>
 	if (!is_user)
 		goto out_nosemaphore;
 	pagefault_out_of_memory();

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



