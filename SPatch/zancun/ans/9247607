
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[3/3] powerpc: Convert fsl_rstcr_restart to a reset handler - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [3/3] powerpc: Convert fsl_rstcr_restart to a reset handler</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=56161">Andrey Smirnov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 26, 2016, 4:25 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1469507114-5788-3-git-send-email-andrew.smirnov@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9247607/mbox/"
   >mbox</a>
|
   <a href="/patch/9247607/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9247607/">/patch/9247607/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	48BC7607F2 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 26 Jul 2016 04:26:09 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3D5C8205AD
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 26 Jul 2016 04:26:09 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 31D8426490; Tue, 26 Jul 2016 04:26:09 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, FREEMAIL_FROM,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 72BDA205AD
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 26 Jul 2016 04:26:07 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754292AbcGZEZo (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 26 Jul 2016 00:25:44 -0400
Received: from mail-pa0-f66.google.com ([209.85.220.66]:35128 &quot;EHLO
	mail-pa0-f66.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754152AbcGZEZb (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 26 Jul 2016 00:25:31 -0400
Received: by mail-pa0-f66.google.com with SMTP id cf3so12502506pad.2
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Mon, 25 Jul 2016 21:25:30 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=zuzFEWXrUg5JmmZrfpMs4190XTfif5dZvfK/vsu4RBM=;
	b=n/qEER9qTsdx1YRrRxVEgqK04cjhFk1xXdwgUPYtdDu4ScSq2euXcJ3kFNxD5gIoWW
	D2PVFBbVWW3bLXqOYsrEqwnwOBytc11eo0ogiHp36nhuQhaTXY8pG3MpgOyLZzA9khb0
	RoT1dppn6AJGJGBjrgtSe9JdQ5HihJhAzH3gZPTphat1yh12uAAQ9Vz3JOwBNBNujWvu
	NipTtnNB2S7iVbjNlHrS21IwejTXHgELKxNYLksFm/Vpu08Rrf3+d/W6Y3hyGdN+Rfgp
	fi7VATGWrxjTakJ5ehQKNyH8e4WG6F5TiXQ3Dr2lgqni7ZQCXgXKr9vIoQjvjzV57p5W
	/Jcg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20130820;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=zuzFEWXrUg5JmmZrfpMs4190XTfif5dZvfK/vsu4RBM=;
	b=MgCArUwwFrb0obYHV+gg9E0XBfwMvr+ezOBa6tIYP0dIujprcZJPRD39ATPkabgOYu
	YVOD7cqZOlD7/9ilLl3UfZ13NT8OUSs0P25wzyLMLpGDX+Xuy/mgJfIMvLysMhNJUlfn
	iuxA4zdvHjqQvRFXMXKlDKpzdlitQrkB0Cr/YL2EdwgP4aOJJwXQH+8wXd+soRfJUBGG
	LB1bLS1xUAVBvY6ovt51ZOf8Mz2HQuSSRLs/626pVE1NnvLQcI5Uspod0+YjtSAv8M9A
	X/pJ49DOusrXCB71insWyr6L6mxOGf5hiuMuctN9JixhI1YbL9Jo1yt0Y4bze32lKyMw
	FUTA==
X-Gm-Message-State: AEkoouvHZ0+3oaDfz0eCDS3Ri5OnR1/uBeyZpj6YddOQdPrC5iymHtThmc3lz2WRXQhacQ==
X-Received: by 10.66.158.104 with SMTP id wt8mr35633335pab.64.1469507129325; 
	Mon, 25 Jul 2016 21:25:29 -0700 (PDT)
Received: from squirtle.localdomain.localdomain
	(c-73-225-163-254.hsd1.wa.comcast.net. [73.225.163.254])
	by smtp.gmail.com with ESMTPSA id
	t1sm43544498pfa.86.2016.07.25.21.25.28
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Mon, 25 Jul 2016 21:25:28 -0700 (PDT)
From: Andrey Smirnov &lt;andrew.smirnov@gmail.com&gt;
To: linuxppc-dev@lists.ozlabs.org
Cc: Andrey Smirnov &lt;andrew.smirnov@gmail.com&gt;, Scott Wood &lt;oss@buserror.net&gt;,
	Kumar Gala &lt;galak@kernel.crashing.org&gt;,
	Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;,
	Paul Mackerras &lt;paulus@samba.org&gt;, Michael Ellerman &lt;mpe@ellerman.id.au&gt;,
	Alessio Igor Bogani &lt;alessio.bogani@elettra.eu&gt;,
	Daniel Axtens &lt;dja@axtens.net&gt;, linux-kernel@vger.kernel.org
Subject: [PATCH 3/3] powerpc: Convert fsl_rstcr_restart to a reset handler
Date: Mon, 25 Jul 2016 21:25:14 -0700
Message-Id: &lt;1469507114-5788-3-git-send-email-andrew.smirnov@gmail.com&gt;
X-Mailer: git-send-email 2.5.5
In-Reply-To: &lt;1469507114-5788-1-git-send-email-andrew.smirnov@gmail.com&gt;
References: &lt;1469507114-5788-1-git-send-email-andrew.smirnov@gmail.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=56161">Andrey Smirnov</a> - July 26, 2016, 4:25 a.m.</div>
<pre class="content">
Convert fsl_rstcr_restart into a function to be registered with
register_reset_handler() API and introduce fls_rstcr_restart_register()
function that can be added as an initcall that would do aforementioned
registration.
<span class="signed-off-by">
Signed-off-by: Andrey Smirnov &lt;andrew.smirnov@gmail.com&gt;</span>
---
 arch/powerpc/platforms/85xx/bsc913x_qds.c     |  2 +-
 arch/powerpc/platforms/85xx/bsc913x_rdb.c     |  2 +-
 arch/powerpc/platforms/85xx/c293pcie.c        |  2 +-
 arch/powerpc/platforms/85xx/corenet_generic.c |  2 +-
 arch/powerpc/platforms/85xx/ge_imp3a.c        |  2 +-
 arch/powerpc/platforms/85xx/mpc8536_ds.c      |  2 +-
 arch/powerpc/platforms/85xx/mpc85xx_ads.c     |  2 +-
 arch/powerpc/platforms/85xx/mpc85xx_cds.c     | 26 +++++++++++++++++++-------
 arch/powerpc/platforms/85xx/mpc85xx_ds.c      |  7 ++++---
 arch/powerpc/platforms/85xx/mpc85xx_mds.c     |  7 ++++---
 arch/powerpc/platforms/85xx/mpc85xx_rdb.c     | 21 +++++++++++----------
 arch/powerpc/platforms/85xx/mvme2500.c        |  2 +-
 arch/powerpc/platforms/85xx/p1010rdb.c        |  2 +-
 arch/powerpc/platforms/85xx/p1022_ds.c        |  2 +-
 arch/powerpc/platforms/85xx/p1022_rdk.c       |  3 ++-
 arch/powerpc/platforms/85xx/p1023_rdb.c       |  2 +-
 arch/powerpc/platforms/85xx/ppa8548.c         |  2 +-
 arch/powerpc/platforms/85xx/qemu_e500.c       |  2 +-
 arch/powerpc/platforms/85xx/sbc8548.c         |  2 +-
 arch/powerpc/platforms/85xx/socrates.c        |  2 +-
 arch/powerpc/platforms/85xx/stx_gp3.c         |  2 +-
 arch/powerpc/platforms/85xx/tqm85xx.c         |  2 +-
 arch/powerpc/platforms/85xx/twr_p102x.c       |  2 +-
 arch/powerpc/platforms/85xx/xes_mpc85xx.c     |  7 ++++---
 arch/powerpc/platforms/86xx/gef_ppc9a.c       |  2 +-
 arch/powerpc/platforms/86xx/gef_sbc310.c      |  2 +-
 arch/powerpc/platforms/86xx/gef_sbc610.c      |  2 +-
 arch/powerpc/platforms/86xx/mpc8610_hpcd.c    |  2 +-
 arch/powerpc/platforms/86xx/mpc86xx_hpcn.c    |  2 +-
 arch/powerpc/platforms/86xx/sbc8641d.c        |  2 +-
 arch/powerpc/sysdev/fsl_soc.c                 | 22 +++++++++++++++++-----
 arch/powerpc/sysdev/fsl_soc.h                 |  2 +-
 32 files changed, 86 insertions(+), 57 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=151011">Scott Wood</a> - July 26, 2016, 7:59 a.m.</div>
<pre class="content">
On Mon, 2016-07-25 at 21:25 -0700, Andrey Smirnov wrote:
<span class="quote">&gt; Convert fsl_rstcr_restart into a function to be registered with</span>
<span class="quote">&gt; register_reset_handler() API and introduce fls_rstcr_restart_register()</span>
<span class="quote">&gt; function that can be added as an initcall that would do aforementioned</span>
<span class="quote">&gt; registration.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Andrey Smirnov &lt;andrew.smirnov@gmail.com&gt;</span>

Is there a particular motivation for this (e.g. new handlers you plan to
register elsewhere)?
<span class="quote">
&gt; diff --git a/arch/powerpc/platforms/85xx/bsc913x_qds.c</span>
<span class="quote">&gt; b/arch/powerpc/platforms/85xx/bsc913x_qds.c</span>
<span class="quote">&gt; index 07dd6ae..14ea7a0 100644</span>
<span class="quote">&gt; --- a/arch/powerpc/platforms/85xx/bsc913x_qds.c</span>
<span class="quote">&gt; +++ b/arch/powerpc/platforms/85xx/bsc913x_qds.c</span>
<span class="quote">&gt; @@ -53,6 +53,7 @@ static void __init bsc913x_qds_setup_arch(void)</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  machine_arch_initcall(bsc9132_qds, mpc85xx_common_publish_devices);</span>
<span class="quote">&gt; +machine_arch_initcall(bsc9133_qds, fsl_rstcr_restart_register);</span>

Do we really still need to call the registration on a per-board basis, now
that boards have a way of registering a higher-priority notifier?  Can&#39;t we
just have setup_rstcr() do the registration when it finds the appropriate
device tree node?
<span class="quote">
&gt; +int fsl_rstcr_restart_register(void)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	static struct notifier_block restart_handler;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	restart_handler.notifier_call = fsl_rstcr_restart;</span>
<span class="quote">&gt; +	restart_handler.priority = 128;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	return register_restart_handler(&amp;restart_handler);</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +EXPORT_SYMBOL(fsl_rstcr_restart_register);</span>

When would this ever get called from a module?

-Scott
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=56161">Andrey Smirnov</a> - July 26, 2016, 9:22 p.m.</div>
<pre class="content">
On Tue, Jul 26, 2016 at 12:59 AM, Scott Wood &lt;oss@buserror.net&gt; wrote:
<span class="quote">&gt; On Mon, 2016-07-25 at 21:25 -0700, Andrey Smirnov wrote:</span>
<span class="quote">&gt;&gt; Convert fsl_rstcr_restart into a function to be registered with</span>
<span class="quote">&gt;&gt; register_reset_handler() API and introduce fls_rstcr_restart_register()</span>
<span class="quote">&gt;&gt; function that can be added as an initcall that would do aforementioned</span>
<span class="quote">&gt;&gt; registration.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Andrey Smirnov &lt;andrew.smirnov@gmail.com&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Is there a particular motivation for this (e.g. new handlers you plan to</span>
<span class="quote">&gt; register elsewhere)?</span>

I have a MPC8548 based board that which uses, at least for time being,
SBC8548&#39;s init code(by claiming compatibility in DT) which has an
external watchdog that implements reset functionality. The driver for
watchdog is just a generic watchdog driver and having an ability to
register custom reset handlers is very handy.

I don&#39;t really have any motivation for fixing boards other than
SBC8548 and even that I can avoid doing by making a new custom board
file in my tree that would not populate .reset field. I can drop this
patch from the series if the code of those boards is in &quot;don&#39;t touch
it unless absolutely have to&quot; state.
<span class="quote">
&gt;</span>
<span class="quote">&gt;&gt; diff --git a/arch/powerpc/platforms/85xx/bsc913x_qds.c</span>
<span class="quote">&gt;&gt; b/arch/powerpc/platforms/85xx/bsc913x_qds.c</span>
<span class="quote">&gt;&gt; index 07dd6ae..14ea7a0 100644</span>
<span class="quote">&gt;&gt; --- a/arch/powerpc/platforms/85xx/bsc913x_qds.c</span>
<span class="quote">&gt;&gt; +++ b/arch/powerpc/platforms/85xx/bsc913x_qds.c</span>
<span class="quote">&gt;&gt; @@ -53,6 +53,7 @@ static void __init bsc913x_qds_setup_arch(void)</span>
<span class="quote">&gt;&gt;  }</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;  machine_arch_initcall(bsc9132_qds, mpc85xx_common_publish_devices);</span>
<span class="quote">&gt;&gt; +machine_arch_initcall(bsc9133_qds, fsl_rstcr_restart_register);</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Do we really still need to call the registration on a per-board basis, now</span>
<span class="quote">&gt; that boards have a way of registering a higher-priority notifier?  Can&#39;t we</span>
<span class="quote">&gt; just have setup_rstcr() do the registration when it finds the appropriate</span>
<span class="quote">&gt; device tree node?</span>

I think we could, that idea just never occurred to me. What you
describe should be a cleaner way to handle this change, I&#39;ll convert
the code to do that in v2.
<span class="quote">
&gt;</span>
<span class="quote">&gt;&gt; +int fsl_rstcr_restart_register(void)</span>
<span class="quote">&gt;&gt; +{</span>
<span class="quote">&gt;&gt; +     static struct notifier_block restart_handler;</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +     restart_handler.notifier_call = fsl_rstcr_restart;</span>
<span class="quote">&gt;&gt; +     restart_handler.priority = 128;</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +     return register_restart_handler(&amp;restart_handler);</span>
<span class="quote">&gt;&gt; +}</span>
<span class="quote">&gt;&gt; +EXPORT_SYMBOL(fsl_rstcr_restart_register);</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; When would this ever get called from a module?</span>

Probably never, that&#39;s just a mistake on my part. Will remove in v2.

Thanks,
Andrey
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=151011">Scott Wood</a> - July 26, 2016, 9:26 p.m.</div>
<pre class="content">
On Tue, 2016-07-26 at 14:22 -0700, Andrey Smirnov wrote:
<span class="quote">&gt; On Tue, Jul 26, 2016 at 12:59 AM, Scott Wood &lt;oss@buserror.net&gt; wrote:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; On Mon, 2016-07-25 at 21:25 -0700, Andrey Smirnov wrote:</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; Convert fsl_rstcr_restart into a function to be registered with</span>
<span class="quote">&gt; &gt; &gt; register_reset_handler() API and introduce fls_rstcr_restart_register()</span>
<span class="quote">&gt; &gt; &gt; function that can be added as an initcall that would do aforementioned</span>
<span class="quote">&gt; &gt; &gt; registration.</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; Signed-off-by: Andrey Smirnov &lt;andrew.smirnov@gmail.com&gt;</span>
<span class="quote">&gt; &gt; Is there a particular motivation for this (e.g. new handlers you plan to</span>
<span class="quote">&gt; &gt; register elsewhere)?</span>
<span class="quote">&gt; I have a MPC8548 based board that which uses, at least for time being,</span>
<span class="quote">&gt; SBC8548&#39;s init code(by claiming compatibility in DT) which has an</span>
<span class="quote">&gt; external watchdog that implements reset functionality. The driver for</span>
<span class="quote">&gt; watchdog is just a generic watchdog driver and having an ability to</span>
<span class="quote">&gt; register custom reset handlers is very handy.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I don&#39;t really have any motivation for fixing boards other than</span>
<span class="quote">&gt; SBC8548 and even that I can avoid doing by making a new custom board</span>
<span class="quote">&gt; file in my tree that would not populate .reset field. I can drop this</span>
<span class="quote">&gt; patch from the series if the code of those boards is in &quot;don&#39;t touch</span>
<span class="quote">&gt; it unless absolutely have to&quot; state.</span>

I&#39;m not saying not to touch it -- I just wanted to understand the context.

-Scott
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/bsc913x_qds.c b/arch/powerpc/platforms/85xx/bsc913x_qds.c</span>
<span class="p_header">index 07dd6ae..14ea7a0 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/bsc913x_qds.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/bsc913x_qds.c</span>
<span class="p_chunk">@@ -53,6 +53,7 @@</span> <span class="p_context"> static void __init bsc913x_qds_setup_arch(void)</span>
 }
 
 machine_arch_initcall(bsc9132_qds, mpc85xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(bsc9133_qds, fsl_rstcr_restart_register);</span>
 
 /*
  * Called very early, device-tree isn&#39;t unflattened
<span class="p_chunk">@@ -72,7 +73,6 @@</span> <span class="p_context"> define_machine(bsc9132_qds) {</span>
 	.pcibios_fixup_bus	= fsl_pcibios_fixup_bus,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/bsc913x_rdb.c b/arch/powerpc/platforms/85xx/bsc913x_rdb.c</span>
<span class="p_header">index e48f671..cd4e717 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/bsc913x_rdb.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/bsc913x_rdb.c</span>
<span class="p_chunk">@@ -43,6 +43,7 @@</span> <span class="p_context"> static void __init bsc913x_rdb_setup_arch(void)</span>
 }
 
 machine_device_initcall(bsc9131_rdb, mpc85xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(bsc9131_rdb, fsl_rstcr_restart_register);</span>
 
 /*
  * Called very early, device-tree isn&#39;t unflattened
<span class="p_chunk">@@ -59,7 +60,6 @@</span> <span class="p_context"> define_machine(bsc9131_rdb) {</span>
 	.setup_arch		= bsc913x_rdb_setup_arch,
 	.init_IRQ		= bsc913x_rdb_pic_init,
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/c293pcie.c b/arch/powerpc/platforms/85xx/c293pcie.c</span>
<span class="p_header">index 3b9e3f0..fbd63f9 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/c293pcie.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/c293pcie.c</span>
<span class="p_chunk">@@ -48,6 +48,7 @@</span> <span class="p_context"> static void __init c293_pcie_setup_arch(void)</span>
 }
 
 machine_arch_initcall(c293_pcie, mpc85xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(c293_pcie, fsl_rstcr_restart_register);</span>
 
 /*
  * Called very early, device-tree isn&#39;t unflattened
<span class="p_chunk">@@ -65,7 +66,6 @@</span> <span class="p_context"> define_machine(c293_pcie) {</span>
 	.setup_arch		= c293_pcie_setup_arch,
 	.init_IRQ		= c293_pcie_pic_init,
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/corenet_generic.c b/arch/powerpc/platforms/85xx/corenet_generic.c</span>
<span class="p_header">index 3a6a84f..297379b 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/corenet_generic.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/corenet_generic.c</span>
<span class="p_chunk">@@ -225,7 +225,6 @@</span> <span class="p_context"> define_machine(corenet_generic) {</span>
 #else
 	.get_irq		= mpic_get_coreint_irq,
 #endif
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 #ifdef CONFIG_PPC64
<span class="p_chunk">@@ -236,6 +235,7 @@</span> <span class="p_context"> define_machine(corenet_generic) {</span>
 };
 
 machine_arch_initcall(corenet_generic, corenet_gen_publish_devices);
<span class="p_add">+machine_arch_initcall(corenet_generic, fsl_rstcr_restart_register);</span>
 
 #ifdef CONFIG_SWIOTLB
 machine_arch_initcall(corenet_generic, swiotlb_setup_bus_notifier);
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/ge_imp3a.c b/arch/powerpc/platforms/85xx/ge_imp3a.c</span>
<span class="p_header">index 14af36a..c06cda9 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/ge_imp3a.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/ge_imp3a.c</span>
<span class="p_chunk">@@ -203,6 +203,7 @@</span> <span class="p_context"> static int __init ge_imp3a_probe(void)</span>
 machine_arch_initcall(ge_imp3a, mpc85xx_common_publish_devices);
 
 machine_arch_initcall(ge_imp3a, swiotlb_setup_bus_notifier);
<span class="p_add">+machine_arch_initcall(ge_imp3a, fsl_rstcr_restart_register);</span>
 
 define_machine(ge_imp3a) {
 	.name			= &quot;GE_IMP3A&quot;,
<span class="p_chunk">@@ -215,7 +216,6 @@</span> <span class="p_context"> define_machine(ge_imp3a) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/mpc8536_ds.c b/arch/powerpc/platforms/85xx/mpc8536_ds.c</span>
<span class="p_header">index 6ba687f..3678b9b 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/mpc8536_ds.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/mpc8536_ds.c</span>
<span class="p_chunk">@@ -58,6 +58,7 @@</span> <span class="p_context"> static void __init mpc8536_ds_setup_arch(void)</span>
 machine_arch_initcall(mpc8536_ds, mpc85xx_common_publish_devices);
 
 machine_arch_initcall(mpc8536_ds, swiotlb_setup_bus_notifier);
<span class="p_add">+machine_arch_initcall(mpc8536_ds, fsl_rstcr_restart_register);</span>
 
 /*
  * Called very early, device-tree isn&#39;t unflattened
<span class="p_chunk">@@ -77,7 +78,6 @@</span> <span class="p_context"> define_machine(mpc8536_ds) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/mpc85xx_ads.c b/arch/powerpc/platforms/85xx/mpc85xx_ads.c</span>
<span class="p_header">index 8756715..8dfab98 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/mpc85xx_ads.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/mpc85xx_ads.c</span>
<span class="p_chunk">@@ -154,6 +154,7 @@</span> <span class="p_context"> static void mpc85xx_ads_show_cpuinfo(struct seq_file *m)</span>
 }
 
 machine_arch_initcall(mpc85xx_ads, mpc85xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(mpc85xx_ads, fsl_rstcr_restart_register);</span>
 
 /*
  * Called very early, device-tree isn&#39;t unflattened
<span class="p_chunk">@@ -170,7 +171,6 @@</span> <span class="p_context"> define_machine(mpc85xx_ads) {</span>
 	.init_IRQ		= mpc85xx_ads_pic_init,
 	.show_cpuinfo		= mpc85xx_ads_show_cpuinfo,
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/mpc85xx_cds.c b/arch/powerpc/platforms/85xx/mpc85xx_cds.c</span>
<span class="p_header">index 62f171c..84bcafa 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/mpc85xx_cds.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/mpc85xx_cds.c</span>
<span class="p_chunk">@@ -83,7 +83,8 @@</span> <span class="p_context"> static int mpc85xx_exclude_device(struct pci_controller *hose,</span>
 		return PCIBIOS_SUCCESSFUL;
 }
 
<span class="p_del">-static void __noreturn mpc85xx_cds_restart(char *cmd)</span>
<span class="p_add">+static int mpc85xx_cds_restart(struct notifier_block *this,</span>
<span class="p_add">+			       unsigned long mode, void *cmd)</span>
 {
 	struct pci_dev *dev;
 	u_char tmp;
<span class="p_chunk">@@ -108,12 +109,25 @@</span> <span class="p_context"> static void __noreturn mpc85xx_cds_restart(char *cmd)</span>
 	}
 
 	/*
<span class="p_del">-	 *  If we can&#39;t find the VIA chip (maybe the P2P bridge is disabled)</span>
<span class="p_del">-	 *  or the VIA chip reset didn&#39;t work, just use the default reset.</span>
<span class="p_add">+	 *  If we can&#39;t find the VIA chip (maybe the P2P bridge is</span>
<span class="p_add">+	 *  disabled) or the VIA chip reset didn&#39;t work, just return</span>
<span class="p_add">+	 *  and let default reset sequence happen.</span>
 	 */
<span class="p_del">-	fsl_rstcr_restart(NULL);</span>
<span class="p_add">+	return NOTIFY_DONE;</span>
 }
 
<span class="p_add">+static int mpc85xx_cds_restart_register(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	static struct notifier_block restart_handler;</span>
<span class="p_add">+</span>
<span class="p_add">+	restart_handler.notifier_call = mpc85xx_cds_restart;</span>
<span class="p_add">+	restart_handler.priority = 192;</span>
<span class="p_add">+</span>
<span class="p_add">+	return register_restart_handler(&amp;restart_handler);</span>
<span class="p_add">+}</span>
<span class="p_add">+machine_arch_initcall(mpc85xx_cds, mpc85xx_cds_restart_register);</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
 static void __init mpc85xx_cds_pci_irq_fixup(struct pci_dev *dev)
 {
 	u_char c;
<span class="p_chunk">@@ -371,6 +385,7 @@</span> <span class="p_context"> static int __init mpc85xx_cds_probe(void)</span>
 }
 
 machine_arch_initcall(mpc85xx_cds, mpc85xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(mpc85xx_cds, fsl_rstcr_restart_register);</span>
 
 define_machine(mpc85xx_cds) {
 	.name		= &quot;MPC85xx CDS&quot;,
<span class="p_chunk">@@ -380,11 +395,8 @@</span> <span class="p_context"> define_machine(mpc85xx_cds) {</span>
 	.show_cpuinfo	= mpc85xx_cds_show_cpuinfo,
 	.get_irq	= mpic_get_irq,
 #ifdef CONFIG_PCI
<span class="p_del">-	.restart	= mpc85xx_cds_restart,</span>
 	.pcibios_fixup_bus	= mpc85xx_cds_fixup_bus,
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
<span class="p_del">-#else</span>
<span class="p_del">-	.restart	= fsl_rstcr_restart,</span>
 #endif
 	.calibrate_decr = generic_calibrate_decr,
 	.progress	= udbg_progress,
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/mpc85xx_ds.c b/arch/powerpc/platforms/85xx/mpc85xx_ds.c</span>
<span class="p_header">index 6bc07d8..da8037e 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/mpc85xx_ds.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/mpc85xx_ds.c</span>
<span class="p_chunk">@@ -178,6 +178,10 @@</span> <span class="p_context"> machine_arch_initcall(mpc8544_ds, swiotlb_setup_bus_notifier);</span>
 machine_arch_initcall(mpc8572_ds, swiotlb_setup_bus_notifier);
 machine_arch_initcall(p2020_ds, swiotlb_setup_bus_notifier);
 
<span class="p_add">+machine_arch_initcall(mpc8544_ds, fsl_rstcr_restart_register);</span>
<span class="p_add">+machine_arch_initcall(mpc8572_ds, fsl_rstcr_restart_register);</span>
<span class="p_add">+machine_arch_initcall(p2020_ds, fsl_rstcr_restart_register);</span>
<span class="p_add">+</span>
 /*
  * Called very early, device-tree isn&#39;t unflattened
  */
<span class="p_chunk">@@ -204,7 +208,6 @@</span> <span class="p_context"> define_machine(mpc8544_ds) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_chunk">@@ -219,7 +222,6 @@</span> <span class="p_context"> define_machine(mpc8572_ds) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_chunk">@@ -234,7 +236,6 @@</span> <span class="p_context"> define_machine(p2020_ds) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/mpc85xx_mds.c b/arch/powerpc/platforms/85xx/mpc85xx_mds.c</span>
<span class="p_header">index fa9cd71..dbcb467 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/mpc85xx_mds.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/mpc85xx_mds.c</span>
<span class="p_chunk">@@ -363,6 +363,10 @@</span> <span class="p_context"> machine_arch_initcall(mpc8568_mds, swiotlb_setup_bus_notifier);</span>
 machine_arch_initcall(mpc8569_mds, swiotlb_setup_bus_notifier);
 machine_arch_initcall(p1021_mds, swiotlb_setup_bus_notifier);
 
<span class="p_add">+machine_arch_initcall(mpc8568_mds, fsl_rstcr_restart_register);</span>
<span class="p_add">+machine_arch_initcall(mpc8569_mds, fsl_rstcr_restart_register);</span>
<span class="p_add">+machine_arch_initcall(p1021_mds, fsl_rstcr_restart_register);</span>
<span class="p_add">+</span>
 static void __init mpc85xx_mds_pic_init(void)
 {
 	struct mpic *mpic = mpic_alloc(NULL, 0, MPIC_BIG_ENDIAN |
<span class="p_chunk">@@ -385,7 +389,6 @@</span> <span class="p_context"> define_machine(mpc8568_mds) {</span>
 	.setup_arch	= mpc85xx_mds_setup_arch,
 	.init_IRQ	= mpc85xx_mds_pic_init,
 	.get_irq	= mpic_get_irq,
<span class="p_del">-	.restart	= fsl_rstcr_restart,</span>
 	.calibrate_decr	= generic_calibrate_decr,
 	.progress	= udbg_progress,
 #ifdef CONFIG_PCI
<span class="p_chunk">@@ -405,7 +408,6 @@</span> <span class="p_context"> define_machine(mpc8569_mds) {</span>
 	.setup_arch	= mpc85xx_mds_setup_arch,
 	.init_IRQ	= mpc85xx_mds_pic_init,
 	.get_irq	= mpic_get_irq,
<span class="p_del">-	.restart	= fsl_rstcr_restart,</span>
 	.calibrate_decr	= generic_calibrate_decr,
 	.progress	= udbg_progress,
 #ifdef CONFIG_PCI
<span class="p_chunk">@@ -426,7 +428,6 @@</span> <span class="p_context"> define_machine(p1021_mds) {</span>
 	.setup_arch	= mpc85xx_mds_setup_arch,
 	.init_IRQ	= mpc85xx_mds_pic_init,
 	.get_irq	= mpic_get_irq,
<span class="p_del">-	.restart	= fsl_rstcr_restart,</span>
 	.calibrate_decr	= generic_calibrate_decr,
 	.progress	= udbg_progress,
 #ifdef CONFIG_PCI
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/mpc85xx_rdb.c b/arch/powerpc/platforms/85xx/mpc85xx_rdb.c</span>
<span class="p_header">index c1499cb..12ec044 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/mpc85xx_rdb.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/mpc85xx_rdb.c</span>
<span class="p_chunk">@@ -142,6 +142,17 @@</span> <span class="p_context"> machine_arch_initcall(p1021_rdb_pc, mpc85xx_common_publish_devices);</span>
 machine_arch_initcall(p1025_rdb, mpc85xx_common_publish_devices);
 machine_arch_initcall(p1024_rdb, mpc85xx_common_publish_devices);
 
<span class="p_add">+machine_arch_initcall(p2020_rdb, fsl_rstcr_restart_register);</span>
<span class="p_add">+machine_arch_initcall(p2020_rdb_pc, fsl_rstcr_restart_register);</span>
<span class="p_add">+machine_arch_initcall(p1020_mbg_pc, fsl_rstcr_restart_register);</span>
<span class="p_add">+machine_arch_initcall(p1020_rdb, fsl_rstcr_restart_register);</span>
<span class="p_add">+machine_arch_initcall(p1020_rdb_pc, fsl_rstcr_restart_register);</span>
<span class="p_add">+machine_arch_initcall(p1020_rdb_pd, fsl_rstcr_restart_register);</span>
<span class="p_add">+machine_arch_initcall(p1020_utm_pc, fsl_rstcr_restart_register);</span>
<span class="p_add">+machine_arch_initcall(p1021_rdb_pc, fsl_rstcr_restart_register);</span>
<span class="p_add">+machine_arch_initcall(p1025_rdb, fsl_rstcr_restart_register);</span>
<span class="p_add">+machine_arch_initcall(p1024_rdb, fsl_rstcr_restart_register);</span>
<span class="p_add">+</span>
 /*
  * Called very early, device-tree isn&#39;t unflattened
  */
<span class="p_chunk">@@ -213,7 +224,6 @@</span> <span class="p_context"> define_machine(p2020_rdb) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_chunk">@@ -228,7 +238,6 @@</span> <span class="p_context"> define_machine(p1020_rdb) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_chunk">@@ -243,7 +252,6 @@</span> <span class="p_context"> define_machine(p1021_rdb_pc) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_chunk">@@ -258,7 +266,6 @@</span> <span class="p_context"> define_machine(p2020_rdb_pc) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_chunk">@@ -273,7 +280,6 @@</span> <span class="p_context"> define_machine(p1025_rdb) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_chunk">@@ -288,7 +294,6 @@</span> <span class="p_context"> define_machine(p1020_mbg_pc) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_chunk">@@ -303,7 +308,6 @@</span> <span class="p_context"> define_machine(p1020_utm_pc) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_chunk">@@ -318,7 +322,6 @@</span> <span class="p_context"> define_machine(p1020_rdb_pc) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_chunk">@@ -333,7 +336,6 @@</span> <span class="p_context"> define_machine(p1020_rdb_pd) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_chunk">@@ -348,7 +350,6 @@</span> <span class="p_context"> define_machine(p1024_rdb) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/mvme2500.c b/arch/powerpc/platforms/85xx/mvme2500.c</span>
<span class="p_header">index acc3d0d..dc826eb 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/mvme2500.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/mvme2500.c</span>
<span class="p_chunk">@@ -47,6 +47,7 @@</span> <span class="p_context"> static void __init mvme2500_setup_arch(void)</span>
 }
 
 machine_arch_initcall(mvme2500, mpc85xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(mvme2500, fsl_rstcr_restart_register);</span>
 
 /*
  * Called very early, device-tree isn&#39;t unflattened
<span class="p_chunk">@@ -66,7 +67,6 @@</span> <span class="p_context"> define_machine(mvme2500) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/p1010rdb.c b/arch/powerpc/platforms/85xx/p1010rdb.c</span>
<span class="p_header">index 661d7b5..b836a23 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/p1010rdb.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/p1010rdb.c</span>
<span class="p_chunk">@@ -56,6 +56,7 @@</span> <span class="p_context"> static void __init p1010_rdb_setup_arch(void)</span>
 
 machine_arch_initcall(p1010_rdb, mpc85xx_common_publish_devices);
 machine_arch_initcall(p1010_rdb, swiotlb_setup_bus_notifier);
<span class="p_add">+machine_arch_initcall(p1010_rdb, fsl_rstcr_restart_register);</span>
 
 /*
  * Called very early, device-tree isn&#39;t unflattened
<span class="p_chunk">@@ -79,7 +80,6 @@</span> <span class="p_context"> define_machine(p1010_rdb) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/p1022_ds.c b/arch/powerpc/platforms/85xx/p1022_ds.c</span>
<span class="p_header">index 63568d6..52c97ee 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/p1022_ds.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/p1022_ds.c</span>
<span class="p_chunk">@@ -549,6 +549,7 @@</span> <span class="p_context"> static void __init p1022_ds_setup_arch(void)</span>
 machine_arch_initcall(p1022_ds, mpc85xx_common_publish_devices);
 
 machine_arch_initcall(p1022_ds, swiotlb_setup_bus_notifier);
<span class="p_add">+machine_arch_initcall(p1022_ds, fsl_rstcr_restart_register);</span>
 
 /*
  * Called very early, device-tree isn&#39;t unflattened
<span class="p_chunk">@@ -568,7 +569,6 @@</span> <span class="p_context"> define_machine(p1022_ds) {</span>
 	.pcibios_fixup_phb	= fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/p1022_rdk.c b/arch/powerpc/platforms/85xx/p1022_rdk.c</span>
<span class="p_header">index 2f29436..9dc99dc 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/p1022_rdk.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/p1022_rdk.c</span>
<span class="p_chunk">@@ -130,6 +130,8 @@</span> <span class="p_context"> machine_arch_initcall(p1022_rdk, mpc85xx_common_publish_devices);</span>
 
 machine_arch_initcall(p1022_rdk, swiotlb_setup_bus_notifier);
 
<span class="p_add">+machine_arch_initcall(p1022_rdk, fsl_rstcr_restart_register);</span>
<span class="p_add">+</span>
 /*
  * Called very early, device-tree isn&#39;t unflattened
  */
<span class="p_chunk">@@ -148,7 +150,6 @@</span> <span class="p_context"> define_machine(p1022_rdk) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/p1023_rdb.c b/arch/powerpc/platforms/85xx/p1023_rdb.c</span>
<span class="p_header">index 40d8de5..81e07d4 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/p1023_rdb.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/p1023_rdb.c</span>
<span class="p_chunk">@@ -86,6 +86,7 @@</span> <span class="p_context"> static void __init mpc85xx_rdb_setup_arch(void)</span>
 }
 
 machine_arch_initcall(p1023_rdb, mpc85xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(p1023_rdb, fsl_rstcr_restart_register);</span>
 
 static void __init mpc85xx_rdb_pic_init(void)
 {
<span class="p_chunk">@@ -110,7 +111,6 @@</span> <span class="p_context"> define_machine(p1023_rdb) {</span>
 	.setup_arch		= mpc85xx_rdb_setup_arch,
 	.init_IRQ		= mpc85xx_rdb_pic_init,
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 #ifdef CONFIG_PCI
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/ppa8548.c b/arch/powerpc/platforms/85xx/ppa8548.c</span>
<span class="p_header">index 2410167..ab843b1 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/ppa8548.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/ppa8548.c</span>
<span class="p_chunk">@@ -75,6 +75,7 @@</span> <span class="p_context"> static int __init declare_of_platform_devices(void)</span>
 	return 0;
 }
 machine_device_initcall(ppa8548, declare_of_platform_devices);
<span class="p_add">+machine_arch_initcall(ppa8548, fsl_rstcr_restart_register);</span>
 
 /*
  * Called very early, device-tree isn&#39;t unflattened
<span class="p_chunk">@@ -91,7 +92,6 @@</span> <span class="p_context"> define_machine(ppa8548) {</span>
 	.init_IRQ	= ppa8548_pic_init,
 	.show_cpuinfo	= ppa8548_show_cpuinfo,
 	.get_irq	= mpic_get_irq,
<span class="p_del">-	.restart	= fsl_rstcr_restart,</span>
 	.calibrate_decr = generic_calibrate_decr,
 	.progress	= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/qemu_e500.c b/arch/powerpc/platforms/85xx/qemu_e500.c</span>
<span class="p_header">index 50d7458..e76566c 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/qemu_e500.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/qemu_e500.c</span>
<span class="p_chunk">@@ -66,6 +66,7 @@</span> <span class="p_context"> static int __init qemu_e500_probe(void)</span>
 }
 
 machine_arch_initcall(qemu_e500, mpc85xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(qemu_e500, fsl_rstcr_restart_register);</span>
 
 define_machine(qemu_e500) {
 	.name			= &quot;QEMU e500&quot;,
<span class="p_chunk">@@ -77,7 +78,6 @@</span> <span class="p_context"> define_machine(qemu_e500) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_coreint_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/sbc8548.c b/arch/powerpc/platforms/85xx/sbc8548.c</span>
<span class="p_header">index 62b6c45..dfe0dd8 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/sbc8548.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/sbc8548.c</span>
<span class="p_chunk">@@ -114,6 +114,7 @@</span> <span class="p_context"> static void sbc8548_show_cpuinfo(struct seq_file *m)</span>
 }
 
 machine_arch_initcall(sbc8548, mpc85xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(sbc8548, fsl_rstcr_restart_register);</span>
 
 /*
  * Called very early, device-tree isn&#39;t unflattened
<span class="p_chunk">@@ -130,7 +131,6 @@</span> <span class="p_context"> define_machine(sbc8548) {</span>
 	.init_IRQ	= sbc8548_pic_init,
 	.show_cpuinfo	= sbc8548_show_cpuinfo,
 	.get_irq	= mpic_get_irq,
<span class="p_del">-	.restart	= fsl_rstcr_restart,</span>
 #ifdef CONFIG_PCI
 	.pcibios_fixup_bus	= fsl_pcibios_fixup_bus,
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/socrates.c b/arch/powerpc/platforms/85xx/socrates.c</span>
<span class="p_header">index cd255ac..aa29cf7 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/socrates.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/socrates.c</span>
<span class="p_chunk">@@ -73,6 +73,7 @@</span> <span class="p_context"> static void __init socrates_setup_arch(void)</span>
 }
 
 machine_arch_initcall(socrates, mpc85xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(socrates, fsl_rstcr_restart_register);</span>
 
 /*
  * Called very early, device-tree isn&#39;t unflattened
<span class="p_chunk">@@ -91,7 +92,6 @@</span> <span class="p_context"> define_machine(socrates) {</span>
 	.setup_arch		= socrates_setup_arch,
 	.init_IRQ		= socrates_pic_init,
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/stx_gp3.c b/arch/powerpc/platforms/85xx/stx_gp3.c</span>
<span class="p_header">index 91b824c..880797a 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/stx_gp3.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/stx_gp3.c</span>
<span class="p_chunk">@@ -87,6 +87,7 @@</span> <span class="p_context"> static void stx_gp3_show_cpuinfo(struct seq_file *m)</span>
 }
 
 machine_arch_initcall(stx_gp3, mpc85xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(stx_gp3, fsl_rstcr_restart_register);</span>
 
 /*
  * Called very early, device-tree isn&#39;t unflattened
<span class="p_chunk">@@ -103,7 +104,6 @@</span> <span class="p_context"> define_machine(stx_gp3) {</span>
 	.init_IRQ		= stx_gp3_pic_init,
 	.show_cpuinfo		= stx_gp3_show_cpuinfo,
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/tqm85xx.c b/arch/powerpc/platforms/85xx/tqm85xx.c</span>
<span class="p_header">index b7c5445..a4de7be 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/tqm85xx.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/tqm85xx.c</span>
<span class="p_chunk">@@ -107,6 +107,7 @@</span> <span class="p_context"> DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_TI, PCI_DEVICE_ID_TI_1520,</span>
 		tqm85xx_ti1520_fixup);
 
 machine_arch_initcall(tqm85xx, mpc85xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(tqm85xx, fsl_rstcr_restart_register);</span>
 
 static const char * const board[] __initconst = {
 	&quot;tqc,tqm8540&quot;,
<span class="p_chunk">@@ -132,7 +133,6 @@</span> <span class="p_context"> define_machine(tqm85xx) {</span>
 	.init_IRQ		= tqm85xx_pic_init,
 	.show_cpuinfo		= tqm85xx_show_cpuinfo,
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/twr_p102x.c b/arch/powerpc/platforms/85xx/twr_p102x.c</span>
<span class="p_header">index 1bc02a8..ee80dab 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/twr_p102x.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/twr_p102x.c</span>
<span class="p_chunk">@@ -125,6 +125,7 @@</span> <span class="p_context"> static void __init twr_p1025_setup_arch(void)</span>
 }
 
 machine_arch_initcall(twr_p1025, mpc85xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(twr_p1025, fsl_rstcr_restart_register);</span>
 
 static int __init twr_p1025_probe(void)
 {
<span class="p_chunk">@@ -140,7 +141,6 @@</span> <span class="p_context"> define_machine(twr_p1025) {</span>
 	.pcibios_fixup_bus	= fsl_pcibios_fixup_bus,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/85xx/xes_mpc85xx.c b/arch/powerpc/platforms/85xx/xes_mpc85xx.c</span>
<span class="p_header">index cf0c70f..b504a7a 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/85xx/xes_mpc85xx.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/85xx/xes_mpc85xx.c</span>
<span class="p_chunk">@@ -139,6 +139,10 @@</span> <span class="p_context"> machine_arch_initcall(xes_mpc8572, mpc85xx_common_publish_devices);</span>
 machine_arch_initcall(xes_mpc8548, mpc85xx_common_publish_devices);
 machine_arch_initcall(xes_mpc8540, mpc85xx_common_publish_devices);
 
<span class="p_add">+machine_arch_initcall(xes_mpc8572, fsl_rstcr_restart_register);</span>
<span class="p_add">+machine_arch_initcall(xes_mpc8548, fsl_rstcr_restart_register);</span>
<span class="p_add">+machine_arch_initcall(xes_mpc8540, fsl_rstcr_restart_register);</span>
<span class="p_add">+</span>
 /*
  * Called very early, device-tree isn&#39;t unflattened
  */
<span class="p_chunk">@@ -167,7 +171,6 @@</span> <span class="p_context"> define_machine(xes_mpc8572) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_chunk">@@ -182,7 +185,6 @@</span> <span class="p_context"> define_machine(xes_mpc8548) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_chunk">@@ -197,7 +199,6 @@</span> <span class="p_context"> define_machine(xes_mpc8540) {</span>
 	.pcibios_fixup_phb      = fsl_pcibios_fixup_phb,
 #endif
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
 };
<span class="p_header">diff --git a/arch/powerpc/platforms/86xx/gef_ppc9a.c b/arch/powerpc/platforms/86xx/gef_ppc9a.c</span>
<span class="p_header">index ef684af..3571b4c 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/86xx/gef_ppc9a.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/86xx/gef_ppc9a.c</span>
<span class="p_chunk">@@ -196,6 +196,7 @@</span> <span class="p_context"> static int __init gef_ppc9a_probe(void)</span>
 }
 
 machine_arch_initcall(gef_ppc9a, mpc86xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(gef_ppc9a, fsl_rstcr_restart_register);</span>
 
 define_machine(gef_ppc9a) {
 	.name			= &quot;GE PPC9A&quot;,
<span class="p_chunk">@@ -204,7 +205,6 @@</span> <span class="p_context"> define_machine(gef_ppc9a) {</span>
 	.init_IRQ		= gef_ppc9a_init_irq,
 	.show_cpuinfo		= gef_ppc9a_show_cpuinfo,
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.time_init		= mpc86xx_time_init,
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
<span class="p_header">diff --git a/arch/powerpc/platforms/86xx/gef_sbc310.c b/arch/powerpc/platforms/86xx/gef_sbc310.c</span>
<span class="p_header">index 67dd0c2..54f1521 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/86xx/gef_sbc310.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/86xx/gef_sbc310.c</span>
<span class="p_chunk">@@ -183,6 +183,7 @@</span> <span class="p_context"> static int __init gef_sbc310_probe(void)</span>
 }
 
 machine_arch_initcall(gef_sbc310, mpc86xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(gef_sbc310, fsl_rstcr_restart_register);</span>
 
 define_machine(gef_sbc310) {
 	.name			= &quot;GE SBC310&quot;,
<span class="p_chunk">@@ -191,7 +192,6 @@</span> <span class="p_context"> define_machine(gef_sbc310) {</span>
 	.init_IRQ		= gef_sbc310_init_irq,
 	.show_cpuinfo		= gef_sbc310_show_cpuinfo,
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.time_init		= mpc86xx_time_init,
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
<span class="p_header">diff --git a/arch/powerpc/platforms/86xx/gef_sbc610.c b/arch/powerpc/platforms/86xx/gef_sbc610.c</span>
<span class="p_header">index 8050269..f5b25a5 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/86xx/gef_sbc610.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/86xx/gef_sbc610.c</span>
<span class="p_chunk">@@ -173,6 +173,7 @@</span> <span class="p_context"> static int __init gef_sbc610_probe(void)</span>
 }
 
 machine_arch_initcall(gef_sbc610, mpc86xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(gef_sbc610, fsl_rstcr_restart_register);</span>
 
 define_machine(gef_sbc610) {
 	.name			= &quot;GE SBC610&quot;,
<span class="p_chunk">@@ -181,7 +182,6 @@</span> <span class="p_context"> define_machine(gef_sbc610) {</span>
 	.init_IRQ		= gef_sbc610_init_irq,
 	.show_cpuinfo		= gef_sbc610_show_cpuinfo,
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.time_init		= mpc86xx_time_init,
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
<span class="p_header">diff --git a/arch/powerpc/platforms/86xx/mpc8610_hpcd.c b/arch/powerpc/platforms/86xx/mpc8610_hpcd.c</span>
<span class="p_header">index fef0582..7f21a9d 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/86xx/mpc8610_hpcd.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/86xx/mpc8610_hpcd.c</span>
<span class="p_chunk">@@ -111,6 +111,7 @@</span> <span class="p_context"> static int __init mpc8610_declare_of_platform_devices(void)</span>
 	return 0;
 }
 machine_arch_initcall(mpc86xx_hpcd, mpc8610_declare_of_platform_devices);
<span class="p_add">+machine_arch_initcall(mpc86xx_hpcd, fsl_rstcr_restart_register);</span>
 
 #if defined(CONFIG_FB_FSL_DIU) || defined(CONFIG_FB_FSL_DIU_MODULE)
 
<span class="p_chunk">@@ -331,7 +332,6 @@</span> <span class="p_context"> define_machine(mpc86xx_hpcd) {</span>
 	.setup_arch		= mpc86xx_hpcd_setup_arch,
 	.init_IRQ		= mpc86xx_init_irq,
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.time_init		= mpc86xx_time_init,
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
<span class="p_header">diff --git a/arch/powerpc/platforms/86xx/mpc86xx_hpcn.c b/arch/powerpc/platforms/86xx/mpc86xx_hpcn.c</span>
<span class="p_header">index 5ae42a0..fd7258c 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/86xx/mpc86xx_hpcn.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/86xx/mpc86xx_hpcn.c</span>
<span class="p_chunk">@@ -122,6 +122,7 @@</span> <span class="p_context"> static int __init declare_of_platform_devices(void)</span>
 }
 machine_arch_initcall(mpc86xx_hpcn, declare_of_platform_devices);
 machine_arch_initcall(mpc86xx_hpcn, swiotlb_setup_bus_notifier);
<span class="p_add">+machine_arch_initcall(mpc86xx_hpcn, fsl_rstcr_restart_register);</span>
 
 define_machine(mpc86xx_hpcn) {
 	.name			= &quot;MPC86xx HPCN&quot;,
<span class="p_chunk">@@ -130,7 +131,6 @@</span> <span class="p_context"> define_machine(mpc86xx_hpcn) {</span>
 	.init_IRQ		= mpc86xx_init_irq,
 	.show_cpuinfo		= mpc86xx_hpcn_show_cpuinfo,
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.time_init		= mpc86xx_time_init,
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
<span class="p_header">diff --git a/arch/powerpc/platforms/86xx/sbc8641d.c b/arch/powerpc/platforms/86xx/sbc8641d.c</span>
<span class="p_header">index 52af573..4a547b1 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/86xx/sbc8641d.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/86xx/sbc8641d.c</span>
<span class="p_chunk">@@ -74,6 +74,7 @@</span> <span class="p_context"> static int __init sbc8641_probe(void)</span>
 }
 
 machine_arch_initcall(sbc8641, mpc86xx_common_publish_devices);
<span class="p_add">+machine_arch_initcall(sbc8641, fsl_rstcr_restart_register);</span>
 
 define_machine(sbc8641) {
 	.name			= &quot;SBC8641D&quot;,
<span class="p_chunk">@@ -82,7 +83,6 @@</span> <span class="p_context"> define_machine(sbc8641) {</span>
 	.init_IRQ		= mpc86xx_init_irq,
 	.show_cpuinfo		= sbc8641_show_cpuinfo,
 	.get_irq		= mpic_get_irq,
<span class="p_del">-	.restart		= fsl_rstcr_restart,</span>
 	.time_init		= mpc86xx_time_init,
 	.calibrate_decr		= generic_calibrate_decr,
 	.progress		= udbg_progress,
<span class="p_header">diff --git a/arch/powerpc/sysdev/fsl_soc.c b/arch/powerpc/sysdev/fsl_soc.c</span>
<span class="p_header">index a09ca70..0ba125f 100644</span>
<span class="p_header">--- a/arch/powerpc/sysdev/fsl_soc.c</span>
<span class="p_header">+++ b/arch/powerpc/sysdev/fsl_soc.c</span>
<span class="p_chunk">@@ -29,6 +29,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/fsl_devices.h&gt;
 #include &lt;linux/fs_enet_pd.h&gt;
 #include &lt;linux/fs_uart_pd.h&gt;
<span class="p_add">+#include &lt;linux/reboot.h&gt;</span>
 
 #include &lt;linux/atomic.h&gt;
 #include &lt;asm/io.h&gt;
<span class="p_chunk">@@ -194,9 +195,6 @@</span> <span class="p_context"> static int __init setup_rstcr(void)</span>
 		}
 	}
 
<span class="p_del">-	if (!rstcr &amp;&amp; ppc_md.restart == fsl_rstcr_restart)</span>
<span class="p_del">-		printk(KERN_ERR &quot;No RSTCR register, warm reboot won&#39;t work\n&quot;);</span>
<span class="p_del">-</span>
 	of_node_put(np);
 
 	return 0;
<span class="p_chunk">@@ -204,15 +202,29 @@</span> <span class="p_context"> static int __init setup_rstcr(void)</span>
 
 arch_initcall(setup_rstcr);
 
<span class="p_del">-void __noreturn fsl_rstcr_restart(char *cmd)</span>
<span class="p_add">+static int fsl_rstcr_restart(struct notifier_block *this,</span>
<span class="p_add">+			     unsigned long mode, void *cmd)</span>
 {
 	local_irq_disable();
 	if (rstcr)
 		/* set reset control register */
 		out_be32(rstcr, 0x2);	/* HRESET_REQ */
 
<span class="p_del">-	while (1) ;</span>
<span class="p_add">+	return NOTIFY_DONE;</span>
 }
<span class="p_add">+</span>
<span class="p_add">+int fsl_rstcr_restart_register(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	static struct notifier_block restart_handler;</span>
<span class="p_add">+</span>
<span class="p_add">+	restart_handler.notifier_call = fsl_rstcr_restart;</span>
<span class="p_add">+	restart_handler.priority = 128;</span>
<span class="p_add">+</span>
<span class="p_add">+	return register_restart_handler(&amp;restart_handler);</span>
<span class="p_add">+}</span>
<span class="p_add">+EXPORT_SYMBOL(fsl_rstcr_restart_register);</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
 #endif
 
 #if defined(CONFIG_FB_FSL_DIU) || defined(CONFIG_FB_FSL_DIU_MODULE)
<span class="p_header">diff --git a/arch/powerpc/sysdev/fsl_soc.h b/arch/powerpc/sysdev/fsl_soc.h</span>
<span class="p_header">index 433566a..e6c4246 100644</span>
<span class="p_header">--- a/arch/powerpc/sysdev/fsl_soc.h</span>
<span class="p_header">+++ b/arch/powerpc/sysdev/fsl_soc.h</span>
<span class="p_chunk">@@ -19,7 +19,7 @@</span> <span class="p_context"> extern u32 fsl_get_sys_freq(void);</span>
 struct spi_board_info;
 struct device_node;
 
<span class="p_del">-extern void __noreturn fsl_rstcr_restart(char *cmd);</span>
<span class="p_add">+extern int fsl_rstcr_restart_register(void);</span>
 
 /* The different ports that the DIU can be connected to */
 enum fsl_diu_monitor_port {

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



