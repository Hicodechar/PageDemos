
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v3] powerpc/mm: Implemented default_hugepagesz verification for powerpc - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v3] powerpc/mm: Implemented default_hugepagesz verification for powerpc</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=175185">victora</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 24, 2017, 11:52 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170724235202.5675-1-victora@linux.vnet.ibm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9860881/mbox/"
   >mbox</a>
|
   <a href="/patch/9860881/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9860881/">/patch/9860881/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	CE7FE60349 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 24 Jul 2017 23:52:22 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C1FE128592
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 24 Jul 2017 23:52:22 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id B53EB285DB; Mon, 24 Jul 2017 23:52:22 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 44BD128592
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 24 Jul 2017 23:52:22 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753987AbdGXXwT (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 24 Jul 2017 19:52:19 -0400
Received: from mx0b-001b2d01.pphosted.com ([148.163.158.5]:34296 &quot;EHLO
	mx0a-001b2d01.pphosted.com&quot; rhost-flags-OK-OK-OK-FAIL)
	by vger.kernel.org with ESMTP id S1750824AbdGXXwL (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 24 Jul 2017 19:52:11 -0400
Received: from pps.filterd (m0098416.ppops.net [127.0.0.1])
	by mx0b-001b2d01.pphosted.com (8.16.0.21/8.16.0.21) with SMTP id
	v6ONmfCQ131193
	for &lt;linux-kernel@vger.kernel.org&gt;; Mon, 24 Jul 2017 19:52:10 -0400
Received: from e24smtp05.br.ibm.com (e24smtp05.br.ibm.com [32.104.18.26])
	by mx0b-001b2d01.pphosted.com with ESMTP id 2bwnf3n3aa-1
	(version=TLSv1.2 cipher=AES256-SHA bits=256 verify=NOT)
	for &lt;linux-kernel@vger.kernel.org&gt;; Mon, 24 Jul 2017 19:52:10 -0400
Received: from localhost
	by e24smtp05.br.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use
	Only! Violators will be prosecuted
	for &lt;linux-kernel@vger.kernel.org&gt; from &lt;victora@linux.vnet.ibm.com&gt;; 
	Mon, 24 Jul 2017 20:52:08 -0300
Received: from d24relay04.br.ibm.com (9.13.39.146)
	by e24smtp05.br.ibm.com (10.172.0.141) with IBM ESMTP SMTP Gateway:
	Authorized Use Only! Violators will be prosecuted; 
	Mon, 24 Jul 2017 20:52:06 -0300
Received: from d24av04.br.ibm.com (d24av04.br.ibm.com [9.8.31.97])
	by d24relay04.br.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id
	v6ONq5vo24313892
	for &lt;linux-kernel@vger.kernel.org&gt;; Mon, 24 Jul 2017 20:52:06 -0300
Received: from d24av04.br.ibm.com (localhost [127.0.0.1])
	by d24av04.br.ibm.com (8.14.4/8.14.4/NCO v10.0 AVout) with ESMTP id
	v6ONq6EH031941
	for &lt;linux-kernel@vger.kernel.org&gt;; Mon, 24 Jul 2017 20:52:06 -0300
Received: from localhost ([9.85.155.144])
	by d24av04.br.ibm.com (8.14.4/8.14.4/NCO v10.0 AVin) with ESMTP id
	v6ONq4ct031931; Mon, 24 Jul 2017 20:52:05 -0300
From: Victor Aoqui &lt;victora@linux.vnet.ibm.com&gt;
To: linux-kernel@vger.kernel.org, linuxppc-dev@lists.ozlabs.org,
	aneesh.kumar@linux.vnet.ibm.com, mpe@ellerman.id.au,
	khandual@linux.vnet.ibm.com
Cc: victora@br.ibm.com, victora@linux.vnet.ibm.com,
	mauricfo@linux.vnet.ibm.com
Subject: [PATCH v3] powerpc/mm: Implemented default_hugepagesz verification
	for powerpc
Date: Mon, 24 Jul 2017 20:52:02 -0300
X-Mailer: git-send-email 2.11.0 (Apple Git-81)
X-TM-AS-MML: disable
x-cbid: 17072423-0032-0000-0000-0000057634AA
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 17072423-0033-0000-0000-000011FC8C22
Message-Id: &lt;20170724235202.5675-1-victora@linux.vnet.ibm.com&gt;
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10432:, ,
	definitions=2017-07-24_14:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
	spamscore=0 suspectscore=0
	malwarescore=0 phishscore=0 adultscore=0 bulkscore=0 classifier=spam
	adjust=0 reason=mlx scancount=1 engine=8.0.1-1706020000
	definitions=main-1707240368
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=175185">victora</a> - July 24, 2017, 11:52 p.m.</div>
<pre class="content">
Implemented default hugepage size verification (default_hugepagesz=)
in order to allow allocation of defined number of pages (hugepages=)
only for supported hugepage sizes.
<span class="signed-off-by">
Signed-off-by: Victor Aoqui &lt;victora@linux.vnet.ibm.com&gt;</span>
---
v2:

- Renamed default_hugepage_setup_sz function to hugetlb_default_size_setup;
- Added powerpc string to error message.

v3:

- Renamed hugetlb_default_size_setup() to hugepage_default_setup_sz();
- Implemented hugetlb_bad_default_size();
- Reimplemented hugepage_setup_sz() to just parse default_hugepagesz= and
check if it&#39;s a supported size;
- Added verification of default_hugepagesz= value on hugetlb_nrpages_setup()
before allocating hugepages.

 arch/powerpc/mm/hugetlbpage.c | 15 +++++++++++++++
 include/linux/hugetlb.h       |  1 +
 mm/hugetlb.c                  | 17 +++++++++++++++--
 3 files changed, 31 insertions(+), 2 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1141">Aneesh Kumar K.V</a> - Aug. 4, 2017, 5:57 a.m.</div>
<pre class="content">
Victor Aoqui &lt;victora@linux.vnet.ibm.com&gt; writes:
<span class="quote">
&gt; Implemented default hugepage size verification (default_hugepagesz=)</span>
<span class="quote">&gt; in order to allow allocation of defined number of pages (hugepages=)</span>
<span class="quote">&gt; only for supported hugepage sizes.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Signed-off-by: Victor Aoqui &lt;victora@linux.vnet.ibm.com&gt;</span>

I am still not sure about this. With current upstream we get

 PCI: Probing PCI hardware                                     
 PCI: Probing PCI hardware done                                                                                                                       
 HugeTLB: unsupported default_hugepagesz 2097152. Reverting to 16777216                                                                               
 HugeTLB registered 16.0 MiB page size, pre-allocated 0 pages                                                                                         
 HugeTLB registered 16.0 GiB page size, pre-allocated 0 pages  

That warning is added by

d715cf804a0318e83c75c0a7abd1a4b9ce13e8da

Which should be good enough right ?

-aneesh
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - Aug. 4, 2017, 6:17 p.m.</div>
<pre class="content">
On 07/24/2017 04:52 PM, Victor Aoqui wrote:
<span class="quote">&gt; Implemented default hugepage size verification (default_hugepagesz=)</span>
<span class="quote">&gt; in order to allow allocation of defined number of pages (hugepages=)</span>
<span class="quote">&gt; only for supported hugepage sizes.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Victor Aoqui &lt;victora@linux.vnet.ibm.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt; v2:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; - Renamed default_hugepage_setup_sz function to hugetlb_default_size_setup;</span>
<span class="quote">&gt; - Added powerpc string to error message.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; v3:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; - Renamed hugetlb_default_size_setup() to hugepage_default_setup_sz();</span>
<span class="quote">&gt; - Implemented hugetlb_bad_default_size();</span>
<span class="quote">&gt; - Reimplemented hugepage_setup_sz() to just parse default_hugepagesz= and</span>
<span class="quote">&gt; check if it&#39;s a supported size;</span>
<span class="quote">&gt; - Added verification of default_hugepagesz= value on hugetlb_nrpages_setup()</span>
<span class="quote">&gt; before allocating hugepages.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  arch/powerpc/mm/hugetlbpage.c | 15 +++++++++++++++</span>
<span class="quote">&gt;  include/linux/hugetlb.h       |  1 +</span>
<span class="quote">&gt;  mm/hugetlb.c                  | 17 +++++++++++++++--</span>
<span class="quote">&gt;  3 files changed, 31 insertions(+), 2 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/arch/powerpc/mm/hugetlbpage.c b/arch/powerpc/mm/hugetlbpage.c</span>
<span class="quote">&gt; index e1bf5ca..5990381 100644</span>
<span class="quote">&gt; --- a/arch/powerpc/mm/hugetlbpage.c</span>
<span class="quote">&gt; +++ b/arch/powerpc/mm/hugetlbpage.c</span>
<span class="quote">&gt; @@ -780,6 +780,21 @@ static int __init hugepage_setup_sz(char *str)</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  __setup(&quot;hugepagesz=&quot;, hugepage_setup_sz);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +static int __init hugepage_default_setup_sz(char *str)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	unsigned long long size;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	size = memparse(str, &amp;str);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	if (add_huge_page_size(size) != 0) {</span>
<span class="quote">&gt; +		hugetlb_bad_default_size();</span>
<span class="quote">&gt; +		pr_err(&quot;Invalid ppc default huge page size specified(%llu)\n&quot;, size);</span>
<span class="quote">&gt; +	}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	return 1;</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +__setup(&quot;default_hugepagesz=&quot;, hugepage_default_setup_sz);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  struct kmem_cache *hugepte_cache;</span>
<span class="quote">&gt;  static int __init hugetlbpage_init(void)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; diff --git a/include/linux/hugetlb.h b/include/linux/hugetlb.h</span>
<span class="quote">&gt; index 0ed8e41..2927200 100644</span>
<span class="quote">&gt; --- a/include/linux/hugetlb.h</span>
<span class="quote">&gt; +++ b/include/linux/hugetlb.h</span>
<span class="quote">&gt; @@ -361,6 +361,7 @@ int huge_add_to_page_cache(struct page *page, struct address_space *mapping,</span>
<span class="quote">&gt;  int __init alloc_bootmem_huge_page(struct hstate *h);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  void __init hugetlb_bad_size(void);</span>
<span class="quote">&gt; +void __init hugetlb_bad_default_size(void);</span>
<span class="quote">&gt;  void __init hugetlb_add_hstate(unsigned order);</span>
<span class="quote">&gt;  struct hstate *size_to_hstate(unsigned long size);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="quote">&gt; index bc48ee7..3c24266 100644</span>
<span class="quote">&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt; @@ -54,6 +54,7 @@</span>
<span class="quote">&gt;  static unsigned long __initdata default_hstate_max_huge_pages;</span>
<span class="quote">&gt;  static unsigned long __initdata default_hstate_size;</span>
<span class="quote">&gt;  static bool __initdata parsed_valid_hugepagesz = true;</span>
<span class="quote">&gt; +static bool __initdata parsed_valid_default_hugepagesz = true;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * Protects updates to hugepage_freelists, hugepage_activelist, nr_huge_pages,</span>
<span class="quote">&gt; @@ -2804,6 +2805,12 @@ void __init hugetlb_bad_size(void)</span>
<span class="quote">&gt;  	parsed_valid_hugepagesz = false;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +/* Should be called on processing a default_hugepagesz=... option */</span>
<span class="quote">&gt; +void __init hugetlb_bad_default_size(void)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	parsed_valid_default_hugepagesz = false;</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  void __init hugetlb_add_hstate(unsigned int order)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	struct hstate *h;</span>
<span class="quote">&gt; @@ -2846,8 +2853,14 @@ static int __init hugetlb_nrpages_setup(char *s)</span>
<span class="quote">&gt;  	 * !hugetlb_max_hstate means we haven&#39;t parsed a hugepagesz= parameter yet,</span>
<span class="quote">&gt;  	 * so this hugepages= parameter goes to the &quot;default hstate&quot;.</span>
<span class="quote">&gt;  	 */</span>
<span class="quote">&gt; -	else if (!hugetlb_max_hstate)</span>
<span class="quote">&gt; -		mhp = &amp;default_hstate_max_huge_pages;</span>
<span class="quote">&gt; +	else if (!hugetlb_max_hstate) {</span>
<span class="quote">&gt; +		if (!parsed_valid_default_hugepagesz) {</span>
<span class="quote">&gt; +			pr_warn(&quot;hugepages = %s cannot be allocated for &quot;</span>
<span class="quote">&gt; +				&quot;unsupported default_hugepagesz, ignoring\n&quot;, s);</span>
<span class="quote">&gt; +			parsed_valid_default_hugepagesz = true;</span>
<span class="quote">&gt; +		} else</span>
<span class="quote">&gt; +			mhp = &amp;default_hstate_max_huge_pages;</span>
<span class="quote">&gt; +	}</span>
<span class="quote">&gt;  	else</span>
<span class="quote">&gt;  		mhp = &amp;parsed_hstate-&gt;max_huge_pages;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; </span>

My compiler tells me,

mm/hugetlb.c: In function ‘hugetlb_nrpages_setup’:
mm/hugetlb.c:2873:8: warning: ‘mhp’ may be used uninitialized in this function [-Wmaybe-uninitialized]

You have added a way of getting out of that big if/else if statement without
setting mhp.  mhp will be examined later in the code, so this is indeed a bug.

Like Aneesh, I am not sure if there is great benefit in this patch.

You added this change in functionality only for powerpc.  IMO, it would be
best if behavior was consistent in all architectures.  So, if we change it
for powerpc we may want to change everywhere.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=175185">victora</a> - Aug. 14, 2017, 10:06 p.m.</div>
<pre class="content">
Em 2017-08-04 02:57, Aneesh Kumar K.V escreveu:
<span class="quote">&gt; Victor Aoqui &lt;victora@linux.vnet.ibm.com&gt; writes:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;&gt; Implemented default hugepage size verification (default_hugepagesz=)</span>
<span class="quote">&gt;&gt; in order to allow allocation of defined number of pages (hugepages=)</span>
<span class="quote">&gt;&gt; only for supported hugepage sizes.</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; Signed-off-by: Victor Aoqui &lt;victora@linux.vnet.ibm.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I am still not sure about this. With current upstream we get</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  PCI: Probing PCI hardware</span>
<span class="quote">&gt;  PCI: Probing PCI hardware done</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  HugeTLB: unsupported default_hugepagesz 2097152. Reverting to</span>
<span class="quote">&gt; 16777216</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  HugeTLB registered 16.0 MiB page size, pre-allocated 0 pages</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  HugeTLB registered 16.0 GiB page size, pre-allocated 0 pages</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; That warning is added by</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; d715cf804a0318e83c75c0a7abd1a4b9ce13e8da</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Which should be good enough right ?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -aneesh</span>

Hi Aneesh,

Sorry for the delay. I was on vacation.
Yes, that solves the issue. This patch was accepted when I was fixing 
the last version.
Sorry for the inconvenience.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=175185">victora</a> - Aug. 14, 2017, 10:12 p.m.</div>
<pre class="content">
Em 2017-08-04 15:17, Mike Kravetz escreveu:
<span class="quote">&gt; On 07/24/2017 04:52 PM, Victor Aoqui wrote:</span>
<span class="quote">&gt;&gt; Implemented default hugepage size verification (default_hugepagesz=)</span>
<span class="quote">&gt;&gt; in order to allow allocation of defined number of pages (hugepages=)</span>
<span class="quote">&gt;&gt; only for supported hugepage sizes.</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; Signed-off-by: Victor Aoqui &lt;victora@linux.vnet.ibm.com&gt;</span>
<span class="quote">&gt;&gt; ---</span>
<span class="quote">&gt;&gt; v2:</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; - Renamed default_hugepage_setup_sz function to </span>
<span class="quote">&gt;&gt; hugetlb_default_size_setup;</span>
<span class="quote">&gt;&gt; - Added powerpc string to error message.</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; v3:</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; - Renamed hugetlb_default_size_setup() to hugepage_default_setup_sz();</span>
<span class="quote">&gt;&gt; - Implemented hugetlb_bad_default_size();</span>
<span class="quote">&gt;&gt; - Reimplemented hugepage_setup_sz() to just parse default_hugepagesz= </span>
<span class="quote">&gt;&gt; and</span>
<span class="quote">&gt;&gt; check if it&#39;s a supported size;</span>
<span class="quote">&gt;&gt; - Added verification of default_hugepagesz= value on </span>
<span class="quote">&gt;&gt; hugetlb_nrpages_setup()</span>
<span class="quote">&gt;&gt; before allocating hugepages.</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt;  arch/powerpc/mm/hugetlbpage.c | 15 +++++++++++++++</span>
<span class="quote">&gt;&gt;  include/linux/hugetlb.h       |  1 +</span>
<span class="quote">&gt;&gt;  mm/hugetlb.c                  | 17 +++++++++++++++--</span>
<span class="quote">&gt;&gt;  3 files changed, 31 insertions(+), 2 deletions(-)</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; diff --git a/arch/powerpc/mm/hugetlbpage.c </span>
<span class="quote">&gt;&gt; b/arch/powerpc/mm/hugetlbpage.c</span>
<span class="quote">&gt;&gt; index e1bf5ca..5990381 100644</span>
<span class="quote">&gt;&gt; --- a/arch/powerpc/mm/hugetlbpage.c</span>
<span class="quote">&gt;&gt; +++ b/arch/powerpc/mm/hugetlbpage.c</span>
<span class="quote">&gt;&gt; @@ -780,6 +780,21 @@ static int __init hugepage_setup_sz(char *str)</span>
<span class="quote">&gt;&gt;  }</span>
<span class="quote">&gt;&gt;  __setup(&quot;hugepagesz=&quot;, hugepage_setup_sz);</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; +static int __init hugepage_default_setup_sz(char *str)</span>
<span class="quote">&gt;&gt; +{</span>
<span class="quote">&gt;&gt; +	unsigned long long size;</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +	size = memparse(str, &amp;str);</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +	if (add_huge_page_size(size) != 0) {</span>
<span class="quote">&gt;&gt; +		hugetlb_bad_default_size();</span>
<span class="quote">&gt;&gt; +		pr_err(&quot;Invalid ppc default huge page size specified(%llu)\n&quot;, </span>
<span class="quote">&gt;&gt; size);</span>
<span class="quote">&gt;&gt; +	}</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +	return 1;</span>
<span class="quote">&gt;&gt; +}</span>
<span class="quote">&gt;&gt; +__setup(&quot;default_hugepagesz=&quot;, hugepage_default_setup_sz);</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt;  struct kmem_cache *hugepte_cache;</span>
<span class="quote">&gt;&gt;  static int __init hugetlbpage_init(void)</span>
<span class="quote">&gt;&gt;  {</span>
<span class="quote">&gt;&gt; diff --git a/include/linux/hugetlb.h b/include/linux/hugetlb.h</span>
<span class="quote">&gt;&gt; index 0ed8e41..2927200 100644</span>
<span class="quote">&gt;&gt; --- a/include/linux/hugetlb.h</span>
<span class="quote">&gt;&gt; +++ b/include/linux/hugetlb.h</span>
<span class="quote">&gt;&gt; @@ -361,6 +361,7 @@ int huge_add_to_page_cache(struct page *page, </span>
<span class="quote">&gt;&gt; struct address_space *mapping,</span>
<span class="quote">&gt;&gt;  int __init alloc_bootmem_huge_page(struct hstate *h);</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt;  void __init hugetlb_bad_size(void);</span>
<span class="quote">&gt;&gt; +void __init hugetlb_bad_default_size(void);</span>
<span class="quote">&gt;&gt;  void __init hugetlb_add_hstate(unsigned order);</span>
<span class="quote">&gt;&gt;  struct hstate *size_to_hstate(unsigned long size);</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="quote">&gt;&gt; index bc48ee7..3c24266 100644</span>
<span class="quote">&gt;&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt;&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt;&gt; @@ -54,6 +54,7 @@</span>
<span class="quote">&gt;&gt;  static unsigned long __initdata default_hstate_max_huge_pages;</span>
<span class="quote">&gt;&gt;  static unsigned long __initdata default_hstate_size;</span>
<span class="quote">&gt;&gt;  static bool __initdata parsed_valid_hugepagesz = true;</span>
<span class="quote">&gt;&gt; +static bool __initdata parsed_valid_default_hugepagesz = true;</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt;  /*</span>
<span class="quote">&gt;&gt;   * Protects updates to hugepage_freelists, hugepage_activelist, </span>
<span class="quote">&gt;&gt; nr_huge_pages,</span>
<span class="quote">&gt;&gt; @@ -2804,6 +2805,12 @@ void __init hugetlb_bad_size(void)</span>
<span class="quote">&gt;&gt;  	parsed_valid_hugepagesz = false;</span>
<span class="quote">&gt;&gt;  }</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; +/* Should be called on processing a default_hugepagesz=... option */</span>
<span class="quote">&gt;&gt; +void __init hugetlb_bad_default_size(void)</span>
<span class="quote">&gt;&gt; +{</span>
<span class="quote">&gt;&gt; +	parsed_valid_default_hugepagesz = false;</span>
<span class="quote">&gt;&gt; +}</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt;  void __init hugetlb_add_hstate(unsigned int order)</span>
<span class="quote">&gt;&gt;  {</span>
<span class="quote">&gt;&gt;  	struct hstate *h;</span>
<span class="quote">&gt;&gt; @@ -2846,8 +2853,14 @@ static int __init hugetlb_nrpages_setup(char </span>
<span class="quote">&gt;&gt; *s)</span>
<span class="quote">&gt;&gt;  	 * !hugetlb_max_hstate means we haven&#39;t parsed a hugepagesz= </span>
<span class="quote">&gt;&gt; parameter yet,</span>
<span class="quote">&gt;&gt;  	 * so this hugepages= parameter goes to the &quot;default hstate&quot;.</span>
<span class="quote">&gt;&gt;  	 */</span>
<span class="quote">&gt;&gt; -	else if (!hugetlb_max_hstate)</span>
<span class="quote">&gt;&gt; -		mhp = &amp;default_hstate_max_huge_pages;</span>
<span class="quote">&gt;&gt; +	else if (!hugetlb_max_hstate) {</span>
<span class="quote">&gt;&gt; +		if (!parsed_valid_default_hugepagesz) {</span>
<span class="quote">&gt;&gt; +			pr_warn(&quot;hugepages = %s cannot be allocated for &quot;</span>
<span class="quote">&gt;&gt; +				&quot;unsupported default_hugepagesz, ignoring\n&quot;, s);</span>
<span class="quote">&gt;&gt; +			parsed_valid_default_hugepagesz = true;</span>
<span class="quote">&gt;&gt; +		} else</span>
<span class="quote">&gt;&gt; +			mhp = &amp;default_hstate_max_huge_pages;</span>
<span class="quote">&gt;&gt; +	}</span>
<span class="quote">&gt;&gt;  	else</span>
<span class="quote">&gt;&gt;  		mhp = &amp;parsed_hstate-&gt;max_huge_pages;</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt; </span>
<span class="quote">&gt; My compiler tells me,</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; mm/hugetlb.c: In function ‘hugetlb_nrpages_setup’:</span>
<span class="quote">&gt; mm/hugetlb.c:2873:8: warning: ‘mhp’ may be used uninitialized in</span>
<span class="quote">&gt; this function [-Wmaybe-uninitialized]</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; You have added a way of getting out of that big if/else if statement </span>
<span class="quote">&gt; without</span>
<span class="quote">&gt; setting mhp.  mhp will be examined later in the code, so this is indeed </span>
<span class="quote">&gt; a bug.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Like Aneesh, I am not sure if there is great benefit in this patch.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; You added this change in functionality only for powerpc.  IMO, it would </span>
<span class="quote">&gt; be</span>
<span class="quote">&gt; best if behavior was consistent in all architectures.  So, if we change </span>
<span class="quote">&gt; it</span>
<span class="quote">&gt; for powerpc we may want to change everywhere.</span>

Hi Mike,

Yes, the patch mentioned by Aneesh solves the issue.

Thanks
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/powerpc/mm/hugetlbpage.c b/arch/powerpc/mm/hugetlbpage.c</span>
<span class="p_header">index e1bf5ca..5990381 100644</span>
<span class="p_header">--- a/arch/powerpc/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/powerpc/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -780,6 +780,21 @@</span> <span class="p_context"> static int __init hugepage_setup_sz(char *str)</span>
 }
 __setup(&quot;hugepagesz=&quot;, hugepage_setup_sz);
 
<span class="p_add">+static int __init hugepage_default_setup_sz(char *str)</span>
<span class="p_add">+{</span>
<span class="p_add">+	unsigned long long size;</span>
<span class="p_add">+</span>
<span class="p_add">+	size = memparse(str, &amp;str);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (add_huge_page_size(size) != 0) {</span>
<span class="p_add">+		hugetlb_bad_default_size();</span>
<span class="p_add">+		pr_err(&quot;Invalid ppc default huge page size specified(%llu)\n&quot;, size);</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	return 1;</span>
<span class="p_add">+}</span>
<span class="p_add">+__setup(&quot;default_hugepagesz=&quot;, hugepage_default_setup_sz);</span>
<span class="p_add">+</span>
 struct kmem_cache *hugepte_cache;
 static int __init hugetlbpage_init(void)
 {
<span class="p_header">diff --git a/include/linux/hugetlb.h b/include/linux/hugetlb.h</span>
<span class="p_header">index 0ed8e41..2927200 100644</span>
<span class="p_header">--- a/include/linux/hugetlb.h</span>
<span class="p_header">+++ b/include/linux/hugetlb.h</span>
<span class="p_chunk">@@ -361,6 +361,7 @@</span> <span class="p_context"> int huge_add_to_page_cache(struct page *page, struct address_space *mapping,</span>
 int __init alloc_bootmem_huge_page(struct hstate *h);
 
 void __init hugetlb_bad_size(void);
<span class="p_add">+void __init hugetlb_bad_default_size(void);</span>
 void __init hugetlb_add_hstate(unsigned order);
 struct hstate *size_to_hstate(unsigned long size);
 
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index bc48ee7..3c24266 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -54,6 +54,7 @@</span> <span class="p_context"></span>
 static unsigned long __initdata default_hstate_max_huge_pages;
 static unsigned long __initdata default_hstate_size;
 static bool __initdata parsed_valid_hugepagesz = true;
<span class="p_add">+static bool __initdata parsed_valid_default_hugepagesz = true;</span>
 
 /*
  * Protects updates to hugepage_freelists, hugepage_activelist, nr_huge_pages,
<span class="p_chunk">@@ -2804,6 +2805,12 @@</span> <span class="p_context"> void __init hugetlb_bad_size(void)</span>
 	parsed_valid_hugepagesz = false;
 }
 
<span class="p_add">+/* Should be called on processing a default_hugepagesz=... option */</span>
<span class="p_add">+void __init hugetlb_bad_default_size(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	parsed_valid_default_hugepagesz = false;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 void __init hugetlb_add_hstate(unsigned int order)
 {
 	struct hstate *h;
<span class="p_chunk">@@ -2846,8 +2853,14 @@</span> <span class="p_context"> static int __init hugetlb_nrpages_setup(char *s)</span>
 	 * !hugetlb_max_hstate means we haven&#39;t parsed a hugepagesz= parameter yet,
 	 * so this hugepages= parameter goes to the &quot;default hstate&quot;.
 	 */
<span class="p_del">-	else if (!hugetlb_max_hstate)</span>
<span class="p_del">-		mhp = &amp;default_hstate_max_huge_pages;</span>
<span class="p_add">+	else if (!hugetlb_max_hstate) {</span>
<span class="p_add">+		if (!parsed_valid_default_hugepagesz) {</span>
<span class="p_add">+			pr_warn(&quot;hugepages = %s cannot be allocated for &quot;</span>
<span class="p_add">+				&quot;unsupported default_hugepagesz, ignoring\n&quot;, s);</span>
<span class="p_add">+			parsed_valid_default_hugepagesz = true;</span>
<span class="p_add">+		} else</span>
<span class="p_add">+			mhp = &amp;default_hstate_max_huge_pages;</span>
<span class="p_add">+	}</span>
 	else
 		mhp = &amp;parsed_hstate-&gt;max_huge_pages;
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



