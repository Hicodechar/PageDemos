
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>mm: add resched points to remap_pmd_range/ioremap_pmd_range - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    mm: add resched points to remap_pmd_range/ioremap_pmd_range</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=89911">Mike Galbraith</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 27, 2015, 8:29 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1437985792.3838.21.camel@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6869741/mbox/"
   >mbox</a>
|
   <a href="/patch/6869741/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6869741/">/patch/6869741/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id EA0D09F380
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 27 Jul 2015 08:30:12 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 0689A20660
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 27 Jul 2015 08:30:12 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id EF758205FD
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 27 Jul 2015 08:30:10 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752420AbbG0I36 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 27 Jul 2015 04:29:58 -0400
Received: from mail-wi0-f173.google.com ([209.85.212.173]:32839 &quot;EHLO
	mail-wi0-f173.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1750776AbbG0I34 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 27 Jul 2015 04:29:56 -0400
Received: by wicmv11 with SMTP id mv11so129001643wic.0
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Mon, 27 Jul 2015 01:29:55 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=message-id:subject:from:to:cc:date:in-reply-to:references
	:content-type:mime-version:content-transfer-encoding;
	bh=8rYTrw2zJMYxZP+gq1yZnk8pOm1ZU51/P3r1x8JGazU=;
	b=qIecD5FVd0i6DDek9ipvyRE9WMonhtTt9ngctj2Y7nivnWJqmDRhxKh4/zxowzmEp+
	cAIbxXzKKDp0LUi796dBdXc2XXw3tXF5asfeVK++alBaZilOtatr2jHxvSxsZ83uYLve
	I0oBvF83UtGgVm7hzWApSAYpajH63QzRLs5mMRFT1gFt6iIE8aWDds1f8+Lc6bcnPELa
	CQ+2XWO7Ncs6YKjswQ53vqZpVZE7UAXIq7UrrGv15tpzsvmrbJS7s7Ajz/qMBUaFVR+3
	FBiNQUQbc8tzWBtK5b1OJLLdS5c41iGL5PIU40b7iT9/UQCCmcJpLGxqEN52gfJa2cGT
	/4Mg==
X-Received: by 10.180.95.101 with SMTP id dj5mr21852892wib.16.1437985795163; 
	Mon, 27 Jul 2015 01:29:55 -0700 (PDT)
Received: from homer.simpson.net (host-212-114-172-89.customer.m-online.net.
	[212.114.172.89]) by smtp.googlemail.com with ESMTPSA id
	ev8sm26585197wjb.8.2015.07.27.01.29.53
	(version=TLSv1.2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Mon, 27 Jul 2015 01:29:54 -0700 (PDT)
Message-ID: &lt;1437985792.3838.21.camel@gmail.com&gt;
Subject: Re: [PATCH] mm: add resched points to
	remap_pmd_range/ioremap_pmd_range
From: Mike Galbraith &lt;umgwanakikbuti@gmail.com&gt;
To: Michal Hocko &lt;mhocko@kernel.org&gt;
Cc: =?ISO-8859-1?Q?J=F6rn?= Engel &lt;joern@purestorage.com&gt;,
	Spencer Baugh &lt;sbaugh@catern.com&gt;, Toshi Kani &lt;toshi.kani@hp.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Fengguang Wu &lt;fengguang.wu@intel.com&gt;, Joern Engel &lt;joern@logfs.org&gt;,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Mel Gorman &lt;mgorman@suse.de&gt;, Johannes Weiner &lt;hannes@cmpxchg.org&gt;,
	Shachar Raindel &lt;raindel@mellanox.com&gt;,
	Boaz Harrosh &lt;boaz@plexistor.com&gt;, Andy Lutomirski &lt;luto@amacapital.net&gt;,
	Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;,
	Andrey Ryabinin &lt;a.ryabinin@samsung.com&gt;,
	Roman Pen &lt;r.peniaev@gmail.com&gt;, Andrey Konovalov &lt;adech.fo@gmail.com&gt;,
	Eric Dumazet &lt;edumazet@google.com&gt;, Dmitry Vyukov &lt;dvyukov@google.com&gt;,
	Rob Jones &lt;rob.jones@codethink.co.uk&gt;, WANG Chao &lt;chaowang@redhat.com&gt;,
	open list &lt;linux-kernel@vger.kernel.org&gt;,
	&quot;open list:MEMORY MANAGEMENT&quot; &lt;linux-mm@kvack.org&gt;,
	Spencer Baugh &lt;Spencer.baugh@purestorage.com&gt;
Date: Mon, 27 Jul 2015 10:29:52 +0200
In-Reply-To: &lt;20150727070840.GB11317@dhcp22.suse.cz&gt;
References: &lt;1437688476-3399-3-git-send-email-sbaugh@catern.com&gt;
	&lt;20150724070420.GF4103@dhcp22.suse.cz&gt;
	&lt;20150724165627.GA3458@Sligo.logfs.org&gt;
	&lt;20150727070840.GB11317@dhcp22.suse.cz&gt;
Content-Type: text/plain; charset=&quot;UTF-8&quot;
X-Mailer: Evolution 3.12.11 
Mime-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-8.1 required=5.0 tests=BAYES_00,
	DKIM_ADSP_CUSTOM_MED, 
	DKIM_SIGNED, FREEMAIL_FROM, RCVD_IN_DNSWL_HI, RP_MATCHES_RCVD,
	T_DKIM_INVALID, 
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=89911">Mike Galbraith</a> - July 27, 2015, 8:29 a.m.</div>
<pre class="content">
On Mon, 2015-07-27 at 09:08 +0200, Michal Hocko wrote:
<span class="quote">&gt; On Fri 24-07-15 09:56:27, JÃ¶rn Engel wrote:</span>
<span class="quote">&gt; &gt; On Fri, Jul 24, 2015 at 09:04:21AM +0200, Michal Hocko wrote:</span>
<span class="quote">&gt; &gt; &gt; On Thu 23-07-15 14:54:33, Spencer Baugh wrote:</span>
<span class="quote">&gt; &gt; &gt; &gt; From: Joern Engel &lt;joern@logfs.org&gt;</span>
<span class="quote">&gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; Mapping large memory spaces can be slow and prevent high-priority</span>
<span class="quote">&gt; &gt; &gt; &gt; realtime threads from preempting lower-priority threads for a long time.</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; How can a lower priority task block the high priority one? Do you have</span>
<span class="quote">&gt; &gt; &gt; preemption disabled?</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Yes.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Yes what? PREEMT enabled and still low priority task starving a high</span>
<span class="quote">&gt; priority one? What is your exact setup?</span>

There are other places that are pretty horrible too if you don&#39;t run a
PREEMPT kernel.  Spending milliseconds in kernel kinda takes the real
outta realtime, even for the most casual of users.

(ponder: preempt kernel for rt only, rt could have decent latency
without driving normal task throughput through the floor)

kbuild make -j8 + cyclictest -Smp99

PREEMPT_VOLUNTARY Before:
T: 0 ( 6459) P:99 I:1000 C: 286022 Min:      1 Act:    1 Avg:    5 Max:    1718
T: 1 ( 6460) P:99 I:1500 C: 190701 Min:      1 Act:    1 Avg:    5 Max:    1639
T: 2 ( 6461) P:99 I:2000 C: 143024 Min:      1 Act:    2 Avg:    5 Max:    2504
T: 3 ( 6462) P:99 I:2500 C: 114420 Min:      1 Act:    1 Avg:    5 Max:    1922
T: 4 ( 6463) P:99 I:3000 C:  95350 Min:      1 Act:    1 Avg:    5 Max:    1482
T: 5 ( 6464) P:99 I:3500 C:  81728 Min:      1 Act:    2 Avg:    5 Max:    1496
T: 6 ( 6465) P:99 I:4000 C:  71511 Min:      1 Act:    1 Avg:    5 Max:    1813
T: 7 ( 6466) P:99 I:4500 C:  63566 Min:      1 Act:    1 Avg:    5 Max:    1901

PREEMPT_VOLUNTARY After:
T: 0 ( 6997) P:99 I:1000 C: 286032 Min:      1 Act:    2 Avg:    3 Max:     125
T: 1 ( 6998) P:99 I:1500 C: 190687 Min:      1 Act:    1 Avg:    4 Max:     130
T: 2 ( 6999) P:99 I:2000 C: 143015 Min:      1 Act:    1 Avg:    4 Max:      97
T: 3 ( 7000) P:99 I:2500 C: 114411 Min:      1 Act:    2 Avg:    4 Max:      90
T: 4 ( 7001) P:99 I:3000 C:  95341 Min:      1 Act:    1 Avg:    4 Max:     139
T: 5 ( 7002) P:99 I:3500 C:  81722 Min:      1 Act:    2 Avg:    4 Max:     112
T: 6 ( 7003) P:99 I:4000 C:  71506 Min:      1 Act:    2 Avg:    4 Max:     137
T: 7 ( 7004) P:99 I:4500 C:  63561 Min:      1 Act:    2 Avg:    4 Max:     109

---
 mm/memory.c     |    8 ++++++--
 mm/page_alloc.c |    1 +
 2 files changed, 7 insertions(+), 2 deletions(-)





--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/mm/memory.c</span>
<span class="p_header">+++ b/mm/memory.c</span>
<span class="p_chunk">@@ -1174,8 +1174,10 @@</span> <span class="p_context"> static unsigned long zap_pte_range(struc</span>
 		force_flush = 0;
 		tlb_flush_mmu_free(tlb);
 
<span class="p_del">-		if (addr != end)</span>
<span class="p_add">+		if (addr != end) {</span>
<span class="p_add">+			cond_resched();</span>
 			goto again;
<span class="p_add">+		}</span>
 	}
 
 	return addr;
<span class="p_chunk">@@ -1336,8 +1338,10 @@</span> <span class="p_context"> void unmap_vmas(struct mmu_gather *tlb,</span>
 	struct mm_struct *mm = vma-&gt;vm_mm;
 
 	mmu_notifier_invalidate_range_start(mm, start_addr, end_addr);
<span class="p_del">-	for ( ; vma &amp;&amp; vma-&gt;vm_start &lt; end_addr; vma = vma-&gt;vm_next)</span>
<span class="p_add">+	for ( ; vma &amp;&amp; vma-&gt;vm_start &lt; end_addr; vma = vma-&gt;vm_next) {</span>
 		unmap_single_vma(tlb, vma, start_addr, end_addr, NULL);
<span class="p_add">+		cond_resched();</span>
<span class="p_add">+	}</span>
 	mmu_notifier_invalidate_range_end(mm, start_addr, end_addr);
 }
 
<span class="p_header">--- a/mm/page_alloc.c</span>
<span class="p_header">+++ b/mm/page_alloc.c</span>
<span class="p_chunk">@@ -1934,6 +1934,7 @@</span> <span class="p_context"> void free_hot_cold_page_list(struct list</span>
 	list_for_each_entry_safe(page, next, list, lru) {
 		trace_mm_page_free_batched(page, cold);
 		free_hot_cold_page(page, cold);
<span class="p_add">+		cond_resched();</span>
 	}
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



