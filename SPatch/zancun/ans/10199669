
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[07/64] mm/hugetlb: teach hugetlb_fault() about range locking - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [07/64] mm/hugetlb: teach hugetlb_fault() about range locking</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=109101">Davidlohr Bueso</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 5, 2018, 1:26 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180205012754.23615-8-dbueso@wotan.suse.de&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10199669/mbox/"
   >mbox</a>
|
   <a href="/patch/10199669/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10199669/">/patch/10199669/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	C45A96056F for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  5 Feb 2018 01:28:56 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B4CC827FAC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  5 Feb 2018 01:28:56 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A9429285B6; Mon,  5 Feb 2018 01:28:56 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 18CA027FAC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  5 Feb 2018 01:28:56 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752755AbeBEB2w (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 4 Feb 2018 20:28:52 -0500
Received: from mx2.suse.de ([195.135.220.15]:43469 &quot;EHLO mx2.suse.de&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752562AbeBEB2D (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 4 Feb 2018 20:28:03 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (charybdis-ext.suse.de [195.135.220.254])
	by mx2.suse.de (Postfix) with ESMTP id BABFCADD2;
	Mon,  5 Feb 2018 01:27:59 +0000 (UTC)
From: Davidlohr Bueso &lt;dbueso@suse.de&gt;
To: akpm@linux-foundation.org, mingo@kernel.org
Cc: peterz@infradead.org, ldufour@linux.vnet.ibm.com, jack@suse.cz,
	mhocko@kernel.org, kirill.shutemov@linux.intel.com,
	mawilcox@microsoft.com, mgorman@techsingularity.net,
	dave@stgolabs.net, linux-mm@kvack.org,
	linux-kernel@vger.kernel.org, Davidlohr Bueso &lt;dbueso@suse.de&gt;
Subject: [PATCH 07/64] mm/hugetlb: teach hugetlb_fault() about range locking
Date: Mon,  5 Feb 2018 02:26:57 +0100
Message-Id: &lt;20180205012754.23615-8-dbueso@wotan.suse.de&gt;
X-Mailer: git-send-email 2.12.3
In-Reply-To: &lt;20180205012754.23615-1-dbueso@wotan.suse.de&gt;
References: &lt;20180205012754.23615-1-dbueso@wotan.suse.de&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=109101">Davidlohr Bueso</a> - Feb. 5, 2018, 1:26 a.m.</div>
<pre class="content">
<span class="from">From: Davidlohr Bueso &lt;dave@stgolabs.net&gt;</span>

Such that we can pass the mmrange along to vm_fault for
page in userfault range (handle_userfault()) which gets
funky with mmap_sem - just look at the locking rules.
<span class="signed-off-by">
Signed-off-by: Davidlohr Bueso &lt;dbueso@suse.de&gt;</span>
---
 include/linux/hugetlb.h |  9 +++++----
 mm/gup.c                |  3 ++-
 mm/hugetlb.c            | 16 +++++++++++-----
 mm/memory.c             |  2 +-
 4 files changed, 19 insertions(+), 11 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/linux/hugetlb.h b/include/linux/hugetlb.h</span>
<span class="p_header">index 36fa6a2a82e3..df0a89a95bdc 100644</span>
<span class="p_header">--- a/include/linux/hugetlb.h</span>
<span class="p_header">+++ b/include/linux/hugetlb.h</span>
<span class="p_chunk">@@ -91,7 +91,7 @@</span> <span class="p_context"> int copy_hugetlb_page_range(struct mm_struct *, struct mm_struct *, struct vm_ar</span>
 long follow_hugetlb_page(struct mm_struct *, struct vm_area_struct *,
 			 struct page **, struct vm_area_struct **,
 			 unsigned long *, unsigned long *, long, unsigned int,
<span class="p_del">-			 int *);</span>
<span class="p_add">+			 int *, struct range_lock *);</span>
 void unmap_hugepage_range(struct vm_area_struct *,
 			  unsigned long, unsigned long, struct page *);
 void __unmap_hugepage_range_final(struct mmu_gather *tlb,
<span class="p_chunk">@@ -106,7 +106,8 @@</span> <span class="p_context"> int hugetlb_report_node_meminfo(int, char *);</span>
 void hugetlb_show_meminfo(void);
 unsigned long hugetlb_total_pages(void);
 int hugetlb_fault(struct mm_struct *mm, struct vm_area_struct *vma,
<span class="p_del">-			unsigned long address, unsigned int flags);</span>
<span class="p_add">+		  unsigned long address, unsigned int flags,</span>
<span class="p_add">+		  struct range_lock *mmrange);</span>
 int hugetlb_mcopy_atomic_pte(struct mm_struct *dst_mm, pte_t *dst_pte,
 				struct vm_area_struct *dst_vma,
 				unsigned long dst_addr,
<span class="p_chunk">@@ -170,7 +171,7 @@</span> <span class="p_context"> static inline unsigned long hugetlb_total_pages(void)</span>
 	return 0;
 }
 
<span class="p_del">-#define follow_hugetlb_page(m,v,p,vs,a,b,i,w,n)	({ BUG(); 0; })</span>
<span class="p_add">+#define follow_hugetlb_page(m,v,p,vs,a,b,i,w,n,r) ({ BUG(); 0; })</span>
 #define follow_huge_addr(mm, addr, write)	ERR_PTR(-EINVAL)
 #define copy_hugetlb_page_range(src, dst, vma)	({ BUG(); 0; })
 static inline void hugetlb_report_meminfo(struct seq_file *m)
<span class="p_chunk">@@ -189,7 +190,7 @@</span> <span class="p_context"> static inline void hugetlb_show_meminfo(void)</span>
 #define pud_huge(x)	0
 #define is_hugepage_only_range(mm, addr, len)	0
 #define hugetlb_free_pgd_range(tlb, addr, end, floor, ceiling) ({BUG(); 0; })
<span class="p_del">-#define hugetlb_fault(mm, vma, addr, flags)	({ BUG(); 0; })</span>
<span class="p_add">+#define hugetlb_fault(mm, vma, addr, flags,mmrange)	({ BUG(); 0; })</span>
 #define hugetlb_mcopy_atomic_pte(dst_mm, dst_pte, dst_vma, dst_addr, \
 				src_addr, pagep)	({ BUG(); 0; })
 #define huge_pte_offset(mm, address, sz)	0
<span class="p_header">diff --git a/mm/gup.c b/mm/gup.c</span>
<span class="p_header">index 01983a7b3750..3d1b6dd11616 100644</span>
<span class="p_header">--- a/mm/gup.c</span>
<span class="p_header">+++ b/mm/gup.c</span>
<span class="p_chunk">@@ -684,7 +684,8 @@</span> <span class="p_context"> static long __get_user_pages(struct task_struct *tsk, struct mm_struct *mm,</span>
 			if (is_vm_hugetlb_page(vma)) {
 				i = follow_hugetlb_page(mm, vma, pages, vmas,
 						&amp;start, &amp;nr_pages, i,
<span class="p_del">-						gup_flags, nonblocking);</span>
<span class="p_add">+						gup_flags, nonblocking,</span>
<span class="p_add">+						mmrange);</span>
 				continue;
 			}
 		}
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 7c204e3d132b..fd22459e89ef 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -3675,7 +3675,8 @@</span> <span class="p_context"> int huge_add_to_page_cache(struct page *page, struct address_space *mapping,</span>
 
 static int hugetlb_no_page(struct mm_struct *mm, struct vm_area_struct *vma,
 			   struct address_space *mapping, pgoff_t idx,
<span class="p_del">-			   unsigned long address, pte_t *ptep, unsigned int flags)</span>
<span class="p_add">+			   unsigned long address, pte_t *ptep, unsigned int flags,</span>
<span class="p_add">+			   struct range_lock *mmrange)</span>
 {
 	struct hstate *h = hstate_vma(vma);
 	int ret = VM_FAULT_SIGBUS;
<span class="p_chunk">@@ -3716,6 +3717,7 @@</span> <span class="p_context"> static int hugetlb_no_page(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 				.vma = vma,
 				.address = address,
 				.flags = flags,
<span class="p_add">+				.lockrange = mmrange,</span>
 				/*
 				 * Hard to debug if it ends up being
 				 * used by a callee that assumes
<span class="p_chunk">@@ -3869,7 +3871,8 @@</span> <span class="p_context"> u32 hugetlb_fault_mutex_hash(struct hstate *h, struct mm_struct *mm,</span>
 #endif
 
 int hugetlb_fault(struct mm_struct *mm, struct vm_area_struct *vma,
<span class="p_del">-			unsigned long address, unsigned int flags)</span>
<span class="p_add">+		  unsigned long address, unsigned int flags,</span>
<span class="p_add">+		  struct range_lock *mmrange)</span>
 {
 	pte_t *ptep, entry;
 	spinlock_t *ptl;
<span class="p_chunk">@@ -3912,7 +3915,8 @@</span> <span class="p_context"> int hugetlb_fault(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 
 	entry = huge_ptep_get(ptep);
 	if (huge_pte_none(entry)) {
<span class="p_del">-		ret = hugetlb_no_page(mm, vma, mapping, idx, address, ptep, flags);</span>
<span class="p_add">+		ret = hugetlb_no_page(mm, vma, mapping, idx, address, ptep,</span>
<span class="p_add">+				      flags, mmrange);</span>
 		goto out_mutex;
 	}
 
<span class="p_chunk">@@ -4140,7 +4144,8 @@</span> <span class="p_context"> int hugetlb_mcopy_atomic_pte(struct mm_struct *dst_mm,</span>
 long follow_hugetlb_page(struct mm_struct *mm, struct vm_area_struct *vma,
 			 struct page **pages, struct vm_area_struct **vmas,
 			 unsigned long *position, unsigned long *nr_pages,
<span class="p_del">-			 long i, unsigned int flags, int *nonblocking)</span>
<span class="p_add">+			 long i, unsigned int flags, int *nonblocking,</span>
<span class="p_add">+			 struct range_lock *mmrange)</span>
 {
 	unsigned long pfn_offset;
 	unsigned long vaddr = *position;
<span class="p_chunk">@@ -4221,7 +4226,8 @@</span> <span class="p_context"> long follow_hugetlb_page(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 						FAULT_FLAG_ALLOW_RETRY);
 				fault_flags |= FAULT_FLAG_TRIED;
 			}
<span class="p_del">-			ret = hugetlb_fault(mm, vma, vaddr, fault_flags);</span>
<span class="p_add">+			ret = hugetlb_fault(mm, vma, vaddr, fault_flags,</span>
<span class="p_add">+					    mmrange);</span>
 			if (ret &amp; VM_FAULT_ERROR) {
 				err = vm_fault_to_errno(ret, flags);
 				remainder = 0;
<span class="p_header">diff --git a/mm/memory.c b/mm/memory.c</span>
<span class="p_header">index b3561a052939..2d087b0e174d 100644</span>
<span class="p_header">--- a/mm/memory.c</span>
<span class="p_header">+++ b/mm/memory.c</span>
<span class="p_chunk">@@ -4136,7 +4136,7 @@</span> <span class="p_context"> int handle_mm_fault(struct vm_area_struct *vma, unsigned long address,</span>
 		mem_cgroup_oom_enable();
 
 	if (unlikely(is_vm_hugetlb_page(vma)))
<span class="p_del">-		ret = hugetlb_fault(vma-&gt;vm_mm, vma, address, flags);</span>
<span class="p_add">+		ret = hugetlb_fault(vma-&gt;vm_mm, vma, address, flags, mmrange);</span>
 	else
 		ret = __handle_mm_fault(vma, address, flags, mmrange);
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



