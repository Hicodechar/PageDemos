
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,2/3] x86/mm: Make flush_tlb_mm_range() more predictable - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,2/3] x86/mm: Make flush_tlb_mm_range() more predictable</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=125831">Andrew Lutomirski</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>April 21, 2017, 6:15 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;438f3c3cd04ff7f2da482626d78ec0fd1f35385b.1492798187.git.luto@kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9693361/mbox/"
   >mbox</a>
|
   <a href="/patch/9693361/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9693361/">/patch/9693361/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	16E146037F for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 21 Apr 2017 18:22:14 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 0AB6528521
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 21 Apr 2017 18:22:14 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id F182F28632; Fri, 21 Apr 2017 18:22:13 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5FDA528521
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 21 Apr 2017 18:22:13 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1423617AbdDUSWB (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 21 Apr 2017 14:22:01 -0400
Received: from mail.kernel.org ([198.145.29.136]:54936 &quot;EHLO mail.kernel.org&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1162333AbdDUSVJ (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 21 Apr 2017 14:21:09 -0400
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id ECDC620259;
	Fri, 21 Apr 2017 18:15:19 +0000 (UTC)
Received: from localhost (c-71-202-137-17.hsd1.ca.comcast.net
	[71.202.137.17])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256
	bits)) (No client certificate requested)
	by mail.kernel.org (Postfix) with ESMTPSA id DD60620253;
	Fri, 21 Apr 2017 18:15:18 +0000 (UTC)
From: Andy Lutomirski &lt;luto@kernel.org&gt;
To: x86@kernel.org
Cc: linux-kernel@vger.kernel.org, Borislav Petkov &lt;bp@alien8.de&gt;,
	Andy Lutomirski &lt;luto@kernel.org&gt;, Rik van Riel &lt;riel@redhat.com&gt;,
	Dave Hansen &lt;dave.hansen@intel.com&gt;,
	Nadav Amit &lt;namit@vmware.com&gt;, Michal Hocko &lt;mhocko@suse.com&gt;,
	Sasha Levin &lt;sasha.levin@oracle.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;
Subject: [PATCH v2 2/3] x86/mm: Make flush_tlb_mm_range() more predictable
Date: Fri, 21 Apr 2017 11:15:12 -0700
Message-Id: &lt;438f3c3cd04ff7f2da482626d78ec0fd1f35385b.1492798187.git.luto@kernel.org&gt;
X-Mailer: git-send-email 2.9.3
In-Reply-To: &lt;cover.1492798187.git.luto@kernel.org&gt;
References: &lt;cover.1492798187.git.luto@kernel.org&gt;
In-Reply-To: &lt;cover.1492798187.git.luto@kernel.org&gt;
References: &lt;cover.1492798187.git.luto@kernel.org&gt;
X-Virus-Scanned: ClamAV using ClamSMTP
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=125831">Andrew Lutomirski</a> - April 21, 2017, 6:15 p.m.</div>
<pre class="content">
I&#39;m about to rewrite the function almost completely, but first I
want to get a functional change out of the way.  Currently, if
flush_tlb_mm_range() does not flush the local TLB at all, it will
never do individual page flushes on remote CPUs.  This seems to be
an accident, and preserving it will be awkward.  Let&#39;s change it
first so that any regressions in the rewrite will be easier to
bisect and so that the rewrite can attempt to change no visible
behavior at all.

The fix is simple: we can simply avoid short-circuiting the
calculation of base_pages_to_flush.

As a side effect, this also eliminates a potential corner case: if
tlb_single_page_flush_ceiling == TLB_FLUSH_ALL, flush_tlb_mm_range()
could have ended up flushing the entire address space one page at a
time.

Cc: Rik van Riel &lt;riel@redhat.com&gt;
Cc: Dave Hansen &lt;dave.hansen@intel.com&gt;
Cc: Nadav Amit &lt;namit@vmware.com&gt;
Cc: Michal Hocko &lt;mhocko@suse.com&gt;
Cc: Sasha Levin &lt;sasha.levin@oracle.com&gt;
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;
<span class="signed-off-by">Signed-off-by: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
---
 arch/x86/mm/tlb.c | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=65121">Dave Hansen</a> - April 21, 2017, 6:54 p.m.</div>
<pre class="content">
On 04/21/2017 11:15 AM, Andy Lutomirski wrote:
<span class="quote">&gt; I&#39;m about to rewrite the function almost completely, but first I</span>
<span class="quote">&gt; want to get a functional change out of the way.  Currently, if</span>
<span class="quote">&gt; flush_tlb_mm_range() does not flush the local TLB at all, it will</span>
<span class="quote">&gt; never do individual page flushes on remote CPUs.  This seems to be</span>
<span class="quote">&gt; an accident, and preserving it will be awkward.  Let&#39;s change it</span>
<span class="quote">&gt; first so that any regressions in the rewrite will be easier to</span>
<span class="quote">&gt; bisect and so that the rewrite can attempt to change no visible</span>
<span class="quote">&gt; behavior at all.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The fix is simple: we can simply avoid short-circuiting the</span>
<span class="quote">&gt; calculation of base_pages_to_flush.</span>

This looks sane to me.  I think it makes things more straightforward.
<span class="acked-by">
Acked-by: Dave Hansen &lt;dave.hansen@intel.com&gt;</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/mm/tlb.c b/arch/x86/mm/tlb.c</span>
<span class="p_header">index 92ec37f517ab..9db9260a5e9f 100644</span>
<span class="p_header">--- a/arch/x86/mm/tlb.c</span>
<span class="p_header">+++ b/arch/x86/mm/tlb.c</span>
<span class="p_chunk">@@ -309,6 +309,12 @@</span> <span class="p_context"> void flush_tlb_mm_range(struct mm_struct *mm, unsigned long start,</span>
 	unsigned long base_pages_to_flush = TLB_FLUSH_ALL;
 
 	preempt_disable();
<span class="p_add">+</span>
<span class="p_add">+	if ((end != TLB_FLUSH_ALL) &amp;&amp; !(vmflag &amp; VM_HUGETLB))</span>
<span class="p_add">+		base_pages_to_flush = (end - start) &gt;&gt; PAGE_SHIFT;</span>
<span class="p_add">+	if (base_pages_to_flush &gt; tlb_single_page_flush_ceiling)</span>
<span class="p_add">+		base_pages_to_flush = TLB_FLUSH_ALL;</span>
<span class="p_add">+</span>
 	if (current-&gt;active_mm != mm) {
 		/* Synchronize with switch_mm. */
 		smp_mb();
<span class="p_chunk">@@ -325,15 +331,11 @@</span> <span class="p_context"> void flush_tlb_mm_range(struct mm_struct *mm, unsigned long start,</span>
 		goto out;
 	}
 
<span class="p_del">-	if ((end != TLB_FLUSH_ALL) &amp;&amp; !(vmflag &amp; VM_HUGETLB))</span>
<span class="p_del">-		base_pages_to_flush = (end - start) &gt;&gt; PAGE_SHIFT;</span>
<span class="p_del">-</span>
 	/*
 	 * Both branches below are implicit full barriers (MOV to CR or
 	 * INVLPG) that synchronize with switch_mm.
 	 */
<span class="p_del">-	if (base_pages_to_flush &gt; tlb_single_page_flush_ceiling) {</span>
<span class="p_del">-		base_pages_to_flush = TLB_FLUSH_ALL;</span>
<span class="p_add">+	if (base_pages_to_flush == TLB_FLUSH_ALL) {</span>
 		count_vm_tlb_event(NR_TLB_LOCAL_FLUSH_ALL);
 		local_flush_tlb();
 	} else {

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



