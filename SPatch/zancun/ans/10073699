
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>Linux 4.4.101 - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    Linux 4.4.101</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 24, 2017, 8:15 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171124081528.GB26407@kroah.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10073699/mbox/"
   >mbox</a>
|
   <a href="/patch/10073699/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10073699/">/patch/10073699/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	4963060383 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 24 Nov 2017 08:15:31 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 36C702A357
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 24 Nov 2017 08:15:31 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 2ABA42A359; Fri, 24 Nov 2017 08:15:31 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C46D22A357
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 24 Nov 2017 08:15:29 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752896AbdKXIP0 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 24 Nov 2017 03:15:26 -0500
Received: from mail.linuxfoundation.org ([140.211.169.12]:42966 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751858AbdKXIPY (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 24 Nov 2017 03:15:24 -0500
Received: from localhost (LFbn-1-12253-150.w90-92.abo.wanadoo.fr
	[90.92.67.150])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id 33141AE0;
	Fri, 24 Nov 2017 08:15:23 +0000 (UTC)
Date: Fri, 24 Nov 2017 09:15:28 +0100
From: Greg KH &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org, Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	torvalds@linux-foundation.org, stable@vger.kernel.org
Cc: lwn@lwn.net, Jiri Slaby &lt;jslaby@suse.cz&gt;
Subject: Re: Linux 4.4.101
Message-ID: &lt;20171124081528.GB26407@kroah.com&gt;
References: &lt;20171124081520.GA26407@kroah.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: &lt;20171124081520.GA26407@kroah.com&gt;
User-Agent: Mutt/1.9.1 (2017-09-22)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Nov. 24, 2017, 8:15 a.m.</div>
<pre class="content">

</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/Makefile b/Makefile</span>
<span class="p_header">index 91dd7832f499..0d7b050427ed 100644</span>
<span class="p_header">--- a/Makefile</span>
<span class="p_header">+++ b/Makefile</span>
<span class="p_chunk">@@ -1,6 +1,6 @@</span> <span class="p_context"></span>
 VERSION = 4
 PATCHLEVEL = 4
<span class="p_del">-SUBLEVEL = 100</span>
<span class="p_add">+SUBLEVEL = 101</span>
 EXTRAVERSION =
 NAME = Blurry Fish Butt
 
<span class="p_header">diff --git a/arch/arm64/kernel/traps.c b/arch/arm64/kernel/traps.c</span>
<span class="p_header">index 210826d5bba5..9119722eb347 100644</span>
<span class="p_header">--- a/arch/arm64/kernel/traps.c</span>
<span class="p_header">+++ b/arch/arm64/kernel/traps.c</span>
<span class="p_chunk">@@ -64,8 +64,7 @@</span> <span class="p_context"> static void dump_mem(const char *lvl, const char *str, unsigned long bottom,</span>
 
 	/*
 	 * We need to switch to kernel mode so that we can use __get_user
<span class="p_del">-	 * to safely read from kernel space.  Note that we now dump the</span>
<span class="p_del">-	 * code first, just in case the backtrace kills us.</span>
<span class="p_add">+	 * to safely read from kernel space.</span>
 	 */
 	fs = get_fs();
 	set_fs(KERNEL_DS);
<span class="p_chunk">@@ -111,21 +110,12 @@</span> <span class="p_context"> static void dump_backtrace_entry(unsigned long where)</span>
 	print_ip_sym(where);
 }
 
<span class="p_del">-static void dump_instr(const char *lvl, struct pt_regs *regs)</span>
<span class="p_add">+static void __dump_instr(const char *lvl, struct pt_regs *regs)</span>
 {
 	unsigned long addr = instruction_pointer(regs);
<span class="p_del">-	mm_segment_t fs;</span>
 	char str[sizeof(&quot;00000000 &quot;) * 5 + 2 + 1], *p = str;
 	int i;
 
<span class="p_del">-	/*</span>
<span class="p_del">-	 * We need to switch to kernel mode so that we can use __get_user</span>
<span class="p_del">-	 * to safely read from kernel space.  Note that we now dump the</span>
<span class="p_del">-	 * code first, just in case the backtrace kills us.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	fs = get_fs();</span>
<span class="p_del">-	set_fs(KERNEL_DS);</span>
<span class="p_del">-</span>
 	for (i = -4; i &lt; 1; i++) {
 		unsigned int val, bad;
 
<span class="p_chunk">@@ -139,8 +129,18 @@</span> <span class="p_context"> static void dump_instr(const char *lvl, struct pt_regs *regs)</span>
 		}
 	}
 	printk(&quot;%sCode: %s\n&quot;, lvl, str);
<span class="p_add">+}</span>
 
<span class="p_del">-	set_fs(fs);</span>
<span class="p_add">+static void dump_instr(const char *lvl, struct pt_regs *regs)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if (!user_mode(regs)) {</span>
<span class="p_add">+		mm_segment_t fs = get_fs();</span>
<span class="p_add">+		set_fs(KERNEL_DS);</span>
<span class="p_add">+		__dump_instr(lvl, regs);</span>
<span class="p_add">+		set_fs(fs);</span>
<span class="p_add">+	} else {</span>
<span class="p_add">+		__dump_instr(lvl, regs);</span>
<span class="p_add">+	}</span>
 }
 
 static void dump_backtrace(struct pt_regs *regs, struct task_struct *tsk)
<span class="p_header">diff --git a/drivers/char/ipmi/ipmi_msghandler.c b/drivers/char/ipmi/ipmi_msghandler.c</span>
<span class="p_header">index 25372dc381d4..5cb5e8ff0224 100644</span>
<span class="p_header">--- a/drivers/char/ipmi/ipmi_msghandler.c</span>
<span class="p_header">+++ b/drivers/char/ipmi/ipmi_msghandler.c</span>
<span class="p_chunk">@@ -4029,7 +4029,8 @@</span> <span class="p_context"> smi_from_recv_msg(ipmi_smi_t intf, struct ipmi_recv_msg *recv_msg,</span>
 }
 
 static void check_msg_timeout(ipmi_smi_t intf, struct seq_table *ent,
<span class="p_del">-			      struct list_head *timeouts, long timeout_period,</span>
<span class="p_add">+			      struct list_head *timeouts,</span>
<span class="p_add">+			      unsigned long timeout_period,</span>
 			      int slot, unsigned long *flags,
 			      unsigned int *waiting_msgs)
 {
<span class="p_chunk">@@ -4042,8 +4043,8 @@</span> <span class="p_context"> static void check_msg_timeout(ipmi_smi_t intf, struct seq_table *ent,</span>
 	if (!ent-&gt;inuse)
 		return;
 
<span class="p_del">-	ent-&gt;timeout -= timeout_period;</span>
<span class="p_del">-	if (ent-&gt;timeout &gt; 0) {</span>
<span class="p_add">+	if (timeout_period &lt; ent-&gt;timeout) {</span>
<span class="p_add">+		ent-&gt;timeout -= timeout_period;</span>
 		(*waiting_msgs)++;
 		return;
 	}
<span class="p_chunk">@@ -4109,7 +4110,8 @@</span> <span class="p_context"> static void check_msg_timeout(ipmi_smi_t intf, struct seq_table *ent,</span>
 	}
 }
 
<span class="p_del">-static unsigned int ipmi_timeout_handler(ipmi_smi_t intf, long timeout_period)</span>
<span class="p_add">+static unsigned int ipmi_timeout_handler(ipmi_smi_t intf,</span>
<span class="p_add">+					 unsigned long timeout_period)</span>
 {
 	struct list_head     timeouts;
 	struct ipmi_recv_msg *msg, *msg2;
<span class="p_header">diff --git a/drivers/net/bonding/bond_main.c b/drivers/net/bonding/bond_main.c</span>
<span class="p_header">index 5dca77e0ffed..2cb34b0f3856 100644</span>
<span class="p_header">--- a/drivers/net/bonding/bond_main.c</span>
<span class="p_header">+++ b/drivers/net/bonding/bond_main.c</span>
<span class="p_chunk">@@ -3166,7 +3166,7 @@</span> <span class="p_context"> u32 bond_xmit_hash(struct bonding *bond, struct sk_buff *skb)</span>
 	hash ^= (hash &gt;&gt; 16);
 	hash ^= (hash &gt;&gt; 8);
 
<span class="p_del">-	return hash;</span>
<span class="p_add">+	return hash &gt;&gt; 1;</span>
 }
 
 /*-------------------------- Device entry points ----------------------------*/
<span class="p_header">diff --git a/drivers/net/ethernet/fealnx.c b/drivers/net/ethernet/fealnx.c</span>
<span class="p_header">index b1b9ebafb354..a3b2e23921bf 100644</span>
<span class="p_header">--- a/drivers/net/ethernet/fealnx.c</span>
<span class="p_header">+++ b/drivers/net/ethernet/fealnx.c</span>
<span class="p_chunk">@@ -257,8 +257,8 @@</span> <span class="p_context"> enum rx_desc_status_bits {</span>
 	RXFSD = 0x00000800,	/* first descriptor */
 	RXLSD = 0x00000400,	/* last descriptor */
 	ErrorSummary = 0x80,	/* error summary */
<span class="p_del">-	RUNT = 0x40,		/* runt packet received */</span>
<span class="p_del">-	LONG = 0x20,		/* long packet received */</span>
<span class="p_add">+	RUNTPKT = 0x40,		/* runt packet received */</span>
<span class="p_add">+	LONGPKT = 0x20,		/* long packet received */</span>
 	FAE = 0x10,		/* frame align error */
 	CRC = 0x08,		/* crc error */
 	RXER = 0x04,		/* receive error */
<span class="p_chunk">@@ -1633,7 +1633,7 @@</span> <span class="p_context"> static int netdev_rx(struct net_device *dev)</span>
 					       dev-&gt;name, rx_status);
 
 				dev-&gt;stats.rx_errors++;	/* end of a packet. */
<span class="p_del">-				if (rx_status &amp; (LONG | RUNT))</span>
<span class="p_add">+				if (rx_status &amp; (LONGPKT | RUNTPKT))</span>
 					dev-&gt;stats.rx_length_errors++;
 				if (rx_status &amp; RXER)
 					dev-&gt;stats.rx_frame_errors++;
<span class="p_header">diff --git a/drivers/nvme/host/pci.c b/drivers/nvme/host/pci.c</span>
<span class="p_header">index 669edbd47602..d6ceb8b91cd6 100644</span>
<span class="p_header">--- a/drivers/nvme/host/pci.c</span>
<span class="p_header">+++ b/drivers/nvme/host/pci.c</span>
<span class="p_chunk">@@ -350,8 +350,8 @@</span> <span class="p_context"> static void async_completion(struct nvme_queue *nvmeq, void *ctx,</span>
 	struct async_cmd_info *cmdinfo = ctx;
 	cmdinfo-&gt;result = le32_to_cpup(&amp;cqe-&gt;result);
 	cmdinfo-&gt;status = le16_to_cpup(&amp;cqe-&gt;status) &gt;&gt; 1;
<span class="p_del">-	queue_kthread_work(cmdinfo-&gt;worker, &amp;cmdinfo-&gt;work);</span>
 	blk_mq_free_request(cmdinfo-&gt;req);
<span class="p_add">+	queue_kthread_work(cmdinfo-&gt;worker, &amp;cmdinfo-&gt;work);</span>
 }
 
 static inline struct nvme_cmd_info *get_cmd_from_tag(struct nvme_queue *nvmeq,
<span class="p_header">diff --git a/drivers/tty/serial/omap-serial.c b/drivers/tty/serial/omap-serial.c</span>
<span class="p_header">index de1c143b475f..21fc9b3a27cf 100644</span>
<span class="p_header">--- a/drivers/tty/serial/omap-serial.c</span>
<span class="p_header">+++ b/drivers/tty/serial/omap-serial.c</span>
<span class="p_chunk">@@ -693,7 +693,7 @@</span> <span class="p_context"> static void serial_omap_set_mctrl(struct uart_port *port, unsigned int mctrl)</span>
 	if ((mctrl &amp; TIOCM_RTS) &amp;&amp; (port-&gt;status &amp; UPSTAT_AUTORTS))
 		up-&gt;efr |= UART_EFR_RTS;
 	else
<span class="p_del">-		up-&gt;efr &amp;= UART_EFR_RTS;</span>
<span class="p_add">+		up-&gt;efr &amp;= ~UART_EFR_RTS;</span>
 	serial_out(up, UART_EFR, up-&gt;efr);
 	serial_out(up, UART_LCR, lcr);
 
<span class="p_header">diff --git a/fs/coda/upcall.c b/fs/coda/upcall.c</span>
<span class="p_header">index f6c6c8adbc01..7289f0a7670b 100644</span>
<span class="p_header">--- a/fs/coda/upcall.c</span>
<span class="p_header">+++ b/fs/coda/upcall.c</span>
<span class="p_chunk">@@ -446,8 +446,7 @@</span> <span class="p_context"> int venus_fsync(struct super_block *sb, struct CodaFid *fid)</span>
 	UPARG(CODA_FSYNC);
 
 	inp-&gt;coda_fsync.VFid = *fid;
<span class="p_del">-	error = coda_upcall(coda_vcp(sb), sizeof(union inputArgs),</span>
<span class="p_del">-			    &amp;outsize, inp);</span>
<span class="p_add">+	error = coda_upcall(coda_vcp(sb), insize, &amp;outsize, inp);</span>
 
 	CODA_FREE(inp, insize);
 	return error;
<span class="p_header">diff --git a/fs/ocfs2/file.c b/fs/ocfs2/file.c</span>
<span class="p_header">index 1d738723a41a..501ecc4a1ac4 100644</span>
<span class="p_header">--- a/fs/ocfs2/file.c</span>
<span class="p_header">+++ b/fs/ocfs2/file.c</span>
<span class="p_chunk">@@ -1166,6 +1166,13 @@</span> <span class="p_context"> int ocfs2_setattr(struct dentry *dentry, struct iattr *attr)</span>
 	}
 	size_change = S_ISREG(inode-&gt;i_mode) &amp;&amp; attr-&gt;ia_valid &amp; ATTR_SIZE;
 	if (size_change) {
<span class="p_add">+		/*</span>
<span class="p_add">+		 * Here we should wait dio to finish before inode lock</span>
<span class="p_add">+		 * to avoid a deadlock between ocfs2_setattr() and</span>
<span class="p_add">+		 * ocfs2_dio_end_io_write()</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		inode_dio_wait(inode);</span>
<span class="p_add">+</span>
 		status = ocfs2_rw_lock(inode, 1);
 		if (status &lt; 0) {
 			mlog_errno(status);
<span class="p_chunk">@@ -1186,8 +1193,6 @@</span> <span class="p_context"> int ocfs2_setattr(struct dentry *dentry, struct iattr *attr)</span>
 		if (status)
 			goto bail_unlock;
 
<span class="p_del">-		inode_dio_wait(inode);</span>
<span class="p_del">-</span>
 		if (i_size_read(inode) &gt;= attr-&gt;ia_size) {
 			if (ocfs2_should_order_data(inode)) {
 				status = ocfs2_begin_ordered_truncate(inode,
<span class="p_header">diff --git a/include/linux/mmzone.h b/include/linux/mmzone.h</span>
<span class="p_header">index 5b609a3ce3d7..ff88d6189411 100644</span>
<span class="p_header">--- a/include/linux/mmzone.h</span>
<span class="p_header">+++ b/include/linux/mmzone.h</span>
<span class="p_chunk">@@ -688,7 +688,8 @@</span> <span class="p_context"> typedef struct pglist_data {</span>
 	 * is the first PFN that needs to be initialised.
 	 */
 	unsigned long first_deferred_pfn;
<span class="p_del">-	unsigned long static_init_size;</span>
<span class="p_add">+	/* Number of non-deferred pages */</span>
<span class="p_add">+	unsigned long static_init_pgcnt;</span>
 #endif /* CONFIG_DEFERRED_STRUCT_PAGE_INIT */
 } pg_data_t;
 
<span class="p_header">diff --git a/include/linux/page_idle.h b/include/linux/page_idle.h</span>
<span class="p_header">index bf268fa92c5b..fec40271339f 100644</span>
<span class="p_header">--- a/include/linux/page_idle.h</span>
<span class="p_header">+++ b/include/linux/page_idle.h</span>
<span class="p_chunk">@@ -46,33 +46,62 @@</span> <span class="p_context"> extern struct page_ext_operations page_idle_ops;</span>
 
 static inline bool page_is_young(struct page *page)
 {
<span class="p_del">-	return test_bit(PAGE_EXT_YOUNG, &amp;lookup_page_ext(page)-&gt;flags);</span>
<span class="p_add">+	struct page_ext *page_ext = lookup_page_ext(page);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (unlikely(!page_ext))</span>
<span class="p_add">+		return false;</span>
<span class="p_add">+</span>
<span class="p_add">+	return test_bit(PAGE_EXT_YOUNG, &amp;page_ext-&gt;flags);</span>
 }
 
 static inline void set_page_young(struct page *page)
 {
<span class="p_del">-	set_bit(PAGE_EXT_YOUNG, &amp;lookup_page_ext(page)-&gt;flags);</span>
<span class="p_add">+	struct page_ext *page_ext = lookup_page_ext(page);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (unlikely(!page_ext))</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	set_bit(PAGE_EXT_YOUNG, &amp;page_ext-&gt;flags);</span>
 }
 
 static inline bool test_and_clear_page_young(struct page *page)
 {
<span class="p_del">-	return test_and_clear_bit(PAGE_EXT_YOUNG,</span>
<span class="p_del">-				  &amp;lookup_page_ext(page)-&gt;flags);</span>
<span class="p_add">+	struct page_ext *page_ext = lookup_page_ext(page);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (unlikely(!page_ext))</span>
<span class="p_add">+		return false;</span>
<span class="p_add">+</span>
<span class="p_add">+	return test_and_clear_bit(PAGE_EXT_YOUNG, &amp;page_ext-&gt;flags);</span>
 }
 
 static inline bool page_is_idle(struct page *page)
 {
<span class="p_del">-	return test_bit(PAGE_EXT_IDLE, &amp;lookup_page_ext(page)-&gt;flags);</span>
<span class="p_add">+	struct page_ext *page_ext = lookup_page_ext(page);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (unlikely(!page_ext))</span>
<span class="p_add">+		return false;</span>
<span class="p_add">+</span>
<span class="p_add">+	return test_bit(PAGE_EXT_IDLE, &amp;page_ext-&gt;flags);</span>
 }
 
 static inline void set_page_idle(struct page *page)
 {
<span class="p_del">-	set_bit(PAGE_EXT_IDLE, &amp;lookup_page_ext(page)-&gt;flags);</span>
<span class="p_add">+	struct page_ext *page_ext = lookup_page_ext(page);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (unlikely(!page_ext))</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	set_bit(PAGE_EXT_IDLE, &amp;page_ext-&gt;flags);</span>
 }
 
 static inline void clear_page_idle(struct page *page)
 {
<span class="p_del">-	clear_bit(PAGE_EXT_IDLE, &amp;lookup_page_ext(page)-&gt;flags);</span>
<span class="p_add">+	struct page_ext *page_ext = lookup_page_ext(page);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (unlikely(!page_ext))</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	clear_bit(PAGE_EXT_IDLE, &amp;page_ext-&gt;flags);</span>
 }
 #endif /* CONFIG_64BIT */
 
<span class="p_header">diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h</span>
<span class="p_header">index 3f61c647fc5c..b5421f6f155a 100644</span>
<span class="p_header">--- a/include/linux/skbuff.h</span>
<span class="p_header">+++ b/include/linux/skbuff.h</span>
<span class="p_chunk">@@ -3400,6 +3400,13 @@</span> <span class="p_context"> static inline void nf_reset_trace(struct sk_buff *skb)</span>
 #endif
 }
 
<span class="p_add">+static inline void ipvs_reset(struct sk_buff *skb)</span>
<span class="p_add">+{</span>
<span class="p_add">+#if IS_ENABLED(CONFIG_IP_VS)</span>
<span class="p_add">+	skb-&gt;ipvs_property = 0;</span>
<span class="p_add">+#endif</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 /* Note: This doesn&#39;t put any conntrack and bridge info in dst. */
 static inline void __nf_copy(struct sk_buff *dst, const struct sk_buff *src,
 			     bool copy)
<span class="p_header">diff --git a/mm/debug-pagealloc.c b/mm/debug-pagealloc.c</span>
<span class="p_header">index 5bf5906ce13b..fe1c61f7cf26 100644</span>
<span class="p_header">--- a/mm/debug-pagealloc.c</span>
<span class="p_header">+++ b/mm/debug-pagealloc.c</span>
<span class="p_chunk">@@ -34,6 +34,8 @@</span> <span class="p_context"> static inline void set_page_poison(struct page *page)</span>
 	struct page_ext *page_ext;
 
 	page_ext = lookup_page_ext(page);
<span class="p_add">+	if (page_ext)</span>
<span class="p_add">+		return;</span>
 	__set_bit(PAGE_EXT_DEBUG_POISON, &amp;page_ext-&gt;flags);
 }
 
<span class="p_chunk">@@ -42,6 +44,8 @@</span> <span class="p_context"> static inline void clear_page_poison(struct page *page)</span>
 	struct page_ext *page_ext;
 
 	page_ext = lookup_page_ext(page);
<span class="p_add">+	if (page_ext)</span>
<span class="p_add">+		return;</span>
 	__clear_bit(PAGE_EXT_DEBUG_POISON, &amp;page_ext-&gt;flags);
 }
 
<span class="p_chunk">@@ -50,6 +54,8 @@</span> <span class="p_context"> static inline bool page_poison(struct page *page)</span>
 	struct page_ext *page_ext;
 
 	page_ext = lookup_page_ext(page);
<span class="p_add">+	if (page_ext)</span>
<span class="p_add">+		return false;</span>
 	return test_bit(PAGE_EXT_DEBUG_POISON, &amp;page_ext-&gt;flags);
 }
 
<span class="p_header">diff --git a/mm/page_alloc.c b/mm/page_alloc.c</span>
<span class="p_header">index 6b5421ae86c6..3c70f03d91ec 100644</span>
<span class="p_header">--- a/mm/page_alloc.c</span>
<span class="p_header">+++ b/mm/page_alloc.c</span>
<span class="p_chunk">@@ -267,28 +267,37 @@</span> <span class="p_context"> EXPORT_SYMBOL(nr_online_nodes);</span>
 int page_group_by_mobility_disabled __read_mostly;
 
 #ifdef CONFIG_DEFERRED_STRUCT_PAGE_INIT
<span class="p_add">+</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Determine how many pages need to be initialized durig early boot</span>
<span class="p_add">+ * (non-deferred initialization).</span>
<span class="p_add">+ * The value of first_deferred_pfn will be set later, once non-deferred pages</span>
<span class="p_add">+ * are initialized, but for now set it ULONG_MAX.</span>
<span class="p_add">+ */</span>
 static inline void reset_deferred_meminit(pg_data_t *pgdat)
 {
<span class="p_del">-	unsigned long max_initialise;</span>
<span class="p_del">-	unsigned long reserved_lowmem;</span>
<span class="p_add">+	phys_addr_t start_addr, end_addr;</span>
<span class="p_add">+	unsigned long max_pgcnt;</span>
<span class="p_add">+	unsigned long reserved;</span>
 
 	/*
 	 * Initialise at least 2G of a node but also take into account that
 	 * two large system hashes that can take up 1GB for 0.25TB/node.
 	 */
<span class="p_del">-	max_initialise = max(2UL &lt;&lt; (30 - PAGE_SHIFT),</span>
<span class="p_del">-		(pgdat-&gt;node_spanned_pages &gt;&gt; 8));</span>
<span class="p_add">+	max_pgcnt = max(2UL &lt;&lt; (30 - PAGE_SHIFT),</span>
<span class="p_add">+			(pgdat-&gt;node_spanned_pages &gt;&gt; 8));</span>
 
 	/*
 	 * Compensate the all the memblock reservations (e.g. crash kernel)
 	 * from the initial estimation to make sure we will initialize enough
 	 * memory to boot.
 	 */
<span class="p_del">-	reserved_lowmem = memblock_reserved_memory_within(pgdat-&gt;node_start_pfn,</span>
<span class="p_del">-			pgdat-&gt;node_start_pfn + max_initialise);</span>
<span class="p_del">-	max_initialise += reserved_lowmem;</span>
<span class="p_add">+	start_addr = PFN_PHYS(pgdat-&gt;node_start_pfn);</span>
<span class="p_add">+	end_addr = PFN_PHYS(pgdat-&gt;node_start_pfn + max_pgcnt);</span>
<span class="p_add">+	reserved = memblock_reserved_memory_within(start_addr, end_addr);</span>
<span class="p_add">+	max_pgcnt += PHYS_PFN(reserved);</span>
 
<span class="p_del">-	pgdat-&gt;static_init_size = min(max_initialise, pgdat-&gt;node_spanned_pages);</span>
<span class="p_add">+	pgdat-&gt;static_init_pgcnt = min(max_pgcnt, pgdat-&gt;node_spanned_pages);</span>
 	pgdat-&gt;first_deferred_pfn = ULONG_MAX;
 }
 
<span class="p_chunk">@@ -324,7 +333,7 @@</span> <span class="p_context"> static inline bool update_defer_init(pg_data_t *pgdat,</span>
 		return true;
 	/* Initialise at least 2G of the highest zone */
 	(*nr_initialised)++;
<span class="p_del">-	if ((*nr_initialised &gt; pgdat-&gt;static_init_size) &amp;&amp;</span>
<span class="p_add">+	if ((*nr_initialised &gt; pgdat-&gt;static_init_pgcnt) &amp;&amp;</span>
 	    (pfn &amp; (PAGES_PER_SECTION - 1)) == 0) {
 		pgdat-&gt;first_deferred_pfn = pfn;
 		return false;
<span class="p_chunk">@@ -560,6 +569,9 @@</span> <span class="p_context"> static inline void set_page_guard(struct zone *zone, struct page *page,</span>
 		return;
 
 	page_ext = lookup_page_ext(page);
<span class="p_add">+	if (unlikely(!page_ext))</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
 	__set_bit(PAGE_EXT_DEBUG_GUARD, &amp;page_ext-&gt;flags);
 
 	INIT_LIST_HEAD(&amp;page-&gt;lru);
<span class="p_chunk">@@ -577,6 +589,9 @@</span> <span class="p_context"> static inline void clear_page_guard(struct zone *zone, struct page *page,</span>
 		return;
 
 	page_ext = lookup_page_ext(page);
<span class="p_add">+	if (unlikely(!page_ext))</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
 	__clear_bit(PAGE_EXT_DEBUG_GUARD, &amp;page_ext-&gt;flags);
 
 	set_page_private(page, 0);
<span class="p_header">diff --git a/mm/page_ext.c b/mm/page_ext.c</span>
<span class="p_header">index 292ca7b8debd..4d1eac0d4fc5 100644</span>
<span class="p_header">--- a/mm/page_ext.c</span>
<span class="p_header">+++ b/mm/page_ext.c</span>
<span class="p_chunk">@@ -106,7 +106,6 @@</span> <span class="p_context"> struct page_ext *lookup_page_ext(struct page *page)</span>
 	struct page_ext *base;
 
 	base = NODE_DATA(page_to_nid(page))-&gt;node_page_ext;
<span class="p_del">-#ifdef CONFIG_DEBUG_VM</span>
 	/*
 	 * The sanity checks the page allocator does upon freeing a
 	 * page can reach here before the page_ext arrays are
<span class="p_chunk">@@ -115,7 +114,6 @@</span> <span class="p_context"> struct page_ext *lookup_page_ext(struct page *page)</span>
 	 */
 	if (unlikely(!base))
 		return NULL;
<span class="p_del">-#endif</span>
 	offset = pfn - round_down(node_start_pfn(page_to_nid(page)),
 					MAX_ORDER_NR_PAGES);
 	return base + offset;
<span class="p_chunk">@@ -180,7 +178,6 @@</span> <span class="p_context"> struct page_ext *lookup_page_ext(struct page *page)</span>
 {
 	unsigned long pfn = page_to_pfn(page);
 	struct mem_section *section = __pfn_to_section(pfn);
<span class="p_del">-#ifdef CONFIG_DEBUG_VM</span>
 	/*
 	 * The sanity checks the page allocator does upon freeing a
 	 * page can reach here before the page_ext arrays are
<span class="p_chunk">@@ -189,7 +186,6 @@</span> <span class="p_context"> struct page_ext *lookup_page_ext(struct page *page)</span>
 	 */
 	if (!section-&gt;page_ext)
 		return NULL;
<span class="p_del">-#endif</span>
 	return section-&gt;page_ext + pfn;
 }
 
<span class="p_header">diff --git a/mm/page_owner.c b/mm/page_owner.c</span>
<span class="p_header">index 983c3a10fa07..dd6b9cebf981 100644</span>
<span class="p_header">--- a/mm/page_owner.c</span>
<span class="p_header">+++ b/mm/page_owner.c</span>
<span class="p_chunk">@@ -53,6 +53,8 @@</span> <span class="p_context"> void __reset_page_owner(struct page *page, unsigned int order)</span>
 
 	for (i = 0; i &lt; (1 &lt;&lt; order); i++) {
 		page_ext = lookup_page_ext(page + i);
<span class="p_add">+		if (unlikely(!page_ext))</span>
<span class="p_add">+			continue;</span>
 		__clear_bit(PAGE_EXT_OWNER, &amp;page_ext-&gt;flags);
 	}
 }
<span class="p_chunk">@@ -60,6 +62,7 @@</span> <span class="p_context"> void __reset_page_owner(struct page *page, unsigned int order)</span>
 void __set_page_owner(struct page *page, unsigned int order, gfp_t gfp_mask)
 {
 	struct page_ext *page_ext = lookup_page_ext(page);
<span class="p_add">+</span>
 	struct stack_trace trace = {
 		.nr_entries = 0,
 		.max_entries = ARRAY_SIZE(page_ext-&gt;trace_entries),
<span class="p_chunk">@@ -67,6 +70,9 @@</span> <span class="p_context"> void __set_page_owner(struct page *page, unsigned int order, gfp_t gfp_mask)</span>
 		.skip = 3,
 	};
 
<span class="p_add">+	if (unlikely(!page_ext))</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
 	save_stack_trace(&amp;trace);
 
 	page_ext-&gt;order = order;
<span class="p_chunk">@@ -79,6 +85,12 @@</span> <span class="p_context"> void __set_page_owner(struct page *page, unsigned int order, gfp_t gfp_mask)</span>
 gfp_t __get_page_owner_gfp(struct page *page)
 {
 	struct page_ext *page_ext = lookup_page_ext(page);
<span class="p_add">+	if (unlikely(!page_ext))</span>
<span class="p_add">+		/*</span>
<span class="p_add">+		 * The caller just returns 0 if no valid gfp</span>
<span class="p_add">+		 * So return 0 here too.</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		return 0;</span>
 
 	return page_ext-&gt;gfp_mask;
 }
<span class="p_chunk">@@ -194,6 +206,8 @@</span> <span class="p_context"> read_page_owner(struct file *file, char __user *buf, size_t count, loff_t *ppos)</span>
 		}
 
 		page_ext = lookup_page_ext(page);
<span class="p_add">+		if (unlikely(!page_ext))</span>
<span class="p_add">+			continue;</span>
 
 		/*
 		 * Some pages could be missed by concurrent allocation or free,
<span class="p_chunk">@@ -257,6 +271,8 @@</span> <span class="p_context"> static void init_pages_in_zone(pg_data_t *pgdat, struct zone *zone)</span>
 				continue;
 
 			page_ext = lookup_page_ext(page);
<span class="p_add">+			if (unlikely(!page_ext))</span>
<span class="p_add">+				continue;</span>
 
 			/* Maybe overraping zone */
 			if (test_bit(PAGE_EXT_OWNER, &amp;page_ext-&gt;flags))
<span class="p_header">diff --git a/mm/pagewalk.c b/mm/pagewalk.c</span>
<span class="p_header">index 29f2f8b853ae..c2cbd2620169 100644</span>
<span class="p_header">--- a/mm/pagewalk.c</span>
<span class="p_header">+++ b/mm/pagewalk.c</span>
<span class="p_chunk">@@ -142,8 +142,12 @@</span> <span class="p_context"> static int walk_hugetlb_range(unsigned long addr, unsigned long end,</span>
 	do {
 		next = hugetlb_entry_end(h, addr, end);
 		pte = huge_pte_offset(walk-&gt;mm, addr &amp; hmask);
<span class="p_del">-		if (pte &amp;&amp; walk-&gt;hugetlb_entry)</span>
<span class="p_add">+</span>
<span class="p_add">+		if (pte)</span>
 			err = walk-&gt;hugetlb_entry(pte, hmask, addr, next, walk);
<span class="p_add">+		else if (walk-&gt;pte_hole)</span>
<span class="p_add">+			err = walk-&gt;pte_hole(addr, next, walk);</span>
<span class="p_add">+</span>
 		if (err)
 			break;
 	} while (addr = next, addr != end);
<span class="p_header">diff --git a/mm/vmstat.c b/mm/vmstat.c</span>
<span class="p_header">index c54fd2924f25..c344e3609c53 100644</span>
<span class="p_header">--- a/mm/vmstat.c</span>
<span class="p_header">+++ b/mm/vmstat.c</span>
<span class="p_chunk">@@ -1091,6 +1091,8 @@</span> <span class="p_context"> static void pagetypeinfo_showmixedcount_print(struct seq_file *m,</span>
 				continue;
 
 			page_ext = lookup_page_ext(page);
<span class="p_add">+			if (unlikely(!page_ext))</span>
<span class="p_add">+				continue;</span>
 
 			if (!test_bit(PAGE_EXT_OWNER, &amp;page_ext-&gt;flags))
 				continue;
<span class="p_header">diff --git a/net/8021q/vlan.c b/net/8021q/vlan.c</span>
<span class="p_header">index 5e4199d5a388..01abb6431fd9 100644</span>
<span class="p_header">--- a/net/8021q/vlan.c</span>
<span class="p_header">+++ b/net/8021q/vlan.c</span>
<span class="p_chunk">@@ -376,6 +376,9 @@</span> <span class="p_context"> static int vlan_device_event(struct notifier_block *unused, unsigned long event,</span>
 			dev-&gt;name);
 		vlan_vid_add(dev, htons(ETH_P_8021Q), 0);
 	}
<span class="p_add">+	if (event == NETDEV_DOWN &amp;&amp;</span>
<span class="p_add">+	    (dev-&gt;features &amp; NETIF_F_HW_VLAN_CTAG_FILTER))</span>
<span class="p_add">+		vlan_vid_del(dev, htons(ETH_P_8021Q), 0);</span>
 
 	vlan_info = rtnl_dereference(dev-&gt;vlan_info);
 	if (!vlan_info)
<span class="p_chunk">@@ -423,9 +426,6 @@</span> <span class="p_context"> static int vlan_device_event(struct notifier_block *unused, unsigned long event,</span>
 		struct net_device *tmp;
 		LIST_HEAD(close_list);
 
<span class="p_del">-		if (dev-&gt;features &amp; NETIF_F_HW_VLAN_CTAG_FILTER)</span>
<span class="p_del">-			vlan_vid_del(dev, htons(ETH_P_8021Q), 0);</span>
<span class="p_del">-</span>
 		/* Put all VLANs for this dev in the down state too.  */
 		vlan_group_for_each_dev(grp, i, vlandev) {
 			flgs = vlandev-&gt;flags;
<span class="p_header">diff --git a/net/core/skbuff.c b/net/core/skbuff.c</span>
<span class="p_header">index 73dfd7729bc9..d33609c2f276 100644</span>
<span class="p_header">--- a/net/core/skbuff.c</span>
<span class="p_header">+++ b/net/core/skbuff.c</span>
<span class="p_chunk">@@ -4229,6 +4229,7 @@</span> <span class="p_context"> void skb_scrub_packet(struct sk_buff *skb, bool xnet)</span>
 	if (!xnet)
 		return;
 
<span class="p_add">+	ipvs_reset(skb);</span>
 	skb_orphan(skb);
 	skb-&gt;mark = 0;
 }
<span class="p_header">diff --git a/net/ipv4/tcp_output.c b/net/ipv4/tcp_output.c</span>
<span class="p_header">index 64c7ce847584..39c2919fe0d3 100644</span>
<span class="p_header">--- a/net/ipv4/tcp_output.c</span>
<span class="p_header">+++ b/net/ipv4/tcp_output.c</span>
<span class="p_chunk">@@ -3018,13 +3018,8 @@</span> <span class="p_context"> struct sk_buff *tcp_make_synack(const struct sock *sk, struct dst_entry *dst,</span>
 	tcp_ecn_make_synack(req, th);
 	th-&gt;source = htons(ireq-&gt;ir_num);
 	th-&gt;dest = ireq-&gt;ir_rmt_port;
<span class="p_del">-	/* Setting of flags are superfluous here for callers (and ECE is</span>
<span class="p_del">-	 * not even correctly set)</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	tcp_init_nondata_skb(skb, tcp_rsk(req)-&gt;snt_isn,</span>
<span class="p_del">-			     TCPHDR_SYN | TCPHDR_ACK);</span>
<span class="p_del">-</span>
<span class="p_del">-	th-&gt;seq = htonl(TCP_SKB_CB(skb)-&gt;seq);</span>
<span class="p_add">+	skb-&gt;ip_summed = CHECKSUM_PARTIAL;</span>
<span class="p_add">+	th-&gt;seq = htonl(tcp_rsk(req)-&gt;snt_isn);</span>
 	/* XXX data is queued and acked as is. No buffer/window check */
 	th-&gt;ack_seq = htonl(tcp_rsk(req)-&gt;rcv_nxt);
 
<span class="p_header">diff --git a/net/netlink/af_netlink.c b/net/netlink/af_netlink.c</span>
<span class="p_header">index acfb16fdcd55..9ecdd61c6463 100644</span>
<span class="p_header">--- a/net/netlink/af_netlink.c</span>
<span class="p_header">+++ b/net/netlink/af_netlink.c</span>
<span class="p_chunk">@@ -2077,7 +2077,7 @@</span> <span class="p_context"> static int netlink_dump(struct sock *sk)</span>
 	struct sk_buff *skb = NULL;
 	struct nlmsghdr *nlh;
 	struct module *module;
<span class="p_del">-	int len, err = -ENOBUFS;</span>
<span class="p_add">+	int err = -ENOBUFS;</span>
 	int alloc_min_size;
 	int alloc_size;
 
<span class="p_chunk">@@ -2125,9 +2125,11 @@</span> <span class="p_context"> static int netlink_dump(struct sock *sk)</span>
 	skb_reserve(skb, skb_tailroom(skb) - alloc_size);
 	netlink_skb_set_owner_r(skb, sk);
 
<span class="p_del">-	len = cb-&gt;dump(skb, cb);</span>
<span class="p_add">+	if (nlk-&gt;dump_done_errno &gt; 0)</span>
<span class="p_add">+		nlk-&gt;dump_done_errno = cb-&gt;dump(skb, cb);</span>
 
<span class="p_del">-	if (len &gt; 0) {</span>
<span class="p_add">+	if (nlk-&gt;dump_done_errno &gt; 0 ||</span>
<span class="p_add">+	    skb_tailroom(skb) &lt; nlmsg_total_size(sizeof(nlk-&gt;dump_done_errno))) {</span>
 		mutex_unlock(nlk-&gt;cb_mutex);
 
 		if (sk_filter(sk, skb))
<span class="p_chunk">@@ -2137,13 +2139,15 @@</span> <span class="p_context"> static int netlink_dump(struct sock *sk)</span>
 		return 0;
 	}
 
<span class="p_del">-	nlh = nlmsg_put_answer(skb, cb, NLMSG_DONE, sizeof(len), NLM_F_MULTI);</span>
<span class="p_del">-	if (!nlh)</span>
<span class="p_add">+	nlh = nlmsg_put_answer(skb, cb, NLMSG_DONE,</span>
<span class="p_add">+			       sizeof(nlk-&gt;dump_done_errno), NLM_F_MULTI);</span>
<span class="p_add">+	if (WARN_ON(!nlh))</span>
 		goto errout_skb;
 
 	nl_dump_check_consistent(cb, nlh);
 
<span class="p_del">-	memcpy(nlmsg_data(nlh), &amp;len, sizeof(len));</span>
<span class="p_add">+	memcpy(nlmsg_data(nlh), &amp;nlk-&gt;dump_done_errno,</span>
<span class="p_add">+	       sizeof(nlk-&gt;dump_done_errno));</span>
 
 	if (sk_filter(sk, skb))
 		kfree_skb(skb);
<span class="p_chunk">@@ -2208,6 +2212,7 @@</span> <span class="p_context"> int __netlink_dump_start(struct sock *ssk, struct sk_buff *skb,</span>
 	cb-&gt;skb = skb;
 
 	nlk-&gt;cb_running = true;
<span class="p_add">+	nlk-&gt;dump_done_errno = INT_MAX;</span>
 
 	mutex_unlock(nlk-&gt;cb_mutex);
 
<span class="p_header">diff --git a/net/netlink/af_netlink.h b/net/netlink/af_netlink.h</span>
<span class="p_header">index ea4600aea6b0..d987696c0eb4 100644</span>
<span class="p_header">--- a/net/netlink/af_netlink.h</span>
<span class="p_header">+++ b/net/netlink/af_netlink.h</span>
<span class="p_chunk">@@ -38,6 +38,7 @@</span> <span class="p_context"> struct netlink_sock {</span>
 	wait_queue_head_t	wait;
 	bool			bound;
 	bool			cb_running;
<span class="p_add">+	int			dump_done_errno;</span>
 	struct netlink_callback	cb;
 	struct mutex		*cb_mutex;
 	struct mutex		cb_def_mutex;
<span class="p_header">diff --git a/net/sctp/ipv6.c b/net/sctp/ipv6.c</span>
<span class="p_header">index e33e9bd4ed5a..8a61ccc37e12 100644</span>
<span class="p_header">--- a/net/sctp/ipv6.c</span>
<span class="p_header">+++ b/net/sctp/ipv6.c</span>
<span class="p_chunk">@@ -806,6 +806,8 @@</span> <span class="p_context"> static void sctp_inet6_skb_msgname(struct sk_buff *skb, char *msgname,</span>
 		if (ipv6_addr_type(&amp;addr-&gt;v6.sin6_addr) &amp; IPV6_ADDR_LINKLOCAL) {
 			struct sctp_ulpevent *ev = sctp_skb2event(skb);
 			addr-&gt;v6.sin6_scope_id = ev-&gt;iif;
<span class="p_add">+		} else {</span>
<span class="p_add">+			addr-&gt;v6.sin6_scope_id = 0;</span>
 		}
 	}
 
<span class="p_header">diff --git a/net/sctp/socket.c b/net/sctp/socket.c</span>
<span class="p_header">index 7f0f689b8d2b..272edd7748a0 100644</span>
<span class="p_header">--- a/net/sctp/socket.c</span>
<span class="p_header">+++ b/net/sctp/socket.c</span>
<span class="p_chunk">@@ -4453,6 +4453,10 @@</span> <span class="p_context"> int sctp_do_peeloff(struct sock *sk, sctp_assoc_t id, struct socket **sockp)</span>
 	struct socket *sock;
 	int err = 0;
 
<span class="p_add">+	/* Do not peel off from one netns to another one. */</span>
<span class="p_add">+	if (!net_eq(current-&gt;nsproxy-&gt;net_ns, sock_net(sk)))</span>
<span class="p_add">+		return -EINVAL;</span>
<span class="p_add">+</span>
 	/* Do not peel off from one netns to another one. */
 	if (!net_eq(current-&gt;nsproxy-&gt;net_ns, sock_net(sk)))
 		return -EINVAL;
<span class="p_header">diff --git a/security/integrity/ima/ima_appraise.c b/security/integrity/ima/ima_appraise.c</span>
<span class="p_header">index 9ce9d5003dcc..19014293f927 100644</span>
<span class="p_header">--- a/security/integrity/ima/ima_appraise.c</span>
<span class="p_header">+++ b/security/integrity/ima/ima_appraise.c</span>
<span class="p_chunk">@@ -297,6 +297,9 @@</span> <span class="p_context"> void ima_update_xattr(struct integrity_iint_cache *iint, struct file *file)</span>
 	if (iint-&gt;flags &amp; IMA_DIGSIG)
 		return;
 
<span class="p_add">+	if (iint-&gt;ima_file_status != INTEGRITY_PASS)</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
 	rc = ima_collect_measurement(iint, file, NULL, NULL);
 	if (rc &lt; 0)
 		return;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



