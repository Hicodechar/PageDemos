
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[14/21] MIPS memblock: Alter IO resources initialization method - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [14/21] MIPS memblock: Alter IO resources initialization method</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=169435">Serge Semin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 19, 2016, 2:07 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1482113266-13207-15-git-send-email-fancer.lancer@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9479567/mbox/"
   >mbox</a>
|
   <a href="/patch/9479567/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9479567/">/patch/9479567/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	2BAD660832 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 19 Dec 2016 02:10:57 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1B64D2838C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 19 Dec 2016 02:10:57 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 1005F2845E; Mon, 19 Dec 2016 02:10:57 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, FREEMAIL_FROM,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id A86F22838C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 19 Dec 2016 02:10:56 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932882AbcLSCJF (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 18 Dec 2016 21:09:05 -0500
Received: from mail-lf0-f66.google.com ([209.85.215.66]:33846 &quot;EHLO
	mail-lf0-f66.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1761905AbcLSCIK (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 18 Dec 2016 21:08:10 -0500
Received: by mail-lf0-f66.google.com with SMTP id 30so4661634lfy.1;
	Sun, 18 Dec 2016 18:08:09 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=Gz2lGQ/GWOFvOjpj0ijKVLgcBmXy97Hr1+bCljUV5NI=;
	b=Ic1k1JsEQNQ5yfhRANHu06GmqHwTMjPeg1aYjqfAJpRa+zQ3zg8XlnL0XhFM8M1SeE
	sQflikr6h5ClXp1LUG+d5aa+XHmNp4Gxq5o1eJC80WreIj5ZC0uRg7AtlTueS4vNvbf2
	a8vBotcEZwQL9Ubcsojgkc3xZtMq1fSa4PyI5WSEqO/qrgw8y0fvR58Kn7RBJn/DDyaP
	qit/48hMa6Rk2nWWi72N0NdadBbS+4lKW5nxEE+IuriJdrieqz2Kk4YJJ+QmEmPTlD1u
	Ubz2fFekBwe7MqzF0pRgngbiT2uyYVagdAZfiOIpSRR47PTD1iVnqvdNtSQ4oQH1AsDg
	33gA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=Gz2lGQ/GWOFvOjpj0ijKVLgcBmXy97Hr1+bCljUV5NI=;
	b=FP6aSAIdzoGkRKh1AQyATmGTaJRpGwBzhsvDqs0o41ki5C6K9IR7cDZoEsevm5O1TK
	0DnwZaiII+FQyz1eMUzuXMHvVYeE0TJBDBnTtSeN5cVsLbhqiDtYN+mmVUmh8Y7kUb1J
	HRg24Kgea7tLmrBtx84Q9b1Tjqv+zn92lOY2xZEd4WUw7Vj3GPza9xj4VTRp4JmNbxdL
	f8gIQHDjolLmr/iBVJBlN4sv9Q2ZFhg9l44Bar8OQiYABc7xX8YYOHj4Jhqt3AKvsd6S
	so39oWghx+J+ZZm+rLAr1o4GeGTsvQ5AgfOOY1zTrqg2MhTXOyAuwwd4xOFK2NRHhb49
	CaLA==
X-Gm-Message-State: AKaTC03igsHB+w1/3PXvcWdmsJ+rh88PU4ZfKcLrYmMzfGZ1gwQ+0fK06Z+DSCo5EeaDkw==
X-Received: by 10.25.133.135 with SMTP id h129mr3692239lfd.127.1482113288434;
	Sun, 18 Dec 2016 18:08:08 -0800 (PST)
Received: from linux.local ([95.79.144.28]) by smtp.gmail.com with ESMTPSA id
	9sm3362103ljn.20.2016.12.18.18.08.07
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Sun, 18 Dec 2016 18:08:07 -0800 (PST)
From: Serge Semin &lt;fancer.lancer@gmail.com&gt;
To: ralf@linux-mips.org, paul.burton@imgtec.com, rabinv@axis.com,
	matt.redfearn@imgtec.com, james.hogan@imgtec.com,
	alexander.sverdlin@nokia.com, robh+dt@kernel.org, frowand.list@gmail.com
Cc: Sergey.Semin@t-platforms.ru, linux-mips@linux-mips.org,
	devicetree@vger.kernel.org, linux-kernel@vger.kernel.org,
	Serge Semin &lt;fancer.lancer@gmail.com&gt;
Subject: [PATCH 14/21] MIPS memblock: Alter IO resources initialization
	method
Date: Mon, 19 Dec 2016 05:07:39 +0300
Message-Id: &lt;1482113266-13207-15-git-send-email-fancer.lancer@gmail.com&gt;
X-Mailer: git-send-email 2.6.6
In-Reply-To: &lt;1482113266-13207-1-git-send-email-fancer.lancer@gmail.com&gt;
References: &lt;1482113266-13207-1-git-send-email-fancer.lancer@gmail.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=169435">Serge Semin</a> - Dec. 19, 2016, 2:07 a.m.</div>
<pre class="content">
Replace resource initialization method with one using memblocks.
It fully reflects all available system RAM within memory regions.
<span class="signed-off-by">
Signed-off-by: Serge Semin &lt;fancer.lancer@gmail.com&gt;</span>
---
 arch/mips/kernel/setup.c | 40 +++++++++---------------------
 1 file changed, 12 insertions(+), 28 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/mips/kernel/setup.c b/arch/mips/kernel/setup.c</span>
<span class="p_header">index b18d38c..8bef2d3 100644</span>
<span class="p_header">--- a/arch/mips/kernel/setup.c</span>
<span class="p_header">+++ b/arch/mips/kernel/setup.c</span>
<span class="p_chunk">@@ -868,46 +868,30 @@</span> <span class="p_context"> static void __init arch_mem_init(char **cmdline_p)</span>
 	plat_swiotlb_setup();
 }
 
<span class="p_add">+/*</span>
<span class="p_add">+ * Declare memory within system resources</span>
<span class="p_add">+ */</span>
 static void __init resource_init(void)
 {
<span class="p_del">-	int i;</span>
<span class="p_add">+	struct memblock_region *reg;</span>
 
 	if (UNCAC_BASE != IO_BASE)
 		return;
 
<span class="p_add">+	/* Kernel code and data need to be registered within proper regions */</span>
 	code_resource.start = __pa_symbol(&amp;_text);
 	code_resource.end = __pa_symbol(&amp;_etext) - 1;
 	data_resource.start = __pa_symbol(&amp;_etext);
 	data_resource.end = __pa_symbol(&amp;_edata) - 1;
 
<span class="p_del">-	for (i = 0; i &lt; boot_mem_map.nr_map; i++) {</span>
<span class="p_add">+	/* Register RAM resources */</span>
<span class="p_add">+	for_each_memblock(memory, reg) {</span>
 		struct resource *res;
<span class="p_del">-		unsigned long start, end;</span>
<span class="p_del">-</span>
<span class="p_del">-		start = boot_mem_map.map[i].addr;</span>
<span class="p_del">-		end = boot_mem_map.map[i].addr + boot_mem_map.map[i].size - 1;</span>
<span class="p_del">-		if (start &gt;= HIGHMEM_START)</span>
<span class="p_del">-			continue;</span>
<span class="p_del">-		if (end &gt;= HIGHMEM_START)</span>
<span class="p_del">-			end = HIGHMEM_START - 1;</span>
<span class="p_del">-</span>
<span class="p_del">-		res = alloc_bootmem(sizeof(struct resource));</span>
<span class="p_del">-</span>
<span class="p_del">-		res-&gt;start = start;</span>
<span class="p_del">-		res-&gt;end = end;</span>
<span class="p_del">-		res-&gt;flags = IORESOURCE_MEM | IORESOURCE_BUSY;</span>
<span class="p_del">-</span>
<span class="p_del">-		switch (boot_mem_map.map[i].type) {</span>
<span class="p_del">-		case BOOT_MEM_RAM:</span>
<span class="p_del">-		case BOOT_MEM_INIT_RAM:</span>
<span class="p_del">-		case BOOT_MEM_ROM_DATA:</span>
<span class="p_del">-			res-&gt;name = &quot;System RAM&quot;;</span>
<span class="p_del">-			res-&gt;flags |= IORESOURCE_SYSRAM;</span>
<span class="p_del">-			break;</span>
<span class="p_del">-		case BOOT_MEM_RESERVED:</span>
<span class="p_del">-		default:</span>
<span class="p_del">-			res-&gt;name = &quot;reserved&quot;;</span>
<span class="p_del">-		}</span>
<span class="p_add">+		res = memblock_virt_alloc(sizeof(*res), 0);</span>
<span class="p_add">+		res-&gt;name  = &quot;System RAM&quot;;</span>
<span class="p_add">+		res-&gt;start = PFN_PHYS(memblock_region_memory_base_pfn(reg));</span>
<span class="p_add">+		res-&gt;end = PFN_PHYS(memblock_region_memory_end_pfn(reg)) - 1;</span>
<span class="p_add">+		res-&gt;flags = IORESOURCE_BUSY | IORESOURCE_SYSTEM_RAM;</span>
 
 		request_resource(&amp;iomem_resource, res);
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



