
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[13/21] MIPS memblock: Add memblock allocator initialization - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [13/21] MIPS memblock: Add memblock allocator initialization</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=169435">Serge Semin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 19, 2016, 2:07 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1482113266-13207-14-git-send-email-fancer.lancer@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9479565/mbox/"
   >mbox</a>
|
   <a href="/patch/9479565/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9479565/">/patch/9479565/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	A3BB860836 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 19 Dec 2016 02:10:35 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 939B52838C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 19 Dec 2016 02:10:35 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 882C32845E; Mon, 19 Dec 2016 02:10:35 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, FREEMAIL_FROM,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id EEC242845B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 19 Dec 2016 02:10:34 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1762242AbcLSCJG (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 18 Dec 2016 21:09:06 -0500
Received: from mail-lf0-f66.google.com ([209.85.215.66]:33836 &quot;EHLO
	mail-lf0-f66.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1759338AbcLSCIJ (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 18 Dec 2016 21:08:09 -0500
Received: by mail-lf0-f66.google.com with SMTP id 30so4661582lfy.1;
	Sun, 18 Dec 2016 18:08:08 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=mjKmhU3mFd/9LEdwlqnynhGcnXvHkk9RMNq7Cs+NL3s=;
	b=WcL5kcRJKrBMBT14Xvdd70hHXubF8qDF8fbctro91faKpLPlt38we8Dpl/vESbTliS
	KFSxAFFWMAni4l1CdH4Z7r4YzDovOTM7yzjYnlYyzqVR9t+wG9jzV+9cnPUpyyGWILqW
	Wh8jdRhmiCyFpoKilVFEiC7uf1ng0YvKvns5R2Gyr2d36t82GmPyVcNF0h6cRj9ZhgLb
	6aqL5HELKD696+kuvxwnjQce7iA/OV3EOSi+MlTwJHGMh+4EfpeBb6fGovnbEtxlyybD
	eqDFiaKyq/UAX8OxICyxo9yd4R5aHHojdLYZRbuE6vEnrbfOgHezqq9oVxRtyM46hFFD
	LEVQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=mjKmhU3mFd/9LEdwlqnynhGcnXvHkk9RMNq7Cs+NL3s=;
	b=TJEUIxi9mpBsPmK72besOpNOHzAzAuCcjfb1XhiE8XvRcVCHDn0B6VMrLuSt3rUPFy
	lu3At5vn8kWC6NHbsjF7E0rmSGqU1Ku9371QdrKB4TF/eE7Nl668uIRNuBkazcrSSmmt
	q1ZGakDRiFjEv4kCS6rOQp10GGj08d+q5ZtPzfMc2vJCsPUbvHd8vDwHTVqaeX4JTw2Y
	F3Uz1r1g4zGIOQiakarhG7IZmB7FGE7Km++mH2GWKFNVUXuc/5fRPToWYBFk33/IYM4U
	DswrrWfoR/NsD0m/GcS1ynI7JfUH1q1xlzmkyChnR4LWIpX65/gwiNvV1eodGQLYl9bQ
	KqLw==
X-Gm-Message-State: AIkVDXIKT4nsWOCdF36/mYhiI/icNw15n2GzmR0OalzwBZbhsXtmu3hkGM06NeythNyVzg==
X-Received: by 10.46.74.26 with SMTP id x26mr5664832lja.51.1482113287431;
	Sun, 18 Dec 2016 18:08:07 -0800 (PST)
Received: from linux.local ([95.79.144.28]) by smtp.gmail.com with ESMTPSA id
	9sm3362103ljn.20.2016.12.18.18.08.06
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Sun, 18 Dec 2016 18:08:06 -0800 (PST)
From: Serge Semin &lt;fancer.lancer@gmail.com&gt;
To: ralf@linux-mips.org, paul.burton@imgtec.com, rabinv@axis.com,
	matt.redfearn@imgtec.com, james.hogan@imgtec.com,
	alexander.sverdlin@nokia.com, robh+dt@kernel.org, frowand.list@gmail.com
Cc: Sergey.Semin@t-platforms.ru, linux-mips@linux-mips.org,
	devicetree@vger.kernel.org, linux-kernel@vger.kernel.org,
	Serge Semin &lt;fancer.lancer@gmail.com&gt;
Subject: [PATCH 13/21] MIPS memblock: Add memblock allocator initialization
Date: Mon, 19 Dec 2016 05:07:38 +0300
Message-Id: &lt;1482113266-13207-14-git-send-email-fancer.lancer@gmail.com&gt;
X-Mailer: git-send-email 2.6.6
In-Reply-To: &lt;1482113266-13207-1-git-send-email-fancer.lancer@gmail.com&gt;
References: &lt;1482113266-13207-1-git-send-email-fancer.lancer@gmail.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=169435">Serge Semin</a> - Dec. 19, 2016, 2:07 a.m.</div>
<pre class="content">
Initialization is done by subsequent performing of the following
steps:
1) Call platform-specific call adding memory regions
2) Parse kernel parameters looking (they may change memory layout)
3) Check whether declared memory is in sane
4) Reserve memory for kernel, initrd, crashdump, fdt, devices and CMA
5) Find PFN limits of the memory regions
6) Allow memblocks resize
7) Perform basic paging subsystem initialization: nodes, zones, page
tables (if necessary), kernel mapping and so on.

Sparse sections initialization is moved into mem_init() method
<span class="signed-off-by">
Signed-off-by: Serge Semin &lt;fancer.lancer@gmail.com&gt;</span>
---
 arch/mips/kernel/setup.c | 93 +++++++++++++++++++++++-------
 1 file changed, 71 insertions(+), 22 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/mips/kernel/setup.c b/arch/mips/kernel/setup.c</span>
<span class="p_header">index 409d23d..b18d38c 100644</span>
<span class="p_header">--- a/arch/mips/kernel/setup.c</span>
<span class="p_header">+++ b/arch/mips/kernel/setup.c</span>
<span class="p_chunk">@@ -9,6 +9,7 @@</span> <span class="p_context"></span>
  * Copyright (C) 1996 Stoned Elipot
  * Copyright (C) 1999 Silicon Graphics, Inc.
  * Copyright (C) 2000, 2001, 2002, 2007	 Maciej W. Rozycki
<span class="p_add">+ * Copyright (C) 2016 T-platforms</span>
  */
 #include &lt;linux/init.h&gt;
 #include &lt;linux/ioport.h&gt;
<span class="p_chunk">@@ -27,6 +28,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/device.h&gt;
 #include &lt;linux/dma-contiguous.h&gt;
 #include &lt;linux/decompress/generic.h&gt;
<span class="p_add">+#include &lt;linux/of_fdt.h&gt;</span>
 
 #include &lt;asm/addrspace.h&gt;
 #include &lt;asm/bootinfo.h&gt;
<span class="p_chunk">@@ -733,20 +735,34 @@</span> <span class="p_context"> static void __init find_pfn_limits(void)</span>
 }
 
 /*
<span class="p_del">- * Initialize the bootmem allocator. It also setup initrd related data</span>
<span class="p_del">- * if needed.</span>
<span class="p_add">+ * Initialize the memblock allocator</span>
  */
 #if defined(CONFIG_SGI_IP27) || (defined(CONFIG_CPU_LOONGSON3) &amp;&amp; defined(CONFIG_NUMA))
 
<span class="p_del">-static void __init bootmem_init(void)</span>
<span class="p_add">+static void __init mips_bootmem_init(void)</span>
 {
<span class="p_add">+	/* Reserve kernel code/data memory */</span>
<span class="p_add">+	mips_reserve_kernel_mem();</span>
<span class="p_add">+</span>
 	/* Check and reserve memory occupied by initrd */
 	mips_reserve_initrd_mem();
<span class="p_add">+</span>
<span class="p_add">+	/* Reserve memory for elfcorehdr */</span>
<span class="p_add">+	mips_reserve_elfcorehdr();</span>
<span class="p_add">+</span>
<span class="p_add">+	/* Parse crashkernel parameter */</span>
<span class="p_add">+	mips_parse_crashkernel();</span>
<span class="p_add">+</span>
<span class="p_add">+	/* Reserve memory for DMA contiguous allocator */</span>
<span class="p_add">+	dma_contiguous_reserve(mips_lowmem_limit);</span>
<span class="p_add">+</span>
<span class="p_add">+	/* Allow memblock resize from now */</span>
<span class="p_add">+	memblock_allow_resize();</span>
 }
 
 #else  /* !CONFIG_SGI_IP27 */
 
<span class="p_del">-static void __init bootmem_init(void)</span>
<span class="p_add">+static void __init mips_bootmem_init(void)</span>
 {
 	/* Reserve kernel code/data memory */
 	mips_reserve_kernel_mem();
<span class="p_chunk">@@ -760,8 +776,23 @@</span> <span class="p_context"> static void __init bootmem_init(void)</span>
 	/* Parse crashkernel parameter */
 	mips_parse_crashkernel();
 
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Platform code usually copies fdt, but still lets reserve its memory</span>
<span class="p_add">+	 * in case if it doesn&#39;t</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	early_init_fdt_reserve_self();</span>
<span class="p_add">+</span>
<span class="p_add">+	/* Scan reserved-memory nodes of fdt */</span>
<span class="p_add">+	early_init_fdt_scan_reserved_mem();</span>
<span class="p_add">+</span>
<span class="p_add">+	/* Reserve memory for DMA contiguous allocator */</span>
<span class="p_add">+	dma_contiguous_reserve(mips_lowmem_limit);</span>
<span class="p_add">+</span>
 	/* Find memory PFN limits */
 	find_pfn_limits();
<span class="p_add">+</span>
<span class="p_add">+	/* Allow memblock resize from now */</span>
<span class="p_add">+	memblock_allow_resize();</span>
 }
 
 #endif	/* CONFIG_SGI_IP27 */
<span class="p_chunk">@@ -770,30 +801,51 @@</span> <span class="p_context"> static void __init bootmem_init(void)</span>
  * arch_mem_init - initialize memory management subsystem
  *
  *  o plat_mem_setup() detects the memory configuration and will record detected
<span class="p_del">- *    memory areas using add_memory_region.</span>
<span class="p_add">+ *    memory areas using add_memory_region, which in addition preinitializes</span>
<span class="p_add">+ *    memblock ranges.</span>
  *
  * At this stage the memory configuration of the system is known to the
  * kernel but generic memory management system is still entirely uninitialized.
  *
<span class="p_del">- *  o bootmem_init()</span>
<span class="p_del">- *  o sparse_init()</span>
<span class="p_del">- *  o paging_init()</span>
<span class="p_del">- *  o dma_contiguous_reserve()</span>
<span class="p_add">+ *  o mips_parse_param() parses parameters passed to the kernel in accordance</span>
<span class="p_add">+ *    with CMDLINE configs.</span>
<span class="p_add">+ *  o sanity_check_meminfo() performs memory ranges sanity checks, for</span>
<span class="p_add">+ *    example, drop high mem regions if it&#39;s not supported, set memblock limit</span>
<span class="p_add">+ *    of low memory allocations</span>
<span class="p_add">+ *  o mips_bootmem_init() performs memblock further initializations,</span>
<span class="p_add">+ *    particularly reserve crucial regions, including kernel segments, initrd,</span>
<span class="p_add">+ *    elfcorehdrm, crashkernel, fdt, DMA contiguous allocator, set PFN-related</span>
<span class="p_add">+ *    global variables.</span>
<span class="p_add">+ *  o print_memory_map() prints initialized and verified memory map</span>
<span class="p_add">+ *  o device_tree_init() calls platform-specific method to perform some</span>
<span class="p_add">+ *    device tree related operations</span>
<span class="p_add">+ *  o plat_swiotlb_setup() - platform-specific SWIOTLB setup method</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * Basic setup of page allocator is done in setup_arch():</span>
<span class="p_add">+ *  o paging_init() performs initialization of paging subsystem, in particular</span>
<span class="p_add">+ *    setup page tables (PGD, PMD, etc), kernel mapping, sparse memory segments</span>
<span class="p_add">+ *    if supported. It performs memory test if one is enabled. Finally it</span>
<span class="p_add">+ *    calculates memory zone limits and calls free_area_init_node()</span>
<span class="p_add">+ *    initializing pages memory maps, nodes, nodes free areas - basis of the</span>
<span class="p_add">+ *    buddy allocator.</span>
  *
  * At this stage the bootmem allocator is ready to use.
  *
  * NOTE: historically plat_mem_setup did the entire platform initialization.
<span class="p_del">- *	 This was rather impractical because it meant plat_mem_setup had to</span>
<span class="p_add">+ *       This was rather impractical because it meant plat_mem_setup had to</span>
  * get away without any kind of memory allocator.  To keep old code from
  * breaking plat_setup was just renamed to plat_mem_setup and a second platform
  * initialization hook for anything else was introduced.
<span class="p_add">+ * Additionally boot_mem_map structure used to keep base memory layout so</span>
<span class="p_add">+ * then ancient bootmem allocator would be properly initialized. Since memblock</span>
<span class="p_add">+ * allocator is used for early memory management now, the boot_mem_map is</span>
<span class="p_add">+ * conserved just for compatibility.</span>
<span class="p_add">+ */</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * MIPS early memory manager setup</span>
  */
<span class="p_del">-</span>
 static void __init arch_mem_init(char **cmdline_p)
 {
<span class="p_del">-	struct memblock_region *reg;</span>
<span class="p_del">-	extern void plat_mem_setup(void);</span>
<span class="p_del">-</span>
 	/* call board setup routine */
 	plat_mem_setup();
 
<span class="p_chunk">@@ -803,20 +855,17 @@</span> <span class="p_context"> static void __init arch_mem_init(char **cmdline_p)</span>
 	/* Sanity check the specified memory */
 	sanity_check_meminfo();
 
<span class="p_del">-	bootmem_init();</span>
<span class="p_add">+	/* Initialize memblock allocator */</span>
<span class="p_add">+	mips_bootmem_init();</span>
 
 	/* Print memory map initialized by arch-specific code and params */
 	print_memory_map();
 
<span class="p_add">+	/* Perform platform-specific device tree scanning */</span>
 	device_tree_init();
<span class="p_del">-	sparse_init();</span>
<span class="p_del">-	plat_swiotlb_setup();</span>
 
<span class="p_del">-	dma_contiguous_reserve(PFN_PHYS(max_low_pfn));</span>
<span class="p_del">-	/* Tell bootmem about cma reserved memblock section */</span>
<span class="p_del">-	for_each_memblock(reserved, reg)</span>
<span class="p_del">-		if (reg-&gt;size != 0)</span>
<span class="p_del">-			reserve_bootmem(reg-&gt;base, reg-&gt;size, BOOTMEM_DEFAULT);</span>
<span class="p_add">+	/* Perform platform-specific SWIOTLB setup */</span>
<span class="p_add">+	plat_swiotlb_setup();</span>
 }
 
 static void __init resource_init(void)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



