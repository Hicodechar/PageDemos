
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v6,01/11] mm: add MAP_HUGETLB support to vm_mmap - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v6,01/11] mm: add MAP_HUGETLB support to vm_mmap</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=173139">Tycho Andersen</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 7, 2017, 5:35 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170907173609.22696-2-tycho@docker.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9942609/mbox/"
   >mbox</a>
|
   <a href="/patch/9942609/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9942609/">/patch/9942609/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	E0F80600CB for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  7 Sep 2017 17:39:46 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D1D81285B7
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  7 Sep 2017 17:39:46 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id C619B2862B; Thu,  7 Sep 2017 17:39:46 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.5 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, RCVD_IN_DNSWL_HI,
	RCVD_IN_SORBS_SPAM autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4753A285B7
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  7 Sep 2017 17:39:46 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755827AbdIGRjo (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 7 Sep 2017 13:39:44 -0400
Received: from mail-io0-f182.google.com ([209.85.223.182]:38825 &quot;EHLO
	mail-io0-f182.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752987AbdIGRhE (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 7 Sep 2017 13:37:04 -0400
Received: by mail-io0-f182.google.com with SMTP id m98so15732ioo.5
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Thu, 07 Sep 2017 10:37:04 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=docker.com; s=google;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=uSIJLK5JrJe35DMUq1DY+zlDmHZ8FtlouBdKamnMos8=;
	b=T3EGuBy/RyZmec3XCe9P1exn/0m6u/Z9pCEAsFhJpCtjjDLyN89d4zcaZLemZcx0qc
	pDSAesDzkJrZ4k/BG/QvuYsNsurLNsnD6n16egA893HqPc/NzRqfzkHb7ZaU85sbggUJ
	IYNPbwDxCU6YPHM+tUcOUOq4m8ZucR8O7DURg=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=uSIJLK5JrJe35DMUq1DY+zlDmHZ8FtlouBdKamnMos8=;
	b=KalQ9iYMPLre+TiasW32GurS5gq8P6QmNajTO8DYho/E9SMwjycyfxZMUieLT+GcZ0
	0ZbOtM7y5ddZIMcVKbGVcNeJnBeKtNLwGE5nfUxxNjjaJ0SYoABlqzvnitKfyG47VHFY
	bPJDjD60T/Qodw2P1a3I4qwJUie53CNXXPE5Uu6nQmGSSBXMebBPJd+HiIBVhqppG+3S
	ZKWm9v/SZjzb7jAiGonEOZ1VVuRtyBPhhdldW1hJFaVfraP5balMqaof4bCseegZZ6RV
	n4HLx+GNmjA8LKqAfCd71oPDGA4hLcZx2ut5J05eT8UD0X2qzm+fUZKLDT2uSKuzOIG2
	gWDw==
X-Gm-Message-State: AHPjjUgq/mMGHu3sFMpRn55SkSv+RB7ZCNacd7E80VP3pKr8zZ2el2ix
	Iz1bLWWCGZVjvq4V9+GcWQ==
X-Google-Smtp-Source: AOwi7QB3O9DPK0Lb7qLeA36Yb+eLcMAulFOoIgL0QSKP0MAbsvTuMqTy1CjXa2QIHrfEX2zT71g7KQ==
X-Received: by 10.107.69.1 with SMTP id s1mr75923ioa.267.1504805823612;
	Thu, 07 Sep 2017 10:37:03 -0700 (PDT)
Received: from localhost.localdomain ([8.24.24.129])
	by smtp.gmail.com with ESMTPSA id
	t127sm94404iod.26.2017.09.07.10.37.02
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Thu, 07 Sep 2017 10:37:02 -0700 (PDT)
From: Tycho Andersen &lt;tycho@docker.com&gt;
To: linux-kernel@vger.kernel.org
Cc: linux-mm@kvack.org, kernel-hardening@lists.openwall.com,
	Marco Benatto &lt;marco.antonio.780@gmail.com&gt;,
	Juerg Haefliger &lt;juerg.haefliger@canonical.com&gt;,
	Tycho Andersen &lt;tycho@docker.com&gt;
Subject: [PATCH v6 01/11] mm: add MAP_HUGETLB support to vm_mmap
Date: Thu,  7 Sep 2017 11:35:59 -0600
Message-Id: &lt;20170907173609.22696-2-tycho@docker.com&gt;
X-Mailer: git-send-email 2.11.0
In-Reply-To: &lt;20170907173609.22696-1-tycho@docker.com&gt;
References: &lt;20170907173609.22696-1-tycho@docker.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=173139">Tycho Andersen</a> - Sept. 7, 2017, 5:35 p.m.</div>
<pre class="content">
vm_mmap is exported, which means kernel modules can use it. In particular,
for testing XPFO support, we want to use it with the MAP_HUGETLB flag, so
let&#39;s support it via vm_mmap.
<span class="signed-off-by">
Signed-off-by: Tycho Andersen &lt;tycho@docker.com&gt;</span>
<span class="tested-by">Tested-by: Marco Benatto &lt;marco.antonio.780@gmail.com&gt;</span>
---
 include/linux/mm.h |  2 ++
 mm/mmap.c          | 19 +------------------
 mm/util.c          | 32 ++++++++++++++++++++++++++++++++
 3 files changed, 35 insertions(+), 18 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=101">Christoph Hellwig</a> - Sept. 8, 2017, 7:42 a.m.</div>
<pre class="content">
On Thu, Sep 07, 2017 at 11:35:59AM -0600, Tycho Andersen wrote:
<span class="quote">&gt; vm_mmap is exported, which means kernel modules can use it. In particular,</span>
<span class="quote">&gt; for testing XPFO support, we want to use it with the MAP_HUGETLB flag, so</span>
<span class="quote">&gt; let&#39;s support it via vm_mmap.</span>
<span class="quote">
&gt;  	} else if (flags &amp; MAP_HUGETLB) {</span>
<span class="quote">&gt; +		file = map_hugetlb_setup(&amp;len, flags);</span>
<span class="quote">&gt;  		if (IS_ERR(file))</span>
<span class="quote">&gt;  			return PTR_ERR(file);</span>
<span class="quote">&gt;  	}</span>

It seems like you should remove this hunk entirely and make all
MAP_HUGETLB calls go through vm_mmap.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/linux/mm.h b/include/linux/mm.h</span>
<span class="p_header">index c1f6c95f3496..5dfe009adcb9 100644</span>
<span class="p_header">--- a/include/linux/mm.h</span>
<span class="p_header">+++ b/include/linux/mm.h</span>
<span class="p_chunk">@@ -2141,6 +2141,8 @@</span> <span class="p_context"> struct vm_unmapped_area_info {</span>
 extern unsigned long unmapped_area(struct vm_unmapped_area_info *info);
 extern unsigned long unmapped_area_topdown(struct vm_unmapped_area_info *info);
 
<span class="p_add">+struct file *map_hugetlb_setup(unsigned long *len, unsigned long flags);</span>
<span class="p_add">+</span>
 /*
  * Search for an unmapped address range.
  *
<span class="p_header">diff --git a/mm/mmap.c b/mm/mmap.c</span>
<span class="p_header">index f19efcf75418..f24fc14808e1 100644</span>
<span class="p_header">--- a/mm/mmap.c</span>
<span class="p_header">+++ b/mm/mmap.c</span>
<span class="p_chunk">@@ -1490,24 +1490,7 @@</span> <span class="p_context"> SYSCALL_DEFINE6(mmap_pgoff, unsigned long, addr, unsigned long, len,</span>
 		if (unlikely(flags &amp; MAP_HUGETLB &amp;&amp; !is_file_hugepages(file)))
 			goto out_fput;
 	} else if (flags &amp; MAP_HUGETLB) {
<span class="p_del">-		struct user_struct *user = NULL;</span>
<span class="p_del">-		struct hstate *hs;</span>
<span class="p_del">-</span>
<span class="p_del">-		hs = hstate_sizelog((flags &gt;&gt; MAP_HUGE_SHIFT) &amp; MAP_HUGE_MASK);</span>
<span class="p_del">-		if (!hs)</span>
<span class="p_del">-			return -EINVAL;</span>
<span class="p_del">-</span>
<span class="p_del">-		len = ALIGN(len, huge_page_size(hs));</span>
<span class="p_del">-		/*</span>
<span class="p_del">-		 * VM_NORESERVE is used because the reservations will be</span>
<span class="p_del">-		 * taken when vm_ops-&gt;mmap() is called</span>
<span class="p_del">-		 * A dummy user value is used because we are not locking</span>
<span class="p_del">-		 * memory so no accounting is necessary</span>
<span class="p_del">-		 */</span>
<span class="p_del">-		file = hugetlb_file_setup(HUGETLB_ANON_FILE, len,</span>
<span class="p_del">-				VM_NORESERVE,</span>
<span class="p_del">-				&amp;user, HUGETLB_ANONHUGE_INODE,</span>
<span class="p_del">-				(flags &gt;&gt; MAP_HUGE_SHIFT) &amp; MAP_HUGE_MASK);</span>
<span class="p_add">+		file = map_hugetlb_setup(&amp;len, flags);</span>
 		if (IS_ERR(file))
 			return PTR_ERR(file);
 	}
<span class="p_header">diff --git a/mm/util.c b/mm/util.c</span>
<span class="p_header">index 9ecddf568fe3..93c253512aaa 100644</span>
<span class="p_header">--- a/mm/util.c</span>
<span class="p_header">+++ b/mm/util.c</span>
<span class="p_chunk">@@ -340,6 +340,29 @@</span> <span class="p_context"> unsigned long vm_mmap_pgoff(struct file *file, unsigned long addr,</span>
 	return ret;
 }
 
<span class="p_add">+struct file *map_hugetlb_setup(unsigned long *len, unsigned long flags)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct user_struct *user = NULL;</span>
<span class="p_add">+	struct hstate *hs;</span>
<span class="p_add">+</span>
<span class="p_add">+	hs = hstate_sizelog((flags &gt;&gt; MAP_HUGE_SHIFT) &amp; MAP_HUGE_MASK);</span>
<span class="p_add">+	if (!hs)</span>
<span class="p_add">+		return ERR_PTR(-EINVAL);</span>
<span class="p_add">+</span>
<span class="p_add">+	*len = ALIGN(*len, huge_page_size(hs));</span>
<span class="p_add">+</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * VM_NORESERVE is used because the reservations will be</span>
<span class="p_add">+	 * taken when vm_ops-&gt;mmap() is called</span>
<span class="p_add">+	 * A dummy user value is used because we are not locking</span>
<span class="p_add">+	 * memory so no accounting is necessary</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	return hugetlb_file_setup(HUGETLB_ANON_FILE, *len,</span>
<span class="p_add">+			VM_NORESERVE,</span>
<span class="p_add">+			&amp;user, HUGETLB_ANONHUGE_INODE,</span>
<span class="p_add">+			(flags &gt;&gt; MAP_HUGE_SHIFT) &amp; MAP_HUGE_MASK);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 unsigned long vm_mmap(struct file *file, unsigned long addr,
 	unsigned long len, unsigned long prot,
 	unsigned long flag, unsigned long offset)
<span class="p_chunk">@@ -349,6 +372,15 @@</span> <span class="p_context"> unsigned long vm_mmap(struct file *file, unsigned long addr,</span>
 	if (unlikely(offset_in_page(offset)))
 		return -EINVAL;
 
<span class="p_add">+	if (flag &amp; MAP_HUGETLB) {</span>
<span class="p_add">+		if (file)</span>
<span class="p_add">+			return -EINVAL;</span>
<span class="p_add">+</span>
<span class="p_add">+		file = map_hugetlb_setup(&amp;len, flag);</span>
<span class="p_add">+		if (IS_ERR(file))</span>
<span class="p_add">+			return PTR_ERR(file);</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	return vm_mmap_pgoff(file, addr, len, prot, flag, offset &gt;&gt; PAGE_SHIFT);
 }
 EXPORT_SYMBOL(vm_mmap);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



