
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.4,102/105] Revert &quot;x86/efi: Hoist page table switching code into efi_call_virt()&quot; - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.4,102/105] Revert &quot;x86/efi: Hoist page table switching code into efi_call_virt()&quot;</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 15, 2017, 9:45 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171215092311.298959898@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10114465/mbox/"
   >mbox</a>
|
   <a href="/patch/10114465/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10114465/">/patch/10114465/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	90DAA60224 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 15 Dec 2017 09:50:40 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6E68829065
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 15 Dec 2017 09:50:40 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 630FD29160; Fri, 15 Dec 2017 09:50:40 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C208E29065
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 15 Dec 2017 09:50:39 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1756094AbdLOJug (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 15 Dec 2017 04:50:36 -0500
Received: from mail.linuxfoundation.org ([140.211.169.12]:35450 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932067AbdLOJuY (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 15 Dec 2017 04:50:24 -0500
Received: from localhost (LFbn-1-12262-44.w90-92.abo.wanadoo.fr
	[90.92.75.44])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id E722EB1E;
	Fri, 15 Dec 2017 09:50:19 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;, stable@vger.kernel.org,
	Ben Hutchings &lt;ben.hutchings@codethink.co.uk&gt;,
	Matt Fleming &lt;matt@codeblueprint.co.uk&gt;, Borislav Petkov &lt;bp@suse.de&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Andy Lutomirski &lt;luto@amacapital.net&gt;, Andy Lutomirski &lt;luto@kernel.org&gt;,
	Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt;,
	Borislav Petkov &lt;bp@alien8.de&gt;, Brian Gerst &lt;brgerst@gmail.com&gt;,
	Dave Jones &lt;davej@codemonkey.org.uk&gt;,
	Denys Vlasenko &lt;dvlasenk@redhat.com&gt;, &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Peter Zijlstra &lt;peterz@infradead.org&gt;,
	Sai Praneeth Prakhya &lt;sai.praneeth.prakhya@intel.com&gt;,
	Stephen Smalley &lt;sds@tycho.nsa.gov&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;,
	Toshi Kani &lt;toshi.kani@hp.com&gt;, linux-efi@vger.kernel.org,
	Ingo Molnar &lt;mingo@kernel.org&gt;, &quot;Ghannam, Yazen&quot; &lt;Yazen.Ghannam@amd.com&gt;
Subject: [PATCH 4.4 102/105] Revert &quot;x86/efi: Hoist page table switching
	code into efi_call_virt()&quot;
Date: Fri, 15 Dec 2017 10:45:40 +0100
Message-Id: &lt;20171215092311.298959898@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.15.1
In-Reply-To: &lt;20171215092305.994559179@linuxfoundation.org&gt;
References: &lt;20171215092305.994559179@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Dec. 15, 2017, 9:45 a.m.</div>
<pre class="content">
4.4-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>

This reverts commit b73adb60852034d84092d123b323196ca42529cd which is
commit c9f2a9a65e4855b74d92cdad688f6ee4a1a323ff upstream.

Turns there was too many other issues with this patch to make it viable
for the stable tree.

Reported-by: Ben Hutchings &lt;ben.hutchings@codethink.co.uk&gt;
Cc: Matt Fleming &lt;matt@codeblueprint.co.uk&gt;
Cc: Borislav Petkov &lt;bp@suse.de&gt;
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Andy Lutomirski &lt;luto@amacapital.net&gt;
Cc: Andy Lutomirski &lt;luto@kernel.org&gt;
Cc: Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt;
Cc: Borislav Petkov &lt;bp@alien8.de&gt;
Cc: Brian Gerst &lt;brgerst@gmail.com&gt;
Cc: Dave Jones &lt;davej@codemonkey.org.uk&gt;
Cc: Denys Vlasenko &lt;dvlasenk@redhat.com&gt;
Cc: H. Peter Anvin &lt;hpa@zytor.com&gt;
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: Sai Praneeth Prakhya &lt;sai.praneeth.prakhya@intel.com&gt;
Cc: Stephen Smalley &lt;sds@tycho.nsa.gov&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Cc: Toshi Kani &lt;toshi.kani@hp.com&gt;
Cc: linux-efi@vger.kernel.org
Cc: Ingo Molnar &lt;mingo@kernel.org&gt;
Cc: &quot;Ghannam, Yazen&quot; &lt;Yazen.Ghannam@amd.com&gt;
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>
---
 arch/x86/include/asm/efi.h          |   25 --------------------
 arch/x86/platform/efi/efi_64.c      |   24 ++++++++++----------
 arch/x86/platform/efi/efi_stub_64.S |   43 ++++++++++++++++++++++++++++++++++++
 3 files changed, 56 insertions(+), 36 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/x86/include/asm/efi.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/efi.h</span>
<span class="p_chunk">@@ -3,7 +3,6 @@</span> <span class="p_context"></span>
 
 #include &lt;asm/fpu/api.h&gt;
 #include &lt;asm/pgtable.h&gt;
<span class="p_del">-#include &lt;asm/tlb.h&gt;</span>
 
 /*
  * We map the EFI regions needed for runtime services non-contiguously,
<span class="p_chunk">@@ -65,17 +64,6 @@</span> <span class="p_context"> extern u64 asmlinkage efi_call(void *fp,</span>
 
 #define efi_call_phys(f, args...)		efi_call((f), args)
 
<span class="p_del">-/*</span>
<span class="p_del">- * Scratch space used for switching the pagetable in the EFI stub</span>
<span class="p_del">- */</span>
<span class="p_del">-struct efi_scratch {</span>
<span class="p_del">-	u64	r15;</span>
<span class="p_del">-	u64	prev_cr3;</span>
<span class="p_del">-	pgd_t	*efi_pgt;</span>
<span class="p_del">-	bool	use_pgd;</span>
<span class="p_del">-	u64	phys_stack;</span>
<span class="p_del">-} __packed;</span>
<span class="p_del">-</span>
 #define efi_call_virt(f, ...)						\
 ({									\
 	efi_status_t __s;						\
<span class="p_chunk">@@ -83,20 +71,7 @@</span> <span class="p_context"> struct efi_scratch {</span>
 	efi_sync_low_kernel_mappings();					\
 	preempt_disable();						\
 	__kernel_fpu_begin();						\
<span class="p_del">-									\</span>
<span class="p_del">-	if (efi_scratch.use_pgd) {					\</span>
<span class="p_del">-		efi_scratch.prev_cr3 = read_cr3();			\</span>
<span class="p_del">-		write_cr3((unsigned long)efi_scratch.efi_pgt);		\</span>
<span class="p_del">-		__flush_tlb_all();					\</span>
<span class="p_del">-	}								\</span>
<span class="p_del">-									\</span>
 	__s = efi_call((void *)efi.systab-&gt;runtime-&gt;f, __VA_ARGS__);	\
<span class="p_del">-									\</span>
<span class="p_del">-	if (efi_scratch.use_pgd) {					\</span>
<span class="p_del">-		write_cr3(efi_scratch.prev_cr3);			\</span>
<span class="p_del">-		__flush_tlb_all();					\</span>
<span class="p_del">-	}								\</span>
<span class="p_del">-									\</span>
 	__kernel_fpu_end();						\
 	preempt_enable();						\
 	__s;								\
<span class="p_header">--- a/arch/x86/platform/efi/efi_64.c</span>
<span class="p_header">+++ b/arch/x86/platform/efi/efi_64.c</span>
<span class="p_chunk">@@ -47,7 +47,16 @@</span> <span class="p_context"></span>
  */
 static u64 efi_va = EFI_VA_START;
 
<span class="p_del">-struct efi_scratch efi_scratch;</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Scratch space used for switching the pagetable in the EFI stub</span>
<span class="p_add">+ */</span>
<span class="p_add">+struct efi_scratch {</span>
<span class="p_add">+	u64 r15;</span>
<span class="p_add">+	u64 prev_cr3;</span>
<span class="p_add">+	pgd_t *efi_pgt;</span>
<span class="p_add">+	bool use_pgd;</span>
<span class="p_add">+	u64 phys_stack;</span>
<span class="p_add">+} __packed;</span>
 
 static void __init early_code_mapping_set_exec(int executable)
 {
<span class="p_chunk">@@ -74,11 +83,8 @@</span> <span class="p_context"> pgd_t * __init efi_call_phys_prolog(void</span>
 	int pgd;
 	int n_pgds;
 
<span class="p_del">-	if (!efi_enabled(EFI_OLD_MEMMAP)) {</span>
<span class="p_del">-		save_pgd = (pgd_t *)read_cr3();</span>
<span class="p_del">-		write_cr3((unsigned long)efi_scratch.efi_pgt);</span>
<span class="p_del">-		goto out;</span>
<span class="p_del">-	}</span>
<span class="p_add">+	if (!efi_enabled(EFI_OLD_MEMMAP))</span>
<span class="p_add">+		return NULL;</span>
 
 	early_code_mapping_set_exec(1);
 
<span class="p_chunk">@@ -90,7 +96,6 @@</span> <span class="p_context"> pgd_t * __init efi_call_phys_prolog(void</span>
 		vaddress = (unsigned long)__va(pgd * PGDIR_SIZE);
 		set_pgd(pgd_offset_k(pgd * PGDIR_SIZE), *pgd_offset_k(vaddress));
 	}
<span class="p_del">-out:</span>
 	__flush_tlb_all();
 
 	return save_pgd;
<span class="p_chunk">@@ -104,11 +109,8 @@</span> <span class="p_context"> void __init efi_call_phys_epilog(pgd_t *</span>
 	int pgd_idx;
 	int nr_pgds;
 
<span class="p_del">-	if (!efi_enabled(EFI_OLD_MEMMAP)) {</span>
<span class="p_del">-		write_cr3((unsigned long)save_pgd);</span>
<span class="p_del">-		__flush_tlb_all();</span>
<span class="p_add">+	if (!save_pgd)</span>
 		return;
<span class="p_del">-	}</span>
 
 	nr_pgds = DIV_ROUND_UP((max_pfn &lt;&lt; PAGE_SHIFT) , PGDIR_SIZE);
 
<span class="p_header">--- a/arch/x86/platform/efi/efi_stub_64.S</span>
<span class="p_header">+++ b/arch/x86/platform/efi/efi_stub_64.S</span>
<span class="p_chunk">@@ -38,6 +38,41 @@</span> <span class="p_context"></span>
 	mov %rsi, %cr0;			\
 	mov (%rsp), %rsp
 
<span class="p_add">+	/* stolen from gcc */</span>
<span class="p_add">+	.macro FLUSH_TLB_ALL</span>
<span class="p_add">+	movq %r15, efi_scratch(%rip)</span>
<span class="p_add">+	movq %r14, efi_scratch+8(%rip)</span>
<span class="p_add">+	movq %cr4, %r15</span>
<span class="p_add">+	movq %r15, %r14</span>
<span class="p_add">+	andb $0x7f, %r14b</span>
<span class="p_add">+	movq %r14, %cr4</span>
<span class="p_add">+	movq %r15, %cr4</span>
<span class="p_add">+	movq efi_scratch+8(%rip), %r14</span>
<span class="p_add">+	movq efi_scratch(%rip), %r15</span>
<span class="p_add">+	.endm</span>
<span class="p_add">+</span>
<span class="p_add">+	.macro SWITCH_PGT</span>
<span class="p_add">+	cmpb $0, efi_scratch+24(%rip)</span>
<span class="p_add">+	je 1f</span>
<span class="p_add">+	movq %r15, efi_scratch(%rip)		# r15</span>
<span class="p_add">+	# save previous CR3</span>
<span class="p_add">+	movq %cr3, %r15</span>
<span class="p_add">+	movq %r15, efi_scratch+8(%rip)		# prev_cr3</span>
<span class="p_add">+	movq efi_scratch+16(%rip), %r15		# EFI pgt</span>
<span class="p_add">+	movq %r15, %cr3</span>
<span class="p_add">+	1:</span>
<span class="p_add">+	.endm</span>
<span class="p_add">+</span>
<span class="p_add">+	.macro RESTORE_PGT</span>
<span class="p_add">+	cmpb $0, efi_scratch+24(%rip)</span>
<span class="p_add">+	je 2f</span>
<span class="p_add">+	movq efi_scratch+8(%rip), %r15</span>
<span class="p_add">+	movq %r15, %cr3</span>
<span class="p_add">+	movq efi_scratch(%rip), %r15</span>
<span class="p_add">+	FLUSH_TLB_ALL</span>
<span class="p_add">+	2:</span>
<span class="p_add">+	.endm</span>
<span class="p_add">+</span>
 ENTRY(efi_call)
 	SAVE_XMM
 	mov (%rsp), %rax
<span class="p_chunk">@@ -48,8 +83,16 @@</span> <span class="p_context"> ENTRY(efi_call)</span>
 	mov %r8, %r9
 	mov %rcx, %r8
 	mov %rsi, %rcx
<span class="p_add">+	SWITCH_PGT</span>
 	call *%rdi
<span class="p_add">+	RESTORE_PGT</span>
 	addq $48, %rsp
 	RESTORE_XMM
 	ret
 ENDPROC(efi_call)
<span class="p_add">+</span>
<span class="p_add">+	.data</span>
<span class="p_add">+ENTRY(efi_scratch)</span>
<span class="p_add">+	.fill 3,8,0</span>
<span class="p_add">+	.byte 0</span>
<span class="p_add">+	.quad 0</span>

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



