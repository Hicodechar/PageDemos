
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,1/2] mm/hugetlb.c: add hstate parameter to huge_pte_offset() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,1/2] mm/hugetlb.c: add hstate parameter to huge_pte_offset()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=58591">Punit Agrawal</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 23, 2017, 12:58 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170323125823.429-2-punit.agrawal@arm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9641011/mbox/"
   >mbox</a>
|
   <a href="/patch/9641011/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9641011/">/patch/9641011/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	368B0602CA for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 23 Mar 2017 12:59:00 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 2839828304
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 23 Mar 2017 12:59:00 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 1C7EF28497; Thu, 23 Mar 2017 12:59:00 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1FBC828304
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 23 Mar 2017 12:58:59 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S933883AbdCWM6w (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 23 Mar 2017 08:58:52 -0400
Received: from foss.arm.com ([217.140.101.70]:55984 &quot;EHLO foss.arm.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S932136AbdCWM6v (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 23 Mar 2017 08:58:51 -0400
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
	by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id EA3ED344;
	Thu, 23 Mar 2017 05:58:49 -0700 (PDT)
Received: from localhost (e105922-lin.cambridge.arm.com [10.1.195.42])
	by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id
	3D1CE3F575; Thu, 23 Mar 2017 05:58:48 -0700 (PDT)
From: Punit Agrawal &lt;punit.agrawal@arm.com&gt;
To: linux-mm@kvack.org
Cc: linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
	Punit Agrawal &lt;punit.agrawal@arm.com&gt;,
	Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Tyler Baicar &lt;tbaicar@codeaurora.org&gt;
Subject: [RFC PATCH 1/2] mm/hugetlb.c: add hstate parameter to
	huge_pte_offset()
Date: Thu, 23 Mar 2017 12:58:22 +0000
Message-Id: &lt;20170323125823.429-2-punit.agrawal@arm.com&gt;
X-Mailer: git-send-email 2.11.0
In-Reply-To: &lt;20170323125823.429-1-punit.agrawal@arm.com&gt;
References: &lt;20170323125823.429-1-punit.agrawal@arm.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=58591">Punit Agrawal</a> - March 23, 2017, 12:58 p.m.</div>
<pre class="content">
A poisoned or migrated hugepage is stored as a swap entry in the page
tables. On architectures that support hugepages consisting of contiguous
page table entries (such as on arm64) this leads to ambiguity in
determining the right page table entry to return in huge_pte_offset()
when a poisoned entry is encountered.

Let&#39;s remove the ambiguity by adding a hstate parameter to convey
additional information about the requested address. Also fixup the
definition/usage of huge_pte_offset() throughout the tree.
<span class="signed-off-by">
Signed-off-by: Punit Agrawal &lt;punit.agrawal@arm.com&gt;</span>
---
 arch/arm64/mm/hugetlbpage.c   |  2 +-
 arch/ia64/mm/hugetlbpage.c    |  4 ++--
 arch/metag/mm/hugetlbpage.c   |  2 +-
 arch/mips/mm/hugetlbpage.c    |  2 +-
 arch/parisc/mm/hugetlbpage.c  |  2 +-
 arch/powerpc/mm/hugetlbpage.c |  2 +-
 arch/s390/mm/hugetlbpage.c    |  2 +-
 arch/sh/mm/hugetlbpage.c      |  2 +-
 arch/sparc/mm/hugetlbpage.c   |  2 +-
 arch/tile/mm/hugetlbpage.c    |  2 +-
 arch/x86/mm/hugetlbpage.c     |  2 +-
 fs/userfaultfd.c              |  7 +++++--
 include/linux/hugetlb.h       |  2 +-
 mm/hugetlb.c                  | 18 +++++++++---------
 mm/page_vma_mapped.c          |  2 +-
 mm/pagewalk.c                 |  2 +-
 16 files changed, 29 insertions(+), 26 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/mm/hugetlbpage.c b/arch/arm64/mm/hugetlbpage.c</span>
<span class="p_header">index e2106932daa0..75d8cc3e138b 100644</span>
<span class="p_header">--- a/arch/arm64/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/arm64/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -189,7 +189,7 @@</span> <span class="p_context"> pte_t *huge_pte_alloc(struct mm_struct *mm,</span>
 	return pte;
 }
 
<span class="p_del">-pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr)</span>
<span class="p_add">+pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr, struct hstate *h)</span>
 {
 	pgd_t *pgd;
 	pud_t *pud;
<span class="p_header">diff --git a/arch/ia64/mm/hugetlbpage.c b/arch/ia64/mm/hugetlbpage.c</span>
<span class="p_header">index 85de86d36fdf..09c865be3cfe 100644</span>
<span class="p_header">--- a/arch/ia64/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/ia64/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -44,7 +44,7 @@</span> <span class="p_context"> huge_pte_alloc(struct mm_struct *mm, unsigned long addr, unsigned long sz)</span>
 }
 
 pte_t *
<span class="p_del">-huge_pte_offset (struct mm_struct *mm, unsigned long addr)</span>
<span class="p_add">+huge_pte_offset (struct mm_struct *mm, unsigned long addr, struct hstate *h)</span>
 {
 	unsigned long taddr = htlbpage_to_page(addr);
 	pgd_t *pgd;
<span class="p_chunk">@@ -92,7 +92,7 @@</span> <span class="p_context"> struct page *follow_huge_addr(struct mm_struct *mm, unsigned long addr, int writ</span>
 	if (REGION_NUMBER(addr) != RGN_HPAGE)
 		return ERR_PTR(-EINVAL);
 
<span class="p_del">-	ptep = huge_pte_offset(mm, addr);</span>
<span class="p_add">+	ptep = huge_pte_offset(mm, addr, size_to_hstate(HPAGE_SIZE));</span>
 	if (!ptep || pte_none(*ptep))
 		return NULL;
 	page = pte_page(*ptep);
<span class="p_header">diff --git a/arch/metag/mm/hugetlbpage.c b/arch/metag/mm/hugetlbpage.c</span>
<span class="p_header">index db1b7da91e4f..2c3b34189d29 100644</span>
<span class="p_header">--- a/arch/metag/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/metag/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -74,7 +74,7 @@</span> <span class="p_context"> pte_t *huge_pte_alloc(struct mm_struct *mm,</span>
 	return pte;
 }
 
<span class="p_del">-pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr)</span>
<span class="p_add">+pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr, struct hstate *h)</span>
 {
 	pgd_t *pgd;
 	pud_t *pud;
<span class="p_header">diff --git a/arch/mips/mm/hugetlbpage.c b/arch/mips/mm/hugetlbpage.c</span>
<span class="p_header">index 74aa6f62468f..e66f47074ea4 100644</span>
<span class="p_header">--- a/arch/mips/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/mips/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -36,7 +36,7 @@</span> <span class="p_context"> pte_t *huge_pte_alloc(struct mm_struct *mm, unsigned long addr,</span>
 	return pte;
 }
 
<span class="p_del">-pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr)</span>
<span class="p_add">+pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr, struct hstate *h)</span>
 {
 	pgd_t *pgd;
 	pud_t *pud;
<span class="p_header">diff --git a/arch/parisc/mm/hugetlbpage.c b/arch/parisc/mm/hugetlbpage.c</span>
<span class="p_header">index aa50ac090e9b..c146ee7d80c7 100644</span>
<span class="p_header">--- a/arch/parisc/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/parisc/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -69,7 +69,7 @@</span> <span class="p_context"> pte_t *huge_pte_alloc(struct mm_struct *mm,</span>
 	return pte;
 }
 
<span class="p_del">-pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr)</span>
<span class="p_add">+pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr, struct hstate *h)</span>
 {
 	pgd_t *pgd;
 	pud_t *pud;
<span class="p_header">diff --git a/arch/powerpc/mm/hugetlbpage.c b/arch/powerpc/mm/hugetlbpage.c</span>
<span class="p_header">index 8c3389cbcd12..9fddb22c60d9 100644</span>
<span class="p_header">--- a/arch/powerpc/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/powerpc/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -55,7 +55,7 @@</span> <span class="p_context"> static unsigned nr_gpages;</span>
 
 #define hugepd_none(hpd)	(hpd_val(hpd) == 0)
 
<span class="p_del">-pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr)</span>
<span class="p_add">+pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr, struct hstate *h)</span>
 {
 	/* Only called for hugetlbfs pages, hence can ignore THP */
 	return __find_linux_pte_or_hugepte(mm-&gt;pgd, addr, NULL, NULL);
<span class="p_header">diff --git a/arch/s390/mm/hugetlbpage.c b/arch/s390/mm/hugetlbpage.c</span>
<span class="p_header">index 9b4050caa4e9..63061fcb0560 100644</span>
<span class="p_header">--- a/arch/s390/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/s390/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -176,7 +176,7 @@</span> <span class="p_context"> pte_t *huge_pte_alloc(struct mm_struct *mm,</span>
 	return (pte_t *) pmdp;
 }
 
<span class="p_del">-pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr)</span>
<span class="p_add">+pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr, struct hstate *h)</span>
 {
 	pgd_t *pgdp;
 	pud_t *pudp;
<span class="p_header">diff --git a/arch/sh/mm/hugetlbpage.c b/arch/sh/mm/hugetlbpage.c</span>
<span class="p_header">index cc948db74878..94a2625b2ead 100644</span>
<span class="p_header">--- a/arch/sh/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/sh/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -42,7 +42,7 @@</span> <span class="p_context"> pte_t *huge_pte_alloc(struct mm_struct *mm,</span>
 	return pte;
 }
 
<span class="p_del">-pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr)</span>
<span class="p_add">+pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr, struct hstate *h)</span>
 {
 	pgd_t *pgd;
 	pud_t *pud;
<span class="p_header">diff --git a/arch/sparc/mm/hugetlbpage.c b/arch/sparc/mm/hugetlbpage.c</span>
<span class="p_header">index 323bc6b6e3ad..76834a44a767 100644</span>
<span class="p_header">--- a/arch/sparc/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/sparc/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -270,7 +270,7 @@</span> <span class="p_context"> pte_t *huge_pte_alloc(struct mm_struct *mm,</span>
 	return pte;
 }
 
<span class="p_del">-pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr)</span>
<span class="p_add">+pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr, struct hstate *h)</span>
 {
 	pgd_t *pgd;
 	pud_t *pud;
<span class="p_header">diff --git a/arch/tile/mm/hugetlbpage.c b/arch/tile/mm/hugetlbpage.c</span>
<span class="p_header">index cb10153b5c9f..dc434a64175d 100644</span>
<span class="p_header">--- a/arch/tile/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/tile/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -102,7 +102,7 @@</span> <span class="p_context"> static pte_t *get_pte(pte_t *base, int index, int level)</span>
 	return ptep;
 }
 
<span class="p_del">-pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr)</span>
<span class="p_add">+pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr, struct hstate *h)</span>
 {
 	pgd_t *pgd;
 	pud_t *pud;
<span class="p_header">diff --git a/arch/x86/mm/hugetlbpage.c b/arch/x86/mm/hugetlbpage.c</span>
<span class="p_header">index c5066a260803..49d469fd4f07 100644</span>
<span class="p_header">--- a/arch/x86/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/x86/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -31,7 +31,7 @@</span> <span class="p_context"> follow_huge_addr(struct mm_struct *mm, unsigned long address, int write)</span>
 	if (!vma || !is_vm_hugetlb_page(vma))
 		return ERR_PTR(-EINVAL);
 
<span class="p_del">-	pte = huge_pte_offset(mm, address);</span>
<span class="p_add">+	pte = huge_pte_offset(mm, address, hstate_vma(vma));</span>
 
 	/* hugetlb should be locked, and hence, prefaulted */
 	WARN_ON(!pte || pte_none(*pte));
<span class="p_header">diff --git a/fs/userfaultfd.c b/fs/userfaultfd.c</span>
<span class="p_header">index 1d227b0fcf49..dabbf6e408d1 100644</span>
<span class="p_header">--- a/fs/userfaultfd.c</span>
<span class="p_header">+++ b/fs/userfaultfd.c</span>
<span class="p_chunk">@@ -214,6 +214,7 @@</span> <span class="p_context"> static inline struct uffd_msg userfault_msg(unsigned long address,</span>
  * hugepmd ranges.
  */
 static inline bool userfaultfd_huge_must_wait(struct userfaultfd_ctx *ctx,
<span class="p_add">+					 struct vm_area_struct *vma,</span>
 					 unsigned long address,
 					 unsigned long flags,
 					 unsigned long reason)
<span class="p_chunk">@@ -224,7 +225,7 @@</span> <span class="p_context"> static inline bool userfaultfd_huge_must_wait(struct userfaultfd_ctx *ctx,</span>
 
 	VM_BUG_ON(!rwsem_is_locked(&amp;mm-&gt;mmap_sem));
 
<span class="p_del">-	pte = huge_pte_offset(mm, address);</span>
<span class="p_add">+	pte = huge_pte_offset(mm, address, hstate_vma(vma));</span>
 	if (!pte)
 		goto out;
 
<span class="p_chunk">@@ -243,6 +244,7 @@</span> <span class="p_context"> static inline bool userfaultfd_huge_must_wait(struct userfaultfd_ctx *ctx,</span>
 }
 #else
 static inline bool userfaultfd_huge_must_wait(struct userfaultfd_ctx *ctx,
<span class="p_add">+					 struct vm_area_struct *vma,</span>
 					 unsigned long address,
 					 unsigned long flags,
 					 unsigned long reason)
<span class="p_chunk">@@ -435,7 +437,8 @@</span> <span class="p_context"> int handle_userfault(struct vm_fault *vmf, unsigned long reason)</span>
 		must_wait = userfaultfd_must_wait(ctx, vmf-&gt;address, vmf-&gt;flags,
 						  reason);
 	else
<span class="p_del">-		must_wait = userfaultfd_huge_must_wait(ctx, vmf-&gt;address,</span>
<span class="p_add">+		must_wait = userfaultfd_huge_must_wait(ctx, vmf-&gt;vma,</span>
<span class="p_add">+						       vmf-&gt;address,</span>
 						       vmf-&gt;flags, reason);
 	up_read(&amp;mm-&gt;mmap_sem);
 
<span class="p_header">diff --git a/include/linux/hugetlb.h b/include/linux/hugetlb.h</span>
<span class="p_header">index b857fc8cc2ec..f374dd4eed5b 100644</span>
<span class="p_header">--- a/include/linux/hugetlb.h</span>
<span class="p_header">+++ b/include/linux/hugetlb.h</span>
<span class="p_chunk">@@ -113,7 +113,7 @@</span> <span class="p_context"> extern struct list_head huge_boot_pages;</span>
 
 pte_t *huge_pte_alloc(struct mm_struct *mm,
 			unsigned long addr, unsigned long sz);
<span class="p_del">-pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr);</span>
<span class="p_add">+pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr, struct hstate *h);</span>
 int huge_pmd_unshare(struct mm_struct *mm, unsigned long *addr, pte_t *ptep);
 struct page *follow_huge_addr(struct mm_struct *mm, unsigned long address,
 			      int write);
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 3d0aab9ee80d..5bd16c2ff67a 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -3233,7 +3233,7 @@</span> <span class="p_context"> int copy_hugetlb_page_range(struct mm_struct *dst, struct mm_struct *src,</span>
 
 	for (addr = vma-&gt;vm_start; addr &lt; vma-&gt;vm_end; addr += sz) {
 		spinlock_t *src_ptl, *dst_ptl;
<span class="p_del">-		src_pte = huge_pte_offset(src, addr);</span>
<span class="p_add">+		src_pte = huge_pte_offset(src, addr, h);</span>
 		if (!src_pte)
 			continue;
 		dst_pte = huge_pte_alloc(dst, addr, sz);
<span class="p_chunk">@@ -3317,7 +3317,7 @@</span> <span class="p_context"> void __unmap_hugepage_range(struct mmu_gather *tlb, struct vm_area_struct *vma,</span>
 	mmu_notifier_invalidate_range_start(mm, mmun_start, mmun_end);
 	address = start;
 	for (; address &lt; end; address += sz) {
<span class="p_del">-		ptep = huge_pte_offset(mm, address);</span>
<span class="p_add">+		ptep = huge_pte_offset(mm, address, h);</span>
 		if (!ptep)
 			continue;
 
<span class="p_chunk">@@ -3535,7 +3535,7 @@</span> <span class="p_context"> static int hugetlb_cow(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 			unmap_ref_private(mm, vma, old_page, address);
 			BUG_ON(huge_pte_none(pte));
 			spin_lock(ptl);
<span class="p_del">-			ptep = huge_pte_offset(mm, address &amp; huge_page_mask(h));</span>
<span class="p_add">+			ptep = huge_pte_offset(mm, address &amp; huge_page_mask(h), h);</span>
 			if (likely(ptep &amp;&amp;
 				   pte_same(huge_ptep_get(ptep), pte)))
 				goto retry_avoidcopy;
<span class="p_chunk">@@ -3574,7 +3574,7 @@</span> <span class="p_context"> static int hugetlb_cow(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 	 * before the page tables are altered
 	 */
 	spin_lock(ptl);
<span class="p_del">-	ptep = huge_pte_offset(mm, address &amp; huge_page_mask(h));</span>
<span class="p_add">+	ptep = huge_pte_offset(mm, address &amp; huge_page_mask(h), h);</span>
 	if (likely(ptep &amp;&amp; pte_same(huge_ptep_get(ptep), pte))) {
 		ClearPagePrivate(new_page);
 
<span class="p_chunk">@@ -3861,7 +3861,7 @@</span> <span class="p_context"> int hugetlb_fault(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 
 	address &amp;= huge_page_mask(h);
 
<span class="p_del">-	ptep = huge_pte_offset(mm, address);</span>
<span class="p_add">+	ptep = huge_pte_offset(mm, address, h);</span>
 	if (ptep) {
 		entry = huge_ptep_get(ptep);
 		if (unlikely(is_hugetlb_entry_migration(entry))) {
<span class="p_chunk">@@ -4118,7 +4118,7 @@</span> <span class="p_context"> long follow_hugetlb_page(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 		 *
 		 * Note that page table lock is not held when pte is null.
 		 */
<span class="p_del">-		pte = huge_pte_offset(mm, vaddr &amp; huge_page_mask(h));</span>
<span class="p_add">+		pte = huge_pte_offset(mm, vaddr &amp; huge_page_mask(h), h);</span>
 		if (pte)
 			ptl = huge_pte_lock(h, mm, pte);
 		absent = !pte || huge_pte_none(huge_ptep_get(pte));
<span class="p_chunk">@@ -4252,7 +4252,7 @@</span> <span class="p_context"> unsigned long hugetlb_change_protection(struct vm_area_struct *vma,</span>
 	i_mmap_lock_write(vma-&gt;vm_file-&gt;f_mapping);
 	for (; address &lt; end; address += huge_page_size(h)) {
 		spinlock_t *ptl;
<span class="p_del">-		ptep = huge_pte_offset(mm, address);</span>
<span class="p_add">+		ptep = huge_pte_offset(mm, address, h);</span>
 		if (!ptep)
 			continue;
 		ptl = huge_pte_lock(h, mm, ptep);
<span class="p_chunk">@@ -4514,7 +4514,7 @@</span> <span class="p_context"> pte_t *huge_pmd_share(struct mm_struct *mm, unsigned long addr, pud_t *pud)</span>
 
 		saddr = page_table_shareable(svma, vma, addr, idx);
 		if (saddr) {
<span class="p_del">-			spte = huge_pte_offset(svma-&gt;vm_mm, saddr);</span>
<span class="p_add">+			spte = huge_pte_offset(svma-&gt;vm_mm, saddr, hstate_vma(svma));</span>
 			if (spte) {
 				get_page(virt_to_page(spte));
 				break;
<span class="p_chunk">@@ -4610,7 +4610,7 @@</span> <span class="p_context"> pte_t *huge_pte_alloc(struct mm_struct *mm,</span>
 	return pte;
 }
 
<span class="p_del">-pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr)</span>
<span class="p_add">+pte_t *huge_pte_offset(struct mm_struct *mm, unsigned long addr, struct hstate *h)</span>
 {
 	pgd_t *pgd;
 	p4d_t *p4d;
<span class="p_header">diff --git a/mm/page_vma_mapped.c b/mm/page_vma_mapped.c</span>
<span class="p_header">index c4c9def8ffea..566d474dbdc0 100644</span>
<span class="p_header">--- a/mm/page_vma_mapped.c</span>
<span class="p_header">+++ b/mm/page_vma_mapped.c</span>
<span class="p_chunk">@@ -120,7 +120,7 @@</span> <span class="p_context"> bool page_vma_mapped_walk(struct page_vma_mapped_walk *pvmw)</span>
 
 	if (unlikely(PageHuge(pvmw-&gt;page))) {
 		/* when pud is not present, pte will be NULL */
<span class="p_del">-		pvmw-&gt;pte = huge_pte_offset(mm, pvmw-&gt;address);</span>
<span class="p_add">+		pvmw-&gt;pte = huge_pte_offset(mm, pvmw-&gt;address, page_hstate(page));</span>
 		if (!pvmw-&gt;pte)
 			return false;
 
<span class="p_header">diff --git a/mm/pagewalk.c b/mm/pagewalk.c</span>
<span class="p_header">index 60f7856e508f..8805b68d353c 100644</span>
<span class="p_header">--- a/mm/pagewalk.c</span>
<span class="p_header">+++ b/mm/pagewalk.c</span>
<span class="p_chunk">@@ -185,7 +185,7 @@</span> <span class="p_context"> static int walk_hugetlb_range(unsigned long addr, unsigned long end,</span>
 
 	do {
 		next = hugetlb_entry_end(h, addr, end);
<span class="p_del">-		pte = huge_pte_offset(walk-&gt;mm, addr &amp; hmask);</span>
<span class="p_add">+		pte = huge_pte_offset(walk-&gt;mm, addr &amp; hmask, h);</span>
 		if (pte &amp;&amp; walk-&gt;hugetlb_entry)
 			err = walk-&gt;hugetlb_entry(pte, hmask, addr, next, walk);
 		if (err)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



