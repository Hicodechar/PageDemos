
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[01/13] x86/efi: Clean up efi CR3 save/restore - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [01/13] x86/efi: Clean up efi CR3 save/restore</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=66681">Ard Biesheuvel</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 2, 2017, 1:51 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170602135207.21708-2-ard.biesheuvel@linaro.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9762541/mbox/"
   >mbox</a>
|
   <a href="/patch/9762541/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9762541/">/patch/9762541/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	9CBAC60365 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  2 Jun 2017 13:57:46 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 8D7292843B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  2 Jun 2017 13:57:46 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 805032852A; Fri,  2 Jun 2017 13:57:46 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id DB2342843B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  2 Jun 2017 13:57:45 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751448AbdFBNys (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 2 Jun 2017 09:54:48 -0400
Received: from mail-wm0-f50.google.com ([74.125.82.50]:38430 &quot;EHLO
	mail-wm0-f50.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751125AbdFBNyp (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 2 Jun 2017 09:54:45 -0400
Received: by mail-wm0-f50.google.com with SMTP id n195so27626103wmg.1
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Fri, 02 Jun 2017 06:54:44 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=7OLj7Up4KJ5hHvntdum+L4A4rVuiVL1LxI7wkpXr2PU=;
	b=MoAYfnGbautzlZEy4CYgX0aRICYUxllZXweBTdOLWF+BClxzJkdZ38popxXOtyafFT
	0cxJTpXpZIP9+DcbYR/e3cilsoH+awlaWBJp6wqvnmW5ihyAwNrPupi7rV5PDFd6Froo
	kl+bbV7rVK+8i+vce4M75ubDK79l+f8k8ENHo=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=7OLj7Up4KJ5hHvntdum+L4A4rVuiVL1LxI7wkpXr2PU=;
	b=Bdkt0uoLL0hsZekHDNEosB2pNBKLfDQA7PJNtwbWjHzLQDzwnfacHzlTLgbQ4kImsj
	L0Tb/9UYyrqyGAtdbaoVDgV7yN3YQTf4SDtYymJJZPlDfVX+lrsqQiT/FToyHPsW2nFu
	kZBp6VGAjDOGzui5H0GlXnP+XZV1qmxj5RKEkVriM3/Z06Fv83HyxdeBTYTw9qGp8oB6
	nFHQTdL/NrHcbrmFI2eWzuVPq1MGixWmVQycdTCR55rvEUxVe6cchU/WJoiXsUfhzubz
	pLtzqV+mWhex1moFtNy0/1GfCKD5v9YlTos1NzC5TbSAG13crzHSZDw+0IZ23fWfMhMO
	0bKw==
X-Gm-Message-State: AODbwcCg7LNEqNn/o/ZFfSJmj0VjqegN1TFVdt9lFCrKw4621KhUQO6M
	yznTgv3BlWOYJNKf
X-Received: by 10.80.149.209 with SMTP id x17mr6047493eda.175.1496411683361; 
	Fri, 02 Jun 2017 06:54:43 -0700 (PDT)
Received: from localhost.localdomain ([105.151.155.95])
	by smtp.gmail.com with ESMTPSA id
	g48sm9756076edc.8.2017.06.02.06.54.40
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Fri, 02 Jun 2017 06:54:42 -0700 (PDT)
From: Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt;
To: linux-efi@vger.kernel.org, Ingo Molnar &lt;mingo@kernel.org&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;, &quot;H . Peter Anvin&quot; &lt;hpa@zytor.com&gt;
Cc: Andy Lutomirski &lt;luto@kernel.org&gt;,
	Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt;,
	linux-kernel@vger.kernel.org, Borislav Petkov &lt;bp@alien8.de&gt;,
	Andy Lutomirski &lt;luto@amacapital.net&gt;,
	Matt Fleming &lt;matt@codeblueprint.co.uk&gt;
Subject: [PATCH 01/13] x86/efi: Clean up efi CR3 save/restore
Date: Fri,  2 Jun 2017 13:51:55 +0000
Message-Id: &lt;20170602135207.21708-2-ard.biesheuvel@linaro.org&gt;
X-Mailer: git-send-email 2.9.3
In-Reply-To: &lt;20170602135207.21708-1-ard.biesheuvel@linaro.org&gt;
References: &lt;20170602135207.21708-1-ard.biesheuvel@linaro.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=66681">Ard Biesheuvel</a> - June 2, 2017, 1:51 p.m.</div>
<pre class="content">
<span class="from">From: Andy Lutomirski &lt;luto@kernel.org&gt;</span>

efi_call_phys_prolog() used to return a &quot;pgd_t *&quot; that meant one of
three different things depending on kernel and system configuration.
Clean it up so it uses a union and is more explicit about what&#39;s
going on.
<span class="signed-off-by">
Signed-off-by: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
Cc: Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt;
Cc: Borislav Petkov &lt;bp@alien8.de&gt;
Cc: Andy Lutomirski &lt;luto@amacapital.net&gt;
Cc: Ingo Molnar &lt;mingo@kernel.org&gt;
<span class="signed-off-by">Signed-off-by: Matt Fleming &lt;matt@codeblueprint.co.uk&gt;</span>
<span class="signed-off-by">Signed-off-by: Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt;</span>
---
 arch/x86/include/asm/efi.h     | 17 +++++++++++++++--
 arch/x86/platform/efi/efi.c    |  6 +++---
 arch/x86/platform/efi/efi_32.c | 12 ++++++------
 arch/x86/platform/efi/efi_64.c | 22 ++++++++++++----------
 4 files changed, 36 insertions(+), 21 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a> - June 5, 2017, 3:40 p.m.</div>
<pre class="content">
* Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt; wrote:
<span class="quote">
&gt; From: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; efi_call_phys_prolog() used to return a &quot;pgd_t *&quot; that meant one of</span>
<span class="quote">&gt; three different things depending on kernel and system configuration.</span>
<span class="quote">&gt; Clean it up so it uses a union and is more explicit about what&#39;s</span>
<span class="quote">&gt; going on.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
<span class="quote">&gt; Cc: Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt;</span>
<span class="quote">&gt; Cc: Borislav Petkov &lt;bp@alien8.de&gt;</span>
<span class="quote">&gt; Cc: Andy Lutomirski &lt;luto@amacapital.net&gt;</span>
<span class="quote">&gt; Cc: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
<span class="quote">&gt; Signed-off-by: Matt Fleming &lt;matt@codeblueprint.co.uk&gt;</span>
<span class="quote">&gt; Signed-off-by: Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/x86/include/asm/efi.h     | 17 +++++++++++++++--</span>
<span class="quote">&gt;  arch/x86/platform/efi/efi.c    |  6 +++---</span>
<span class="quote">&gt;  arch/x86/platform/efi/efi_32.c | 12 ++++++------</span>
<span class="quote">&gt;  arch/x86/platform/efi/efi_64.c | 22 ++++++++++++----------</span>
<span class="quote">&gt;  4 files changed, 36 insertions(+), 21 deletions(-)</span>

Hm, this patch does not apply cleanly to v4.12-rc4:

 Applying patch patches/x86efi_Clean_up_efi_CR3_saverestore-1.patch
 patching file arch/x86/include/asm/efi.h
 patching file arch/x86/platform/efi/efi.c
 patching file arch/x86/platform/efi/efi_32.c
 patching file arch/x86/platform/efi/efi_64.c
 Hunk #1 FAILED at 69.
 Hunk #2 FAILED at 86.
 Hunk #3 succeeded at 152 with fuzz 1 (offset 44 lines).
 Hunk #4 FAILED at 116.
 3 out of 4 hunks FAILED -- rejects in file arch/x86/platform/efi/efi_64.c

what tree is this against?

Thanks,

	Ingo
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=66681">Ard Biesheuvel</a> - June 5, 2017, 4:03 p.m.</div>
<pre class="content">
On 5 June 2017 at 15:40, Ingo Molnar &lt;mingo@kernel.org&gt; wrote:
<span class="quote">&gt;</span>
<span class="quote">&gt; * Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt; wrote:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; From: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; efi_call_phys_prolog() used to return a &quot;pgd_t *&quot; that meant one of</span>
<span class="quote">&gt;&gt; three different things depending on kernel and system configuration.</span>
<span class="quote">&gt;&gt; Clean it up so it uses a union and is more explicit about what&#39;s</span>
<span class="quote">&gt;&gt; going on.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
<span class="quote">&gt;&gt; Cc: Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt;</span>
<span class="quote">&gt;&gt; Cc: Borislav Petkov &lt;bp@alien8.de&gt;</span>
<span class="quote">&gt;&gt; Cc: Andy Lutomirski &lt;luto@amacapital.net&gt;</span>
<span class="quote">&gt;&gt; Cc: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Matt Fleming &lt;matt@codeblueprint.co.uk&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt;</span>
<span class="quote">&gt;&gt; ---</span>
<span class="quote">&gt;&gt;  arch/x86/include/asm/efi.h     | 17 +++++++++++++++--</span>
<span class="quote">&gt;&gt;  arch/x86/platform/efi/efi.c    |  6 +++---</span>
<span class="quote">&gt;&gt;  arch/x86/platform/efi/efi_32.c | 12 ++++++------</span>
<span class="quote">&gt;&gt;  arch/x86/platform/efi/efi_64.c | 22 ++++++++++++----------</span>
<span class="quote">&gt;&gt;  4 files changed, 36 insertions(+), 21 deletions(-)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Hm, this patch does not apply cleanly to v4.12-rc4:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;  Applying patch patches/x86efi_Clean_up_efi_CR3_saverestore-1.patch</span>
<span class="quote">&gt;  patching file arch/x86/include/asm/efi.h</span>
<span class="quote">&gt;  patching file arch/x86/platform/efi/efi.c</span>
<span class="quote">&gt;  patching file arch/x86/platform/efi/efi_32.c</span>
<span class="quote">&gt;  patching file arch/x86/platform/efi/efi_64.c</span>
<span class="quote">&gt;  Hunk #1 FAILED at 69.</span>
<span class="quote">&gt;  Hunk #2 FAILED at 86.</span>
<span class="quote">&gt;  Hunk #3 succeeded at 152 with fuzz 1 (offset 44 lines).</span>
<span class="quote">&gt;  Hunk #4 FAILED at 116.</span>
<span class="quote">&gt;  3 out of 4 hunks FAILED -- rejects in file arch/x86/platform/efi/efi_64.c</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; what tree is this against?</span>
<span class="quote">&gt;</span>

This is against v4.12-rc3, which lacked the EFI fix Matt sent out in
the mean time.

Feel free to drop it for now, and we can requeue it later if Andy is
willing to rebase it.

Thanks,
Ard.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=125831">Andrew Lutomirski</a> - June 5, 2017, 4:14 p.m.</div>
<pre class="content">
On Mon, Jun 5, 2017 at 9:03 AM, Ard Biesheuvel
&lt;ard.biesheuvel@linaro.org&gt; wrote:
<span class="quote">&gt; On 5 June 2017 at 15:40, Ingo Molnar &lt;mingo@kernel.org&gt; wrote:</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; * Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt; wrote:</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; From: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; efi_call_phys_prolog() used to return a &quot;pgd_t *&quot; that meant one of</span>
<span class="quote">&gt;&gt;&gt; three different things depending on kernel and system configuration.</span>
<span class="quote">&gt;&gt;&gt; Clean it up so it uses a union and is more explicit about what&#39;s</span>
<span class="quote">&gt;&gt;&gt; going on.</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; Signed-off-by: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
<span class="quote">&gt;&gt;&gt; Cc: Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt;</span>
<span class="quote">&gt;&gt;&gt; Cc: Borislav Petkov &lt;bp@alien8.de&gt;</span>
<span class="quote">&gt;&gt;&gt; Cc: Andy Lutomirski &lt;luto@amacapital.net&gt;</span>
<span class="quote">&gt;&gt;&gt; Cc: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
<span class="quote">&gt;&gt;&gt; Signed-off-by: Matt Fleming &lt;matt@codeblueprint.co.uk&gt;</span>
<span class="quote">&gt;&gt;&gt; Signed-off-by: Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt;</span>
<span class="quote">&gt;&gt;&gt; ---</span>
<span class="quote">&gt;&gt;&gt;  arch/x86/include/asm/efi.h     | 17 +++++++++++++++--</span>
<span class="quote">&gt;&gt;&gt;  arch/x86/platform/efi/efi.c    |  6 +++---</span>
<span class="quote">&gt;&gt;&gt;  arch/x86/platform/efi/efi_32.c | 12 ++++++------</span>
<span class="quote">&gt;&gt;&gt;  arch/x86/platform/efi/efi_64.c | 22 ++++++++++++----------</span>
<span class="quote">&gt;&gt;&gt;  4 files changed, 36 insertions(+), 21 deletions(-)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Hm, this patch does not apply cleanly to v4.12-rc4:</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;  Applying patch patches/x86efi_Clean_up_efi_CR3_saverestore-1.patch</span>
<span class="quote">&gt;&gt;  patching file arch/x86/include/asm/efi.h</span>
<span class="quote">&gt;&gt;  patching file arch/x86/platform/efi/efi.c</span>
<span class="quote">&gt;&gt;  patching file arch/x86/platform/efi/efi_32.c</span>
<span class="quote">&gt;&gt;  patching file arch/x86/platform/efi/efi_64.c</span>
<span class="quote">&gt;&gt;  Hunk #1 FAILED at 69.</span>
<span class="quote">&gt;&gt;  Hunk #2 FAILED at 86.</span>
<span class="quote">&gt;&gt;  Hunk #3 succeeded at 152 with fuzz 1 (offset 44 lines).</span>
<span class="quote">&gt;&gt;  Hunk #4 FAILED at 116.</span>
<span class="quote">&gt;&gt;  3 out of 4 hunks FAILED -- rejects in file arch/x86/platform/efi/efi_64.c</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; what tree is this against?</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; This is against v4.12-rc3, which lacked the EFI fix Matt sent out in</span>
<span class="quote">&gt; the mean time.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Feel free to drop it for now, and we can requeue it later if Andy is</span>
<span class="quote">&gt; willing to rebase it.</span>

I had hoped this would make it into 4.12-rc1 so I could base PCID on
top of it.  I&#39;ll probably resend it once PCID lands and base it on
PCID instead.  (It&#39;s a trivial one-line conflict, but still...)

--Andy
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/efi.h b/arch/x86/include/asm/efi.h</span>
<span class="p_header">index 2f77bcefe6b4..6d74cc3802e6 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/efi.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/efi.h</span>
<span class="p_chunk">@@ -111,11 +111,24 @@</span> <span class="p_context"> extern void __iomem *__init efi_ioremap(unsigned long addr, unsigned long size,</span>
 
 #endif /* CONFIG_X86_32 */
 
<span class="p_add">+union efi_saved_pgd {</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * If !EFI_OLD_MEMMAP or we&#39;re 32-bit, this is a verbatim saved CR3</span>
<span class="p_add">+	 * value.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	unsigned long cr3;</span>
<span class="p_add">+</span>
<span class="p_add">+#ifdef CONFIG_X86_64</span>
<span class="p_add">+	/* If EFI_OLD_MEMMAP, this is a kmalloced copy of the pgd. */</span>
<span class="p_add">+	pgd_t *pgd;</span>
<span class="p_add">+#endif</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 extern struct efi_scratch efi_scratch;
 extern void __init efi_set_executable(efi_memory_desc_t *md, bool executable);
 extern int __init efi_memblock_x86_reserve_range(void);
<span class="p_del">-extern pgd_t * __init efi_call_phys_prolog(void);</span>
<span class="p_del">-extern void __init efi_call_phys_epilog(pgd_t *save_pgd);</span>
<span class="p_add">+extern union efi_saved_pgd __init efi_call_phys_prolog(void);</span>
<span class="p_add">+extern void __init efi_call_phys_epilog(union efi_saved_pgd saved_pgd);</span>
 extern void __init efi_print_memmap(void);
 extern void __init efi_memory_uc(u64 addr, unsigned long size);
 extern void __init efi_map_region(efi_memory_desc_t *md);
<span class="p_header">diff --git a/arch/x86/platform/efi/efi.c b/arch/x86/platform/efi/efi.c</span>
<span class="p_header">index 7e76a4d8304b..dc2da5e2c7e4 100644</span>
<span class="p_header">--- a/arch/x86/platform/efi/efi.c</span>
<span class="p_header">+++ b/arch/x86/platform/efi/efi.c</span>
<span class="p_chunk">@@ -82,9 +82,9 @@</span> <span class="p_context"> static efi_status_t __init phys_efi_set_virtual_address_map(</span>
 {
 	efi_status_t status;
 	unsigned long flags;
<span class="p_del">-	pgd_t *save_pgd;</span>
<span class="p_add">+	union efi_saved_pgd saved_pgd;</span>
 
<span class="p_del">-	save_pgd = efi_call_phys_prolog();</span>
<span class="p_add">+	saved_pgd = efi_call_phys_prolog();</span>
 
 	/* Disable interrupts around EFI calls: */
 	local_irq_save(flags);
<span class="p_chunk">@@ -93,7 +93,7 @@</span> <span class="p_context"> static efi_status_t __init phys_efi_set_virtual_address_map(</span>
 			       descriptor_version, virtual_map);
 	local_irq_restore(flags);
 
<span class="p_del">-	efi_call_phys_epilog(save_pgd);</span>
<span class="p_add">+	efi_call_phys_epilog(saved_pgd);</span>
 
 	return status;
 }
<span class="p_header">diff --git a/arch/x86/platform/efi/efi_32.c b/arch/x86/platform/efi/efi_32.c</span>
<span class="p_header">index 3481268da3d0..403a987d06c7 100644</span>
<span class="p_header">--- a/arch/x86/platform/efi/efi_32.c</span>
<span class="p_header">+++ b/arch/x86/platform/efi/efi_32.c</span>
<span class="p_chunk">@@ -58,13 +58,13 @@</span> <span class="p_context"> void __init efi_map_region(efi_memory_desc_t *md)</span>
 void __init efi_map_region_fixed(efi_memory_desc_t *md) {}
 void __init parse_efi_setup(u64 phys_addr, u32 data_len) {}
 
<span class="p_del">-pgd_t * __init efi_call_phys_prolog(void)</span>
<span class="p_add">+union efi_saved_pgd __init efi_call_phys_prolog(void)</span>
 {
 	struct desc_ptr gdt_descr;
<span class="p_del">-	pgd_t *save_pgd;</span>
<span class="p_add">+	union efi_saved_pgd saved_pgd;</span>
 
 	/* Current pgd is swapper_pg_dir, we&#39;ll restore it later: */
<span class="p_del">-	save_pgd = swapper_pg_dir;</span>
<span class="p_add">+	saved_pgd.cr3 = __pa(swapper_pg_dir);</span>
 	load_cr3(initial_page_table);
 	__flush_tlb_all();
 
<span class="p_chunk">@@ -72,10 +72,10 @@</span> <span class="p_context"> pgd_t * __init efi_call_phys_prolog(void)</span>
 	gdt_descr.size = GDT_SIZE - 1;
 	load_gdt(&amp;gdt_descr);
 
<span class="p_del">-	return save_pgd;</span>
<span class="p_add">+	return saved_pgd;</span>
 }
 
<span class="p_del">-void __init efi_call_phys_epilog(pgd_t *save_pgd)</span>
<span class="p_add">+void __init efi_call_phys_epilog(union efi_saved_pgd saved_pgd)</span>
 {
 	struct desc_ptr gdt_descr;
 
<span class="p_chunk">@@ -83,7 +83,7 @@</span> <span class="p_context"> void __init efi_call_phys_epilog(pgd_t *save_pgd)</span>
 	gdt_descr.size = GDT_SIZE - 1;
 	load_gdt(&amp;gdt_descr);
 
<span class="p_del">-	load_cr3(save_pgd);</span>
<span class="p_add">+	write_cr3(saved_pgd.cr3);</span>
 	__flush_tlb_all();
 }
 
<span class="p_header">diff --git a/arch/x86/platform/efi/efi_64.c b/arch/x86/platform/efi/efi_64.c</span>
<span class="p_header">index c488625c9712..6fbf6c47e603 100644</span>
<span class="p_header">--- a/arch/x86/platform/efi/efi_64.c</span>
<span class="p_header">+++ b/arch/x86/platform/efi/efi_64.c</span>
<span class="p_chunk">@@ -69,16 +69,16 @@</span> <span class="p_context"> static void __init early_code_mapping_set_exec(int executable)</span>
 	}
 }
 
<span class="p_del">-pgd_t * __init efi_call_phys_prolog(void)</span>
<span class="p_add">+union efi_saved_pgd __init efi_call_phys_prolog(void)</span>
 {
 	unsigned long vaddress;
<span class="p_del">-	pgd_t *save_pgd;</span>
<span class="p_add">+	union efi_saved_pgd saved_pgd;</span>
 
 	int pgd;
 	int n_pgds;
 
 	if (!efi_enabled(EFI_OLD_MEMMAP)) {
<span class="p_del">-		save_pgd = (pgd_t *)read_cr3();</span>
<span class="p_add">+		saved_pgd.cr3 = read_cr3();</span>
 		write_cr3((unsigned long)efi_scratch.efi_pgt);
 		goto out;
 	}
<span class="p_chunk">@@ -86,20 +86,21 @@</span> <span class="p_context"> pgd_t * __init efi_call_phys_prolog(void)</span>
 	early_code_mapping_set_exec(1);
 
 	n_pgds = DIV_ROUND_UP((max_pfn &lt;&lt; PAGE_SHIFT), PGDIR_SIZE);
<span class="p_del">-	save_pgd = kmalloc_array(n_pgds, sizeof(*save_pgd), GFP_KERNEL);</span>
<span class="p_add">+	saved_pgd.pgd = kmalloc_array(n_pgds, sizeof(*saved_pgd.pgd),</span>
<span class="p_add">+				      GFP_KERNEL);</span>
 
 	for (pgd = 0; pgd &lt; n_pgds; pgd++) {
<span class="p_del">-		save_pgd[pgd] = *pgd_offset_k(pgd * PGDIR_SIZE);</span>
<span class="p_add">+		saved_pgd.pgd[pgd] = *pgd_offset_k(pgd * PGDIR_SIZE);</span>
 		vaddress = (unsigned long)__va(pgd * PGDIR_SIZE);
 		set_pgd(pgd_offset_k(pgd * PGDIR_SIZE), *pgd_offset_k(vaddress));
 	}
 out:
 	__flush_tlb_all();
 
<span class="p_del">-	return save_pgd;</span>
<span class="p_add">+	return saved_pgd;</span>
 }
 
<span class="p_del">-void __init efi_call_phys_epilog(pgd_t *save_pgd)</span>
<span class="p_add">+void __init efi_call_phys_epilog(union efi_saved_pgd saved_pgd)</span>
 {
 	/*
 	 * After the lock is released, the original page table is restored.
<span class="p_chunk">@@ -108,7 +109,7 @@</span> <span class="p_context"> void __init efi_call_phys_epilog(pgd_t *save_pgd)</span>
 	int nr_pgds;
 
 	if (!efi_enabled(EFI_OLD_MEMMAP)) {
<span class="p_del">-		write_cr3((unsigned long)save_pgd);</span>
<span class="p_add">+		write_cr3(saved_pgd.cr3);</span>
 		__flush_tlb_all();
 		return;
 	}
<span class="p_chunk">@@ -116,9 +117,10 @@</span> <span class="p_context"> void __init efi_call_phys_epilog(pgd_t *save_pgd)</span>
 	nr_pgds = DIV_ROUND_UP((max_pfn &lt;&lt; PAGE_SHIFT) , PGDIR_SIZE);
 
 	for (pgd_idx = 0; pgd_idx &lt; nr_pgds; pgd_idx++)
<span class="p_del">-		set_pgd(pgd_offset_k(pgd_idx * PGDIR_SIZE), save_pgd[pgd_idx]);</span>
<span class="p_add">+		set_pgd(pgd_offset_k(pgd_idx * PGDIR_SIZE),</span>
<span class="p_add">+			saved_pgd.pgd[pgd_idx]);</span>
 
<span class="p_del">-	kfree(save_pgd);</span>
<span class="p_add">+	kfree(saved_pgd.pgd);</span>
 
 	__flush_tlb_all();
 	early_code_mapping_set_exec(0);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



