
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.8,038/138] powerpc/mm/radix: Use tlbiel only if we ever ran on the current cpu - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.8,038/138] powerpc/mm/radix: Use tlbiel only if we ever ran on the current cpu</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 9, 2016, 10:45 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161109102846.435691615@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9418829/mbox/"
   >mbox</a>
|
   <a href="/patch/9418829/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9418829/">/patch/9418829/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	9B39B60585 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  9 Nov 2016 11:06:38 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 8EDFE28934
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  9 Nov 2016 11:06:38 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 83D5A29079; Wed,  9 Nov 2016 11:06:38 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C673D28A1E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  9 Nov 2016 11:06:36 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753885AbcKILG1 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 9 Nov 2016 06:06:27 -0500
Received: from mail.linuxfoundation.org ([140.211.169.12]:54174 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753834AbcKILGW (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 9 Nov 2016 06:06:22 -0500
Received: from localhost (pes75-3-78-192-101-3.fbxo.proxad.net
	[78.192.101.3])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id E9FB3955;
	Wed,  9 Nov 2016 11:06:21 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;, stable@vger.kernel.org,
	&quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;,
	Michael Ellerman &lt;mpe@ellerman.id.au&gt;
Subject: [PATCH 4.8 038/138] powerpc/mm/radix: Use tlbiel only if we ever
	ran on the current cpu
Date: Wed,  9 Nov 2016 11:45:21 +0100
Message-Id: &lt;20161109102846.435691615@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.10.2
In-Reply-To: &lt;20161109102844.808685475@linuxfoundation.org&gt;
References: &lt;20161109102844.808685475@linuxfoundation.org&gt;
User-Agent: quilt/0.64
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Nov. 9, 2016, 10:45 a.m.</div>
<pre class="content">
4.8-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: Aneesh Kumar K.V &lt;aneesh.kumar@linux.vnet.ibm.com&gt;</span>

commit bd77c4498616e27d5725b5959d880ce2272fefa9 upstream.

Before this patch, we used tlbiel, if we ever ran only on this core.
That was mostly derived from the nohash usage of the same. But is
incorrect, the ISA 3.0 clarifies tlbiel such that:

&quot;All TLB entries that have all of the following properties are made
invalid on the thread executing the tlbiel instruction&quot;

ie. tlbiel only invalidates TLB entries on the current thread. So if the
mm has been used on any other thread (aka. cpu) then we must broadcast
the invalidate.

This bug could lead to invalid TLB entries if a program runs on multiple
threads of a core.

Hence use tlbiel, if we only ever ran on only the current cpu.

Fixes: 1a472c9dba6b (&quot;powerpc/mm/radix: Add tlbflush routines&quot;)
<span class="signed-off-by">Signed-off-by: Aneesh Kumar K.V &lt;aneesh.kumar@linux.vnet.ibm.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Michael Ellerman &lt;mpe@ellerman.id.au&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>

---
 arch/powerpc/include/asm/tlb.h |   12 ++++++++++++
 arch/powerpc/mm/tlb-radix.c    |    8 ++++----
 2 files changed, 16 insertions(+), 4 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/powerpc/include/asm/tlb.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/tlb.h</span>
<span class="p_chunk">@@ -52,11 +52,23 @@</span> <span class="p_context"> static inline int mm_is_core_local(struc</span>
 	return cpumask_subset(mm_cpumask(mm),
 			      topology_sibling_cpumask(smp_processor_id()));
 }
<span class="p_add">+</span>
<span class="p_add">+static inline int mm_is_thread_local(struct mm_struct *mm)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return cpumask_equal(mm_cpumask(mm),</span>
<span class="p_add">+			      cpumask_of(smp_processor_id()));</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 #else
 static inline int mm_is_core_local(struct mm_struct *mm)
 {
 	return 1;
 }
<span class="p_add">+</span>
<span class="p_add">+static inline int mm_is_thread_local(struct mm_struct *mm)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return 1;</span>
<span class="p_add">+}</span>
 #endif
 
 #endif /* __KERNEL__ */
<span class="p_header">--- a/arch/powerpc/mm/tlb-radix.c</span>
<span class="p_header">+++ b/arch/powerpc/mm/tlb-radix.c</span>
<span class="p_chunk">@@ -175,7 +175,7 @@</span> <span class="p_context"> void radix__flush_tlb_mm(struct mm_struc</span>
 	if (unlikely(pid == MMU_NO_CONTEXT))
 		goto no_context;
 
<span class="p_del">-	if (!mm_is_core_local(mm)) {</span>
<span class="p_add">+	if (!mm_is_thread_local(mm)) {</span>
 		int lock_tlbie = !mmu_has_feature(MMU_FTR_LOCKLESS_TLBIE);
 
 		if (lock_tlbie)
<span class="p_chunk">@@ -201,7 +201,7 @@</span> <span class="p_context"> void radix__flush_tlb_pwc(struct mmu_gat</span>
 	if (unlikely(pid == MMU_NO_CONTEXT))
 		goto no_context;
 
<span class="p_del">-	if (!mm_is_core_local(mm)) {</span>
<span class="p_add">+	if (!mm_is_thread_local(mm)) {</span>
 		int lock_tlbie = !mmu_has_feature(MMU_FTR_LOCKLESS_TLBIE);
 
 		if (lock_tlbie)
<span class="p_chunk">@@ -226,7 +226,7 @@</span> <span class="p_context"> void radix__flush_tlb_page_psize(struct</span>
 	pid = mm ? mm-&gt;context.id : 0;
 	if (unlikely(pid == MMU_NO_CONTEXT))
 		goto bail;
<span class="p_del">-	if (!mm_is_core_local(mm)) {</span>
<span class="p_add">+	if (!mm_is_thread_local(mm)) {</span>
 		int lock_tlbie = !mmu_has_feature(MMU_FTR_LOCKLESS_TLBIE);
 
 		if (lock_tlbie)
<span class="p_chunk">@@ -321,7 +321,7 @@</span> <span class="p_context"> void radix__flush_tlb_range_psize(struct</span>
 {
 	unsigned long pid;
 	unsigned long addr;
<span class="p_del">-	int local = mm_is_core_local(mm);</span>
<span class="p_add">+	int local = mm_is_thread_local(mm);</span>
 	unsigned long ap = mmu_get_ap(psize);
 	int lock_tlbie = !mmu_has_feature(MMU_FTR_LOCKLESS_TLBIE);
 	unsigned long page_size = 1UL &lt;&lt; mmu_psize_defs[psize].shift;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



