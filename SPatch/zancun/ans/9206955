
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v5,40/44] tile: dma-mapping: Use unsigned long for dma_attrs - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v5,40/44] tile: dma-mapping: Use unsigned long for dma_attrs</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=72608">Krzysztof Kozlowski</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 30, 2016, 8:26 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1467275171-6298-40-git-send-email-k.kozlowski@samsung.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9206955/mbox/"
   >mbox</a>
|
   <a href="/patch/9206955/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9206955/">/patch/9206955/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	23D5160752 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 30 Jun 2016 08:34:45 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1460A2865A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 30 Jun 2016 08:34:45 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 093482867B; Thu, 30 Jun 2016 08:34:45 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E27852865A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 30 Jun 2016 08:34:43 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932168AbcF3Idx (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 30 Jun 2016 04:33:53 -0400
Received: from mailout1.w1.samsung.com ([210.118.77.11]:54240 &quot;EHLO
	mailout1.w1.samsung.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932088AbcF3I3N (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 30 Jun 2016 04:29:13 -0400
Received: from eucpsbgm1.samsung.com (unknown [203.254.199.244])
	by mailout1.w1.samsung.com
	(Oracle Communications Messaging Server 7.0.5.31.0 64bit (built May 5
	2014)) with ESMTP id &lt;0O9K00LNFSV3VR80@mailout1.w1.samsung.com&gt; for
	linux-kernel@vger.kernel.org; Thu, 30 Jun 2016 09:28:15 +0100 (BST)
X-AuditID: cbfec7f4-f796c6d000001486-81-5774d81fdd45
Received: from eusync2.samsung.com ( [203.254.199.212])
	by eucpsbgm1.samsung.com (EUCPMTA) with SMTP id FE.0E.05254.F18D4775;
	Thu, 30 Jun 2016 09:28:15 +0100 (BST)
Received: from AMDC2174.DIGITAL.local ([106.120.53.17])
	by eusync2.samsung.com (Oracle Communications Messaging Server
	7.0.5.31.0 64bit (built May  5 2014))
	with ESMTPA id &lt;0O9K00F5WSS0I050@eusync2.samsung.com&gt;; Thu,
	30 Jun 2016 09:28:15 +0100 (BST)
From: Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: linux-kernel@vger.kernel.org, hch@infradead.org,
	Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;,
	Bartlomiej Zolnierkiewicz &lt;b.zolnierkie@samsung.com&gt;,
	Chris Metcalf &lt;cmetcalf@mellanox.com&gt;
Subject: [PATCH v5 40/44] tile: dma-mapping: Use unsigned long for dma_attrs
Date: Thu, 30 Jun 2016 10:26:07 +0200
Message-id: &lt;1467275171-6298-40-git-send-email-k.kozlowski@samsung.com&gt;
X-Mailer: git-send-email 1.9.1
In-reply-to: &lt;1467275171-6298-1-git-send-email-k.kozlowski@samsung.com&gt;
References: &lt;1467275019-30789-1-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1467275171-6298-1-git-send-email-k.kozlowski@samsung.com&gt;
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFupmluLIzCtJLcpLzFFi42I5/e/4FV35GyXhBi/uCVjMWb+GzWLjjPWs
	Fu/69SxOT1jEZPH6haHF5V1z2BzYPDav0PI4MeM3i8ez6YeZPPq2rGL0+LxJLoA1issmJTUn
	syy1SN8ugSvj/InvjAWvNCpuN79hamDsVuhi5OSQEDCRaDn1iQXCFpO4cG89WxcjF4eQwFJG
	iWe3DrCDJIQEGpkkjm03BLHZBIwlNi9fwgZiiwjoSqx6vosZpIFZ4CijxM/LN8AmCQv4SGw4
	1AlWxCKgKnHq0g6gOAcHr4C7xJHvmhDL5CROHpvMChLmBArP/u4PsbeFUeLYvknMExh5FzAy
	rGIUTS1NLihOSs811CtOzC0uzUvXS87P3cQICaIvOxgXH7M6xCjAwajEw+vAXBIuxJpYVlyZ
	e4hRgoNZSYR3+xWgEG9KYmVValF+fFFpTmrxIUZpDhYlcd65u96HCAmkJ5akZqemFqQWwWSZ
	ODilGhinzd267enhyOpr315+mMv8766Q//0DCs7i19dvCY+ZW3A1081WMVJ58uT9thZyYm73
	HjYq7w3M3ZBsxVzFWO7Cv/ehicLybtaj18UvdBmEvzdQPZsmoOrfuKsp4HaecFju4iNfT+7W
	6vg+4YJi8sKSk+umumg/5uCY/melb2G2effua8FnV+kpsRRnJBpqMRcVJwIA4Y3VnR4CAAA=
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72608">Krzysztof Kozlowski</a> - June 30, 2016, 8:26 a.m.</div>
<pre class="content">
Split out subsystem specific changes for easier reviews. This will be
squashed with main commit.
<span class="signed-off-by">
Signed-off-by: Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;</span>
---
 arch/tile/kernel/pci-dma.c | 28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/tile/kernel/pci-dma.c b/arch/tile/kernel/pci-dma.c</span>
<span class="p_header">index b6bc0547a4f6..09bb774b39cd 100644</span>
<span class="p_header">--- a/arch/tile/kernel/pci-dma.c</span>
<span class="p_header">+++ b/arch/tile/kernel/pci-dma.c</span>
<span class="p_chunk">@@ -34,7 +34,7 @@</span> <span class="p_context"></span>
 
 static void *tile_dma_alloc_coherent(struct device *dev, size_t size,
 				     dma_addr_t *dma_handle, gfp_t gfp,
<span class="p_del">-				     struct dma_attrs *attrs)</span>
<span class="p_add">+				     unsigned long attrs)</span>
 {
 	u64 dma_mask = (dev &amp;&amp; dev-&gt;coherent_dma_mask) ?
 		dev-&gt;coherent_dma_mask : DMA_BIT_MASK(32);
<span class="p_chunk">@@ -78,7 +78,7 @@</span> <span class="p_context"> static void *tile_dma_alloc_coherent(struct device *dev, size_t size,</span>
  */
 static void tile_dma_free_coherent(struct device *dev, size_t size,
 				   void *vaddr, dma_addr_t dma_handle,
<span class="p_del">-				   struct dma_attrs *attrs)</span>
<span class="p_add">+				   unsigned long attrs)</span>
 {
 	homecache_free_pages((unsigned long)vaddr, get_order(size));
 }
<span class="p_chunk">@@ -202,7 +202,7 @@</span> <span class="p_context"> static void __dma_complete_pa_range(dma_addr_t dma_addr, size_t size,</span>
 
 static int tile_dma_map_sg(struct device *dev, struct scatterlist *sglist,
 			   int nents, enum dma_data_direction direction,
<span class="p_del">-			   struct dma_attrs *attrs)</span>
<span class="p_add">+			   unsigned long attrs)</span>
 {
 	struct scatterlist *sg;
 	int i;
<span class="p_chunk">@@ -224,7 +224,7 @@</span> <span class="p_context"> static int tile_dma_map_sg(struct device *dev, struct scatterlist *sglist,</span>
 
 static void tile_dma_unmap_sg(struct device *dev, struct scatterlist *sglist,
 			      int nents, enum dma_data_direction direction,
<span class="p_del">-			      struct dma_attrs *attrs)</span>
<span class="p_add">+			      unsigned long attrs)</span>
 {
 	struct scatterlist *sg;
 	int i;
<span class="p_chunk">@@ -240,7 +240,7 @@</span> <span class="p_context"> static void tile_dma_unmap_sg(struct device *dev, struct scatterlist *sglist,</span>
 static dma_addr_t tile_dma_map_page(struct device *dev, struct page *page,
 				    unsigned long offset, size_t size,
 				    enum dma_data_direction direction,
<span class="p_del">-				    struct dma_attrs *attrs)</span>
<span class="p_add">+				    unsigned long attrs)</span>
 {
 	BUG_ON(!valid_dma_direction(direction));
 
<span class="p_chunk">@@ -252,7 +252,7 @@</span> <span class="p_context"> static dma_addr_t tile_dma_map_page(struct device *dev, struct page *page,</span>
 
 static void tile_dma_unmap_page(struct device *dev, dma_addr_t dma_address,
 				size_t size, enum dma_data_direction direction,
<span class="p_del">-				struct dma_attrs *attrs)</span>
<span class="p_add">+				unsigned long attrs)</span>
 {
 	BUG_ON(!valid_dma_direction(direction));
 
<span class="p_chunk">@@ -343,7 +343,7 @@</span> <span class="p_context"> EXPORT_SYMBOL(tile_dma_map_ops);</span>
 
 static void *tile_pci_dma_alloc_coherent(struct device *dev, size_t size,
 					 dma_addr_t *dma_handle, gfp_t gfp,
<span class="p_del">-					 struct dma_attrs *attrs)</span>
<span class="p_add">+					 unsigned long attrs)</span>
 {
 	int node = dev_to_node(dev);
 	int order = get_order(size);
<span class="p_chunk">@@ -368,14 +368,14 @@</span> <span class="p_context"> static void *tile_pci_dma_alloc_coherent(struct device *dev, size_t size,</span>
  */
 static void tile_pci_dma_free_coherent(struct device *dev, size_t size,
 				       void *vaddr, dma_addr_t dma_handle,
<span class="p_del">-				       struct dma_attrs *attrs)</span>
<span class="p_add">+				       unsigned long attrs)</span>
 {
 	homecache_free_pages((unsigned long)vaddr, get_order(size));
 }
 
 static int tile_pci_dma_map_sg(struct device *dev, struct scatterlist *sglist,
 			       int nents, enum dma_data_direction direction,
<span class="p_del">-			       struct dma_attrs *attrs)</span>
<span class="p_add">+			       unsigned long attrs)</span>
 {
 	struct scatterlist *sg;
 	int i;
<span class="p_chunk">@@ -400,7 +400,7 @@</span> <span class="p_context"> static int tile_pci_dma_map_sg(struct device *dev, struct scatterlist *sglist,</span>
 static void tile_pci_dma_unmap_sg(struct device *dev,
 				  struct scatterlist *sglist, int nents,
 				  enum dma_data_direction direction,
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_add">+				  unsigned long attrs)</span>
 {
 	struct scatterlist *sg;
 	int i;
<span class="p_chunk">@@ -416,7 +416,7 @@</span> <span class="p_context"> static void tile_pci_dma_unmap_sg(struct device *dev,</span>
 static dma_addr_t tile_pci_dma_map_page(struct device *dev, struct page *page,
 					unsigned long offset, size_t size,
 					enum dma_data_direction direction,
<span class="p_del">-					struct dma_attrs *attrs)</span>
<span class="p_add">+					unsigned long attrs)</span>
 {
 	BUG_ON(!valid_dma_direction(direction));
 
<span class="p_chunk">@@ -429,7 +429,7 @@</span> <span class="p_context"> static dma_addr_t tile_pci_dma_map_page(struct device *dev, struct page *page,</span>
 static void tile_pci_dma_unmap_page(struct device *dev, dma_addr_t dma_address,
 				    size_t size,
 				    enum dma_data_direction direction,
<span class="p_del">-				    struct dma_attrs *attrs)</span>
<span class="p_add">+				    unsigned long attrs)</span>
 {
 	BUG_ON(!valid_dma_direction(direction));
 
<span class="p_chunk">@@ -531,7 +531,7 @@</span> <span class="p_context"> EXPORT_SYMBOL(gx_pci_dma_map_ops);</span>
 #ifdef CONFIG_SWIOTLB
 static void *tile_swiotlb_alloc_coherent(struct device *dev, size_t size,
 					 dma_addr_t *dma_handle, gfp_t gfp,
<span class="p_del">-					 struct dma_attrs *attrs)</span>
<span class="p_add">+					 unsigned long attrs)</span>
 {
 	gfp |= GFP_DMA;
 	return swiotlb_alloc_coherent(dev, size, dma_handle, gfp);
<span class="p_chunk">@@ -539,7 +539,7 @@</span> <span class="p_context"> static void *tile_swiotlb_alloc_coherent(struct device *dev, size_t size,</span>
 
 static void tile_swiotlb_free_coherent(struct device *dev, size_t size,
 				       void *vaddr, dma_addr_t dma_addr,
<span class="p_del">-				       struct dma_attrs *attrs)</span>
<span class="p_add">+				       unsigned long attrs)</span>
 {
 	swiotlb_free_coherent(dev, size, vaddr, dma_addr);
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



