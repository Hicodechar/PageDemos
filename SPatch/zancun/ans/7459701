
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v11,14/15] HMM: Add support for hugetlb. - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v11,14/15] HMM: Add support for hugetlb.</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=2554">Jerome Glisse</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 21, 2015, 9 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1445461210-2605-15-git-send-email-jglisse@redhat.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7459701/mbox/"
   >mbox</a>
|
   <a href="/patch/7459701/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7459701/">/patch/7459701/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 36A61BEEA4
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 21 Oct 2015 20:05:59 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 5926C20528
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 21 Oct 2015 20:05:58 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 54FC72051A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 21 Oct 2015 20:05:57 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932392AbbJUUFx (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 21 Oct 2015 16:05:53 -0400
Received: from mx1.redhat.com ([209.132.183.28]:53776 &quot;EHLO mx1.redhat.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1756292AbbJUUFP (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 21 Oct 2015 16:05:15 -0400
Received: from int-mx13.intmail.prod.int.phx2.redhat.com
	(int-mx13.intmail.prod.int.phx2.redhat.com [10.5.11.26])
	by mx1.redhat.com (Postfix) with ESMTPS id DCFC6C150BF5;
	Wed, 21 Oct 2015 20:05:14 +0000 (UTC)
Received: from xgl-cortex.ml2.eng.bos.redhat.com
	(xgl-cortex.ml2.eng.bos.redhat.com [10.19.160.80])
	by int-mx13.intmail.prod.int.phx2.redhat.com (8.14.4/8.14.4) with
	ESMTP id t9LK4Ob8020797; Wed, 21 Oct 2015 16:05:11 -0400
From: =?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= &lt;jglisse@redhat.com&gt;
To: akpm@linux-foundation.org, &lt;linux-kernel@vger.kernel.org&gt;,
	linux-mm@kvack.org
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;, &lt;joro@8bytes.org&gt;,
	Mel Gorman &lt;mgorman@suse.de&gt;, &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;,
	Peter Zijlstra &lt;peterz@infradead.org&gt;,
	Andrea Arcangeli &lt;aarcange@redhat.com&gt;,
	Johannes Weiner &lt;jweiner@redhat.com&gt;,
	Larry Woodman &lt;lwoodman@redhat.com&gt;, Rik van Riel &lt;riel@redhat.com&gt;,
	Dave Airlie &lt;airlied@redhat.com&gt;, Brendan Conoboy &lt;blc@redhat.com&gt;,
	Joe Donohue &lt;jdonohue@redhat.com&gt;, Christophe Harle &lt;charle@nvidia.com&gt;,
	Duncan Poole &lt;dpoole@nvidia.com&gt;, Sherry Cheung &lt;SCheung@nvidia.com&gt;,
	Subhash Gutti &lt;sgutti@nvidia.com&gt;, John Hubbard &lt;jhubbard@nvidia.com&gt;,
	Mark Hairgrove &lt;mhairgrove@nvidia.com&gt;,
	Lucien Dunning &lt;ldunning@nvidia.com&gt;,
	Cameron Buschardt &lt;cabuschardt@nvidia.com&gt;,
	Arvind Gopalakrishnan &lt;arvindg@nvidia.com&gt;,
	Haggai Eran &lt;haggaie@mellanox.com&gt;,
	Shachar Raindel &lt;raindel@mellanox.com&gt;, Liran Liss &lt;liranl@mellanox.com&gt;,
	Roland Dreier &lt;roland@purestorage.com&gt;, Ben Sander &lt;ben.sander@amd.com&gt;,
	Greg Stoner &lt;Greg.Stoner@amd.com&gt;, John Bridgman &lt;John.Bridgman@amd.com&gt;,
	Michael Mantor &lt;Michael.Mantor@amd.com&gt;,
	Paul Blinzer &lt;Paul.Blinzer@amd.com&gt;,
	Leonid Shamis &lt;Leonid.Shamis@amd.com&gt;,
	Laurent Morichetti &lt;Laurent.Morichetti@amd.com&gt;,
	Alexander Deucher &lt;Alexander.Deucher@amd.com&gt;,
	=?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= &lt;jglisse@redhat.com&gt;
Subject: [PATCH v11 14/15] HMM: Add support for hugetlb.
Date: Wed, 21 Oct 2015 17:00:09 -0400
Message-Id: &lt;1445461210-2605-15-git-send-email-jglisse@redhat.com&gt;
In-Reply-To: &lt;1445461210-2605-1-git-send-email-jglisse@redhat.com&gt;
References: &lt;1445461210-2605-1-git-send-email-jglisse@redhat.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-Scanned-By: MIMEDefang 2.68 on 10.5.11.26
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2554">Jerome Glisse</a> - Oct. 21, 2015, 9 p.m.</div>
<pre class="content">
Support hugetlb vma allmost like other vma. Exception being that we
will not support migration of hugetlb memory.
<span class="signed-off-by">
Signed-off-by: Jérôme Glisse &lt;jglisse@redhat.com&gt;</span>
---
 mm/hmm.c | 62 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 61 insertions(+), 1 deletion(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/hmm.c b/mm/hmm.c</span>
<span class="p_header">index 6ed1081..9e5017a 100644</span>
<span class="p_header">--- a/mm/hmm.c</span>
<span class="p_header">+++ b/mm/hmm.c</span>
<span class="p_chunk">@@ -809,6 +809,65 @@</span> <span class="p_context"> static int hmm_mirror_fault_pmd(pmd_t *pmdp,</span>
 	return ret;
 }
 
<span class="p_add">+static int hmm_mirror_fault_hugetlb_entry(pte_t *ptep,</span>
<span class="p_add">+					  unsigned long hmask,</span>
<span class="p_add">+					  unsigned long addr,</span>
<span class="p_add">+					  unsigned long end,</span>
<span class="p_add">+					  struct mm_walk *walk)</span>
<span class="p_add">+{</span>
<span class="p_add">+#ifdef CONFIG_HUGETLB_PAGE</span>
<span class="p_add">+	struct hmm_mirror_fault *mirror_fault = walk-&gt;private;</span>
<span class="p_add">+	struct hmm_event *event = mirror_fault-&gt;event;</span>
<span class="p_add">+	struct hmm_pt_iter *iter = mirror_fault-&gt;iter;</span>
<span class="p_add">+	bool write = (event-&gt;etype == HMM_DEVICE_WFAULT);</span>
<span class="p_add">+	unsigned long pfn, next;</span>
<span class="p_add">+	dma_addr_t *hmm_pte;</span>
<span class="p_add">+	pte_t pte;</span>
<span class="p_add">+</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Hugepages under user process are always in RAM and never</span>
<span class="p_add">+	 * swapped out, but theoretically it needs to be checked.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	if (!ptep)</span>
<span class="p_add">+		return -ENOENT;</span>
<span class="p_add">+</span>
<span class="p_add">+	pte = huge_ptep_get(ptep);</span>
<span class="p_add">+	pfn = pte_pfn(pte);</span>
<span class="p_add">+	if (!huge_pte_none(pte) || (write &amp;&amp; !huge_pte_write(pte)))</span>
<span class="p_add">+		return -ENOENT;</span>
<span class="p_add">+</span>
<span class="p_add">+	hmm_pte = hmm_pt_iter_populate(iter, addr, &amp;next);</span>
<span class="p_add">+	if (!hmm_pte)</span>
<span class="p_add">+		return -ENOMEM;</span>
<span class="p_add">+	hmm_pt_iter_directory_lock(iter);</span>
<span class="p_add">+	for (; addr != end; addr += PAGE_SIZE, ++pfn, ++hmm_pte) {</span>
<span class="p_add">+		/* Switch to another HMM page table directory ? */</span>
<span class="p_add">+		if (addr == next) {</span>
<span class="p_add">+			hmm_pt_iter_directory_unlock(iter);</span>
<span class="p_add">+			hmm_pte = hmm_pt_iter_populate(iter, addr, &amp;next);</span>
<span class="p_add">+			if (!hmm_pte)</span>
<span class="p_add">+				return -ENOMEM;</span>
<span class="p_add">+			hmm_pt_iter_directory_lock(iter);</span>
<span class="p_add">+		}</span>
<span class="p_add">+</span>
<span class="p_add">+		if (hmm_pte_test_valid_dma(hmm_pte))</span>
<span class="p_add">+			continue;</span>
<span class="p_add">+</span>
<span class="p_add">+		if (!hmm_pte_test_valid_pfn(hmm_pte)) {</span>
<span class="p_add">+			*hmm_pte = hmm_pte_from_pfn(pfn);</span>
<span class="p_add">+			hmm_pt_iter_directory_ref(iter);</span>
<span class="p_add">+		}</span>
<span class="p_add">+		BUG_ON(hmm_pte_pfn(*hmm_pte) != pfn);</span>
<span class="p_add">+		if (write)</span>
<span class="p_add">+			hmm_pte_set_write(hmm_pte);</span>
<span class="p_add">+	}</span>
<span class="p_add">+	hmm_pt_iter_directory_unlock(iter);</span>
<span class="p_add">+#else</span>
<span class="p_add">+	BUG();</span>
<span class="p_add">+#endif</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static int hmm_mirror_dma_map(struct hmm_mirror *mirror,
 			      struct hmm_pt_iter *iter,
 			      unsigned long start,
<span class="p_chunk">@@ -916,6 +975,7 @@</span> <span class="p_context"> static int hmm_mirror_handle_fault(struct hmm_mirror *mirror,</span>
 		walk.mm = mirror-&gt;hmm-&gt;mm;
 		walk.private = &amp;mirror_fault;
 		walk.pmd_entry = hmm_mirror_fault_pmd;
<span class="p_add">+		walk.hugetlb_entry = hmm_mirror_fault_hugetlb_entry;</span>
 		walk.pte_hole = hmm_pte_hole;
 		ret = walk_page_range(addr, event-&gt;end, &amp;walk);
 		if (ret)
<span class="p_chunk">@@ -1002,7 +1062,7 @@</span> <span class="p_context"> retry:</span>
 		goto out;
 	}
 	event-&gt;end = min(event-&gt;end, vma-&gt;vm_end) &amp; PAGE_MASK;
<span class="p_del">-	if ((vma-&gt;vm_flags &amp; (VM_IO | VM_PFNMAP | VM_MIXEDMAP | VM_HUGETLB))) {</span>
<span class="p_add">+	if ((vma-&gt;vm_flags &amp; (VM_IO | VM_PFNMAP | VM_MIXEDMAP))) {</span>
 		ret = -EFAULT;
 		goto out;
 	}

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



