
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[07/26] iommu/vt-d: Pass dmar_domain directly into iommu_flush_iotlb_psi - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [07/26] iommu/vt-d: Pass dmar_domain directly into iommu_flush_iotlb_psi</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=317">Joerg Roedel</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 5, 2015, 3:18 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1438787937-7340-8-git-send-email-joro@8bytes.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6950591/mbox/"
   >mbox</a>
|
   <a href="/patch/6950591/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6950591/">/patch/6950591/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id E7C96C05AC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  5 Aug 2015 15:19:58 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 06782204E2
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  5 Aug 2015 15:19:58 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id DBBC3204FF
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  5 Aug 2015 15:19:56 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753616AbbHEPTi (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 5 Aug 2015 11:19:38 -0400
Received: from 8bytes.org ([81.169.241.247]:43074 &quot;EHLO theia.8bytes.org&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753083AbbHEPTX (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 5 Aug 2015 11:19:23 -0400
Received: by theia.8bytes.org (Postfix, from userid 1000)
	id 8652049B; Wed,  5 Aug 2015 17:19:18 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=8bytes.org; s=mail-1; 
	t=1438787959; bh=I90Rh0Q4hLrfMogfEFYrpB3ItUvg39e9ySX+D4A0Axg=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=bWlxsWAGGhqHVC4hd1XPV3Jx1zxJteCHMk9OLWKgZDBH+5zZTbtLIBWz1EOqnMFG1
	RZepUWC0aNFcRRW/V8k0Xg7J2LM/2ivItQ8KwOzevy4SQRM7IwcFgf1vSm0nfY7uAD
	Mnipc8bZiDQoECYzAYB58b23nGCuDfjDmHrW05eBq7JDd255MiFNFkRFlR6rNvUmNv
	spB+ZGu44xTV1l9CdK1bX8z2pJQJrlSNOguasHvjjnGXL/TUWdLlDKrBk5UG6VPdtt
	jQLLS01wcYkCpZiEuZSubRYa6njxLrMnCCxDyqafxrGq2SX5jXlpVW2nQOeztbMnp+
	6Fw5Xk25bW9ig==
From: Joerg Roedel &lt;joro@8bytes.org&gt;
To: iommu@lists.linux-foundation.org
Cc: David Woodhouse &lt;dwmw2@infradead.org&gt;,
	Alex Williamson &lt;alex.williamson@redhat.com&gt;,
	linux-kernel@vger.kernel.org, Joerg Roedel &lt;joro@8bytes.org&gt;,
	jroedel@suse.de
Subject: [PATCH 07/26] iommu/vt-d: Pass dmar_domain directly into
	iommu_flush_iotlb_psi
Date: Wed,  5 Aug 2015 17:18:38 +0200
Message-Id: &lt;1438787937-7340-8-git-send-email-joro@8bytes.org&gt;
X-Mailer: git-send-email 1.9.1
In-Reply-To: &lt;1438787937-7340-1-git-send-email-joro@8bytes.org&gt;
References: &lt;1438787937-7340-1-git-send-email-joro@8bytes.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,RP_MATCHES_RCVD,T_DKIM_INVALID,UNPARSEABLE_RELAY
	autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=317">Joerg Roedel</a> - Aug. 5, 2015, 3:18 p.m.</div>
<pre class="content">
<span class="from">From: Joerg Roedel &lt;jroedel@suse.de&gt;</span>

This function can figure out the domain-id to use itself
from the iommu_did array. This is more reliable over
different domain types and brings us one step further to
remove the domain-&gt;id field.
<span class="signed-off-by">
Signed-off-by: Joerg Roedel &lt;jroedel@suse.de&gt;</span>
---
 drivers/iommu/intel-iommu.c | 42 ++++++++++++++++++++++++------------------
 1 file changed, 24 insertions(+), 18 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c</span>
<span class="p_header">index fdb51ec..31e8100 100644</span>
<span class="p_header">--- a/drivers/iommu/intel-iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/intel-iommu.c</span>
<span class="p_chunk">@@ -1469,11 +1469,14 @@</span> <span class="p_context"> static void iommu_flush_dev_iotlb(struct dmar_domain *domain,</span>
 	spin_unlock_irqrestore(&amp;device_domain_lock, flags);
 }
 
<span class="p_del">-static void iommu_flush_iotlb_psi(struct intel_iommu *iommu, u16 did,</span>
<span class="p_del">-				  unsigned long pfn, unsigned int pages, int ih, int map)</span>
<span class="p_add">+static void iommu_flush_iotlb_psi(struct intel_iommu *iommu,</span>
<span class="p_add">+				  struct dmar_domain *domain,</span>
<span class="p_add">+				  unsigned long pfn, unsigned int pages,</span>
<span class="p_add">+				  int ih, int map)</span>
 {
 	unsigned int mask = ilog2(__roundup_pow_of_two(pages));
 	uint64_t addr = (uint64_t)pfn &lt;&lt; VTD_PAGE_SHIFT;
<span class="p_add">+	u16 did = domain-&gt;iommu_did[iommu-&gt;seq_id];</span>
 
 	BUG_ON(pages == 0);
 
<span class="p_chunk">@@ -3420,7 +3423,9 @@</span> <span class="p_context"> static dma_addr_t __intel_map_single(struct device *dev, phys_addr_t paddr,</span>
 
 	/* it&#39;s a non-present to present mapping. Only flush if caching mode */
 	if (cap_caching_mode(iommu-&gt;cap))
<span class="p_del">-		iommu_flush_iotlb_psi(iommu, domain-&gt;id, mm_to_dma_pfn(iova-&gt;pfn_lo), size, 0, 1);</span>
<span class="p_add">+		iommu_flush_iotlb_psi(iommu, domain,</span>
<span class="p_add">+				      mm_to_dma_pfn(iova-&gt;pfn_lo),</span>
<span class="p_add">+				      size, 0, 1);</span>
 	else
 		iommu_flush_write_buffer(iommu);
 
<span class="p_chunk">@@ -3471,7 +3476,7 @@</span> <span class="p_context"> static void flush_unmaps(void)</span>
 
 			/* On real hardware multiple invalidations are expensive */
 			if (cap_caching_mode(iommu-&gt;cap))
<span class="p_del">-				iommu_flush_iotlb_psi(iommu, domain-&gt;id,</span>
<span class="p_add">+				iommu_flush_iotlb_psi(iommu, domain,</span>
 					iova-&gt;pfn_lo, iova_size(iova),
 					!deferred_flush[i].freelist[j], 0);
 			else {
<span class="p_chunk">@@ -3555,7 +3560,7 @@</span> <span class="p_context"> static void intel_unmap(struct device *dev, dma_addr_t dev_addr)</span>
 	freelist = domain_unmap(domain, start_pfn, last_pfn);
 
 	if (intel_iommu_strict) {
<span class="p_del">-		iommu_flush_iotlb_psi(iommu, domain-&gt;id, start_pfn,</span>
<span class="p_add">+		iommu_flush_iotlb_psi(iommu, domain, start_pfn,</span>
 				      last_pfn - start_pfn + 1, !freelist, 0);
 		/* free iova */
 		__free_iova(&amp;domain-&gt;iovad, iova);
<span class="p_chunk">@@ -3713,7 +3718,7 @@</span> <span class="p_context"> static int intel_map_sg(struct device *dev, struct scatterlist *sglist, int nele</span>
 
 	/* it&#39;s a non-present to present mapping. Only flush if caching mode */
 	if (cap_caching_mode(iommu-&gt;cap))
<span class="p_del">-		iommu_flush_iotlb_psi(iommu, domain-&gt;id, start_vpfn, size, 0, 1);</span>
<span class="p_add">+		iommu_flush_iotlb_psi(iommu, domain, start_vpfn, size, 0, 1);</span>
 	else
 		iommu_flush_write_buffer(iommu);
 
<span class="p_chunk">@@ -4419,7 +4424,7 @@</span> <span class="p_context"> static int intel_iommu_memory_notifier(struct notifier_block *nb,</span>
 
 			rcu_read_lock();
 			for_each_active_iommu(iommu, drhd)
<span class="p_del">-				iommu_flush_iotlb_psi(iommu, si_domain-&gt;id,</span>
<span class="p_add">+				iommu_flush_iotlb_psi(iommu, si_domain,</span>
 					iova-&gt;pfn_lo, iova_size(iova),
 					!freelist, 0);
 			rcu_read_unlock();
<span class="p_chunk">@@ -4849,17 +4854,18 @@</span> <span class="p_context"> static size_t intel_iommu_unmap(struct iommu_domain *domain,</span>
 	npages = last_pfn - start_pfn + 1;
 
 	for_each_set_bit(iommu_id, dmar_domain-&gt;iommu_bmp, g_num_of_iommus) {
<span class="p_del">-               iommu = g_iommus[iommu_id];</span>
<span class="p_del">-</span>
<span class="p_del">-               /*</span>
<span class="p_del">-                * find bit position of dmar_domain</span>
<span class="p_del">-                */</span>
<span class="p_del">-               ndomains = cap_ndoms(iommu-&gt;cap);</span>
<span class="p_del">-               for_each_set_bit(num, iommu-&gt;domain_ids, ndomains) {</span>
<span class="p_del">-                       if (get_iommu_domain(iommu, num) == dmar_domain)</span>
<span class="p_del">-                               iommu_flush_iotlb_psi(iommu, num, start_pfn,</span>
<span class="p_del">-						     npages, !freelist, 0);</span>
<span class="p_del">-	       }</span>
<span class="p_add">+		iommu = g_iommus[iommu_id];</span>
<span class="p_add">+</span>
<span class="p_add">+		/*</span>
<span class="p_add">+		 * find bit position of dmar_domain</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		ndomains = cap_ndoms(iommu-&gt;cap);</span>
<span class="p_add">+		for_each_set_bit(num, iommu-&gt;domain_ids, ndomains) {</span>
<span class="p_add">+			if (get_iommu_domain(iommu, num) == dmar_domain)</span>
<span class="p_add">+				iommu_flush_iotlb_psi(iommu, dmar_domain,</span>
<span class="p_add">+						      start_pfn, npages,</span>
<span class="p_add">+						      !freelist, 0);</span>
<span class="p_add">+		}</span>
 
 	}
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



