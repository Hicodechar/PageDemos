
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[1/5] iommu/omap: Move data structures to omap-iommu.h - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [1/5] iommu/omap: Move data structures to omap-iommu.h</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=317">Joerg Roedel</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 31, 2017, 12:10 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1490962248-12602-2-git-send-email-joro@8bytes.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9656139/mbox/"
   >mbox</a>
|
   <a href="/patch/9656139/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9656139/">/patch/9656139/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	57BAF601D2 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 31 Mar 2017 12:11:39 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 48576285D4
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 31 Mar 2017 12:11:39 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 3D40528689; Fri, 31 Mar 2017 12:11:39 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D43E6285D4
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 31 Mar 2017 12:11:38 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932976AbdCaMLJ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 31 Mar 2017 08:11:09 -0400
Received: from 8bytes.org ([81.169.241.247]:46584 &quot;EHLO theia.8bytes.org&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1754602AbdCaMLF (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 31 Mar 2017 08:11:05 -0400
Received: by theia.8bytes.org (Postfix, from userid 1000)
	id 180FA545; Fri, 31 Mar 2017 14:11:03 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=8bytes.org; s=mail-1; 
	t=1490962263; bh=ZzoQOFmfKUynk6VnghzVeU1JK+Gqwmcrm6KNoRKyvRk=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=GKY4Y4mpwCsr2dXn6UmpB1KDT9jEF1+xbAVGqcYlCPPgUtjSXEG9kUsGMIOBYGFTg
	A2AZJ26V/giVXMYsIvrqWP1Te5JdwsAjAEJ+u3H9uoMAiFvIIyO65hLrlkFWECWD+h
	q/cEizvEm7H3nXTEFQtNeMNFZYn8xVFMSLl7qb3c/Q9jCgnnpv6oeg/YrdGyDbxLq+
	hrq7v0G3S4jkX76Ylcf+AUzLkEVpBJae5uWDTY4TW85Fy0E2ZmdtSUW30K6B/7ICLd
	y49DIHYCek3jvMUwpw4eCI5dU1SgAiN/qQCBiZPBW/JXOM6XOrxiUmvncG+1jw5lac
	9FFn3lYP/cyLQ==
From: Joerg Roedel &lt;joro@8bytes.org&gt;
To: Suman Anna &lt;s-anna@ti.com&gt;, iommu@lists.linux-foundation.org
Cc: linux-kernel@vger.kernel.org, Joerg Roedel &lt;jroedel@suse.de&gt;
Subject: [PATCH 1/5] iommu/omap: Move data structures to omap-iommu.h
Date: Fri, 31 Mar 2017 14:10:44 +0200
Message-Id: &lt;1490962248-12602-2-git-send-email-joro@8bytes.org&gt;
X-Mailer: git-send-email 1.9.1
In-Reply-To: &lt;1490962248-12602-1-git-send-email-joro@8bytes.org&gt;
References: &lt;1490962248-12602-1-git-send-email-joro@8bytes.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=317">Joerg Roedel</a> - March 31, 2017, 12:10 p.m.</div>
<pre class="content">
<span class="from">From: Joerg Roedel &lt;jroedel@suse.de&gt;</span>

The internal data-structures are scattered over various
header and C files. Consolidate them in omap-iommu.h.
<span class="signed-off-by">
Signed-off-by: Joerg Roedel &lt;jroedel@suse.de&gt;</span>
---
 drivers/iommu/omap-iommu.c               | 16 ----------------
 drivers/iommu/omap-iommu.h               | 32 ++++++++++++++++++++++++++++++++
 include/linux/platform_data/iommu-omap.h | 15 ---------------
 3 files changed, 32 insertions(+), 31 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=6924">Suman Anna</a> - April 3, 2017, 5:22 p.m.</div>
<pre class="content">
On 03/31/2017 07:10 AM, Joerg Roedel wrote:
<span class="quote">&gt; From: Joerg Roedel &lt;jroedel@suse.de&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The internal data-structures are scattered over various</span>
<span class="quote">&gt; header and C files. Consolidate them in omap-iommu.h.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Joerg Roedel &lt;jroedel@suse.de&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  drivers/iommu/omap-iommu.c               | 16 ----------------</span>
<span class="quote">&gt;  drivers/iommu/omap-iommu.h               | 32 ++++++++++++++++++++++++++++++++</span>
<span class="quote">&gt;  include/linux/platform_data/iommu-omap.h | 15 ---------------</span>
<span class="quote">&gt;  3 files changed, 32 insertions(+), 31 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/drivers/iommu/omap-iommu.c b/drivers/iommu/omap-iommu.c</span>
<span class="quote">&gt; index e2583cc..e9c9b08 100644</span>
<span class="quote">&gt; --- a/drivers/iommu/omap-iommu.c</span>
<span class="quote">&gt; +++ b/drivers/iommu/omap-iommu.c</span>
<span class="quote">&gt; @@ -42,22 +42,6 @@</span>
<span class="quote">&gt;  /* bitmap of the page sizes currently supported */</span>
<span class="quote">&gt;  #define OMAP_IOMMU_PGSIZES	(SZ_4K | SZ_64K | SZ_1M | SZ_16M)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -/**</span>
<span class="quote">&gt; - * struct omap_iommu_domain - omap iommu domain</span>
<span class="quote">&gt; - * @pgtable:	the page table</span>
<span class="quote">&gt; - * @iommu_dev:	an omap iommu device attached to this domain. only a single</span>
<span class="quote">&gt; - *		iommu device can be attached for now.</span>
<span class="quote">&gt; - * @dev:	Device using this domain.</span>
<span class="quote">&gt; - * @lock:	domain lock, should be taken when attaching/detaching</span>
<span class="quote">&gt; - */</span>
<span class="quote">&gt; -struct omap_iommu_domain {</span>
<span class="quote">&gt; -	u32 *pgtable;</span>
<span class="quote">&gt; -	struct omap_iommu *iommu_dev;</span>
<span class="quote">&gt; -	struct device *dev;</span>
<span class="quote">&gt; -	spinlock_t lock;</span>
<span class="quote">&gt; -	struct iommu_domain domain;</span>
<span class="quote">&gt; -};</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  #define MMU_LOCK_BASE_SHIFT	10</span>
<span class="quote">&gt;  #define MMU_LOCK_BASE_MASK	(0x1f &lt;&lt; MMU_LOCK_BASE_SHIFT)</span>
<span class="quote">&gt;  #define MMU_LOCK_BASE(x)	\</span>
<span class="quote">&gt; diff --git a/drivers/iommu/omap-iommu.h b/drivers/iommu/omap-iommu.h</span>
<span class="quote">&gt; index 59628e5..3cd414a 100644</span>
<span class="quote">&gt; --- a/drivers/iommu/omap-iommu.h</span>
<span class="quote">&gt; +++ b/drivers/iommu/omap-iommu.h</span>
<span class="quote">&gt; @@ -14,6 +14,7 @@</span>
<span class="quote">&gt;  #define _OMAP_IOMMU_H</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #include &lt;linux/bitops.h&gt;</span>
<span class="quote">&gt; +#include &lt;linux/iommu.h&gt;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define for_each_iotlb_cr(obj, n, __i, cr)				\</span>
<span class="quote">&gt;  	for (__i = 0;							\</span>
<span class="quote">&gt; @@ -27,6 +28,22 @@ struct iotlb_entry {</span>
<span class="quote">&gt;  	u32 endian, elsz, mixed;</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +/**</span>
<span class="quote">&gt; + * struct omap_iommu_domain - omap iommu domain</span>
<span class="quote">&gt; + * @pgtable:	the page table</span>
<span class="quote">&gt; + * @iommu_dev:	an omap iommu device attached to this domain. only a single</span>
<span class="quote">&gt; + *		iommu device can be attached for now.</span>
<span class="quote">&gt; + * @dev:	Device using this domain.</span>
<span class="quote">&gt; + * @lock:	domain lock, should be taken when attaching/detaching</span>
<span class="quote">&gt; + */</span>
<span class="quote">&gt; +struct omap_iommu_domain {</span>
<span class="quote">&gt; +	u32 *pgtable;</span>
<span class="quote">&gt; +	struct omap_iommu *iommu_dev;</span>
<span class="quote">&gt; +	struct device *dev;</span>
<span class="quote">&gt; +	spinlock_t lock;</span>
<span class="quote">&gt; +	struct iommu_domain domain;</span>
<span class="quote">&gt; +};</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  struct omap_iommu {</span>
<span class="quote">&gt;  	const char	*name;</span>
<span class="quote">&gt;  	void __iomem	*regbase;</span>
<span class="quote">&gt; @@ -52,6 +69,21 @@ struct omap_iommu {</span>
<span class="quote">&gt;  	u32 id;</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +/**</span>
<span class="quote">&gt; + * struct iommu_arch_data - omap iommu private data</span>
<span class="quote">&gt; + * @name: name of the iommu device</span>
<span class="quote">&gt; + * @iommu_dev: handle of the iommu device</span>
<span class="quote">&gt; + *</span>
<span class="quote">&gt; + * This is an omap iommu private data object, which binds an iommu user</span>
<span class="quote">&gt; + * to its iommu device. This object should be placed at the iommu user&#39;s</span>
<span class="quote">&gt; + * dev_archdata so generic IOMMU API can be used without having to</span>
<span class="quote">&gt; + * utilize omap-specific plumbing anymore.</span>
<span class="quote">&gt; + */</span>
<span class="quote">&gt; +struct omap_iommu_arch_data {</span>
<span class="quote">&gt; +	const char *name;</span>
<span class="quote">&gt; +	struct omap_iommu *iommu_dev;</span>
<span class="quote">&gt; +};</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  struct cr_regs {</span>
<span class="quote">&gt;  	u32 cam;</span>
<span class="quote">&gt;  	u32 ram;</span>
<span class="quote">&gt; diff --git a/include/linux/platform_data/iommu-omap.h b/include/linux/platform_data/iommu-omap.h</span>
<span class="quote">&gt; index 0496d17..8c2a77c 100644</span>
<span class="quote">&gt; --- a/include/linux/platform_data/iommu-omap.h</span>
<span class="quote">&gt; +++ b/include/linux/platform_data/iommu-omap.h</span>
<span class="quote">&gt; @@ -14,21 +14,6 @@</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define MMU_REG_SIZE		256</span>

This define can be dropped as well since you are already modifying this
file, it&#39;s already defined in drivers/iommu/omap-iommu.h.

regards
Suman
<span class="quote">
&gt;  </span>
<span class="quote">&gt; -/**</span>
<span class="quote">&gt; - * struct iommu_arch_data - omap iommu private data</span>
<span class="quote">&gt; - * @name: name of the iommu device</span>
<span class="quote">&gt; - * @iommu_dev: handle of the iommu device</span>
<span class="quote">&gt; - *</span>
<span class="quote">&gt; - * This is an omap iommu private data object, which binds an iommu user</span>
<span class="quote">&gt; - * to its iommu device. This object should be placed at the iommu user&#39;s</span>
<span class="quote">&gt; - * dev_archdata so generic IOMMU API can be used without having to</span>
<span class="quote">&gt; - * utilize omap-specific plumbing anymore.</span>
<span class="quote">&gt; - */</span>
<span class="quote">&gt; -struct omap_iommu_arch_data {</span>
<span class="quote">&gt; -	const char *name;</span>
<span class="quote">&gt; -	struct omap_iommu *iommu_dev;</span>
<span class="quote">&gt; -};</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  struct iommu_platform_data {</span>
<span class="quote">&gt;  	const char *name;</span>
<span class="quote">&gt;  	const char *reset_name;</span>
<span class="quote">&gt;</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/iommu/omap-iommu.c b/drivers/iommu/omap-iommu.c</span>
<span class="p_header">index e2583cc..e9c9b08 100644</span>
<span class="p_header">--- a/drivers/iommu/omap-iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/omap-iommu.c</span>
<span class="p_chunk">@@ -42,22 +42,6 @@</span> <span class="p_context"></span>
 /* bitmap of the page sizes currently supported */
 #define OMAP_IOMMU_PGSIZES	(SZ_4K | SZ_64K | SZ_1M | SZ_16M)
 
<span class="p_del">-/**</span>
<span class="p_del">- * struct omap_iommu_domain - omap iommu domain</span>
<span class="p_del">- * @pgtable:	the page table</span>
<span class="p_del">- * @iommu_dev:	an omap iommu device attached to this domain. only a single</span>
<span class="p_del">- *		iommu device can be attached for now.</span>
<span class="p_del">- * @dev:	Device using this domain.</span>
<span class="p_del">- * @lock:	domain lock, should be taken when attaching/detaching</span>
<span class="p_del">- */</span>
<span class="p_del">-struct omap_iommu_domain {</span>
<span class="p_del">-	u32 *pgtable;</span>
<span class="p_del">-	struct omap_iommu *iommu_dev;</span>
<span class="p_del">-	struct device *dev;</span>
<span class="p_del">-	spinlock_t lock;</span>
<span class="p_del">-	struct iommu_domain domain;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
 #define MMU_LOCK_BASE_SHIFT	10
 #define MMU_LOCK_BASE_MASK	(0x1f &lt;&lt; MMU_LOCK_BASE_SHIFT)
 #define MMU_LOCK_BASE(x)	\
<span class="p_header">diff --git a/drivers/iommu/omap-iommu.h b/drivers/iommu/omap-iommu.h</span>
<span class="p_header">index 59628e5..3cd414a 100644</span>
<span class="p_header">--- a/drivers/iommu/omap-iommu.h</span>
<span class="p_header">+++ b/drivers/iommu/omap-iommu.h</span>
<span class="p_chunk">@@ -14,6 +14,7 @@</span> <span class="p_context"></span>
 #define _OMAP_IOMMU_H
 
 #include &lt;linux/bitops.h&gt;
<span class="p_add">+#include &lt;linux/iommu.h&gt;</span>
 
 #define for_each_iotlb_cr(obj, n, __i, cr)				\
 	for (__i = 0;							\
<span class="p_chunk">@@ -27,6 +28,22 @@</span> <span class="p_context"> struct iotlb_entry {</span>
 	u32 endian, elsz, mixed;
 };
 
<span class="p_add">+/**</span>
<span class="p_add">+ * struct omap_iommu_domain - omap iommu domain</span>
<span class="p_add">+ * @pgtable:	the page table</span>
<span class="p_add">+ * @iommu_dev:	an omap iommu device attached to this domain. only a single</span>
<span class="p_add">+ *		iommu device can be attached for now.</span>
<span class="p_add">+ * @dev:	Device using this domain.</span>
<span class="p_add">+ * @lock:	domain lock, should be taken when attaching/detaching</span>
<span class="p_add">+ */</span>
<span class="p_add">+struct omap_iommu_domain {</span>
<span class="p_add">+	u32 *pgtable;</span>
<span class="p_add">+	struct omap_iommu *iommu_dev;</span>
<span class="p_add">+	struct device *dev;</span>
<span class="p_add">+	spinlock_t lock;</span>
<span class="p_add">+	struct iommu_domain domain;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 struct omap_iommu {
 	const char	*name;
 	void __iomem	*regbase;
<span class="p_chunk">@@ -52,6 +69,21 @@</span> <span class="p_context"> struct omap_iommu {</span>
 	u32 id;
 };
 
<span class="p_add">+/**</span>
<span class="p_add">+ * struct iommu_arch_data - omap iommu private data</span>
<span class="p_add">+ * @name: name of the iommu device</span>
<span class="p_add">+ * @iommu_dev: handle of the iommu device</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * This is an omap iommu private data object, which binds an iommu user</span>
<span class="p_add">+ * to its iommu device. This object should be placed at the iommu user&#39;s</span>
<span class="p_add">+ * dev_archdata so generic IOMMU API can be used without having to</span>
<span class="p_add">+ * utilize omap-specific plumbing anymore.</span>
<span class="p_add">+ */</span>
<span class="p_add">+struct omap_iommu_arch_data {</span>
<span class="p_add">+	const char *name;</span>
<span class="p_add">+	struct omap_iommu *iommu_dev;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 struct cr_regs {
 	u32 cam;
 	u32 ram;
<span class="p_header">diff --git a/include/linux/platform_data/iommu-omap.h b/include/linux/platform_data/iommu-omap.h</span>
<span class="p_header">index 0496d17..8c2a77c 100644</span>
<span class="p_header">--- a/include/linux/platform_data/iommu-omap.h</span>
<span class="p_header">+++ b/include/linux/platform_data/iommu-omap.h</span>
<span class="p_chunk">@@ -14,21 +14,6 @@</span> <span class="p_context"></span>
 
 #define MMU_REG_SIZE		256
 
<span class="p_del">-/**</span>
<span class="p_del">- * struct iommu_arch_data - omap iommu private data</span>
<span class="p_del">- * @name: name of the iommu device</span>
<span class="p_del">- * @iommu_dev: handle of the iommu device</span>
<span class="p_del">- *</span>
<span class="p_del">- * This is an omap iommu private data object, which binds an iommu user</span>
<span class="p_del">- * to its iommu device. This object should be placed at the iommu user&#39;s</span>
<span class="p_del">- * dev_archdata so generic IOMMU API can be used without having to</span>
<span class="p_del">- * utilize omap-specific plumbing anymore.</span>
<span class="p_del">- */</span>
<span class="p_del">-struct omap_iommu_arch_data {</span>
<span class="p_del">-	const char *name;</span>
<span class="p_del">-	struct omap_iommu *iommu_dev;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
 struct iommu_platform_data {
 	const char *name;
 	const char *reset_name;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



