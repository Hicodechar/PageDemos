
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[1/1] mm: vmstat: Add OOM victims count in vmstat counter - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [1/1] mm: vmstat: Add OOM victims count in vmstat counter</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=72438">Pintu Kumar</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 12, 2015, 1:33 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1444656800-29915-1-git-send-email-pintu.k@samsung.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7375291/mbox/"
   >mbox</a>
|
   <a href="/patch/7375291/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7375291/">/patch/7375291/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id DA91BBEEA4
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 12 Oct 2015 13:47:59 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id F34F420411
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 12 Oct 2015 13:47:58 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 9FEDE2082C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 12 Oct 2015 13:47:57 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752624AbbJLNry (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 12 Oct 2015 09:47:54 -0400
Received: from mailout4.samsung.com ([203.254.224.34]:33661 &quot;EHLO
	mailout4.samsung.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752183AbbJLNrw (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 12 Oct 2015 09:47:52 -0400
Received: from epcpsbgr1.samsung.com
	(u141.gpu120.samsung.co.kr [203.254.230.141])
	by mailout4.samsung.com (Oracle Communications Messaging Server
	7.0.5.31.0 64bit (built May  5 2014))
	with ESMTP id &lt;0NW4035W50ZQH610@mailout4.samsung.com&gt; for
	linux-kernel@vger.kernel.org; Mon, 12 Oct 2015 22:47:50 +0900 (KST)
Received: from epcpsbgm1new.samsung.com ( [172.20.52.123])
	by epcpsbgr1.samsung.com (EPCPMTA) with SMTP id 6D.A6.05274.60ABB165;
	Mon, 12 Oct 2015 22:47:50 +0900 (KST)
X-AuditID: cbfee68d-f79ae6d00000149a-12-561bba06eb6f
Received: from epmmp2 ( [203.254.227.17])	by epcpsbgm1new.samsung.com
	(EPCPMTA) with SMTP id F4.33.23663.60ABB165;
	Mon, 12 Oct 2015 22:47:50 +0900 (KST)
Received: from pintu-ubuntu.sisodomain.com ([107.108.86.218])
	by mmp2.samsung.com
	(Oracle Communications Messaging Server 7.0.5.31.0 64bit (built May 5
	2014)) with ESMTPA id &lt;0NW40026U0V7I370@mmp2.samsung.com&gt;; Mon,
	12 Oct 2015 22:47:50 +0900 (KST)
From: Pintu Kumar &lt;pintu.k@samsung.com&gt;
To: akpm@linux-foundation.org, minchan@kernel.org, dave@stgolabs.net,
	pintu.k@samsung.com, mhocko@suse.cz, koct9i@gmail.com,
	rientjes@google.com, hannes@cmpxchg.org,
	penguin-kernel@i-love.sakura.ne.jp, bywxiaobai@163.com,
	mgorman@suse.de, vbabka@suse.cz, js1304@gmail.com,
	kirill.shutemov@linux.intel.com, alexander.h.duyck@redhat.com,
	sasha.levin@oracle.com, cl@linux.com, fengguang.wu@intel.com,
	linux-kernel@vger.kernel.org, linux-mm@kvack.org
Cc: cpgs@samsung.com, pintu_agarwal@yahoo.com, pintu.ping@gmail.com,
	vishnu.ps@samsung.com, rohit.kr@samsung.com,
	c.rajkumar@samsung.com, sreenathd@samsung.com
Subject: [PATCH 1/1] mm: vmstat: Add OOM victims count in vmstat counter
Date: Mon, 12 Oct 2015 19:03:20 +0530
Message-id: &lt;1444656800-29915-1-git-send-email-pintu.k@samsung.com&gt;
X-Mailer: git-send-email 1.7.9.5
In-reply-to: &lt;1443696523-27262-1-git-send-email-pintu.k@samsung.com&gt;
References: &lt;1443696523-27262-1-git-send-email-pintu.k@samsung.com&gt;
X-Brightmail-Tracker: H4sIAAAAAAAAAzWSf1DLcRjHfb4/t12d722Vj3UcHcKdWD/4YH7c5Y/PPxzX6Q/nsOarnG3t
	tsqvO3QjlIbKNlpuGclaxi5SRzfLH6hOfiRkOCQljbB+qNjs/Pd+nvfreT/PH4+AFA9SUsFO
	TQ6v0yhUcYyIckYl71/ANMamL6p8n4CsLieDxibMFDJa41FRWSmBOgP9APV656Gal06A/D0u
	EtW416Kzdypo9LLHSqErx9/R6GmjlUFvnH9oVDrwCaA+wxCNqn75WVR+eIBGxqFmFnX2migU
	+NrFooKL1wnUYzhCIfu9LhIVfTBQqDzfCFCZ0QdWx2J7dRmNm/v9JG4452OxzZ2LG2odBLbf
	7iWw23Gcwe7BEhbft/ym8MdnZgKff7ABf+9+RWF/UweDjXUOgM+UH8SttnvseskmkXw7r9qZ
	x+sWrtwmyno94CO0z6bvKWuyUofAR1gIhALIJcOht5V0WMfA9jcuphCIBGKuGsA/HZ/p/1DJ
	lQ42bJwD8OboOBUu8gnoahlnQxTDxcPh/t8gZERxD0lodjaRoYLk7AAeHTH9oyQchoUeLxnS
	FDcbXjj5kwnpSC4Vjv64HJwWBPfNgNYSeagt5NbAuku1ZKgtDiL1trxQJOQMQthq+R/DwUCp
	lwqPToNuDxm+eiq8W/2COgUkNjDJAaJ5rVKrz8jUyRL0CrU+V5OZoMxWu0HwFVomPhXfAl2e
	5V7ACUBcRKSgTpouphV5+r1qL0gJbjhNSqOV2cHv0eRslSUtTkQpySlJiUuWLo6bEjlTOpIm
	5jIVOfwuntfyuq26XBWv9wJCIJQeAlbVo+Wxa7PBY9OJihiZKSPjScTFMVk3W7XDbOr+JlmV
	1nDj2BJFy+3dlZbWL762tkbNWPHG0mPOvZbnw+tSowmJuq9Ybg/Mtshr2cnM1bnKOZc8j2eN
	uzpr54lmobTN01Yo+lrE3YH8oi3LuqrK99Xv+DGyLkJ24FpbkV/enl4QR+mzFLL5pE6v+AtZ
	WHFTBQMAAA==
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFtrPKsWRmVeSWpSXmKPExsVy+t9jQV22XdJhBjsXq1jMWb+GzeLPv+ks
	Fn1z1C26p0xmsrj+7Q2jxctDmharb65htHj/fD2zxepNvhYz985ltbj5fA6LxcrOB6wWl3fN
	YbO4t+Y/q8Xkd88YLV41f2e1WPb1PbvF7JZ3rBZ93w+zW1x/OY3F4tvb2+wWbUs2Mlk8b25l
	sVh85DazRffjZhaL2Y19jBZT+u4yOkh7LF4xhdXj8Jv3zB47Z91l91iwqdRj59pVTB6L97xk
	8ti0qpPNY9OnSeweJ2b8ZvF4cmU6k8e8k4EeH5/eYvF4v+8qm0ffllWMHlNn13ucWXCEPUA4
	qoHRJiM1MSW1SCE1Lzk/JTMv3VbJOzjeOd7UzMBQ19DSwlxJIS8xN9VWycUnQNctMwcYOkoK
	ZYk5pUChgMTiYiV9O0wTQkPcdC1gGiN0fUOC4HqMDNBAwhrGjDvv7jIVXJGrmLJvDksD4xOJ
	LkZODgkBE4lJK6+yQ9hiEhfurWfrYuTiEBKYxSix7ddfFginkUli/em/YFVsAuoSP978ZgRJ
	iAicYpaYvmYfM4jDLLCYUaL95zSwKmEBD4muA4eYQWwWAVWJRf1f2EBsXgFniV+flwN1cwDt
	U5CYM8kGJMwp4CKxZelaZpCwEFDJ9gVlExh5FzAyrGKUSC1ILihOSs81zEst1ytOzC0uzUvX
	S87P3cQITjzPpHYwHtzlfohRgINRiYeXY4tUmBBrYllxZe4hRgkOZiURXqWJ0mFCvCmJlVWp
	RfnxRaU5qcWHGE2BzprILCWanA9Minkl8YbGJuamxqaWJhYmZpZK4rw3DjGECQmkJ5akZqem
	FqQWwfQxcXBKNTDGiD1LmPwi4t9y95Of78ToSzP6qu1TkJiZkfToweWNB2NDpi7Lb+A8ZOYp
	4ah7yWTX6S3xEZueRYQ0T4nnfhr33FjEQUZhQ5RU+NqmGvbIuUd8lzdv37To3ukZkV93/f7e
	+TJb+sOraRt2fT8ZeMystClizbONFe48p9O/hpltf+uxuXjP4ZUPlFiKMxINtZiLihMBCguI
	vVIDAAA=
DLP-Filter: Pass
X-MTR: 20000000000000000@CPGS
X-CFilter-Loop: Reflected
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72438">Pintu Kumar</a> - Oct. 12, 2015, 1:33 p.m.</div>
<pre class="content">
This patch maintains the number of oom victims kill count in
/proc/vmstat.
Currently, we are dependent upon kernel logs when the kernel OOM occurs.
But kernel OOM can went passed unnoticed by the developer as it can
silently kill some background applications/services.
In some small embedded system, it might be possible that OOM is captured
in the logs but it was over-written due to ring-buffer.
Thus this interface can quickly help the user in analyzing, whether there
were any OOM kill happened in the past, or whether the system have ever
entered the oom kill stage till date.

Thus, it can be beneficial under following cases:
1. User can monitor kernel oom kill scenario without looking into the
   kernel logs.
2. It can help in tuning the watermark level in the system.
3. It can help in tuning the low memory killer behavior in user space.
4. It can be helpful on a logless system or if klogd logging
   (/var/log/messages) are disabled.

A snapshot of the result of 3 days of over night test is shown below:
System: ARM Cortex A7, 1GB RAM, 8GB EMMC
Linux: 3.10.xx
Category: reference smart phone device
Loglevel: 7
Conditions: Fully loaded, BT/WiFi/GPS ON
Tests: auto launching of ~30+ apps using test scripts, in a loop for
3 days.
At the end of tests, check:
$ cat /proc/vmstat
nr_oom_victims 6

As we noticed, there were around 6 oom kill victims.

The OOM is bad for any system. So, this counter can help in quickly
tuning the OOM behavior of the system, without depending on the logs.
<span class="signed-off-by">
Signed-off-by: Pintu Kumar &lt;pintu.k@samsung.com&gt;</span>
---
 include/linux/vm_event_item.h |    1 +
 mm/oom_kill.c                 |    2 ++
 mm/page_alloc.c               |    1 -
 mm/vmstat.c                   |    1 +
 4 files changed, 4 insertions(+), 1 deletion(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72438">Pintu Kumar</a> - Oct. 12, 2015, 2:44 p.m.</div>
<pre class="content">
Hi,

Sorry, I forgot to mention the V2 update.
I will highlight the V2 changes and RESEND.
<span class="quote">
&gt; -----Original Message-----</span>
<span class="quote">&gt; From: Pintu Kumar [mailto:pintu.k@samsung.com]</span>
<span class="quote">&gt; Sent: Monday, October 12, 2015 7:03 PM</span>
<span class="quote">&gt; To: akpm@linux-foundation.org; minchan@kernel.org; dave@stgolabs.net;</span>
<span class="quote">&gt; pintu.k@samsung.com; mhocko@suse.cz; koct9i@gmail.com;</span>
<span class="quote">&gt; rientjes@google.com; hannes@cmpxchg.org; penguin-kernel@i-</span>
<span class="quote">&gt; love.sakura.ne.jp; bywxiaobai@163.com; mgorman@suse.de; vbabka@suse.cz;</span>
<span class="quote">&gt; js1304@gmail.com; kirill.shutemov@linux.intel.com;</span>
<span class="quote">&gt; alexander.h.duyck@redhat.com; sasha.levin@oracle.com; cl@linux.com;</span>
<span class="quote">&gt; fengguang.wu@intel.com; linux-kernel@vger.kernel.org; linux-mm@kvack.org</span>
<span class="quote">&gt; Cc: cpgs@samsung.com; pintu_agarwal@yahoo.com; pintu.ping@gmail.com;</span>
<span class="quote">&gt; vishnu.ps@samsung.com; rohit.kr@samsung.com; c.rajkumar@samsung.com;</span>
<span class="quote">&gt; sreenathd@samsung.com</span>
<span class="quote">&gt; Subject: [PATCH 1/1] mm: vmstat: Add OOM victims count in vmstat counter</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This patch maintains the number of oom victims kill count in /proc/vmstat.</span>
<span class="quote">&gt; Currently, we are dependent upon kernel logs when the kernel OOM occurs.</span>
<span class="quote">&gt; But kernel OOM can went passed unnoticed by the developer as it can silently</span>
<span class="quote">&gt; kill some background applications/services.</span>
<span class="quote">&gt; In some small embedded system, it might be possible that OOM is captured in</span>
<span class="quote">&gt; the logs but it was over-written due to ring-buffer.</span>
<span class="quote">&gt; Thus this interface can quickly help the user in analyzing, whether there were</span>
<span class="quote">&gt; any OOM kill happened in the past, or whether the system have ever entered</span>
<span class="quote">&gt; the oom kill stage till date.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Thus, it can be beneficial under following cases:</span>
<span class="quote">&gt; 1. User can monitor kernel oom kill scenario without looking into the</span>
<span class="quote">&gt;    kernel logs.</span>
<span class="quote">&gt; 2. It can help in tuning the watermark level in the system.</span>
<span class="quote">&gt; 3. It can help in tuning the low memory killer behavior in user space.</span>
<span class="quote">&gt; 4. It can be helpful on a logless system or if klogd logging</span>
<span class="quote">&gt;    (/var/log/messages) are disabled.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; A snapshot of the result of 3 days of over night test is shown below:</span>
<span class="quote">&gt; System: ARM Cortex A7, 1GB RAM, 8GB EMMC</span>
<span class="quote">&gt; Linux: 3.10.xx</span>
<span class="quote">&gt; Category: reference smart phone device</span>
<span class="quote">&gt; Loglevel: 7</span>
<span class="quote">&gt; Conditions: Fully loaded, BT/WiFi/GPS ON</span>
<span class="quote">&gt; Tests: auto launching of ~30+ apps using test scripts, in a loop for</span>
<span class="quote">&gt; 3 days.</span>
<span class="quote">&gt; At the end of tests, check:</span>
<span class="quote">&gt; $ cat /proc/vmstat</span>
<span class="quote">&gt; nr_oom_victims 6</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; As we noticed, there were around 6 oom kill victims.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The OOM is bad for any system. So, this counter can help in quickly tuning the</span>
<span class="quote">&gt; OOM behavior of the system, without depending on the logs.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Pintu Kumar &lt;pintu.k@samsung.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  include/linux/vm_event_item.h |    1 +</span>
<span class="quote">&gt;  mm/oom_kill.c                 |    2 ++</span>
<span class="quote">&gt;  mm/page_alloc.c               |    1 -</span>
<span class="quote">&gt;  mm/vmstat.c                   |    1 +</span>
<span class="quote">&gt;  4 files changed, 4 insertions(+), 1 deletion(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/include/linux/vm_event_item.h b/include/linux/vm_event_item.h</span>
<span class="quote">&gt; index 2b1cef8..dd2600d 100644</span>
<span class="quote">&gt; --- a/include/linux/vm_event_item.h</span>
<span class="quote">&gt; +++ b/include/linux/vm_event_item.h</span>
<span class="quote">&gt; @@ -57,6 +57,7 @@ enum vm_event_item { PGPGIN, PGPGOUT, PSWPIN,</span>
<span class="quote">&gt; PSWPOUT,  #ifdef CONFIG_HUGETLB_PAGE</span>
<span class="quote">&gt;  		HTLB_BUDDY_PGALLOC, HTLB_BUDDY_PGALLOC_FAIL,  #endif</span>
<span class="quote">&gt; +		NR_OOM_VICTIMS,</span>
<span class="quote">&gt;  		UNEVICTABLE_PGCULLED,	/* culled to noreclaim list */</span>
<span class="quote">&gt;  		UNEVICTABLE_PGSCANNED,	/* scanned for reclaimability */</span>
<span class="quote">&gt;  		UNEVICTABLE_PGRESCUED,	/* rescued from noreclaim list */</span>
<span class="quote">&gt; diff --git a/mm/oom_kill.c b/mm/oom_kill.c index 03b612b..802b8a1 100644</span>
<span class="quote">&gt; --- a/mm/oom_kill.c</span>
<span class="quote">&gt; +++ b/mm/oom_kill.c</span>
<span class="quote">&gt; @@ -570,6 +570,7 @@ void oom_kill_process(struct oom_control *oc, struct</span>
<span class="quote">&gt; task_struct *p,</span>
<span class="quote">&gt;  	 * space under its control.</span>
<span class="quote">&gt;  	 */</span>
<span class="quote">&gt;  	do_send_sig_info(SIGKILL, SEND_SIG_FORCED, victim, true);</span>
<span class="quote">&gt; +	count_vm_event(NR_OOM_VICTIMS);</span>
<span class="quote">&gt;  	mark_oom_victim(victim);</span>
<span class="quote">&gt;  	pr_err(&quot;Killed process %d (%s) total-vm:%lukB, anon-rss:%lukB, file-</span>
<span class="quote">&gt; rss:%lukB\n&quot;,</span>
<span class="quote">&gt;  		task_pid_nr(victim), victim-&gt;comm, K(victim-&gt;mm-&gt;total_vm),</span>
<span class="quote">&gt; @@ -600,6 +601,7 @@ void oom_kill_process(struct oom_control *oc, struct</span>
<span class="quote">&gt; task_struct *p,</span>
<span class="quote">&gt;  				task_pid_nr(p), p-&gt;comm);</span>
<span class="quote">&gt;  			task_unlock(p);</span>
<span class="quote">&gt;  			do_send_sig_info(SIGKILL, SEND_SIG_FORCED, p, true);</span>
<span class="quote">&gt; +			count_vm_event(NR_OOM_VICTIMS);</span>
<span class="quote">&gt;  		}</span>
<span class="quote">&gt;  	rcu_read_unlock();</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/mm/page_alloc.c b/mm/page_alloc.c index 9bcfd70..fafb09d 100644</span>
<span class="quote">&gt; --- a/mm/page_alloc.c</span>
<span class="quote">&gt; +++ b/mm/page_alloc.c</span>
<span class="quote">&gt; @@ -2761,7 +2761,6 @@ __alloc_pages_may_oom(gfp_t gfp_mask, unsigned</span>
<span class="quote">&gt; int order,</span>
<span class="quote">&gt;  		schedule_timeout_uninterruptible(1);</span>
<span class="quote">&gt;  		return NULL;</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  	/*</span>
<span class="quote">&gt;  	 * Go through the zonelist yet one more time, keep very high watermark</span>
<span class="quote">&gt;  	 * here, this is only to catch a parallel oom killing, we must fail if</span>
diff --git
<span class="quote">&gt; a/mm/vmstat.c b/mm/vmstat.c index 1fd0886..8503a2e 100644</span>
<span class="quote">&gt; --- a/mm/vmstat.c</span>
<span class="quote">&gt; +++ b/mm/vmstat.c</span>
<span class="quote">&gt; @@ -808,6 +808,7 @@ const char * const vmstat_text[] = {</span>
<span class="quote">&gt;  	&quot;htlb_buddy_alloc_success&quot;,</span>
<span class="quote">&gt;  	&quot;htlb_buddy_alloc_fail&quot;,</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt; +	&quot;nr_oom_victims&quot;,</span>
<span class="quote">&gt;  	&quot;unevictable_pgs_culled&quot;,</span>
<span class="quote">&gt;  	&quot;unevictable_pgs_scanned&quot;,</span>
<span class="quote">&gt;  	&quot;unevictable_pgs_rescued&quot;,</span>
<span class="quote">&gt; --</span>
<span class="quote">&gt; 1.7.9.5</span>

Regards,
Pintu

--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/linux/vm_event_item.h b/include/linux/vm_event_item.h</span>
<span class="p_header">index 2b1cef8..dd2600d 100644</span>
<span class="p_header">--- a/include/linux/vm_event_item.h</span>
<span class="p_header">+++ b/include/linux/vm_event_item.h</span>
<span class="p_chunk">@@ -57,6 +57,7 @@</span> <span class="p_context"> enum vm_event_item { PGPGIN, PGPGOUT, PSWPIN, PSWPOUT,</span>
 #ifdef CONFIG_HUGETLB_PAGE
 		HTLB_BUDDY_PGALLOC, HTLB_BUDDY_PGALLOC_FAIL,
 #endif
<span class="p_add">+		NR_OOM_VICTIMS,</span>
 		UNEVICTABLE_PGCULLED,	/* culled to noreclaim list */
 		UNEVICTABLE_PGSCANNED,	/* scanned for reclaimability */
 		UNEVICTABLE_PGRESCUED,	/* rescued from noreclaim list */
<span class="p_header">diff --git a/mm/oom_kill.c b/mm/oom_kill.c</span>
<span class="p_header">index 03b612b..802b8a1 100644</span>
<span class="p_header">--- a/mm/oom_kill.c</span>
<span class="p_header">+++ b/mm/oom_kill.c</span>
<span class="p_chunk">@@ -570,6 +570,7 @@</span> <span class="p_context"> void oom_kill_process(struct oom_control *oc, struct task_struct *p,</span>
 	 * space under its control.
 	 */
 	do_send_sig_info(SIGKILL, SEND_SIG_FORCED, victim, true);
<span class="p_add">+	count_vm_event(NR_OOM_VICTIMS);</span>
 	mark_oom_victim(victim);
 	pr_err(&quot;Killed process %d (%s) total-vm:%lukB, anon-rss:%lukB, file-rss:%lukB\n&quot;,
 		task_pid_nr(victim), victim-&gt;comm, K(victim-&gt;mm-&gt;total_vm),
<span class="p_chunk">@@ -600,6 +601,7 @@</span> <span class="p_context"> void oom_kill_process(struct oom_control *oc, struct task_struct *p,</span>
 				task_pid_nr(p), p-&gt;comm);
 			task_unlock(p);
 			do_send_sig_info(SIGKILL, SEND_SIG_FORCED, p, true);
<span class="p_add">+			count_vm_event(NR_OOM_VICTIMS);</span>
 		}
 	rcu_read_unlock();
 
<span class="p_header">diff --git a/mm/page_alloc.c b/mm/page_alloc.c</span>
<span class="p_header">index 9bcfd70..fafb09d 100644</span>
<span class="p_header">--- a/mm/page_alloc.c</span>
<span class="p_header">+++ b/mm/page_alloc.c</span>
<span class="p_chunk">@@ -2761,7 +2761,6 @@</span> <span class="p_context"> __alloc_pages_may_oom(gfp_t gfp_mask, unsigned int order,</span>
 		schedule_timeout_uninterruptible(1);
 		return NULL;
 	}
<span class="p_del">-</span>
 	/*
 	 * Go through the zonelist yet one more time, keep very high watermark
 	 * here, this is only to catch a parallel oom killing, we must fail if
<span class="p_header">diff --git a/mm/vmstat.c b/mm/vmstat.c</span>
<span class="p_header">index 1fd0886..8503a2e 100644</span>
<span class="p_header">--- a/mm/vmstat.c</span>
<span class="p_header">+++ b/mm/vmstat.c</span>
<span class="p_chunk">@@ -808,6 +808,7 @@</span> <span class="p_context"> const char * const vmstat_text[] = {</span>
 	&quot;htlb_buddy_alloc_success&quot;,
 	&quot;htlb_buddy_alloc_fail&quot;,
 #endif
<span class="p_add">+	&quot;nr_oom_victims&quot;,</span>
 	&quot;unevictable_pgs_culled&quot;,
 	&quot;unevictable_pgs_scanned&quot;,
 	&quot;unevictable_pgs_rescued&quot;,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



