
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[35/44] x86: remove arch specific dma_supported implementation - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [35/44] x86: remove arch specific dma_supported implementation</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 16, 2017, 6:10 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170616181059.19206-36-hch@lst.de&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9792831/mbox/"
   >mbox</a>
|
   <a href="/patch/9792831/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9792831/">/patch/9792831/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	BE0BC60326 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Jun 2017 18:16:46 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B990E2834A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Jun 2017 18:16:46 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id AE6882866C; Fri, 16 Jun 2017 18:16:46 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 2DA012834A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Jun 2017 18:16:46 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753405AbdFPSNe (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 16 Jun 2017 14:13:34 -0400
Received: from bombadil.infradead.org ([65.50.211.133]:51739 &quot;EHLO
	bombadil.infradead.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753369AbdFPSNY (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 16 Jun 2017 14:13:24 -0400
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=infradead.org; s=bombadil.20170209;
	h=References:In-Reply-To:Message-Id:
	Date:Subject:Cc:To:From:Sender:Reply-To:MIME-Version:Content-Type:
	Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
	Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
	List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
	bh=vSHdJ0fRN3QhYzmwkOg9MVJJCwgAKWOmRXXsBosPrLA=;
	b=s6sm8SHy1u7ZUfijHkD30WP6O
	t17xJ7UwTMyOGFdiGinHphgpSkT4Je5L+WBKA9ku7D7nNuXWF3NUuYSCjy2Gg/pzHe6DoDDiKEd2h
	zpoOD0C4HTPB2EMn0DyV/vptLREAQ/5i99okV6Tk8F3pgYXi05Nh8K0zWLY+TjxQVWQeB1cjb16hV
	SI/ffQ5VkWwsd/1/eZgNTZpaJV3B2dER3V7m+IfHisVF2cplW0Y5WoAjpfNeYjP2GA0JNlE0MUcxy
	gEbnpblEqjOexY8Q+JOHdonp7kfsxxdqydbF7WPtNlg9i6XA5VAEUSnEHbcJRbBevwOIIHaRKoSEe
	LXPEvWN9w==;
Received: from clnet-p099-196.ikbnet.co.at ([83.175.99.196] helo=localhost)
	by bombadil.infradead.org with esmtpsa (Exim 4.87 #1 (Red Hat
	Linux)) id 1dLvk9-0006kK-EH; Fri, 16 Jun 2017 18:13:14 +0000
From: Christoph Hellwig &lt;hch@lst.de&gt;
To: x86@kernel.org, linux-arm-kernel@lists.infradead.org,
	xen-devel@lists.xenproject.org, linux-c6x-dev@linux-c6x.org,
	linux-hexagon@vger.kernel.org, linux-ia64@vger.kernel.org,
	linux-mips@linux-mips.org, openrisc@lists.librecores.org,
	linuxppc-dev@lists.ozlabs.org, linux-s390@vger.kernel.org,
	linux-sh@vger.kernel.org, sparclinux@vger.kernel.org,
	linux-xtensa@linux-xtensa.org, dmaengine@vger.kernel.org,
	linux-tegra@vger.kernel.org, dri-devel@lists.freedesktop.org,
	linux-samsung-soc@vger.kernel.org,
	iommu@lists.linux-foundation.org, netdev@vger.kernel.org
Cc: linux-kernel@vger.kernel.org
Subject: [PATCH 35/44] x86: remove arch specific dma_supported implementation
Date: Fri, 16 Jun 2017 20:10:50 +0200
Message-Id: &lt;20170616181059.19206-36-hch@lst.de&gt;
X-Mailer: git-send-email 2.11.0
In-Reply-To: &lt;20170616181059.19206-1-hch@lst.de&gt;
References: &lt;20170616181059.19206-1-hch@lst.de&gt;
X-SRS-Rewrite: SMTP reverse-path rewritten from &lt;hch@infradead.org&gt; by
	bombadil.infradead.org. See http://www.infradead.org/rpr.html
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a> - June 16, 2017, 6:10 p.m.</div>
<pre class="content">
And instead wire it up as method for all the dma_map_ops instances.

Note that this also means the arch specific check will be fully instead
of partially applied in the AMD iommu driver.
<span class="signed-off-by">
Signed-off-by: Christoph Hellwig &lt;hch@lst.de&gt;</span>
---
 arch/x86/include/asm/dma-mapping.h | 3 ---
 arch/x86/include/asm/iommu.h       | 2 ++
 arch/x86/kernel/amd_gart_64.c      | 1 +
 arch/x86/kernel/pci-calgary_64.c   | 1 +
 arch/x86/kernel/pci-dma.c          | 7 +------
 arch/x86/kernel/pci-nommu.c        | 1 +
 arch/x86/pci/sta2x11-fixup.c       | 3 ++-
 drivers/iommu/amd_iommu.c          | 2 ++
 drivers/iommu/intel-iommu.c        | 3 +++
 9 files changed, 13 insertions(+), 10 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/dma-mapping.h b/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_header">index c35d228aa381..398c79889f5c 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -33,9 +33,6 @@</span> <span class="p_context"> static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 bool arch_dma_alloc_attrs(struct device **dev, gfp_t *gfp);
 #define arch_dma_alloc_attrs arch_dma_alloc_attrs
 
<span class="p_del">-#define HAVE_ARCH_DMA_SUPPORTED 1</span>
<span class="p_del">-extern int dma_supported(struct device *hwdev, u64 mask);</span>
<span class="p_del">-</span>
 extern void *dma_generic_alloc_coherent(struct device *dev, size_t size,
 					dma_addr_t *dma_addr, gfp_t flag,
 					unsigned long attrs);
<span class="p_header">diff --git a/arch/x86/include/asm/iommu.h b/arch/x86/include/asm/iommu.h</span>
<span class="p_header">index 793869879464..fca144a104e4 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/iommu.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/iommu.h</span>
<span class="p_chunk">@@ -6,6 +6,8 @@</span> <span class="p_context"> extern int force_iommu, no_iommu;</span>
 extern int iommu_detected;
 extern int iommu_pass_through;
 
<span class="p_add">+int x86_dma_supported(struct device *dev, u64 mask);</span>
<span class="p_add">+</span>
 /* 10 seconds */
 #define DMAR_OPERATION_TIMEOUT ((cycles_t) tsc_khz*10*1000)
 
<span class="p_header">diff --git a/arch/x86/kernel/amd_gart_64.c b/arch/x86/kernel/amd_gart_64.c</span>
<span class="p_header">index 815dd63f49d0..cc0e8bc0ea3f 100644</span>
<span class="p_header">--- a/arch/x86/kernel/amd_gart_64.c</span>
<span class="p_header">+++ b/arch/x86/kernel/amd_gart_64.c</span>
<span class="p_chunk">@@ -704,6 +704,7 @@</span> <span class="p_context"> static const struct dma_map_ops gart_dma_ops = {</span>
 	.alloc				= gart_alloc_coherent,
 	.free				= gart_free_coherent,
 	.mapping_error			= gart_mapping_error,
<span class="p_add">+	.dma_supported			= x86_dma_supported,</span>
 };
 
 static void gart_iommu_shutdown(void)
<span class="p_header">diff --git a/arch/x86/kernel/pci-calgary_64.c b/arch/x86/kernel/pci-calgary_64.c</span>
<span class="p_header">index e75b490f2b0b..5286a4a92cf7 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-calgary_64.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-calgary_64.c</span>
<span class="p_chunk">@@ -493,6 +493,7 @@</span> <span class="p_context"> static const struct dma_map_ops calgary_dma_ops = {</span>
 	.map_page = calgary_map_page,
 	.unmap_page = calgary_unmap_page,
 	.mapping_error = calgary_mapping_error,
<span class="p_add">+	.dma_supported = x86_dma_supported,</span>
 };
 
 static inline void __iomem * busno_to_bbar(unsigned char num)
<span class="p_header">diff --git a/arch/x86/kernel/pci-dma.c b/arch/x86/kernel/pci-dma.c</span>
<span class="p_header">index 3a216ec869cd..b6f5684be3b5 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-dma.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-dma.c</span>
<span class="p_chunk">@@ -213,10 +213,8 @@</span> <span class="p_context"> static __init int iommu_setup(char *p)</span>
 }
 early_param(&quot;iommu&quot;, iommu_setup);
 
<span class="p_del">-int dma_supported(struct device *dev, u64 mask)</span>
<span class="p_add">+int x86_dma_supported(struct device *dev, u64 mask)</span>
 {
<span class="p_del">-	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_del">-</span>
 #ifdef CONFIG_PCI
 	if (mask &gt; 0xffffffff &amp;&amp; forbid_dac &gt; 0) {
 		dev_info(dev, &quot;PCI: Disallowing DAC for device\n&quot;);
<span class="p_chunk">@@ -224,9 +222,6 @@</span> <span class="p_context"> int dma_supported(struct device *dev, u64 mask)</span>
 	}
 #endif
 
<span class="p_del">-	if (ops-&gt;dma_supported)</span>
<span class="p_del">-		return ops-&gt;dma_supported(dev, mask);</span>
<span class="p_del">-</span>
 	/* Copied from i386. Doesn&#39;t make much sense, because it will
 	   only work for pci_alloc_coherent.
 	   The caller just has to use GFP_DMA in this case. */
<span class="p_header">diff --git a/arch/x86/kernel/pci-nommu.c b/arch/x86/kernel/pci-nommu.c</span>
<span class="p_header">index 085fe6ce4049..a6d404087fe3 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-nommu.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-nommu.c</span>
<span class="p_chunk">@@ -104,4 +104,5 @@</span> <span class="p_context"> const struct dma_map_ops nommu_dma_ops = {</span>
 	.sync_sg_for_device	= nommu_sync_sg_for_device,
 	.is_phys		= 1,
 	.mapping_error		= nommu_mapping_error,
<span class="p_add">+	.dma_supported		= x86_dma_supported,</span>
 };
<span class="p_header">diff --git a/arch/x86/pci/sta2x11-fixup.c b/arch/x86/pci/sta2x11-fixup.c</span>
<span class="p_header">index ec008e800b45..53d600217973 100644</span>
<span class="p_header">--- a/arch/x86/pci/sta2x11-fixup.c</span>
<span class="p_header">+++ b/arch/x86/pci/sta2x11-fixup.c</span>
<span class="p_chunk">@@ -26,6 +26,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/pci_ids.h&gt;
 #include &lt;linux/export.h&gt;
 #include &lt;linux/list.h&gt;
<span class="p_add">+#include &lt;asm/iommu.h&gt;</span>
 
 #define STA2X11_SWIOTLB_SIZE (4*1024*1024)
 extern int swiotlb_late_init_with_default_size(size_t default_size);
<span class="p_chunk">@@ -191,7 +192,7 @@</span> <span class="p_context"> static const struct dma_map_ops sta2x11_dma_ops = {</span>
 	.sync_sg_for_cpu = swiotlb_sync_sg_for_cpu,
 	.sync_sg_for_device = swiotlb_sync_sg_for_device,
 	.mapping_error = swiotlb_dma_mapping_error,
<span class="p_del">-	.dma_supported = NULL, /* FIXME: we should use this instead! */</span>
<span class="p_add">+	.dma_supported = x86_dma_supported,</span>
 };
 
 /* At setup time, we use our own ops if the device is a ConneXt one */
<span class="p_header">diff --git a/drivers/iommu/amd_iommu.c b/drivers/iommu/amd_iommu.c</span>
<span class="p_header">index d41280e869de..521fdf2d41bc 100644</span>
<span class="p_header">--- a/drivers/iommu/amd_iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/amd_iommu.c</span>
<span class="p_chunk">@@ -2731,6 +2731,8 @@</span> <span class="p_context"> static void free_coherent(struct device *dev, size_t size,</span>
  */
 static int amd_iommu_dma_supported(struct device *dev, u64 mask)
 {
<span class="p_add">+	if (!x86_dma_supported(dev, mask))</span>
<span class="p_add">+		return 0;</span>
 	return check_device(dev);
 }
 
<span class="p_header">diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c</span>
<span class="p_header">index fc2765ccdb57..53cc0a393f04 100644</span>
<span class="p_header">--- a/drivers/iommu/intel-iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/intel-iommu.c</span>
<span class="p_chunk">@@ -3981,6 +3981,9 @@</span> <span class="p_context"> struct dma_map_ops intel_dma_ops = {</span>
 	.map_page = intel_map_page,
 	.unmap_page = intel_unmap_page,
 	.mapping_error = intel_mapping_error,
<span class="p_add">+#ifdef CONFIG_X86</span>
<span class="p_add">+	.dma_supported = x86_dma_supported,</span>
<span class="p_add">+#endif</span>
 };
 
 static inline int iommu_domain_cache_init(void)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



