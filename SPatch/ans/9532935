
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>phy: marvell: remove conflicting initializer - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    phy: marvell: remove conflicting initializer</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=176">Arnd Bergmann</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 23, 2017, 4:09 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;7242508.n9OCrlbXLu@wuerfel&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9532935/mbox/"
   >mbox</a>
|
   <a href="/patch/9532935/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9532935/">/patch/9532935/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	530986020B for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 23 Jan 2017 16:11:18 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 41627203B9
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 23 Jan 2017 16:11:18 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 346E628467; Mon, 23 Jan 2017 16:11:18 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 8B788203B9
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 23 Jan 2017 16:11:16 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751497AbdAWQLN convert rfc822-to-8bit (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 23 Jan 2017 11:11:13 -0500
Received: from mout.kundenserver.de ([212.227.126.131]:59963 &quot;EHLO
	mout.kundenserver.de&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751031AbdAWQLJ (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 23 Jan 2017 11:11:09 -0500
Received: from wuerfel.localnet ([78.43.21.235]) by mrelayeu.kundenserver.de
	(mreue005 [212.227.15.129]) with ESMTPSA (Nemesis) id
	0LqHEi-1c13Gn0tFI-00djn6; Mon, 23 Jan 2017 17:09:41 +0100
From: Arnd Bergmann &lt;arnd@arndb.de&gt;
To: Andrew Lunn &lt;andrew@lunn.ch&gt;
Cc: Florian Fainelli &lt;f.fainelli@gmail.com&gt;,
	&quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;,
	Charles-Antoine Couret &lt;charles-antoine.couret@nexvision.fr&gt;,
	Clemens Gruber &lt;clemens.gruber@pqgruber.com&gt;,
	netdev@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: Re: [PATCH] phy: marvell: remove conflicting initializer
Date: Mon, 23 Jan 2017 17:09:39 +0100
Message-ID: &lt;7242508.n9OCrlbXLu@wuerfel&gt;
User-Agent: KMail/5.1.3 (Linux/4.4.0-34-generic; KDE/5.18.0; x86_64; ; )
In-Reply-To: &lt;20170123151941.GG10895@lunn.ch&gt;
References: &lt;20170123121905.3245589-1-arnd@arndb.de&gt;
	&lt;20170123151941.GG10895@lunn.ch&gt;
MIME-Version: 1.0
Content-Transfer-Encoding: 8BIT
Content-Type: text/plain; charset=&quot;UTF-8&quot;
X-Provags-ID: V03:K0:A1VaBmstlvcoCACp3lguWPK1BIrMYgku/Fn31rQvNoDHe5KWFo7
	CcMLdJF29kniujRbNNvoLOEOwoKBaAzxwlcBWhPXLoumFv0h7sbVNyq1FWCQ79G1p4HJ/M1
	KB+Eczt1rnx7b5qc2rMlVyQexBhPJesbcT64AMeUJZ8tbCjjtV/aakQMb3J6s09eWw3CSbC
	bVQteXcOfpoZfp0ru7SoA==
X-UI-Out-Filterresults: notjunk:1; V01:K0:y5kWqS64f7Y=:CGflW/HEv1H+isfUcx5HiM
	Htr/TEo5A+GbWfuaFWY/dbYVU9911/GYEs10vnjYccKudFp+hIzPkYmrTZF128LEHdApJian3
	IYTLTSpIJcIPgpqfAdoIpTrQNEjt3YGbMz0hiYfelErEi4+3zyTwBUAo1eTHsR2LCNCMuPCXm
	JZEbMATb12vFjZlV8QkI7dYzY1duUaYXQMsx4SNnSaeajpFBfhKZSvay3NNwrp2hFROaySRLB
	P19H2SBqpr45PXFfUPksfBGjqIPD7I4tceCq1rt64BSi37nUGnbHj11RJ13013+zp3tq3qFQA
	JD2Wc1mSRV9eEJ0sHcnF6dyop1K2s+WGtoaWdriAeaOJL3fLa07I8yF/EmEkGeXCy9yCbFR3v
	IqYSPzglRqo+jY0X1FWvJhPCsYPoOQWvnB0XZXcaMHwEqqIvcYH7Vsly7Of8ujBhvyKB08OOM
	hRTIL+ZaBCDPtgnOsks66yMY8PZB9KJqc9WrNC8P1wi3dMmqUHR5MzDKcjuGuY6He8La5ErZB
	BkYDg1tMK8EYM4EsRywmcO6JvhWcyiBZRdWsRWyhINfDiefJ+tClOP0K7NwT1aDM7mTh3caaw
	da9HncbaCSEu1m2wfXfVyRwKfY2FSigVOCxNLDmNWfNCGtoyrcfs3SmmudBwy3mTCejBQL2Le
	4jM1wsQFO36CLu7WHcYtKttIvo5XCWgOkAtZ9fH40t5c3PZuQ+PjCbGTdJNoxVKi4mcoG/ioZ
	IJu4N7sI7mBugvMt
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=176">Arnd Bergmann</a> - Jan. 23, 2017, 4:09 p.m.</div>
<pre class="content">
On Monday, January 23, 2017 4:19:41 PM CET Andrew Lunn wrote:
<span class="quote">&gt; On Mon, Jan 23, 2017 at 01:18:41PM +0100, Arnd Bergmann wrote:</span>
<span class="quote">&gt; &gt; One line was apparently pasted incorrectly during a new feature patch:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; drivers/net/phy/marvell.c:2090:15: error: initialized field overwritten [-Werror=override-init]</span>
<span class="quote">&gt; &gt;    .features = PHY_GBIT_FEATURES,</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; I&#39;m removing the extraneous line here to avoid the W=1 warning and restore</span>
<span class="quote">&gt; &gt; the previous flags value, and I&#39;m slightly reordering the lines for consistency</span>
<span class="quote">&gt; &gt; to make it less likely to happen again in the future. The ordering in the</span>
<span class="quote">&gt; &gt; array is still not the same as in the structure definition, instead I picked</span>
<span class="quote">&gt; &gt; the order that is most common in this file and that seems to make more sense</span>
<span class="quote">&gt; &gt; here.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Fixes: 0b04680fdae4 (&quot;phy: marvell: Add support for temperature sensor&quot;)</span>
<span class="quote">&gt; &gt; Signed-off-by: Arnd Bergmann &lt;arnd@arndb.de&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Hi Arnd</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Thanks for this. I found one bug in my code while testing due to</span>
<span class="quote">&gt; duplicate probe initialisation. I was surprised at the time the</span>
<span class="quote">&gt; compiler did not warn me. I didn&#39;t think to try W=1. Is there any</span>
<span class="quote">&gt; legitimate need to allow multiple initialisation of a field? Can this</span>
<span class="quote">&gt; warning be made always on instead of only W=1?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Reviewed-by: Andrew Lunn &lt;andrew@lunn.ch&gt;</span>
<span class="quote">&gt; </span>

Great question! I have sent out patches for a couple of actual bugs that
came from this warning in the past few months.

I still have a couple of patches that I have not sent out so far,
I think they are all false-positives, and I have not found a good
workaround for most of them other than disabling the warning locally.

Once we get the patches below (or some other workaround) into the
kernel, we should definitely enable the warning by default.

	Arnd

 arch/arm64/kernel/sys.c                       |    1 +
 arch/arm64/kernel/sys32.c                     |    1 +
 arch/arm64/kernel/traps.c                     |    1 +
 arch/x86/kernel/cpu/common.c                  |    1 +
 drivers/block/drbd/drbd_main.c                |    7 +++----
 drivers/gpu/drm/gma500/Makefile               |    1 +
 drivers/gpu/drm/i915/Makefile                 |    1 +
 drivers/gpu/drm/omapdrm/omap_fbdev.c          |    3 +++
 drivers/net/ethernet/qlogic/qede/qede_dcbnl.c |    1 -
 drivers/net/ethernet/renesas/sh_eth.c         |    1 +
 fs/proc/task_mmu.c                            |    2 ++
 include/linux/libata.h                        |    1 +
 include/linux/perf/arm_pmu.h                  |    1 +
 kernel/bpf/core.c                             |    2 ++
 net/wimax/stack.c                             |    6 +++---
 sound/usb/quirks-table.h                      |    3 ++-
 17 files changed, 30 insertions(+), 16 deletions(-)

From b85020cd2c0da34c940b6a7d5d04a39e01fa3bf9 Mon Sep 17 00:00:00 2001
<span class="from">From: Arnd Bergmann &lt;arnd@arndb.de&gt;</span>
Date: Fri, 24 Jun 2016 15:04:14 +0200
Subject: [PATCH] arm64: turn off -Woverride-init false positives
<span class="signed-off-by">
Signed-off-by: Arnd Bergmann &lt;arnd@arndb.de&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=3921">Andrew Lunn</a> - Jan. 23, 2017, 4:28 p.m.</div>
<pre class="content">
<span class="quote">&gt; Great question! I have sent out patches for a couple of actual bugs that</span>
<span class="quote">&gt; came from this warning in the past few months.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I still have a couple of patches that I have not sent out so far,</span>
<span class="quote">&gt; I think they are all false-positives, and I have not found a good</span>
<span class="quote">&gt; workaround for most of them other than disabling the warning locally.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Once we get the patches below (or some other workaround) into the</span>
<span class="quote">&gt; kernel, we should definitely enable the warning by default.</span>

So it looks like some are from initialising a range of values with
a default value:

[0 ... SH_ETH_MAX_REGISTER_OFFSET - 1] = SH_ETH_OFFSET_INVALID

and then some entries specific values. Maybe the compiler can help out
here? A different warning in this case? And have that at W=1? Could
you ask the gcc folks about this?

Others causes seem like

226 #define DRM_FB_HELPER_DEFAULT_OPS \
227         .fb_check_var   = drm_fb_helper_check_var, \
228         .fb_set_par     = drm_fb_helper_set_par, \
229         .fb_setcmap     = drm_fb_helper_setcmap, \
230         .fb_blank       = drm_fb_helper_blank, \
231         .fb_pan_display = drm_fb_helper_pan_display

static struct fb_ops omap_fb_ops = {
        .owner = THIS_MODULE,
        DRM_FB_HELPER_DEFAULT_OPS,
...
        .fb_pan_display = omap_fbdev_pan_display,

There are at least three drivers which need to replace the
default fb_pan_display. So maybe a different macro?

	Andrew
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/kernel/sys.c b/arch/arm64/kernel/sys.c</span>
<span class="p_header">index 26fe8ea93ea2..ce84c7b821f9 100644</span>
<span class="p_header">--- a/arch/arm64/kernel/sys.c</span>
<span class="p_header">+++ b/arch/arm64/kernel/sys.c</span>
<span class="p_chunk">@@ -55,6 +55,7 @@</span> <span class="p_context"> asmlinkage long sys_rt_sigreturn_wrapper(void);</span>
 #undef __SYSCALL
 #define __SYSCALL(nr, sym)	[nr] = sym,
 
<span class="p_add">+#pragma GCC diagnostic ignored &quot;-Woverride-init&quot;</span>
 /*
  * The sys_call_table array must be 4K aligned to be accessible from
  * kernel/entry.S.
<span class="p_header">diff --git a/arch/arm64/kernel/sys32.c b/arch/arm64/kernel/sys32.c</span>
<span class="p_header">index a40b1343b819..78c768c9fe23 100644</span>
<span class="p_header">--- a/arch/arm64/kernel/sys32.c</span>
<span class="p_header">+++ b/arch/arm64/kernel/sys32.c</span>
<span class="p_chunk">@@ -42,6 +42,7 @@</span> <span class="p_context"> asmlinkage long compat_sys_mmap2_wrapper(void);</span>
 #undef __SYSCALL
 #define __SYSCALL(nr, sym)	[nr] = sym,
 
<span class="p_add">+#pragma GCC diagnostic ignored &quot;-Woverride-init&quot;</span>
 /*
  * The sys_call_table array must be 4K aligned to be accessible from
  * kernel/entry.S.
<span class="p_header">diff --git a/arch/arm64/kernel/traps.c b/arch/arm64/kernel/traps.c</span>
<span class="p_header">index ff290d569f41..d7c4e1088d49 100644</span>
<span class="p_header">--- a/arch/arm64/kernel/traps.c</span>
<span class="p_header">+++ b/arch/arm64/kernel/traps.c</span>
<span class="p_chunk">@@ -558,6 +558,7 @@</span> <span class="p_context"> asmlinkage long do_ni_syscall(struct pt_regs *regs)</span>
 	return sys_ni_syscall();
 }
 
<span class="p_add">+#pragma GCC diagnostic ignored &quot;-Woverride-init&quot;</span>
 static const char *esr_class_str[] = {
 	[0 ... ESR_ELx_EC_MAX]		= &quot;UNRECOGNIZED EC&quot;,
 	[ESR_ELx_EC_UNKNOWN]		= &quot;Unknown/Uncategorized&quot;,

From 975b03637d5362bbf99ad46d59dbf94b495cb78f Mon Sep 17 00:00:00 2001
From: Arnd Bergmann &lt;arnd@arndb.de&gt;
Date: Tue, 3 Jan 2017 15:35:07 +0100
Subject: [PATCH] drm: fix override-init warnings

Signed-off-by: Arnd Bergmann &lt;arnd@arndb.de&gt;

<span class="p_header">diff --git a/drivers/gpu/drm/gma500/Makefile b/drivers/gpu/drm/gma500/Makefile</span>
<span class="p_header">index 190e55f2f891..3ff5f58db4f4 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/gma500/Makefile</span>
<span class="p_header">+++ b/drivers/gpu/drm/gma500/Makefile</span>
<span class="p_chunk">@@ -2,6 +2,7 @@</span> <span class="p_context"></span>
 #	KMS driver for the GMA500
 #
 ccflags-y += -I$(srctree)/include/drm
<span class="p_add">+CFLAGS_framebuffer.o += $(call cc-disable-warning, override-init)</span>
 
 gma500_gfx-y += \
 	  accel_2d.o \
<span class="p_header">diff --git a/drivers/gpu/drm/i915/Makefile b/drivers/gpu/drm/i915/Makefile</span>
<span class="p_header">index 74ca2e8b2494..fb1342d59a7c 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/i915/Makefile</span>
<span class="p_header">+++ b/drivers/gpu/drm/i915/Makefile</span>
<span class="p_chunk">@@ -5,6 +5,7 @@</span> <span class="p_context"></span>
 subdir-ccflags-$(CONFIG_DRM_I915_WERROR) := -Werror
 subdir-ccflags-y += \
 	$(call as-instr,movntdqa (%eax)$(comma)%xmm0,-DCONFIG_AS_MOVNTDQA)
<span class="p_add">+subdir-ccflags-y += $(call cc-disable-warning, override-init)</span>
 
 # Please keep these build lists sorted!
 

From af178eec23da3e549b7ac5360c213955059d9f16 Mon Sep 17 00:00:00 2001
From: Arnd Bergmann &lt;arnd@arndb.de&gt;
Date: Tue, 15 Nov 2016 14:10:37 +0100
Subject: [PATCH] [HACK] drm: omapdrm: field override

../drivers/gpu/drm/omapdrm/omap_fbdev.c:96:20: error: initialized field overwritten [-Werror=override-init]
  .fb_pan_display = omap_fbdev_pan_display,
                    ^~~~~~~~~~~~~~~~~~~~~~
../drivers/gpu/drm/omapdrm/omap_fbdev.c:96:20: note: (near initialization for &#39;omap_fb_ops.fb_pan_display&#39;)

Signed-off-by: Arnd Bergmann &lt;arnd@arndb.de&gt;

<span class="p_header">diff --git a/drivers/gpu/drm/omapdrm/omap_fbdev.c b/drivers/gpu/drm/omapdrm/omap_fbdev.c</span>
<span class="p_header">index 2a839956dae6..d953186142d1 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/omapdrm/omap_fbdev.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/omapdrm/omap_fbdev.c</span>
<span class="p_chunk">@@ -80,6 +80,8 @@</span> <span class="p_context"> static int omap_fbdev_pan_display(struct fb_var_screeninfo *var,</span>
 	return drm_fb_helper_pan_display(var, fbi);
 }
 
<span class="p_add">+#pragma GCC diagnostic push</span>
<span class="p_add">+#pragma GCC diagnostic ignored &quot;-Woverride-init&quot;</span>
 static struct fb_ops omap_fb_ops = {
 	.owner = THIS_MODULE,
 	DRM_FB_HELPER_DEFAULT_OPS,
<span class="p_chunk">@@ -95,6 +97,7 @@</span> <span class="p_context"> static struct fb_ops omap_fb_ops = {</span>
 
 	.fb_pan_display = omap_fbdev_pan_display,
 };
<span class="p_add">+#pragma GCC diagnostic pop</span>
 
 static int omap_fbdev_create(struct drm_fb_helper *helper,
 		struct drm_fb_helper_surface_size *sizes)

From a9c01cba0336e2907d78953226a5d985edcf1ee1 Mon Sep 17 00:00:00 2001
From: Arnd Bergmann &lt;arnd@arndb.de&gt;
Date: Wed, 8 Jun 2016 13:44:51 +0200
Subject: [PATCH] procfs: disable -Woverride-init warning

This warning finds some actual bugs, but the usage in procfs is intended,
so we get a false positive output many lines like:

fs/proc/task_mmu.c: In function &#39;show_smap_vma_flags&#39;:
fs/proc/task_mmu.c:629:2403: error: initialized field overwritten [-Werror=override-init]
fs/proc/task_mmu.c:629:2403: note: (near initialization for &#39;mnemonics[0]&#39;)
fs/proc/task_mmu.c:630:2403: error: initialized field overwritten [-Werror=override-init]
fs/proc/task_mmu.c:630:2403: note: (near initialization for &#39;mnemonics[1]&#39;)
fs/proc/task_mmu.c:631:2403: error: initialized field overwritten [-Werror=override-init]
fs/proc/task_mmu.c:631:2403: note: (near initialization for &#39;mnemonics[2]&#39;)

This uses a #pragma to turn off the warning, as a preparation for
eventually enabling the gcc flag by default for the kernel.

Signed-off-by: Arnd Bergmann &lt;arnd@arndb.de&gt;

<span class="p_header">diff --git a/fs/proc/task_mmu.c b/fs/proc/task_mmu.c</span>
<span class="p_header">index ee3efb229ef6..661dca5a0042 100644</span>
<span class="p_header">--- a/fs/proc/task_mmu.c</span>
<span class="p_header">+++ b/fs/proc/task_mmu.c</span>
<span class="p_chunk">@@ -616,6 +616,7 @@</span> <span class="p_context"> static int smaps_pte_range(pmd_t *pmd, unsigned long addr, unsigned long end,</span>
 	return 0;
 }
 
<span class="p_add">+#pragma GCC diagnostic ignored &quot;-Woverride-init&quot;</span>
 static void show_smap_vma_flags(struct seq_file *m, struct vm_area_struct *vma)
 {
 	/*
<span class="p_chunk">@@ -682,6 +683,7 @@</span> <span class="p_context"> static void show_smap_vma_flags(struct seq_file *m, struct vm_area_struct *vma)</span>
 	}
 	seq_putc(m, &#39;\n&#39;);
 }
<span class="p_add">+#pragma GCC diagnostic warning &quot;-Woverride-init&quot;</span>
 
 #ifdef CONFIG_HUGETLB_PAGE
 static int smaps_hugetlb_range(pte_t *pte, unsigned long hmask,

From 85cbf32994e826a9b3f4b0e6c481d85d77c7ad19 Mon Sep 17 00:00:00 2001
From: Arnd Bergmann &lt;arnd@arndb.de&gt;
Date: Wed, 8 Jun 2016 13:08:55 +0200
Subject: [PATCH] sh_eth: disable -Woverride-init warning

<span class="p_del">-Woverride-init is part of a &#39;make W=1&#39; build and it might be nice</span>
to enable it in normal builds as it catches real bugs, but it
causes hundreds of identical false positive warnings in the sh_eth
driver:

ethernet/renesas/sh_eth.c:63:11: error: initialized field overwritten [-Werror=override-init]
ethernet/renesas/sh_eth.c:63:11: note: (near initialization for &#39;sh_eth_offset_gigabit[0]&#39;)
ethernet/renesas/sh_eth.c:64:11: error: initialized field overwritten [-Werror=override-init]
ethernet/renesas/sh_eth.c:64:11: note: (near initialization for &#39;sh_eth_offset_gigabit[1]&#39;)
ethernet/renesas/sh_eth.c:65:12: error: initialized field overwritten [-Werror=override-init]
ethernet/renesas/sh_eth.c:65:12: note: (near initialization for &#39;sh_eth_offset_gigabit[2]&#39;)
ethernet/renesas/sh_eth.c:66:12: error: initialized field overwritten [-Werror=override-init]
ethernet/renesas/sh_eth.c:66:12: note: (near initialization for &#39;sh_eth_offset_gigabit[3]&#39;)
ethernet/renesas/sh_eth.c:67:11: error: initialized field overwritten [-Werror=override-init]
ethernet/renesas/sh_eth.c:67:11: note: (near initialization for &#39;sh_eth_offset_gigabit[4]&#39;)

This turns off the particular warning for this file, overriding the
C flags.

Signed-off-by: Arnd Bergmann &lt;arnd@arndb.de&gt;

<span class="p_header">diff --git a/drivers/net/ethernet/renesas/sh_eth.c b/drivers/net/ethernet/renesas/sh_eth.c</span>
<span class="p_header">index 45a7a6ba7644..1980cbcef066 100644</span>
<span class="p_header">--- a/drivers/net/ethernet/renesas/sh_eth.c</span>
<span class="p_header">+++ b/drivers/net/ethernet/renesas/sh_eth.c</span>
<span class="p_chunk">@@ -57,6 +57,7 @@</span> <span class="p_context"></span>
 #define SH_ETH_OFFSET_DEFAULTS			\
 	[0 ... SH_ETH_MAX_REGISTER_OFFSET - 1] = SH_ETH_OFFSET_INVALID
 
<span class="p_add">+#pragma GCC diagnostic ignored &quot;-Woverride-init&quot;</span>
 static const u16 sh_eth_offset_gigabit[SH_ETH_MAX_REGISTER_OFFSET] = {
 	SH_ETH_OFFSET_DEFAULTS,
 

From 14e1d7313bb030decc1a7ac0618c4c95474fc116 Mon Sep 17 00:00:00 2001
From: Arnd Bergmann &lt;arnd@arndb.de&gt;
Date: Wed, 8 Jun 2016 10:46:40 +0200
Subject: [PATCH] perf: arm-pmu: shut up -Woverride-init warning

gcc -Woverride-init provides useful warnings about bugs in some drivers,
but it warns about an intentional duplicate inialization in the ARM
pmu header:

arch/arm/kernel/perf_event_v7.c:159:31: error: initialized field overwritten [-Werror=override-init]
arch/arm/kernel/perf_event_v7.c:159:31: note: (near initialization for &#39;armv7_a8_perf_map[0]&#39;)
arch/arm/kernel/perf_event_v7.c:160:33: error: initialized field overwritten [-Werror=override-init]
arch/arm/kernel/perf_event_v7.c:160:33: note: (near initialization for &#39;armv7_a8_perf_map[1]&#39;)
arch/arm/kernel/perf_event_v7.c:161:37: error: initialized field overwritten [-Werror=override-init]
arch/arm/kernel/perf_event_v7.c:161:37: note: (near initialization for &#39;armv7_a8_perf_map[2]&#39;)
arch/arm/kernel/perf_event_v7.c:162:33: error: initialized field overwritten [-Werror=override-init]
arch/arm/kernel/perf_event_v7.c:162:33: note: (near initialization for &#39;armv7_a8_perf_map[3]&#39;)
arch/arm/kernel/perf_event_v7.c:163:40: error: initialized field overwritten [-Werror=override-init]
arch/arm/kernel/perf_event_v7.c:163:40: note: (near initialization for &#39;armv7_a8_perf_map[4]&#39;)
...

This uses a #pragma to shut up that warning, as a preparation for enabling
the warning by default in the future.

Signed-off-by: Arnd Bergmann &lt;arnd@arndb.de&gt;

<span class="p_header">diff --git a/include/linux/perf/arm_pmu.h b/include/linux/perf/arm_pmu.h</span>
<span class="p_header">index 8462da266089..f61462cd362a 100644</span>
<span class="p_header">--- a/include/linux/perf/arm_pmu.h</span>
<span class="p_header">+++ b/include/linux/perf/arm_pmu.h</span>
<span class="p_chunk">@@ -41,6 +41,7 @@</span> <span class="p_context"> struct arm_pmu_platdata {</span>
 #define C(_x)				PERF_COUNT_HW_CACHE_##_x
 #define CACHE_OP_UNSUPPORTED		0xFFFF
 
<span class="p_add">+#pragma GCC diagnostic ignored &quot;-Woverride-init&quot;</span>
 #define PERF_MAP_ALL_UNSUPPORTED					\
 	[0 ... PERF_COUNT_HW_MAX - 1] = HW_OP_UNSUPPORTED
 

From e2f45688890614c67fef699a8612283ad4c44b06 Mon Sep 17 00:00:00 2001
From: Arnd Bergmann &lt;arnd@arndb.de&gt;
Date: Wed, 8 Jun 2016 10:46:40 +0200
Subject: [PATCH] bpf: shut up -Woverride-init warning

gcc -Woverride-init provides useful warnings about bugs in some drivers,
but it warns about an intentional duplicate inialization in the bpf
code:

kernel/bpf/core.c: In function &#39;__bpf_prog_run&#39;:
kernel/bpf/core.c:476:26: error: initialized field overwritten [-Werror=override-init]
kernel/bpf/core.c:476:26: note: (near initialization for &#39;jumptable[12]&#39;)
kernel/bpf/core.c:477:26: error: initialized field overwritten [-Werror=override-init]
kernel/bpf/core.c:477:26: note: (near initialization for &#39;jumptable[4]&#39;)
kernel/bpf/core.c:478:26: error: initialized field overwritten [-Werror=override-init]
kernel/bpf/core.c:478:26: note: (near initialization for &#39;jumptable[28]&#39;)
kernel/bpf/core.c:479:26: error: initialized field overwritten [-Werror=override-init]
kernel/bpf/core.c:479:26: note: (near initialization for &#39;jumptable[20]&#39;)
kernel/bpf/core.c:480:26: error: initialized field overwritten [-Werror=override-init]
kernel/bpf/core.c:480:26: note: (near initialization for &#39;jumptable[92]&#39;)
kernel/bpf/core.c:481:26: error: initialized field overwritten [-Werror=override-init]

This uses a #pragma to shut up that warning, as a preparation for enabling
the warning by default in the future.

Signed-off-by: Arnd Bergmann &lt;arnd@arndb.de&gt;

<span class="p_header">diff --git a/kernel/bpf/core.c b/kernel/bpf/core.c</span>
<span class="p_header">index 503d4211988a..8944778d9c13 100644</span>
<span class="p_header">--- a/kernel/bpf/core.c</span>
<span class="p_header">+++ b/kernel/bpf/core.c</span>
<span class="p_chunk">@@ -547,6 +547,7 @@</span> <span class="p_context"> EXPORT_SYMBOL_GPL(__bpf_call_base);</span>
  *
  * Decode and execute eBPF instructions.
  */
<span class="p_add">+#pragma GCC diagnostic ignored &quot;-Woverride-init&quot;</span>
 static unsigned int __bpf_prog_run(void *ctx, const struct bpf_insn *insn)
 {
 	u64 stack[MAX_BPF_STACK / sizeof(u64)];
<span class="p_chunk">@@ -1003,6 +1004,7 @@</span> <span class="p_context"> static unsigned int __bpf_prog_run(void *ctx, const struct bpf_insn *insn)</span>
 		WARN_RATELIMIT(1, &quot;unknown opcode %02x\n&quot;, insn-&gt;code);
 		return 0;
 }
<span class="p_add">+#pragma GCC diagnostic warning &quot;-Woverride-init&quot;</span>
 STACK_FRAME_NON_STANDARD(__bpf_prog_run); /* jump table */
 
 bool bpf_prog_array_compatible(struct bpf_array *array,

From 092549ed4782679e220357a3990bb5087e7d277f Mon Sep 17 00:00:00 2001
From: Arnd Bergmann &lt;arnd@arndb.de&gt;
Date: Wed, 8 Jun 2016 10:41:06 +0200
Subject: [PATCH] libata: shut up -Woverride-init warning

In general, the -Woverride-init is helpful to catch bugs with drivers that
unintentially initialize the same field in a structure more than once.
In case of libata, it conflicts with the intended use of the ATA_BASE_SHT()
macro, causing warnings about code that works as designed:

drivers/ata/ahci.c:107:555: error: initialized field overwritten [-Werror=override-init]
drivers/ata/ahci.c:107:685: error: initialized field overwritten [-Werror=override-init]
drivers/ata/acard-ahci.c:86:567: error: initialized field overwritten [-Werror=override-init]
drivers/ata/ahci_platform.c:37:555: error: initialized field overwritten [-Werror=override-init]
drivers/ata/sata_sil24.c:388:15: error: initialized field overwritten [-Werror=override-init]
drivers/ata/sata_highbank.c:456:573: error: initialized field overwritten [-Werror=override-init]
drivers/ata/ahci_brcmstb.c:282:565: error: initialized field overwritten [-Werror=override-init]
drivers/ata/ahci_ceva.c:162:565: error: initialized field overwritten [-Werror=override-init]
drivers/ata/ahci_imx.c:526:563: error: initialized field overwritten [-Werror=override-init]
drivers/ata/ahci_mvebu.c:98:567: error: initialized field overwritten [-Werror=override-init]
drivers/ata/ahci_sunxi.c:175:567: error: initialized field overwritten [-Werror=override-init]
drivers/ata/ahci_st.c:145:561: error: initialized field overwritten [-Werror=override-init]
drivers/ata/ahci_tegra.c:295:567: error: initialized field overwritten [-Werror=override-init]
drivers/ata/ahci_xgene.c:731:567: error: initialized field overwritten [-Werror=override-init]
drivers/ata/ahci_qoriq.c:148:567: error: initialized field overwritten [-Werror=override-init]
drivers/ata/sata_mv.c:683:15: error: initialized field overwritten [-Werror=override-init]
drivers/ata/sata_nv.c:395:15: error: initialized field overwritten [-Werror=override-init]
drivers/ata/sata_nv.c:398:21: error: initialized field overwritten [-Werror=override-init]
drivers/ata/sata_nv.c:403:15: error: initialized field overwritten [-Werror=override-init]
drivers/ata/sata_nv.c:406:21: error: initialized field overwritten [-Werror=override-init]
drivers/ata/pata_atiixp.c:254:18: error: initialized field overwritten [-Werror=override-init]
drivers/ata/pata_cs5520.c:107:18: error: initialized field overwritten [-Werror=override-init]
drivers/ata/pata_sc1200.c:210:18: error: initialized field overwritten [-Werror=override-init]
drivers/ata/pata_serverworks.c:256:18: error: initialized field overwritten [-Werror=override-init]

This adds a #pragma GCC diagnostic ignored &quot;-Woverride-init&quot; next to the
definition to let gcc know that it shouldn&#39;t warn about duplicate initializers
in files that include this header.

Signed-off-by: Arnd Bergmann &lt;arnd@arndb.de&gt;

<span class="p_header">diff --git a/include/linux/libata.h b/include/linux/libata.h</span>
<span class="p_header">index 0e8a8000b45f..038b1ee7485f 100644</span>
<span class="p_header">--- a/include/linux/libata.h</span>
<span class="p_header">+++ b/include/linux/libata.h</span>
<span class="p_chunk">@@ -1342,6 +1342,7 @@</span> <span class="p_context"> extern struct device_attribute *ata_common_sdev_attrs[];</span>
  * edge driver&#39;s module reference, otherwise the driver can be unloaded
  * even if the scsi_device is being accessed.
  */
<span class="p_add">+#pragma GCC diagnostic ignored &quot;-Woverride-init&quot;</span>
 #define ATA_BASE_SHT(drv_name)					\
 	.module			= THIS_MODULE,			\
 	.name			= drv_name,			\

From bafaf130a03ac21377fe7c142ad7ce7417ebcfe3 Mon Sep 17 00:00:00 2001
From: Arnd Bergmann &lt;arnd@arndb.de&gt;
Date: Thu, 9 Jun 2016 23:20:58 +0200
Subject: [PATCH] qede: remove duplicate initializer

../drivers/net/ethernet/qlogic/qede/qede_dcbnl.c:327:13: error: initialized field overwritten [-Werror=override-init]
  .getdcbx = qede_dcbnl_getdcbx,
             ^~~~~~~~~~~~~~~~~~
../drivers/net/ethernet/qlogic/qede/qede_dcbnl.c:327:13: note: (near initialization for &#39;qede_dcbnl_ops.getdcbx&#39;)

Signed-off-by: Arnd Bergmann &lt;arnd@arndb.de&gt;

<span class="p_header">diff --git a/drivers/net/ethernet/qlogic/qede/qede_dcbnl.c b/drivers/net/ethernet/qlogic/qede/qede_dcbnl.c</span>
<span class="p_header">index 03e8c0212433..318f0cbd58ed 100644</span>
<span class="p_header">--- a/drivers/net/ethernet/qlogic/qede/qede_dcbnl.c</span>
<span class="p_header">+++ b/drivers/net/ethernet/qlogic/qede/qede_dcbnl.c</span>
<span class="p_chunk">@@ -308,7 +308,6 @@</span> <span class="p_context"> static const struct dcbnl_rtnl_ops qede_dcbnl_ops = {</span>
 	.ieee_setets = qede_dcbnl_ieee_setets,
 	.ieee_getapp = qede_dcbnl_ieee_getapp,
 	.ieee_setapp = qede_dcbnl_ieee_setapp,
<span class="p_del">-	.getdcbx = qede_dcbnl_getdcbx,</span>
 	.ieee_peer_getpfc = qede_dcbnl_ieee_peer_getpfc,
 	.ieee_peer_getets = qede_dcbnl_ieee_peer_getets,
 	.getstate = qede_dcbnl_getstate,

From 657078acc9b9e8abc17aa7eb2d93877194e085ef Mon Sep 17 00:00:00 2001
From: Arnd Bergmann &lt;arnd@arndb.de&gt;
Date: Wed, 8 Jun 2016 10:31:59 +0200
Subject: [PATCH] [RFC] wimax: remove duplicate entries in wimax_gnl_policy

gcc -Wextra warns about duplicate initializations here:

net/wimax/stack.c:408:29: error: initialized field overwritten [-Werror=override-init]
net/wimax/stack.c:408:29: note: (near initialization for &#39;wimax_gnl_policy[1]&#39;)
net/wimax/stack.c:412:28: error: initialized field overwritten [-Werror=override-init]
net/wimax/stack.c:412:28: note: (near initialization for &#39;wimax_gnl_policy[1]&#39;)
net/wimax/stack.c:413:26: error: initialized field overwritten [-Werror=override-init]
net/wimax/stack.c:413:26: note: (near initialization for &#39;wimax_gnl_policy[1]&#39;)

This was introduced by b61a5eea5904 (&quot;wimax: use
genl_register_family_with_ops()&quot;), which consolidated four existing
genl_ops tables into one as a simplification.

I do not understand the reasoning behind that earlier patch, as it seems
to apply the superset of the four policy to all commands. If it was
indeed correct, we can either remove or comment out the duplicate entries
as I do here.

It&#39;s also possible that we want a partial revert of the patch that
introduced this, or a broader rework.

Signed-off-by: Arnd Bergmann &lt;arnd@arndb.de&gt;

<span class="p_header">diff --git a/net/wimax/stack.c b/net/wimax/stack.c</span>
<span class="p_header">index 5db731512014..1c118def3713 100644</span>
<span class="p_header">--- a/net/wimax/stack.c</span>
<span class="p_header">+++ b/net/wimax/stack.c</span>
<span class="p_chunk">@@ -404,12 +404,12 @@</span> <span class="p_context"> void wimax_dev_init(struct wimax_dev *wimax_dev)</span>
 EXPORT_SYMBOL_GPL(wimax_dev_init);
 
 static const struct nla_policy wimax_gnl_policy[WIMAX_GNL_ATTR_MAX + 1] = {
<span class="p_del">-	[WIMAX_GNL_RESET_IFIDX] = { .type = NLA_U32, },</span>
<span class="p_del">-	[WIMAX_GNL_RFKILL_IFIDX] = { .type = NLA_U32, },</span>
<span class="p_add">+/*	[WIMAX_GNL_RESET_IFIDX] = { .type = NLA_U32, },	 */</span>
<span class="p_add">+/*	[WIMAX_GNL_RFKILL_IFIDX] = { .type = NLA_U32, }, */</span>
 	[WIMAX_GNL_RFKILL_STATE] = {
 		.type = NLA_U32		/* enum wimax_rf_state */
 	},
<span class="p_del">-	[WIMAX_GNL_STGET_IFIDX] = { .type = NLA_U32, },</span>
<span class="p_add">+/*	[WIMAX_GNL_STGET_IFIDX] = { .type = NLA_U32, },  */</span>
 	[WIMAX_GNL_MSG_IFIDX] = { .type = NLA_U32, },
 	[WIMAX_GNL_MSG_DATA] = {
 		.type = NLA_UNSPEC,	/* libnl doesn&#39;t grok BINARY yet */

From ad1e6c0987c3e03fe9177d6f1a5aaeb9732f80f5 Mon Sep 17 00:00:00 2001
From: Arnd Bergmann &lt;arnd@arndb.de&gt;
Date: Wed, 8 Jun 2016 10:23:51 +0200
Subject: [PATCH] drbd: sanitize cmdnames table

gcc -Wextra warns about a duplicate entry in cmdnames[]:

drivers/block/drbd/drbd_main.c: In function &#39;cmdname&#39;:
drivers/block/drbd/drbd_main.c:3680:21: error: initialized field overwritten [-Werror=override-init]
drivers/block/drbd/drbd_main.c:3680:21: note: (near initialization for &#39;cmdnames[44]&#39;)

Apparently, there are two entries for P_RETRY_WRITE, so I&#39;m removing the
one that ended up unused. I also checked the table to ensure that all
other entries are there and sorted them by numeric value.

I see that there is no entry for P_TRIM, so I&#39;ve added that
but left it commented out. Please uncomment if that entry should
be there.

Signed-off-by: Arnd Bergmann &lt;arnd@arndb.de&gt;

<span class="p_header">diff --git a/drivers/block/drbd/drbd_main.c b/drivers/block/drbd/drbd_main.c</span>
<span class="p_header">index f6fbdac2391d..5aec73fbf2ba 100644</span>
<span class="p_header">--- a/drivers/block/drbd/drbd_main.c</span>
<span class="p_header">+++ b/drivers/block/drbd/drbd_main.c</span>
<span class="p_chunk">@@ -3719,7 +3719,6 @@</span> <span class="p_context"> const char *cmdname(enum drbd_packet cmd)</span>
 	static const char *cmdnames[] = {
 		[P_DATA]	        = &quot;Data&quot;,
 		[P_WSAME]	        = &quot;WriteSame&quot;,
<span class="p_del">-		[P_TRIM]	        = &quot;Trim&quot;,</span>
 		[P_DATA_REPLY]	        = &quot;DataReply&quot;,
 		[P_RS_DATA_REPLY]	= &quot;RSDataReply&quot;,
 		[P_BARRIER]	        = &quot;Barrier&quot;,
<span class="p_chunk">@@ -3730,7 +3729,6 @@</span> <span class="p_context"> const char *cmdname(enum drbd_packet cmd)</span>
 		[P_DATA_REQUEST]	= &quot;DataRequest&quot;,
 		[P_RS_DATA_REQUEST]     = &quot;RSDataRequest&quot;,
 		[P_SYNC_PARAM]	        = &quot;SyncParam&quot;,
<span class="p_del">-		[P_SYNC_PARAM89]	= &quot;SyncParam89&quot;,</span>
 		[P_PROTOCOL]            = &quot;ReportProtocol&quot;,
 		[P_UUIDS]	        = &quot;ReportUUIDs&quot;,
 		[P_SIZES]	        = &quot;ReportSizes&quot;,
<span class="p_chunk">@@ -3738,6 +3736,7 @@</span> <span class="p_context"> const char *cmdname(enum drbd_packet cmd)</span>
 		[P_SYNC_UUID]           = &quot;ReportSyncUUID&quot;,
 		[P_AUTH_CHALLENGE]      = &quot;AuthChallenge&quot;,
 		[P_AUTH_RESPONSE]	= &quot;AuthResponse&quot;,
<span class="p_add">+		[P_STATE_CHG_REQ]       = &quot;StateChgRequest&quot;,</span>
 		[P_PING]		= &quot;Ping&quot;,
 		[P_PING_ACK]	        = &quot;PingAck&quot;,
 		[P_RECV_ACK]	        = &quot;RecvAck&quot;,
<span class="p_chunk">@@ -3748,22 +3747,22 @@</span> <span class="p_context"> const char *cmdname(enum drbd_packet cmd)</span>
 		[P_NEG_DREPLY]	        = &quot;NegDReply&quot;,
 		[P_NEG_RS_DREPLY]	= &quot;NegRSDReply&quot;,
 		[P_BARRIER_ACK]	        = &quot;BarrierAck&quot;,
<span class="p_del">-		[P_STATE_CHG_REQ]       = &quot;StateChgRequest&quot;,</span>
 		[P_STATE_CHG_REPLY]     = &quot;StateChgReply&quot;,
 		[P_OV_REQUEST]          = &quot;OVRequest&quot;,
 		[P_OV_REPLY]            = &quot;OVReply&quot;,
 		[P_OV_RESULT]           = &quot;OVResult&quot;,
 		[P_CSUM_RS_REQUEST]     = &quot;CsumRSRequest&quot;,
 		[P_RS_IS_IN_SYNC]	= &quot;CsumRSIsInSync&quot;,
<span class="p_add">+		[P_SYNC_PARAM89]	= &quot;SyncParam89&quot;,</span>
 		[P_COMPRESSED_BITMAP]   = &quot;CBitmap&quot;,
 		[P_DELAY_PROBE]         = &quot;DelayProbe&quot;,
 		[P_OUT_OF_SYNC]		= &quot;OutOfSync&quot;,
<span class="p_del">-		[P_RETRY_WRITE]		= &quot;RetryWrite&quot;,</span>
 		[P_RS_CANCEL]		= &quot;RSCancel&quot;,
 		[P_CONN_ST_CHG_REQ]	= &quot;conn_st_chg_req&quot;,
 		[P_CONN_ST_CHG_REPLY]	= &quot;conn_st_chg_reply&quot;,
 		[P_RETRY_WRITE]		= &quot;retry_write&quot;,
 		[P_PROTOCOL_UPDATE]	= &quot;protocol_update&quot;,
<span class="p_add">+		[P_TRIM]	        = &quot;Trim&quot;,</span>
 		[P_RS_THIN_REQ]         = &quot;rs_thin_req&quot;,
 		[P_RS_DEALLOCATED]      = &quot;rs_deallocated&quot;,
 

From 860d00e7a5220f9bc44bf8d6529c04dbb8856451 Mon Sep 17 00:00:00 2001
From: Arnd Bergmann &lt;arnd@arndb.de&gt;
Date: Wed, 15 Jun 2016 09:10:07 +0200
Subject: [PATCH] x86: don&#39;t warn about duplicate initializion of stack sizes
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

arch/x86/include/asm/page_64_types.h:18:21: error: initialized field overwritten [-Werror=override-init]
 #define DEBUG_STKSZ (PAGE_SIZE &lt;&lt; DEBUG_STACK_ORDER)
                     ^
arch/x86/kernel/cpu/common.c:1304:26: note: in expansion of macro ‘DEBUG_STKSZ’
    [DEBUG_STACK - 1]   = DEBUG_STKSZ
                          ^
arch/x86/include/asm/page_64_types.h:18:21: note: (near initialization for ‘exception_stack_sizes[2]’)
 #define DEBUG_STKSZ (PAGE_SIZE &lt;&lt; DEBUG_STACK_ORDER)
                     ^
arch/x86/kernel/cpu/common.c:1304:26: note: in expansion of macro ‘DEBUG_STKSZ’
    [DEBUG_STACK - 1]   = DEBUG_STKSZ

Signed-off-by: Arnd Bergmann &lt;arnd@arndb.de&gt;

<span class="p_header">diff --git a/arch/x86/kernel/cpu/common.c b/arch/x86/kernel/cpu/common.c</span>
<span class="p_header">index 5ba74f280448..ebc909203a38 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/common.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/common.c</span>
<span class="p_chunk">@@ -1268,6 +1268,7 @@</span> <span class="p_context"> EXPORT_PER_CPU_SYMBOL(__preempt_count);</span>
  * limit), all of them are 4K, except the debug stack which
  * is 8K.
  */
<span class="p_add">+#pragma GCC diagnostic ignored &quot;-Woverride-init&quot;</span>
 static const unsigned int exception_stack_sizes[N_EXCEPTION_STACKS] = {
 	  [0 ... N_EXCEPTION_STACKS - 1]	= EXCEPTION_STKSZ,
 	  [DEBUG_STACK - 1]			= DEBUG_STKSZ

From 01fc760fe7fbee1163f4a0c25cd722014054de70 Mon Sep 17 00:00:00 2001
From: Arnd Bergmann &lt;arnd@arndb.de&gt;
Date: Wed, 8 Jun 2016 10:22:51 +0200
Subject: [PATCH] alsa: usb: avoid duplicate initializers in quirks table

sound/usb/quirks-table.h:2892:125: error: initialized field overwritten [-Werror=override-init]
sound/usb/quirks-table.h:2892:125: note: (near initialization for &#39;usb_audio_ids[230].match_flags&#39;)
sound/usb/quirks-table.h:2892:181: error: initialized field overwritten [-Werror=override-init]
sound/usb/quirks-table.h:2892:181: note: (near initialization for &#39;usb_audio_ids[230].bInterfaceClass&#39;)
sound/usb/quirks-table.h:2893:125: error: initialized field overwritten [-Werror=override-init]
sound/usb/quirks-table.h:2893:125: note: (near initialization for &#39;usb_audio_ids[231].match_flags&#39;)
sound/usb/quirks-table.h:2893:181: error: initialized field overwritten [-Werror=override-init]
sound/usb/quirks-table.h:2893:181: note: (near initialization for &#39;usb_audio_ids[231].bInterfaceClass&#39;)
sound/usb/quirks-table.h:2894:125: error: initialized field overwritten [-Werror=override-init]
sound/usb/quirks-table.h:2894:125: note: (near initialization for &#39;usb_audio_ids[232].match_flags&#39;)
sound/usb/quirks-table.h:2894:181: error: initialized field overwritten [-Werror=override-init]

Signed-off-by: Arnd Bergmann &lt;arnd@arndb.de&gt;

<span class="p_header">diff --git a/sound/usb/quirks-table.h b/sound/usb/quirks-table.h</span>
<span class="p_header">index 8a59d4782a0f..8d302ef764a3 100644</span>
<span class="p_header">--- a/sound/usb/quirks-table.h</span>
<span class="p_header">+++ b/sound/usb/quirks-table.h</span>
<span class="p_chunk">@@ -2875,10 +2875,11 @@</span> <span class="p_context"> YAMAHA_DEVICE(0x7010, &quot;UB99&quot;),</span>
  */
 
 #define AU0828_DEVICE(vid, pid, vname, pname) { \
<span class="p_del">-	USB_DEVICE_VENDOR_SPEC(vid, pid), \</span>
 	.match_flags = USB_DEVICE_ID_MATCH_DEVICE | \
 		       USB_DEVICE_ID_MATCH_INT_CLASS | \
 		       USB_DEVICE_ID_MATCH_INT_SUBCLASS, \
<span class="p_add">+	.idVendor = vid, \</span>
<span class="p_add">+	.idProduct = pid, \</span>
 	.bInterfaceClass = USB_CLASS_AUDIO, \
 	.bInterfaceSubClass = USB_SUBCLASS_AUDIOCONTROL, \
 	.driver_info = (unsigned long) &amp;(const struct snd_usb_audio_quirk) { \

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



