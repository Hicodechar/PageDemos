
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[09/10] paravirt: split pv_info for support of PARAVIRT_FULL - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [09/10] paravirt: split pv_info for support of PARAVIRT_FULL</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=100191">Juergen Gross</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>May 19, 2017, 3:47 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170519154746.29389-10-jgross@suse.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9737457/mbox/"
   >mbox</a>
|
   <a href="/patch/9737457/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9737457/">/patch/9737457/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	D18566020B for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 19 May 2017 15:48:19 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D45FB28814
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 19 May 2017 15:48:19 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id C853D288B5; Fri, 19 May 2017 15:48:19 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1BAE028814
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 19 May 2017 15:48:19 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755858AbdESPsO (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 19 May 2017 11:48:14 -0400
Received: from mx2.suse.de ([195.135.220.15]:33029 &quot;EHLO mx1.suse.de&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1755614AbdESPsA (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 19 May 2017 11:48:00 -0400
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (charybdis-ext.suse.de [195.135.220.254])
	by mx1.suse.de (Postfix) with ESMTP id 35EC6AD9D;
	Fri, 19 May 2017 15:47:59 +0000 (UTC)
From: Juergen Gross &lt;jgross@suse.com&gt;
To: linux-kernel@vger.kernel.org, xen-devel@lists.xenproject.org,
	x86@kernel.org, virtualization@lists.linux-foundation.org
Cc: jeremy@goop.org, chrisw@sous-sol.org, akataria@vmware.com,
	rusty@rustcorp.com.au, boris.ostrovsky@oracle.com, hpa@zytor.com,
	tglx@linutronix.de, mingo@redhat.com, Juergen Gross &lt;jgross@suse.com&gt;
Subject: [PATCH 09/10] paravirt: split pv_info for support of PARAVIRT_FULL
Date: Fri, 19 May 2017 17:47:45 +0200
Message-Id: &lt;20170519154746.29389-10-jgross@suse.com&gt;
X-Mailer: git-send-email 2.12.0
In-Reply-To: &lt;20170519154746.29389-1-jgross@suse.com&gt;
References: &lt;20170519154746.29389-1-jgross@suse.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=100191">Juergen Gross</a> - May 19, 2017, 3:47 p.m.</div>
<pre class="content">
Move members needed for fully paravirtualized guests only into a new
structure pvfull_info in paravirt_types_full.h, paravirt_full.h and
the associated vector into paravirt_full.c.
<span class="signed-off-by">
Signed-off-by: Juergen Gross &lt;jgross@suse.com&gt;</span>
---
 arch/x86/boot/compressed/misc.h             |  1 +
 arch/x86/include/asm/paravirt.h             |  2 --
 arch/x86/include/asm/paravirt_full.h        |  2 ++
 arch/x86/include/asm/paravirt_types.h       |  7 -------
 arch/x86/include/asm/paravirt_types_full.h  | 10 ++++++++++
 arch/x86/include/asm/pgtable-3level_types.h |  4 ++--
 arch/x86/include/asm/ptrace.h               |  5 +++--
 arch/x86/include/asm/segment.h              |  2 +-
 arch/x86/kernel/paravirt.c                  |  9 ++-------
 arch/x86/kernel/paravirt_full.c             | 10 ++++++++++
 arch/x86/lguest/boot.c                      |  4 ++--
 arch/x86/xen/enlighten_pv.c                 | 12 ++++++------
 12 files changed, 39 insertions(+), 29 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/boot/compressed/misc.h b/arch/x86/boot/compressed/misc.h</span>
<span class="p_header">index 1c8355eadbd1..007b58f3d985 100644</span>
<span class="p_header">--- a/arch/x86/boot/compressed/misc.h</span>
<span class="p_header">+++ b/arch/x86/boot/compressed/misc.h</span>
<span class="p_chunk">@@ -9,6 +9,7 @@</span> <span class="p_context"></span>
  */
 #undef CONFIG_PARAVIRT
 #undef CONFIG_PARAVIRT_SPINLOCKS
<span class="p_add">+#undef CONFIG_PARAVIRT_FULL</span>
 #undef CONFIG_KASAN
 
 #include &lt;linux/linkage.h&gt;
<span class="p_header">diff --git a/arch/x86/include/asm/paravirt.h b/arch/x86/include/asm/paravirt.h</span>
<span class="p_header">index 3b9960a5de4a..55e0c1807df2 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/paravirt.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/paravirt.h</span>
<span class="p_chunk">@@ -26,8 +26,6 @@</span> <span class="p_context"> static inline enum paravirt_lazy_mode paravirt_get_lazy_mode(void)</span>
 
 #endif
 
<span class="p_del">-#define get_kernel_rpl()  (pv_info.kernel_rpl)</span>
<span class="p_del">-</span>
 static inline unsigned long long paravirt_sched_clock(void)
 {
 	return PVOP_CALL0(unsigned long long, pv_time_ops.sched_clock);
<span class="p_header">diff --git a/arch/x86/include/asm/paravirt_full.h b/arch/x86/include/asm/paravirt_full.h</span>
<span class="p_header">index 53f2eb436ba3..95d1c21bbef7 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/paravirt_full.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/paravirt_full.h</span>
<span class="p_chunk">@@ -3,6 +3,8 @@</span> <span class="p_context"></span>
 
 #ifndef __ASSEMBLY__
 
<span class="p_add">+#define get_kernel_rpl()	(pvfull_info.kernel_rpl)</span>
<span class="p_add">+</span>
 static inline void load_sp0(struct tss_struct *tss,
 			    struct thread_struct *thread)
 {
<span class="p_header">diff --git a/arch/x86/include/asm/paravirt_types.h b/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_header">index b1ac2a5698b4..34753d10ebbc 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_chunk">@@ -66,13 +66,6 @@</span> <span class="p_context"> struct paravirt_callee_save {</span>
 
 /* general info */
 struct pv_info {
<span class="p_del">-	unsigned int kernel_rpl;</span>
<span class="p_del">-	int shared_kernel_pmd;</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef CONFIG_X86_64</span>
<span class="p_del">-	u16 extra_user_64bit_cs;  /* __USER_CS if none */</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
 	const char *name;
 };
 
<span class="p_header">diff --git a/arch/x86/include/asm/paravirt_types_full.h b/arch/x86/include/asm/paravirt_types_full.h</span>
<span class="p_header">index 15d595a5f9d2..b1f91fad5842 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/paravirt_types_full.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/paravirt_types_full.h</span>
<span class="p_chunk">@@ -1,6 +1,15 @@</span> <span class="p_context"></span>
 #ifndef _ASM_X86_PARAVIRT_TYPES_FULL_H
 #define _ASM_X86_PARAVIRT_TYPES_FULL_H
 
<span class="p_add">+struct pvfull_info {</span>
<span class="p_add">+	unsigned int kernel_rpl;</span>
<span class="p_add">+	int shared_kernel_pmd;</span>
<span class="p_add">+</span>
<span class="p_add">+#ifdef CONFIG_X86_64</span>
<span class="p_add">+	u16 extra_user_64bit_cs;	/* __USER_CS if none */</span>
<span class="p_add">+#endif</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 struct pv_lazy_ops {
 	/* Set deferred update mode, used for batching operations. */
 	void (*enter)(void);
<span class="p_chunk">@@ -193,6 +202,7 @@</span> <span class="p_context"> struct pvfull_mmu_ops {</span>
 			   phys_addr_t phys, pgprot_t flags);
 };
 
<span class="p_add">+extern struct pvfull_info pvfull_info;</span>
 extern struct pvfull_cpu_ops pvfull_cpu_ops;
 extern struct pvfull_irq_ops pvfull_irq_ops;
 extern struct pvfull_mmu_ops pvfull_mmu_ops;
<span class="p_header">diff --git a/arch/x86/include/asm/pgtable-3level_types.h b/arch/x86/include/asm/pgtable-3level_types.h</span>
<span class="p_header">index b8a4341faafa..fdf132570189 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/pgtable-3level_types.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/pgtable-3level_types.h</span>
<span class="p_chunk">@@ -19,8 +19,8 @@</span> <span class="p_context"> typedef union {</span>
 } pte_t;
 #endif	/* !__ASSEMBLY__ */
 
<span class="p_del">-#ifdef CONFIG_PARAVIRT</span>
<span class="p_del">-#define SHARED_KERNEL_PMD	(pv_info.shared_kernel_pmd)</span>
<span class="p_add">+#ifdef CONFIG_PARAVIRT_FULL</span>
<span class="p_add">+#define SHARED_KERNEL_PMD	(pvfull_info.shared_kernel_pmd)</span>
 #else
 #define SHARED_KERNEL_PMD	1
 #endif
<span class="p_header">diff --git a/arch/x86/include/asm/ptrace.h b/arch/x86/include/asm/ptrace.h</span>
<span class="p_header">index 2b5d686ea9f3..81d73663c497 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/ptrace.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/ptrace.h</span>
<span class="p_chunk">@@ -118,7 +118,7 @@</span> <span class="p_context"> static inline int v8086_mode(struct pt_regs *regs)</span>
 #ifdef CONFIG_X86_64
 static inline bool user_64bit_mode(struct pt_regs *regs)
 {
<span class="p_del">-#ifndef CONFIG_PARAVIRT</span>
<span class="p_add">+#ifndef CONFIG_PARAVIRT_FULL</span>
 	/*
 	 * On non-paravirt systems, this is the only long mode CPL 3
 	 * selector.  We do not allow long mode selectors in the LDT.
<span class="p_chunk">@@ -126,7 +126,8 @@</span> <span class="p_context"> static inline bool user_64bit_mode(struct pt_regs *regs)</span>
 	return regs-&gt;cs == __USER_CS;
 #else
 	/* Headers are too twisted for this to go in paravirt.h. */
<span class="p_del">-	return regs-&gt;cs == __USER_CS || regs-&gt;cs == pv_info.extra_user_64bit_cs;</span>
<span class="p_add">+	return regs-&gt;cs == __USER_CS ||</span>
<span class="p_add">+	       regs-&gt;cs == pvfull_info.extra_user_64bit_cs;</span>
 #endif
 }
 
<span class="p_header">diff --git a/arch/x86/include/asm/segment.h b/arch/x86/include/asm/segment.h</span>
<span class="p_header">index 1549caa098f0..1c8f320934d1 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/segment.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/segment.h</span>
<span class="p_chunk">@@ -210,7 +210,7 @@</span> <span class="p_context"></span>
 
 #endif
 
<span class="p_del">-#ifndef CONFIG_PARAVIRT</span>
<span class="p_add">+#ifndef CONFIG_PARAVIRT_FULL</span>
 # define get_kernel_rpl()		0
 #endif
 
<span class="p_header">diff --git a/arch/x86/kernel/paravirt.c b/arch/x86/kernel/paravirt.c</span>
<span class="p_header">index 6fb642572bff..42da2fde1fef 100644</span>
<span class="p_header">--- a/arch/x86/kernel/paravirt.c</span>
<span class="p_header">+++ b/arch/x86/kernel/paravirt.c</span>
<span class="p_chunk">@@ -125,6 +125,7 @@</span> <span class="p_context"> static void *get_call_destination(u8 type)</span>
 #ifdef CONFIG_PARAVIRT_FULL
 		.pvfull_cpu_ops = pvfull_cpu_ops,
 		.pvfull_irq_ops = pvfull_irq_ops,
<span class="p_add">+		.pvfull_mmu_ops = pvfull_mmu_ops,</span>
 #endif
 	};
 	return *((void **)&amp;tmpl + type);
<span class="p_chunk">@@ -186,12 +187,6 @@</span> <span class="p_context"> static u64 native_steal_clock(int cpu)</span>
 
 struct pv_info pv_info = {
 	.name = &quot;bare hardware&quot;,
<span class="p_del">-	.kernel_rpl = 0,</span>
<span class="p_del">-	.shared_kernel_pmd = 1,	/* Only used when CONFIG_X86_PAE is set */</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef CONFIG_X86_64</span>
<span class="p_del">-	.extra_user_64bit_cs = __USER_CS,</span>
<span class="p_del">-#endif</span>
 };
 
 struct pv_init_ops pv_init_ops = {
<span class="p_chunk">@@ -222,5 +217,5 @@</span> <span class="p_context"> struct pv_mmu_ops pv_mmu_ops __ro_after_init = {</span>
 EXPORT_SYMBOL_GPL(pv_time_ops);
 EXPORT_SYMBOL    (pv_cpu_ops);
 EXPORT_SYMBOL    (pv_mmu_ops);
<span class="p_del">-EXPORT_SYMBOL_GPL(pv_info);</span>
<span class="p_add">+EXPORT_SYMBOL    (pv_info);</span>
 EXPORT_SYMBOL    (pv_irq_ops);
<span class="p_header">diff --git a/arch/x86/kernel/paravirt_full.c b/arch/x86/kernel/paravirt_full.c</span>
<span class="p_header">index b90dfa7428bd..b65d19d8d9d7 100644</span>
<span class="p_header">--- a/arch/x86/kernel/paravirt_full.c</span>
<span class="p_header">+++ b/arch/x86/kernel/paravirt_full.c</span>
<span class="p_chunk">@@ -116,6 +116,15 @@</span> <span class="p_context"> static void native_flush_tlb_single(unsigned long addr)</span>
 	__native_flush_tlb_single(addr);
 }
 
<span class="p_add">+struct pvfull_info pvfull_info = {</span>
<span class="p_add">+	.kernel_rpl = 0,</span>
<span class="p_add">+	.shared_kernel_pmd = 1, /* Only used when CONFIG_X86_PAE is set */</span>
<span class="p_add">+</span>
<span class="p_add">+#ifdef CONFIG_X86_64</span>
<span class="p_add">+	.extra_user_64bit_cs = __USER_CS,</span>
<span class="p_add">+#endif</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 __visible struct pvfull_cpu_ops pvfull_cpu_ops = {
 	.cpuid = native_cpuid,
 	.get_debugreg = native_get_debugreg,
<span class="p_chunk">@@ -262,6 +271,7 @@</span> <span class="p_context"> NOKPROBE_SYMBOL(native_get_debugreg);</span>
 NOKPROBE_SYMBOL(native_set_debugreg);
 NOKPROBE_SYMBOL(native_load_idt);
 
<span class="p_add">+EXPORT_SYMBOL_GPL(pvfull_info);</span>
 EXPORT_SYMBOL(pvfull_cpu_ops);
 EXPORT_SYMBOL_GPL(pvfull_irq_ops);
 EXPORT_SYMBOL(pvfull_mmu_ops);
<span class="p_header">diff --git a/arch/x86/lguest/boot.c b/arch/x86/lguest/boot.c</span>
<span class="p_header">index b9757853cf79..86b8b1a0c99e 100644</span>
<span class="p_header">--- a/arch/x86/lguest/boot.c</span>
<span class="p_header">+++ b/arch/x86/lguest/boot.c</span>
<span class="p_chunk">@@ -1390,9 +1390,9 @@</span> <span class="p_context"> __init void lguest_init(void)</span>
 	/* We&#39;re under lguest. */
 	pv_info.name = &quot;lguest&quot;;
 	/* We&#39;re running at privilege level 1, not 0 as normal. */
<span class="p_del">-	pv_info.kernel_rpl = 1;</span>
<span class="p_add">+	pvfull_info.kernel_rpl = 1;</span>
 	/* Everyone except Xen runs with this set. */
<span class="p_del">-	pv_info.shared_kernel_pmd = 1;</span>
<span class="p_add">+	pvfull_info.shared_kernel_pmd = 1;</span>
 
 	/*
 	 * We set up all the lguest overrides for sensitive operations.  These
<span class="p_header">diff --git a/arch/x86/xen/enlighten_pv.c b/arch/x86/xen/enlighten_pv.c</span>
<span class="p_header">index 9badad9f82e0..dcf1b4183c49 100644</span>
<span class="p_header">--- a/arch/x86/xen/enlighten_pv.c</span>
<span class="p_header">+++ b/arch/x86/xen/enlighten_pv.c</span>
<span class="p_chunk">@@ -1059,13 +1059,12 @@</span> <span class="p_context"> static unsigned xen_patch(u8 type, u16 clobbers, void *insnbuf,</span>
 	return ret;
 }
 
<span class="p_del">-static const struct pv_info xen_info __initconst = {</span>
<span class="p_add">+static const struct pvfull_info xen_info __initconst = {</span>
 	.shared_kernel_pmd = 0,
 
 #ifdef CONFIG_X86_64
 	.extra_user_64bit_cs = FLAT_USER_CS64,
 #endif
<span class="p_del">-	.name = &quot;Xen&quot;,</span>
 };
 
 static const struct pv_init_ops xen_init_ops __initconst = {
<span class="p_chunk">@@ -1267,7 +1266,8 @@</span> <span class="p_context"> asmlinkage __visible void __init xen_start_kernel(void)</span>
 	xen_setup_machphys_mapping();
 
 	/* Install Xen paravirt ops */
<span class="p_del">-	pv_info = xen_info;</span>
<span class="p_add">+	pvfull_info = xen_info;</span>
<span class="p_add">+	pv_info.name = &quot;Xen&quot;;</span>
 	pv_init_ops = xen_init_ops;
 	pvfull_cpu_ops = xen_cpu_ops;
 	pv_cpu_ops.io_delay = xen_io_delay;
<span class="p_chunk">@@ -1358,11 +1358,11 @@</span> <span class="p_context"> asmlinkage __visible void __init xen_start_kernel(void)</span>
 	/* keep using Xen gdt for now; no urgent need to change it */
 
 #ifdef CONFIG_X86_32
<span class="p_del">-	pv_info.kernel_rpl = 1;</span>
<span class="p_add">+	pvfull_info.kernel_rpl = 1;</span>
 	if (xen_feature(XENFEAT_supervisor_mode_kernel))
<span class="p_del">-		pv_info.kernel_rpl = 0;</span>
<span class="p_add">+		pvfull_info.kernel_rpl = 0;</span>
 #else
<span class="p_del">-	pv_info.kernel_rpl = 0;</span>
<span class="p_add">+	pvfull_info.kernel_rpl = 0;</span>
 #endif
 	/* set the limit of our address space */
 	xen_reserve_top();

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



