
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v3,1/1] arm64/dma-mapping: reduce an unnecessary conversion for coherent DMA - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v3,1/1] arm64/dma-mapping: reduce an unnecessary conversion for coherent DMA</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=72826">lei zhen</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 22, 2016, 3:18 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1458616709-21888-2-git-send-email-thunder.leizhen@huawei.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8637791/mbox/"
   >mbox</a>
|
   <a href="/patch/8637791/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8637791/">/patch/8637791/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 56B35C0553
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 22 Mar 2016 03:17:45 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id B2EC220306
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 22 Mar 2016 03:17:44 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 0AACB202FE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 22 Mar 2016 03:17:44 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751868AbcCVDR1 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 21 Mar 2016 23:17:27 -0400
Received: from szxga02-in.huawei.com ([119.145.14.65]:48710 &quot;EHLO
	szxga02-in.huawei.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751056AbcCVDRZ (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 21 Mar 2016 23:17:25 -0400
Received: from 172.24.1.47 (EHLO szxeml434-hub.china.huawei.com)
	([172.24.1.47])
	by szxrg02-dlp.huawei.com (MOS 4.3.7-GA FastPath queued)
	with ESMTP id DDY03680; Tue, 22 Mar 2016 11:17:16 +0800 (CST)
Received: from localhost (10.177.23.164) by szxeml434-hub.china.huawei.com
	(10.82.67.225) with Microsoft SMTP Server id 14.3.235.1;
	Tue, 22 Mar 2016 11:17:08 +0800
From: Zhen Lei &lt;thunder.leizhen@huawei.com&gt;
To: Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	Will Deacon &lt;will.deacon@arm.com&gt;,
	linux-arm-kernel &lt;linux-arm-kernel@lists.infradead.org&gt;,
	linux-kernel &lt;linux-kernel@vger.kernel.org&gt;
CC: Zefan Li &lt;lizefan@huawei.com&gt;, Xinwei Hu &lt;huxinwei@huawei.com&gt;,
	&quot;Tianhong Ding&quot; &lt;dingtianhong@huawei.com&gt;,
	Hanjun Guo &lt;guohanjun@huawei.com&gt;, Zhen Lei &lt;thunder.leizhen@huawei.com&gt;
Subject: [PATCH v3 1/1] arm64/dma-mapping: reduce an unnecessary conversion
	for coherent DMA
Date: Tue, 22 Mar 2016 11:18:29 +0800
Message-ID: &lt;1458616709-21888-2-git-send-email-thunder.leizhen@huawei.com&gt;
X-Mailer: git-send-email 1.9.5.msysgit.1
In-Reply-To: &lt;1458616709-21888-1-git-send-email-thunder.leizhen@huawei.com&gt;
References: &lt;1458616709-21888-1-git-send-email-thunder.leizhen@huawei.com&gt;
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [10.177.23.164]
X-CFilter-Loop: Reflected
X-Mirapoint-Virus-RAPID-Raw: score=unknown(0),
	refid=str=0001.0A020202.56F0B943.006E, ss=1, re=0.000, recu=0.000,
	reip=0.000, cl=1, cld=1, fgs=0, ip=0.0.0.0,
	so=2013-06-18 04:22:30, dmn=2013-03-21 17:37:32
X-Mirapoint-Loop-Id: 46a84f2cbdd3496d96972dd097d6a7ec
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72826">lei zhen</a> - March 22, 2016, 3:18 a.m.</div>
<pre class="content">
1.For coherent DMA
  In swiotlb_alloc_coherent, it directly return vaddr on success, and
pass vaddr to free_pages on failure. So, we can directly transparent pass
vaddr from __dma_free to swiotlb_free_coherent.
  According to my testing, it can save 8 clock cycles.

2.For non-coherent DMA.
  Keep no change for the original processing flow.
  Because all DDR memory mapped as cacheable by default. But for
non-coherent devices, both CPUs and devices should use NC(non-cacheable)
attributes to access memory, to keep consistency. So we can not directly
use vaddr retured by __dma_alloc_coherent, but should further remap the
physical memory as NC and return it. So in __dma_free, we first use the
NC-vaddr to unmap, then get vaddr base upon dma_handle and use it to free
memory back to buddy.
<span class="signed-off-by">
Signed-off-by: Zhen Lei &lt;thunder.leizhen@huawei.com&gt;</span>
---
 arch/arm64/mm/dma-mapping.c | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

--
2.5.0
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/mm/dma-mapping.c b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">index a6e757c..ceb2018 100644</span>
<span class="p_header">--- a/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">+++ b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_chunk">@@ -187,16 +187,22 @@</span> <span class="p_context"> static void __dma_free(struct device *dev, size_t size,</span>
 		       void *vaddr, dma_addr_t dma_handle,
 		       struct dma_attrs *attrs)
 {
<span class="p_del">-	void *swiotlb_addr = phys_to_virt(dma_to_phys(dev, dma_handle));</span>
<span class="p_del">-</span>
 	size = PAGE_ALIGN(size);

 	if (!is_device_dma_coherent(dev)) {
 		if (__free_from_pool(vaddr, size))
 			return;
 		vunmap(vaddr);
<span class="p_add">+</span>
<span class="p_add">+		/*</span>
<span class="p_add">+		 * For non-coherent DMA, the vaddr is not part of the linear</span>
<span class="p_add">+		 * mapping as it has been remapped by __dma_alloc() via</span>
<span class="p_add">+		 * dma_common_contiguous_remap(), hence for swiotlb freeing we</span>
<span class="p_add">+		 * need the actual linear map address.</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		vaddr = phys_to_virt(dma_to_phys(dev, dma_handle));</span>
 	}
<span class="p_del">-	__dma_free_coherent(dev, size, swiotlb_addr, dma_handle, attrs);</span>
<span class="p_add">+	__dma_free_coherent(dev, size, vaddr, dma_handle, attrs);</span>
 }

 static dma_addr_t __swiotlb_map_page(struct device *dev, struct page *page,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



