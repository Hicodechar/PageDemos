
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>arm64: do not set dma masks that device connection can&#39;t handle - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    arm64: do not set dma masks that device connection can&#39;t handle</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=170319">Nikita Yushchenko</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 6, 2017, 2:38 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1483713515-1945-1-git-send-email-nikita.yoush@cogentembedded.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9501229/mbox/"
   >mbox</a>
|
   <a href="/patch/9501229/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9501229/">/patch/9501229/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	797C2606E0 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  6 Jan 2017 14:39:41 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4A9CB2840A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  6 Jan 2017 14:39:41 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 3F48F284C8; Fri,  6 Jan 2017 14:39:41 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.4 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, RCVD_IN_DNSWL_HI, RCVD_IN_SORBS_SPAM autolearn=unavailable
	version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3C78B28473
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  6 Jan 2017 14:39:39 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S933987AbdAFOjh (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 6 Jan 2017 09:39:37 -0500
Received: from mail-lf0-f45.google.com ([209.85.215.45]:34094 &quot;EHLO
	mail-lf0-f45.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1757671AbdAFOis (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 6 Jan 2017 09:38:48 -0500
Received: by mail-lf0-f45.google.com with SMTP id v186so746760lfa.1
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Fri, 06 Jan 2017 06:38:47 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=cogentembedded-com.20150623.gappssmtp.com; s=20150623;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=9V5X+R3U5lreAX3OFyPrsE5JjCOupL7Mp4yWcubDhxU=;
	b=VP16GRRvx2yAfevMfjKqg0422D+wKtrwpnVaoYuZuvlggXN00r56D8rKzy71bR0+X/
	cGVco6uUM1xjX+glgwzUL6nX4ufjUXzJkrv7REqz+IKL7jhfQUXhlPdbO7Cmog5W9Q6b
	py1sAQ3ccuBKwcx1mkNWm+psE+/IRqqFQ3ZnU8WM+uOaxgpmyDB1B/QM7ErGN/GkF8f+
	y0M7TqTquznOs2dIL2i388DlwX98WCNtlzKINbnpgG9DYZGoK5mEMt2nkTFy/ls6GNeY
	qYpi4Ghxa+m1awQKr7TUc6oIhfpddr+qwCa0ccLzTg3gDl0/Y8yS+3gRHCiPQHIYxE07
	xF8g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=9V5X+R3U5lreAX3OFyPrsE5JjCOupL7Mp4yWcubDhxU=;
	b=cvJPbbmeVOWg7juIbM7J+/a4OqqW3XU2N6UkSMCJUgDZ+QaIaQ/u7MaKM+1ZIv691p
	RDcFqqht28aboNcW1VsBZNFL4+iyU9V8/7zhryngM32kX0yg+EIcivm1P/Wv7MQ1ah4d
	T9Y5EBlr/4nTRs/DObUvK6qUQuAvBl5RT328Eoj5uJZF1VNjjwGx3oXJJxbhBIYn8uiI
	Mnewd46fhWlQnzLLInu5vpYDmnKdWtAUBOIIMbPJ05GLuXTx5zaiyA7S9kI+M0l89OK1
	tbEdOc9g0/raMThG6oQPc60Gi+Btb8h1V01JHh5W5CvUGwkE0RkzwVzgcbnhSTmUzXC7
	U8fQ==
X-Gm-Message-State: AIkVDXKd15MN/SRMclN0L13g4oxcK87HqggWz6eWWVt+UXhDmWyiOlXRjjQx+OD33Dg55Q==
X-Received: by 10.25.204.216 with SMTP id c207mr8114360lfg.107.1483713526482;
	Fri, 06 Jan 2017 06:38:46 -0800 (PST)
Received: from hugenb.home (nikaet.starlink.ru. [94.141.168.29])
	by smtp.gmail.com with ESMTPSA id
	e6sm12067055lji.34.2017.01.06.06.38.45
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Fri, 06 Jan 2017 06:38:45 -0800 (PST)
From: Nikita Yushchenko &lt;nikita.yoush@cogentembedded.com&gt;
To: Arnd Bergmann &lt;arnd@arndb.de&gt;
Cc: linux-arm-kernel@lists.infradead.org, Will Deacon &lt;will.deacon@arm.com&gt;,
	Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	linux-kernel@vger.kernel.org, linux-renesas-soc@vger.kernel.org,
	Simon Horman &lt;horms@verge.net.au&gt;, Bjorn Helgaas &lt;bhelgaas@google.com&gt;,
	artemi.ivanov@cogentembedded.com,
	Nikita Yushchenko &lt;nikita.yoush@cogentembedded.com&gt;
Subject: [PATCH] arm64: do not set dma masks that device connection can&#39;t
	handle
Date: Fri,  6 Jan 2017 17:38:35 +0300
Message-Id: &lt;1483713515-1945-1-git-send-email-nikita.yoush@cogentembedded.com&gt;
X-Mailer: git-send-email 2.1.4
In-Reply-To: &lt;9a03c05d-ad4c-0547-d1fe-01edb8b082d6@cogentembedded.com&gt;
References: &lt;9a03c05d-ad4c-0547-d1fe-01edb8b082d6@cogentembedded.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=170319">Nikita Yushchenko</a> - Jan. 6, 2017, 2:38 p.m.</div>
<pre class="content">
It is possible that device is capable of 64-bit DMA addresses, and
device driver tries to set wide DMA mask, but bridge or bus used to
connect device to the system can&#39;t handle wide addresses.

With swiotlb, memory above 4G still can be used by drivers for streaming
DMA, but *dev-&gt;mask and dev-&gt;dma_coherent_mask must still keep values
that hardware handles physically.

This patch enforces that. Based on original version by
Arnd Bergmann &lt;arnd@arndb.de&gt;, extended with coherent mask hadnling.
<span class="signed-off-by">
Signed-off-by: Nikita Yushchenko &lt;nikita.yoush@cogentembedded.com&gt;</span>
CC: Arnd Bergmann &lt;arnd@arndb.de&gt;
---
 arch/arm64/Kconfig              |  3 +++
 arch/arm64/include/asm/device.h |  1 +
 arch/arm64/mm/dma-mapping.c     | 40 ++++++++++++++++++++++++++++++++++++++++
 3 files changed, 44 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/Kconfig b/arch/arm64/Kconfig</span>
<span class="p_header">index 1117421..afb2c08 100644</span>
<span class="p_header">--- a/arch/arm64/Kconfig</span>
<span class="p_header">+++ b/arch/arm64/Kconfig</span>
<span class="p_chunk">@@ -216,6 +216,9 @@</span> <span class="p_context"> config NEED_DMA_MAP_STATE</span>
 config NEED_SG_DMA_LENGTH
 	def_bool y
 
<span class="p_add">+config ARCH_HAS_DMA_SET_COHERENT_MASK</span>
<span class="p_add">+	def_bool y</span>
<span class="p_add">+</span>
 config SMP
 	def_bool y
 
<span class="p_header">diff --git a/arch/arm64/include/asm/device.h b/arch/arm64/include/asm/device.h</span>
<span class="p_header">index 243ef25..a57e7bb 100644</span>
<span class="p_header">--- a/arch/arm64/include/asm/device.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/device.h</span>
<span class="p_chunk">@@ -22,6 +22,7 @@</span> <span class="p_context"> struct dev_archdata {</span>
 	void *iommu;			/* private IOMMU data */
 #endif
 	bool dma_coherent;
<span class="p_add">+	u64 parent_dma_mask;</span>
 };
 
 struct pdev_archdata {
<span class="p_header">diff --git a/arch/arm64/mm/dma-mapping.c b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">index 290a84f..be3632e 100644</span>
<span class="p_header">--- a/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">+++ b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_chunk">@@ -352,6 +352,31 @@</span> <span class="p_context"> static int __swiotlb_dma_supported(struct device *hwdev, u64 mask)</span>
 	return 1;
 }
 
<span class="p_add">+static int __swiotlb_set_dma_mask(struct device *dev, u64 mask)</span>
<span class="p_add">+{</span>
<span class="p_add">+	/* device is not DMA capable */</span>
<span class="p_add">+	if (!dev-&gt;dma_mask)</span>
<span class="p_add">+		return -EIO;</span>
<span class="p_add">+</span>
<span class="p_add">+	/* mask is below swiotlb bounce buffer, so fail */</span>
<span class="p_add">+	if (!swiotlb_dma_supported(dev, mask))</span>
<span class="p_add">+		return -EIO;</span>
<span class="p_add">+</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * because of the swiotlb, we can return success for</span>
<span class="p_add">+	 * larger masks, but need to ensure that bounce buffers</span>
<span class="p_add">+	 * are used above parent_dma_mask, so set that as</span>
<span class="p_add">+	 * the effective mask.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	if (mask &gt; dev-&gt;archdata.parent_dma_mask)</span>
<span class="p_add">+		mask = dev-&gt;archdata.parent_dma_mask;</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
<span class="p_add">+	*dev-&gt;dma_mask = mask;</span>
<span class="p_add">+</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static struct dma_map_ops swiotlb_dma_ops = {
 	.alloc = __dma_alloc,
 	.free = __dma_free,
<span class="p_chunk">@@ -367,8 +392,23 @@</span> <span class="p_context"> static struct dma_map_ops swiotlb_dma_ops = {</span>
 	.sync_sg_for_device = __swiotlb_sync_sg_for_device,
 	.dma_supported = __swiotlb_dma_supported,
 	.mapping_error = swiotlb_dma_mapping_error,
<span class="p_add">+	.set_dma_mask = __swiotlb_set_dma_mask,</span>
 };
 
<span class="p_add">+int dma_set_coherent_mask(struct device *dev, u64 mask)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if (!dma_supported(dev, mask))</span>
<span class="p_add">+		return -EIO;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (get_dma_ops(dev) == &amp;swiotlb_dma_ops &amp;&amp;</span>
<span class="p_add">+	    mask &gt; dev-&gt;archdata.parent_dma_mask)</span>
<span class="p_add">+		mask = dev-&gt;archdata.parent_dma_mask;</span>
<span class="p_add">+</span>
<span class="p_add">+	dev-&gt;coherent_dma_mask = mask;</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+EXPORT_SYMBOL(dma_set_coherent_mask);</span>
<span class="p_add">+</span>
 static int __init atomic_pool_init(void)
 {
 	pgprot_t prot = __pgprot(PROT_NORMAL_NC);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



