
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>sdhci broke in 4.14 [was: MMC fixes for v.4.14-rc4] - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    sdhci broke in 4.14 [was: MMC fixes for v.4.14-rc4]</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=45281">Ulf Hansson</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 21, 2017, 3:08 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;CAPDyKFrzVaE=upRbJ+sq2rRcR1uitw2QEvTzt=pjtoNh1bij9Q@mail.gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10068425/mbox/"
   >mbox</a>
|
   <a href="/patch/10068425/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10068425/">/patch/10068425/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	24006602B7 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 21 Nov 2017 15:08:50 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1617229736
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 21 Nov 2017 15:08:50 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 0AC5329747; Tue, 21 Nov 2017 15:08:50 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU,
	RCVD_IN_DNSWL_HI autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 8C6AB29740
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 21 Nov 2017 15:08:49 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751350AbdKUPIr (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 21 Nov 2017 10:08:47 -0500
Received: from mail-it0-f68.google.com ([209.85.214.68]:37694 &quot;EHLO
	mail-it0-f68.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751154AbdKUPIp (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 21 Nov 2017 10:08:45 -0500
Received: by mail-it0-f68.google.com with SMTP id m191so2383694itg.2
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Tue, 21 Nov 2017 07:08:44 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=mime-version:in-reply-to:references:from:date:message-id:subject:to
	:cc; bh=/5ADKqCRHzhrGMl8mBV3ExLsuJuFyg74tQ3gQCplMuY=;
	b=D67ZtkrfACZP3fV65ZtU2AI2TJuH3vRewgu8tMMHliRl33gESLkVvKRrq9uKUSYw0r
	kfm7mAZgQnHN4B5DtlwqZqOi4siTdbKh72MrWkaMZvKH7XXBMOHlrFoC0rNzalOhv18L
	p9Vhveo88Cv/4NARiMitnAztIHzfn2/4l/UnM=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:mime-version:in-reply-to:references:from:date
	:message-id:subject:to:cc;
	bh=/5ADKqCRHzhrGMl8mBV3ExLsuJuFyg74tQ3gQCplMuY=;
	b=IOP3NDttA3EMuWqWNdD52L40vhG3EjhAcTEBsoYNnYDEsp5JA5VU+Bcm4/yKr1aXNG
	FTxjGt8V+mCyjG2Odv5ZMsA+WIyP8jJ8YcYAemut8PVMwYrwOWGwr/2Fc8r79wgBBa9y
	vmIofQVBgyh3+VfipBVte0s0vJlWkkDRgg60JX+ahAwe3GqDqw5zA6yvEMLfqDBuMTPh
	KA17e0WmnSbwJ23RcTvzoSrKz6/TsPpr372YfKisvnuQ2IqgnKo75B+s+eWjOy+9ycfG
	GJExhjKSsJeForsnipjSD9IOETW/lekXD9/96bturbsV72Js93nOt7fLnYwCXFEkKaWV
	VlbQ==
X-Gm-Message-State: AJaThX5l0AbEb34MRhpEq3Zd6plWTKCy1EPszNtT7jRtT2o2DfsOFU0S
	C3XjEz6Igy5uh6lCh9u/uXyYQrYLC13tkpmDv8tWag==
X-Google-Smtp-Source: AGs4zMa56mxTuqLBSiwhMK11HEHxINroRYEt6ZbDHdeyZHlJazGP5xbCQJA063283E2PewxFQKpWw/TYV477VudVJxI=
X-Received: by 10.36.236.5 with SMTP id g5mr2241679ith.73.1511276924307; Tue,
	21 Nov 2017 07:08:44 -0800 (PST)
MIME-Version: 1.0
Received: by 10.2.86.149 with HTTP; Tue, 21 Nov 2017 07:08:43 -0800 (PST)
In-Reply-To: &lt;2248b8b6-a80f-52ef-943f-54c1351d5a36@suse.cz&gt;
References: &lt;1507361610-31577-1-git-send-email-ulf.hansson@linaro.org&gt;
	&lt;2248b8b6-a80f-52ef-943f-54c1351d5a36@suse.cz&gt;
From: Ulf Hansson &lt;ulf.hansson@linaro.org&gt;
Date: Tue, 21 Nov 2017 16:08:43 +0100
Message-ID: &lt;CAPDyKFrzVaE=upRbJ+sq2rRcR1uitw2QEvTzt=pjtoNh1bij9Q@mail.gmail.com&gt;
Subject: Re: sdhci broke in 4.14 [was: MMC fixes for v.4.14-rc4]
To: Jiri Slaby &lt;jslaby@suse.cz&gt;
Cc: Linus &lt;torvalds@linux-foundation.org&gt;,
	&quot;linux-mmc@vger.kernel.org&quot; &lt;linux-mmc@vger.kernel.org&gt;,
	&quot;linux-kernel@vger.kernel.org&quot; &lt;linux-kernel@vger.kernel.org&gt;,
	Jaehoon Chung &lt;jh80.chung@samsung.com&gt;,
	Adrian Hunter &lt;adrian.hunter@intel.com&gt;,
	Linus Walleij &lt;linus.walleij@linaro.org&gt;,
	Yoshihiro Shimoda &lt;yoshihiro.shimoda.uh@renesas.com&gt;,
	Geert Uytterhoeven &lt;geert+renesas@glider.be&gt;,
	Konrad Rzeszutek Wilk &lt;konrad@kernel.org&gt;
Content-Type: text/plain; charset=&quot;UTF-8&quot;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=45281">Ulf Hansson</a> - Nov. 21, 2017, 3:08 p.m.</div>
<pre class="content">
+ Yoshihiro, Geert, Konrad

On 20 November 2017 at 14:12, Jiri Slaby &lt;jslaby@suse.cz&gt; wrote:
<span class="quote">&gt; On 10/07/2017, 09:33 AM, Ulf Hansson wrote:</span>
<span class="quote">&gt;&gt; Here&#39;s a PR with a couple of MMC fixes intended for v4.14-rc4. Details about the</span>
<span class="quote">&gt;&gt; highlights are as usual found in the signed tag.</span>
<span class="quote">&gt; ...</span>
<span class="quote">&gt;&gt; ----------------------------------------------------------------</span>
<span class="quote">&gt;&gt; MMC core:</span>
<span class="quote">&gt;&gt;  - Delete bounce buffer handling:</span>
<span class="quote">&gt;&gt;    This change fixes a problem related to how bounce buffers are being</span>
<span class="quote">&gt;&gt;    allocated. However, instead of trying to fix that, let&#39;s just remove</span>
<span class="quote">&gt;&gt;    the mmc bounce buffer code altogether, as it has practically no use.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; That is completely false, this breaks my sd card reader in 4.14 so that</span>
<span class="quote">&gt; the system is mostly unusable during transfers -- it is stuttering:</span>
<span class="quote">&gt; sdhci-pci 0000:02:00.0: swiotlb buffer is full (sz: 311296 bytes)</span>
<span class="quote">&gt; sdhci-pci 0000:02:00.0: DMA: Out of SW-IOMMU space for 311296 bytes</span>
<span class="quote">&gt; sdhci-pci 0000:02:00.0: swiotlb buffer is full (sz: 311296 bytes)</span>
<span class="quote">&gt; sdhci-pci 0000:02:00.0: DMA: Out of SW-IOMMU space for 311296 bytes</span>

Thanks for reporting!

This is a similar problem that was reported for the tmio mmc driver,
which got fixed in commit e90e8da72ad6 (&quot;mmc: tmio: fix swiotlb buffer
is full&quot;).

It seems like we need something along those lines for the sdhci-pci
case as well. I cooked a patch, perhaps you have some time for test?

I also looped in the folkz involved in the fix for tmio mmc, let&#39;s see
if they can comment. My worries is only that there seems to be yet
some additional cases that may set mmc-&gt;max_segs = 1, so perhaps we
should actually try to deal with these case from mmc_add_host()
instead. Anyway, let&#39;s try this out first.


Subject: [PATCH] mmc: sdhci: Fix bounce buffer overflow
<span class="signed-off-by">
Signed-off-by: Ulf Hansson &lt;ulf.hansson@linaro.org&gt;</span>
---
 drivers/mmc/host/sdhci.c | 28 ++++++++++++++++++----------
 1 file changed, 18 insertions(+), 10 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=887">Jiri Slaby</a> - Nov. 21, 2017, 3:13 p.m.</div>
<pre class="content">
On 11/21/2017, 04:08 PM, Ulf Hansson wrote:
<span class="quote">&gt; It seems like we need something along those lines for the sdhci-pci</span>
<span class="quote">&gt; case as well. I cooked a patch, perhaps you have some time for test?</span>

Sure, but before I start, I want to double check: don&#39;t you want me to
stick some pr_info in there to see if the computation is correct?

thanks,
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=45281">Ulf Hansson</a> - Nov. 21, 2017, 4:13 p.m.</div>
<pre class="content">
On 21 November 2017 at 16:13, Jiri Slaby &lt;jslaby@suse.cz&gt; wrote:
<span class="quote">&gt; On 11/21/2017, 04:08 PM, Ulf Hansson wrote:</span>
<span class="quote">&gt;&gt; It seems like we need something along those lines for the sdhci-pci</span>
<span class="quote">&gt;&gt; case as well. I cooked a patch, perhaps you have some time for test?</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Sure, but before I start, I want to double check: don&#39;t you want me to</span>
<span class="quote">&gt; stick some pr_info in there to see if the computation is correct?</span>

Yeah, that seems like a good idea. :-)

Br
Uffe
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=887">Jiri Slaby</a> - Nov. 24, 2017, 3:15 p.m.</div>
<pre class="content">
On 11/21/2017, 04:08 PM, Ulf Hansson wrote:
<span class="quote">&gt; Subject: [PATCH] mmc: sdhci: Fix bounce buffer overflow</span>
...
<span class="quote">&gt; --- a/drivers/mmc/host/sdhci.c</span>
<span class="quote">&gt; +++ b/drivers/mmc/host/sdhci.c</span>
...
<span class="quote">&gt; @@ -3651,22 +3652,29 @@ int sdhci_setup_host(struct sdhci_host *host)</span>
<span class="quote">&gt;         spin_lock_init(&amp;host-&gt;lock);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;         /*</span>
<span class="quote">&gt; +        * Maximum number of sectors in one transfer. Limited by SDMA boundary</span>
<span class="quote">&gt; +        * size (512KiB). Note some tuning modes impose a 4MiB limit, but this</span>
<span class="quote">&gt; +        * is less anyway.</span>
<span class="quote">&gt; +        */</span>
<span class="quote">&gt; +       mmc-&gt;max_req_size = 524288;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +       /*</span>
<span class="quote">&gt;          * Maximum number of segments. Depends on if the hardware</span>
<span class="quote">&gt;          * can do scatter/gather or not.</span>
<span class="quote">&gt;          */</span>
<span class="quote">&gt; -       if (host-&gt;flags &amp; SDHCI_USE_ADMA)</span>
<span class="quote">&gt; +       if (host-&gt;flags &amp; SDHCI_USE_ADMA) {</span>
<span class="quote">&gt;                 mmc-&gt;max_segs = SDHCI_MAX_SEGS;</span>
<span class="quote">&gt; -       else if (host-&gt;flags &amp; SDHCI_USE_SDMA)</span>
<span class="quote">&gt; +       } else if (host-&gt;flags &amp; SDHCI_USE_SDMA) {</span>
<span class="quote">&gt;                 mmc-&gt;max_segs = 1;</span>
<span class="quote">&gt; -       else /* PIO */</span>
<span class="quote">&gt; +               if (swiotlb_max_segment()) {</span>
<span class="quote">&gt; +                       unsigned int max_req_size = (1 &lt;&lt; IO_TLB_SHIFT) *</span>
<span class="quote">&gt; +                                               IO_TLB_SEGSIZE;</span>
<span class="quote">&gt; +                       mmc-&gt;max_req_size = min(mmc-&gt;max_req_size,</span>
<span class="quote">&gt; +                                               max_req_size);</span>
<span class="quote">&gt; +               }</span>
<span class="quote">&gt; +       } else { /* PIO */</span>
<span class="quote">&gt;                 mmc-&gt;max_segs = SDHCI_MAX_SEGS;</span>

It seems to work fine. FWIW the debug output is:
[    0.708312] mmc0: max_segs=1 max_req_size=262144 h-&gt;flags=00004001

thanks,
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=45281">Ulf Hansson</a> - Nov. 24, 2017, 3:20 p.m.</div>
<pre class="content">
On 24 November 2017 at 16:15, Jiri Slaby &lt;jslaby@suse.cz&gt; wrote:
<span class="quote">&gt; On 11/21/2017, 04:08 PM, Ulf Hansson wrote:</span>
<span class="quote">&gt;&gt; Subject: [PATCH] mmc: sdhci: Fix bounce buffer overflow</span>
<span class="quote">&gt; ...</span>
<span class="quote">&gt;&gt; --- a/drivers/mmc/host/sdhci.c</span>
<span class="quote">&gt;&gt; +++ b/drivers/mmc/host/sdhci.c</span>
<span class="quote">&gt; ...</span>
<span class="quote">&gt;&gt; @@ -3651,22 +3652,29 @@ int sdhci_setup_host(struct sdhci_host *host)</span>
<span class="quote">&gt;&gt;         spin_lock_init(&amp;host-&gt;lock);</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;         /*</span>
<span class="quote">&gt;&gt; +        * Maximum number of sectors in one transfer. Limited by SDMA boundary</span>
<span class="quote">&gt;&gt; +        * size (512KiB). Note some tuning modes impose a 4MiB limit, but this</span>
<span class="quote">&gt;&gt; +        * is less anyway.</span>
<span class="quote">&gt;&gt; +        */</span>
<span class="quote">&gt;&gt; +       mmc-&gt;max_req_size = 524288;</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +       /*</span>
<span class="quote">&gt;&gt;          * Maximum number of segments. Depends on if the hardware</span>
<span class="quote">&gt;&gt;          * can do scatter/gather or not.</span>
<span class="quote">&gt;&gt;          */</span>
<span class="quote">&gt;&gt; -       if (host-&gt;flags &amp; SDHCI_USE_ADMA)</span>
<span class="quote">&gt;&gt; +       if (host-&gt;flags &amp; SDHCI_USE_ADMA) {</span>
<span class="quote">&gt;&gt;                 mmc-&gt;max_segs = SDHCI_MAX_SEGS;</span>
<span class="quote">&gt;&gt; -       else if (host-&gt;flags &amp; SDHCI_USE_SDMA)</span>
<span class="quote">&gt;&gt; +       } else if (host-&gt;flags &amp; SDHCI_USE_SDMA) {</span>
<span class="quote">&gt;&gt;                 mmc-&gt;max_segs = 1;</span>
<span class="quote">&gt;&gt; -       else /* PIO */</span>
<span class="quote">&gt;&gt; +               if (swiotlb_max_segment()) {</span>
<span class="quote">&gt;&gt; +                       unsigned int max_req_size = (1 &lt;&lt; IO_TLB_SHIFT) *</span>
<span class="quote">&gt;&gt; +                                               IO_TLB_SEGSIZE;</span>
<span class="quote">&gt;&gt; +                       mmc-&gt;max_req_size = min(mmc-&gt;max_req_size,</span>
<span class="quote">&gt;&gt; +                                               max_req_size);</span>
<span class="quote">&gt;&gt; +               }</span>
<span class="quote">&gt;&gt; +       } else { /* PIO */</span>
<span class="quote">&gt;&gt;                 mmc-&gt;max_segs = SDHCI_MAX_SEGS;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; It seems to work fine. FWIW the debug output is:</span>
<span class="quote">&gt; [    0.708312] mmc0: max_segs=1 max_req_size=262144 h-&gt;flags=00004001</span>

Thanks for testing!

I post a proper formatted patch very soon.

Kind regards
Uffe
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/mmc/host/sdhci.c b/drivers/mmc/host/sdhci.c</span>
<span class="p_header">index 2f14334..e9290a3 100644</span>
<span class="p_header">--- a/drivers/mmc/host/sdhci.c</span>
<span class="p_header">+++ b/drivers/mmc/host/sdhci.c</span>
<span class="p_chunk">@@ -21,6 +21,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/dma-mapping.h&gt;
 #include &lt;linux/slab.h&gt;
 #include &lt;linux/scatterlist.h&gt;
<span class="p_add">+#include &lt;linux/swiotlb.h&gt;</span>
 #include &lt;linux/regulator/consumer.h&gt;
 #include &lt;linux/pm_runtime.h&gt;
 #include &lt;linux/of.h&gt;
<span class="p_chunk">@@ -3651,22 +3652,29 @@</span> <span class="p_context"> int sdhci_setup_host(struct sdhci_host *host)</span>
        spin_lock_init(&amp;host-&gt;lock);

        /*
<span class="p_add">+        * Maximum number of sectors in one transfer. Limited by SDMA boundary</span>
<span class="p_add">+        * size (512KiB). Note some tuning modes impose a 4MiB limit, but this</span>
<span class="p_add">+        * is less anyway.</span>
<span class="p_add">+        */</span>
<span class="p_add">+       mmc-&gt;max_req_size = 524288;</span>
<span class="p_add">+</span>
<span class="p_add">+       /*</span>
         * Maximum number of segments. Depends on if the hardware
         * can do scatter/gather or not.
         */
<span class="p_del">-       if (host-&gt;flags &amp; SDHCI_USE_ADMA)</span>
<span class="p_add">+       if (host-&gt;flags &amp; SDHCI_USE_ADMA) {</span>
                mmc-&gt;max_segs = SDHCI_MAX_SEGS;
<span class="p_del">-       else if (host-&gt;flags &amp; SDHCI_USE_SDMA)</span>
<span class="p_add">+       } else if (host-&gt;flags &amp; SDHCI_USE_SDMA) {</span>
                mmc-&gt;max_segs = 1;
<span class="p_del">-       else /* PIO */</span>
<span class="p_add">+               if (swiotlb_max_segment()) {</span>
<span class="p_add">+                       unsigned int max_req_size = (1 &lt;&lt; IO_TLB_SHIFT) *</span>
<span class="p_add">+                                               IO_TLB_SEGSIZE;</span>
<span class="p_add">+                       mmc-&gt;max_req_size = min(mmc-&gt;max_req_size,</span>
<span class="p_add">+                                               max_req_size);</span>
<span class="p_add">+               }</span>
<span class="p_add">+       } else { /* PIO */</span>
                mmc-&gt;max_segs = SDHCI_MAX_SEGS;
<span class="p_del">-</span>
<span class="p_del">-       /*</span>
<span class="p_del">-        * Maximum number of sectors in one transfer. Limited by SDMA boundary</span>
<span class="p_del">-        * size (512KiB). Note some tuning modes impose a 4MiB limit, but this</span>
<span class="p_del">-        * is less anyway.</span>
<span class="p_del">-        */</span>
<span class="p_del">-       mmc-&gt;max_req_size = 524288;</span>
<span class="p_add">+       }</span>

        /*
         * Maximum segment size. Could be one segment with the maximum number

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



