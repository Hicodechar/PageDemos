
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[tip:x86/platform] x86/platform/uv/BAU: Clean up vertical alignment - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [tip:x86/platform] x86/platform/uv/BAU: Clean up vertical alignment</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 22, 2016, 10:28 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;tip-67492c86b33db0a8a056c72293d4802b37ac8ac6@git.kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9344959/mbox/"
   >mbox</a>
|
   <a href="/patch/9344959/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9344959/">/patch/9344959/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	E343160757 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 22 Sep 2016 10:31:09 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C8CB82A97F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 22 Sep 2016 10:31:09 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id B89672A981; Thu, 22 Sep 2016 10:31:09 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7FAFD2A97F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 22 Sep 2016 10:31:08 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754292AbcIVKbD (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 22 Sep 2016 06:31:03 -0400
Received: from terminus.zytor.com ([198.137.202.10]:51806 &quot;EHLO
	terminus.zytor.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751263AbcIVKbB (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 22 Sep 2016 06:31:01 -0400
Received: from terminus.zytor.com (localhost [127.0.0.1])
	by terminus.zytor.com (8.15.2/8.15.2) with ESMTP id u8MASfNJ025155;
	Thu, 22 Sep 2016 03:28:41 -0700
Received: (from tipbot@localhost)
	by terminus.zytor.com (8.15.2/8.15.2/Submit) id u8MASdlR025148;
	Thu, 22 Sep 2016 03:28:40 -0700
Date: Thu, 22 Sep 2016 03:28:40 -0700
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to
	tipbot@zytor.com using -f
From: tip-bot for Andrew Banman &lt;tipbot@zytor.com&gt;
Message-ID: &lt;tip-67492c86b33db0a8a056c72293d4802b37ac8ac6@git.kernel.org&gt;
Cc: torvalds@linux-foundation.org, hpa@zytor.com, sivanich@sgi.com,
	linux-kernel@vger.kernel.org, abanman@sgi.com, mingo@kernel.org,
	peterz@infradead.org, travis@sgi.com, tglx@linutronix.de
Reply-To: travis@sgi.com, tglx@linutronix.de, peterz@infradead.org,
	sivanich@sgi.com, linux-kernel@vger.kernel.org, mingo@kernel.org,
	abanman@sgi.com, hpa@zytor.com, torvalds@linux-foundation.org
In-Reply-To: &lt;1474474161-265604-2-git-send-email-abanman@sgi.com&gt;
References: &lt;1474474161-265604-2-git-send-email-abanman@sgi.com&gt;
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/platform] x86/platform/uv/BAU: Clean up vertical alignment
Git-Commit-ID: 67492c86b33db0a8a056c72293d4802b37ac8ac6
X-Mailer: tip-git-log-daemon
Robot-ID: &lt;tip-bot.git.kernel.org&gt;
Robot-Unsubscribe: Contact &lt;mailto:hpa@kernel.org&gt; to get blacklisted from
	these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a> - Sept. 22, 2016, 10:28 a.m.</div>
<pre class="content">
Commit-ID:  67492c86b33db0a8a056c72293d4802b37ac8ac6
Gitweb:     http://git.kernel.org/tip/67492c86b33db0a8a056c72293d4802b37ac8ac6
Author:     Andrew Banman &lt;abanman@sgi.com&gt;
AuthorDate: Wed, 21 Sep 2016 11:09:12 -0500
Committer:  Ingo Molnar &lt;mingo@kernel.org&gt;
CommitDate: Thu, 22 Sep 2016 11:16:12 +0200

x86/platform/uv/BAU: Clean up vertical alignment

Fix whitespace on blocks of code to be vertically aligned.
<span class="signed-off-by">
Signed-off-by: Andrew Banman &lt;abanman@sgi.com&gt;</span>
<span class="acked-by">Acked-by: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>
<span class="acked-by">Acked-by: Mike Travis &lt;travis@sgi.com&gt;</span>
<span class="acked-by">Acked-by: Dimitri Sivanich &lt;sivanich@sgi.com&gt;</span>
<span class="acked-by">Acked-by: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: akpm@linux-foundation.org
Cc: rja@sgi.com
Link: http://lkml.kernel.org/r/1474474161-265604-2-git-send-email-abanman@sgi.com
<span class="signed-off-by">Signed-off-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
---
 arch/x86/platform/uv/tlb_uv.c | 64 +++++++++++++++++++++----------------------
 1 file changed, 32 insertions(+), 32 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">index fdb4d42..b84c2a2 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_chunk">@@ -55,16 +55,16 @@</span> <span class="p_context"> static int congested_reps	= CONGESTED_REPS;</span>
 static int disabled_period	= DISABLED_PERIOD;
 
 static struct tunables tunables[] = {
<span class="p_del">-	{&amp;max_concurr, MAX_BAU_CONCURRENT}, /* must be [0] */</span>
<span class="p_del">-	{&amp;plugged_delay, PLUGGED_DELAY},</span>
<span class="p_del">-	{&amp;plugsb4reset, PLUGSB4RESET},</span>
<span class="p_del">-	{&amp;timeoutsb4reset, TIMEOUTSB4RESET},</span>
<span class="p_del">-	{&amp;ipi_reset_limit, IPI_RESET_LIMIT},</span>
<span class="p_del">-	{&amp;complete_threshold, COMPLETE_THRESHOLD},</span>
<span class="p_del">-	{&amp;congested_respns_us, CONGESTED_RESPONSE_US},</span>
<span class="p_del">-	{&amp;congested_reps, CONGESTED_REPS},</span>
<span class="p_del">-	{&amp;disabled_period, DISABLED_PERIOD},</span>
<span class="p_del">-	{&amp;giveup_limit, GIVEUP_LIMIT}</span>
<span class="p_add">+	{&amp;max_concurr,           MAX_BAU_CONCURRENT}, /* must be [0] */</span>
<span class="p_add">+	{&amp;plugged_delay,         PLUGGED_DELAY},</span>
<span class="p_add">+	{&amp;plugsb4reset,          PLUGSB4RESET},</span>
<span class="p_add">+	{&amp;timeoutsb4reset,       TIMEOUTSB4RESET},</span>
<span class="p_add">+	{&amp;ipi_reset_limit,       IPI_RESET_LIMIT},</span>
<span class="p_add">+	{&amp;complete_threshold,    COMPLETE_THRESHOLD},</span>
<span class="p_add">+	{&amp;congested_respns_us,   CONGESTED_RESPONSE_US},</span>
<span class="p_add">+	{&amp;congested_reps,        CONGESTED_REPS},</span>
<span class="p_add">+	{&amp;disabled_period,       DISABLED_PERIOD},</span>
<span class="p_add">+	{&amp;giveup_limit,          GIVEUP_LIMIT}</span>
 };
 
 static struct dentry *tunables_dir;
<span class="p_chunk">@@ -1619,17 +1619,17 @@</span> <span class="p_context"> static ssize_t tunables_write(struct file *file, const char __user *user,</span>
 
 	for_each_present_cpu(cpu) {
 		bcp = &amp;per_cpu(bau_control, cpu);
<span class="p_del">-		bcp-&gt;max_concurr =		max_concurr;</span>
<span class="p_del">-		bcp-&gt;max_concurr_const =	max_concurr;</span>
<span class="p_del">-		bcp-&gt;plugged_delay =		plugged_delay;</span>
<span class="p_del">-		bcp-&gt;plugsb4reset =		plugsb4reset;</span>
<span class="p_del">-		bcp-&gt;timeoutsb4reset =		timeoutsb4reset;</span>
<span class="p_del">-		bcp-&gt;ipi_reset_limit =		ipi_reset_limit;</span>
<span class="p_del">-		bcp-&gt;complete_threshold =	complete_threshold;</span>
<span class="p_del">-		bcp-&gt;cong_response_us =		congested_respns_us;</span>
<span class="p_del">-		bcp-&gt;cong_reps =		congested_reps;</span>
<span class="p_del">-		bcp-&gt;disabled_period =		sec_2_cycles(disabled_period);</span>
<span class="p_del">-		bcp-&gt;giveup_limit =		giveup_limit;</span>
<span class="p_add">+		bcp-&gt;max_concurr         = max_concurr;</span>
<span class="p_add">+		bcp-&gt;max_concurr_const   = max_concurr;</span>
<span class="p_add">+		bcp-&gt;plugged_delay       = plugged_delay;</span>
<span class="p_add">+		bcp-&gt;plugsb4reset        = plugsb4reset;</span>
<span class="p_add">+		bcp-&gt;timeoutsb4reset     = timeoutsb4reset;</span>
<span class="p_add">+		bcp-&gt;ipi_reset_limit     = ipi_reset_limit;</span>
<span class="p_add">+		bcp-&gt;complete_threshold  = complete_threshold;</span>
<span class="p_add">+		bcp-&gt;cong_response_us    = congested_respns_us;</span>
<span class="p_add">+		bcp-&gt;cong_reps           = congested_reps;</span>
<span class="p_add">+		bcp-&gt;disabled_period     = sec_2_cycles(disabled_period);</span>
<span class="p_add">+		bcp-&gt;giveup_limit        = giveup_limit;</span>
 	}
 	return count;
 }
<span class="p_chunk">@@ -1740,7 +1740,7 @@</span> <span class="p_context"> static void activation_descriptor_init(int node, int pnode, int base_pnode)</span>
 		memset(bd2, 0, sizeof(struct bau_desc));
 		if (uv1) {
 			uv1_hdr = &amp;bd2-&gt;header.uv1_hdr;
<span class="p_del">-			uv1_hdr-&gt;swack_flag =	1;</span>
<span class="p_add">+			uv1_hdr-&gt;swack_flag = 1;</span>
 			/*
 			 * The base_dest_nasid set in the message header
 			 * is the nasid of the first uvhub in the partition.
<span class="p_chunk">@@ -1749,10 +1749,10 @@</span> <span class="p_context"> static void activation_descriptor_init(int node, int pnode, int base_pnode)</span>
 			 * if nasid striding is being used.
 			 */
 			uv1_hdr-&gt;base_dest_nasid =
<span class="p_del">-						UV_PNODE_TO_NASID(base_pnode);</span>
<span class="p_del">-			uv1_hdr-&gt;dest_subnodeid =	UV_LB_SUBNODEID;</span>
<span class="p_del">-			uv1_hdr-&gt;command =		UV_NET_ENDPOINT_INTD;</span>
<span class="p_del">-			uv1_hdr-&gt;int_both =		1;</span>
<span class="p_add">+			                          UV_PNODE_TO_NASID(base_pnode);</span>
<span class="p_add">+			uv1_hdr-&gt;dest_subnodeid  = UV_LB_SUBNODEID;</span>
<span class="p_add">+			uv1_hdr-&gt;command         = UV_NET_ENDPOINT_INTD;</span>
<span class="p_add">+			uv1_hdr-&gt;int_both        = 1;</span>
 			/*
 			 * all others need to be set to zero:
 			 *   fairness chaining multilevel count replied_to
<span class="p_chunk">@@ -1763,11 +1763,11 @@</span> <span class="p_context"> static void activation_descriptor_init(int node, int pnode, int base_pnode)</span>
 			 * uses native mode for selective broadcasts.
 			 */
 			uv2_3_hdr = &amp;bd2-&gt;header.uv2_3_hdr;
<span class="p_del">-			uv2_3_hdr-&gt;swack_flag =	1;</span>
<span class="p_add">+			uv2_3_hdr-&gt;swack_flag      = 1;</span>
 			uv2_3_hdr-&gt;base_dest_nasid =
<span class="p_del">-						UV_PNODE_TO_NASID(base_pnode);</span>
<span class="p_del">-			uv2_3_hdr-&gt;dest_subnodeid =	UV_LB_SUBNODEID;</span>
<span class="p_del">-			uv2_3_hdr-&gt;command =		UV_NET_ENDPOINT_INTD;</span>
<span class="p_add">+			                          UV_PNODE_TO_NASID(base_pnode);</span>
<span class="p_add">+			uv2_3_hdr-&gt;dest_subnodeid  = UV_LB_SUBNODEID;</span>
<span class="p_add">+			uv2_3_hdr-&gt;command         = UV_NET_ENDPOINT_INTD;</span>
 		}
 	}
 	for_each_present_cpu(cpu) {
<span class="p_chunk">@@ -1914,8 +1914,8 @@</span> <span class="p_context"> static void __init init_per_cpu_tunables(void)</span>
 		bcp-&gt;complete_threshold		= complete_threshold;
 		bcp-&gt;cong_response_us		= congested_respns_us;
 		bcp-&gt;cong_reps			= congested_reps;
<span class="p_del">-		bcp-&gt;disabled_period =		sec_2_cycles(disabled_period);</span>
<span class="p_del">-		bcp-&gt;giveup_limit =		giveup_limit;</span>
<span class="p_add">+		bcp-&gt;disabled_period		= sec_2_cycles(disabled_period);</span>
<span class="p_add">+		bcp-&gt;giveup_limit		= giveup_limit;</span>
 		spin_lock_init(&amp;bcp-&gt;queue_lock);
 		spin_lock_init(&amp;bcp-&gt;uvhub_lock);
 		spin_lock_init(&amp;bcp-&gt;disable_lock);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



