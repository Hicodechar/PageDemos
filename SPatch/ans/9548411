
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/2] arm64/dma-mapping: validate dma_masks against IORT defined limits - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/2] arm64/dma-mapping: validate dma_masks against IORT defined limits</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=169203">Nate Watterson</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 31, 2017, 8:16 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1485893763-20671-2-git-send-email-nwatters@codeaurora.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9548411/mbox/"
   >mbox</a>
|
   <a href="/patch/9548411/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9548411/">/patch/9548411/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	C725C60415 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 31 Jan 2017 20:21:52 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B520D27E22
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 31 Jan 2017 20:21:52 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A7EF227F8F; Tue, 31 Jan 2017 20:21:52 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4BEA627E22
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 31 Jan 2017 20:21:52 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751507AbdAaUVo (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 31 Jan 2017 15:21:44 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:55604 &quot;EHLO
	smtp.codeaurora.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751380AbdAaUV3 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 31 Jan 2017 15:21:29 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
	id CF19960B71; Tue, 31 Jan 2017 20:21:28 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
	s=default; t=1485894088;
	bh=AOSjUi2GXL+js2n9dbbjwkoQDznKycAxuZIfaFAmNTE=;
	h=From:To:Subject:Date:In-Reply-To:References:From;
	b=E1A9nZhAEINZBi8vw1hllX7L3+z6Y5QZRH5bAYKqV+vhwGhy8AbkEhJ71de8uaHYa
	e4I85aSDE9mUGN/Tfwh2V2RE9pPM6o5or2lRzVySP6clnyalZK53+0aZxH1zGFpMVK
	hEbeJMAObv6ukcsxZpelZafXlCwob3wyjk/bDWP0=
Received: from ssd-mint172.qualcomm.com (global_nat1_iad_fw.qualcomm.com
	[129.46.232.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
	(No client certificate requested)
	(Authenticated sender: nwatters@smtp.codeaurora.org)
	by smtp.codeaurora.org (Postfix) with ESMTPSA id 7BAB860C18;
	Tue, 31 Jan 2017 20:21:25 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
	s=default; t=1485894086;
	bh=AOSjUi2GXL+js2n9dbbjwkoQDznKycAxuZIfaFAmNTE=;
	h=From:To:Subject:Date:In-Reply-To:References:From;
	b=ZyPqzKy8Hi0iYnwVWQDqDGO4lbcEJ2aW3698bpWJ9XRu4jVCZp3I7B9uPPgiC00Zs
	1DE2WaD6+/VY/ClIDgzkVZv+f8McCHBXKDXtGYnF0w/YJIs2ZLuYpioRBRT5xAXozb
	CnB2fN8ju1TsgFc8YgybjJ1kW4utrdT0tLcq0+h0=
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 7BAB860C18
Authentication-Results: pdx-caf-mail.web.codeaurora.org;
	dmarc=none (p=none dis=none)
	header.from=codeaurora.org
Authentication-Results: pdx-caf-mail.web.codeaurora.org;
	spf=none smtp.mailfrom=nwatters@codeaurora.org
From: Nate Watterson &lt;nwatters@codeaurora.org&gt;
To: Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	Will Deacon &lt;will.deacon@arm.com&gt;, Robin Murphy &lt;robin.murphy@arm.com&gt;,
	Joerg Roedel &lt;jroedel@suse.de&gt;,
	Geert Uytterhoeven &lt;geert+renesas@glider.be&gt;,
	Jisheng Zhang &lt;jszhang@marvell.com&gt;,
	Nate Watterson &lt;nwatters@codeaurora.org&gt;,
	Marek Szyprowski &lt;m.szyprowski@samsung.com&gt;,
	Lorenzo Pieralisi &lt;lorenzo.pieralisi@arm.com&gt;,
	Krzysztof Kozlowski &lt;krzk@kernel.org&gt;,
	linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org
Subject: [PATCH 2/2] arm64/dma-mapping: validate dma_masks against IORT
	defined limits
Date: Tue, 31 Jan 2017 15:16:01 -0500
Message-Id: &lt;1485893763-20671-2-git-send-email-nwatters@codeaurora.org&gt;
X-Mailer: git-send-email 1.9.1
In-Reply-To: &lt;1485893763-20671-1-git-send-email-nwatters@codeaurora.org&gt;
References: &lt;1485893763-20671-1-git-send-email-nwatters@codeaurora.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=169203">Nate Watterson</a> - Jan. 31, 2017, 8:16 p.m.</div>
<pre class="content">
Some drivers set the dma_mask of client devices based solely on values
read from capability registers which may not account for platform
specific bus address width limitations. Fortunately, the ACPI IORT table
provides a way to report the effective number of address bits a device
can use to access memory. This information, when present, is used to
supplement the checks already being done in dma_supported() to avoid
setting overly generous dma_masks.
<span class="signed-off-by">
Signed-off-by: Nate Watterson &lt;nwatters@codeaurora.org&gt;</span>
---
 arch/arm64/mm/dma-mapping.c | 20 +++++++++++++++++++-
 1 file changed, 19 insertions(+), 1 deletion(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/mm/dma-mapping.c b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">index e040827..467fd23 100644</span>
<span class="p_header">--- a/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">+++ b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_chunk">@@ -19,6 +19,7 @@</span> <span class="p_context"></span>
 
 #include &lt;linux/gfp.h&gt;
 #include &lt;linux/acpi.h&gt;
<span class="p_add">+#include &lt;linux/acpi_iort.h&gt;</span>
 #include &lt;linux/bootmem.h&gt;
 #include &lt;linux/cache.h&gt;
 #include &lt;linux/export.h&gt;
<span class="p_chunk">@@ -347,6 +348,12 @@</span> <span class="p_context"> static int __swiotlb_get_sgtable(struct device *dev, struct sg_table *sgt,</span>
 
 static int __swiotlb_dma_supported(struct device *hwdev, u64 mask)
 {
<span class="p_add">+	int dma_limit;</span>
<span class="p_add">+</span>
<span class="p_add">+	dma_limit = iort_get_memory_address_limit(hwdev);</span>
<span class="p_add">+	if (dma_limit &gt;= 0 &amp;&amp; DMA_BIT_MASK(dma_limit) &lt; mask)</span>
<span class="p_add">+		return 0;</span>
<span class="p_add">+</span>
 	if (swiotlb)
 		return swiotlb_dma_supported(hwdev, mask);
 	return 1;
<span class="p_chunk">@@ -784,6 +791,17 @@</span> <span class="p_context"> static void __iommu_unmap_sg_attrs(struct device *dev,</span>
 	iommu_dma_unmap_sg(dev, sgl, nelems, dir, attrs);
 }
 
<span class="p_add">+static int __iommu_dma_supported(struct device *hwdev, u64 mask)</span>
<span class="p_add">+{</span>
<span class="p_add">+	int dma_limit;</span>
<span class="p_add">+</span>
<span class="p_add">+	dma_limit = iort_get_memory_address_limit(hwdev);</span>
<span class="p_add">+	if (dma_limit &gt;= 0 &amp;&amp; DMA_BIT_MASK(dma_limit) &lt; mask)</span>
<span class="p_add">+		return 0;</span>
<span class="p_add">+</span>
<span class="p_add">+	return iommu_dma_supported(hwdev, mask);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static struct dma_map_ops iommu_dma_ops = {
 	.alloc = __iommu_alloc_attrs,
 	.free = __iommu_free_attrs,
<span class="p_chunk">@@ -799,7 +817,7 @@</span> <span class="p_context"> static void __iommu_unmap_sg_attrs(struct device *dev,</span>
 	.sync_sg_for_device = __iommu_sync_sg_for_device,
 	.map_resource = iommu_dma_map_resource,
 	.unmap_resource = iommu_dma_unmap_resource,
<span class="p_del">-	.dma_supported = iommu_dma_supported,</span>
<span class="p_add">+	.dma_supported = __iommu_dma_supported,</span>
 	.mapping_error = iommu_dma_mapping_error,
 };
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



