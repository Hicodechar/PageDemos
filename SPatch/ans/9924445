
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.12,34/99] KVM: x86: simplify handling of PKRU - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.12,34/99] KVM: x86: simplify handling of PKRU</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 28, 2017, 8:04 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170828080457.324413909@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9924445/mbox/"
   >mbox</a>
|
   <a href="/patch/9924445/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9924445/">/patch/9924445/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	1C4D060311 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 28 Aug 2017 08:08:58 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 0C4A8286C6
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 28 Aug 2017 08:08:58 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id F0C4427165; Mon, 28 Aug 2017 08:08:57 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 68402286A4
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 28 Aug 2017 08:08:55 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752104AbdH1IIY (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 28 Aug 2017 04:08:24 -0400
Received: from mail.linuxfoundation.org ([140.211.169.12]:33082 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752019AbdH1IIU (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 28 Aug 2017 04:08:20 -0400
Received: from localhost (LFbn-1-12253-150.w90-92.abo.wanadoo.fr
	[90.92.67.150])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id AD33E978;
	Mon, 28 Aug 2017 08:08:19 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, Yang Zhang &lt;zy107165@alibaba-inc.com&gt;,
	David Hildenbrand &lt;david@redhat.com&gt;, Paolo Bonzini &lt;pbonzini@redhat.com&gt;
Subject: [PATCH 4.12 34/99] KVM: x86: simplify handling of PKRU
Date: Mon, 28 Aug 2017 10:04:32 +0200
Message-Id: &lt;20170828080457.324413909@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.14.1
In-Reply-To: &lt;20170828080455.968552605@linuxfoundation.org&gt;
References: &lt;20170828080455.968552605@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Aug. 28, 2017, 8:04 a.m.</div>
<pre class="content">
4.12-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: Paolo Bonzini &lt;pbonzini@redhat.com&gt;</span>

commit b9dd21e104bcd45e124acfe978a79df71259e59b upstream.

Move it to struct kvm_arch_vcpu, replacing guest_pkru_valid with a
simple comparison against the host value of the register.  The write of
PKRU in addition can be skipped if the guest has not enabled the feature.
Once we do this, we need not test OSPKE in the host anymore, because
guest_CR4.PKE=1 implies host_CR4.PKE=1.

The static PKU test is kept to elide the code on older CPUs.

Suggested-by: Yang Zhang &lt;zy107165@alibaba-inc.com&gt;
Fixes: 1be0e61c1f255faaeab04a390e00c8b9b9042870
<span class="reviewed-by">Reviewed-by: David Hildenbrand &lt;david@redhat.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Paolo Bonzini &lt;pbonzini@redhat.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>

---
 arch/x86/include/asm/kvm_host.h |    1 +
 arch/x86/kvm/kvm_cache_regs.h   |    5 -----
 arch/x86/kvm/mmu.h              |    2 +-
 arch/x86/kvm/svm.c              |    7 -------
 arch/x86/kvm/vmx.c              |   25 ++++++++-----------------
 5 files changed, 10 insertions(+), 30 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/x86/include/asm/kvm_host.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/kvm_host.h</span>
<span class="p_chunk">@@ -486,6 +486,7 @@</span> <span class="p_context"> struct kvm_vcpu_arch {</span>
 	unsigned long cr4;
 	unsigned long cr4_guest_owned_bits;
 	unsigned long cr8;
<span class="p_add">+	u32 pkru;</span>
 	u32 hflags;
 	u64 efer;
 	u64 apic_base;
<span class="p_header">--- a/arch/x86/kvm/kvm_cache_regs.h</span>
<span class="p_header">+++ b/arch/x86/kvm/kvm_cache_regs.h</span>
<span class="p_chunk">@@ -84,11 +84,6 @@</span> <span class="p_context"> static inline u64 kvm_read_edx_eax(struc</span>
 		| ((u64)(kvm_register_read(vcpu, VCPU_REGS_RDX) &amp; -1u) &lt;&lt; 32);
 }
 
<span class="p_del">-static inline u32 kvm_read_pkru(struct kvm_vcpu *vcpu)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return kvm_x86_ops-&gt;get_pkru(vcpu);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline void enter_guest_mode(struct kvm_vcpu *vcpu)
 {
 	vcpu-&gt;arch.hflags |= HF_GUEST_MASK;
<span class="p_header">--- a/arch/x86/kvm/mmu.h</span>
<span class="p_header">+++ b/arch/x86/kvm/mmu.h</span>
<span class="p_chunk">@@ -182,7 +182,7 @@</span> <span class="p_context"> static inline u8 permission_fault(struct</span>
 		* index of the protection domain, so pte_pkey * 2 is
 		* is the index of the first bit for the domain.
 		*/
<span class="p_del">-		pkru_bits = (kvm_read_pkru(vcpu) &gt;&gt; (pte_pkey * 2)) &amp; 3;</span>
<span class="p_add">+		pkru_bits = (vcpu-&gt;arch.pkru &gt;&gt; (pte_pkey * 2)) &amp; 3;</span>
 
 		/* clear present bit, replace PFEC.RSVD with ACC_USER_MASK. */
 		offset = (pfec &amp; ~1) +
<span class="p_header">--- a/arch/x86/kvm/svm.c</span>
<span class="p_header">+++ b/arch/x86/kvm/svm.c</span>
<span class="p_chunk">@@ -1725,11 +1725,6 @@</span> <span class="p_context"> static void svm_set_rflags(struct kvm_vc</span>
 	to_svm(vcpu)-&gt;vmcb-&gt;save.rflags = rflags;
 }
 
<span class="p_del">-static u32 svm_get_pkru(struct kvm_vcpu *vcpu)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static void svm_cache_reg(struct kvm_vcpu *vcpu, enum kvm_reg reg)
 {
 	switch (reg) {
<span class="p_chunk">@@ -5313,8 +5308,6 @@</span> <span class="p_context"> static struct kvm_x86_ops svm_x86_ops __</span>
 	.get_rflags = svm_get_rflags,
 	.set_rflags = svm_set_rflags,
 
<span class="p_del">-	.get_pkru = svm_get_pkru,</span>
<span class="p_del">-</span>
 	.tlb_flush = svm_flush_tlb,
 
 	.run = svm_vcpu_run,
<span class="p_header">--- a/arch/x86/kvm/vmx.c</span>
<span class="p_header">+++ b/arch/x86/kvm/vmx.c</span>
<span class="p_chunk">@@ -636,8 +636,6 @@</span> <span class="p_context"> struct vcpu_vmx {</span>
 
 	u64 current_tsc_ratio;
 
<span class="p_del">-	bool guest_pkru_valid;</span>
<span class="p_del">-	u32 guest_pkru;</span>
 	u32 host_pkru;
 
 	/*
<span class="p_chunk">@@ -2368,11 +2366,6 @@</span> <span class="p_context"> static void vmx_set_rflags(struct kvm_vc</span>
 	vmcs_writel(GUEST_RFLAGS, rflags);
 }
 
<span class="p_del">-static u32 vmx_get_pkru(struct kvm_vcpu *vcpu)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return to_vmx(vcpu)-&gt;guest_pkru;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static u32 vmx_get_interrupt_shadow(struct kvm_vcpu *vcpu)
 {
 	u32 interruptibility = vmcs_read32(GUEST_INTERRUPTIBILITY_INFO);
<span class="p_chunk">@@ -8860,8 +8853,10 @@</span> <span class="p_context"> static void __noclone vmx_vcpu_run(struc</span>
 	if (vcpu-&gt;guest_debug &amp; KVM_GUESTDBG_SINGLESTEP)
 		vmx_set_interrupt_shadow(vcpu, 0);
 
<span class="p_del">-	if (vmx-&gt;guest_pkru_valid)</span>
<span class="p_del">-		__write_pkru(vmx-&gt;guest_pkru);</span>
<span class="p_add">+	if (static_cpu_has(X86_FEATURE_PKU) &amp;&amp;</span>
<span class="p_add">+	    kvm_read_cr4_bits(vcpu, X86_CR4_PKE) &amp;&amp;</span>
<span class="p_add">+	    vcpu-&gt;arch.pkru != vmx-&gt;host_pkru)</span>
<span class="p_add">+		__write_pkru(vcpu-&gt;arch.pkru);</span>
 
 	atomic_switch_perf_msrs(vmx);
 	debugctlmsr = get_debugctlmsr();
<span class="p_chunk">@@ -9009,13 +9004,11 @@</span> <span class="p_context"> static void __noclone vmx_vcpu_run(struc</span>
 	 * back on host, so it is safe to read guest PKRU from current
 	 * XSAVE.
 	 */
<span class="p_del">-	if (boot_cpu_has(X86_FEATURE_OSPKE)) {</span>
<span class="p_del">-		vmx-&gt;guest_pkru = __read_pkru();</span>
<span class="p_del">-		if (vmx-&gt;guest_pkru != vmx-&gt;host_pkru) {</span>
<span class="p_del">-			vmx-&gt;guest_pkru_valid = true;</span>
<span class="p_add">+	if (static_cpu_has(X86_FEATURE_PKU) &amp;&amp;</span>
<span class="p_add">+	    kvm_read_cr4_bits(vcpu, X86_CR4_PKE)) {</span>
<span class="p_add">+		vcpu-&gt;arch.pkru = __read_pkru();</span>
<span class="p_add">+		if (vcpu-&gt;arch.pkru != vmx-&gt;host_pkru)</span>
 			__write_pkru(vmx-&gt;host_pkru);
<span class="p_del">-		} else</span>
<span class="p_del">-			vmx-&gt;guest_pkru_valid = false;</span>
 	}
 
 	/*
<span class="p_chunk">@@ -11507,8 +11500,6 @@</span> <span class="p_context"> static struct kvm_x86_ops vmx_x86_ops __</span>
 	.get_rflags = vmx_get_rflags,
 	.set_rflags = vmx_set_rflags,
 
<span class="p_del">-	.get_pkru = vmx_get_pkru,</span>
<span class="p_del">-</span>
 	.tlb_flush = vmx_flush_tlb,
 
 	.run = vmx_vcpu_run,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



