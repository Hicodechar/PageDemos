
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RESEND,v9,3/3] iommu/arm-smmu-v3: Add workaround for Cavium ThunderX2 erratum #126 - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RESEND,v9,3/3] iommu/arm-smmu-v3: Add workaround for Cavium ThunderX2 erratum #126</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=170805">Geetha sowjanya</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 23, 2017, 1:34 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1498224876-5200-1-git-send-email-gakula@caviumnetworks.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9806625/mbox/"
   >mbox</a>
|
   <a href="/patch/9806625/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9806625/">/patch/9806625/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	2C65F60329 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 23 Jun 2017 13:54:45 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1BAED28644
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 23 Jun 2017 13:54:39 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 0FB5B2864C; Fri, 23 Jun 2017 13:54:39 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_HI autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 680A428644
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 23 Jun 2017 13:54:38 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753926AbdFWNyb (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 23 Jun 2017 09:54:31 -0400
Received: from mail-cys01nam02on0046.outbound.protection.outlook.com
	([104.47.37.46]:16700
	&quot;EHLO NAM02-CY1-obe.outbound.protection.outlook.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1751488AbdFWNy1 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 23 Jun 2017 09:54:27 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=CAVIUMNETWORKS.onmicrosoft.com; s=selector1-cavium-com;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version;
	bh=UfqVyVbGLA885mJXlHJEFmjgYDlh/tVs/bZ6wm2zzqY=;
	b=EGwqS3YuuZYCry2FYoE89wSPD6CBBTZHYmrCKUlczdKJDWua8/ijRAmWTblEKHHvI94NxJL0xxjbzTVw7Uc3ujy7TdkHw72fZRtDsTSOx/gHG0TqR+VRSFz+nnYZ+m/RUg68jueZyGHlqWWFDCuv18U+mC/GVZHG3/l1rj7Icak=
Authentication-Results: arm.com; dkim=none (message not signed)
	header.d=none; arm.com;
	dmarc=none action=none header.from=caviumnetworks.com; 
Received: from localhost.localdomain (14.140.2.178) by
	BLUPR0701MB2017.namprd07.prod.outlook.com (10.163.122.12) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256_P256) id
	15.1.1199.15; Fri, 23 Jun 2017 13:54:17 +0000
From: Geetha sowjanya &lt;gakula@caviumnetworks.com&gt;
To: will.deacon@arm.com, robin.murphy@arm.com,
	lorenzo.pieralisi@arm.com, hanjun.guo@linaro.org,
	sudeep.holla@arm.com, iommu@lists.linux-foundation.org
Cc: robert.moore@intel.com, lv.zheng@intel.com, rjw@rjwysocki.net,
	jcm@redhat.com, linux-kernel@vger.kernel.org,
	robert.richter@cavium.com, catalin.marinas@arm.com,
	sgoutham@cavium.com, linux-arm-kernel@lists.infradead.org,
	linux-acpi@vger.kernel.org, geethasowjanya.akula@gmail.com,
	devel@acpica.org, linu.cherian@cavium.com,
	Charles.Garcia-Tobin@arm.com, robh@kernel.org,
	Geetha Sowjanya &lt;geethasowjanya.akula@cavium.com&gt;,
	Geetha sowjanya &lt;gakula@caviumnetworks.com&gt;
Subject: [RESEND PATCH v9 3/3] iommu/arm-smmu-v3: Add workaround for Cavium
	ThunderX2 erratum #126
Date: Fri, 23 Jun 2017 19:04:36 +0530
Message-Id: &lt;1498224876-5200-1-git-send-email-gakula@caviumnetworks.com&gt;
X-Mailer: git-send-email 1.7.1
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [14.140.2.178]
X-ClientProxiedBy: PN1PR01CA0073.INDPRD01.PROD.OUTLOOK.COM (10.174.144.141)
	To
	BLUPR0701MB2017.namprd07.prod.outlook.com (10.163.122.12)
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: ad1490cd-0313-4a0b-f96e-08d4ba3f5a9c
X-Microsoft-Antispam: UriScan:; BCL:0; PCL:0;
	RULEID:(22001)(201703131423075)(201703031133081);
	SRVR:BLUPR0701MB2017; 
X-Microsoft-Exchange-Diagnostics: 1; BLUPR0701MB2017;
	3:5HYT1EqG10FwwZ5wrFhmrYkGzcnaQepDv+qgxzCG9pDTyOwaIOTflf2QS1n7v9vyY+5p+fTZKYW3RgfvBv+Pzs7zbcIsQjpuGCFOqr/NzGHjYTCKr+1tmKsc7ZK51AGuPp3TanJrz1uIrl3Z4JdxCIG7h5yF8zHbCNcP6PYryIK4fkOfjLUplCmCWX3kSftMtgv89TE/mq4V3qkheLaBKZY6npPHnrEV2J0Zk7XpXyJzrLo6k67iRv49QnkeNxMNbmjgkGuFgea61pjCBNt55wn0/K2WGx1z5BYTiP3mzuBNBJoOekcrccI/kb/Ocp1HSmUJ6TAFNOGYeluX3/gWmQ==
X-MS-TrafficTypeDiagnostic: BLUPR0701MB2017:
X-Microsoft-Exchange-Diagnostics: 1; BLUPR0701MB2017;
	25:nmbq0yzRzw6TDGwcmpK/O4eWDYoU2jKFgxvCDFOT5KtH9fo7cZOE5+6N62Ws5mDoT0Oa8m3xHpgagOvgJjHLNnzv1jK8bVIEXHbeMYQNoALvAiAp043xwrWuI3tIcAUqvBkNlpuW1QPMXpS73rRemVrIa3G0gPdCOkKb9lu9FSesGW0rk1qy2+dcy3bbj2lqiLARxAE8GGHwcecaDSc8lDDzXuJ11GUcj1fQx0wwkr5+QoBKwqGBR2+r5dJY/jpHe4WpBsC5IkSKBkx4M+AiSKOKhISYGFxYdTY3d/9WVq6ZtmsINR84dnPtB+D1qJvcPiyn1XJap9qYqntVxU0RLEsKof1vaaPpuzcEZ/udCKAH8pmxSWdbEd3nLNhikiMQ/RCoa7tsXkc3GKx99UvcB5TIn43NcFK2dL68r9XvwiItnqwo2zf8eac186Q4AyVMShr0DIUKHJRIEqKSXZC6fkpQRCtxJf1WlkRdu08Q+CPItLScaRB3L1M8LLiEEhP1gdy1HudvW+BM/qUcIQbdL285Gp/ZgTNZYlilLvgQob9JO82nmcjYGAG6ZpYgS9qH8vC0lwaxO1fhE+mMzqRNtVeFLxB9+7lya+vvUFXPuFzMwiq3JxCb/F3LYNuiShQ76vEwjyjk09elbvupigYqiSobX4mmWaRIkYTcFyLqt9Yristd9VYrwoXipjMQH1Mbv5yPXZdzO1fu0E7CSme6/XFloX9ngOQG7v4BsbkUf4iwO9olNos6jpqjTPRpfLcchMSzBOh1yGfCGhBU1DhsBjM6HA0jcUA3Gm9dREklKoDlN29c5UPJvrJEVmt4T26bl/XAFKAcwwXEnVukJblEBBWses1Bpx3Xt71BGw90gUwHHk6Rwvh2eK0xQ+lL4Y67Mx3NbIJmSSUZS79645EGmfPx2w1cyHq5+bzda/a
	7w20=
X-Microsoft-Exchange-Diagnostics: 1; BLUPR0701MB2017;
	31:hI0swrgXDMObcNnxQlx67Wc/S12bQ0ahxS1UOjiROQr02OTvctkMcb90oWtpIfQf+TXN0U2SKoApciNa804xUxl43V/oNPe5RHNnIbiHNeb47cTuhd+kGPOcK31O5xYrZ/4hhrlLc64BKBNoIOAJcDhPcDs2d0+k0LlZN9sR6WE1sYvkjPBsO3rmg8iFF/gQqSaHgThpD2KwWR2WjXMM1PjqWED39/c7GQLIZmcZ2F6Zc73w11YVB0ipikCRMV3dI6ZOR8dxKoqQ2eIvuRSjE1cxcp4BUi/WgXrgvKpQdhMdEgTIj71khH/7iPiK8El8+WkKu/5mKsQrbb3HqHDbpcYR32xXJy88RHf36LpG/Ru0C0Sc65XWic+TVeXXizzWiZRuIbTY6pDCGeeVpumrRUmM8hWvrL4Fu5HluIYOtvzslIus2YBpIbpcGAesPexCdscR/dgFygjMA04+rGZzMlyL62aKjoCGBFsYxGU9QaUoHJUd2sJYYlQkYQDogZHwWL0poLFFWRTS1R5JeoJhI4ToWKLbzHfGj5raGFXRr+l1VwU0d/PiU7i5jPbsFV6azc5j7akZJbpXYRXE0vawNxekuzKiKYEaDhvgxQBkgmUN03DmkPXxdDx1uAXtekQVpZi6IuZtceUnKpn5mfAviMqSVlI+fv+CZ2wIJ0d5JDA=
X-Microsoft-Exchange-Diagnostics: 1; BLUPR0701MB2017;
	20:0BfvuB+9esQ+0SitGIR+AjDP7TtKdpb75VvSR2mNuTHO+MB63x0tyvrMPx2NhaiT1DYISgQ0dzwsNW0xnLnWLtIpbVFcFYvNTfEwc2O+8IqHOHrNjhosUm+yIq7RKqKRE+42hmUBMoaeL+4Lbxt0GxXc0yW2mtOTkmeORU+jJn5/L6bkFq05fOR0SwhKFGimlHeHk9ESLdRa8Mou1pzyR8qtPI3MdLtC7xezDXkvYXhmMDLs265D2hA6gzPnmPQwwyTSy78X1IXyBblx3clH6OMWJNIyA7V08g9x3mnPXNJ86K1Bva7h5ESOlPs2zNKFGG6hECRRgqai9Zt8i9Wx2YqSA7xsGtgCE6ZE2LMjEhOZwAZUXukQ/H1iq4jgOf72DjiZ5PHwZpt2iKelX6VhromWT3HWH8Lj8lIKF6Zbv0YN/eJBBtDiElWl3A6m/zoZC3QfpjiK4mmyp7qHz8+onvQCx2VvSPjo7uHOpyuFYc2NsfmZsfd9kKWrBj5jSAcPl7wcnIx0FaGnSUoDIszeNBqbgNid5JU/lwUrh0Fv7BSJM246Ta0Q3aRb7XihiG3x8uuS1dJR8+Jm/a9pBWjp70fEY1Gf8reVmKaJBi27bZg=
X-Microsoft-Antispam-PRVS: &lt;BLUPR0701MB20170F84E494FC7F2591E858E0D80@BLUPR0701MB2017.namprd07.prod.outlook.com&gt;
X-Exchange-Antispam-Report-Test: UriScan:;
X-Exchange-Antispam-Report-CFA-Test: BCL:0; PCL:0;
	RULEID:(100000700101)(100105000095)(100000701101)(100105300095)(100000702101)(100105100095)(6040450)(601004)(2401047)(8121501046)(5005006)(93006095)(3002001)(100000703101)(100105400095)(10201501046)(6041248)(20161123558100)(201703131423075)(201702281528075)(201703061421075)(201703061406153)(20161123560025)(20161123562025)(20161123564025)(20161123555025)(6072148)(100000704101)(100105200095)(100000705101)(100105500095);
	SRVR:BLUPR0701MB2017; BCL:0; PCL:0;
	RULEID:(100000800101)(100110000095)(100000801101)(100110300095)(100000802101)(100110100095)(100000803101)(100110400095)(100000804101)(100110200095)(100000805101)(100110500095);
	SRVR:BLUPR0701MB2017; 
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1; BLUPR0701MB2017;
	4:d6hyrLgulvlGMHQWFIAYwccqJqMcJesOOzI8ngK+?=
	=?us-ascii?Q?EEglJJAhoYTHAT5JvZxvNX+pmrTRBT1G6ST2SjRnRUZx+HEQPF4VGakHqwqE?=
	=?us-ascii?Q?ORRGUXkI2olpr30kMdXdMVOBL2gPNKx8QU+oawNrvhO6RSxE+N806CVZC+Ps?=
	=?us-ascii?Q?DyerJsC0qJVr09XAE95btO9QTQOUViyY8KxTrCTd3I/j6aL9gOZ64+z7UyGI?=
	=?us-ascii?Q?c/5XehjUK+/uldsqzAt1Wj8wx971IzoB/AYOAjAlL1IVV0r1Zq6EftVnVZb8?=
	=?us-ascii?Q?BAcyLmvbqtHHtEkxHJPAzc8YHEI5D261DYVTdfX3S6g+QFohDyxwP6+Vhh3T?=
	=?us-ascii?Q?weeh+aiwDq4JSkl06KyhmJWhKS8F1UNyJ4Q3ZOUbP2D3Swc4/1L3pFROuMS7?=
	=?us-ascii?Q?ioAZUoN8344Y5uLvrB+Bui9mgEPDHzob1eIoQUsZolRH7a2wTa7yXGMvpxtR?=
	=?us-ascii?Q?rKSp1lR1vJzrujTsyBedpnsM6+PuYMTsGMwoLPdDO6+8w9Zo13dMZtExq25T?=
	=?us-ascii?Q?RR601TZTjFWfl+OfO5R2I8epaMKuVOL1yfiRt+zgQg2eEiuUwvLbbMukqlaH?=
	=?us-ascii?Q?xTe+Fw0KELI7hfM7yoOOnABVsumhiJEEgECITXdkeoE7CDY85hMNndkK6zld?=
	=?us-ascii?Q?8NEivdgbbncMRMYJzVTKXblbczf61YDS4uunbOOyTOoIRCiXrkEHP9CZFWcJ?=
	=?us-ascii?Q?wPgR0NYb6v/mZY10pzg4LlZEcwJoWug6kNkvrSkC/JE5a0/g43dXnZtctxiA?=
	=?us-ascii?Q?Ese69WI0EYcLWYADSSiw/wXvngIfSTahSoGIrn262FAEZt6VIwhSPItQs0qx?=
	=?us-ascii?Q?bG43/sZ6PudxEVSgEWj73HjGfIEsHClmbRMwLF2fWjjl+/GtqnTL0pbNeq0l?=
	=?us-ascii?Q?VtpDqU4zZ7JK9niTNmzdBhcnbhy4smJshrXZvCPHvq3YOaLcj3VCbHndK6Jh?=
	=?us-ascii?Q?k8iciPhkmEG9yhHZZ4cTOLF5D+0Bl7F54qd834h0DqxCZRCN00viAuolkmfh?=
	=?us-ascii?Q?0fPQhDd4F3s0OI2xL7JGM7Hxgqtz61l0rdDhfMh/fJ45nPvcRJwA+gIbixK5?=
	=?us-ascii?Q?rvcCKkcei70ThA1VhYF7+KpyyVFJDt/z2kroCECFzR/SL7FZ2NKvVv3Av7af?=
	=?us-ascii?Q?KwsSdHXd/kQ=3D?=
X-Forefront-PRVS: 0347410860
X-Forefront-Antispam-Report: SFV:NSPM;
	SFS:(10009020)(4630300001)(6069001)(6009001)(39840400002)(39410400002)(39450400003)(39400400002)(39850400002)(8676002)(189998001)(81166006)(7416002)(305945005)(6486002)(7736002)(50466002)(48376002)(5009440100003)(3846002)(5003940100001)(47776003)(50226002)(66066001)(6506006)(50986999)(6512007)(230783001)(54906002)(36756003)(42186005)(33646002)(4326008)(6666003)(42882006)(38730400002)(478600001)(110136004)(107886003)(72206003)(53936002)(2906002)(5660300001)(25786009)(110426004)(42262002)(217873001);
	DIR:OUT; SFP:1101; SCL:1; SRVR:BLUPR0701MB2017;
	H:localhost.localdomain; FPR:; SPF:None; MLV:sfv; LANG:en; 
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1; BLUPR0701MB2017;
	23:rqusRkimlKBgtOgDK0gdhwabJjZkplRNsR+Kv1D?=
	=?us-ascii?Q?RFhjwOLPHSV747KxbXgIwf+O8HT52EyBioDF2lYfTBINQ/O6JUpUZDzpJWDi?=
	=?us-ascii?Q?sp/qri1pDJzQ6NUcafpQa1kZNcudorfcOz+9/+gjwOsuN6I2q/cdrKNrn3z0?=
	=?us-ascii?Q?Ly2Vca8Y+rdB/g4rRx+8ueAFIFHa40BmTCmwe/mrKWxRCpb1ZvWeJIH5NL79?=
	=?us-ascii?Q?y9Bf8VykT+2K87RxhWgKmjquS5DbnzXI+7ioX11amG4hK0g7fw+U/fT00Psf?=
	=?us-ascii?Q?4Kzms44HwY30Tv2FbxYcIyvoYRj/8Vli7QXj/uW2bpt9f7csNJWYxJhg/U+T?=
	=?us-ascii?Q?j3hjHC4C/FxM3lrvHD1bdSpdagiCeZy9RDCEPNXwskV6YBs3QKLaLyjd3uJb?=
	=?us-ascii?Q?OmVoyaJCnsuv9aHsLKcLEWvcnO8MUFGyOux7BxZpPYT2RRMHo0mStN5szojS?=
	=?us-ascii?Q?9UVTiqgxQ+NtHjLmz9ZSViGQYBA4wxvCzNU0aBpszWf7gnZfqJPM0QB9/slg?=
	=?us-ascii?Q?3xgIra806b13rNyZs+qwTuOxaePpTNnfdMNJ/ZzSVayOkqi0m2HOHsPbliQE?=
	=?us-ascii?Q?aCpLxOwvpABZo4QPUjk7p0xhLIk0liu1DKgncHo4cfkaMEs8u98JAXRXEMB1?=
	=?us-ascii?Q?0UZGoFfM3USy+tzo7XyKngXGWi/2+QIgZTIJKc01nmEu/GReGZD8XVETku9L?=
	=?us-ascii?Q?8DF9vk9xiUM+W64774K3I8QFvHezi2gQoNFiO2iPsAqtyt3FD1k6gkEha/Ox?=
	=?us-ascii?Q?pppXEhwV3/5tlai/L51dLDPtG1ICeGNzes9Qba9knABDmPeOLkfDOj1eEiF8?=
	=?us-ascii?Q?6T6MopG54cIzvVCSEmKq8Q9FVqJ3wSvDGCPNUcvCkC2q5SPF5y36t/MTIL9Z?=
	=?us-ascii?Q?I37dZhwAnFHdnBIxGdWCW8bGiCZUI1NzC2PzUlaM7ZCRK5KW4SnDXGUHnr5+?=
	=?us-ascii?Q?SslwZ/WQDZZKff9cAV7Z+d+jnSvYt4EVGPtpdCqIj1g/w6VmBuqyjQBrBu7M?=
	=?us-ascii?Q?tdGLNepN6TJzv2h5A9ZJpLY6YK1qSv32EmN+86tgCgJ8UmDEGscAZH+xcbxv?=
	=?us-ascii?Q?I+R6eShBgSmdKMUsZHjX62RDW+pDg9cie35h2u+o0SqXxASU9bxS7ButanZJ?=
	=?us-ascii?Q?2qsk8bPXYsC7v5IUeYSGA4mmknPuK/D/MqLN70TbeLCWzQRdwbgf5Rg=3D?=
	=?us-ascii?Q?=3D?=
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1; BLUPR0701MB2017;
	6:Nyc7EbhKgbphws/HCypgdzShp/Pv+KvxlWjALmZW?=
	=?us-ascii?Q?z+ZkNqWQNoHn5LTkWfnZmZtbV0vgOxsFfyQ/7+dT3cEvww02aouVx0KVFqgf?=
	=?us-ascii?Q?tpQSkHglPgmdjrrxb2D1t8FIWjCnYofxXuXumnTUoIEj7hLhQOm0bCSOrR6p?=
	=?us-ascii?Q?mJ47Sd3NwWxGWklFatxIDOnlGUZbA1WyMLnWzfedmiO8zHhdufKCVA+pR4R1?=
	=?us-ascii?Q?kFtUKDgjLWIe57RbvvhjYThk3owaieSMdlUuuiKuuR+dJq2Ym87R6x3nP8u5?=
	=?us-ascii?Q?jdk7kKEHqKuGd+uKgzuVJI1nV6KEg4bfxsX5Lq/amwL01B8bo4qXtSspJ9mu?=
	=?us-ascii?Q?fKLQe8oZiu2Qmka0MP1Qdr/jNtUeuX8kDV0a+TAIYO80J1yuQV81Es+1bmyU?=
	=?us-ascii?Q?XgmqxsDdMTSIl28Bg+aC4HxpWCPPCBTptv6ceOspY07QvVOBH9UhopWn79Zx?=
	=?us-ascii?Q?2g8NmKVR6yUj4IeOyNlredGzLmoDg5LXTwkIYmjD90xpbjPlWFADwsJm+S1O?=
	=?us-ascii?Q?MlYyenYYTHYLQvW05/nab7wL29XZlgnUYiIwpsEerD1+aSZyOdG9wW4B5soT?=
	=?us-ascii?Q?CKU6nHajeMdY9xOalWWkpK82CseXmDq2jclzewYUv/o4Oh8ldPYuqixP9RyU?=
	=?us-ascii?Q?GK6LPvSKiZC/M44E4e284H7zH+Q1nymb7PQqcJc5VPkmoANTTcrTtQZ4Vmj8?=
	=?us-ascii?Q?zmhpAOlhGFH7IlhIizLg/Hre5+St+iOopB4A876T1MjVQPOATnkjoLG3iPZn?=
	=?us-ascii?Q?iBjna0Htx3HsL0dNQpOmEqDJMyMu/sC+q0BhtXjwY35E9ENvLnqQQrXBPyRu?=
	=?us-ascii?Q?Tsda112HqbgKcwajLGtRcrkCJKEFL5icooGZDf6NCExde+8sqwVMezPcxDet?=
	=?us-ascii?Q?qPsvk9DmuGCia2prQwoaHChwl164YtMnU8t9yl8l/NSUqxbRqTJWyzqJUbmS?=
	=?us-ascii?Q?6gS02rlzyMI6YpXnN5r8gN9zSa+CgJn7jj8Kzi9f2q0/8HUfhh1T1Mj6CKKx?=
	=?us-ascii?Q?wVI=3D?=
X-Microsoft-Exchange-Diagnostics: 1; BLUPR0701MB2017;
	5:pAWHA9TU2mzq/DvA7LBEyrABgClK1iidrRuAu1lBvPzYp8e+T7nlX9cqflvrfwK10A+f6Sy6jqoFgKtSOmtV8CGJ42cPYNSGP7lzRQ0w7O810werB0vLNkNDPlhmPDXe2GNKlmQCMnUEJTnHar31mVz/rcboU57v38kTphqZCN7PfdZoLvxnOdBURF9tgeVTXdn3viUm+DQqPbhA78mAih/q7+3nHjvRJl1IF72K1XyYqaqEwAVxdCRdtCFm2ltua4BlOOWzshwWvLSvkUxcmaKOr/wzmmizFgaNmLhcafN+GXyF0q2lmd9IsGqXaCJLSYBGPh8xAHT8C+UgJZo09h7sBR4YxHbP9JucZ/ZxvAx0SMTPXBUDkiepIms/6OjX5eN6De1LD8onBEq3o1Agkz4oKEBGvbAmCLknJx1RhhjPhuWlq19OeLFHFf4t2dcTvZT+AMcF9S13QZNhxVBlasd+S4HSZHhiGWqlTfXHKUwn2KqOfjt4dTSv0NroD5L5;
	24:yq/k2gFyu+6GnygNKqFZWowNO8l+UIFw7GGsTrmjTR2L0Ehs1tDm7g0GiMFUFdWyvxo2qnq3doLw/+doJohZg3Po9bidXIMDFb3wNYUOIxk=
SpamDiagnosticOutput: 1:99
SpamDiagnosticMetadata: NSPM
X-Microsoft-Exchange-Diagnostics: 1; BLUPR0701MB2017;
	7:A7HIrLmON9mDLPliTgbuRuKG687FKVwFIeFwcIasHLH7+m8/MTM9E5oXeApekSNw3RvI3K0lha4ATrHvDv54O7Kf3SQt6Jec1sevzmDki01NeMIsNNAr3k+boHgNp/aSEPyY0A38qpspBYrPxf19El+hNEGPjYig7T31b/Kcu6tVAO6YJIjA3e0VoEqrPwGC0A5JQB65A2x9Ld51ekKbUDbrzJKYR6iNhg3qjGGV/9XxElX5JPextuHprsnof6O9D0V7dlRwaZCG4TdjF+tK814gxkdZfRgdB3Qz0mtPIQzdxJh2nKs2Em3tZA1kcEgyh3p9K5L8/09uLQV/uFrBN0QXt3yT9UmjejHS1pmflqs+dD+Ufy8TZAxKlsdvSWPAFttBF43D2HJga8429frx61d+YV/EUaCQjPou8DL43rFZSMrgjTSSGgHK2O+pAuy1DGieb6XeMvUgb3Mk8bHfPmkJfIUXGr+oH51aDqOyGxQw9LcYLBURr3zTQ5Ge7NlzG7lPf2MiXhoako2faH1kzGXoL+aRCKiaF1EM/godq1j7y5hGPtIhjRLKssz6M/qWz69LYe9QxBBBfne55EhbeTyRTB5omHXzPHvGQ7+mDcZk92TLBRbpPxFfD9c3b+5i9CpATC6rJBFp+ctp0WG1tLNsyMMFAvoln3j3T6XxtSZNKUaZ3B7jk5dhymgbWEQAqXmYGreL8sRV+GmfKxEdpv5vz1BNKh1+p2vdqBgZ8+qIe0W9GT/NADgkyGyE6cnd2MUplpdvynruPxw85QOSjuAfermGqlGmvE+WNu2TIO0=
X-OriginatorOrg: caviumnetworks.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 23 Jun 2017 13:54:17.5304
	(UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-Transport-CrossTenantHeadersStamped: BLUPR0701MB2017
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=170805">Geetha sowjanya</a> - June 23, 2017, 1:34 p.m.</div>
<pre class="content">
<span class="from">From: Geetha Sowjanya &lt;geethasowjanya.akula@cavium.com&gt;</span>

Cavium ThunderX2 SMMU doesn&#39;t support MSI and also doesn&#39;t have unique irq
lines for gerror, eventq and cmdq-sync.

New named irq &quot;combined&quot; is set as a errata workaround, which allows to
share the irq line by register single irq handler for all the interrupts.
<span class="signed-off-by">
Signed-off-by: Geetha sowjanya &lt;gakula@caviumnetworks.com&gt;</span>
---
 Documentation/arm64/silicon-errata.txt             |    1 +
 .../devicetree/bindings/iommu/arm,smmu-v3.txt      |    6 +
 drivers/acpi/arm64/iort.c                          |   57 ++++++++---
 drivers/iommu/arm-smmu-v3.c                        |  100 ++++++++++++++-----
 4 files changed, 121 insertions(+), 43 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=168391">Robert Richter</a> - June 27, 2017, 1:56 p.m.</div>
<pre class="content">
On 23.06.17 19:04:36, Geetha sowjanya wrote:
<span class="quote">&gt; From: Geetha Sowjanya &lt;geethasowjanya.akula@cavium.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Cavium ThunderX2 SMMU doesn&#39;t support MSI and also doesn&#39;t have unique irq</span>
<span class="quote">&gt; lines for gerror, eventq and cmdq-sync.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; New named irq &quot;combined&quot; is set as a errata workaround, which allows to</span>
<span class="quote">&gt; share the irq line by register single irq handler for all the interrupts.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Geetha sowjanya &lt;gakula@caviumnetworks.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  Documentation/arm64/silicon-errata.txt             |    1 +</span>
<span class="quote">&gt;  .../devicetree/bindings/iommu/arm,smmu-v3.txt      |    6 +</span>
<span class="quote">&gt;  drivers/acpi/arm64/iort.c                          |   57 ++++++++---</span>
<span class="quote">&gt;  drivers/iommu/arm-smmu-v3.c                        |  100 ++++++++++++++-----</span>
<span class="quote">&gt;  4 files changed, 121 insertions(+), 43 deletions(-)</span>
<span class="quote">
&gt; +static int arm_smmu_setup_irqs(struct arm_smmu_device *smmu)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	int ret, irq;</span>
<span class="quote">&gt; +	u32 irqen_flags = IRQ_CTRL_EVTQ_IRQEN | IRQ_CTRL_GERROR_IRQEN;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	/* Disable IRQs first */</span>
<span class="quote">&gt; +	ret = arm_smmu_write_reg_sync(smmu, 0, ARM_SMMU_IRQ_CTRL,</span>
<span class="quote">&gt; +				      ARM_SMMU_IRQ_CTRLACK);</span>
<span class="quote">&gt; +	if (ret) {</span>
<span class="quote">&gt; +		dev_err(smmu-&gt;dev, &quot;failed to disable irqs\n&quot;);</span>
<span class="quote">&gt; +		return ret;</span>
<span class="quote">&gt; +	}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	irq = smmu-&gt;combined_irq;</span>
<span class="quote">&gt; +	if (irq) {</span>
<span class="quote">&gt; +		/*</span>
<span class="quote">&gt; +		 * Cavium ThunderX2 implementation doesn&#39;t not support unique</span>
<span class="quote">&gt; +		 * irq lines. Use single irq line for all the SMMUv3 interrupts.</span>
<span class="quote">&gt; +		 */</span>
<span class="quote">&gt; +		ret = devm_request_threaded_irq(smmu-&gt;dev, irq,</span>
<span class="quote">&gt; +					arm_smmu_combined_irq_handler,</span>
<span class="quote">&gt; +					arm_smmu_combined_irq_thread,</span>
<span class="quote">&gt; +					IRQF_ONESHOT,</span>

Without the IRQF_SHARED flag set I see the following on a dual node
system now:

[   17.403260] arm-smmu-v3 arm-smmu-v3.0.auto: option mask 0x2
[   17.408853] arm-smmu-v3 arm-smmu-v3.0.auto: ias 44-bit, oas 44-bit (features 0x0000172d)
[   17.417259] arm-smmu-v3 arm-smmu-v3.1.auto: option mask 0x2
[   17.422856] arm-smmu-v3 arm-smmu-v3.1.auto: ias 44-bit, oas 44-bit (features 0x0000172d)
[   17.431193] arm-smmu-v3 arm-smmu-v3.2.auto: option mask 0x2
[   17.436787] arm-smmu-v3 arm-smmu-v3.2.auto: ias 44-bit, oas 44-bit (features 0x0000172d)
[   17.445123] arm-smmu-v3 arm-smmu-v3.3.auto: option mask 0x2
[   17.450697] arm-smmu-v3 arm-smmu-v3.3.auto: ias 44-bit, oas 44-bit (features 0x0000172d)
[   17.458984] genirq: Flags mismatch irq 5. 00002001 (arm-smmu-v3-combined-irq) vs. 00002001 (arm-smmu-v3-combined-irq)
[   17.610636] arm-smmu-v3 arm-smmu-v3.3.auto: failed to enable combined irq
[   17.617491] arm-smmu-v3 arm-smmu-v3.4.auto: option mask 0x2
[   17.623073] arm-smmu-v3 arm-smmu-v3.4.auto: ias 44-bit, oas 44-bit (features 0x0000172d)
[   17.631339] genirq: Flags mismatch irq 6. 00002001 (arm-smmu-v3-combined-irq) vs. 00002001 (arm-smmu-v3-combined-irq)
[   17.782944] arm-smmu-v3 arm-smmu-v3.4.auto: failed to enable combined irq
[   17.789780] arm-smmu-v3 arm-smmu-v3.5.auto: option mask 0x2
[   17.795367] arm-smmu-v3 arm-smmu-v3.5.auto: ias 44-bit, oas 44-bit (features 0x0000172d)
[   17.803640] genirq: Flags mismatch irq 7. 00002001 (arm-smmu-v3-combined-irq) vs. 00002001 (arm-smmu-v3-combined-irq)
[   17.955248] arm-smmu-v3 arm-smmu-v3.5.auto: failed to enable combined irq

In __setup_irq() in kernel/irq/manage.c there is a check if that flag
is set which causes the error is shown.

-Robert
<span class="quote">
&gt; +					&quot;arm-smmu-v3-combined-irq&quot;, smmu);</span>
<span class="quote">&gt; +		if (ret &lt; 0)</span>
<span class="quote">&gt; +			dev_warn(smmu-&gt;dev, &quot;failed to enable combined irq\n&quot;);</span>
<span class="quote">&gt; +	} else</span>
<span class="quote">&gt; +		arm_smmu_setup_unique_irqs(smmu);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	if (smmu-&gt;features &amp; ARM_SMMU_FEAT_PRI)</span>
<span class="quote">&gt; +		irqen_flags |= IRQ_CTRL_PRIQ_IRQEN;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	/* Enable interrupt generation on the SMMU */</span>
<span class="quote">&gt;  	ret = arm_smmu_write_reg_sync(smmu, irqen_flags,</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7096">Will Deacon</a> - June 27, 2017, 2:06 p.m.</div>
<pre class="content">
On Tue, Jun 27, 2017 at 03:56:10PM +0200, Robert Richter wrote:
<span class="quote">&gt; On 23.06.17 19:04:36, Geetha sowjanya wrote:</span>
<span class="quote">&gt; &gt; From: Geetha Sowjanya &lt;geethasowjanya.akula@cavium.com&gt;</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Cavium ThunderX2 SMMU doesn&#39;t support MSI and also doesn&#39;t have unique irq</span>
<span class="quote">&gt; &gt; lines for gerror, eventq and cmdq-sync.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; New named irq &quot;combined&quot; is set as a errata workaround, which allows to</span>
<span class="quote">&gt; &gt; share the irq line by register single irq handler for all the interrupts.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Signed-off-by: Geetha sowjanya &lt;gakula@caviumnetworks.com&gt;</span>
<span class="quote">&gt; &gt; ---</span>
<span class="quote">&gt; &gt;  Documentation/arm64/silicon-errata.txt             |    1 +</span>
<span class="quote">&gt; &gt;  .../devicetree/bindings/iommu/arm,smmu-v3.txt      |    6 +</span>
<span class="quote">&gt; &gt;  drivers/acpi/arm64/iort.c                          |   57 ++++++++---</span>
<span class="quote">&gt; &gt;  drivers/iommu/arm-smmu-v3.c                        |  100 ++++++++++++++-----</span>
<span class="quote">&gt; &gt;  4 files changed, 121 insertions(+), 43 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; +static int arm_smmu_setup_irqs(struct arm_smmu_device *smmu)</span>
<span class="quote">&gt; &gt; +{</span>
<span class="quote">&gt; &gt; +	int ret, irq;</span>
<span class="quote">&gt; &gt; +	u32 irqen_flags = IRQ_CTRL_EVTQ_IRQEN | IRQ_CTRL_GERROR_IRQEN;</span>
<span class="quote">&gt; &gt; +</span>
<span class="quote">&gt; &gt; +	/* Disable IRQs first */</span>
<span class="quote">&gt; &gt; +	ret = arm_smmu_write_reg_sync(smmu, 0, ARM_SMMU_IRQ_CTRL,</span>
<span class="quote">&gt; &gt; +				      ARM_SMMU_IRQ_CTRLACK);</span>
<span class="quote">&gt; &gt; +	if (ret) {</span>
<span class="quote">&gt; &gt; +		dev_err(smmu-&gt;dev, &quot;failed to disable irqs\n&quot;);</span>
<span class="quote">&gt; &gt; +		return ret;</span>
<span class="quote">&gt; &gt; +	}</span>
<span class="quote">&gt; &gt; +</span>
<span class="quote">&gt; &gt; +	irq = smmu-&gt;combined_irq;</span>
<span class="quote">&gt; &gt; +	if (irq) {</span>
<span class="quote">&gt; &gt; +		/*</span>
<span class="quote">&gt; &gt; +		 * Cavium ThunderX2 implementation doesn&#39;t not support unique</span>
<span class="quote">&gt; &gt; +		 * irq lines. Use single irq line for all the SMMUv3 interrupts.</span>
<span class="quote">&gt; &gt; +		 */</span>
<span class="quote">&gt; &gt; +		ret = devm_request_threaded_irq(smmu-&gt;dev, irq,</span>
<span class="quote">&gt; &gt; +					arm_smmu_combined_irq_handler,</span>
<span class="quote">&gt; &gt; +					arm_smmu_combined_irq_thread,</span>
<span class="quote">&gt; &gt; +					IRQF_ONESHOT,</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Without the IRQF_SHARED flag set I see the following on a dual node</span>
<span class="quote">&gt; system now:</span>

We asked about that before:

https://marc.info/?l=linux-arm-kernel&amp;m=149803613513068&amp;w=2
https://marc.info/?l=linux-acpi&amp;m=149803744713475&amp;w=2

and Geetha didn&#39;t reply, but the next version of the patch dropped the flag.
Is it just that firmware is misprogramming something here, or something
more fundamental?

Will
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=174071">Geetha Akula</a> - June 27, 2017, 2:58 p.m.</div>
<pre class="content">
On Tue, Jun 27, 2017 at 7:36 PM, Will Deacon &lt;will.deacon@arm.com&gt; wrote:
<span class="quote">&gt; On Tue, Jun 27, 2017 at 03:56:10PM +0200, Robert Richter wrote:</span>
<span class="quote">&gt;&gt; On 23.06.17 19:04:36, Geetha sowjanya wrote:</span>
<span class="quote">&gt;&gt; &gt; From: Geetha Sowjanya &lt;geethasowjanya.akula@cavium.com&gt;</span>
<span class="quote">&gt;&gt; &gt;</span>
<span class="quote">&gt;&gt; &gt; Cavium ThunderX2 SMMU doesn&#39;t support MSI and also doesn&#39;t have unique irq</span>
<span class="quote">&gt;&gt; &gt; lines for gerror, eventq and cmdq-sync.</span>
<span class="quote">&gt;&gt; &gt;</span>
<span class="quote">&gt;&gt; &gt; New named irq &quot;combined&quot; is set as a errata workaround, which allows to</span>
<span class="quote">&gt;&gt; &gt; share the irq line by register single irq handler for all the interrupts.</span>
<span class="quote">&gt;&gt; &gt;</span>
<span class="quote">&gt;&gt; &gt; Signed-off-by: Geetha sowjanya &lt;gakula@caviumnetworks.com&gt;</span>
<span class="quote">&gt;&gt; &gt; ---</span>
<span class="quote">&gt;&gt; &gt;  Documentation/arm64/silicon-errata.txt             |    1 +</span>
<span class="quote">&gt;&gt; &gt;  .../devicetree/bindings/iommu/arm,smmu-v3.txt      |    6 +</span>
<span class="quote">&gt;&gt; &gt;  drivers/acpi/arm64/iort.c                          |   57 ++++++++---</span>
<span class="quote">&gt;&gt; &gt;  drivers/iommu/arm-smmu-v3.c                        |  100 ++++++++++++++-----</span>
<span class="quote">&gt;&gt; &gt;  4 files changed, 121 insertions(+), 43 deletions(-)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; &gt; +static int arm_smmu_setup_irqs(struct arm_smmu_device *smmu)</span>
<span class="quote">&gt;&gt; &gt; +{</span>
<span class="quote">&gt;&gt; &gt; +   int ret, irq;</span>
<span class="quote">&gt;&gt; &gt; +   u32 irqen_flags = IRQ_CTRL_EVTQ_IRQEN | IRQ_CTRL_GERROR_IRQEN;</span>
<span class="quote">&gt;&gt; &gt; +</span>
<span class="quote">&gt;&gt; &gt; +   /* Disable IRQs first */</span>
<span class="quote">&gt;&gt; &gt; +   ret = arm_smmu_write_reg_sync(smmu, 0, ARM_SMMU_IRQ_CTRL,</span>
<span class="quote">&gt;&gt; &gt; +                                 ARM_SMMU_IRQ_CTRLACK);</span>
<span class="quote">&gt;&gt; &gt; +   if (ret) {</span>
<span class="quote">&gt;&gt; &gt; +           dev_err(smmu-&gt;dev, &quot;failed to disable irqs\n&quot;);</span>
<span class="quote">&gt;&gt; &gt; +           return ret;</span>
<span class="quote">&gt;&gt; &gt; +   }</span>
<span class="quote">&gt;&gt; &gt; +</span>
<span class="quote">&gt;&gt; &gt; +   irq = smmu-&gt;combined_irq;</span>
<span class="quote">&gt;&gt; &gt; +   if (irq) {</span>
<span class="quote">&gt;&gt; &gt; +           /*</span>
<span class="quote">&gt;&gt; &gt; +            * Cavium ThunderX2 implementation doesn&#39;t not support unique</span>
<span class="quote">&gt;&gt; &gt; +            * irq lines. Use single irq line for all the SMMUv3 interrupts.</span>
<span class="quote">&gt;&gt; &gt; +            */</span>
<span class="quote">&gt;&gt; &gt; +           ret = devm_request_threaded_irq(smmu-&gt;dev, irq,</span>
<span class="quote">&gt;&gt; &gt; +                                   arm_smmu_combined_irq_handler,</span>
<span class="quote">&gt;&gt; &gt; +                                   arm_smmu_combined_irq_thread,</span>
<span class="quote">&gt;&gt; &gt; +                                   IRQF_ONESHOT,</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Without the IRQF_SHARED flag set I see the following on a dual node</span>
<span class="quote">&gt;&gt; system now:</span>
Node1 SMMU interrupts are programmed wrong in the firmware.
Node 0 and Node1 SMMU do not share interrupts.
I have verified the patch on dual node with correct interrupt numbers
programmed in firmware.


Thanks,
Geetha.
<span class="quote">&gt;</span>
<span class="quote">&gt; We asked about that before:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; https://marc.info/?l=linux-arm-kernel&amp;m=149803613513068&amp;w=2</span>
<span class="quote">&gt; https://marc.info/?l=linux-acpi&amp;m=149803744713475&amp;w=2</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; and Geetha didn&#39;t reply, but the next version of the patch dropped the flag.</span>
<span class="quote">&gt; Is it just that firmware is misprogramming something here, or something</span>
<span class="quote">&gt; more fundamental?</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Will</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=168391">Robert Richter</a> - June 27, 2017, 3:18 p.m.</div>
<pre class="content">
On 27.06.17 20:28:14, Geetha Akula wrote:
<span class="quote">&gt; On Tue, Jun 27, 2017 at 7:36 PM, Will Deacon &lt;will.deacon@arm.com&gt; wrote:</span>
<span class="quote">&gt; &gt; On Tue, Jun 27, 2017 at 03:56:10PM +0200, Robert Richter wrote:</span>
<span class="quote">&gt; &gt;&gt; On 23.06.17 19:04:36, Geetha sowjanya wrote:</span>
<span class="quote">&gt; &gt;&gt; &gt; From: Geetha Sowjanya &lt;geethasowjanya.akula@cavium.com&gt;</span>
<span class="quote">&gt; &gt;&gt; &gt;</span>
<span class="quote">&gt; &gt;&gt; &gt; Cavium ThunderX2 SMMU doesn&#39;t support MSI and also doesn&#39;t have unique irq</span>
<span class="quote">&gt; &gt;&gt; &gt; lines for gerror, eventq and cmdq-sync.</span>
<span class="quote">&gt; &gt;&gt; &gt;</span>
<span class="quote">&gt; &gt;&gt; &gt; New named irq &quot;combined&quot; is set as a errata workaround, which allows to</span>
<span class="quote">&gt; &gt;&gt; &gt; share the irq line by register single irq handler for all the interrupts.</span>
<span class="quote">&gt; &gt;&gt; &gt;</span>
<span class="quote">&gt; &gt;&gt; &gt; Signed-off-by: Geetha sowjanya &lt;gakula@caviumnetworks.com&gt;</span>
<span class="quote">&gt; &gt;&gt; &gt; ---</span>
<span class="quote">&gt; &gt;&gt; &gt;  Documentation/arm64/silicon-errata.txt             |    1 +</span>
<span class="quote">&gt; &gt;&gt; &gt;  .../devicetree/bindings/iommu/arm,smmu-v3.txt      |    6 +</span>
<span class="quote">&gt; &gt;&gt; &gt;  drivers/acpi/arm64/iort.c                          |   57 ++++++++---</span>
<span class="quote">&gt; &gt;&gt; &gt;  drivers/iommu/arm-smmu-v3.c                        |  100 ++++++++++++++-----</span>
<span class="quote">&gt; &gt;&gt; &gt;  4 files changed, 121 insertions(+), 43 deletions(-)</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; &gt; +static int arm_smmu_setup_irqs(struct arm_smmu_device *smmu)</span>
<span class="quote">&gt; &gt;&gt; &gt; +{</span>
<span class="quote">&gt; &gt;&gt; &gt; +   int ret, irq;</span>
<span class="quote">&gt; &gt;&gt; &gt; +   u32 irqen_flags = IRQ_CTRL_EVTQ_IRQEN | IRQ_CTRL_GERROR_IRQEN;</span>
<span class="quote">&gt; &gt;&gt; &gt; +</span>
<span class="quote">&gt; &gt;&gt; &gt; +   /* Disable IRQs first */</span>
<span class="quote">&gt; &gt;&gt; &gt; +   ret = arm_smmu_write_reg_sync(smmu, 0, ARM_SMMU_IRQ_CTRL,</span>
<span class="quote">&gt; &gt;&gt; &gt; +                                 ARM_SMMU_IRQ_CTRLACK);</span>
<span class="quote">&gt; &gt;&gt; &gt; +   if (ret) {</span>
<span class="quote">&gt; &gt;&gt; &gt; +           dev_err(smmu-&gt;dev, &quot;failed to disable irqs\n&quot;);</span>
<span class="quote">&gt; &gt;&gt; &gt; +           return ret;</span>
<span class="quote">&gt; &gt;&gt; &gt; +   }</span>
<span class="quote">&gt; &gt;&gt; &gt; +</span>
<span class="quote">&gt; &gt;&gt; &gt; +   irq = smmu-&gt;combined_irq;</span>
<span class="quote">&gt; &gt;&gt; &gt; +   if (irq) {</span>
<span class="quote">&gt; &gt;&gt; &gt; +           /*</span>
<span class="quote">&gt; &gt;&gt; &gt; +            * Cavium ThunderX2 implementation doesn&#39;t not support unique</span>
<span class="quote">&gt; &gt;&gt; &gt; +            * irq lines. Use single irq line for all the SMMUv3 interrupts.</span>
<span class="quote">&gt; &gt;&gt; &gt; +            */</span>
<span class="quote">&gt; &gt;&gt; &gt; +           ret = devm_request_threaded_irq(smmu-&gt;dev, irq,</span>
<span class="quote">&gt; &gt;&gt; &gt; +                                   arm_smmu_combined_irq_handler,</span>
<span class="quote">&gt; &gt;&gt; &gt; +                                   arm_smmu_combined_irq_thread,</span>
<span class="quote">&gt; &gt;&gt; &gt; +                                   IRQF_ONESHOT,</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; Without the IRQF_SHARED flag set I see the following on a dual node</span>
<span class="quote">&gt; &gt;&gt; system now:</span>
<span class="quote">&gt; Node1 SMMU interrupts are programmed wrong in the firmware.</span>
<span class="quote">&gt; Node 0 and Node1 SMMU do not share interrupts.</span>
<span class="quote">&gt; I have verified the patch on dual node with correct interrupt numbers</span>
<span class="quote">&gt; programmed in firmware.</span>

Ah, ok, will update to latest fw.

Thanks,

-Robert
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/Documentation/arm64/silicon-errata.txt b/Documentation/arm64/silicon-errata.txt</span>
<span class="p_header">index 4693a32..42422f6 100644</span>
<span class="p_header">--- a/Documentation/arm64/silicon-errata.txt</span>
<span class="p_header">+++ b/Documentation/arm64/silicon-errata.txt</span>
<span class="p_chunk">@@ -63,6 +63,7 @@</span> <span class="p_context"> stable kernels.</span>
 | Cavium         | ThunderX Core   | #27456          | CAVIUM_ERRATUM_27456        |
 | Cavium         | ThunderX SMMUv2 | #27704          | N/A                         |
 | Cavium         | ThunderX2 SMMUv3| #74             | N/A                         |
<span class="p_add">+| Cavium         | ThunderX2 SMMUv3| #126            | N/A                         |</span>
 |                |                 |                 |                             |
 | Freescale/NXP  | LS2080A/LS1043A | A-008585        | FSL_ERRATUM_A008585         |
 |                |                 |                 |                             |
<span class="p_header">diff --git a/Documentation/devicetree/bindings/iommu/arm,smmu-v3.txt b/Documentation/devicetree/bindings/iommu/arm,smmu-v3.txt</span>
<span class="p_header">index e7855cf..c9abbf3 100644</span>
<span class="p_header">--- a/Documentation/devicetree/bindings/iommu/arm,smmu-v3.txt</span>
<span class="p_header">+++ b/Documentation/devicetree/bindings/iommu/arm,smmu-v3.txt</span>
<span class="p_chunk">@@ -26,6 +26,12 @@</span> <span class="p_context"> the PCIe specification.</span>
                       * &quot;priq&quot;      - PRI Queue not empty
                       * &quot;cmdq-sync&quot; - CMD_SYNC complete
                       * &quot;gerror&quot;    - Global Error activated
<span class="p_add">+                      * &quot;combined&quot;  - The combined interrupt is optional,</span>
<span class="p_add">+				      and should only be provided if the</span>
<span class="p_add">+				      hardware supports just a single,</span>
<span class="p_add">+				      combined interrupt line.</span>
<span class="p_add">+				      If provided, then the combined interrupt</span>
<span class="p_add">+				      will be used in preference to any others.</span>
 
 - #iommu-cells      : See the generic IOMMU binding described in
                         devicetree/bindings/pci/pci-iommu.txt
<span class="p_header">diff --git a/drivers/acpi/arm64/iort.c b/drivers/acpi/arm64/iort.c</span>
<span class="p_header">index bd97b7d..21c1ed3 100644</span>
<span class="p_header">--- a/drivers/acpi/arm64/iort.c</span>
<span class="p_header">+++ b/drivers/acpi/arm64/iort.c</span>
<span class="p_chunk">@@ -828,6 +828,18 @@</span> <span class="p_context"> static int __init arm_smmu_v3_count_resources(struct acpi_iort_node *node)</span>
 	return num_res;
 }
 
<span class="p_add">+static bool arm_smmu_v3_is_combined_irq(struct acpi_iort_smmu_v3 *smmu)</span>
<span class="p_add">+{</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Cavium ThunderX2 implementation doesn&#39;t not support unique</span>
<span class="p_add">+	 * irq line. Use single irq line for all the SMMUv3 interrupts.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	if (smmu-&gt;model == ACPI_IORT_SMMU_V3_CAVIUM_CN99XX)</span>
<span class="p_add">+		return true;</span>
<span class="p_add">+</span>
<span class="p_add">+	return false;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static unsigned long arm_smmu_v3_resource_size(struct acpi_iort_smmu_v3 *smmu)
 {
 	/*
<span class="p_chunk">@@ -855,26 +867,39 @@</span> <span class="p_context"> static void __init arm_smmu_v3_init_resources(struct resource *res,</span>
 	res[num_res].flags = IORESOURCE_MEM;
 
 	num_res++;
<span class="p_add">+	if (arm_smmu_v3_is_combined_irq(smmu)) {</span>
<span class="p_add">+		int irq = smmu-&gt;event_gsiv;</span>
 
<span class="p_del">-	if (smmu-&gt;event_gsiv)</span>
<span class="p_del">-		acpi_iort_register_irq(smmu-&gt;event_gsiv, &quot;eventq&quot;,</span>
<span class="p_del">-				       ACPI_EDGE_SENSITIVE,</span>
<span class="p_del">-				       &amp;res[num_res++]);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (smmu-&gt;pri_gsiv)</span>
<span class="p_del">-		acpi_iort_register_irq(smmu-&gt;pri_gsiv, &quot;priq&quot;,</span>
<span class="p_del">-				       ACPI_EDGE_SENSITIVE,</span>
<span class="p_del">-				       &amp;res[num_res++]);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (smmu-&gt;gerr_gsiv)</span>
<span class="p_del">-		acpi_iort_register_irq(smmu-&gt;gerr_gsiv, &quot;gerror&quot;,</span>
<span class="p_add">+		if (!(irq == smmu-&gt;pri_gsiv &amp;&amp; irq == smmu-&gt;gerr_gsiv &amp;&amp;</span>
<span class="p_add">+		    irq == smmu-&gt;sync_gsiv)) {</span>
<span class="p_add">+			pr_warn(FW_BUG &quot;Incosistent combined GSIV configuration\n&quot;);</span>
<span class="p_add">+			return;</span>
<span class="p_add">+		}</span>
<span class="p_add">+		acpi_iort_register_irq(smmu-&gt;event_gsiv, &quot;combined&quot;,</span>
 				       ACPI_EDGE_SENSITIVE,
 				       &amp;res[num_res++]);
<span class="p_add">+	} else {</span>
 
<span class="p_del">-	if (smmu-&gt;sync_gsiv)</span>
<span class="p_del">-		acpi_iort_register_irq(smmu-&gt;sync_gsiv, &quot;cmdq-sync&quot;,</span>
<span class="p_del">-				       ACPI_EDGE_SENSITIVE,</span>
<span class="p_del">-				       &amp;res[num_res++]);</span>
<span class="p_add">+		if (smmu-&gt;event_gsiv)</span>
<span class="p_add">+			acpi_iort_register_irq(smmu-&gt;event_gsiv, &quot;eventq&quot;,</span>
<span class="p_add">+					       ACPI_EDGE_SENSITIVE,</span>
<span class="p_add">+					       &amp;res[num_res++]);</span>
<span class="p_add">+</span>
<span class="p_add">+		if (smmu-&gt;pri_gsiv)</span>
<span class="p_add">+			acpi_iort_register_irq(smmu-&gt;pri_gsiv, &quot;priq&quot;,</span>
<span class="p_add">+					       ACPI_EDGE_SENSITIVE,</span>
<span class="p_add">+					       &amp;res[num_res++]);</span>
<span class="p_add">+</span>
<span class="p_add">+		if (smmu-&gt;gerr_gsiv)</span>
<span class="p_add">+			acpi_iort_register_irq(smmu-&gt;gerr_gsiv, &quot;gerror&quot;,</span>
<span class="p_add">+					       ACPI_EDGE_SENSITIVE,</span>
<span class="p_add">+					       &amp;res[num_res++]);</span>
<span class="p_add">+</span>
<span class="p_add">+		if (smmu-&gt;sync_gsiv)</span>
<span class="p_add">+			acpi_iort_register_irq(smmu-&gt;sync_gsiv, &quot;cmdq-sync&quot;,</span>
<span class="p_add">+					       ACPI_EDGE_SENSITIVE,</span>
<span class="p_add">+					       &amp;res[num_res++]);</span>
<span class="p_add">+	}</span>
 }
 
 static bool __init arm_smmu_v3_is_coherent(struct acpi_iort_node *node)
<span class="p_header">diff --git a/drivers/iommu/arm-smmu-v3.c b/drivers/iommu/arm-smmu-v3.c</span>
<span class="p_header">index 2dea4a9..fd5a48c 100644</span>
<span class="p_header">--- a/drivers/iommu/arm-smmu-v3.c</span>
<span class="p_header">+++ b/drivers/iommu/arm-smmu-v3.c</span>
<span class="p_chunk">@@ -605,6 +605,7 @@</span> <span class="p_context"> struct arm_smmu_device {</span>
 	struct arm_smmu_priq		priq;
 
 	int				gerr_irq;
<span class="p_add">+	int				combined_irq;</span>
 
 	unsigned long			ias; /* IPA */
 	unsigned long			oas; /* PA */
<span class="p_chunk">@@ -1314,6 +1315,24 @@</span> <span class="p_context"> static irqreturn_t arm_smmu_gerror_handler(int irq, void *dev)</span>
 	return IRQ_HANDLED;
 }
 
<span class="p_add">+static irqreturn_t arm_smmu_combined_irq_thread(int irq, void *dev)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct arm_smmu_device *smmu = dev;</span>
<span class="p_add">+</span>
<span class="p_add">+	arm_smmu_evtq_thread(irq, dev);</span>
<span class="p_add">+	if (smmu-&gt;features &amp; ARM_SMMU_FEAT_PRI)</span>
<span class="p_add">+		arm_smmu_priq_thread(irq, dev);</span>
<span class="p_add">+</span>
<span class="p_add">+	return IRQ_HANDLED;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static irqreturn_t arm_smmu_combined_irq_handler(int irq, void *dev)</span>
<span class="p_add">+{</span>
<span class="p_add">+	arm_smmu_gerror_handler(irq, dev);</span>
<span class="p_add">+	arm_smmu_cmdq_sync_handler(irq, dev);</span>
<span class="p_add">+	return IRQ_WAKE_THREAD;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 /* IO_PGTABLE API */
 static void __arm_smmu_tlb_sync(struct arm_smmu_device *smmu)
 {
<span class="p_chunk">@@ -2230,18 +2249,9 @@</span> <span class="p_context"> static void arm_smmu_setup_msis(struct arm_smmu_device *smmu)</span>
 	devm_add_action(dev, arm_smmu_free_msis, dev);
 }
 
<span class="p_del">-static int arm_smmu_setup_irqs(struct arm_smmu_device *smmu)</span>
<span class="p_add">+static void arm_smmu_setup_unique_irqs(struct arm_smmu_device *smmu)</span>
 {
<span class="p_del">-	int ret, irq;</span>
<span class="p_del">-	u32 irqen_flags = IRQ_CTRL_EVTQ_IRQEN | IRQ_CTRL_GERROR_IRQEN;</span>
<span class="p_del">-</span>
<span class="p_del">-	/* Disable IRQs first */</span>
<span class="p_del">-	ret = arm_smmu_write_reg_sync(smmu, 0, ARM_SMMU_IRQ_CTRL,</span>
<span class="p_del">-				      ARM_SMMU_IRQ_CTRLACK);</span>
<span class="p_del">-	if (ret) {</span>
<span class="p_del">-		dev_err(smmu-&gt;dev, &quot;failed to disable irqs\n&quot;);</span>
<span class="p_del">-		return ret;</span>
<span class="p_del">-	}</span>
<span class="p_add">+	int irq, ret;</span>
 
 	arm_smmu_setup_msis(smmu);
 
<span class="p_chunk">@@ -2284,10 +2294,41 @@</span> <span class="p_context"> static int arm_smmu_setup_irqs(struct arm_smmu_device *smmu)</span>
 			if (ret &lt; 0)
 				dev_warn(smmu-&gt;dev,
 					 &quot;failed to enable priq irq\n&quot;);
<span class="p_del">-			else</span>
<span class="p_del">-				irqen_flags |= IRQ_CTRL_PRIQ_IRQEN;</span>
 		}
 	}
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static int arm_smmu_setup_irqs(struct arm_smmu_device *smmu)</span>
<span class="p_add">+{</span>
<span class="p_add">+	int ret, irq;</span>
<span class="p_add">+	u32 irqen_flags = IRQ_CTRL_EVTQ_IRQEN | IRQ_CTRL_GERROR_IRQEN;</span>
<span class="p_add">+</span>
<span class="p_add">+	/* Disable IRQs first */</span>
<span class="p_add">+	ret = arm_smmu_write_reg_sync(smmu, 0, ARM_SMMU_IRQ_CTRL,</span>
<span class="p_add">+				      ARM_SMMU_IRQ_CTRLACK);</span>
<span class="p_add">+	if (ret) {</span>
<span class="p_add">+		dev_err(smmu-&gt;dev, &quot;failed to disable irqs\n&quot;);</span>
<span class="p_add">+		return ret;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	irq = smmu-&gt;combined_irq;</span>
<span class="p_add">+	if (irq) {</span>
<span class="p_add">+		/*</span>
<span class="p_add">+		 * Cavium ThunderX2 implementation doesn&#39;t not support unique</span>
<span class="p_add">+		 * irq lines. Use single irq line for all the SMMUv3 interrupts.</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		ret = devm_request_threaded_irq(smmu-&gt;dev, irq,</span>
<span class="p_add">+					arm_smmu_combined_irq_handler,</span>
<span class="p_add">+					arm_smmu_combined_irq_thread,</span>
<span class="p_add">+					IRQF_ONESHOT,</span>
<span class="p_add">+					&quot;arm-smmu-v3-combined-irq&quot;, smmu);</span>
<span class="p_add">+		if (ret &lt; 0)</span>
<span class="p_add">+			dev_warn(smmu-&gt;dev, &quot;failed to enable combined irq\n&quot;);</span>
<span class="p_add">+	} else</span>
<span class="p_add">+		arm_smmu_setup_unique_irqs(smmu);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (smmu-&gt;features &amp; ARM_SMMU_FEAT_PRI)</span>
<span class="p_add">+		irqen_flags |= IRQ_CTRL_PRIQ_IRQEN;</span>
 
 	/* Enable interrupt generation on the SMMU */
 	ret = arm_smmu_write_reg_sync(smmu, irqen_flags,
<span class="p_chunk">@@ -2724,22 +2765,27 @@</span> <span class="p_context"> static int arm_smmu_device_probe(struct platform_device *pdev)</span>
 		return PTR_ERR(smmu-&gt;base);
 
 	/* Interrupt lines */
<span class="p_del">-	irq = platform_get_irq_byname(pdev, &quot;eventq&quot;);</span>
<span class="p_del">-	if (irq &gt; 0)</span>
<span class="p_del">-		smmu-&gt;evtq.q.irq = irq;</span>
 
<span class="p_del">-	irq = platform_get_irq_byname(pdev, &quot;priq&quot;);</span>
<span class="p_add">+	irq = platform_get_irq_byname(pdev, &quot;combined&quot;);</span>
 	if (irq &gt; 0)
<span class="p_del">-		smmu-&gt;priq.q.irq = irq;</span>
<span class="p_add">+		smmu-&gt;combined_irq = irq;</span>
<span class="p_add">+	else {</span>
<span class="p_add">+		irq = platform_get_irq_byname(pdev, &quot;eventq&quot;);</span>
<span class="p_add">+		if (irq &gt; 0)</span>
<span class="p_add">+			smmu-&gt;evtq.q.irq = irq;</span>
 
<span class="p_del">-	irq = platform_get_irq_byname(pdev, &quot;cmdq-sync&quot;);</span>
<span class="p_del">-	if (irq &gt; 0)</span>
<span class="p_del">-		smmu-&gt;cmdq.q.irq = irq;</span>
<span class="p_add">+		irq = platform_get_irq_byname(pdev, &quot;priq&quot;);</span>
<span class="p_add">+		if (irq &gt; 0)</span>
<span class="p_add">+			smmu-&gt;priq.q.irq = irq;</span>
 
<span class="p_del">-	irq = platform_get_irq_byname(pdev, &quot;gerror&quot;);</span>
<span class="p_del">-	if (irq &gt; 0)</span>
<span class="p_del">-		smmu-&gt;gerr_irq = irq;</span>
<span class="p_add">+		irq = platform_get_irq_byname(pdev, &quot;cmdq-sync&quot;);</span>
<span class="p_add">+		if (irq &gt; 0)</span>
<span class="p_add">+			smmu-&gt;cmdq.q.irq = irq;</span>
 
<span class="p_add">+		irq = platform_get_irq_byname(pdev, &quot;gerror&quot;);</span>
<span class="p_add">+		if (irq &gt; 0)</span>
<span class="p_add">+			smmu-&gt;gerr_irq = irq;</span>
<span class="p_add">+	}</span>
 	/* Probe the h/w */
 	ret = arm_smmu_device_hw_probe(smmu);
 	if (ret)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



