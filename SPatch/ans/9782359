
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.9,016/119] sparc64: reset mm cpumask after wrap - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.9,016/119] sparc64: reset mm cpumask after wrap</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 12, 2017, 3:24 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170612152557.447986018@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9782359/mbox/"
   >mbox</a>
|
   <a href="/patch/9782359/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9782359/">/patch/9782359/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	7B4C260244 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 12 Jun 2017 17:02:06 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 69752284DA
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 12 Jun 2017 17:02:06 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 5CE3B283C9; Mon, 12 Jun 2017 17:02:06 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id F4090283C9
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 12 Jun 2017 17:02:04 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754007AbdFLPdZ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 12 Jun 2017 11:33:25 -0400
Received: from mail.linuxfoundation.org ([140.211.169.12]:40840 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752089AbdFLPdU (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 12 Jun 2017 11:33:20 -0400
Received: from localhost (LFbn-1-12060-104.w90-92.abo.wanadoo.fr
	[90.92.122.104])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id BC5CFB8F;
	Mon, 12 Jun 2017 15:33:19 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, Pavel Tatashin &lt;pasha.tatashin@oracle.com&gt;,
	Bob Picco &lt;bob.picco@oracle.com&gt;,
	Steven Sistare &lt;steven.sistare@oracle.com&gt;,
	&quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;
Subject: [PATCH 4.9 016/119] sparc64: reset mm cpumask after wrap
Date: Mon, 12 Jun 2017 17:24:38 +0200
Message-Id: &lt;20170612152557.447986018@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.13.1
In-Reply-To: &lt;20170612152556.601664278@linuxfoundation.org&gt;
References: &lt;20170612152556.601664278@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - June 12, 2017, 3:24 p.m.</div>
<pre class="content">
4.9-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: Pavel Tatashin &lt;pasha.tatashin@oracle.com&gt;</span>


[ Upstream commit 588974857359861891f478a070b1dc7ae04a3880 ]

After a wrap (getting a new context version) a process must get a new
context id, which means that we would need to flush the context id from
the TLB before running for the first time with this ID on every CPU. But,
we use mm_cpumask to determine if this process has been running on this CPU
before, and this mask is not reset after a wrap. So, there are two possible
fixes for this issue:

1. Clear mm cpumask whenever mm gets a new context id
2. Unconditionally flush context every time process is running on a CPU

This patch implements the first solution
<span class="signed-off-by">
Signed-off-by: Pavel Tatashin &lt;pasha.tatashin@oracle.com&gt;</span>
<span class="reviewed-by">Reviewed-by: Bob Picco &lt;bob.picco@oracle.com&gt;</span>
<span class="reviewed-by">Reviewed-by: Steven Sistare &lt;steven.sistare@oracle.com&gt;</span>
<span class="signed-off-by">Signed-off-by: David S. Miller &lt;davem@davemloft.net&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>
---
 arch/sparc/mm/init_64.c |    2 ++
 1 file changed, 2 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/sparc/mm/init_64.c</span>
<span class="p_header">+++ b/arch/sparc/mm/init_64.c</span>
<span class="p_chunk">@@ -710,6 +710,8 @@</span> <span class="p_context"> void get_new_mmu_context(struct mm_struc</span>
 			goto out;
 		}
 	}
<span class="p_add">+	if (mm-&gt;context.sparc64_ctx_val)</span>
<span class="p_add">+		cpumask_clear(mm_cpumask(mm));</span>
 	mmu_context_bmap[new_ctx&gt;&gt;6] |= (1UL &lt;&lt; (new_ctx &amp; 63));
 	new_ctx |= (tlb_context_cache &amp; CTX_VERSION_MASK);
 out:

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



