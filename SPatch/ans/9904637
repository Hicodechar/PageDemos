
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>Linux 4.12.8 - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    Linux 4.12.8</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 16, 2017, 9:24 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170816212447.GB10133@kroah.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9904637/mbox/"
   >mbox</a>
|
   <a href="/patch/9904637/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9904637/">/patch/9904637/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	8DDBF60244 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 16 Aug 2017 21:25:01 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6E3E028A3A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 16 Aug 2017 21:25:01 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 5B23828A53; Wed, 16 Aug 2017 21:25:01 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E6C9428A3A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 16 Aug 2017 21:24:55 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752755AbdHPVYx (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 16 Aug 2017 17:24:53 -0400
Received: from mail.linuxfoundation.org ([140.211.169.12]:60580 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752219AbdHPVYr (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 16 Aug 2017 17:24:47 -0400
Received: from localhost (unknown [216.239.55.136])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id 5847A9E8;
	Wed, 16 Aug 2017 21:24:46 +0000 (UTC)
Date: Wed, 16 Aug 2017 14:24:47 -0700
From: Greg KH &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org, Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	torvalds@linux-foundation.org, stable@vger.kernel.org
Cc: lwn@lwn.net, Jiri Slaby &lt;jslaby@suse.cz&gt;
Subject: Re: Linux 4.12.8
Message-ID: &lt;20170816212447.GB10133@kroah.com&gt;
References: &lt;20170816212443.GA10133@kroah.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: &lt;20170816212443.GA10133@kroah.com&gt;
User-Agent: Mutt/1.8.3 (2017-05-23)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Aug. 16, 2017, 9:24 p.m.</div>
<pre class="content">

</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/Makefile b/Makefile</span>
<span class="p_header">index ebe69a704bca..6da481d08441 100644</span>
<span class="p_header">--- a/Makefile</span>
<span class="p_header">+++ b/Makefile</span>
<span class="p_chunk">@@ -1,6 +1,6 @@</span> <span class="p_context"></span>
 VERSION = 4
 PATCHLEVEL = 12
<span class="p_del">-SUBLEVEL = 7</span>
<span class="p_add">+SUBLEVEL = 8</span>
 EXTRAVERSION =
 NAME = Fearless Coyote
 
<span class="p_header">diff --git a/arch/mips/dec/int-handler.S b/arch/mips/dec/int-handler.S</span>
<span class="p_header">index 1910223a9c02..cea2bb1621e6 100644</span>
<span class="p_header">--- a/arch/mips/dec/int-handler.S</span>
<span class="p_header">+++ b/arch/mips/dec/int-handler.S</span>
<span class="p_chunk">@@ -147,23 +147,12 @@</span> <span class="p_context"></span>
 		 * Find irq with highest priority
 		 */
 		# open coded PTR_LA t1, cpu_mask_nr_tbl
<span class="p_del">-#if (_MIPS_SZPTR == 32)</span>
<span class="p_add">+#if defined(CONFIG_32BIT) || defined(KBUILD_64BIT_SYM32)</span>
 		# open coded la t1, cpu_mask_nr_tbl
 		lui	t1, %hi(cpu_mask_nr_tbl)
 		addiu	t1, %lo(cpu_mask_nr_tbl)
<span class="p_del">-</span>
<span class="p_del">-#endif</span>
<span class="p_del">-#if (_MIPS_SZPTR == 64)</span>
<span class="p_del">-		# open coded dla t1, cpu_mask_nr_tbl</span>
<span class="p_del">-		.set	push</span>
<span class="p_del">-		.set	noat</span>
<span class="p_del">-		lui	t1, %highest(cpu_mask_nr_tbl)</span>
<span class="p_del">-		lui	AT, %hi(cpu_mask_nr_tbl)</span>
<span class="p_del">-		daddiu	t1, t1, %higher(cpu_mask_nr_tbl)</span>
<span class="p_del">-		daddiu	AT, AT, %lo(cpu_mask_nr_tbl)</span>
<span class="p_del">-		dsll	t1, 32</span>
<span class="p_del">-		daddu	t1, t1, AT</span>
<span class="p_del">-		.set	pop</span>
<span class="p_add">+#else</span>
<span class="p_add">+#error GCC `-msym32&#39; option required for 64-bit DECstation builds</span>
 #endif
 1:		lw	t2,(t1)
 		nop
<span class="p_chunk">@@ -214,23 +203,12 @@</span> <span class="p_context"></span>
 		 * Find irq with highest priority
 		 */
 		# open coded PTR_LA t1,asic_mask_nr_tbl
<span class="p_del">-#if (_MIPS_SZPTR == 32)</span>
<span class="p_add">+#if defined(CONFIG_32BIT) || defined(KBUILD_64BIT_SYM32)</span>
 		# open coded la t1, asic_mask_nr_tbl
 		lui	t1, %hi(asic_mask_nr_tbl)
 		addiu	t1, %lo(asic_mask_nr_tbl)
<span class="p_del">-</span>
<span class="p_del">-#endif</span>
<span class="p_del">-#if (_MIPS_SZPTR == 64)</span>
<span class="p_del">-		# open coded dla t1, asic_mask_nr_tbl</span>
<span class="p_del">-		.set	push</span>
<span class="p_del">-		.set	noat</span>
<span class="p_del">-		lui	t1, %highest(asic_mask_nr_tbl)</span>
<span class="p_del">-		lui	AT, %hi(asic_mask_nr_tbl)</span>
<span class="p_del">-		daddiu	t1, t1, %higher(asic_mask_nr_tbl)</span>
<span class="p_del">-		daddiu	AT, AT, %lo(asic_mask_nr_tbl)</span>
<span class="p_del">-		dsll	t1, 32</span>
<span class="p_del">-		daddu	t1, t1, AT</span>
<span class="p_del">-		.set	pop</span>
<span class="p_add">+#else</span>
<span class="p_add">+#error GCC `-msym32&#39; option required for 64-bit DECstation builds</span>
 #endif
 2:		lw	t2,(t1)
 		nop
<span class="p_header">diff --git a/arch/mips/include/asm/cache.h b/arch/mips/include/asm/cache.h</span>
<span class="p_header">index fc67947ed658..8b14c2706aa5 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/cache.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/cache.h</span>
<span class="p_chunk">@@ -9,6 +9,8 @@</span> <span class="p_context"></span>
 #ifndef _ASM_CACHE_H
 #define _ASM_CACHE_H
 
<span class="p_add">+#include &lt;kmalloc.h&gt;</span>
<span class="p_add">+</span>
 #define L1_CACHE_SHIFT		CONFIG_MIPS_L1_CACHE_SHIFT
 #define L1_CACHE_BYTES		(1 &lt;&lt; L1_CACHE_SHIFT)
 
<span class="p_header">diff --git a/arch/mips/include/asm/octeon/cvmx-l2c-defs.h b/arch/mips/include/asm/octeon/cvmx-l2c-defs.h</span>
<span class="p_header">index d045973ddb33..3ea84acf1814 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/octeon/cvmx-l2c-defs.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/octeon/cvmx-l2c-defs.h</span>
<span class="p_chunk">@@ -33,6 +33,10 @@</span> <span class="p_context"></span>
 #define CVMX_L2C_DBG (CVMX_ADD_IO_SEG(0x0001180080000030ull))
 #define CVMX_L2C_CFG (CVMX_ADD_IO_SEG(0x0001180080000000ull))
 #define CVMX_L2C_CTL (CVMX_ADD_IO_SEG(0x0001180080800000ull))
<span class="p_add">+#define CVMX_L2C_ERR_TDTX(block_id)					       \</span>
<span class="p_add">+	(CVMX_ADD_IO_SEG(0x0001180080A007E0ull) + ((block_id) &amp; 3) * 0x40000ull)</span>
<span class="p_add">+#define CVMX_L2C_ERR_TTGX(block_id)					       \</span>
<span class="p_add">+	(CVMX_ADD_IO_SEG(0x0001180080A007E8ull) + ((block_id) &amp; 3) * 0x40000ull)</span>
 #define CVMX_L2C_LCKBASE (CVMX_ADD_IO_SEG(0x0001180080000058ull))
 #define CVMX_L2C_LCKOFF (CVMX_ADD_IO_SEG(0x0001180080000060ull))
 #define CVMX_L2C_PFCTL (CVMX_ADD_IO_SEG(0x0001180080000090ull))
<span class="p_chunk">@@ -66,9 +70,40 @@</span> <span class="p_context"></span>
 		((offset) &amp; 1) * 8)
 #define CVMX_L2C_WPAR_PPX(offset) (CVMX_ADD_IO_SEG(0x0001180080840000ull)    + \
 		((offset) &amp; 31) * 8)
<span class="p_del">-#define CVMX_L2D_FUS3 (CVMX_ADD_IO_SEG(0x00011800800007B8ull))</span>
 
 
<span class="p_add">+union cvmx_l2c_err_tdtx {</span>
<span class="p_add">+	uint64_t u64;</span>
<span class="p_add">+	struct cvmx_l2c_err_tdtx_s {</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t dbe:1,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t sbe:1,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t vdbe:1,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t vsbe:1,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t syn:10,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t reserved_22_49:28,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t wayidx:18,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t reserved_2_3:2,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t type:2,</span>
<span class="p_add">+		;)))))))))</span>
<span class="p_add">+	} s;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+union cvmx_l2c_err_ttgx {</span>
<span class="p_add">+	uint64_t u64;</span>
<span class="p_add">+	struct cvmx_l2c_err_ttgx_s {</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t dbe:1,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t sbe:1,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t noway:1,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t reserved_56_60:5,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t syn:6,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t reserved_22_49:28,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t wayidx:15,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t reserved_2_6:5,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t type:2,</span>
<span class="p_add">+		;)))))))))</span>
<span class="p_add">+	} s;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 union cvmx_l2c_cfg {
 	uint64_t u64;
 	struct cvmx_l2c_cfg_s {
<span class="p_header">diff --git a/arch/mips/include/asm/octeon/cvmx-l2d-defs.h b/arch/mips/include/asm/octeon/cvmx-l2d-defs.h</span>
new file mode 100644
<span class="p_header">index 000000000000..a951ad5d65ad</span>
<span class="p_header">--- /dev/null</span>
<span class="p_header">+++ b/arch/mips/include/asm/octeon/cvmx-l2d-defs.h</span>
<span class="p_chunk">@@ -0,0 +1,60 @@</span> <span class="p_context"></span>
<span class="p_add">+/***********************license start***************</span>
<span class="p_add">+ * Author: Cavium Networks</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * Contact: support@caviumnetworks.com</span>
<span class="p_add">+ * This file is part of the OCTEON SDK</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * Copyright (c) 2003-2017 Cavium, Inc.</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * This file is free software; you can redistribute it and/or modify</span>
<span class="p_add">+ * it under the terms of the GNU General Public License, Version 2, as</span>
<span class="p_add">+ * published by the Free Software Foundation.</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * This file is distributed in the hope that it will be useful, but</span>
<span class="p_add">+ * AS-IS and WITHOUT ANY WARRANTY; without even the implied warranty</span>
<span class="p_add">+ * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE, TITLE, or</span>
<span class="p_add">+ * NONINFRINGEMENT.  See the GNU General Public License for more</span>
<span class="p_add">+ * details.</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * You should have received a copy of the GNU General Public License</span>
<span class="p_add">+ * along with this file; if not, write to the Free Software</span>
<span class="p_add">+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA</span>
<span class="p_add">+ * or visit http://www.gnu.org/licenses/.</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * This file may also be available under a different license from Cavium.</span>
<span class="p_add">+ * Contact Cavium Networks for more information</span>
<span class="p_add">+ ***********************license end**************************************/</span>
<span class="p_add">+</span>
<span class="p_add">+#ifndef __CVMX_L2D_DEFS_H__</span>
<span class="p_add">+#define __CVMX_L2D_DEFS_H__</span>
<span class="p_add">+</span>
<span class="p_add">+#define CVMX_L2D_ERR	(CVMX_ADD_IO_SEG(0x0001180080000010ull))</span>
<span class="p_add">+#define CVMX_L2D_FUS3	(CVMX_ADD_IO_SEG(0x00011800800007B8ull))</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
<span class="p_add">+union cvmx_l2d_err {</span>
<span class="p_add">+	uint64_t u64;</span>
<span class="p_add">+	struct cvmx_l2d_err_s {</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t reserved_6_63:58,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t bmhclsel:1,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t ded_err:1,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t sec_err:1,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t ded_intena:1,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t sec_intena:1,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t ecc_ena:1,</span>
<span class="p_add">+		;)))))))</span>
<span class="p_add">+	} s;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+union cvmx_l2d_fus3 {</span>
<span class="p_add">+	uint64_t u64;</span>
<span class="p_add">+	struct cvmx_l2d_fus3_s {</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t reserved_40_63:24,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t ema_ctl:3,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t reserved_34_36:3,</span>
<span class="p_add">+		__BITFIELD_FIELD(uint64_t q3fus:34,</span>
<span class="p_add">+		;))))</span>
<span class="p_add">+	} s;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+#endif</span>
<span class="p_header">diff --git a/arch/mips/include/asm/octeon/cvmx.h b/arch/mips/include/asm/octeon/cvmx.h</span>
<span class="p_header">index 9742202f2a32..e638735cc3ac 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/octeon/cvmx.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/octeon/cvmx.h</span>
<span class="p_chunk">@@ -62,6 +62,7 @@</span> <span class="p_context"> enum cvmx_mips_space {</span>
 #include &lt;asm/octeon/cvmx-iob-defs.h&gt;
 #include &lt;asm/octeon/cvmx-ipd-defs.h&gt;
 #include &lt;asm/octeon/cvmx-l2c-defs.h&gt;
<span class="p_add">+#include &lt;asm/octeon/cvmx-l2d-defs.h&gt;</span>
 #include &lt;asm/octeon/cvmx-l2t-defs.h&gt;
 #include &lt;asm/octeon/cvmx-led-defs.h&gt;
 #include &lt;asm/octeon/cvmx-mio-defs.h&gt;
<span class="p_header">diff --git a/arch/powerpc/kernel/setup-common.c b/arch/powerpc/kernel/setup-common.c</span>
<span class="p_header">index 857129acf960..94a948207cd2 100644</span>
<span class="p_header">--- a/arch/powerpc/kernel/setup-common.c</span>
<span class="p_header">+++ b/arch/powerpc/kernel/setup-common.c</span>
<span class="p_chunk">@@ -335,6 +335,10 @@</span> <span class="p_context"> static int show_cpuinfo(struct seq_file *m, void *v)</span>
 				maj = ((pvr &gt;&gt; 8) &amp; 0xFF) - 1;
 				min = pvr &amp; 0xFF;
 				break;
<span class="p_add">+			case 0x004e: /* POWER9 bits 12-15 give chip type */</span>
<span class="p_add">+				maj = (pvr &gt;&gt; 8) &amp; 0x0F;</span>
<span class="p_add">+				min = pvr &amp; 0xFF;</span>
<span class="p_add">+				break;</span>
 			default:
 				maj = (pvr &gt;&gt; 8) &amp; 0xFF;
 				min = pvr &amp; 0xFF;
<span class="p_header">diff --git a/arch/xtensa/kernel/xtensa_ksyms.c b/arch/xtensa/kernel/xtensa_ksyms.c</span>
<span class="p_header">index d159e9b9c018..672391003e40 100644</span>
<span class="p_header">--- a/arch/xtensa/kernel/xtensa_ksyms.c</span>
<span class="p_header">+++ b/arch/xtensa/kernel/xtensa_ksyms.c</span>
<span class="p_chunk">@@ -94,13 +94,11 @@</span> <span class="p_context"> unsigned long __sync_fetch_and_or_4(unsigned long *p, unsigned long v)</span>
 }
 EXPORT_SYMBOL(__sync_fetch_and_or_4);
 
<span class="p_del">-#ifdef CONFIG_NET</span>
 /*
  * Networking support
  */
 EXPORT_SYMBOL(csum_partial);
 EXPORT_SYMBOL(csum_partial_copy_generic);
<span class="p_del">-#endif /* CONFIG_NET */</span>
 
 /*
  * Architecture-specific symbols
<span class="p_header">diff --git a/arch/xtensa/mm/cache.c b/arch/xtensa/mm/cache.c</span>
<span class="p_header">index 1a804a2f9a5b..3c75c4e597da 100644</span>
<span class="p_header">--- a/arch/xtensa/mm/cache.c</span>
<span class="p_header">+++ b/arch/xtensa/mm/cache.c</span>
<span class="p_chunk">@@ -103,6 +103,7 @@</span> <span class="p_context"> void clear_user_highpage(struct page *page, unsigned long vaddr)</span>
 	clear_page_alias(kvaddr, paddr);
 	preempt_enable();
 }
<span class="p_add">+EXPORT_SYMBOL(clear_user_highpage);</span>
 
 void copy_user_highpage(struct page *dst, struct page *src,
 			unsigned long vaddr, struct vm_area_struct *vma)
<span class="p_chunk">@@ -119,10 +120,7 @@</span> <span class="p_context"> void copy_user_highpage(struct page *dst, struct page *src,</span>
 	copy_page_alias(dst_vaddr, src_vaddr, dst_paddr, src_paddr);
 	preempt_enable();
 }
<span class="p_del">-</span>
<span class="p_del">-#endif /* DCACHE_WAY_SIZE &gt; PAGE_SIZE */</span>
<span class="p_del">-</span>
<span class="p_del">-#if (DCACHE_WAY_SIZE &gt; PAGE_SIZE) &amp;&amp; XCHAL_DCACHE_IS_WRITEBACK</span>
<span class="p_add">+EXPORT_SYMBOL(copy_user_highpage);</span>
 
 /*
  * Any time the kernel writes to a user page cache page, or it is about to
<span class="p_chunk">@@ -176,7 +174,7 @@</span> <span class="p_context"> void flush_dcache_page(struct page *page)</span>
 
 	/* There shouldn&#39;t be an entry in the cache for this page anymore. */
 }
<span class="p_del">-</span>
<span class="p_add">+EXPORT_SYMBOL(flush_dcache_page);</span>
 
 /*
  * For now, flush the whole cache. FIXME??
<span class="p_chunk">@@ -188,6 +186,7 @@</span> <span class="p_context"> void local_flush_cache_range(struct vm_area_struct *vma,</span>
 	__flush_invalidate_dcache_all();
 	__invalidate_icache_all();
 }
<span class="p_add">+EXPORT_SYMBOL(local_flush_cache_range);</span>
 
 /* 
  * Remove any entry in the cache for this page. 
<span class="p_chunk">@@ -207,8 +206,9 @@</span> <span class="p_context"> void local_flush_cache_page(struct vm_area_struct *vma, unsigned long address,</span>
 	__flush_invalidate_dcache_page_alias(virt, phys);
 	__invalidate_icache_page_alias(virt, phys);
 }
<span class="p_add">+EXPORT_SYMBOL(local_flush_cache_page);</span>
 
<span class="p_del">-#endif</span>
<span class="p_add">+#endif /* DCACHE_WAY_SIZE &gt; PAGE_SIZE */</span>
 
 void
 update_mmu_cache(struct vm_area_struct * vma, unsigned long addr, pte_t *ptep)
<span class="p_chunk">@@ -225,7 +225,7 @@</span> <span class="p_context"> update_mmu_cache(struct vm_area_struct * vma, unsigned long addr, pte_t *ptep)</span>
 
 	flush_tlb_page(vma, addr);
 
<span class="p_del">-#if (DCACHE_WAY_SIZE &gt; PAGE_SIZE) &amp;&amp; XCHAL_DCACHE_IS_WRITEBACK</span>
<span class="p_add">+#if (DCACHE_WAY_SIZE &gt; PAGE_SIZE)</span>
 
 	if (!PageReserved(page) &amp;&amp; test_bit(PG_arch_1, &amp;page-&gt;flags)) {
 		unsigned long phys = page_to_phys(page);
<span class="p_chunk">@@ -256,7 +256,7 @@</span> <span class="p_context"> update_mmu_cache(struct vm_area_struct * vma, unsigned long addr, pte_t *ptep)</span>
  * flush_dcache_page() on the page.
  */
 
<span class="p_del">-#if (DCACHE_WAY_SIZE &gt; PAGE_SIZE) &amp;&amp; XCHAL_DCACHE_IS_WRITEBACK</span>
<span class="p_add">+#if (DCACHE_WAY_SIZE &gt; PAGE_SIZE)</span>
 
 void copy_to_user_page(struct vm_area_struct *vma, struct page *page,
 		unsigned long vaddr, void *dst, const void *src,
<span class="p_header">diff --git a/block/blk-mq.c b/block/blk-mq.c</span>
<span class="p_header">index 7353e0080062..2414e0cd3a02 100644</span>
<span class="p_header">--- a/block/blk-mq.c</span>
<span class="p_header">+++ b/block/blk-mq.c</span>
<span class="p_chunk">@@ -620,8 +620,8 @@</span> <span class="p_context"> EXPORT_SYMBOL(blk_mq_kick_requeue_list);</span>
 void blk_mq_delay_kick_requeue_list(struct request_queue *q,
 				    unsigned long msecs)
 {
<span class="p_del">-	kblockd_schedule_delayed_work(&amp;q-&gt;requeue_work,</span>
<span class="p_del">-				      msecs_to_jiffies(msecs));</span>
<span class="p_add">+	kblockd_mod_delayed_work_on(WORK_CPU_UNBOUND, &amp;q-&gt;requeue_work,</span>
<span class="p_add">+				    msecs_to_jiffies(msecs));</span>
 }
 EXPORT_SYMBOL(blk_mq_delay_kick_requeue_list);
 
<span class="p_header">diff --git a/drivers/base/firmware_class.c b/drivers/base/firmware_class.c</span>
<span class="p_header">index ac350c518e0c..31c0586d9b13 100644</span>
<span class="p_header">--- a/drivers/base/firmware_class.c</span>
<span class="p_header">+++ b/drivers/base/firmware_class.c</span>
<span class="p_chunk">@@ -30,7 +30,6 @@</span> <span class="p_context"></span>
 #include &lt;linux/syscore_ops.h&gt;
 #include &lt;linux/reboot.h&gt;
 #include &lt;linux/security.h&gt;
<span class="p_del">-#include &lt;linux/swait.h&gt;</span>
 
 #include &lt;generated/utsrelease.h&gt;
 
<span class="p_chunk">@@ -112,13 +111,13 @@</span> <span class="p_context"> static inline long firmware_loading_timeout(void)</span>
  * state of the firmware loading.
  */
 struct fw_state {
<span class="p_del">-	struct swait_queue_head wq;</span>
<span class="p_add">+	struct completion completion;</span>
 	enum fw_status status;
 };
 
 static void fw_state_init(struct fw_state *fw_st)
 {
<span class="p_del">-	init_swait_queue_head(&amp;fw_st-&gt;wq);</span>
<span class="p_add">+	init_completion(&amp;fw_st-&gt;completion);</span>
 	fw_st-&gt;status = FW_STATUS_UNKNOWN;
 }
 
<span class="p_chunk">@@ -131,9 +130,7 @@</span> <span class="p_context"> static int __fw_state_wait_common(struct fw_state *fw_st, long timeout)</span>
 {
 	long ret;
 
<span class="p_del">-	ret = swait_event_interruptible_timeout(fw_st-&gt;wq,</span>
<span class="p_del">-				__fw_state_is_done(READ_ONCE(fw_st-&gt;status)),</span>
<span class="p_del">-				timeout);</span>
<span class="p_add">+	ret = wait_for_completion_killable_timeout(&amp;fw_st-&gt;completion, timeout);</span>
 	if (ret != 0 &amp;&amp; fw_st-&gt;status == FW_STATUS_ABORTED)
 		return -ENOENT;
 	if (!ret)
<span class="p_chunk">@@ -148,35 +145,34 @@</span> <span class="p_context"> static void __fw_state_set(struct fw_state *fw_st,</span>
 	WRITE_ONCE(fw_st-&gt;status, status);
 
 	if (status == FW_STATUS_DONE || status == FW_STATUS_ABORTED)
<span class="p_del">-		swake_up(&amp;fw_st-&gt;wq);</span>
<span class="p_add">+		complete_all(&amp;fw_st-&gt;completion);</span>
 }
 
 #define fw_state_start(fw_st)					\
 	__fw_state_set(fw_st, FW_STATUS_LOADING)
 #define fw_state_done(fw_st)					\
 	__fw_state_set(fw_st, FW_STATUS_DONE)
<span class="p_add">+#define fw_state_aborted(fw_st)					\</span>
<span class="p_add">+	__fw_state_set(fw_st, FW_STATUS_ABORTED)</span>
 #define fw_state_wait(fw_st)					\
 	__fw_state_wait_common(fw_st, MAX_SCHEDULE_TIMEOUT)
 
<span class="p_del">-#ifndef CONFIG_FW_LOADER_USER_HELPER</span>
<span class="p_del">-</span>
<span class="p_del">-#define fw_state_is_aborted(fw_st)	false</span>
<span class="p_del">-</span>
<span class="p_del">-#else /* CONFIG_FW_LOADER_USER_HELPER */</span>
<span class="p_del">-</span>
 static int __fw_state_check(struct fw_state *fw_st, enum fw_status status)
 {
 	return fw_st-&gt;status == status;
 }
 
<span class="p_add">+#define fw_state_is_aborted(fw_st)				\</span>
<span class="p_add">+	__fw_state_check(fw_st, FW_STATUS_ABORTED)</span>
<span class="p_add">+</span>
<span class="p_add">+#ifdef CONFIG_FW_LOADER_USER_HELPER</span>
<span class="p_add">+</span>
 #define fw_state_aborted(fw_st)					\
 	__fw_state_set(fw_st, FW_STATUS_ABORTED)
 #define fw_state_is_done(fw_st)					\
 	__fw_state_check(fw_st, FW_STATUS_DONE)
 #define fw_state_is_loading(fw_st)				\
 	__fw_state_check(fw_st, FW_STATUS_LOADING)
<span class="p_del">-#define fw_state_is_aborted(fw_st)				\</span>
<span class="p_del">-	__fw_state_check(fw_st, FW_STATUS_ABORTED)</span>
 #define fw_state_wait_timeout(fw_st, timeout)			\
 	__fw_state_wait_common(fw_st, timeout)
 
<span class="p_chunk">@@ -1163,6 +1159,28 @@</span> <span class="p_context"> static int assign_firmware_buf(struct firmware *fw, struct device *device,</span>
 	return 0;
 }
 
<span class="p_add">+/*</span>
<span class="p_add">+ * Batched requests need only one wake, we need to do this step last due to the</span>
<span class="p_add">+ * fallback mechanism. The buf is protected with kref_get(), and it won&#39;t be</span>
<span class="p_add">+ * released until the last user calls release_firmware().</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * Failed batched requests are possible as well, in such cases we just share</span>
<span class="p_add">+ * the struct firmware_buf and won&#39;t release it until all requests are woken</span>
<span class="p_add">+ * and have gone through this same path.</span>
<span class="p_add">+ */</span>
<span class="p_add">+static void fw_abort_batch_reqs(struct firmware *fw)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct firmware_buf *buf;</span>
<span class="p_add">+</span>
<span class="p_add">+	/* Loaded directly? */</span>
<span class="p_add">+	if (!fw || !fw-&gt;priv)</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	buf = fw-&gt;priv;</span>
<span class="p_add">+	if (!fw_state_is_aborted(&amp;buf-&gt;fw_st))</span>
<span class="p_add">+		fw_state_aborted(&amp;buf-&gt;fw_st);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 /* called from request_firmware() and request_firmware_work_func() */
 static int
 _request_firmware(const struct firmware **firmware_p, const char *name,
<span class="p_chunk">@@ -1224,6 +1242,7 @@</span> <span class="p_context"> _request_firmware(const struct firmware **firmware_p, const char *name,</span>
 
  out:
 	if (ret &lt; 0) {
<span class="p_add">+		fw_abort_batch_reqs(fw);</span>
 		release_firmware(fw);
 		fw = NULL;
 	}
<span class="p_header">diff --git a/drivers/gpu/drm/bridge/tc358767.c b/drivers/gpu/drm/bridge/tc358767.c</span>
<span class="p_header">index 5c26488e7a2d..0529e500c534 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/bridge/tc358767.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/bridge/tc358767.c</span>
<span class="p_chunk">@@ -1255,7 +1255,7 @@</span> <span class="p_context"> static int tc_probe(struct i2c_client *client, const struct i2c_device_id *id)</span>
 
 	/* port@2 is the output port */
 	ret = drm_of_find_panel_or_bridge(dev-&gt;of_node, 2, 0, &amp;tc-&gt;panel, NULL);
<span class="p_del">-	if (ret)</span>
<span class="p_add">+	if (ret &amp;&amp; ret != -ENODEV)</span>
 		return ret;
 
 	/* Shut down GPIO is optional */
<span class="p_header">diff --git a/drivers/gpu/drm/etnaviv/etnaviv_gem_submit.c b/drivers/gpu/drm/etnaviv/etnaviv_gem_submit.c</span>
<span class="p_header">index 1013765274da..0ceed22187df 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/etnaviv/etnaviv_gem_submit.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/etnaviv/etnaviv_gem_submit.c</span>
<span class="p_chunk">@@ -270,8 +270,8 @@</span> <span class="p_context"> static int submit_reloc(struct etnaviv_gem_submit *submit, void *stream,</span>
 		if (ret)
 			return ret;
 
<span class="p_del">-		if (r-&gt;reloc_offset &gt;= bo-&gt;obj-&gt;base.size - sizeof(*ptr)) {</span>
<span class="p_del">-			DRM_ERROR(&quot;relocation %u outside object&quot;, i);</span>
<span class="p_add">+		if (r-&gt;reloc_offset &gt; bo-&gt;obj-&gt;base.size - sizeof(*ptr)) {</span>
<span class="p_add">+			DRM_ERROR(&quot;relocation %u outside object\n&quot;, i);</span>
 			return -EINVAL;
 		}
 
<span class="p_header">diff --git a/drivers/gpu/drm/i915/intel_color.c b/drivers/gpu/drm/i915/intel_color.c</span>
<span class="p_header">index 306c6b06b330..17c4ae7e4e7c 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/i915/intel_color.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/i915/intel_color.c</span>
<span class="p_chunk">@@ -398,6 +398,7 @@</span> <span class="p_context"> static void bdw_load_gamma_lut(struct drm_crtc_state *state, u32 offset)</span>
 		}
 
 		/* Program the max register to clamp values &gt; 1.0. */
<span class="p_add">+		i = lut_size - 1;</span>
 		I915_WRITE(PREC_PAL_GC_MAX(pipe, 0),
 			   drm_color_lut_extract(lut[i].red, 16));
 		I915_WRITE(PREC_PAL_GC_MAX(pipe, 1),
<span class="p_header">diff --git a/drivers/i2c/busses/i2c-designware-platdrv.c b/drivers/i2c/busses/i2c-designware-platdrv.c</span>
<span class="p_header">index d1263b82d646..0703da1d946a 100644</span>
<span class="p_header">--- a/drivers/i2c/busses/i2c-designware-platdrv.c</span>
<span class="p_header">+++ b/drivers/i2c/busses/i2c-designware-platdrv.c</span>
<span class="p_chunk">@@ -254,6 +254,9 @@</span> <span class="p_context"> static int dw_i2c_plat_probe(struct platform_device *pdev)</span>
 	}
 
 	acpi_speed = i2c_acpi_find_bus_speed(&amp;pdev-&gt;dev);
<span class="p_add">+	/* Some broken DSTDs use 1MiHz instead of 1MHz */</span>
<span class="p_add">+	if (acpi_speed == 1048576)</span>
<span class="p_add">+		acpi_speed = 1000000;</span>
 	/*
 	 * Find bus speed from the &quot;clock-frequency&quot; device property, ACPI
 	 * or by using fast mode if neither is set.
<span class="p_header">diff --git a/drivers/iio/accel/bmc150-accel-core.c b/drivers/iio/accel/bmc150-accel-core.c</span>
<span class="p_header">index 6b5d3be283c4..807299dd45eb 100644</span>
<span class="p_header">--- a/drivers/iio/accel/bmc150-accel-core.c</span>
<span class="p_header">+++ b/drivers/iio/accel/bmc150-accel-core.c</span>
<span class="p_chunk">@@ -193,7 +193,6 @@</span> <span class="p_context"> struct bmc150_accel_data {</span>
 	struct regmap *regmap;
 	int irq;
 	struct bmc150_accel_interrupt interrupts[BMC150_ACCEL_INTERRUPTS];
<span class="p_del">-	atomic_t active_intr;</span>
 	struct bmc150_accel_trigger triggers[BMC150_ACCEL_TRIGGERS];
 	struct mutex mutex;
 	u8 fifo_mode, watermark;
<span class="p_chunk">@@ -493,11 +492,6 @@</span> <span class="p_context"> static int bmc150_accel_set_interrupt(struct bmc150_accel_data *data, int i,</span>
 		goto out_fix_power_state;
 	}
 
<span class="p_del">-	if (state)</span>
<span class="p_del">-		atomic_inc(&amp;data-&gt;active_intr);</span>
<span class="p_del">-	else</span>
<span class="p_del">-		atomic_dec(&amp;data-&gt;active_intr);</span>
<span class="p_del">-</span>
 	return 0;
 
 out_fix_power_state:
<span class="p_chunk">@@ -1710,8 +1704,7 @@</span> <span class="p_context"> static int bmc150_accel_resume(struct device *dev)</span>
 	struct bmc150_accel_data *data = iio_priv(indio_dev);
 
 	mutex_lock(&amp;data-&gt;mutex);
<span class="p_del">-	if (atomic_read(&amp;data-&gt;active_intr))</span>
<span class="p_del">-		bmc150_accel_set_mode(data, BMC150_ACCEL_SLEEP_MODE_NORMAL, 0);</span>
<span class="p_add">+	bmc150_accel_set_mode(data, BMC150_ACCEL_SLEEP_MODE_NORMAL, 0);</span>
 	bmc150_accel_fifo_set_mode(data);
 	mutex_unlock(&amp;data-&gt;mutex);
 
<span class="p_header">diff --git a/drivers/iio/accel/st_accel_core.c b/drivers/iio/accel/st_accel_core.c</span>
<span class="p_header">index 784670e2736b..2ee3ae11eb2a 100644</span>
<span class="p_header">--- a/drivers/iio/accel/st_accel_core.c</span>
<span class="p_header">+++ b/drivers/iio/accel/st_accel_core.c</span>
<span class="p_chunk">@@ -166,6 +166,10 @@</span> <span class="p_context"> static const struct st_sensor_settings st_accel_sensors_settings[] = {</span>
 			.mask_ihl = 0x02,
 			.addr_stat_drdy = ST_SENSORS_DEFAULT_STAT_ADDR,
 		},
<span class="p_add">+		.sim = {</span>
<span class="p_add">+			.addr = 0x23,</span>
<span class="p_add">+			.value = BIT(0),</span>
<span class="p_add">+		},</span>
 		.multi_read_bit = true,
 		.bootime = 2,
 	},
<span class="p_chunk">@@ -234,6 +238,10 @@</span> <span class="p_context"> static const struct st_sensor_settings st_accel_sensors_settings[] = {</span>
 			.mask_od = 0x40,
 			.addr_stat_drdy = ST_SENSORS_DEFAULT_STAT_ADDR,
 		},
<span class="p_add">+		.sim = {</span>
<span class="p_add">+			.addr = 0x23,</span>
<span class="p_add">+			.value = BIT(0),</span>
<span class="p_add">+		},</span>
 		.multi_read_bit = true,
 		.bootime = 2,
 	},
<span class="p_chunk">@@ -316,6 +324,10 @@</span> <span class="p_context"> static const struct st_sensor_settings st_accel_sensors_settings[] = {</span>
 				.en_mask = 0x08,
 			},
 		},
<span class="p_add">+		.sim = {</span>
<span class="p_add">+			.addr = 0x24,</span>
<span class="p_add">+			.value = BIT(0),</span>
<span class="p_add">+		},</span>
 		.multi_read_bit = false,
 		.bootime = 2,
 	},
<span class="p_chunk">@@ -379,6 +391,10 @@</span> <span class="p_context"> static const struct st_sensor_settings st_accel_sensors_settings[] = {</span>
 			.mask_int1 = 0x04,
 			.addr_stat_drdy = ST_SENSORS_DEFAULT_STAT_ADDR,
 		},
<span class="p_add">+		.sim = {</span>
<span class="p_add">+			.addr = 0x21,</span>
<span class="p_add">+			.value = BIT(1),</span>
<span class="p_add">+		},</span>
 		.multi_read_bit = true,
 		.bootime = 2, /* guess */
 	},
<span class="p_chunk">@@ -437,6 +453,10 @@</span> <span class="p_context"> static const struct st_sensor_settings st_accel_sensors_settings[] = {</span>
 			.mask_od = 0x40,
 			.addr_stat_drdy = ST_SENSORS_DEFAULT_STAT_ADDR,
 		},
<span class="p_add">+		.sim = {</span>
<span class="p_add">+			.addr = 0x21,</span>
<span class="p_add">+			.value = BIT(7),</span>
<span class="p_add">+		},</span>
 		.multi_read_bit = false,
 		.bootime = 2, /* guess */
 	},
<span class="p_chunk">@@ -499,6 +519,10 @@</span> <span class="p_context"> static const struct st_sensor_settings st_accel_sensors_settings[] = {</span>
 			.addr_ihl = 0x22,
 			.mask_ihl = 0x80,
 		},
<span class="p_add">+		.sim = {</span>
<span class="p_add">+			.addr = 0x23,</span>
<span class="p_add">+			.value = BIT(0),</span>
<span class="p_add">+		},</span>
 		.multi_read_bit = true,
 		.bootime = 2,
 	},
<span class="p_chunk">@@ -547,6 +571,10 @@</span> <span class="p_context"> static const struct st_sensor_settings st_accel_sensors_settings[] = {</span>
 			.mask_int1 = 0x04,
 			.addr_stat_drdy = ST_SENSORS_DEFAULT_STAT_ADDR,
 		},
<span class="p_add">+		.sim = {</span>
<span class="p_add">+			.addr = 0x21,</span>
<span class="p_add">+			.value = BIT(1),</span>
<span class="p_add">+		},</span>
 		.multi_read_bit = false,
 		.bootime = 2,
 	},
<span class="p_chunk">@@ -614,6 +642,10 @@</span> <span class="p_context"> static const struct st_sensor_settings st_accel_sensors_settings[] = {</span>
 			.mask_ihl = 0x02,
 			.addr_stat_drdy = ST_SENSORS_DEFAULT_STAT_ADDR,
 		},
<span class="p_add">+		.sim = {</span>
<span class="p_add">+			.addr = 0x23,</span>
<span class="p_add">+			.value = BIT(0),</span>
<span class="p_add">+		},</span>
 		.multi_read_bit = true,
 		.bootime = 2,
 	},
<span class="p_header">diff --git a/drivers/iio/adc/aspeed_adc.c b/drivers/iio/adc/aspeed_adc.c</span>
<span class="p_header">index 62670cbfa2bb..87fd6e0ce5ee 100644</span>
<span class="p_header">--- a/drivers/iio/adc/aspeed_adc.c</span>
<span class="p_header">+++ b/drivers/iio/adc/aspeed_adc.c</span>
<span class="p_chunk">@@ -22,6 +22,7 @@</span> <span class="p_context"></span>
 
 #include &lt;linux/iio/iio.h&gt;
 #include &lt;linux/iio/driver.h&gt;
<span class="p_add">+#include &lt;linux/iopoll.h&gt;</span>
 
 #define ASPEED_RESOLUTION_BITS		10
 #define ASPEED_CLOCKS_PER_SAMPLE	12
<span class="p_chunk">@@ -38,11 +39,17 @@</span> <span class="p_context"></span>
 
 #define ASPEED_ENGINE_ENABLE		BIT(0)
 
<span class="p_add">+#define ASPEED_ADC_CTRL_INIT_RDY	BIT(8)</span>
<span class="p_add">+</span>
<span class="p_add">+#define ASPEED_ADC_INIT_POLLING_TIME	500</span>
<span class="p_add">+#define ASPEED_ADC_INIT_TIMEOUT		500000</span>
<span class="p_add">+</span>
 struct aspeed_adc_model_data {
 	const char *model_name;
 	unsigned int min_sampling_rate;	// Hz
 	unsigned int max_sampling_rate;	// Hz
 	unsigned int vref_voltage;	// mV
<span class="p_add">+	bool wait_init_sequence;</span>
 };
 
 struct aspeed_adc_data {
<span class="p_chunk">@@ -211,6 +218,24 @@</span> <span class="p_context"> static int aspeed_adc_probe(struct platform_device *pdev)</span>
 		goto scaler_error;
 	}
 
<span class="p_add">+	model_data = of_device_get_match_data(&amp;pdev-&gt;dev);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (model_data-&gt;wait_init_sequence) {</span>
<span class="p_add">+		/* Enable engine in normal mode. */</span>
<span class="p_add">+		writel(ASPEED_OPERATION_MODE_NORMAL | ASPEED_ENGINE_ENABLE,</span>
<span class="p_add">+		       data-&gt;base + ASPEED_REG_ENGINE_CONTROL);</span>
<span class="p_add">+</span>
<span class="p_add">+		/* Wait for initial sequence complete. */</span>
<span class="p_add">+		ret = readl_poll_timeout(data-&gt;base + ASPEED_REG_ENGINE_CONTROL,</span>
<span class="p_add">+					 adc_engine_control_reg_val,</span>
<span class="p_add">+					 adc_engine_control_reg_val &amp;</span>
<span class="p_add">+					 ASPEED_ADC_CTRL_INIT_RDY,</span>
<span class="p_add">+					 ASPEED_ADC_INIT_POLLING_TIME,</span>
<span class="p_add">+					 ASPEED_ADC_INIT_TIMEOUT);</span>
<span class="p_add">+		if (ret)</span>
<span class="p_add">+			goto scaler_error;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	/* Start all channels in normal mode. */
 	clk_prepare_enable(data-&gt;clk_scaler-&gt;clk);
 	adc_engine_control_reg_val = GENMASK(31, 16) |
<span class="p_chunk">@@ -270,6 +295,7 @@</span> <span class="p_context"> static const struct aspeed_adc_model_data ast2500_model_data = {</span>
 	.vref_voltage = 1800, // mV
 	.min_sampling_rate = 1,
 	.max_sampling_rate = 1000000,
<span class="p_add">+	.wait_init_sequence = true,</span>
 };
 
 static const struct of_device_id aspeed_adc_matches[] = {
<span class="p_header">diff --git a/drivers/iio/adc/axp288_adc.c b/drivers/iio/adc/axp288_adc.c</span>
<span class="p_header">index 64799ad7ebad..7fd24949c0c1 100644</span>
<span class="p_header">--- a/drivers/iio/adc/axp288_adc.c</span>
<span class="p_header">+++ b/drivers/iio/adc/axp288_adc.c</span>
<span class="p_chunk">@@ -28,6 +28,8 @@</span> <span class="p_context"></span>
 #include &lt;linux/iio/driver.h&gt;
 
 #define AXP288_ADC_EN_MASK		0xF1
<span class="p_add">+#define AXP288_ADC_TS_PIN_GPADC		0xF2</span>
<span class="p_add">+#define AXP288_ADC_TS_PIN_ON		0xF3</span>
 
 enum axp288_adc_id {
 	AXP288_ADC_TS,
<span class="p_chunk">@@ -121,6 +123,16 @@</span> <span class="p_context"> static int axp288_adc_read_channel(int *val, unsigned long address,</span>
 	return IIO_VAL_INT;
 }
 
<span class="p_add">+static int axp288_adc_set_ts(struct regmap *regmap, unsigned int mode,</span>
<span class="p_add">+				unsigned long address)</span>
<span class="p_add">+{</span>
<span class="p_add">+	/* channels other than GPADC do not need to switch TS pin */</span>
<span class="p_add">+	if (address != AXP288_GP_ADC_H)</span>
<span class="p_add">+		return 0;</span>
<span class="p_add">+</span>
<span class="p_add">+	return regmap_write(regmap, AXP288_ADC_TS_PIN_CTRL, mode);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static int axp288_adc_read_raw(struct iio_dev *indio_dev,
 			struct iio_chan_spec const *chan,
 			int *val, int *val2, long mask)
<span class="p_chunk">@@ -131,7 +143,16 @@</span> <span class="p_context"> static int axp288_adc_read_raw(struct iio_dev *indio_dev,</span>
 	mutex_lock(&amp;indio_dev-&gt;mlock);
 	switch (mask) {
 	case IIO_CHAN_INFO_RAW:
<span class="p_add">+		if (axp288_adc_set_ts(info-&gt;regmap, AXP288_ADC_TS_PIN_GPADC,</span>
<span class="p_add">+					chan-&gt;address)) {</span>
<span class="p_add">+			dev_err(&amp;indio_dev-&gt;dev, &quot;GPADC mode\n&quot;);</span>
<span class="p_add">+			ret = -EINVAL;</span>
<span class="p_add">+			break;</span>
<span class="p_add">+		}</span>
 		ret = axp288_adc_read_channel(val, chan-&gt;address, info-&gt;regmap);
<span class="p_add">+		if (axp288_adc_set_ts(info-&gt;regmap, AXP288_ADC_TS_PIN_ON,</span>
<span class="p_add">+						chan-&gt;address))</span>
<span class="p_add">+			dev_err(&amp;indio_dev-&gt;dev, &quot;TS pin restore\n&quot;);</span>
 		break;
 	default:
 		ret = -EINVAL;
<span class="p_chunk">@@ -141,6 +162,15 @@</span> <span class="p_context"> static int axp288_adc_read_raw(struct iio_dev *indio_dev,</span>
 	return ret;
 }
 
<span class="p_add">+static int axp288_adc_set_state(struct regmap *regmap)</span>
<span class="p_add">+{</span>
<span class="p_add">+	/* ADC should be always enabled for internal FG to function */</span>
<span class="p_add">+	if (regmap_write(regmap, AXP288_ADC_TS_PIN_CTRL, AXP288_ADC_TS_PIN_ON))</span>
<span class="p_add">+		return -EIO;</span>
<span class="p_add">+</span>
<span class="p_add">+	return regmap_write(regmap, AXP20X_ADC_EN1, AXP288_ADC_EN_MASK);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static const struct iio_info axp288_adc_iio_info = {
 	.read_raw = &amp;axp288_adc_read_raw,
 	.driver_module = THIS_MODULE,
<span class="p_chunk">@@ -169,7 +199,7 @@</span> <span class="p_context"> static int axp288_adc_probe(struct platform_device *pdev)</span>
 	 * Set ADC to enabled state at all time, including system suspend.
 	 * otherwise internal fuel gauge functionality may be affected.
 	 */
<span class="p_del">-	ret = regmap_write(info-&gt;regmap, AXP20X_ADC_EN1, AXP288_ADC_EN_MASK);</span>
<span class="p_add">+	ret = axp288_adc_set_state(axp20x-&gt;regmap);</span>
 	if (ret) {
 		dev_err(&amp;pdev-&gt;dev, &quot;unable to enable ADC device\n&quot;);
 		return ret;
<span class="p_header">diff --git a/drivers/iio/adc/vf610_adc.c b/drivers/iio/adc/vf610_adc.c</span>
<span class="p_header">index 01fc76f7d660..c168e0db329a 100644</span>
<span class="p_header">--- a/drivers/iio/adc/vf610_adc.c</span>
<span class="p_header">+++ b/drivers/iio/adc/vf610_adc.c</span>
<span class="p_chunk">@@ -77,7 +77,7 @@</span> <span class="p_context"></span>
 #define VF610_ADC_ADSTS_MASK		0x300
 #define VF610_ADC_ADLPC_EN		0x80
 #define VF610_ADC_ADHSC_EN		0x400
<span class="p_del">-#define VF610_ADC_REFSEL_VALT		0x100</span>
<span class="p_add">+#define VF610_ADC_REFSEL_VALT		0x800</span>
 #define VF610_ADC_REFSEL_VBG		0x1000
 #define VF610_ADC_ADTRG_HARD		0x2000
 #define VF610_ADC_AVGS_8		0x4000
<span class="p_header">diff --git a/drivers/iio/common/st_sensors/st_sensors_core.c b/drivers/iio/common/st_sensors/st_sensors_core.c</span>
<span class="p_header">index 79c8c7cd70d5..6e6a1ecc99dd 100644</span>
<span class="p_header">--- a/drivers/iio/common/st_sensors/st_sensors_core.c</span>
<span class="p_header">+++ b/drivers/iio/common/st_sensors/st_sensors_core.c</span>
<span class="p_chunk">@@ -550,6 +550,31 @@</span> <span class="p_context"> int st_sensors_read_info_raw(struct iio_dev *indio_dev,</span>
 }
 EXPORT_SYMBOL(st_sensors_read_info_raw);
 
<span class="p_add">+static int st_sensors_init_interface_mode(struct iio_dev *indio_dev,</span>
<span class="p_add">+			const struct st_sensor_settings *sensor_settings)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct st_sensor_data *sdata = iio_priv(indio_dev);</span>
<span class="p_add">+	struct device_node *np = sdata-&gt;dev-&gt;of_node;</span>
<span class="p_add">+	struct st_sensors_platform_data *pdata;</span>
<span class="p_add">+</span>
<span class="p_add">+	pdata = (struct st_sensors_platform_data *)sdata-&gt;dev-&gt;platform_data;</span>
<span class="p_add">+	if (((np &amp;&amp; of_property_read_bool(np, &quot;spi-3wire&quot;)) ||</span>
<span class="p_add">+	     (pdata &amp;&amp; pdata-&gt;spi_3wire)) &amp;&amp; sensor_settings-&gt;sim.addr) {</span>
<span class="p_add">+		int err;</span>
<span class="p_add">+</span>
<span class="p_add">+		err = sdata-&gt;tf-&gt;write_byte(&amp;sdata-&gt;tb, sdata-&gt;dev,</span>
<span class="p_add">+					    sensor_settings-&gt;sim.addr,</span>
<span class="p_add">+					    sensor_settings-&gt;sim.value);</span>
<span class="p_add">+		if (err &lt; 0) {</span>
<span class="p_add">+			dev_err(&amp;indio_dev-&gt;dev,</span>
<span class="p_add">+				&quot;failed to init interface mode\n&quot;);</span>
<span class="p_add">+			return err;</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 int st_sensors_check_device_support(struct iio_dev *indio_dev,
 			int num_sensors_list,
 			const struct st_sensor_settings *sensor_settings)
<span class="p_chunk">@@ -574,6 +599,10 @@</span> <span class="p_context"> int st_sensors_check_device_support(struct iio_dev *indio_dev,</span>
 		return -ENODEV;
 	}
 
<span class="p_add">+	err = st_sensors_init_interface_mode(indio_dev, &amp;sensor_settings[i]);</span>
<span class="p_add">+	if (err &lt; 0)</span>
<span class="p_add">+		return err;</span>
<span class="p_add">+</span>
 	if (sensor_settings[i].wai_addr) {
 		err = sdata-&gt;tf-&gt;read_byte(&amp;sdata-&gt;tb, sdata-&gt;dev,
 					   sensor_settings[i].wai_addr, &amp;wai);
<span class="p_header">diff --git a/drivers/iio/light/tsl2563.c b/drivers/iio/light/tsl2563.c</span>
<span class="p_header">index e7d4ea75e007..7599693f7fe9 100644</span>
<span class="p_header">--- a/drivers/iio/light/tsl2563.c</span>
<span class="p_header">+++ b/drivers/iio/light/tsl2563.c</span>
<span class="p_chunk">@@ -626,7 +626,7 @@</span> <span class="p_context"> static irqreturn_t tsl2563_event_handler(int irq, void *private)</span>
 	struct tsl2563_chip *chip = iio_priv(dev_info);
 
 	iio_push_event(dev_info,
<span class="p_del">-		       IIO_UNMOD_EVENT_CODE(IIO_LIGHT,</span>
<span class="p_add">+		       IIO_UNMOD_EVENT_CODE(IIO_INTENSITY,</span>
 					    0,
 					    IIO_EV_TYPE_THRESH,
 					    IIO_EV_DIR_EITHER),
<span class="p_header">diff --git a/drivers/iio/pressure/st_pressure_core.c b/drivers/iio/pressure/st_pressure_core.c</span>
<span class="p_header">index fd0edca0e656..99448012b47f 100644</span>
<span class="p_header">--- a/drivers/iio/pressure/st_pressure_core.c</span>
<span class="p_header">+++ b/drivers/iio/pressure/st_pressure_core.c</span>
<span class="p_chunk">@@ -456,7 +456,7 @@</span> <span class="p_context"> static const struct st_sensor_settings st_press_sensors_settings[] = {</span>
 			.mask_od = 0x40,
 			.addr_stat_drdy = ST_SENSORS_DEFAULT_STAT_ADDR,
 		},
<span class="p_del">-		.multi_read_bit = true,</span>
<span class="p_add">+		.multi_read_bit = false,</span>
 		.bootime = 2,
 	},
 };
<span class="p_header">diff --git a/drivers/mmc/core/mmc.c b/drivers/mmc/core/mmc.c</span>
<span class="p_header">index 2c87dede5841..f451094acb8d 100644</span>
<span class="p_header">--- a/drivers/mmc/core/mmc.c</span>
<span class="p_header">+++ b/drivers/mmc/core/mmc.c</span>
<span class="p_chunk">@@ -1288,7 +1288,7 @@</span> <span class="p_context"> int mmc_hs400_to_hs200(struct mmc_card *card)</span>
 static int mmc_select_hs400es(struct mmc_card *card)
 {
 	struct mmc_host *host = card-&gt;host;
<span class="p_del">-	int err = 0;</span>
<span class="p_add">+	int err = -EINVAL;</span>
 	u8 val;
 
 	if (!(host-&gt;caps &amp; MMC_CAP_8_BIT_DATA)) {
<span class="p_header">diff --git a/drivers/mtd/nand/atmel/pmecc.c b/drivers/mtd/nand/atmel/pmecc.c</span>
<span class="p_header">index 55a8ee5306ea..8c210a5776bc 100644</span>
<span class="p_header">--- a/drivers/mtd/nand/atmel/pmecc.c</span>
<span class="p_header">+++ b/drivers/mtd/nand/atmel/pmecc.c</span>
<span class="p_chunk">@@ -945,6 +945,7 @@</span> <span class="p_context"> struct atmel_pmecc *devm_atmel_pmecc_get(struct device *userdev)</span>
 		 */
 		struct platform_device *pdev = to_platform_device(userdev);
 		const struct atmel_pmecc_caps *caps;
<span class="p_add">+		const struct of_device_id *match;</span>
 
 		/* No PMECC engine available. */
 		if (!of_property_read_bool(userdev-&gt;of_node,
<span class="p_chunk">@@ -953,21 +954,11 @@</span> <span class="p_context"> struct atmel_pmecc *devm_atmel_pmecc_get(struct device *userdev)</span>
 
 		caps = &amp;at91sam9g45_caps;
 
<span class="p_del">-		/*</span>
<span class="p_del">-		 * Try to find the NFC subnode and extract the associated caps</span>
<span class="p_del">-		 * from there.</span>
<span class="p_del">-		 */</span>
<span class="p_del">-		np = of_find_compatible_node(userdev-&gt;of_node, NULL,</span>
<span class="p_del">-					     &quot;atmel,sama5d3-nfc&quot;);</span>
<span class="p_del">-		if (np) {</span>
<span class="p_del">-			const struct of_device_id *match;</span>
<span class="p_del">-</span>
<span class="p_del">-			match = of_match_node(atmel_pmecc_legacy_match, np);</span>
<span class="p_del">-			if (match &amp;&amp; match-&gt;data)</span>
<span class="p_del">-				caps = match-&gt;data;</span>
<span class="p_del">-</span>
<span class="p_del">-			of_node_put(np);</span>
<span class="p_del">-		}</span>
<span class="p_add">+		/* Find the caps associated to the NAND dev node. */</span>
<span class="p_add">+		match = of_match_node(atmel_pmecc_legacy_match,</span>
<span class="p_add">+				      userdev-&gt;of_node);</span>
<span class="p_add">+		if (match &amp;&amp; match-&gt;data)</span>
<span class="p_add">+			caps = match-&gt;data;</span>
 
 		pmecc = atmel_pmecc_create(pdev, caps, 1, 2);
 	}
<span class="p_header">diff --git a/drivers/mtd/nand/nand_base.c b/drivers/mtd/nand/nand_base.c</span>
<span class="p_header">index b1dd12729f19..6f9771e82476 100644</span>
<span class="p_header">--- a/drivers/mtd/nand/nand_base.c</span>
<span class="p_header">+++ b/drivers/mtd/nand/nand_base.c</span>
<span class="p_chunk">@@ -65,8 +65,14 @@</span> <span class="p_context"> static int nand_ooblayout_ecc_sp(struct mtd_info *mtd, int section,</span>
 
 	if (!section) {
 		oobregion-&gt;offset = 0;
<span class="p_del">-		oobregion-&gt;length = 4;</span>
<span class="p_add">+		if (mtd-&gt;oobsize == 16)</span>
<span class="p_add">+			oobregion-&gt;length = 4;</span>
<span class="p_add">+		else</span>
<span class="p_add">+			oobregion-&gt;length = 3;</span>
 	} else {
<span class="p_add">+		if (mtd-&gt;oobsize == 8)</span>
<span class="p_add">+			return -ERANGE;</span>
<span class="p_add">+</span>
 		oobregion-&gt;offset = 6;
 		oobregion-&gt;length = ecc-&gt;total - 4;
 	}
<span class="p_chunk">@@ -1102,7 +1108,9 @@</span> <span class="p_context"> static int nand_setup_data_interface(struct nand_chip *chip)</span>
 	 * Ensure the timing mode has been changed on the chip side
 	 * before changing timings on the controller side.
 	 */
<span class="p_del">-	if (chip-&gt;onfi_version) {</span>
<span class="p_add">+	if (chip-&gt;onfi_version &amp;&amp;</span>
<span class="p_add">+	    (le16_to_cpu(chip-&gt;onfi_params.opt_cmd) &amp;</span>
<span class="p_add">+	     ONFI_OPT_CMD_SET_GET_FEATURES)) {</span>
 		u8 tmode_param[ONFI_SUBFEATURE_PARAM_LEN] = {
 			chip-&gt;onfi_timing_mode_default,
 		};
<span class="p_header">diff --git a/drivers/mtd/nand/nand_timings.c b/drivers/mtd/nand/nand_timings.c</span>
<span class="p_header">index f06312df3669..7e36d7d13c26 100644</span>
<span class="p_header">--- a/drivers/mtd/nand/nand_timings.c</span>
<span class="p_header">+++ b/drivers/mtd/nand/nand_timings.c</span>
<span class="p_chunk">@@ -311,9 +311,9 @@</span> <span class="p_context"> int onfi_init_data_interface(struct nand_chip *chip,</span>
 		struct nand_sdr_timings *timings = &amp;iface-&gt;timings.sdr;
 
 		/* microseconds -&gt; picoseconds */
<span class="p_del">-		timings-&gt;tPROG_max = 1000000UL * le16_to_cpu(params-&gt;t_prog);</span>
<span class="p_del">-		timings-&gt;tBERS_max = 1000000UL * le16_to_cpu(params-&gt;t_bers);</span>
<span class="p_del">-		timings-&gt;tR_max = 1000000UL * le16_to_cpu(params-&gt;t_r);</span>
<span class="p_add">+		timings-&gt;tPROG_max = 1000000ULL * le16_to_cpu(params-&gt;t_prog);</span>
<span class="p_add">+		timings-&gt;tBERS_max = 1000000ULL * le16_to_cpu(params-&gt;t_bers);</span>
<span class="p_add">+		timings-&gt;tR_max = 1000000ULL * le16_to_cpu(params-&gt;t_r);</span>
 
 		/* nanoseconds -&gt; picoseconds */
 		timings-&gt;tCCS_min = 1000UL * le16_to_cpu(params-&gt;t_ccs);
<span class="p_header">diff --git a/drivers/pci/pci.c b/drivers/pci/pci.c</span>
<span class="p_header">index 563901cd9c06..9e5483780c97 100644</span>
<span class="p_header">--- a/drivers/pci/pci.c</span>
<span class="p_header">+++ b/drivers/pci/pci.c</span>
<span class="p_chunk">@@ -4069,40 +4069,6 @@</span> <span class="p_context"> static int pci_dev_reset_slot_function(struct pci_dev *dev, int probe)</span>
 	return pci_reset_hotplug_slot(dev-&gt;slot-&gt;hotplug, probe);
 }
 
<span class="p_del">-static int __pci_dev_reset(struct pci_dev *dev, int probe)</span>
<span class="p_del">-{</span>
<span class="p_del">-	int rc;</span>
<span class="p_del">-</span>
<span class="p_del">-	might_sleep();</span>
<span class="p_del">-</span>
<span class="p_del">-	rc = pci_dev_specific_reset(dev, probe);</span>
<span class="p_del">-	if (rc != -ENOTTY)</span>
<span class="p_del">-		goto done;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (pcie_has_flr(dev)) {</span>
<span class="p_del">-		if (!probe)</span>
<span class="p_del">-			pcie_flr(dev);</span>
<span class="p_del">-		rc = 0;</span>
<span class="p_del">-		goto done;</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	rc = pci_af_flr(dev, probe);</span>
<span class="p_del">-	if (rc != -ENOTTY)</span>
<span class="p_del">-		goto done;</span>
<span class="p_del">-</span>
<span class="p_del">-	rc = pci_pm_reset(dev, probe);</span>
<span class="p_del">-	if (rc != -ENOTTY)</span>
<span class="p_del">-		goto done;</span>
<span class="p_del">-</span>
<span class="p_del">-	rc = pci_dev_reset_slot_function(dev, probe);</span>
<span class="p_del">-	if (rc != -ENOTTY)</span>
<span class="p_del">-		goto done;</span>
<span class="p_del">-</span>
<span class="p_del">-	rc = pci_parent_bus_reset(dev, probe);</span>
<span class="p_del">-done:</span>
<span class="p_del">-	return rc;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static void pci_dev_lock(struct pci_dev *dev)
 {
 	pci_cfg_access_lock(dev);
<span class="p_chunk">@@ -4141,6 +4107,12 @@</span> <span class="p_context"> static void pci_reset_notify(struct pci_dev *dev, bool prepare)</span>
 {
 	const struct pci_error_handlers *err_handler =
 			dev-&gt;driver ? dev-&gt;driver-&gt;err_handler : NULL;
<span class="p_add">+</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * dev-&gt;driver-&gt;err_handler-&gt;reset_notify() is protected against</span>
<span class="p_add">+	 * races with -&gt;remove() by the device lock, which must be held by</span>
<span class="p_add">+	 * the caller.</span>
<span class="p_add">+	 */</span>
 	if (err_handler &amp;&amp; err_handler-&gt;reset_notify)
 		err_handler-&gt;reset_notify(dev, prepare);
 }
<span class="p_chunk">@@ -4173,21 +4145,6 @@</span> <span class="p_context"> static void pci_dev_restore(struct pci_dev *dev)</span>
 	pci_reset_notify(dev, false);
 }
 
<span class="p_del">-static int pci_dev_reset(struct pci_dev *dev, int probe)</span>
<span class="p_del">-{</span>
<span class="p_del">-	int rc;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (!probe)</span>
<span class="p_del">-		pci_dev_lock(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	rc = __pci_dev_reset(dev, probe);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (!probe)</span>
<span class="p_del">-		pci_dev_unlock(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	return rc;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 /**
  * __pci_reset_function - reset a PCI device function
  * @dev: PCI device to reset
<span class="p_chunk">@@ -4207,7 +4164,13 @@</span> <span class="p_context"> static int pci_dev_reset(struct pci_dev *dev, int probe)</span>
  */
 int __pci_reset_function(struct pci_dev *dev)
 {
<span class="p_del">-	return pci_dev_reset(dev, 0);</span>
<span class="p_add">+	int ret;</span>
<span class="p_add">+</span>
<span class="p_add">+	pci_dev_lock(dev);</span>
<span class="p_add">+	ret = __pci_reset_function_locked(dev);</span>
<span class="p_add">+	pci_dev_unlock(dev);</span>
<span class="p_add">+</span>
<span class="p_add">+	return ret;</span>
 }
 EXPORT_SYMBOL_GPL(__pci_reset_function);
 
<span class="p_chunk">@@ -4232,7 +4195,27 @@</span> <span class="p_context"> EXPORT_SYMBOL_GPL(__pci_reset_function);</span>
  */
 int __pci_reset_function_locked(struct pci_dev *dev)
 {
<span class="p_del">-	return __pci_dev_reset(dev, 0);</span>
<span class="p_add">+	int rc;</span>
<span class="p_add">+</span>
<span class="p_add">+	might_sleep();</span>
<span class="p_add">+</span>
<span class="p_add">+	rc = pci_dev_specific_reset(dev, 0);</span>
<span class="p_add">+	if (rc != -ENOTTY)</span>
<span class="p_add">+		return rc;</span>
<span class="p_add">+	if (pcie_has_flr(dev)) {</span>
<span class="p_add">+		pcie_flr(dev);</span>
<span class="p_add">+		return 0;</span>
<span class="p_add">+	}</span>
<span class="p_add">+	rc = pci_af_flr(dev, 0);</span>
<span class="p_add">+	if (rc != -ENOTTY)</span>
<span class="p_add">+		return rc;</span>
<span class="p_add">+	rc = pci_pm_reset(dev, 0);</span>
<span class="p_add">+	if (rc != -ENOTTY)</span>
<span class="p_add">+		return rc;</span>
<span class="p_add">+	rc = pci_dev_reset_slot_function(dev, 0);</span>
<span class="p_add">+	if (rc != -ENOTTY)</span>
<span class="p_add">+		return rc;</span>
<span class="p_add">+	return pci_parent_bus_reset(dev, 0);</span>
 }
 EXPORT_SYMBOL_GPL(__pci_reset_function_locked);
 
<span class="p_chunk">@@ -4249,7 +4232,26 @@</span> <span class="p_context"> EXPORT_SYMBOL_GPL(__pci_reset_function_locked);</span>
  */
 int pci_probe_reset_function(struct pci_dev *dev)
 {
<span class="p_del">-	return pci_dev_reset(dev, 1);</span>
<span class="p_add">+	int rc;</span>
<span class="p_add">+</span>
<span class="p_add">+	might_sleep();</span>
<span class="p_add">+</span>
<span class="p_add">+	rc = pci_dev_specific_reset(dev, 1);</span>
<span class="p_add">+	if (rc != -ENOTTY)</span>
<span class="p_add">+		return rc;</span>
<span class="p_add">+	if (pcie_has_flr(dev))</span>
<span class="p_add">+		return 0;</span>
<span class="p_add">+	rc = pci_af_flr(dev, 1);</span>
<span class="p_add">+	if (rc != -ENOTTY)</span>
<span class="p_add">+		return rc;</span>
<span class="p_add">+	rc = pci_pm_reset(dev, 1);</span>
<span class="p_add">+	if (rc != -ENOTTY)</span>
<span class="p_add">+		return rc;</span>
<span class="p_add">+	rc = pci_dev_reset_slot_function(dev, 1);</span>
<span class="p_add">+	if (rc != -ENOTTY)</span>
<span class="p_add">+		return rc;</span>
<span class="p_add">+</span>
<span class="p_add">+	return pci_parent_bus_reset(dev, 1);</span>
 }
 
 /**
<span class="p_chunk">@@ -4272,20 +4274,57 @@</span> <span class="p_context"> int pci_reset_function(struct pci_dev *dev)</span>
 {
 	int rc;
 
<span class="p_del">-	rc = pci_dev_reset(dev, 1);</span>
<span class="p_add">+	rc = pci_probe_reset_function(dev);</span>
 	if (rc)
 		return rc;
 
<span class="p_add">+	pci_dev_lock(dev);</span>
 	pci_dev_save_and_disable(dev);
 
<span class="p_del">-	rc = pci_dev_reset(dev, 0);</span>
<span class="p_add">+	rc = __pci_reset_function_locked(dev);</span>
 
 	pci_dev_restore(dev);
<span class="p_add">+	pci_dev_unlock(dev);</span>
 
 	return rc;
 }
 EXPORT_SYMBOL_GPL(pci_reset_function);
 
<span class="p_add">+/**</span>
<span class="p_add">+ * pci_reset_function_locked - quiesce and reset a PCI device function</span>
<span class="p_add">+ * @dev: PCI device to reset</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * Some devices allow an individual function to be reset without affecting</span>
<span class="p_add">+ * other functions in the same device.  The PCI device must be responsive</span>
<span class="p_add">+ * to PCI config space in order to use this function.</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * This function does not just reset the PCI portion of a device, but</span>
<span class="p_add">+ * clears all the state associated with the device.  This function differs</span>
<span class="p_add">+ * from __pci_reset_function() in that it saves and restores device state</span>
<span class="p_add">+ * over the reset.  It also differs from pci_reset_function() in that it</span>
<span class="p_add">+ * requires the PCI device lock to be held.</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * Returns 0 if the device function was successfully reset or negative if the</span>
<span class="p_add">+ * device doesn&#39;t support resetting a single function.</span>
<span class="p_add">+ */</span>
<span class="p_add">+int pci_reset_function_locked(struct pci_dev *dev)</span>
<span class="p_add">+{</span>
<span class="p_add">+	int rc;</span>
<span class="p_add">+</span>
<span class="p_add">+	rc = pci_probe_reset_function(dev);</span>
<span class="p_add">+	if (rc)</span>
<span class="p_add">+		return rc;</span>
<span class="p_add">+</span>
<span class="p_add">+	pci_dev_save_and_disable(dev);</span>
<span class="p_add">+</span>
<span class="p_add">+	rc = __pci_reset_function_locked(dev);</span>
<span class="p_add">+</span>
<span class="p_add">+	pci_dev_restore(dev);</span>
<span class="p_add">+</span>
<span class="p_add">+	return rc;</span>
<span class="p_add">+}</span>
<span class="p_add">+EXPORT_SYMBOL_GPL(pci_reset_function_locked);</span>
<span class="p_add">+</span>
 /**
  * pci_try_reset_function - quiesce and reset a PCI device function
  * @dev: PCI device to reset
<span class="p_chunk">@@ -4296,20 +4335,18 @@</span> <span class="p_context"> int pci_try_reset_function(struct pci_dev *dev)</span>
 {
 	int rc;
 
<span class="p_del">-	rc = pci_dev_reset(dev, 1);</span>
<span class="p_add">+	rc = pci_probe_reset_function(dev);</span>
 	if (rc)
 		return rc;
 
<span class="p_del">-	pci_dev_save_and_disable(dev);</span>
<span class="p_add">+	if (!pci_dev_trylock(dev))</span>
<span class="p_add">+		return -EAGAIN;</span>
 
<span class="p_del">-	if (pci_dev_trylock(dev)) {</span>
<span class="p_del">-		rc = __pci_dev_reset(dev, 0);</span>
<span class="p_del">-		pci_dev_unlock(dev);</span>
<span class="p_del">-	} else</span>
<span class="p_del">-		rc = -EAGAIN;</span>
<span class="p_add">+	pci_dev_save_and_disable(dev);</span>
<span class="p_add">+	rc = __pci_reset_function_locked(dev);</span>
<span class="p_add">+	pci_dev_unlock(dev);</span>
 
 	pci_dev_restore(dev);
<span class="p_del">-</span>
 	return rc;
 }
 EXPORT_SYMBOL_GPL(pci_try_reset_function);
<span class="p_chunk">@@ -4459,7 +4496,9 @@</span> <span class="p_context"> static void pci_bus_save_and_disable(struct pci_bus *bus)</span>
 	struct pci_dev *dev;
 
 	list_for_each_entry(dev, &amp;bus-&gt;devices, bus_list) {
<span class="p_add">+		pci_dev_lock(dev);</span>
 		pci_dev_save_and_disable(dev);
<span class="p_add">+		pci_dev_unlock(dev);</span>
 		if (dev-&gt;subordinate)
 			pci_bus_save_and_disable(dev-&gt;subordinate);
 	}
<span class="p_chunk">@@ -4474,7 +4513,9 @@</span> <span class="p_context"> static void pci_bus_restore(struct pci_bus *bus)</span>
 	struct pci_dev *dev;
 
 	list_for_each_entry(dev, &amp;bus-&gt;devices, bus_list) {
<span class="p_add">+		pci_dev_lock(dev);</span>
 		pci_dev_restore(dev);
<span class="p_add">+		pci_dev_unlock(dev);</span>
 		if (dev-&gt;subordinate)
 			pci_bus_restore(dev-&gt;subordinate);
 	}
<span class="p_header">diff --git a/drivers/pinctrl/intel/pinctrl-cherryview.c b/drivers/pinctrl/intel/pinctrl-cherryview.c</span>
<span class="p_header">index 20f1b4493994..04e929fd0ffe 100644</span>
<span class="p_header">--- a/drivers/pinctrl/intel/pinctrl-cherryview.c</span>
<span class="p_header">+++ b/drivers/pinctrl/intel/pinctrl-cherryview.c</span>
<span class="p_chunk">@@ -1547,6 +1547,13 @@</span> <span class="p_context"> static const struct dmi_system_id chv_no_valid_mask[] = {</span>
 			DMI_MATCH(DMI_PRODUCT_FAMILY, &quot;Intel_Strago&quot;),
 		},
 	},
<span class="p_add">+	{</span>
<span class="p_add">+		.ident = &quot;HP Chromebook 11 G5 (Setzer)&quot;,</span>
<span class="p_add">+		.matches = {</span>
<span class="p_add">+			DMI_MATCH(DMI_SYS_VENDOR, &quot;HP&quot;),</span>
<span class="p_add">+			DMI_MATCH(DMI_PRODUCT_NAME, &quot;Setzer&quot;),</span>
<span class="p_add">+		},</span>
<span class="p_add">+	},</span>
 	{
 		.ident = &quot;Acer Chromebook R11 (Cyan)&quot;,
 		.matches = {
<span class="p_header">diff --git a/drivers/pinctrl/intel/pinctrl-merrifield.c b/drivers/pinctrl/intel/pinctrl-merrifield.c</span>
<span class="p_header">index 4d4ef42a39b5..86c4b3fab7b0 100644</span>
<span class="p_header">--- a/drivers/pinctrl/intel/pinctrl-merrifield.c</span>
<span class="p_header">+++ b/drivers/pinctrl/intel/pinctrl-merrifield.c</span>
<span class="p_chunk">@@ -343,9 +343,9 @@</span> <span class="p_context"> static const struct pinctrl_pin_desc mrfld_pins[] = {</span>
 
 static const unsigned int mrfld_sdio_pins[] = { 50, 51, 52, 53, 54, 55, 56 };
 static const unsigned int mrfld_spi5_pins[] = { 90, 91, 92, 93, 94, 95, 96 };
<span class="p_del">-static const unsigned int mrfld_uart0_pins[] = { 124, 125, 126, 127 };</span>
<span class="p_del">-static const unsigned int mrfld_uart1_pins[] = { 128, 129, 130, 131 };</span>
<span class="p_del">-static const unsigned int mrfld_uart2_pins[] = { 132, 133, 134, 135 };</span>
<span class="p_add">+static const unsigned int mrfld_uart0_pins[] = { 115, 116, 117, 118 };</span>
<span class="p_add">+static const unsigned int mrfld_uart1_pins[] = { 119, 120, 121, 122 };</span>
<span class="p_add">+static const unsigned int mrfld_uart2_pins[] = { 123, 124, 125, 126 };</span>
 static const unsigned int mrfld_pwm0_pins[] = { 144 };
 static const unsigned int mrfld_pwm1_pins[] = { 145 };
 static const unsigned int mrfld_pwm2_pins[] = { 132 };
<span class="p_header">diff --git a/drivers/pinctrl/meson/pinctrl-meson-gxbb.c b/drivers/pinctrl/meson/pinctrl-meson-gxbb.c</span>
<span class="p_header">index 9b00be15d258..df942272ba54 100644</span>
<span class="p_header">--- a/drivers/pinctrl/meson/pinctrl-meson-gxbb.c</span>
<span class="p_header">+++ b/drivers/pinctrl/meson/pinctrl-meson-gxbb.c</span>
<span class="p_chunk">@@ -85,6 +85,7 @@</span> <span class="p_context"> static const struct pinctrl_pin_desc meson_gxbb_periphs_pins[] = {</span>
 	MESON_PIN(GPIODV_15, EE_OFF),
 	MESON_PIN(GPIODV_16, EE_OFF),
 	MESON_PIN(GPIODV_17, EE_OFF),
<span class="p_add">+	MESON_PIN(GPIODV_18, EE_OFF),</span>
 	MESON_PIN(GPIODV_19, EE_OFF),
 	MESON_PIN(GPIODV_20, EE_OFF),
 	MESON_PIN(GPIODV_21, EE_OFF),
<span class="p_header">diff --git a/drivers/pinctrl/meson/pinctrl-meson-gxl.c b/drivers/pinctrl/meson/pinctrl-meson-gxl.c</span>
<span class="p_header">index 998210eacf37..3046fd732155 100644</span>
<span class="p_header">--- a/drivers/pinctrl/meson/pinctrl-meson-gxl.c</span>
<span class="p_header">+++ b/drivers/pinctrl/meson/pinctrl-meson-gxl.c</span>
<span class="p_chunk">@@ -89,6 +89,7 @@</span> <span class="p_context"> static const struct pinctrl_pin_desc meson_gxl_periphs_pins[] = {</span>
 	MESON_PIN(GPIODV_15, EE_OFF),
 	MESON_PIN(GPIODV_16, EE_OFF),
 	MESON_PIN(GPIODV_17, EE_OFF),
<span class="p_add">+	MESON_PIN(GPIODV_18, EE_OFF),</span>
 	MESON_PIN(GPIODV_19, EE_OFF),
 	MESON_PIN(GPIODV_20, EE_OFF),
 	MESON_PIN(GPIODV_21, EE_OFF),
<span class="p_header">diff --git a/drivers/pinctrl/mvebu/pinctrl-armada-37xx.c b/drivers/pinctrl/mvebu/pinctrl-armada-37xx.c</span>
<span class="p_header">index 5c96f5558310..6aaeb0e9360e 100644</span>
<span class="p_header">--- a/drivers/pinctrl/mvebu/pinctrl-armada-37xx.c</span>
<span class="p_header">+++ b/drivers/pinctrl/mvebu/pinctrl-armada-37xx.c</span>
<span class="p_chunk">@@ -176,7 +176,7 @@</span> <span class="p_context"> const struct armada_37xx_pin_data armada_37xx_pin_nb = {</span>
 };
 
 const struct armada_37xx_pin_data armada_37xx_pin_sb = {
<span class="p_del">-	.nr_pins = 29,</span>
<span class="p_add">+	.nr_pins = 30,</span>
 	.name = &quot;GPIO2&quot;,
 	.groups = armada_37xx_sb_groups,
 	.ngroups = ARRAY_SIZE(armada_37xx_sb_groups),
<span class="p_header">diff --git a/drivers/pinctrl/samsung/pinctrl-exynos.c b/drivers/pinctrl/samsung/pinctrl-exynos.c</span>
<span class="p_header">index 7b0e6cc35e04..2ea8b1505138 100644</span>
<span class="p_header">--- a/drivers/pinctrl/samsung/pinctrl-exynos.c</span>
<span class="p_header">+++ b/drivers/pinctrl/samsung/pinctrl-exynos.c</span>
<span class="p_chunk">@@ -205,8 +205,6 @@</span> <span class="p_context"> static int exynos_irq_request_resources(struct irq_data *irqd)</span>
 
 	spin_unlock_irqrestore(&amp;bank-&gt;slock, flags);
 
<span class="p_del">-	exynos_irq_unmask(irqd);</span>
<span class="p_del">-</span>
 	return 0;
 }
 
<span class="p_chunk">@@ -226,8 +224,6 @@</span> <span class="p_context"> static void exynos_irq_release_resources(struct irq_data *irqd)</span>
 	shift = irqd-&gt;hwirq * bank_type-&gt;fld_width[PINCFG_TYPE_FUNC];
 	mask = (1 &lt;&lt; bank_type-&gt;fld_width[PINCFG_TYPE_FUNC]) - 1;
 
<span class="p_del">-	exynos_irq_mask(irqd);</span>
<span class="p_del">-</span>
 	spin_lock_irqsave(&amp;bank-&gt;slock, flags);
 
 	con = readl(bank-&gt;eint_base + reg_con);
<span class="p_header">diff --git a/drivers/pinctrl/sunxi/pinctrl-sun4i-a10.c b/drivers/pinctrl/sunxi/pinctrl-sun4i-a10.c</span>
<span class="p_header">index fb30b86a97ee..5fbbdbf349b8 100644</span>
<span class="p_header">--- a/drivers/pinctrl/sunxi/pinctrl-sun4i-a10.c</span>
<span class="p_header">+++ b/drivers/pinctrl/sunxi/pinctrl-sun4i-a10.c</span>
<span class="p_chunk">@@ -811,6 +811,7 @@</span> <span class="p_context"> static const struct sunxi_desc_pin sun4i_a10_pins[] = {</span>
 		  SUNXI_FUNCTION(0x2, &quot;lcd1&quot;),		/* D16 */
 		  SUNXI_FUNCTION(0x3, &quot;pata&quot;),		/* ATAD12 */
 		  SUNXI_FUNCTION(0x4, &quot;keypad&quot;),	/* IN6 */
<span class="p_add">+		  SUNXI_FUNCTION(0x5, &quot;sim&quot;),		/* DET */</span>
 		  SUNXI_FUNCTION_IRQ(0x6, 16),		/* EINT16 */
 		  SUNXI_FUNCTION(0x7, &quot;csi1&quot;)),		/* D16 */
 	SUNXI_PIN(SUNXI_PINCTRL_PIN(H, 17),
<span class="p_header">diff --git a/drivers/pinctrl/uniphier/pinctrl-uniphier-ld11.c b/drivers/pinctrl/uniphier/pinctrl-uniphier-ld11.c</span>
<span class="p_header">index 706effe0a492..ad73db8d067b 100644</span>
<span class="p_header">--- a/drivers/pinctrl/uniphier/pinctrl-uniphier-ld11.c</span>
<span class="p_header">+++ b/drivers/pinctrl/uniphier/pinctrl-uniphier-ld11.c</span>
<span class="p_chunk">@@ -508,57 +508,71 @@</span> <span class="p_context"> static const unsigned usb1_pins[] = {48, 49};</span>
 static const int usb1_muxvals[] = {0, 0};
 static const unsigned usb2_pins[] = {50, 51};
 static const int usb2_muxvals[] = {0, 0};
<span class="p_del">-static const unsigned port_range_pins[] = {</span>
<span class="p_add">+static const unsigned port_range0_pins[] = {</span>
 	159, 160, 161, 162, 163, 164, 165, 166,		/* PORT0x */
 	0, 1, 2, 3, 4, 5, 6, 7,				/* PORT1x */
 	8, 9, 10, 11, 12, 13, 14, 15,			/* PORT2x */
<span class="p_del">-	16, 17, 18, -1, -1, -1, -1, -1,			/* PORT3x */</span>
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT4x */</span>
<span class="p_del">-	-1, -1, -1, 46, 47, 48, 49, 50,			/* PORT5x */</span>
<span class="p_del">-	51, -1, -1, 54, 55, 56, 57, 58,			/* PORT6x */</span>
<span class="p_add">+	16, 17, 18,					/* PORT30-32 */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const int port_range0_muxvals[] = {</span>
<span class="p_add">+	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT0x */</span>
<span class="p_add">+	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT1x */</span>
<span class="p_add">+	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT2x */</span>
<span class="p_add">+	15, 15, 15,					/* PORT30-32 */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const unsigned port_range1_pins[] = {</span>
<span class="p_add">+	46, 47, 48, 49, 50,				/* PORT53-57 */</span>
<span class="p_add">+	51,						/* PORT60 */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const int port_range1_muxvals[] = {</span>
<span class="p_add">+	15, 15, 15, 15, 15,				/* PORT53-57 */</span>
<span class="p_add">+	15,						/* PORT60 */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const unsigned port_range2_pins[] = {</span>
<span class="p_add">+	54, 55, 56, 57, 58,				/* PORT63-67 */</span>
 	59, 60, 69, 70, 71, 72, 73, 74,			/* PORT7x */
 	75, 76, 77, 78, 79, 80, 81, 82,			/* PORT8x */
 	83, 84, 85, 86, 87, 88, 89, 90,			/* PORT9x */
 	91, 92, 93, 94, 95, 96, 97, 98,			/* PORT10x */
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT11x */</span>
<span class="p_del">-	99, 100, 101, 102, 103, 104, 105, 106,		/* PORT12x */</span>
<span class="p_del">-	107, 108, 109, 110, 111, 112, 113, 114,		/* PORT13x */</span>
<span class="p_del">-	115, 116, 117, 118, 119, 120, 121, 122,		/* PORT14x */</span>
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT15x */</span>
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT16x */</span>
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT17x */</span>
<span class="p_del">-	61, 62, 63, 64, 65, 66, 67, 68,			/* PORT18x */</span>
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT19x */</span>
<span class="p_del">-	123, 124, 125, 126, 127, 128, 129, 130,		/* PORT20x */</span>
<span class="p_del">-	131, 132, 133, 134, 135, 136, 137, 138,		/* PORT21x */</span>
<span class="p_del">-	139, 140, 141, 142, -1, -1, -1, -1,		/* PORT22x */</span>
<span class="p_del">-	147, 148, 149, 150, 151, 152, 153, 154,		/* PORT23x */</span>
<span class="p_del">-	155, 156, 157, 143, 144, 145, 146, 158,		/* PORT24x */</span>
 };
<span class="p_del">-static const int port_range_muxvals[] = {</span>
<span class="p_del">-	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT0x */</span>
<span class="p_del">-	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT1x */</span>
<span class="p_del">-	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT2x */</span>
<span class="p_del">-	15, 15, 15, -1, -1, -1, -1, -1,			/* PORT3x */</span>
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT4x */</span>
<span class="p_del">-	-1, -1, -1, 15, 15, 15, 15, 15,			/* PORT5x */</span>
<span class="p_del">-	15, -1, -1, 15, 15, 15, 15, 15,			/* PORT6x */</span>
<span class="p_add">+static const int port_range2_muxvals[] = {</span>
<span class="p_add">+	15, 15, 15, 15, 15,				/* PORT63-67 */</span>
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT7x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT8x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT9x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT10x */
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT11x */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const unsigned port_range3_pins[] = {</span>
<span class="p_add">+	99, 100, 101, 102, 103, 104, 105, 106,		/* PORT12x */</span>
<span class="p_add">+	107, 108, 109, 110, 111, 112, 113, 114,		/* PORT13x */</span>
<span class="p_add">+	115, 116, 117, 118, 119, 120, 121, 122,		/* PORT14x */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const int port_range3_muxvals[] = {</span>
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT12x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT13x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT14x */
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT15x */</span>
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT16x */</span>
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT17x */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const unsigned port_range4_pins[] = {</span>
<span class="p_add">+	61, 62, 63, 64, 65, 66, 67, 68,			/* PORT18x */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const int port_range4_muxvals[] = {</span>
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT18x */
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT19x */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const unsigned port_range5_pins[] = {</span>
<span class="p_add">+	123, 124, 125, 126, 127, 128, 129, 130,		/* PORT20x */</span>
<span class="p_add">+	131, 132, 133, 134, 135, 136, 137, 138,		/* PORT21x */</span>
<span class="p_add">+	139, 140, 141, 142,				/* PORT220-223 */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const int port_range5_muxvals[] = {</span>
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT20x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT21x */
<span class="p_del">-	15, 15, 15, 15, -1, -1, -1, -1,			/* PORT22x */</span>
<span class="p_add">+	15, 15, 15, 15,					/* PORT220-223 */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const unsigned port_range6_pins[] = {</span>
<span class="p_add">+	147, 148, 149, 150, 151, 152, 153, 154,		/* PORT23x */</span>
<span class="p_add">+	155, 156, 157, 143, 144, 145, 146, 158,		/* PORT24x */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const int port_range6_muxvals[] = {</span>
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT23x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT24x */
 };
<span class="p_chunk">@@ -607,147 +621,153 @@</span> <span class="p_context"> static const struct uniphier_pinctrl_group uniphier_ld11_groups[] = {</span>
 	UNIPHIER_PINCTRL_GROUP(usb0),
 	UNIPHIER_PINCTRL_GROUP(usb1),
 	UNIPHIER_PINCTRL_GROUP(usb2),
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_PORT(port_range),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_PORT(port_range0),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_PORT(port_range1),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_PORT(port_range2),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_PORT(port_range3),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_PORT(port_range4),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_PORT(port_range5),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_PORT(port_range6),</span>
 	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_IRQ(xirq),
 	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_IRQ(xirq_alternatives),
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port00, port_range, 0),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port01, port_range, 1),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port02, port_range, 2),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port03, port_range, 3),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port04, port_range, 4),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port05, port_range, 5),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port06, port_range, 6),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port07, port_range, 7),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port10, port_range, 8),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port11, port_range, 9),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port12, port_range, 10),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port13, port_range, 11),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port14, port_range, 12),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port15, port_range, 13),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port16, port_range, 14),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port17, port_range, 15),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port20, port_range, 16),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port21, port_range, 17),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port22, port_range, 18),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port23, port_range, 19),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port24, port_range, 20),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port25, port_range, 21),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port26, port_range, 22),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port27, port_range, 23),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port30, port_range, 24),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port31, port_range, 25),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port32, port_range, 26),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port53, port_range, 43),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port54, port_range, 44),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port55, port_range, 45),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port56, port_range, 46),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port57, port_range, 47),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port60, port_range, 48),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port63, port_range, 51),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port64, port_range, 52),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port65, port_range, 53),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port66, port_range, 54),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port67, port_range, 55),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port70, port_range, 56),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port71, port_range, 57),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port72, port_range, 58),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port73, port_range, 59),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port74, port_range, 60),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port75, port_range, 61),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port76, port_range, 62),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port77, port_range, 63),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port80, port_range, 64),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port81, port_range, 65),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port82, port_range, 66),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port83, port_range, 67),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port84, port_range, 68),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port85, port_range, 69),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port86, port_range, 70),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port87, port_range, 71),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port90, port_range, 72),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port91, port_range, 73),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port92, port_range, 74),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port93, port_range, 75),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port94, port_range, 76),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port95, port_range, 77),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port96, port_range, 78),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port97, port_range, 79),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port100, port_range, 80),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port101, port_range, 81),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port102, port_range, 82),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port103, port_range, 83),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port104, port_range, 84),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port105, port_range, 85),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port106, port_range, 86),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port107, port_range, 87),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port120, port_range, 96),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port121, port_range, 97),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port122, port_range, 98),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port123, port_range, 99),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port124, port_range, 100),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port125, port_range, 101),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port126, port_range, 102),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port127, port_range, 103),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port130, port_range, 104),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port131, port_range, 105),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port132, port_range, 106),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port133, port_range, 107),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port134, port_range, 108),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port135, port_range, 109),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port136, port_range, 110),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port137, port_range, 111),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port140, port_range, 112),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port141, port_range, 113),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port142, port_range, 114),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port143, port_range, 115),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port144, port_range, 116),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port145, port_range, 117),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port146, port_range, 118),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port147, port_range, 119),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port180, port_range, 144),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port181, port_range, 145),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port182, port_range, 146),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port183, port_range, 147),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port184, port_range, 148),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port185, port_range, 149),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port186, port_range, 150),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port187, port_range, 151),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port200, port_range, 160),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port201, port_range, 161),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port202, port_range, 162),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port203, port_range, 163),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port204, port_range, 164),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port205, port_range, 165),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port206, port_range, 166),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port207, port_range, 167),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port210, port_range, 168),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port211, port_range, 169),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port212, port_range, 170),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port213, port_range, 171),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port214, port_range, 172),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port215, port_range, 173),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port216, port_range, 174),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port217, port_range, 175),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port220, port_range, 176),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port221, port_range, 177),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port222, port_range, 178),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port223, port_range, 179),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port230, port_range, 184),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port231, port_range, 185),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port232, port_range, 186),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port233, port_range, 187),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port234, port_range, 188),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port235, port_range, 189),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port236, port_range, 190),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port237, port_range, 191),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port240, port_range, 192),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port241, port_range, 193),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port242, port_range, 194),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port243, port_range, 195),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port244, port_range, 196),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port245, port_range, 197),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port246, port_range, 198),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port247, port_range, 199),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port00, port_range0, 0),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port01, port_range0, 1),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port02, port_range0, 2),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port03, port_range0, 3),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port04, port_range0, 4),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port05, port_range0, 5),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port06, port_range0, 6),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port07, port_range0, 7),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port10, port_range0, 8),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port11, port_range0, 9),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port12, port_range0, 10),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port13, port_range0, 11),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port14, port_range0, 12),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port15, port_range0, 13),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port16, port_range0, 14),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port17, port_range0, 15),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port20, port_range0, 16),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port21, port_range0, 17),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port22, port_range0, 18),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port23, port_range0, 19),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port24, port_range0, 20),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port25, port_range0, 21),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port26, port_range0, 22),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port27, port_range0, 23),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port30, port_range0, 24),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port31, port_range0, 25),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port32, port_range0, 26),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port53, port_range1, 0),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port54, port_range1, 1),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port55, port_range1, 2),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port56, port_range1, 3),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port57, port_range1, 4),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port60, port_range1, 5),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port63, port_range2, 0),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port64, port_range2, 1),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port65, port_range2, 2),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port66, port_range2, 3),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port67, port_range2, 4),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port70, port_range2, 5),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port71, port_range2, 6),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port72, port_range2, 7),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port73, port_range2, 8),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port74, port_range2, 9),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port75, port_range2, 10),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port76, port_range2, 11),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port77, port_range2, 12),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port80, port_range2, 13),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port81, port_range2, 14),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port82, port_range2, 15),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port83, port_range2, 16),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port84, port_range2, 17),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port85, port_range2, 18),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port86, port_range2, 19),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port87, port_range2, 20),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port90, port_range2, 21),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port91, port_range2, 22),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port92, port_range2, 23),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port93, port_range2, 24),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port94, port_range2, 25),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port95, port_range2, 26),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port96, port_range2, 27),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port97, port_range2, 28),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port100, port_range2, 29),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port101, port_range2, 30),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port102, port_range2, 31),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port103, port_range2, 32),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port104, port_range2, 33),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port105, port_range2, 34),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port106, port_range2, 35),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port107, port_range2, 36),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port120, port_range3, 0),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port121, port_range3, 1),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port122, port_range3, 2),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port123, port_range3, 3),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port124, port_range3, 4),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port125, port_range3, 5),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port126, port_range3, 6),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port127, port_range3, 7),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port130, port_range3, 8),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port131, port_range3, 9),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port132, port_range3, 10),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port133, port_range3, 11),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port134, port_range3, 12),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port135, port_range3, 13),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port136, port_range3, 14),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port137, port_range3, 15),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port140, port_range3, 16),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port141, port_range3, 17),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port142, port_range3, 18),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port143, port_range3, 19),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port144, port_range3, 20),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port145, port_range3, 21),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port146, port_range3, 22),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port147, port_range3, 23),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port180, port_range4, 0),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port181, port_range4, 1),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port182, port_range4, 2),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port183, port_range4, 3),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port184, port_range4, 4),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port185, port_range4, 5),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port186, port_range4, 6),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port187, port_range4, 7),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port200, port_range5, 0),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port201, port_range5, 1),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port202, port_range5, 2),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port203, port_range5, 3),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port204, port_range5, 4),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port205, port_range5, 5),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port206, port_range5, 6),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port207, port_range5, 7),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port210, port_range5, 8),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port211, port_range5, 9),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port212, port_range5, 10),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port213, port_range5, 11),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port214, port_range5, 12),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port215, port_range5, 13),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port216, port_range5, 14),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port217, port_range5, 15),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port220, port_range5, 16),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port221, port_range5, 17),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port222, port_range5, 18),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port223, port_range5, 19),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port230, port_range6, 0),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port231, port_range6, 1),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port232, port_range6, 2),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port233, port_range6, 3),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port234, port_range6, 4),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port235, port_range6, 5),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port236, port_range6, 6),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port237, port_range6, 7),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port240, port_range6, 8),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port241, port_range6, 9),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port242, port_range6, 10),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port243, port_range6, 11),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port244, port_range6, 12),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port245, port_range6, 13),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port246, port_range6, 14),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port247, port_range6, 15),</span>
 	UNIPHIER_PINCTRL_GROUP_SINGLE(xirq0, xirq, 0),
 	UNIPHIER_PINCTRL_GROUP_SINGLE(xirq1, xirq, 1),
 	UNIPHIER_PINCTRL_GROUP_SINGLE(xirq2, xirq, 2),
<span class="p_header">diff --git a/drivers/pinctrl/uniphier/pinctrl-uniphier-ld20.c b/drivers/pinctrl/uniphier/pinctrl-uniphier-ld20.c</span>
<span class="p_header">index c8d18a2d3a88..93006626028d 100644</span>
<span class="p_header">--- a/drivers/pinctrl/uniphier/pinctrl-uniphier-ld20.c</span>
<span class="p_header">+++ b/drivers/pinctrl/uniphier/pinctrl-uniphier-ld20.c</span>
<span class="p_chunk">@@ -597,7 +597,7 @@</span> <span class="p_context"> static const unsigned usb2_pins[] = {50, 51};</span>
 static const int usb2_muxvals[] = {0, 0};
 static const unsigned usb3_pins[] = {52, 53};
 static const int usb3_muxvals[] = {0, 0};
<span class="p_del">-static const unsigned port_range_pins[] = {</span>
<span class="p_add">+static const unsigned port_range0_pins[] = {</span>
 	168, 169, 170, 171, 172, 173, 174, 175,		/* PORT0x */
 	0, 1, 2, 3, 4, 5, 6, 7,				/* PORT1x */
 	8, 9, 10, 11, 12, 13, 14, 15,			/* PORT2x */
<span class="p_chunk">@@ -609,23 +609,8 @@</span> <span class="p_context"> static const unsigned port_range_pins[] = {</span>
 	75, 76, 77, 78, 79, 80, 81, 82,			/* PORT8x */
 	83, 84, 85, 86, 87, 88, 89, 90,			/* PORT9x */
 	91, 92, 93, 94, 95, 96, 97, 98,			/* PORT10x */
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT11x */</span>
<span class="p_del">-	99, 100, 101, 102, 103, 104, 105, 106,		/* PORT12x */</span>
<span class="p_del">-	107, 108, 109, 110, 111, 112, 113, 114,		/* PORT13x */</span>
<span class="p_del">-	115, 116, 117, 118, 119, 120, 121, 122,		/* PORT14x */</span>
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT15x */</span>
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT16x */</span>
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT17x */</span>
<span class="p_del">-	61, 62, 63, 64, 65, 66, 67, 68,			/* PORT18x */</span>
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT19x */</span>
<span class="p_del">-	123, 124, 125, 126, 127, 128, 129, 130,		/* PORT20x */</span>
<span class="p_del">-	131, 132, 133, 134, 135, 136, 137, 138,		/* PORT21x */</span>
<span class="p_del">-	139, 140, 141, 142, 143, 144, 145, 146,		/* PORT22x */</span>
<span class="p_del">-	147, 148, 149, 150, 151, 152, 153, 154,		/* PORT23x */</span>
<span class="p_del">-	155, 156, 157, 158, 159, 160, 161, 162,		/* PORT24x */</span>
<span class="p_del">-	163, 164, 165, 166, 167,			/* PORT25x */</span>
 };
<span class="p_del">-static const int port_range_muxvals[] = {</span>
<span class="p_add">+static const int port_range0_muxvals[] = {</span>
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT0x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT1x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT2x */
<span class="p_chunk">@@ -637,21 +622,38 @@</span> <span class="p_context"> static const int port_range_muxvals[] = {</span>
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT8x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT9x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT10x */
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT11x */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const unsigned port_range1_pins[] = {</span>
<span class="p_add">+	99, 100, 101, 102, 103, 104, 105, 106,		/* PORT12x */</span>
<span class="p_add">+	107, 108, 109, 110, 111, 112, 113, 114,		/* PORT13x */</span>
<span class="p_add">+	115, 116, 117, 118, 119, 120, 121, 122,		/* PORT14x */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const int port_range1_muxvals[] = {</span>
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT12x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT13x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT14x */
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT15x */</span>
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT16x */</span>
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT17x */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const unsigned port_range2_pins[] = {</span>
<span class="p_add">+	61, 62, 63, 64, 65, 66, 67, 68,			/* PORT18x */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const int port_range2_muxvals[] = {</span>
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT18x */
<span class="p_del">-	-1, -1, -1, -1, -1, -1, -1, -1,			/* PORT19x */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const unsigned port_range3_pins[] = {</span>
<span class="p_add">+	123, 124, 125, 126, 127, 128, 129, 130,		/* PORT20x */</span>
<span class="p_add">+	131, 132, 133, 134, 135, 136, 137, 138,		/* PORT21x */</span>
<span class="p_add">+	139, 140, 141, 142, 143, 144, 145, 146,		/* PORT22x */</span>
<span class="p_add">+	147, 148, 149, 150, 151, 152, 153, 154,		/* PORT23x */</span>
<span class="p_add">+	155, 156, 157, 158, 159, 160, 161, 162,		/* PORT24x */</span>
<span class="p_add">+	163, 164, 165, 166, 167,			/* PORT250-254 */</span>
<span class="p_add">+};</span>
<span class="p_add">+static const int port_range3_muxvals[] = {</span>
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT20x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT21x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT22x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT23x */
 	15, 15, 15, 15, 15, 15, 15, 15,			/* PORT24x */
<span class="p_del">-	15, 15, 15, 15, 15,				/* PORT25x */</span>
<span class="p_add">+	15, 15, 15, 15, 15,				/* PORT250-254 */</span>
 };
 static const unsigned xirq_pins[] = {
 	149, 150, 151, 152, 153, 154, 155, 156,		/* XIRQ0-7 */
<span class="p_chunk">@@ -695,174 +697,177 @@</span> <span class="p_context"> static const struct uniphier_pinctrl_group uniphier_ld20_groups[] = {</span>
 	UNIPHIER_PINCTRL_GROUP(usb1),
 	UNIPHIER_PINCTRL_GROUP(usb2),
 	UNIPHIER_PINCTRL_GROUP(usb3),
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_PORT(port_range),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_PORT(port_range0),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_PORT(port_range1),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_PORT(port_range2),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_PORT(port_range3),</span>
 	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_IRQ(xirq),
 	UNIPHIER_PINCTRL_GROUP_GPIO_RANGE_IRQ(xirq_alternatives),
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port00, port_range, 0),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port01, port_range, 1),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port02, port_range, 2),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port03, port_range, 3),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port04, port_range, 4),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port05, port_range, 5),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port06, port_range, 6),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port07, port_range, 7),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port10, port_range, 8),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port11, port_range, 9),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port12, port_range, 10),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port13, port_range, 11),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port14, port_range, 12),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port15, port_range, 13),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port16, port_range, 14),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port17, port_range, 15),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port20, port_range, 16),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port21, port_range, 17),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port22, port_range, 18),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port23, port_range, 19),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port24, port_range, 20),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port25, port_range, 21),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port26, port_range, 22),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port27, port_range, 23),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port30, port_range, 24),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port31, port_range, 25),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port32, port_range, 26),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port33, port_range, 27),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port34, port_range, 28),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port35, port_range, 29),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port36, port_range, 30),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port37, port_range, 31),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port40, port_range, 32),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port41, port_range, 33),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port42, port_range, 34),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port43, port_range, 35),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port44, port_range, 36),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port45, port_range, 37),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port46, port_range, 38),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port47, port_range, 39),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port50, port_range, 40),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port51, port_range, 41),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port52, port_range, 42),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port53, port_range, 43),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port54, port_range, 44),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port55, port_range, 45),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port56, port_range, 46),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port57, port_range, 47),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port60, port_range, 48),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port61, port_range, 49),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port62, port_range, 50),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port63, port_range, 51),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port64, port_range, 52),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port65, port_range, 53),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port66, port_range, 54),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port67, port_range, 55),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port70, port_range, 56),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port71, port_range, 57),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port72, port_range, 58),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port73, port_range, 59),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port74, port_range, 60),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port75, port_range, 61),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port76, port_range, 62),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port77, port_range, 63),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port80, port_range, 64),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port81, port_range, 65),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port82, port_range, 66),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port83, port_range, 67),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port84, port_range, 68),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port85, port_range, 69),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port86, port_range, 70),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port87, port_range, 71),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port90, port_range, 72),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port91, port_range, 73),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port92, port_range, 74),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port93, port_range, 75),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port94, port_range, 76),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port95, port_range, 77),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port96, port_range, 78),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port97, port_range, 79),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port100, port_range, 80),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port101, port_range, 81),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port102, port_range, 82),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port103, port_range, 83),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port104, port_range, 84),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port105, port_range, 85),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port106, port_range, 86),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port107, port_range, 87),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port120, port_range, 96),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port121, port_range, 97),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port122, port_range, 98),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port123, port_range, 99),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port124, port_range, 100),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port125, port_range, 101),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port126, port_range, 102),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port127, port_range, 103),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port130, port_range, 104),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port131, port_range, 105),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port132, port_range, 106),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port133, port_range, 107),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port134, port_range, 108),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port135, port_range, 109),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port136, port_range, 110),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port137, port_range, 111),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port140, port_range, 112),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port141, port_range, 113),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port142, port_range, 114),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port143, port_range, 115),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port144, port_range, 116),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port145, port_range, 117),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port146, port_range, 118),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port147, port_range, 119),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port180, port_range, 144),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port181, port_range, 145),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port182, port_range, 146),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port183, port_range, 147),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port184, port_range, 148),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port185, port_range, 149),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port186, port_range, 150),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port187, port_range, 151),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port200, port_range, 160),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port201, port_range, 161),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port202, port_range, 162),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port203, port_range, 163),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port204, port_range, 164),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port205, port_range, 165),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port206, port_range, 166),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port207, port_range, 167),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port210, port_range, 168),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port211, port_range, 169),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port212, port_range, 170),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port213, port_range, 171),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port214, port_range, 172),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port215, port_range, 173),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port216, port_range, 174),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port217, port_range, 175),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port220, port_range, 176),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port221, port_range, 177),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port222, port_range, 178),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port223, port_range, 179),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port224, port_range, 180),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port225, port_range, 181),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port226, port_range, 182),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port227, port_range, 183),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port230, port_range, 184),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port231, port_range, 185),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port232, port_range, 186),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port233, port_range, 187),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port234, port_range, 188),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port235, port_range, 189),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port236, port_range, 190),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port237, port_range, 191),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port240, port_range, 192),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port241, port_range, 193),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port242, port_range, 194),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port243, port_range, 195),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port244, port_range, 196),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port245, port_range, 197),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port246, port_range, 198),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port247, port_range, 199),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port250, port_range, 200),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port251, port_range, 201),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port252, port_range, 202),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port253, port_range, 203),</span>
<span class="p_del">-	UNIPHIER_PINCTRL_GROUP_SINGLE(port254, port_range, 204),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port00, port_range0, 0),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port01, port_range0, 1),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port02, port_range0, 2),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port03, port_range0, 3),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port04, port_range0, 4),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port05, port_range0, 5),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port06, port_range0, 6),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port07, port_range0, 7),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port10, port_range0, 8),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port11, port_range0, 9),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port12, port_range0, 10),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port13, port_range0, 11),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port14, port_range0, 12),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port15, port_range0, 13),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port16, port_range0, 14),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port17, port_range0, 15),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port20, port_range0, 16),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port21, port_range0, 17),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port22, port_range0, 18),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port23, port_range0, 19),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port24, port_range0, 20),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port25, port_range0, 21),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port26, port_range0, 22),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port27, port_range0, 23),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port30, port_range0, 24),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port31, port_range0, 25),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port32, port_range0, 26),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port33, port_range0, 27),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port34, port_range0, 28),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port35, port_range0, 29),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port36, port_range0, 30),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port37, port_range0, 31),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port40, port_range0, 32),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port41, port_range0, 33),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port42, port_range0, 34),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port43, port_range0, 35),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port44, port_range0, 36),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port45, port_range0, 37),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port46, port_range0, 38),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port47, port_range0, 39),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port50, port_range0, 40),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port51, port_range0, 41),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port52, port_range0, 42),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port53, port_range0, 43),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port54, port_range0, 44),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port55, port_range0, 45),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port56, port_range0, 46),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port57, port_range0, 47),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port60, port_range0, 48),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port61, port_range0, 49),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port62, port_range0, 50),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port63, port_range0, 51),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port64, port_range0, 52),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port65, port_range0, 53),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port66, port_range0, 54),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port67, port_range0, 55),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port70, port_range0, 56),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port71, port_range0, 57),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port72, port_range0, 58),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port73, port_range0, 59),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port74, port_range0, 60),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port75, port_range0, 61),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port76, port_range0, 62),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port77, port_range0, 63),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port80, port_range0, 64),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port81, port_range0, 65),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port82, port_range0, 66),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port83, port_range0, 67),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port84, port_range0, 68),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port85, port_range0, 69),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port86, port_range0, 70),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port87, port_range0, 71),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port90, port_range0, 72),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port91, port_range0, 73),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port92, port_range0, 74),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port93, port_range0, 75),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port94, port_range0, 76),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port95, port_range0, 77),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port96, port_range0, 78),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port97, port_range0, 79),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port100, port_range0, 80),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port101, port_range0, 81),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port102, port_range0, 82),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port103, port_range0, 83),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port104, port_range0, 84),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port105, port_range0, 85),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port106, port_range0, 86),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port107, port_range0, 87),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port120, port_range1, 0),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port121, port_range1, 1),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port122, port_range1, 2),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port123, port_range1, 3),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port124, port_range1, 4),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port125, port_range1, 5),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port126, port_range1, 6),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port127, port_range1, 7),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port130, port_range1, 8),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port131, port_range1, 9),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port132, port_range1, 10),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port133, port_range1, 11),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port134, port_range1, 12),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port135, port_range1, 13),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port136, port_range1, 14),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port137, port_range1, 15),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port140, port_range1, 16),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port141, port_range1, 17),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port142, port_range1, 18),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port143, port_range1, 19),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port144, port_range1, 20),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port145, port_range1, 21),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port146, port_range1, 22),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port147, port_range1, 23),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port180, port_range2, 0),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port181, port_range2, 1),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port182, port_range2, 2),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port183, port_range2, 3),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port184, port_range2, 4),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port185, port_range2, 5),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port186, port_range2, 6),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port187, port_range2, 7),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port200, port_range3, 0),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port201, port_range3, 1),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port202, port_range3, 2),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port203, port_range3, 3),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port204, port_range3, 4),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port205, port_range3, 5),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port206, port_range3, 6),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port207, port_range3, 7),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port210, port_range3, 8),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port211, port_range3, 9),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port212, port_range3, 10),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port213, port_range3, 11),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port214, port_range3, 12),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port215, port_range3, 13),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port216, port_range3, 14),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port217, port_range3, 15),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port220, port_range3, 16),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port221, port_range3, 17),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port222, port_range3, 18),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port223, port_range3, 19),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port224, port_range3, 20),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port225, port_range3, 21),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port226, port_range3, 22),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port227, port_range3, 23),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port230, port_range3, 24),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port231, port_range3, 25),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port232, port_range3, 26),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port233, port_range3, 27),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port234, port_range3, 28),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port235, port_range3, 29),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port236, port_range3, 30),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port237, port_range3, 31),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port240, port_range3, 32),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port241, port_range3, 33),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port242, port_range3, 34),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port243, port_range3, 35),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port244, port_range3, 36),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port245, port_range3, 37),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port246, port_range3, 38),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port247, port_range3, 39),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port250, port_range3, 40),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port251, port_range3, 41),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port252, port_range3, 42),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port253, port_range3, 43),</span>
<span class="p_add">+	UNIPHIER_PINCTRL_GROUP_SINGLE(port254, port_range3, 44),</span>
 	UNIPHIER_PINCTRL_GROUP_SINGLE(xirq0, xirq, 0),
 	UNIPHIER_PINCTRL_GROUP_SINGLE(xirq1, xirq, 1),
 	UNIPHIER_PINCTRL_GROUP_SINGLE(xirq2, xirq, 2),
<span class="p_header">diff --git a/drivers/staging/comedi/comedi_fops.c b/drivers/staging/comedi/comedi_fops.c</span>
<span class="p_header">index 4ed485a99c68..11d809780ee0 100644</span>
<span class="p_header">--- a/drivers/staging/comedi/comedi_fops.c</span>
<span class="p_header">+++ b/drivers/staging/comedi/comedi_fops.c</span>
<span class="p_chunk">@@ -2396,6 +2396,7 @@</span> <span class="p_context"> static ssize_t comedi_write(struct file *file, const char __user *buf,</span>
 			continue;
 		}
 
<span class="p_add">+		set_current_state(TASK_RUNNING);</span>
 		wp = async-&gt;buf_write_ptr;
 		n1 = min(n, async-&gt;prealloc_bufsz - wp);
 		n2 = n - n1;
<span class="p_chunk">@@ -2528,6 +2529,8 @@</span> <span class="p_context"> static ssize_t comedi_read(struct file *file, char __user *buf, size_t nbytes,</span>
 			}
 			continue;
 		}
<span class="p_add">+</span>
<span class="p_add">+		set_current_state(TASK_RUNNING);</span>
 		rp = async-&gt;buf_read_ptr;
 		n1 = min(n, async-&gt;prealloc_bufsz - rp);
 		n2 = n - n1;
<span class="p_header">diff --git a/drivers/staging/iio/resolver/ad2s1210.c b/drivers/staging/iio/resolver/ad2s1210.c</span>
<span class="p_header">index a6a8393d6664..3e00df74b18c 100644</span>
<span class="p_header">--- a/drivers/staging/iio/resolver/ad2s1210.c</span>
<span class="p_header">+++ b/drivers/staging/iio/resolver/ad2s1210.c</span>
<span class="p_chunk">@@ -472,7 +472,7 @@</span> <span class="p_context"> static int ad2s1210_read_raw(struct iio_dev *indio_dev,</span>
 			     long m)
 {
 	struct ad2s1210_state *st = iio_priv(indio_dev);
<span class="p_del">-	bool negative;</span>
<span class="p_add">+	u16 negative;</span>
 	int ret = 0;
 	u16 pos;
 	s16 vel;
<span class="p_header">diff --git a/drivers/target/iscsi/iscsi_target.c b/drivers/target/iscsi/iscsi_target.c</span>
<span class="p_header">index 3fdca2cdd8da..db843e3f355a 100644</span>
<span class="p_header">--- a/drivers/target/iscsi/iscsi_target.c</span>
<span class="p_header">+++ b/drivers/target/iscsi/iscsi_target.c</span>
<span class="p_chunk">@@ -418,6 +418,7 @@</span> <span class="p_context"> int iscsit_reset_np_thread(</span>
 		return 0;
 	}
 	np-&gt;np_thread_state = ISCSI_NP_THREAD_RESET;
<span class="p_add">+	atomic_inc(&amp;np-&gt;np_reset_count);</span>
 
 	if (np-&gt;np_thread) {
 		spin_unlock_bh(&amp;np-&gt;np_thread_lock);
<span class="p_chunk">@@ -2173,6 +2174,7 @@</span> <span class="p_context"> iscsit_setup_text_cmd(struct iscsi_conn *conn, struct iscsi_cmd *cmd,</span>
 	cmd-&gt;cmd_sn		= be32_to_cpu(hdr-&gt;cmdsn);
 	cmd-&gt;exp_stat_sn	= be32_to_cpu(hdr-&gt;exp_statsn);
 	cmd-&gt;data_direction	= DMA_NONE;
<span class="p_add">+	kfree(cmd-&gt;text_in_ptr);</span>
 	cmd-&gt;text_in_ptr	= NULL;
 
 	return 0;
<span class="p_header">diff --git a/drivers/target/iscsi/iscsi_target_login.c b/drivers/target/iscsi/iscsi_target_login.c</span>
<span class="p_header">index 92b96b51d506..e491cf75e92d 100644</span>
<span class="p_header">--- a/drivers/target/iscsi/iscsi_target_login.c</span>
<span class="p_header">+++ b/drivers/target/iscsi/iscsi_target_login.c</span>
<span class="p_chunk">@@ -1237,9 +1237,11 @@</span> <span class="p_context"> static int __iscsi_target_login_thread(struct iscsi_np *np)</span>
 	flush_signals(current);
 
 	spin_lock_bh(&amp;np-&gt;np_thread_lock);
<span class="p_del">-	if (np-&gt;np_thread_state == ISCSI_NP_THREAD_RESET) {</span>
<span class="p_add">+	if (atomic_dec_if_positive(&amp;np-&gt;np_reset_count) &gt;= 0) {</span>
 		np-&gt;np_thread_state = ISCSI_NP_THREAD_ACTIVE;
<span class="p_add">+		spin_unlock_bh(&amp;np-&gt;np_thread_lock);</span>
 		complete(&amp;np-&gt;np_restart_comp);
<span class="p_add">+		return 1;</span>
 	} else if (np-&gt;np_thread_state == ISCSI_NP_THREAD_SHUTDOWN) {
 		spin_unlock_bh(&amp;np-&gt;np_thread_lock);
 		goto exit;
<span class="p_chunk">@@ -1272,7 +1274,8 @@</span> <span class="p_context"> static int __iscsi_target_login_thread(struct iscsi_np *np)</span>
 		goto exit;
 	} else if (rc &lt; 0) {
 		spin_lock_bh(&amp;np-&gt;np_thread_lock);
<span class="p_del">-		if (np-&gt;np_thread_state == ISCSI_NP_THREAD_RESET) {</span>
<span class="p_add">+		if (atomic_dec_if_positive(&amp;np-&gt;np_reset_count) &gt;= 0) {</span>
<span class="p_add">+			np-&gt;np_thread_state = ISCSI_NP_THREAD_ACTIVE;</span>
 			spin_unlock_bh(&amp;np-&gt;np_thread_lock);
 			complete(&amp;np-&gt;np_restart_comp);
 			iscsit_put_transport(conn-&gt;conn_transport);
<span class="p_header">diff --git a/drivers/target/target_core_tpg.c b/drivers/target/target_core_tpg.c</span>
<span class="p_header">index 310d9e55c6eb..2d9ad10de3b3 100644</span>
<span class="p_header">--- a/drivers/target/target_core_tpg.c</span>
<span class="p_header">+++ b/drivers/target/target_core_tpg.c</span>
<span class="p_chunk">@@ -364,7 +364,7 @@</span> <span class="p_context"> void core_tpg_del_initiator_node_acl(struct se_node_acl *acl)</span>
 	mutex_lock(&amp;tpg-&gt;acl_node_mutex);
 	if (acl-&gt;dynamic_node_acl)
 		acl-&gt;dynamic_node_acl = 0;
<span class="p_del">-	list_del(&amp;acl-&gt;acl_list);</span>
<span class="p_add">+	list_del_init(&amp;acl-&gt;acl_list);</span>
 	mutex_unlock(&amp;tpg-&gt;acl_node_mutex);
 
 	target_shutdown_sessions(acl);
<span class="p_chunk">@@ -548,7 +548,7 @@</span> <span class="p_context"> int core_tpg_deregister(struct se_portal_group *se_tpg)</span>
 	 * in transport_deregister_session().
 	 */
 	list_for_each_entry_safe(nacl, nacl_tmp, &amp;node_list, acl_list) {
<span class="p_del">-		list_del(&amp;nacl-&gt;acl_list);</span>
<span class="p_add">+		list_del_init(&amp;nacl-&gt;acl_list);</span>
 
 		core_tpg_wait_for_nacl_pr_ref(nacl);
 		core_free_device_list_for_node(nacl, se_tpg);
<span class="p_header">diff --git a/drivers/target/target_core_transport.c b/drivers/target/target_core_transport.c</span>
<span class="p_header">index 019763561e52..884780d2ec69 100644</span>
<span class="p_header">--- a/drivers/target/target_core_transport.c</span>
<span class="p_header">+++ b/drivers/target/target_core_transport.c</span>
<span class="p_chunk">@@ -466,7 +466,7 @@</span> <span class="p_context"> static void target_complete_nacl(struct kref *kref)</span>
 	}
 
 	mutex_lock(&amp;se_tpg-&gt;acl_node_mutex);
<span class="p_del">-	list_del(&amp;nacl-&gt;acl_list);</span>
<span class="p_add">+	list_del_init(&amp;nacl-&gt;acl_list);</span>
 	mutex_unlock(&amp;se_tpg-&gt;acl_node_mutex);
 
 	core_tpg_wait_for_nacl_pr_ref(nacl);
<span class="p_chunk">@@ -538,7 +538,7 @@</span> <span class="p_context"> void transport_free_session(struct se_session *se_sess)</span>
 			spin_unlock_irqrestore(&amp;se_nacl-&gt;nacl_sess_lock, flags);
 
 			if (se_nacl-&gt;dynamic_stop)
<span class="p_del">-				list_del(&amp;se_nacl-&gt;acl_list);</span>
<span class="p_add">+				list_del_init(&amp;se_nacl-&gt;acl_list);</span>
 		}
 		mutex_unlock(&amp;se_tpg-&gt;acl_node_mutex);
 
<span class="p_header">diff --git a/drivers/usb/core/hcd.c b/drivers/usb/core/hcd.c</span>
<span class="p_header">index 5dea98358c05..cc4121605c53 100644</span>
<span class="p_header">--- a/drivers/usb/core/hcd.c</span>
<span class="p_header">+++ b/drivers/usb/core/hcd.c</span>
<span class="p_chunk">@@ -1878,7 +1878,7 @@</span> <span class="p_context"> void usb_hcd_flush_endpoint(struct usb_device *udev,</span>
 	/* No more submits can occur */
 	spin_lock_irq(&amp;hcd_urb_list_lock);
 rescan:
<span class="p_del">-	list_for_each_entry (urb, &amp;ep-&gt;urb_list, urb_list) {</span>
<span class="p_add">+	list_for_each_entry_reverse(urb, &amp;ep-&gt;urb_list, urb_list) {</span>
 		int	is_in;
 
 		if (urb-&gt;unlinked)
<span class="p_chunk">@@ -2475,6 +2475,8 @@</span> <span class="p_context"> void usb_hc_died (struct usb_hcd *hcd)</span>
 	}
 	if (usb_hcd_is_primary_hcd(hcd) &amp;&amp; hcd-&gt;shared_hcd) {
 		hcd = hcd-&gt;shared_hcd;
<span class="p_add">+		clear_bit(HCD_FLAG_RH_RUNNING, &amp;hcd-&gt;flags);</span>
<span class="p_add">+		set_bit(HCD_FLAG_DEAD, &amp;hcd-&gt;flags);</span>
 		if (hcd-&gt;rh_registered) {
 			clear_bit(HCD_FLAG_POLL_RH, &amp;hcd-&gt;flags);
 
<span class="p_header">diff --git a/drivers/usb/core/hub.c b/drivers/usb/core/hub.c</span>
<span class="p_header">index b8bb20d7acdb..0881a3e8131c 100644</span>
<span class="p_header">--- a/drivers/usb/core/hub.c</span>
<span class="p_header">+++ b/drivers/usb/core/hub.c</span>
<span class="p_chunk">@@ -4730,7 +4730,8 @@</span> <span class="p_context"> hub_power_remaining(struct usb_hub *hub)</span>
 static void hub_port_connect(struct usb_hub *hub, int port1, u16 portstatus,
 		u16 portchange)
 {
<span class="p_del">-	int status, i;</span>
<span class="p_add">+	int status = -ENODEV;</span>
<span class="p_add">+	int i;</span>
 	unsigned unit_load;
 	struct usb_device *hdev = hub-&gt;hdev;
 	struct usb_hcd *hcd = bus_to_hcd(hdev-&gt;bus);
<span class="p_chunk">@@ -4934,9 +4935,10 @@</span> <span class="p_context"> static void hub_port_connect(struct usb_hub *hub, int port1, u16 portstatus,</span>
 
 done:
 	hub_port_disable(hub, port1, 1);
<span class="p_del">-	if (hcd-&gt;driver-&gt;relinquish_port &amp;&amp; !hub-&gt;hdev-&gt;parent)</span>
<span class="p_del">-		hcd-&gt;driver-&gt;relinquish_port(hcd, port1);</span>
<span class="p_del">-</span>
<span class="p_add">+	if (hcd-&gt;driver-&gt;relinquish_port &amp;&amp; !hub-&gt;hdev-&gt;parent) {</span>
<span class="p_add">+		if (status != -ENOTCONN &amp;&amp; status != -ENODEV)</span>
<span class="p_add">+			hcd-&gt;driver-&gt;relinquish_port(hcd, port1);</span>
<span class="p_add">+	}</span>
 }
 
 /* Handle physical or logical connection change events.
<span class="p_header">diff --git a/drivers/usb/core/quirks.c b/drivers/usb/core/quirks.c</span>
<span class="p_header">index 3116edfcdc18..574da2b4529c 100644</span>
<span class="p_header">--- a/drivers/usb/core/quirks.c</span>
<span class="p_header">+++ b/drivers/usb/core/quirks.c</span>
<span class="p_chunk">@@ -150,6 +150,9 @@</span> <span class="p_context"> static const struct usb_device_id usb_quirk_list[] = {</span>
 	/* appletouch */
 	{ USB_DEVICE(0x05ac, 0x021a), .driver_info = USB_QUIRK_RESET_RESUME },
 
<span class="p_add">+	/* Genesys Logic hub, internally used by Moshi USB to Ethernet Adapter */</span>
<span class="p_add">+	{ USB_DEVICE(0x05e3, 0x0616), .driver_info = USB_QUIRK_NO_LPM },</span>
<span class="p_add">+</span>
 	/* Avision AV600U */
 	{ USB_DEVICE(0x0638, 0x0a13), .driver_info =
 	  USB_QUIRK_STRING_FETCH_255 },
<span class="p_chunk">@@ -249,6 +252,7 @@</span> <span class="p_context"> static const struct usb_device_id usb_amd_resume_quirk_list[] = {</span>
 	{ USB_DEVICE(0x093a, 0x2500), .driver_info = USB_QUIRK_RESET_RESUME },
 	{ USB_DEVICE(0x093a, 0x2510), .driver_info = USB_QUIRK_RESET_RESUME },
 	{ USB_DEVICE(0x093a, 0x2521), .driver_info = USB_QUIRK_RESET_RESUME },
<span class="p_add">+	{ USB_DEVICE(0x03f0, 0x2b4a), .driver_info = USB_QUIRK_RESET_RESUME },</span>
 
 	/* Logitech Optical Mouse M90/M100 */
 	{ USB_DEVICE(0x046d, 0xc05a), .driver_info = USB_QUIRK_RESET_RESUME },
<span class="p_header">diff --git a/drivers/usb/gadget/udc/renesas_usb3.c b/drivers/usb/gadget/udc/renesas_usb3.c</span>
<span class="p_header">index cd4c88529721..9f3addfca744 100644</span>
<span class="p_header">--- a/drivers/usb/gadget/udc/renesas_usb3.c</span>
<span class="p_header">+++ b/drivers/usb/gadget/udc/renesas_usb3.c</span>
<span class="p_chunk">@@ -758,21 +758,32 @@</span> <span class="p_context"> static struct renesas_usb3_request *usb3_get_request(struct renesas_usb3_ep</span>
 	return usb3_req;
 }
 
<span class="p_del">-static void usb3_request_done(struct renesas_usb3_ep *usb3_ep,</span>
<span class="p_del">-			      struct renesas_usb3_request *usb3_req, int status)</span>
<span class="p_add">+static void __usb3_request_done(struct renesas_usb3_ep *usb3_ep,</span>
<span class="p_add">+				struct renesas_usb3_request *usb3_req,</span>
<span class="p_add">+				int status)</span>
 {
 	struct renesas_usb3 *usb3 = usb3_ep_to_usb3(usb3_ep);
<span class="p_del">-	unsigned long flags;</span>
 
 	dev_dbg(usb3_to_dev(usb3), &quot;giveback: ep%2d, %u, %u, %d\n&quot;,
 		usb3_ep-&gt;num, usb3_req-&gt;req.length, usb3_req-&gt;req.actual,
 		status);
 	usb3_req-&gt;req.status = status;
<span class="p_del">-	spin_lock_irqsave(&amp;usb3-&gt;lock, flags);</span>
 	usb3_ep-&gt;started = false;
 	list_del_init(&amp;usb3_req-&gt;queue);
<span class="p_del">-	spin_unlock_irqrestore(&amp;usb3-&gt;lock, flags);</span>
<span class="p_add">+	spin_unlock(&amp;usb3-&gt;lock);</span>
 	usb_gadget_giveback_request(&amp;usb3_ep-&gt;ep, &amp;usb3_req-&gt;req);
<span class="p_add">+	spin_lock(&amp;usb3-&gt;lock);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static void usb3_request_done(struct renesas_usb3_ep *usb3_ep,</span>
<span class="p_add">+			      struct renesas_usb3_request *usb3_req, int status)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct renesas_usb3 *usb3 = usb3_ep_to_usb3(usb3_ep);</span>
<span class="p_add">+	unsigned long flags;</span>
<span class="p_add">+</span>
<span class="p_add">+	spin_lock_irqsave(&amp;usb3-&gt;lock, flags);</span>
<span class="p_add">+	__usb3_request_done(usb3_ep, usb3_req, status);</span>
<span class="p_add">+	spin_unlock_irqrestore(&amp;usb3-&gt;lock, flags);</span>
 }
 
 static void usb3_irq_epc_pipe0_status_end(struct renesas_usb3 *usb3)
<span class="p_header">diff --git a/drivers/usb/host/pci-quirks.c b/drivers/usb/host/pci-quirks.c</span>
<span class="p_header">index c8989c62a262..c8f38649f749 100644</span>
<span class="p_header">--- a/drivers/usb/host/pci-quirks.c</span>
<span class="p_header">+++ b/drivers/usb/host/pci-quirks.c</span>
<span class="p_chunk">@@ -98,6 +98,7 @@</span> <span class="p_context"> enum amd_chipset_gen {</span>
 	AMD_CHIPSET_HUDSON2,
 	AMD_CHIPSET_BOLTON,
 	AMD_CHIPSET_YANGTZE,
<span class="p_add">+	AMD_CHIPSET_TAISHAN,</span>
 	AMD_CHIPSET_UNKNOWN,
 };
 
<span class="p_chunk">@@ -141,6 +142,11 @@</span> <span class="p_context"> static int amd_chipset_sb_type_init(struct amd_chipset_info *pinfo)</span>
 			pinfo-&gt;sb_type.gen = AMD_CHIPSET_SB700;
 		else if (rev &gt;= 0x40 &amp;&amp; rev &lt;= 0x4f)
 			pinfo-&gt;sb_type.gen = AMD_CHIPSET_SB800;
<span class="p_add">+	}</span>
<span class="p_add">+	pinfo-&gt;smbus_dev = pci_get_device(PCI_VENDOR_ID_AMD,</span>
<span class="p_add">+					  0x145c, NULL);</span>
<span class="p_add">+	if (pinfo-&gt;smbus_dev) {</span>
<span class="p_add">+		pinfo-&gt;sb_type.gen = AMD_CHIPSET_TAISHAN;</span>
 	} else {
 		pinfo-&gt;smbus_dev = pci_get_device(PCI_VENDOR_ID_AMD,
 				PCI_DEVICE_ID_AMD_HUDSON2_SMBUS, NULL);
<span class="p_chunk">@@ -260,11 +266,12 @@</span> <span class="p_context"> int usb_hcd_amd_remote_wakeup_quirk(struct pci_dev *pdev)</span>
 {
 	/* Make sure amd chipset type has already been initialized */
 	usb_amd_find_chipset_info();
<span class="p_del">-	if (amd_chipset.sb_type.gen != AMD_CHIPSET_YANGTZE)</span>
<span class="p_del">-		return 0;</span>
<span class="p_del">-</span>
<span class="p_del">-	dev_dbg(&amp;pdev-&gt;dev, &quot;QUIRK: Enable AMD remote wakeup fix\n&quot;);</span>
<span class="p_del">-	return 1;</span>
<span class="p_add">+	if (amd_chipset.sb_type.gen == AMD_CHIPSET_YANGTZE ||</span>
<span class="p_add">+	    amd_chipset.sb_type.gen == AMD_CHIPSET_TAISHAN) {</span>
<span class="p_add">+		dev_dbg(&amp;pdev-&gt;dev, &quot;QUIRK: Enable AMD remote wakeup fix\n&quot;);</span>
<span class="p_add">+		return 1;</span>
<span class="p_add">+	}</span>
<span class="p_add">+	return 0;</span>
 }
 EXPORT_SYMBOL_GPL(usb_hcd_amd_remote_wakeup_quirk);
 
<span class="p_chunk">@@ -1150,3 +1157,23 @@</span> <span class="p_context"> static void quirk_usb_early_handoff(struct pci_dev *pdev)</span>
 }
 DECLARE_PCI_FIXUP_CLASS_FINAL(PCI_ANY_ID, PCI_ANY_ID,
 			PCI_CLASS_SERIAL_USB, 8, quirk_usb_early_handoff);
<span class="p_add">+</span>
<span class="p_add">+bool usb_xhci_needs_pci_reset(struct pci_dev *pdev)</span>
<span class="p_add">+{</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Our dear uPD72020{1,2} friend only partially resets when</span>
<span class="p_add">+	 * asked to via the XHCI interface, and may end up doing DMA</span>
<span class="p_add">+	 * at the wrong addresses, as it keeps the top 32bit of some</span>
<span class="p_add">+	 * addresses from its previous programming under obscure</span>
<span class="p_add">+	 * circumstances.</span>
<span class="p_add">+	 * Give it a good wack at probe time. Unfortunately, this</span>
<span class="p_add">+	 * needs to happen before we&#39;ve had a chance to discover any</span>
<span class="p_add">+	 * quirk, or the system will be in a rather bad state.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	if (pdev-&gt;vendor == PCI_VENDOR_ID_RENESAS &amp;&amp;</span>
<span class="p_add">+	    (pdev-&gt;device == 0x0014 || pdev-&gt;device == 0x0015))</span>
<span class="p_add">+		return true;</span>
<span class="p_add">+</span>
<span class="p_add">+	return false;</span>
<span class="p_add">+}</span>
<span class="p_add">+EXPORT_SYMBOL_GPL(usb_xhci_needs_pci_reset);</span>
<span class="p_header">diff --git a/drivers/usb/host/pci-quirks.h b/drivers/usb/host/pci-quirks.h</span>
<span class="p_header">index 655994480198..5582cbafecd4 100644</span>
<span class="p_header">--- a/drivers/usb/host/pci-quirks.h</span>
<span class="p_header">+++ b/drivers/usb/host/pci-quirks.h</span>
<span class="p_chunk">@@ -15,6 +15,7 @@</span> <span class="p_context"> void usb_asmedia_modifyflowcontrol(struct pci_dev *pdev);</span>
 void usb_enable_intel_xhci_ports(struct pci_dev *xhci_pdev);
 void usb_disable_xhci_ports(struct pci_dev *xhci_pdev);
 void sb800_prefetch(struct device *dev, int on);
<span class="p_add">+bool usb_xhci_needs_pci_reset(struct pci_dev *pdev);</span>
 #else
 struct pci_dev;
 static inline void usb_amd_quirk_pll_disable(void) {}
<span class="p_header">diff --git a/drivers/usb/host/xhci-pci.c b/drivers/usb/host/xhci-pci.c</span>
<span class="p_header">index 1ef622ededfd..cefa223f9f08 100644</span>
<span class="p_header">--- a/drivers/usb/host/xhci-pci.c</span>
<span class="p_header">+++ b/drivers/usb/host/xhci-pci.c</span>
<span class="p_chunk">@@ -285,6 +285,13 @@</span> <span class="p_context"> static int xhci_pci_probe(struct pci_dev *dev, const struct pci_device_id *id)</span>
 
 	driver = (struct hc_driver *)id-&gt;driver_data;
 
<span class="p_add">+	/* For some HW implementation, a XHCI reset is just not enough... */</span>
<span class="p_add">+	if (usb_xhci_needs_pci_reset(dev)) {</span>
<span class="p_add">+		dev_info(&amp;dev-&gt;dev, &quot;Resetting\n&quot;);</span>
<span class="p_add">+		if (pci_reset_function_locked(dev))</span>
<span class="p_add">+			dev_warn(&amp;dev-&gt;dev, &quot;Reset failed&quot;);</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	/* Prevent runtime suspending between USB-2 and USB-3 initialization */
 	pm_runtime_get_noresume(&amp;dev-&gt;dev);
 
<span class="p_header">diff --git a/drivers/usb/musb/musb_host.c b/drivers/usb/musb/musb_host.c</span>
<span class="p_header">index dbe617a735d8..8bb57f76829d 100644</span>
<span class="p_header">--- a/drivers/usb/musb/musb_host.c</span>
<span class="p_header">+++ b/drivers/usb/musb/musb_host.c</span>
<span class="p_chunk">@@ -139,6 +139,7 @@</span> <span class="p_context"> static void musb_h_tx_flush_fifo(struct musb_hw_ep *ep)</span>
 				&quot;Could not flush host TX%d fifo: csr: %04x\n&quot;,
 				ep-&gt;epnum, csr))
 			return;
<span class="p_add">+		mdelay(1);</span>
 	}
 }
 
<span class="p_header">diff --git a/drivers/usb/renesas_usbhs/rcar3.c b/drivers/usb/renesas_usbhs/rcar3.c</span>
<span class="p_header">index d544b331c9f2..02b67abfc2a1 100644</span>
<span class="p_header">--- a/drivers/usb/renesas_usbhs/rcar3.c</span>
<span class="p_header">+++ b/drivers/usb/renesas_usbhs/rcar3.c</span>
<span class="p_chunk">@@ -20,9 +20,13 @@</span> <span class="p_context"></span>
 /* Low Power Status register (LPSTS) */
 #define LPSTS_SUSPM	0x4000
 
<span class="p_del">-/* USB General control register 2 (UGCTRL2), bit[31:6] should be 0 */</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * USB General control register 2 (UGCTRL2)</span>
<span class="p_add">+ * Remarks: bit[31:11] and bit[9:6] should be 0</span>
<span class="p_add">+ */</span>
 #define UGCTRL2_RESERVED_3	0x00000001	/* bit[3:0] should be B&#39;0001 */
 #define UGCTRL2_USB0SEL_OTG	0x00000030
<span class="p_add">+#define UGCTRL2_VBUSSEL		0x00000400</span>
 
 static void usbhs_write32(struct usbhs_priv *priv, u32 reg, u32 data)
 {
<span class="p_chunk">@@ -34,7 +38,8 @@</span> <span class="p_context"> static int usbhs_rcar3_power_ctrl(struct platform_device *pdev,</span>
 {
 	struct usbhs_priv *priv = usbhs_pdev_to_priv(pdev);
 
<span class="p_del">-	usbhs_write32(priv, UGCTRL2, UGCTRL2_RESERVED_3 | UGCTRL2_USB0SEL_OTG);</span>
<span class="p_add">+	usbhs_write32(priv, UGCTRL2, UGCTRL2_RESERVED_3 | UGCTRL2_USB0SEL_OTG |</span>
<span class="p_add">+		      UGCTRL2_VBUSSEL);</span>
 
 	if (enable) {
 		usbhs_bset(priv, LPSTS, LPSTS_SUSPM, LPSTS_SUSPM);
<span class="p_header">diff --git a/drivers/usb/serial/cp210x.c b/drivers/usb/serial/cp210x.c</span>
<span class="p_header">index f64e914a8985..2d945c9f975c 100644</span>
<span class="p_header">--- a/drivers/usb/serial/cp210x.c</span>
<span class="p_header">+++ b/drivers/usb/serial/cp210x.c</span>
<span class="p_chunk">@@ -142,6 +142,7 @@</span> <span class="p_context"> static const struct usb_device_id id_table[] = {</span>
 	{ USB_DEVICE(0x10C4, 0x8998) }, /* KCF Technologies PRN */
 	{ USB_DEVICE(0x10C4, 0x8A2A) }, /* HubZ dual ZigBee and Z-Wave dongle */
 	{ USB_DEVICE(0x10C4, 0x8A5E) }, /* CEL EM3588 ZigBee USB Stick Long Range */
<span class="p_add">+	{ USB_DEVICE(0x10C4, 0x8B34) }, /* Qivicon ZigBee USB Radio Stick */</span>
 	{ USB_DEVICE(0x10C4, 0xEA60) }, /* Silicon Labs factory default */
 	{ USB_DEVICE(0x10C4, 0xEA61) }, /* Silicon Labs factory default */
 	{ USB_DEVICE(0x10C4, 0xEA70) }, /* Silicon Labs factory default */
<span class="p_header">diff --git a/drivers/usb/serial/option.c b/drivers/usb/serial/option.c</span>
<span class="p_header">index ebe51f11105d..fe123153b1a5 100644</span>
<span class="p_header">--- a/drivers/usb/serial/option.c</span>
<span class="p_header">+++ b/drivers/usb/serial/option.c</span>
<span class="p_chunk">@@ -2025,6 +2025,8 @@</span> <span class="p_context"> static const struct usb_device_id option_ids[] = {</span>
 	{ USB_DEVICE_INTERFACE_CLASS(0x2001, 0x7d04, 0xff) },			/* D-Link DWM-158 */
 	{ USB_DEVICE_INTERFACE_CLASS(0x2001, 0x7e19, 0xff),			/* D-Link DWM-221 B1 */
 	  .driver_info = (kernel_ulong_t)&amp;net_intf4_blacklist },
<span class="p_add">+	{ USB_DEVICE_INTERFACE_CLASS(0x2001, 0x7e35, 0xff),			/* D-Link DWM-222 */</span>
<span class="p_add">+	  .driver_info = (kernel_ulong_t)&amp;net_intf4_blacklist },</span>
 	{ USB_DEVICE_AND_INTERFACE_INFO(0x07d1, 0x3e01, 0xff, 0xff, 0xff) }, /* D-Link DWM-152/C1 */
 	{ USB_DEVICE_AND_INTERFACE_INFO(0x07d1, 0x3e02, 0xff, 0xff, 0xff) }, /* D-Link DWM-156/C1 */
 	{ USB_DEVICE_AND_INTERFACE_INFO(0x07d1, 0x7e11, 0xff, 0xff, 0xff) }, /* D-Link DWM-156/A3 */
<span class="p_header">diff --git a/drivers/usb/serial/pl2303.c b/drivers/usb/serial/pl2303.c</span>
<span class="p_header">index c9ebefd8f35f..a585b477415d 100644</span>
<span class="p_header">--- a/drivers/usb/serial/pl2303.c</span>
<span class="p_header">+++ b/drivers/usb/serial/pl2303.c</span>
<span class="p_chunk">@@ -52,6 +52,8 @@</span> <span class="p_context"> static const struct usb_device_id id_table[] = {</span>
 	{ USB_DEVICE(IODATA_VENDOR_ID, IODATA_PRODUCT_ID_RSAQ5) },
 	{ USB_DEVICE(ATEN_VENDOR_ID, ATEN_PRODUCT_ID),
 		.driver_info = PL2303_QUIRK_ENDPOINT_HACK },
<span class="p_add">+	{ USB_DEVICE(ATEN_VENDOR_ID, ATEN_PRODUCT_UC485),</span>
<span class="p_add">+		.driver_info = PL2303_QUIRK_ENDPOINT_HACK },</span>
 	{ USB_DEVICE(ATEN_VENDOR_ID, ATEN_PRODUCT_ID2) },
 	{ USB_DEVICE(ATEN_VENDOR_ID2, ATEN_PRODUCT_ID) },
 	{ USB_DEVICE(ELCOM_VENDOR_ID, ELCOM_PRODUCT_ID) },
<span class="p_header">diff --git a/drivers/usb/serial/pl2303.h b/drivers/usb/serial/pl2303.h</span>
<span class="p_header">index 09d9be88209e..3b5a15d1dc0d 100644</span>
<span class="p_header">--- a/drivers/usb/serial/pl2303.h</span>
<span class="p_header">+++ b/drivers/usb/serial/pl2303.h</span>
<span class="p_chunk">@@ -27,6 +27,7 @@</span> <span class="p_context"></span>
 #define ATEN_VENDOR_ID		0x0557
 #define ATEN_VENDOR_ID2		0x0547
 #define ATEN_PRODUCT_ID		0x2008
<span class="p_add">+#define ATEN_PRODUCT_UC485	0x2021</span>
 #define ATEN_PRODUCT_ID2	0x2118
 
 #define IODATA_VENDOR_ID	0x04bb
<span class="p_header">diff --git a/drivers/usb/storage/unusual_uas.h b/drivers/usb/storage/unusual_uas.h</span>
<span class="p_header">index cbea9f329e71..cde115359793 100644</span>
<span class="p_header">--- a/drivers/usb/storage/unusual_uas.h</span>
<span class="p_header">+++ b/drivers/usb/storage/unusual_uas.h</span>
<span class="p_chunk">@@ -124,9 +124,9 @@</span> <span class="p_context"> UNUSUAL_DEV(0x0bc2, 0xab2a, 0x0000, 0x9999,</span>
 /* Reported-by: Benjamin Tissoires &lt;benjamin.tissoires@redhat.com&gt; */
 UNUSUAL_DEV(0x13fd, 0x3940, 0x0000, 0x9999,
 		&quot;Initio Corporation&quot;,
<span class="p_del">-		&quot;&quot;,</span>
<span class="p_add">+		&quot;INIC-3069&quot;,</span>
 		USB_SC_DEVICE, USB_PR_DEVICE, NULL,
<span class="p_del">-		US_FL_NO_ATA_1X),</span>
<span class="p_add">+		US_FL_NO_ATA_1X | US_FL_IGNORE_RESIDUE),</span>
 
 /* Reported-by: Tom Arild Naess &lt;tanaess@gmail.com&gt; */
 UNUSUAL_DEV(0x152d, 0x0539, 0x0000, 0x9999,
<span class="p_header">diff --git a/drivers/usb/storage/usb.c b/drivers/usb/storage/usb.c</span>
<span class="p_header">index 06615934fed1..0dceb9fa3a06 100644</span>
<span class="p_header">--- a/drivers/usb/storage/usb.c</span>
<span class="p_header">+++ b/drivers/usb/storage/usb.c</span>
<span class="p_chunk">@@ -315,6 +315,7 @@</span> <span class="p_context"> static int usb_stor_control_thread(void * __us)</span>
 {
 	struct us_data *us = (struct us_data *)__us;
 	struct Scsi_Host *host = us_to_host(us);
<span class="p_add">+	struct scsi_cmnd *srb;</span>
 
 	for (;;) {
 		usb_stor_dbg(us, &quot;*** thread sleeping\n&quot;);
<span class="p_chunk">@@ -330,6 +331,7 @@</span> <span class="p_context"> static int usb_stor_control_thread(void * __us)</span>
 		scsi_lock(host);
 
 		/* When we are called with no command pending, we&#39;re done */
<span class="p_add">+		srb = us-&gt;srb;</span>
 		if (us-&gt;srb == NULL) {
 			scsi_unlock(host);
 			mutex_unlock(&amp;us-&gt;dev_mutex);
<span class="p_chunk">@@ -398,14 +400,11 @@</span> <span class="p_context"> static int usb_stor_control_thread(void * __us)</span>
 		/* lock access to the state */
 		scsi_lock(host);
 
<span class="p_del">-		/* indicate that the command is done */</span>
<span class="p_del">-		if (us-&gt;srb-&gt;result != DID_ABORT &lt;&lt; 16) {</span>
<span class="p_del">-			usb_stor_dbg(us, &quot;scsi cmd done, result=0x%x\n&quot;,</span>
<span class="p_del">-				     us-&gt;srb-&gt;result);</span>
<span class="p_del">-			us-&gt;srb-&gt;scsi_done(us-&gt;srb);</span>
<span class="p_del">-		} else {</span>
<span class="p_add">+		/* was the command aborted? */</span>
<span class="p_add">+		if (us-&gt;srb-&gt;result == DID_ABORT &lt;&lt; 16) {</span>
 SkipForAbort:
 			usb_stor_dbg(us, &quot;scsi command aborted\n&quot;);
<span class="p_add">+			srb = NULL;	/* Don&#39;t call srb-&gt;scsi_done() */</span>
 		}
 
 		/*
<span class="p_chunk">@@ -429,6 +428,13 @@</span> <span class="p_context"> static int usb_stor_control_thread(void * __us)</span>
 
 		/* unlock the device pointers */
 		mutex_unlock(&amp;us-&gt;dev_mutex);
<span class="p_add">+</span>
<span class="p_add">+		/* now that the locks are released, notify the SCSI core */</span>
<span class="p_add">+		if (srb) {</span>
<span class="p_add">+			usb_stor_dbg(us, &quot;scsi cmd done, result=0x%x\n&quot;,</span>
<span class="p_add">+					srb-&gt;result);</span>
<span class="p_add">+			srb-&gt;scsi_done(srb);</span>
<span class="p_add">+		}</span>
 	} /* for (;;) */
 
 	/* Wait until we are told to stop */
<span class="p_header">diff --git a/fs/fuse/file.c b/fs/fuse/file.c</span>
<span class="p_header">index 3ee4fdc3da9e..76eac2a554c4 100644</span>
<span class="p_header">--- a/fs/fuse/file.c</span>
<span class="p_header">+++ b/fs/fuse/file.c</span>
<span class="p_chunk">@@ -46,7 +46,7 @@</span> <span class="p_context"> struct fuse_file *fuse_file_alloc(struct fuse_conn *fc)</span>
 {
 	struct fuse_file *ff;
 
<span class="p_del">-	ff = kmalloc(sizeof(struct fuse_file), GFP_KERNEL);</span>
<span class="p_add">+	ff = kzalloc(sizeof(struct fuse_file), GFP_KERNEL);</span>
 	if (unlikely(!ff))
 		return NULL;
 
<span class="p_header">diff --git a/fs/nfs/Kconfig b/fs/nfs/Kconfig</span>
<span class="p_header">index 69d02cf8cf37..5f93cfacb3d1 100644</span>
<span class="p_header">--- a/fs/nfs/Kconfig</span>
<span class="p_header">+++ b/fs/nfs/Kconfig</span>
<span class="p_chunk">@@ -121,6 +121,7 @@</span> <span class="p_context"> config PNFS_FILE_LAYOUT</span>
 config PNFS_BLOCK
 	tristate
 	depends on NFS_V4_1 &amp;&amp; BLK_DEV_DM
<span class="p_add">+	depends on 64BIT || LBDAF</span>
 	default NFS_V4
 
 config PNFS_FLEXFILE_LAYOUT
<span class="p_header">diff --git a/fs/nfs/flexfilelayout/flexfilelayoutdev.c b/fs/nfs/flexfilelayout/flexfilelayoutdev.c</span>
<span class="p_header">index 6df7a0cf5660..f32c58bbe556 100644</span>
<span class="p_header">--- a/fs/nfs/flexfilelayout/flexfilelayoutdev.c</span>
<span class="p_header">+++ b/fs/nfs/flexfilelayout/flexfilelayoutdev.c</span>
<span class="p_chunk">@@ -32,6 +32,7 @@</span> <span class="p_context"> void nfs4_ff_layout_free_deviceid(struct nfs4_ff_layout_ds *mirror_ds)</span>
 {
 	nfs4_print_deviceid(&amp;mirror_ds-&gt;id_node.deviceid);
 	nfs4_pnfs_ds_put(mirror_ds-&gt;ds);
<span class="p_add">+	kfree(mirror_ds-&gt;ds_versions);</span>
 	kfree_rcu(mirror_ds, id_node.rcu);
 }
 
<span class="p_header">diff --git a/fs/xfs/xfs_log_cil.c b/fs/xfs/xfs_log_cil.c</span>
<span class="p_header">index 82f1cbcc4de1..1f53dc23aebe 100644</span>
<span class="p_header">--- a/fs/xfs/xfs_log_cil.c</span>
<span class="p_header">+++ b/fs/xfs/xfs_log_cil.c</span>
<span class="p_chunk">@@ -519,6 +519,7 @@</span> <span class="p_context"> xlog_discard_endio(</span>
 
 	INIT_WORK(&amp;ctx-&gt;discard_endio_work, xlog_discard_endio_work);
 	queue_work(xfs_discard_wq, &amp;ctx-&gt;discard_endio_work);
<span class="p_add">+	bio_put(bio);</span>
 }
 
 static void
<span class="p_header">diff --git a/include/linux/iio/common/st_sensors.h b/include/linux/iio/common/st_sensors.h</span>
<span class="p_header">index 497f2b3a5a62..97f1b465d04f 100644</span>
<span class="p_header">--- a/include/linux/iio/common/st_sensors.h</span>
<span class="p_header">+++ b/include/linux/iio/common/st_sensors.h</span>
<span class="p_chunk">@@ -105,6 +105,11 @@</span> <span class="p_context"> struct st_sensor_fullscale {</span>
 	struct st_sensor_fullscale_avl fs_avl[ST_SENSORS_FULLSCALE_AVL_MAX];
 };
 
<span class="p_add">+struct st_sensor_sim {</span>
<span class="p_add">+	u8 addr;</span>
<span class="p_add">+	u8 value;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 /**
  * struct st_sensor_bdu - ST sensor device block data update
  * @addr: address of the register.
<span class="p_chunk">@@ -197,6 +202,7 @@</span> <span class="p_context"> struct st_sensor_transfer_function {</span>
  * @bdu: Block data update register.
  * @das: Data Alignment Selection register.
  * @drdy_irq: Data ready register of the sensor.
<span class="p_add">+ * @sim: SPI serial interface mode register of the sensor.</span>
  * @multi_read_bit: Use or not particular bit for [I2C/SPI] multi-read.
  * @bootime: samples to discard when sensor passing from power-down to power-up.
  */
<span class="p_chunk">@@ -213,6 +219,7 @@</span> <span class="p_context"> struct st_sensor_settings {</span>
 	struct st_sensor_bdu bdu;
 	struct st_sensor_das das;
 	struct st_sensor_data_ready_irq drdy_irq;
<span class="p_add">+	struct st_sensor_sim sim;</span>
 	bool multi_read_bit;
 	unsigned int bootime;
 };
<span class="p_header">diff --git a/include/linux/mtd/nand.h b/include/linux/mtd/nand.h</span>
<span class="p_header">index 8f67b1581683..a3ebb64b1cf4 100644</span>
<span class="p_header">--- a/include/linux/mtd/nand.h</span>
<span class="p_header">+++ b/include/linux/mtd/nand.h</span>
<span class="p_chunk">@@ -638,10 +638,10 @@</span> <span class="p_context"> struct nand_buffers {</span>
  * @tWW_min: WP# transition to WE# low
  */
 struct nand_sdr_timings {
<span class="p_del">-	u32 tBERS_max;</span>
<span class="p_add">+	u64 tBERS_max;</span>
 	u32 tCCS_min;
<span class="p_del">-	u32 tPROG_max;</span>
<span class="p_del">-	u32 tR_max;</span>
<span class="p_add">+	u64 tPROG_max;</span>
<span class="p_add">+	u64 tR_max;</span>
 	u32 tALH_min;
 	u32 tADL_min;
 	u32 tALS_min;
<span class="p_header">diff --git a/include/linux/pci.h b/include/linux/pci.h</span>
<span class="p_header">index 8039f9f0ca05..16be18678ca1 100644</span>
<span class="p_header">--- a/include/linux/pci.h</span>
<span class="p_header">+++ b/include/linux/pci.h</span>
<span class="p_chunk">@@ -1049,6 +1049,7 @@</span> <span class="p_context"> void pcie_flr(struct pci_dev *dev);</span>
 int __pci_reset_function(struct pci_dev *dev);
 int __pci_reset_function_locked(struct pci_dev *dev);
 int pci_reset_function(struct pci_dev *dev);
<span class="p_add">+int pci_reset_function_locked(struct pci_dev *dev);</span>
 int pci_try_reset_function(struct pci_dev *dev);
 int pci_probe_reset_slot(struct pci_slot *slot);
 int pci_reset_slot(struct pci_slot *slot);
<span class="p_header">diff --git a/include/linux/platform_data/st_sensors_pdata.h b/include/linux/platform_data/st_sensors_pdata.h</span>
<span class="p_header">index 79b0e4cdb814..f8274b0c6888 100644</span>
<span class="p_header">--- a/include/linux/platform_data/st_sensors_pdata.h</span>
<span class="p_header">+++ b/include/linux/platform_data/st_sensors_pdata.h</span>
<span class="p_chunk">@@ -17,10 +17,12 @@</span> <span class="p_context"></span>
  *	Available only for accelerometer and pressure sensors.
  *	Accelerometer DRDY on LSM330 available only on pin 1 (see datasheet).
  * @open_drain: set the interrupt line to be open drain if possible.
<span class="p_add">+ * @spi_3wire: enable spi-3wire mode.</span>
  */
 struct st_sensors_platform_data {
 	u8 drdy_int_pin;
 	bool open_drain;
<span class="p_add">+	bool spi_3wire;</span>
 };
 
 #endif /* ST_SENSORS_PDATA_H */
<span class="p_header">diff --git a/include/target/iscsi/iscsi_target_core.h b/include/target/iscsi/iscsi_target_core.h</span>
<span class="p_header">index 1628cc34b357..ed766dcb9cb7 100644</span>
<span class="p_header">--- a/include/target/iscsi/iscsi_target_core.h</span>
<span class="p_header">+++ b/include/target/iscsi/iscsi_target_core.h</span>
<span class="p_chunk">@@ -787,6 +787,7 @@</span> <span class="p_context"> struct iscsi_np {</span>
 	int			np_sock_type;
 	enum np_thread_state_table np_thread_state;
 	bool                    enabled;
<span class="p_add">+	atomic_t		np_reset_count;</span>
 	enum iscsi_timer_flags_table np_login_timer_flags;
 	u32			np_exports;
 	enum np_flags_table	np_flags;
<span class="p_header">diff --git a/kernel/futex.c b/kernel/futex.c</span>
<span class="p_header">index 357348a6cf6b..bb8b5a9fcdd5 100644</span>
<span class="p_header">--- a/kernel/futex.c</span>
<span class="p_header">+++ b/kernel/futex.c</span>
<span class="p_chunk">@@ -670,13 +670,14 @@</span> <span class="p_context"> get_futex_key(u32 __user *uaddr, int fshared, union futex_key *key, int rw)</span>
 		 * this reference was taken by ihold under the page lock
 		 * pinning the inode in place so i_lock was unnecessary. The
 		 * only way for this check to fail is if the inode was
<span class="p_del">-		 * truncated in parallel so warn for now if this happens.</span>
<span class="p_add">+		 * truncated in parallel which is almost certainly an</span>
<span class="p_add">+		 * application bug. In such a case, just retry.</span>
 		 *
 		 * We are not calling into get_futex_key_refs() in file-backed
 		 * cases, therefore a successful atomic_inc return below will
 		 * guarantee that get_futex_key() will still imply smp_mb(); (B).
 		 */
<span class="p_del">-		if (WARN_ON_ONCE(!atomic_inc_not_zero(&amp;inode-&gt;i_count))) {</span>
<span class="p_add">+		if (!atomic_inc_not_zero(&amp;inode-&gt;i_count)) {</span>
 			rcu_read_unlock();
 			put_page(page);
 
<span class="p_header">diff --git a/mm/page_alloc.c b/mm/page_alloc.c</span>
<span class="p_header">index 2302f250d6b1..07569fa25760 100644</span>
<span class="p_header">--- a/mm/page_alloc.c</span>
<span class="p_header">+++ b/mm/page_alloc.c</span>
<span class="p_chunk">@@ -7567,7 +7567,7 @@</span> <span class="p_context"> int alloc_contig_range(unsigned long start, unsigned long end,</span>
 
 	/* Make sure the range is really isolated. */
 	if (test_pages_isolated(outer_start, end, false)) {
<span class="p_del">-		pr_info(&quot;%s: [%lx, %lx) PFNs busy\n&quot;,</span>
<span class="p_add">+		pr_info_ratelimited(&quot;%s: [%lx, %lx) PFNs busy\n&quot;,</span>
 			__func__, outer_start, end);
 		ret = -EBUSY;
 		goto done;
<span class="p_header">diff --git a/mm/shmem.c b/mm/shmem.c</span>
<span class="p_header">index e67d6ba4e98e..1183e898743b 100644</span>
<span class="p_header">--- a/mm/shmem.c</span>
<span class="p_header">+++ b/mm/shmem.c</span>
<span class="p_chunk">@@ -1021,7 +1021,11 @@</span> <span class="p_context"> static int shmem_setattr(struct dentry *dentry, struct iattr *attr)</span>
 			 */
 			if (IS_ENABLED(CONFIG_TRANSPARENT_HUGE_PAGECACHE)) {
 				spin_lock(&amp;sbinfo-&gt;shrinklist_lock);
<span class="p_del">-				if (list_empty(&amp;info-&gt;shrinklist)) {</span>
<span class="p_add">+				/*</span>
<span class="p_add">+				 * _careful to defend against unlocked access to</span>
<span class="p_add">+				 * -&gt;shrink_list in shmem_unused_huge_shrink()</span>
<span class="p_add">+				 */</span>
<span class="p_add">+				if (list_empty_careful(&amp;info-&gt;shrinklist)) {</span>
 					list_add_tail(&amp;info-&gt;shrinklist,
 							&amp;sbinfo-&gt;shrinklist);
 					sbinfo-&gt;shrinklist_len++;
<span class="p_chunk">@@ -1817,7 +1821,11 @@</span> <span class="p_context"> alloc_nohuge:		page = shmem_alloc_and_acct_page(gfp, info, sbinfo,</span>
 			 * to shrink under memory pressure.
 			 */
 			spin_lock(&amp;sbinfo-&gt;shrinklist_lock);
<span class="p_del">-			if (list_empty(&amp;info-&gt;shrinklist)) {</span>
<span class="p_add">+			/*</span>
<span class="p_add">+			 * _careful to defend against unlocked access to</span>
<span class="p_add">+			 * -&gt;shrink_list in shmem_unused_huge_shrink()</span>
<span class="p_add">+			 */</span>
<span class="p_add">+			if (list_empty_careful(&amp;info-&gt;shrinklist)) {</span>
 				list_add_tail(&amp;info-&gt;shrinklist,
 						&amp;sbinfo-&gt;shrinklist);
 				sbinfo-&gt;shrinklist_len++;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



