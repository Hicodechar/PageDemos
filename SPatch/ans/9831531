
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/2] sparc64: Use cpu_poke to resume idle cpu - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/2] sparc64: Use cpu_poke to resume idle cpu</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=150101">Vijay Kumar</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 8, 2017, 8:23 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1499545424-415240-3-git-send-email-vijay.ac.kumar@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9831531/mbox/"
   >mbox</a>
|
   <a href="/patch/9831531/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9831531/">/patch/9831531/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	1D31D603B5 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat,  8 Jul 2017 20:24:10 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 0C5F627F86
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat,  8 Jul 2017 20:24:10 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id EE97028399; Sat,  8 Jul 2017 20:24:09 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	UNPARSEABLE_RELAY autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7C34F27F86
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat,  8 Jul 2017 20:24:09 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753170AbdGHUX7 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sat, 8 Jul 2017 16:23:59 -0400
Received: from userp1040.oracle.com ([156.151.31.81]:50455 &quot;EHLO
	userp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753090AbdGHUX4 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sat, 8 Jul 2017 16:23:56 -0400
Received: from userv0022.oracle.com (userv0022.oracle.com [156.151.31.74])
	by userp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2) with
	ESMTP id v68KNqJ3007797
	(version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Sat, 8 Jul 2017 20:23:53 GMT
Received: from userv0122.oracle.com (userv0122.oracle.com [156.151.31.75])
	by userv0022.oracle.com (8.14.4/8.14.4) with ESMTP id v68KNqxv001766
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Sat, 8 Jul 2017 20:23:52 GMT
Received: from abhmp0005.oracle.com (abhmp0005.oracle.com [141.146.116.11])
	by userv0122.oracle.com (8.14.4/8.14.4) with ESMTP id
	v68KNqMI027086; Sat, 8 Jul 2017 20:23:52 GMT
Received: from ca-sparc60.us.oracle.com (/10.147.24.150)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Sat, 08 Jul 2017 13:23:51 -0700
From: Vijay Kumar &lt;vijay.ac.kumar@oracle.com&gt;
To: davem@davemloft.net, sparclinux@vger.kernel.org
Cc: rob.gardner@oracle.com, anthony.yznaga@oracle.com,
	linux-kernel@vger.kernel.org
Subject: [PATCH 2/2] sparc64: Use cpu_poke to resume idle cpu
Date: Sat,  8 Jul 2017 14:23:44 -0600
Message-Id: &lt;1499545424-415240-3-git-send-email-vijay.ac.kumar@oracle.com&gt;
X-Mailer: git-send-email 1.7.1
In-Reply-To: &lt;1499545424-415240-1-git-send-email-vijay.ac.kumar@oracle.com&gt;
References: &lt;1499545424-415240-1-git-send-email-vijay.ac.kumar@oracle.com&gt;
X-Source-IP: userv0022.oracle.com [156.151.31.74]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=150101">Vijay Kumar</a> - July 8, 2017, 8:23 p.m.</div>
<pre class="content">
Use cpu_poke hypervisor call to resume idle cpu if supported.
<span class="signed-off-by">
Signed-off-by: Vijay Kumar &lt;vijay.ac.kumar@oracle.com&gt;</span>
<span class="reviewed-by">Reviewed-by: Anthony Yznaga &lt;anthony.yznaga@oracle.com&gt;</span>
---
 arch/sparc/include/asm/smp_64.h |    5 ++
 arch/sparc/kernel/hvapi.c       |    2 +-
 arch/sparc/kernel/process_64.c  |    7 +++-
 arch/sparc/kernel/setup_64.c    |    1 +
 arch/sparc/kernel/smp_64.c      |   80 +++++++++++++++++++++++++++++++++++++-
 5 files changed, 90 insertions(+), 5 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=129">David Miller</a> - July 20, 2017, 7:58 p.m.</div>
<pre class="content">
<span class="from">From: Vijay Kumar &lt;vijay.ac.kumar@oracle.com&gt;</span>
Date: Sat,  8 Jul 2017 14:23:44 -0600
<span class="quote">
&gt; diff --git a/arch/sparc/kernel/hvapi.c b/arch/sparc/kernel/hvapi.c</span>
<span class="quote">&gt; index 2677312..0b070d5 100644</span>
<span class="quote">&gt; --- a/arch/sparc/kernel/hvapi.c</span>
<span class="quote">&gt; +++ b/arch/sparc/kernel/hvapi.c</span>
<span class="quote">&gt; @@ -189,7 +189,7 @@ void __init sun4v_hvapi_init(void)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	group = HV_GRP_CORE;</span>
<span class="quote">&gt;  	major = 1;</span>
<span class="quote">&gt; -	minor = 1;</span>
<span class="quote">&gt; +	minor = 6; /* CPU POKE */</span>
<span class="quote">&gt;  	if (sun4v_hvapi_register(group, major, &amp;minor))</span>
<span class="quote">&gt;  		goto bad;</span>

That CPU POKE comment will not stand the test of time, please remove it.
<span class="quote">
&gt; +	/* Use cpu poke to resume idle cpu if supported*/</span>

Please put a space at the end of the comment and before the &quot;*/&quot;
<span class="quote">
&gt; +		/*cpu poke is registered. */</span>

Please put a space at the beginning of the comment.

And you should decide which way you want to consistently write.
Either capitalize the first word and finish the sentence with
a &#39;.&#39;, or don&#39;t.  Do it the same way each time.

Thanks.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=150101">Vijay Kumar</a> - July 21, 2017, 2:47 a.m.</div>
<pre class="content">
On 7/20/2017 2:58 PM, David Miller wrote:
<span class="quote">&gt; From: Vijay Kumar &lt;vijay.ac.kumar@oracle.com&gt;</span>
<span class="quote">&gt; Date: Sat,  8 Jul 2017 14:23:44 -0600</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; diff --git a/arch/sparc/kernel/hvapi.c b/arch/sparc/kernel/hvapi.c</span>
<span class="quote">&gt;&gt; index 2677312..0b070d5 100644</span>
<span class="quote">&gt;&gt; --- a/arch/sparc/kernel/hvapi.c</span>
<span class="quote">&gt;&gt; +++ b/arch/sparc/kernel/hvapi.c</span>
<span class="quote">&gt;&gt; @@ -189,7 +189,7 @@ void __init sun4v_hvapi_init(void)</span>
<span class="quote">&gt;&gt;   </span>
<span class="quote">&gt;&gt;   	group = HV_GRP_CORE;</span>
<span class="quote">&gt;&gt;   	major = 1;</span>
<span class="quote">&gt;&gt; -	minor = 1;</span>
<span class="quote">&gt;&gt; +	minor = 6; /* CPU POKE */</span>
<span class="quote">&gt;&gt;   	if (sun4v_hvapi_register(group, major, &amp;minor))</span>
<span class="quote">&gt;&gt;   		goto bad;</span>
<span class="quote">&gt; That CPU POKE comment will not stand the test of time, please remove it.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; +	/* Use cpu poke to resume idle cpu if supported*/</span>
<span class="quote">&gt; Please put a space at the end of the comment and before the &quot;*/&quot;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; +		/*cpu poke is registered. */</span>
<span class="quote">&gt; Please put a space at the beginning of the comment.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; And you should decide which way you want to consistently write.</span>
<span class="quote">&gt; Either capitalize the first word and finish the sentence with</span>
<span class="quote">&gt; a &#39;.&#39;, or don&#39;t.  Do it the same way each time.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Thanks.</span>
Sure, I will fix these in v2.

Thanks,
-Vijay
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/sparc/include/asm/smp_64.h b/arch/sparc/include/asm/smp_64.h</span>
<span class="p_header">index ce2233f..a750892 100644</span>
<span class="p_header">--- a/arch/sparc/include/asm/smp_64.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/smp_64.h</span>
<span class="p_chunk">@@ -33,6 +33,9 @@</span> <span class="p_context"></span>
 DECLARE_PER_CPU(cpumask_t, cpu_sibling_map);
 extern cpumask_t cpu_core_map[NR_CPUS];
 
<span class="p_add">+void smp_init_cpu_poke(void);</span>
<span class="p_add">+void scheduler_poke(void);</span>
<span class="p_add">+</span>
 void arch_send_call_function_single_ipi(int cpu);
 void arch_send_call_function_ipi_mask(const struct cpumask *mask);
 
<span class="p_chunk">@@ -74,6 +77,8 @@</span> <span class="p_context"></span>
 #define smp_fetch_global_regs() do { } while (0)
 #define smp_fetch_global_pmu() do { } while (0)
 #define smp_fill_in_cpu_possible_map() do { } while (0)
<span class="p_add">+#define smp_init_cpu_poke() do { } while (0)</span>
<span class="p_add">+#define scheduler_poke() do { } while (0)</span>
 
 #endif /* !(CONFIG_SMP) */
 
<span class="p_header">diff --git a/arch/sparc/kernel/hvapi.c b/arch/sparc/kernel/hvapi.c</span>
<span class="p_header">index 2677312..0b070d5 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/hvapi.c</span>
<span class="p_header">+++ b/arch/sparc/kernel/hvapi.c</span>
<span class="p_chunk">@@ -189,7 +189,7 @@</span> <span class="p_context"> void __init sun4v_hvapi_init(void)</span>
 
 	group = HV_GRP_CORE;
 	major = 1;
<span class="p_del">-	minor = 1;</span>
<span class="p_add">+	minor = 6; /* CPU POKE */</span>
 	if (sun4v_hvapi_register(group, major, &amp;minor))
 		goto bad;
 
<span class="p_header">diff --git a/arch/sparc/kernel/process_64.c b/arch/sparc/kernel/process_64.c</span>
<span class="p_header">index 1badc49..92448af 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/process_64.c</span>
<span class="p_header">+++ b/arch/sparc/kernel/process_64.c</span>
<span class="p_chunk">@@ -77,8 +77,13 @@</span> <span class="p_context"> void arch_cpu_idle(void)</span>
 			: &quot;=&amp;r&quot; (pstate)
 			: &quot;i&quot; (PSTATE_IE));
 
<span class="p_del">-		if (!need_resched() &amp;&amp; !cpu_is_offline(smp_processor_id()))</span>
<span class="p_add">+		if (!need_resched() &amp;&amp; !cpu_is_offline(smp_processor_id())) {</span>
 			sun4v_cpu_yield();
<span class="p_add">+			/* If resumed by cpu_poke then we need to explicitly</span>
<span class="p_add">+			 * call scheduler_ipi().</span>
<span class="p_add">+			 */</span>
<span class="p_add">+			scheduler_poke();</span>
<span class="p_add">+		}</span>
 
 		/* Re-enable interrupts. */
 		__asm__ __volatile__(
<span class="p_header">diff --git a/arch/sparc/kernel/setup_64.c b/arch/sparc/kernel/setup_64.c</span>
<span class="p_header">index 422b178..4ff9fd8 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/setup_64.c</span>
<span class="p_header">+++ b/arch/sparc/kernel/setup_64.c</span>
<span class="p_chunk">@@ -356,6 +356,7 @@</span> <span class="p_context"> void __init start_early_boot(void)</span>
 	check_if_starfire();
 	per_cpu_patch();
 	sun4v_patch();
<span class="p_add">+	smp_init_cpu_poke();</span>
 
 	cpu = hard_smp_processor_id();
 	if (cpu &gt;= NR_CPUS) {
<span class="p_header">diff --git a/arch/sparc/kernel/smp_64.c b/arch/sparc/kernel/smp_64.c</span>
<span class="p_header">index fdf3104..9c3131b 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/smp_64.c</span>
<span class="p_header">+++ b/arch/sparc/kernel/smp_64.c</span>
<span class="p_chunk">@@ -74,6 +74,9 @@</span> <span class="p_context"></span>
 
 static cpumask_t smp_commenced_mask;
 
<span class="p_add">+static DEFINE_PER_CPU(bool, poke);</span>
<span class="p_add">+static bool cpu_poke;</span>
<span class="p_add">+</span>
 void smp_info(struct seq_file *m)
 {
 	int i;
<span class="p_chunk">@@ -1394,15 +1397,86 @@</span> <span class="p_context"> void __init smp_cpus_done(unsigned int max_cpus)</span>
 {
 }
 
<span class="p_add">+static void send_cpu_ipi(int cpu)</span>
<span class="p_add">+{</span>
<span class="p_add">+	xcall_deliver((u64) &amp;xcall_receive_signal,</span>
<span class="p_add">+			0, 0, cpumask_of(cpu));</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+void scheduler_poke(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if (!cpu_poke)</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (!__this_cpu_read(poke))</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	__this_cpu_write(poke, false);</span>
<span class="p_add">+	set_softint(1 &lt;&lt; PIL_SMP_RECEIVE_SIGNAL);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static unsigned long send_cpu_poke(int cpu)</span>
<span class="p_add">+{</span>
<span class="p_add">+	unsigned long hv_err;</span>
<span class="p_add">+</span>
<span class="p_add">+	per_cpu(poke, cpu) = true;</span>
<span class="p_add">+	hv_err = sun4v_cpu_poke(cpu);</span>
<span class="p_add">+	if (hv_err != HV_EOK) {</span>
<span class="p_add">+		per_cpu(poke, cpu) = false;</span>
<span class="p_add">+		pr_err_ratelimited(&quot;%s: sun4v_cpu_poke() fails err=%lu\n&quot;,</span>
<span class="p_add">+				    __func__, hv_err);</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	return hv_err;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 void smp_send_reschedule(int cpu)
 {
 	if (cpu == smp_processor_id()) {
 		WARN_ON_ONCE(preemptible());
 		set_softint(1 &lt;&lt; PIL_SMP_RECEIVE_SIGNAL);
<span class="p_del">-	} else {</span>
<span class="p_del">-		xcall_deliver((u64) &amp;xcall_receive_signal,</span>
<span class="p_del">-			      0, 0, cpumask_of(cpu));</span>
<span class="p_add">+		return;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	/* Use cpu poke to resume idle cpu if supported*/</span>
<span class="p_add">+	if (cpu_poke &amp;&amp; idle_cpu(cpu)) {</span>
<span class="p_add">+		unsigned long ret;</span>
<span class="p_add">+</span>
<span class="p_add">+		ret = send_cpu_poke(cpu);</span>
<span class="p_add">+		if (ret == HV_EOK)</span>
<span class="p_add">+			return;</span>
 	}
<span class="p_add">+</span>
<span class="p_add">+	/* Use IPI in following cases:</span>
<span class="p_add">+	 * - cpu poke not supported</span>
<span class="p_add">+	 * - cpu not idle</span>
<span class="p_add">+	 * - send_cpu_poke() returns with error.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	send_cpu_ipi(cpu);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+void smp_init_cpu_poke(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	unsigned long major;</span>
<span class="p_add">+	unsigned long minor;</span>
<span class="p_add">+	int ret;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (tlb_type != hypervisor)</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	ret = sun4v_hvapi_get(HV_GRP_CORE, &amp;major, &amp;minor);</span>
<span class="p_add">+	if (ret) {</span>
<span class="p_add">+		pr_debug(&quot;HV_GRP_CORE is not registered\n&quot;);</span>
<span class="p_add">+		return;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	if (major == 1 &amp;&amp; minor &gt;= 6) {</span>
<span class="p_add">+		/*cpu poke is registered. */</span>
<span class="p_add">+		cpu_poke = true;</span>
<span class="p_add">+		return;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	pr_debug(&quot;CPU_POKE not supported\n&quot;);</span>
 }
 
 void __irq_entry smp_receive_signal_client(int irq, struct pt_regs *regs)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



