
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC] meminfo: Break apart a very long seq_printf with #ifdefs - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC] meminfo: Break apart a very long seq_printf with #ifdefs</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=325">Joe Perches</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 10, 2016, 6:38 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;8fce7fdef2ba081a4ef531594e97da8a9feebb58.1470810406.git.joe@perches.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9273411/mbox/"
   >mbox</a>
|
   <a href="/patch/9273411/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9273411/">/patch/9273411/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	A654160231 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Aug 2016 18:25:08 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 97404280DE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Aug 2016 18:25:08 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 886B828413; Wed, 10 Aug 2016 18:25:08 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6CEF9280DE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Aug 2016 18:25:07 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S934599AbcHJSYw (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 10 Aug 2016 14:24:52 -0400
Received: from smtprelay0085.hostedemail.com ([216.40.44.85]:34045 &quot;EHLO
	smtprelay.hostedemail.com&quot; rhost-flags-OK-OK-OK-FAIL)
	by vger.kernel.org with ESMTP id S934353AbcHJSYt (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 10 Aug 2016 14:24:49 -0400
Received: from smtprelay.hostedemail.com (10.5.19.251.rfc1918.com
	[10.5.19.251])
	by smtpgrave01.hostedemail.com (Postfix) with ESMTP id 0790E5D856
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Wed, 10 Aug 2016 06:39:08 +0000 (UTC)
Received: from filter.hostedemail.com (unknown [216.40.38.60])
	by smtprelay02.hostedemail.com (Postfix) with ESMTP id 64C2212BA13;
	Wed, 10 Aug 2016 06:39:05 +0000 (UTC)
X-Session-Marker: 6A6F6540706572636865732E636F6D
X-HE-Tag: thumb96_14f95efbad736
X-Filterd-Recvd-Size: 9699
Received: from joe-laptop.perches.com (unknown [96.251.125.34])
	(Authenticated sender: joe@perches.com)
	by omf09.hostedemail.com (Postfix) with ESMTPA;
	Wed, 10 Aug 2016 06:39:04 +0000 (UTC)
From: Joe Perches &lt;joe@perches.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;, linux-kernel@vger.kernel.org
Cc: Andi Kleen &lt;andi@firstfloor.org&gt;, Alexey Dobriyan &lt;adobriyan@gmail.com&gt;,
	Al Viro &lt;viro@zeniv.linux.org.uk&gt;
Subject: [RFC PATCH] meminfo: Break apart a very long seq_printf with #ifdefs
Date: Tue,  9 Aug 2016 23:38:56 -0700
Message-Id: &lt;8fce7fdef2ba081a4ef531594e97da8a9feebb58.1470810406.git.joe@perches.com&gt;
X-Mailer: git-send-email 2.8.0.rc4.16.g56331f8
In-Reply-To: &lt;20160809162504.2db8051c15afd5618c4b7d7e@linux-foundation.org&gt;
References: &lt;20160809162504.2db8051c15afd5618c4b7d7e@linux-foundation.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=325">Joe Perches</a> - Aug. 10, 2016, 6:38 a.m.</div>
<pre class="content">
Use a specific routine to emit most lines so that the code is
easier to read and maintain.
<span class="signed-off-by">
Signed-off-by: Joe Perches &lt;joe@perches.com&gt;</span>
---

compiled but untested

 fs/proc/meminfo.c | 211 ++++++++++++++++++++++++------------------------------
 1 file changed, 95 insertions(+), 116 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41">Andrew Morton</a> - Aug. 11, 2016, 9:50 p.m.</div>
<pre class="content">
On Tue,  9 Aug 2016 23:38:56 -0700 Joe Perches &lt;joe@perches.com&gt; wrote:
<span class="quote">
&gt; Use a specific routine to emit most lines so that the code is</span>
<span class="quote">&gt; easier to read and maintain.</span>

huh.

   text    data     bss     dec     hex filename
   2976       8       0    2984     ba8 fs/proc/meminfo.o before
   2669       8       0    2677     a75 fs/proc/meminfo.o after

Nice.  I wonder why that happened.

Let&#39;s hope it works ;)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=325">Joe Perches</a> - Aug. 11, 2016, 9:57 p.m.</div>
<pre class="content">
On Thu, 2016-08-11 at 14:50 -0700, Andrew Morton wrote:
<span class="quote">&gt; On Tue,  9 Aug 2016 23:38:56 -0700 Joe Perches &lt;joe@perches.com&gt; wrote:</span>
<span class="quote">&gt; &gt; Use a specific routine to emit most lines so that the code is</span>
<span class="quote">&gt; &gt; easier to read and maintain.</span>
<span class="quote">&gt; huh.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;    text    data     bss     dec     hex filename</span>
<span class="quote">&gt;    2976       8       0    2984     ba8 fs/proc/meminfo.o before</span>
<span class="quote">&gt;    2669       8       0    2677     a75 fs/proc/meminfo.o after</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Nice.  I wonder why that happened.</span>

Fewer shifts via removal of K macro.
Much smaller call stack in seq_printf.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/fs/proc/meminfo.c b/fs/proc/meminfo.c</span>
<span class="p_header">index 09e18fd..c5073b8 100644</span>
<span class="p_header">--- a/fs/proc/meminfo.c</span>
<span class="p_header">+++ b/fs/proc/meminfo.c</span>
<span class="p_chunk">@@ -23,6 +23,25 @@</span> <span class="p_context"> void __attribute__((weak)) arch_report_meminfo(struct seq_file *m)</span>
 {
 }
 
<span class="p_add">+static void show_val_kb(struct seq_file *m, const char *s, unsigned long num)</span>
<span class="p_add">+{</span>
<span class="p_add">+	char v[32];</span>
<span class="p_add">+	static const char blanks[7] = {&#39; &#39;, &#39; &#39;, &#39; &#39;, &#39; &#39;,&#39; &#39;, &#39; &#39;, &#39; &#39;};</span>
<span class="p_add">+	int len;</span>
<span class="p_add">+</span>
<span class="p_add">+	len = num_to_str(v, sizeof(v), num &lt;&lt; (PAGE_SHIFT - 10));</span>
<span class="p_add">+</span>
<span class="p_add">+	seq_write(m, s, 16);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (len &gt; 0) {</span>
<span class="p_add">+		if (len &lt; 8)</span>
<span class="p_add">+			seq_write(m, blanks, 8 - len);</span>
<span class="p_add">+</span>
<span class="p_add">+		seq_write(m, v, len);</span>
<span class="p_add">+	}</span>
<span class="p_add">+	seq_write(m, &quot; kB\n&quot;, 4);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static int meminfo_proc_show(struct seq_file *m, void *v)
 {
 	struct sysinfo i;
<span class="p_chunk">@@ -32,10 +51,6 @@</span> <span class="p_context"> static int meminfo_proc_show(struct seq_file *m, void *v)</span>
 	unsigned long pages[NR_LRU_LISTS];
 	int lru;
 
<span class="p_del">-/*</span>
<span class="p_del">- * display in kilobytes.</span>
<span class="p_del">- */</span>
<span class="p_del">-#define K(x) ((x) &lt;&lt; (PAGE_SHIFT - 10))</span>
 	si_meminfo(&amp;i);
 	si_swapinfo(&amp;i);
 	committed = percpu_counter_read_positive(&amp;vm_committed_as);
<span class="p_chunk">@@ -50,136 +65,100 @@</span> <span class="p_context"> static int meminfo_proc_show(struct seq_file *m, void *v)</span>
 
 	available = si_mem_available();
 
<span class="p_del">-	/*</span>
<span class="p_del">-	 * Tagged format, for easy grepping and expansion.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	seq_printf(m,</span>
<span class="p_del">-		&quot;MemTotal:       %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;MemFree:        %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;MemAvailable:   %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Buffers:        %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Cached:         %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;SwapCached:     %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Active:         %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Inactive:       %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Active(anon):   %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Inactive(anon): %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Active(file):   %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Inactive(file): %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Unevictable:    %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Mlocked:        %8lu kB\n&quot;</span>
<span class="p_del">-#ifdef CONFIG_HIGHMEM</span>
<span class="p_del">-		&quot;HighTotal:      %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;HighFree:       %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;LowTotal:       %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;LowFree:        %8lu kB\n&quot;</span>
<span class="p_del">-#endif</span>
<span class="p_del">-#ifndef CONFIG_MMU</span>
<span class="p_del">-		&quot;MmapCopy:       %8lu kB\n&quot;</span>
<span class="p_del">-#endif</span>
<span class="p_del">-		&quot;SwapTotal:      %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;SwapFree:       %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Dirty:          %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Writeback:      %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;AnonPages:      %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Mapped:         %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Shmem:          %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Slab:           %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;SReclaimable:   %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;SUnreclaim:     %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;KernelStack:    %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;PageTables:     %8lu kB\n&quot;</span>
<span class="p_del">-#ifdef CONFIG_QUICKLIST</span>
<span class="p_del">-		&quot;Quicklists:     %8lu kB\n&quot;</span>
<span class="p_del">-#endif</span>
<span class="p_del">-		&quot;NFS_Unstable:   %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Bounce:         %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;WritebackTmp:   %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;CommitLimit:    %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;Committed_AS:   %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;VmallocTotal:   %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;VmallocUsed:    %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;VmallocChunk:   %8lu kB\n&quot;</span>
<span class="p_del">-#ifdef CONFIG_MEMORY_FAILURE</span>
<span class="p_del">-		&quot;HardwareCorrupted: %5lu kB\n&quot;</span>
<span class="p_del">-#endif</span>
<span class="p_del">-#ifdef CONFIG_TRANSPARENT_HUGEPAGE</span>
<span class="p_del">-		&quot;AnonHugePages:  %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;ShmemHugePages: %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;ShmemPmdMapped: %8lu kB\n&quot;</span>
<span class="p_del">-#endif</span>
<span class="p_del">-#ifdef CONFIG_CMA</span>
<span class="p_del">-		&quot;CmaTotal:       %8lu kB\n&quot;</span>
<span class="p_del">-		&quot;CmaFree:        %8lu kB\n&quot;</span>
<span class="p_del">-#endif</span>
<span class="p_del">-		,</span>
<span class="p_del">-		K(i.totalram),</span>
<span class="p_del">-		K(i.freeram),</span>
<span class="p_del">-		K(available),</span>
<span class="p_del">-		K(i.bufferram),</span>
<span class="p_del">-		K(cached),</span>
<span class="p_del">-		K(total_swapcache_pages()),</span>
<span class="p_del">-		K(pages[LRU_ACTIVE_ANON]   + pages[LRU_ACTIVE_FILE]),</span>
<span class="p_del">-		K(pages[LRU_INACTIVE_ANON] + pages[LRU_INACTIVE_FILE]),</span>
<span class="p_del">-		K(pages[LRU_ACTIVE_ANON]),</span>
<span class="p_del">-		K(pages[LRU_INACTIVE_ANON]),</span>
<span class="p_del">-		K(pages[LRU_ACTIVE_FILE]),</span>
<span class="p_del">-		K(pages[LRU_INACTIVE_FILE]),</span>
<span class="p_del">-		K(pages[LRU_UNEVICTABLE]),</span>
<span class="p_del">-		K(global_page_state(NR_MLOCK)),</span>
<span class="p_add">+	show_val_kb(m, &quot;MemTotal:       &quot;, i.totalram);</span>
<span class="p_add">+	show_val_kb(m, &quot;MemFree:        &quot;, i.freeram);</span>
<span class="p_add">+	show_val_kb(m, &quot;MemAvailable:   &quot;, available);</span>
<span class="p_add">+	show_val_kb(m, &quot;Buffers:        &quot;, i.bufferram);</span>
<span class="p_add">+	show_val_kb(m, &quot;Cached:         &quot;, cached);</span>
<span class="p_add">+	show_val_kb(m, &quot;SwapCached:     &quot;, total_swapcache_pages());</span>
<span class="p_add">+	show_val_kb(m, &quot;Active:         &quot;, pages[LRU_ACTIVE_ANON] +</span>
<span class="p_add">+					   pages[LRU_ACTIVE_FILE]);</span>
<span class="p_add">+	show_val_kb(m, &quot;Inactive:       &quot;, pages[LRU_INACTIVE_ANON] +</span>
<span class="p_add">+					   pages[LRU_INACTIVE_FILE]);</span>
<span class="p_add">+	show_val_kb(m, &quot;Active(anon):   &quot;, pages[LRU_ACTIVE_ANON]);</span>
<span class="p_add">+	show_val_kb(m, &quot;Inactive(anon): &quot;, pages[LRU_INACTIVE_ANON]);</span>
<span class="p_add">+	show_val_kb(m, &quot;Active(file):   &quot;, pages[LRU_ACTIVE_FILE]);</span>
<span class="p_add">+	show_val_kb(m, &quot;Inactive(file): &quot;, pages[LRU_INACTIVE_FILE]);</span>
<span class="p_add">+	show_val_kb(m, &quot;Unevictable:    &quot;, pages[LRU_UNEVICTABLE]);</span>
<span class="p_add">+	show_val_kb(m, &quot;Mlocked:        &quot;, global_page_state(NR_MLOCK));</span>
<span class="p_add">+</span>
 #ifdef CONFIG_HIGHMEM
<span class="p_del">-		K(i.totalhigh),</span>
<span class="p_del">-		K(i.freehigh),</span>
<span class="p_del">-		K(i.totalram-i.totalhigh),</span>
<span class="p_del">-		K(i.freeram-i.freehigh),</span>
<span class="p_add">+	show_val_kb(m, &quot;HighTotal:      &quot;, i.totalhigh);</span>
<span class="p_add">+	show_val_kb(m, &quot;HighFree:       &quot;, i.freehigh);</span>
<span class="p_add">+	show_val_kb(m, &quot;LowTotal:       &quot;, i.totalram - i.totalhigh);</span>
<span class="p_add">+	show_val_kb(m, &quot;LowFree:        &quot;, i.freeram - i.freehigh);</span>
 #endif
<span class="p_add">+</span>
 #ifndef CONFIG_MMU
<span class="p_del">-		K((unsigned long) atomic_long_read(&amp;mmap_pages_allocated)),</span>
<span class="p_add">+	show_val_kb(m, &quot;MmapCopy:       &quot;,</span>
<span class="p_add">+		    (unsigned long)atomic_long_read(&amp;mmap_pages_allocated));</span>
 #endif
<span class="p_del">-		K(i.totalswap),</span>
<span class="p_del">-		K(i.freeswap),</span>
<span class="p_del">-		K(global_node_page_state(NR_FILE_DIRTY)),</span>
<span class="p_del">-		K(global_node_page_state(NR_WRITEBACK)),</span>
<span class="p_del">-		K(global_node_page_state(NR_ANON_MAPPED)),</span>
<span class="p_del">-		K(global_node_page_state(NR_FILE_MAPPED)),</span>
<span class="p_del">-		K(i.sharedram),</span>
<span class="p_del">-		K(global_page_state(NR_SLAB_RECLAIMABLE) +</span>
<span class="p_del">-				global_page_state(NR_SLAB_UNRECLAIMABLE)),</span>
<span class="p_del">-		K(global_page_state(NR_SLAB_RECLAIMABLE)),</span>
<span class="p_del">-		K(global_page_state(NR_SLAB_UNRECLAIMABLE)),</span>
<span class="p_del">-		global_page_state(NR_KERNEL_STACK_KB),</span>
<span class="p_del">-		K(global_page_state(NR_PAGETABLE)),</span>
<span class="p_add">+</span>
<span class="p_add">+	show_val_kb(m, &quot;SwapTotal:      &quot;, i.totalswap);</span>
<span class="p_add">+	show_val_kb(m, &quot;SwapFree:       &quot;, i.freeswap);</span>
<span class="p_add">+	show_val_kb(m, &quot;Dirty:          &quot;,</span>
<span class="p_add">+		    global_node_page_state(NR_FILE_DIRTY));</span>
<span class="p_add">+	show_val_kb(m, &quot;Writeback:      &quot;,</span>
<span class="p_add">+		    global_node_page_state(NR_WRITEBACK));</span>
<span class="p_add">+	show_val_kb(m, &quot;AnonPages:      &quot;,</span>
<span class="p_add">+		    global_node_page_state(NR_ANON_MAPPED));</span>
<span class="p_add">+	show_val_kb(m, &quot;Mapped:         &quot;,</span>
<span class="p_add">+		    global_node_page_state(NR_FILE_MAPPED));</span>
<span class="p_add">+	show_val_kb(m, &quot;Shmem:          &quot;, i.sharedram);</span>
<span class="p_add">+	show_val_kb(m, &quot;Slab:           &quot;,</span>
<span class="p_add">+		    global_page_state(NR_SLAB_RECLAIMABLE) +</span>
<span class="p_add">+		    global_page_state(NR_SLAB_UNRECLAIMABLE));</span>
<span class="p_add">+</span>
<span class="p_add">+	show_val_kb(m, &quot;SReclaimable:   &quot;,</span>
<span class="p_add">+		    global_page_state(NR_SLAB_RECLAIMABLE));</span>
<span class="p_add">+	show_val_kb(m, &quot;SUnreclaim:     &quot;,</span>
<span class="p_add">+		    global_page_state(NR_SLAB_UNRECLAIMABLE));</span>
<span class="p_add">+	seq_printf(m, &quot;KernelStack:    %8lu kB\n&quot;,</span>
<span class="p_add">+		   global_page_state(NR_KERNEL_STACK_KB));</span>
<span class="p_add">+	show_val_kb(m, &quot;PageTables:     &quot;,</span>
<span class="p_add">+		    global_page_state(NR_PAGETABLE));</span>
 #ifdef CONFIG_QUICKLIST
<span class="p_del">-		K(quicklist_total_size()),</span>
<span class="p_add">+	show_val_kb(m, &quot;Quicklists:     &quot;, quicklist_total_size());</span>
 #endif
<span class="p_del">-		K(global_node_page_state(NR_UNSTABLE_NFS)),</span>
<span class="p_del">-		K(global_page_state(NR_BOUNCE)),</span>
<span class="p_del">-		K(global_node_page_state(NR_WRITEBACK_TEMP)),</span>
<span class="p_del">-		K(vm_commit_limit()),</span>
<span class="p_del">-		K(committed),</span>
<span class="p_del">-		(unsigned long)VMALLOC_TOTAL &gt;&gt; 10,</span>
<span class="p_del">-		0ul, // used to be vmalloc &#39;used&#39;</span>
<span class="p_del">-		0ul  // used to be vmalloc &#39;largest_chunk&#39;</span>
<span class="p_add">+</span>
<span class="p_add">+	show_val_kb(m, &quot;NFS_Unstable:   &quot;,</span>
<span class="p_add">+		    global_node_page_state(NR_UNSTABLE_NFS));</span>
<span class="p_add">+	show_val_kb(m, &quot;Bounce:         &quot;,</span>
<span class="p_add">+		    global_page_state(NR_BOUNCE));</span>
<span class="p_add">+	show_val_kb(m, &quot;WritebackTmp:   &quot;,</span>
<span class="p_add">+		    global_node_page_state(NR_WRITEBACK_TEMP));</span>
<span class="p_add">+	show_val_kb(m, &quot;CommitLimit:    &quot;, vm_commit_limit());</span>
<span class="p_add">+	show_val_kb(m, &quot;Committed_AS:   &quot;, committed);</span>
<span class="p_add">+	seq_printf(m, &quot;VmallocTotal:   %8lu kB\n&quot;,</span>
<span class="p_add">+		   (unsigned long)VMALLOC_TOTAL &gt;&gt; 10);</span>
<span class="p_add">+	show_val_kb(m, &quot;VmallocUsed:    &quot;, 0ul);</span>
<span class="p_add">+	show_val_kb(m, &quot;VmallocChunk:   &quot;, 0ul);</span>
<span class="p_add">+</span>
 #ifdef CONFIG_MEMORY_FAILURE
<span class="p_del">-		, atomic_long_read(&amp;num_poisoned_pages) &lt;&lt; (PAGE_SHIFT - 10)</span>
<span class="p_add">+	seq_printf(m, &quot;HardwareCorrupted: %5lu kB\n&quot;,</span>
<span class="p_add">+		   atomic_long_read(&amp;num_poisoned_pages) &lt;&lt; (PAGE_SHIFT - 10));</span>
 #endif
<span class="p_add">+</span>
 #ifdef CONFIG_TRANSPARENT_HUGEPAGE
<span class="p_del">-		, K(global_node_page_state(NR_ANON_THPS) * HPAGE_PMD_NR)</span>
<span class="p_del">-		, K(global_node_page_state(NR_SHMEM_THPS) * HPAGE_PMD_NR)</span>
<span class="p_del">-		, K(global_node_page_state(NR_SHMEM_PMDMAPPED) * HPAGE_PMD_NR)</span>
<span class="p_add">+	show_val_kb(m, &quot;AnonHugePages:  &quot;,</span>
<span class="p_add">+		    global_node_page_state(NR_ANON_THPS) * HPAGE_PMD_NR);</span>
<span class="p_add">+	show_val_kb(m, &quot;ShmemHugePages: &quot;,</span>
<span class="p_add">+		    global_node_page_state(NR_SHMEM_THPS) * HPAGE_PMD_NR);</span>
<span class="p_add">+	show_val_kb(m, &quot;ShmemPmdMapped: &quot;,</span>
<span class="p_add">+		    global_node_page_state(NR_SHMEM_PMDMAPPED) * HPAGE_PMD_NR);</span>
 #endif
<span class="p_add">+</span>
 #ifdef CONFIG_CMA
<span class="p_del">-		, K(totalcma_pages)</span>
<span class="p_del">-		, K(global_page_state(NR_FREE_CMA_PAGES))</span>
<span class="p_add">+	show_val_kb(m, &quot;CmaTotal:       &quot;, totalcma_pages);</span>
<span class="p_add">+	show_val_kb(m, &quot;CmaFree:        &quot;,</span>
<span class="p_add">+		    global_page_state(NR_FREE_CMA_PAGES));</span>
 #endif
<span class="p_del">-		);</span>
 
 	hugetlb_report_meminfo(m);
 
 	arch_report_meminfo(m);
 
 	return 0;
<span class="p_del">-#undef K</span>
 }
 
 static int meminfo_proc_open(struct inode *inode, struct file *file)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



