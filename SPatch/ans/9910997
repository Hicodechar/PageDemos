
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[GIT,pull] x86 fixes for 4.13 - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [GIT,pull] x86 fixes for 4.13</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=107">Thomas Gleixner</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 20, 2017, 9:33 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;alpine.DEB.2.20.1708201124350.6785@nanos&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9910997/mbox/"
   >mbox</a>
|
   <a href="/patch/9910997/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9910997/">/patch/9910997/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	4382D601D4 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 20 Aug 2017 09:33:30 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 27E35287D7
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 20 Aug 2017 09:33:30 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 1952F287DB; Sun, 20 Aug 2017 09:33:30 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B6A38287D7
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 20 Aug 2017 09:33:28 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752198AbdHTJdY (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 20 Aug 2017 05:33:24 -0400
Received: from Galois.linutronix.de ([146.0.238.70]:46971 &quot;EHLO
	Galois.linutronix.de&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751061AbdHTJdW (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 20 Aug 2017 05:33:22 -0400
Received: from localhost ([127.0.0.1]) by Galois.linutronix.de with esmtps
	(TLS1.2:DHE_RSA_AES_256_CBC_SHA256:256) (Exim 4.80)
	(envelope-from &lt;tglx@linutronix.de&gt;)
	id 1djMae-0000pq-67; Sun, 20 Aug 2017 11:32:16 +0200
Date: Sun, 20 Aug 2017 11:33:19 +0200 (CEST)
From: Thomas Gleixner &lt;tglx@linutronix.de&gt;
To: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
cc: LKML &lt;linux-kernel@vger.kernel.org&gt;, Ingo Molnar &lt;mingo@kernel.org&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;
Subject: [GIT pull] x86 fixes for 4.13
Message-ID: &lt;alpine.DEB.2.20.1708201124350.6785@nanos&gt;
User-Agent: Alpine 2.20 (DEB 67 2015-01-07)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=107">Thomas Gleixner</a> - Aug. 20, 2017, 9:33 a.m.</div>
<pre class="content">
Linus,

please pull the latest x86-urgent-for-linus git tree from:

   git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git x86-urgent-for-linus

Another pile of small fixes and updates for x86:

 - Plug a hole in the SMAP implementation which misses to clear AC on NMI
   entry

 - Fix the norandmaps/ADDR_NO_RANDOMIZE logic so the command line parameter
   works correctly again

 - Use the proper accessor in the startup64 code for next_early_pgt to
   prevent accessing of invalid addresses and faulting in the early boot
   code.

 - Prevent CPU hotplug lock recursion in the MTRR code

 - Unbreak CPU0 hotplugging

 - Rename overly long CPUID bits which got introduced in this cycle

 - Two commits which mark data &#39;const&#39; and restrict the scope of data and
   functions to file scope by making them &#39;static&#39;.


Thanks,

	tglx

------------------&gt;
Alexander Potapenko (1):
      x86/boot/64/clang: Use fixup_pointer() to access &#39;next_early_pgt&#39;

Andy Lutomirski (1):
      x86/asm/64: Clear AC on NMI entries

Arvind Yadav (1):
      x86: Constify attribute_group structures

Borislav Petkov (1):
      x86/cpufeature, kvm/svm: Rename (shorten) the new &quot;virtualized VMSAVE/VMLOAD&quot; CPUID flag

Colin Ian King (1):
      x86: Mark various structures and functions as &#39;static&#39;

Oleg Nesterov (2):
      x86: Fix norandmaps/ADDR_NO_RANDOMIZE
      x86/elf: Remove the unnecessary ADDR_NO_RANDOMIZE checks

Thomas Gleixner (1):
      x86/mtrr: Prevent CPU hotplug lock recursion

Vitaly Kuznetsov (1):
      x86/smpboot: Unbreak CPU0 hotplug


 arch/x86/entry/entry_64.S                |  2 ++
 arch/x86/events/intel/bts.c              |  2 +-
 arch/x86/events/intel/p4.c               |  2 +-
 arch/x86/events/intel/rapl.c             |  2 +-
 arch/x86/events/intel/uncore.c           |  2 +-
 arch/x86/events/intel/uncore_nhmex.c     | 12 ++++-----
 arch/x86/events/intel/uncore_snb.c       |  6 ++---
 arch/x86/events/intel/uncore_snbep.c     | 42 ++++++++++++++++----------------
 arch/x86/include/asm/cpufeatures.h       |  2 +-
 arch/x86/kernel/cpu/mcheck/therm_throt.c |  2 +-
 arch/x86/kernel/cpu/microcode/core.c     |  4 +--
 arch/x86/kernel/cpu/mtrr/main.c          | 18 +++++++++++---
 arch/x86/kernel/head64.c                 |  7 +++---
 arch/x86/kernel/ksysfs.c                 |  4 +--
 arch/x86/kernel/smpboot.c                | 30 +++++++++++++----------
 arch/x86/kvm/svm.c                       |  2 +-
 arch/x86/mm/mmap.c                       |  7 +++---
 arch/x86/platform/uv/tlb_uv.c            |  4 +--
 fs/binfmt_elf.c                          |  3 +--
 19 files changed, 85 insertions(+), 68 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/entry/entry_64.S b/arch/x86/entry/entry_64.S</span>
<span class="p_header">index d271fb79248f..6d078b89a5e8 100644</span>
<span class="p_header">--- a/arch/x86/entry/entry_64.S</span>
<span class="p_header">+++ b/arch/x86/entry/entry_64.S</span>
<span class="p_chunk">@@ -1211,6 +1211,8 @@</span> <span class="p_context"> ENTRY(nmi)</span>
 	 * other IST entries.
 	 */
 
<span class="p_add">+	ASM_CLAC</span>
<span class="p_add">+</span>
 	/* Use %rdx as our temp variable throughout */
 	pushq	%rdx
 
<span class="p_header">diff --git a/arch/x86/events/intel/bts.c b/arch/x86/events/intel/bts.c</span>
<span class="p_header">index 8ae8c5ce3a1f..ddd8d3516bfc 100644</span>
<span class="p_header">--- a/arch/x86/events/intel/bts.c</span>
<span class="p_header">+++ b/arch/x86/events/intel/bts.c</span>
<span class="p_chunk">@@ -69,7 +69,7 @@</span> <span class="p_context"> struct bts_buffer {</span>
 	struct bts_phys	buf[0];
 };
 
<span class="p_del">-struct pmu bts_pmu;</span>
<span class="p_add">+static struct pmu bts_pmu;</span>
 
 static size_t buf_size(struct page *page)
 {
<span class="p_header">diff --git a/arch/x86/events/intel/p4.c b/arch/x86/events/intel/p4.c</span>
<span class="p_header">index eb0533558c2b..d32c0eed38ca 100644</span>
<span class="p_header">--- a/arch/x86/events/intel/p4.c</span>
<span class="p_header">+++ b/arch/x86/events/intel/p4.c</span>
<span class="p_chunk">@@ -587,7 +587,7 @@</span> <span class="p_context"> static __initconst const u64 p4_hw_cache_event_ids</span>
  * P4_CONFIG_ALIASABLE or bits for P4_PEBS_METRIC, they are
  * either up to date automatically or not applicable at all.
  */
<span class="p_del">-struct p4_event_alias {</span>
<span class="p_add">+static struct p4_event_alias {</span>
 	u64 original;
 	u64 alternative;
 } p4_event_aliases[] = {
<span class="p_header">diff --git a/arch/x86/events/intel/rapl.c b/arch/x86/events/intel/rapl.c</span>
<span class="p_header">index a45e2114a846..8e2457cb6b4a 100644</span>
<span class="p_header">--- a/arch/x86/events/intel/rapl.c</span>
<span class="p_header">+++ b/arch/x86/events/intel/rapl.c</span>
<span class="p_chunk">@@ -559,7 +559,7 @@</span> <span class="p_context"> static struct attribute_group rapl_pmu_format_group = {</span>
 	.attrs = rapl_formats_attr,
 };
 
<span class="p_del">-const struct attribute_group *rapl_attr_groups[] = {</span>
<span class="p_add">+static const struct attribute_group *rapl_attr_groups[] = {</span>
 	&amp;rapl_pmu_attr_group,
 	&amp;rapl_pmu_format_group,
 	&amp;rapl_pmu_events_group,
<span class="p_header">diff --git a/arch/x86/events/intel/uncore.c b/arch/x86/events/intel/uncore.c</span>
<span class="p_header">index 44ec523287f6..1c5390f1cf09 100644</span>
<span class="p_header">--- a/arch/x86/events/intel/uncore.c</span>
<span class="p_header">+++ b/arch/x86/events/intel/uncore.c</span>
<span class="p_chunk">@@ -721,7 +721,7 @@</span> <span class="p_context"> static struct attribute *uncore_pmu_attrs[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group uncore_pmu_attr_group = {</span>
<span class="p_add">+static const struct attribute_group uncore_pmu_attr_group = {</span>
 	.attrs = uncore_pmu_attrs,
 };
 
<span class="p_header">diff --git a/arch/x86/events/intel/uncore_nhmex.c b/arch/x86/events/intel/uncore_nhmex.c</span>
<span class="p_header">index cda569332005..6a5cbe90f859 100644</span>
<span class="p_header">--- a/arch/x86/events/intel/uncore_nhmex.c</span>
<span class="p_header">+++ b/arch/x86/events/intel/uncore_nhmex.c</span>
<span class="p_chunk">@@ -272,7 +272,7 @@</span> <span class="p_context"> static struct attribute *nhmex_uncore_ubox_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group nhmex_uncore_ubox_format_group = {</span>
<span class="p_add">+static const struct attribute_group nhmex_uncore_ubox_format_group = {</span>
 	.name		= &quot;format&quot;,
 	.attrs		= nhmex_uncore_ubox_formats_attr,
 };
<span class="p_chunk">@@ -299,7 +299,7 @@</span> <span class="p_context"> static struct attribute *nhmex_uncore_cbox_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group nhmex_uncore_cbox_format_group = {</span>
<span class="p_add">+static const struct attribute_group nhmex_uncore_cbox_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = nhmex_uncore_cbox_formats_attr,
 };
<span class="p_chunk">@@ -407,7 +407,7 @@</span> <span class="p_context"> static struct attribute *nhmex_uncore_bbox_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group nhmex_uncore_bbox_format_group = {</span>
<span class="p_add">+static const struct attribute_group nhmex_uncore_bbox_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = nhmex_uncore_bbox_formats_attr,
 };
<span class="p_chunk">@@ -484,7 +484,7 @@</span> <span class="p_context"> static struct attribute *nhmex_uncore_sbox_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group nhmex_uncore_sbox_format_group = {</span>
<span class="p_add">+static const struct attribute_group nhmex_uncore_sbox_format_group = {</span>
 	.name			= &quot;format&quot;,
 	.attrs			= nhmex_uncore_sbox_formats_attr,
 };
<span class="p_chunk">@@ -898,7 +898,7 @@</span> <span class="p_context"> static struct attribute *nhmex_uncore_mbox_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group nhmex_uncore_mbox_format_group = {</span>
<span class="p_add">+static const struct attribute_group nhmex_uncore_mbox_format_group = {</span>
 	.name		= &quot;format&quot;,
 	.attrs		= nhmex_uncore_mbox_formats_attr,
 };
<span class="p_chunk">@@ -1163,7 +1163,7 @@</span> <span class="p_context"> static struct attribute *nhmex_uncore_rbox_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group nhmex_uncore_rbox_format_group = {</span>
<span class="p_add">+static const struct attribute_group nhmex_uncore_rbox_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = nhmex_uncore_rbox_formats_attr,
 };
<span class="p_header">diff --git a/arch/x86/events/intel/uncore_snb.c b/arch/x86/events/intel/uncore_snb.c</span>
<span class="p_header">index a3dcc12bef4a..db1127ce685e 100644</span>
<span class="p_header">--- a/arch/x86/events/intel/uncore_snb.c</span>
<span class="p_header">+++ b/arch/x86/events/intel/uncore_snb.c</span>
<span class="p_chunk">@@ -130,7 +130,7 @@</span> <span class="p_context"> static struct attribute *snb_uncore_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group snb_uncore_format_group = {</span>
<span class="p_add">+static const struct attribute_group snb_uncore_format_group = {</span>
 	.name		= &quot;format&quot;,
 	.attrs		= snb_uncore_formats_attr,
 };
<span class="p_chunk">@@ -289,7 +289,7 @@</span> <span class="p_context"> static struct attribute *snb_uncore_imc_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group snb_uncore_imc_format_group = {</span>
<span class="p_add">+static const struct attribute_group snb_uncore_imc_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = snb_uncore_imc_formats_attr,
 };
<span class="p_chunk">@@ -769,7 +769,7 @@</span> <span class="p_context"> static struct attribute *nhm_uncore_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group nhm_uncore_format_group = {</span>
<span class="p_add">+static const struct attribute_group nhm_uncore_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = nhm_uncore_formats_attr,
 };
<span class="p_header">diff --git a/arch/x86/events/intel/uncore_snbep.c b/arch/x86/events/intel/uncore_snbep.c</span>
<span class="p_header">index 4f9127644b80..db1fe377e6dd 100644</span>
<span class="p_header">--- a/arch/x86/events/intel/uncore_snbep.c</span>
<span class="p_header">+++ b/arch/x86/events/intel/uncore_snbep.c</span>
<span class="p_chunk">@@ -602,27 +602,27 @@</span> <span class="p_context"> static struct uncore_event_desc snbep_uncore_qpi_events[] = {</span>
 	{ /* end: all zeroes */ },
 };
 
<span class="p_del">-static struct attribute_group snbep_uncore_format_group = {</span>
<span class="p_add">+static const struct attribute_group snbep_uncore_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = snbep_uncore_formats_attr,
 };
 
<span class="p_del">-static struct attribute_group snbep_uncore_ubox_format_group = {</span>
<span class="p_add">+static const struct attribute_group snbep_uncore_ubox_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = snbep_uncore_ubox_formats_attr,
 };
 
<span class="p_del">-static struct attribute_group snbep_uncore_cbox_format_group = {</span>
<span class="p_add">+static const struct attribute_group snbep_uncore_cbox_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = snbep_uncore_cbox_formats_attr,
 };
 
<span class="p_del">-static struct attribute_group snbep_uncore_pcu_format_group = {</span>
<span class="p_add">+static const struct attribute_group snbep_uncore_pcu_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = snbep_uncore_pcu_formats_attr,
 };
 
<span class="p_del">-static struct attribute_group snbep_uncore_qpi_format_group = {</span>
<span class="p_add">+static const struct attribute_group snbep_uncore_qpi_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = snbep_uncore_qpi_formats_attr,
 };
<span class="p_chunk">@@ -1431,27 +1431,27 @@</span> <span class="p_context"> static struct attribute *ivbep_uncore_qpi_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group ivbep_uncore_format_group = {</span>
<span class="p_add">+static const struct attribute_group ivbep_uncore_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = ivbep_uncore_formats_attr,
 };
 
<span class="p_del">-static struct attribute_group ivbep_uncore_ubox_format_group = {</span>
<span class="p_add">+static const struct attribute_group ivbep_uncore_ubox_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = ivbep_uncore_ubox_formats_attr,
 };
 
<span class="p_del">-static struct attribute_group ivbep_uncore_cbox_format_group = {</span>
<span class="p_add">+static const struct attribute_group ivbep_uncore_cbox_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = ivbep_uncore_cbox_formats_attr,
 };
 
<span class="p_del">-static struct attribute_group ivbep_uncore_pcu_format_group = {</span>
<span class="p_add">+static const struct attribute_group ivbep_uncore_pcu_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = ivbep_uncore_pcu_formats_attr,
 };
 
<span class="p_del">-static struct attribute_group ivbep_uncore_qpi_format_group = {</span>
<span class="p_add">+static const struct attribute_group ivbep_uncore_qpi_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = ivbep_uncore_qpi_formats_attr,
 };
<span class="p_chunk">@@ -1887,7 +1887,7 @@</span> <span class="p_context"> static struct attribute *knl_uncore_ubox_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group knl_uncore_ubox_format_group = {</span>
<span class="p_add">+static const struct attribute_group knl_uncore_ubox_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = knl_uncore_ubox_formats_attr,
 };
<span class="p_chunk">@@ -1927,7 +1927,7 @@</span> <span class="p_context"> static struct attribute *knl_uncore_cha_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group knl_uncore_cha_format_group = {</span>
<span class="p_add">+static const struct attribute_group knl_uncore_cha_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = knl_uncore_cha_formats_attr,
 };
<span class="p_chunk">@@ -2037,7 +2037,7 @@</span> <span class="p_context"> static struct attribute *knl_uncore_pcu_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group knl_uncore_pcu_format_group = {</span>
<span class="p_add">+static const struct attribute_group knl_uncore_pcu_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = knl_uncore_pcu_formats_attr,
 };
<span class="p_chunk">@@ -2187,7 +2187,7 @@</span> <span class="p_context"> static struct attribute *knl_uncore_irp_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group knl_uncore_irp_format_group = {</span>
<span class="p_add">+static const struct attribute_group knl_uncore_irp_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = knl_uncore_irp_formats_attr,
 };
<span class="p_chunk">@@ -2385,7 +2385,7 @@</span> <span class="p_context"> static struct attribute *hswep_uncore_ubox_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group hswep_uncore_ubox_format_group = {</span>
<span class="p_add">+static const struct attribute_group hswep_uncore_ubox_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = hswep_uncore_ubox_formats_attr,
 };
<span class="p_chunk">@@ -2439,7 +2439,7 @@</span> <span class="p_context"> static struct attribute *hswep_uncore_cbox_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group hswep_uncore_cbox_format_group = {</span>
<span class="p_add">+static const struct attribute_group hswep_uncore_cbox_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = hswep_uncore_cbox_formats_attr,
 };
<span class="p_chunk">@@ -2621,7 +2621,7 @@</span> <span class="p_context"> static struct attribute *hswep_uncore_sbox_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group hswep_uncore_sbox_format_group = {</span>
<span class="p_add">+static const struct attribute_group hswep_uncore_sbox_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = hswep_uncore_sbox_formats_attr,
 };
<span class="p_chunk">@@ -3314,7 +3314,7 @@</span> <span class="p_context"> static struct attribute *skx_uncore_cha_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group skx_uncore_chabox_format_group = {</span>
<span class="p_add">+static const struct attribute_group skx_uncore_chabox_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = skx_uncore_cha_formats_attr,
 };
<span class="p_chunk">@@ -3427,7 +3427,7 @@</span> <span class="p_context"> static struct attribute *skx_uncore_iio_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group skx_uncore_iio_format_group = {</span>
<span class="p_add">+static const struct attribute_group skx_uncore_iio_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = skx_uncore_iio_formats_attr,
 };
<span class="p_chunk">@@ -3484,7 +3484,7 @@</span> <span class="p_context"> static struct attribute *skx_uncore_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group skx_uncore_format_group = {</span>
<span class="p_add">+static const struct attribute_group skx_uncore_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = skx_uncore_formats_attr,
 };
<span class="p_chunk">@@ -3605,7 +3605,7 @@</span> <span class="p_context"> static struct attribute *skx_upi_uncore_formats_attr[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group skx_upi_uncore_format_group = {</span>
<span class="p_add">+static const struct attribute_group skx_upi_uncore_format_group = {</span>
 	.name = &quot;format&quot;,
 	.attrs = skx_upi_uncore_formats_attr,
 };
<span class="p_header">diff --git a/arch/x86/include/asm/cpufeatures.h b/arch/x86/include/asm/cpufeatures.h</span>
<span class="p_header">index ca3c48c0872f..5a28e8e55e36 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/cpufeatures.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/cpufeatures.h</span>
<span class="p_chunk">@@ -286,7 +286,7 @@</span> <span class="p_context"></span>
 #define X86_FEATURE_PAUSEFILTER (15*32+10) /* filtered pause intercept */
 #define X86_FEATURE_PFTHRESHOLD (15*32+12) /* pause filter threshold */
 #define X86_FEATURE_AVIC	(15*32+13) /* Virtual Interrupt Controller */
<span class="p_del">-#define X86_FEATURE_VIRTUAL_VMLOAD_VMSAVE (15*32+15) /* Virtual VMLOAD VMSAVE */</span>
<span class="p_add">+#define X86_FEATURE_V_VMSAVE_VMLOAD (15*32+15) /* Virtual VMSAVE VMLOAD */</span>
 
 /* Intel-defined CPU features, CPUID level 0x00000007:0 (ecx), word 16 */
 #define X86_FEATURE_AVX512VBMI  (16*32+ 1) /* AVX512 Vector Bit Manipulation instructions*/
<span class="p_header">diff --git a/arch/x86/kernel/cpu/mcheck/therm_throt.c b/arch/x86/kernel/cpu/mcheck/therm_throt.c</span>
<span class="p_header">index d7cc190ae457..f7370abd33c6 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/mcheck/therm_throt.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/mcheck/therm_throt.c</span>
<span class="p_chunk">@@ -122,7 +122,7 @@</span> <span class="p_context"> static struct attribute *thermal_throttle_attrs[] = {</span>
 	NULL
 };
 
<span class="p_del">-static struct attribute_group thermal_attr_group = {</span>
<span class="p_add">+static const struct attribute_group thermal_attr_group = {</span>
 	.attrs	= thermal_throttle_attrs,
 	.name	= &quot;thermal_throttle&quot;
 };
<span class="p_header">diff --git a/arch/x86/kernel/cpu/microcode/core.c b/arch/x86/kernel/cpu/microcode/core.c</span>
<span class="p_header">index 9cb98ee103db..86e8f0b2537b 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/microcode/core.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/microcode/core.c</span>
<span class="p_chunk">@@ -561,7 +561,7 @@</span> <span class="p_context"> static struct attribute *mc_default_attrs[] = {</span>
 	NULL
 };
 
<span class="p_del">-static struct attribute_group mc_attr_group = {</span>
<span class="p_add">+static const struct attribute_group mc_attr_group = {</span>
 	.attrs			= mc_default_attrs,
 	.name			= &quot;microcode&quot;,
 };
<span class="p_chunk">@@ -707,7 +707,7 @@</span> <span class="p_context"> static struct attribute *cpu_root_microcode_attrs[] = {</span>
 	NULL
 };
 
<span class="p_del">-static struct attribute_group cpu_root_microcode_group = {</span>
<span class="p_add">+static const struct attribute_group cpu_root_microcode_group = {</span>
 	.name  = &quot;microcode&quot;,
 	.attrs = cpu_root_microcode_attrs,
 };
<span class="p_header">diff --git a/arch/x86/kernel/cpu/mtrr/main.c b/arch/x86/kernel/cpu/mtrr/main.c</span>
<span class="p_header">index c5bb63be4ba1..40d5a8a75212 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/mtrr/main.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/mtrr/main.c</span>
<span class="p_chunk">@@ -237,6 +237,18 @@</span> <span class="p_context"> set_mtrr(unsigned int reg, unsigned long base, unsigned long size, mtrr_type typ</span>
 	stop_machine(mtrr_rendezvous_handler, &amp;data, cpu_online_mask);
 }
 
<span class="p_add">+static void set_mtrr_cpuslocked(unsigned int reg, unsigned long base,</span>
<span class="p_add">+				unsigned long size, mtrr_type type)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct set_mtrr_data data = { .smp_reg = reg,</span>
<span class="p_add">+				      .smp_base = base,</span>
<span class="p_add">+				      .smp_size = size,</span>
<span class="p_add">+				      .smp_type = type</span>
<span class="p_add">+				    };</span>
<span class="p_add">+</span>
<span class="p_add">+	stop_machine_cpuslocked(mtrr_rendezvous_handler, &amp;data, cpu_online_mask);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static void set_mtrr_from_inactive_cpu(unsigned int reg, unsigned long base,
 				      unsigned long size, mtrr_type type)
 {
<span class="p_chunk">@@ -370,7 +382,7 @@</span> <span class="p_context"> int mtrr_add_page(unsigned long base, unsigned long size,</span>
 	/* Search for an empty MTRR */
 	i = mtrr_if-&gt;get_free_region(base, size, replace);
 	if (i &gt;= 0) {
<span class="p_del">-		set_mtrr(i, base, size, type);</span>
<span class="p_add">+		set_mtrr_cpuslocked(i, base, size, type);</span>
 		if (likely(replace &lt; 0)) {
 			mtrr_usage_table[i] = 1;
 		} else {
<span class="p_chunk">@@ -378,7 +390,7 @@</span> <span class="p_context"> int mtrr_add_page(unsigned long base, unsigned long size,</span>
 			if (increment)
 				mtrr_usage_table[i]++;
 			if (unlikely(replace != i)) {
<span class="p_del">-				set_mtrr(replace, 0, 0, 0);</span>
<span class="p_add">+				set_mtrr_cpuslocked(replace, 0, 0, 0);</span>
 				mtrr_usage_table[replace] = 0;
 			}
 		}
<span class="p_chunk">@@ -506,7 +518,7 @@</span> <span class="p_context"> int mtrr_del_page(int reg, unsigned long base, unsigned long size)</span>
 		goto out;
 	}
 	if (--mtrr_usage_table[reg] &lt; 1)
<span class="p_del">-		set_mtrr(reg, 0, 0, 0);</span>
<span class="p_add">+		set_mtrr_cpuslocked(reg, 0, 0, 0);</span>
 	error = reg;
  out:
 	mutex_unlock(&amp;mtrr_mutex);
<span class="p_header">diff --git a/arch/x86/kernel/head64.c b/arch/x86/kernel/head64.c</span>
<span class="p_header">index 46c3c73e7f43..9ba79543d9ee 100644</span>
<span class="p_header">--- a/arch/x86/kernel/head64.c</span>
<span class="p_header">+++ b/arch/x86/kernel/head64.c</span>
<span class="p_chunk">@@ -53,6 +53,7 @@</span> <span class="p_context"> void __head __startup_64(unsigned long physaddr)</span>
 	pudval_t *pud;
 	pmdval_t *pmd, pmd_entry;
 	int i;
<span class="p_add">+	unsigned int *next_pgt_ptr;</span>
 
 	/* Is the address too large? */
 	if (physaddr &gt;&gt; MAX_PHYSMEM_BITS)
<span class="p_chunk">@@ -91,9 +92,9 @@</span> <span class="p_context"> void __head __startup_64(unsigned long physaddr)</span>
 	 * creates a bunch of nonsense entries but that is fine --
 	 * it avoids problems around wraparound.
 	 */
<span class="p_del">-</span>
<span class="p_del">-	pud = fixup_pointer(early_dynamic_pgts[next_early_pgt++], physaddr);</span>
<span class="p_del">-	pmd = fixup_pointer(early_dynamic_pgts[next_early_pgt++], physaddr);</span>
<span class="p_add">+	next_pgt_ptr = fixup_pointer(&amp;next_early_pgt, physaddr);</span>
<span class="p_add">+	pud = fixup_pointer(early_dynamic_pgts[(*next_pgt_ptr)++], physaddr);</span>
<span class="p_add">+	pmd = fixup_pointer(early_dynamic_pgts[(*next_pgt_ptr)++], physaddr);</span>
 
 	if (IS_ENABLED(CONFIG_X86_5LEVEL)) {
 		p4d = fixup_pointer(early_dynamic_pgts[next_early_pgt++], physaddr);
<span class="p_header">diff --git a/arch/x86/kernel/ksysfs.c b/arch/x86/kernel/ksysfs.c</span>
<span class="p_header">index 4afc67f5facc..06e1ff5562c0 100644</span>
<span class="p_header">--- a/arch/x86/kernel/ksysfs.c</span>
<span class="p_header">+++ b/arch/x86/kernel/ksysfs.c</span>
<span class="p_chunk">@@ -55,7 +55,7 @@</span> <span class="p_context"> static struct bin_attribute *boot_params_data_attrs[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group boot_params_attr_group = {</span>
<span class="p_add">+static const struct attribute_group boot_params_attr_group = {</span>
 	.attrs = boot_params_version_attrs,
 	.bin_attrs = boot_params_data_attrs,
 };
<span class="p_chunk">@@ -202,7 +202,7 @@</span> <span class="p_context"> static struct bin_attribute *setup_data_data_attrs[] = {</span>
 	NULL,
 };
 
<span class="p_del">-static struct attribute_group setup_data_attr_group = {</span>
<span class="p_add">+static const struct attribute_group setup_data_attr_group = {</span>
 	.attrs = setup_data_type_attrs,
 	.bin_attrs = setup_data_data_attrs,
 };
<span class="p_header">diff --git a/arch/x86/kernel/smpboot.c b/arch/x86/kernel/smpboot.c</span>
<span class="p_header">index b474c8de7fba..54b9e89d4d6b 100644</span>
<span class="p_header">--- a/arch/x86/kernel/smpboot.c</span>
<span class="p_header">+++ b/arch/x86/kernel/smpboot.c</span>
<span class="p_chunk">@@ -971,7 +971,8 @@</span> <span class="p_context"> void common_cpu_up(unsigned int cpu, struct task_struct *idle)</span>
  * Returns zero if CPU booted OK, else error code from
  * -&gt;wakeup_secondary_cpu.
  */
<span class="p_del">-static int do_boot_cpu(int apicid, int cpu, struct task_struct *idle)</span>
<span class="p_add">+static int do_boot_cpu(int apicid, int cpu, struct task_struct *idle,</span>
<span class="p_add">+		       int *cpu0_nmi_registered)</span>
 {
 	volatile u32 *trampoline_status =
 		(volatile u32 *) __va(real_mode_header-&gt;trampoline_status);
<span class="p_chunk">@@ -979,7 +980,6 @@</span> <span class="p_context"> static int do_boot_cpu(int apicid, int cpu, struct task_struct *idle)</span>
 	unsigned long start_ip = real_mode_header-&gt;trampoline_start;
 
 	unsigned long boot_error = 0;
<span class="p_del">-	int cpu0_nmi_registered = 0;</span>
 	unsigned long timeout;
 
 	idle-&gt;thread.sp = (unsigned long)task_pt_regs(idle);
<span class="p_chunk">@@ -1035,7 +1035,7 @@</span> <span class="p_context"> static int do_boot_cpu(int apicid, int cpu, struct task_struct *idle)</span>
 		boot_error = apic-&gt;wakeup_secondary_cpu(apicid, start_ip);
 	else
 		boot_error = wakeup_cpu_via_init_nmi(cpu, start_ip, apicid,
<span class="p_del">-						     &amp;cpu0_nmi_registered);</span>
<span class="p_add">+						     cpu0_nmi_registered);</span>
 
 	if (!boot_error) {
 		/*
<span class="p_chunk">@@ -1080,12 +1080,6 @@</span> <span class="p_context"> static int do_boot_cpu(int apicid, int cpu, struct task_struct *idle)</span>
 		 */
 		smpboot_restore_warm_reset_vector();
 	}
<span class="p_del">-	/*</span>
<span class="p_del">-	 * Clean up the nmi handler. Do this after the callin and callout sync</span>
<span class="p_del">-	 * to avoid impact of possible long unregister time.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	if (cpu0_nmi_registered)</span>
<span class="p_del">-		unregister_nmi_handler(NMI_LOCAL, &quot;wake_cpu0&quot;);</span>
 
 	return boot_error;
 }
<span class="p_chunk">@@ -1093,8 +1087,9 @@</span> <span class="p_context"> static int do_boot_cpu(int apicid, int cpu, struct task_struct *idle)</span>
 int native_cpu_up(unsigned int cpu, struct task_struct *tidle)
 {
 	int apicid = apic-&gt;cpu_present_to_apicid(cpu);
<span class="p_add">+	int cpu0_nmi_registered = 0;</span>
 	unsigned long flags;
<span class="p_del">-	int err;</span>
<span class="p_add">+	int err, ret = 0;</span>
 
 	WARN_ON(irqs_disabled());
 
<span class="p_chunk">@@ -1131,10 +1126,11 @@</span> <span class="p_context"> int native_cpu_up(unsigned int cpu, struct task_struct *tidle)</span>
 
 	common_cpu_up(cpu, tidle);
 
<span class="p_del">-	err = do_boot_cpu(apicid, cpu, tidle);</span>
<span class="p_add">+	err = do_boot_cpu(apicid, cpu, tidle, &amp;cpu0_nmi_registered);</span>
 	if (err) {
 		pr_err(&quot;do_boot_cpu failed(%d) to wakeup CPU#%u\n&quot;, err, cpu);
<span class="p_del">-		return -EIO;</span>
<span class="p_add">+		ret = -EIO;</span>
<span class="p_add">+		goto unreg_nmi;</span>
 	}
 
 	/*
<span class="p_chunk">@@ -1150,7 +1146,15 @@</span> <span class="p_context"> int native_cpu_up(unsigned int cpu, struct task_struct *tidle)</span>
 		touch_nmi_watchdog();
 	}
 
<span class="p_del">-	return 0;</span>
<span class="p_add">+unreg_nmi:</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Clean up the nmi handler. Do this after the callin and callout sync</span>
<span class="p_add">+	 * to avoid impact of possible long unregister time.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	if (cpu0_nmi_registered)</span>
<span class="p_add">+		unregister_nmi_handler(NMI_LOCAL, &quot;wake_cpu0&quot;);</span>
<span class="p_add">+</span>
<span class="p_add">+	return ret;</span>
 }
 
 /**
<span class="p_header">diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c</span>
<span class="p_header">index 1107626938cc..56ba05312759 100644</span>
<span class="p_header">--- a/arch/x86/kvm/svm.c</span>
<span class="p_header">+++ b/arch/x86/kvm/svm.c</span>
<span class="p_chunk">@@ -1100,7 +1100,7 @@</span> <span class="p_context"> static __init int svm_hardware_setup(void)</span>
 
 	if (vls) {
 		if (!npt_enabled ||
<span class="p_del">-		    !boot_cpu_has(X86_FEATURE_VIRTUAL_VMLOAD_VMSAVE) ||</span>
<span class="p_add">+		    !boot_cpu_has(X86_FEATURE_V_VMSAVE_VMLOAD) ||</span>
 		    !IS_ENABLED(CONFIG_X86_64)) {
 			vls = false;
 		} else {
<span class="p_header">diff --git a/arch/x86/mm/mmap.c b/arch/x86/mm/mmap.c</span>
<span class="p_header">index 229d04a83f85..a88cfbfbd078 100644</span>
<span class="p_header">--- a/arch/x86/mm/mmap.c</span>
<span class="p_header">+++ b/arch/x86/mm/mmap.c</span>
<span class="p_chunk">@@ -50,8 +50,7 @@</span> <span class="p_context"> unsigned long tasksize_64bit(void)</span>
 static unsigned long stack_maxrandom_size(unsigned long task_size)
 {
 	unsigned long max = 0;
<span class="p_del">-	if ((current-&gt;flags &amp; PF_RANDOMIZE) &amp;&amp;</span>
<span class="p_del">-		!(current-&gt;personality &amp; ADDR_NO_RANDOMIZE)) {</span>
<span class="p_add">+	if (current-&gt;flags &amp; PF_RANDOMIZE) {</span>
 		max = (-1UL) &amp; __STACK_RND_MASK(task_size == tasksize_32bit());
 		max &lt;&lt;= PAGE_SHIFT;
 	}
<span class="p_chunk">@@ -79,13 +78,13 @@</span> <span class="p_context"> static int mmap_is_legacy(void)</span>
 
 static unsigned long arch_rnd(unsigned int rndbits)
 {
<span class="p_add">+	if (!(current-&gt;flags &amp; PF_RANDOMIZE))</span>
<span class="p_add">+		return 0;</span>
 	return (get_random_long() &amp; ((1UL &lt;&lt; rndbits) - 1)) &lt;&lt; PAGE_SHIFT;
 }
 
 unsigned long arch_mmap_rnd(void)
 {
<span class="p_del">-	if (!(current-&gt;flags &amp; PF_RANDOMIZE))</span>
<span class="p_del">-		return 0;</span>
 	return arch_rnd(mmap_is_ia32() ? mmap32_rnd_bits : mmap64_rnd_bits);
 }
 
<span class="p_header">diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">index 3e4bdb442fbc..f44c0bc95aa2 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_chunk">@@ -26,7 +26,7 @@</span> <span class="p_context"></span>
 static struct bau_operations ops __ro_after_init;
 
 /* timeouts in nanoseconds (indexed by UVH_AGING_PRESCALE_SEL urgency7 30:28) */
<span class="p_del">-static int timeout_base_ns[] = {</span>
<span class="p_add">+static const int timeout_base_ns[] = {</span>
 		20,
 		160,
 		1280,
<span class="p_chunk">@@ -1216,7 +1216,7 @@</span> <span class="p_context"> static struct bau_pq_entry *find_another_by_swack(struct bau_pq_entry *msg,</span>
  * set a bit in the UVH_LB_BAU_INTD_SOFTWARE_ACKNOWLEDGE register.
  * Such a message must be ignored.
  */
<span class="p_del">-void process_uv2_message(struct msg_desc *mdp, struct bau_control *bcp)</span>
<span class="p_add">+static void process_uv2_message(struct msg_desc *mdp, struct bau_control *bcp)</span>
 {
 	unsigned long mmr_image;
 	unsigned char swack_vec;
<span class="p_header">diff --git a/fs/binfmt_elf.c b/fs/binfmt_elf.c</span>
<span class="p_header">index 879ff9c7ffd0..6466153f2bf0 100644</span>
<span class="p_header">--- a/fs/binfmt_elf.c</span>
<span class="p_header">+++ b/fs/binfmt_elf.c</span>
<span class="p_chunk">@@ -664,8 +664,7 @@</span> <span class="p_context"> static unsigned long randomize_stack_top(unsigned long stack_top)</span>
 {
 	unsigned long random_variable = 0;
 
<span class="p_del">-	if ((current-&gt;flags &amp; PF_RANDOMIZE) &amp;&amp;</span>
<span class="p_del">-		!(current-&gt;personality &amp; ADDR_NO_RANDOMIZE)) {</span>
<span class="p_add">+	if (current-&gt;flags &amp; PF_RANDOMIZE) {</span>
 		random_variable = get_random_long();
 		random_variable &amp;= STACK_RND_MASK;
 		random_variable &lt;&lt;= PAGE_SHIFT;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



