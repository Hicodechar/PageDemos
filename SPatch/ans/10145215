
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>&quot;BUG: using smp_processor_id() in preemptible&quot; with KPTI on 4.14.11 - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    &quot;BUG: using smp_processor_id() in preemptible&quot; with KPTI on 4.14.11</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 4, 2018, 5:07 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180104170712.GB3040@hirez.programming.kicks-ass.net&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10145215/mbox/"
   >mbox</a>
|
   <a href="/patch/10145215/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10145215/">/patch/10145215/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	040A9601A1 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  4 Jan 2018 17:07:25 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id CC2C128600
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  4 Jan 2018 17:07:24 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id C145028607; Thu,  4 Jan 2018 17:07:24 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3DD4828600
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  4 Jan 2018 17:07:24 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751872AbeADRHV (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 4 Jan 2018 12:07:21 -0500
Received: from merlin.infradead.org ([205.233.59.134]:49968 &quot;EHLO
	merlin.infradead.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1750770AbeADRHT (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 4 Jan 2018 12:07:19 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=infradead.org; s=merlin.20170209;
	h=In-Reply-To:Content-Type:MIME-Version:
	References:Message-ID:Subject:Cc:To:From:Date:Sender:Reply-To:
	Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
	Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
	List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
	bh=v7JNQw0PfHyYS3I4jMFxDa033zyPlsyeb2157dIlP90=;
	b=B3onVufJCOpbpYKki7QFbl2RO
	AdluKvOMreTaxHhYLEQYA+x1BnVI0d/Gqg6c8VTNz5IRWAESLPVbGm12fG1oqdcw8UsyrtQnL0ANZ
	Il/CG3cUqz9cKoAVbeGVwsB5iuS6P4ROcgT8u8kD3AEYILW/K5pKxGidX798H1s/FRo8ICjtgEIUW
	X53nZwsfXElMzed8R5mqnmWpeadzuhVIJMLyno/7c1pW8PA3W/1eOAAvHkt2wN+5+zX4lTRQ4iQ5j
	onVCh8svz9eOdpE6iVz4A3nuzXT10vhaQzbogVoyWyfRpYoPPRJzDKl0OzqzjW06JyHFmX0igop/E
	i7p0ozy/w==;
Received: from j217100.upc-j.chello.nl ([24.132.217.100]
	helo=hirez.programming.kicks-ass.net)
	by merlin.infradead.org with esmtpsa (Exim 4.89 #1 (Red Hat Linux))
	id 1eX8z5-0000zP-5h; Thu, 04 Jan 2018 17:07:15 +0000
Received: by hirez.programming.kicks-ass.net (Postfix, from userid 1000)
	id 261C820297EA1; Thu,  4 Jan 2018 18:07:12 +0100 (CET)
Date: Thu, 4 Jan 2018 18:07:12 +0100
From: Peter Zijlstra &lt;peterz@infradead.org&gt;
To: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Cc: Thomas Zeitlhofer &lt;thomas.zeitlhofer+lkml@ze-it.at&gt;,
	Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	Hugh Dickins &lt;hughd@google.com&gt;, LKML &lt;linux-kernel@vger.kernel.org&gt;
Subject: Re: &quot;BUG: using smp_processor_id() in preemptible&quot; with KPTI on
	4.14.11
Message-ID: &lt;20180104170712.GB3040@hirez.programming.kicks-ass.net&gt;
References: &lt;20180104015906.czhm7kis33iizsia@toau&gt;
	&lt;20180104102029.tpv5utpbdkrisgvl@toau&gt;
	&lt;20180104105111.GA2754@kroah.com&gt;
	&lt;20180104124320.eawuo6q7wnwzpf7s@toau&gt;
	&lt;20180104125528.GA15548@kroah.com&gt;
	&lt;20180104152516.3sql2ayoemlephig@toau&gt;
	&lt;alpine.DEB.2.20.1801041632370.1771@nanos&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: &lt;alpine.DEB.2.20.1801041632370.1771@nanos&gt;
User-Agent: Mutt/1.9.2 (2017-12-15)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a> - Jan. 4, 2018, 5:07 p.m.</div>
<pre class="content">
On Thu, Jan 04, 2018 at 04:37:24PM +0100, Thomas Gleixner wrote:
<span class="quote">&gt; &gt; Yes:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;    BUG: using smp_processor_id() in preemptible [00000000] code: ovsdb-server/4498</span>
<span class="quote">&gt; &gt;    caller is native_flush_tlb_single+0x57/0xc0</span>
<span class="quote">&gt; &gt;    CPU: 2 PID: 4498 Comm: ovsdb-server Not tainted 4.15.0-rc6-kvm-00423-gea1908c252eb #3</span>
<span class="quote">&gt; &gt;    Hardware name: MSI MS-7798/B75MA-P45 (MS-7798), BIOS V1.9 09/30/2013</span>
<span class="quote">&gt; &gt;    Call Trace:</span>
<span class="quote">&gt; &gt;     dump_stack+0x5c/0x86</span>
<span class="quote">&gt; &gt;     check_preemption_disabled+0xdd/0xe0</span>
<span class="quote">&gt; &gt;     native_flush_tlb_single+0x57/0xc0</span>
<span class="quote">&gt; &gt;     ? __set_pte_vaddr+0x2d/0x40</span>
<span class="quote">&gt; &gt;     __set_pte_vaddr+0x2d/0x40</span>
<span class="quote">&gt; &gt;     set_pte_vaddr+0x2f/0x40</span>
<span class="quote">&gt; &gt;     cea_set_pte+0x30/0x40</span>
<span class="quote">&gt; &gt;     ds_update_cea.constprop.4+0x4d/0x70</span>
<span class="quote">&gt; &gt;     reserve_ds_buffers+0x159/0x410</span>
<span class="quote">&gt; &gt;     ? wp_page_copy+0x370/0x6c0</span>
<span class="quote">&gt; &gt;     x86_reserve_hardware+0x150/0x160</span>
<span class="quote">&gt; &gt;     x86_pmu_event_init+0x3e/0x1f0</span>
<span class="quote">&gt; &gt;     perf_try_init_event+0x69/0x80</span>
<span class="quote">&gt; &gt;     perf_event_alloc+0x652/0x740</span>
<span class="quote">&gt; &gt;     SyS_perf_event_open+0x3f6/0xd60</span>
<span class="quote">&gt; &gt;     do_syscall_64+0x5c/0x190</span>
<span class="quote">&gt; &gt;     entry_SYSCALL64_slow_path+0x25/0x25</span>
<span class="quote">&gt; &gt;    RIP: 0033:0x72bff0a3c0b9</span>
<span class="quote">&gt; &gt;    RSP: 002b:00007ffed11c2f18 EFLAGS: 00000206 ORIG_RAX: 000000000000012a</span>
<span class="quote">&gt; &gt;    RAX: ffffffffffffffda RBX: 00007ffed11c30f0 RCX: 000072bff0a3c0b9</span>
<span class="quote">&gt; &gt;    RDX: 00000000ffffffff RSI: 0000000000000000 RDI: 00007ffed11c2f20</span>
<span class="quote">&gt; &gt;    RBP: 0000000000000000 R08: 0000000000000000 R09: 0000007000000000</span>
<span class="quote">&gt; &gt;    R10: 00000000ffffffff R11: 0000000000000206 R12: 0000000000000008</span>
<span class="quote">&gt; &gt;    R13: 0000000000000000 R14: 00007ffed11c30d0 R15: 000060986ecfb600</span>

Fun, so set_pte_vaddr() and the whole cpu_entry_area are supposed to be
per CPU. But the DS crud does cross CPU updates of those tables.

So we need some additional fun and games..

How&#39;s the below?

---
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=178217">Thomas Zeitlhofer</a> - Jan. 4, 2018, 6:38 p.m.</div>
<pre class="content">
On Thu, Jan 04, 2018 at 06:07:12PM +0100, Peter Zijlstra wrote:
<span class="quote">&gt; On Thu, Jan 04, 2018 at 04:37:24PM +0100, Thomas Gleixner wrote:</span>
<span class="quote">&gt; &gt; &gt; Yes:</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt;    BUG: using smp_processor_id() in preemptible [00000000] code: ovsdb-server/4498</span>
<span class="quote">&gt; &gt; &gt;    caller is native_flush_tlb_single+0x57/0xc0</span>
<span class="quote">&gt; &gt; &gt;    CPU: 2 PID: 4498 Comm: ovsdb-server Not tainted 4.15.0-rc6-kvm-00423-gea1908c252eb #3</span>
<span class="quote">&gt; &gt; &gt;    Hardware name: MSI MS-7798/B75MA-P45 (MS-7798), BIOS V1.9 09/30/2013</span>
<span class="quote">&gt; &gt; &gt;    Call Trace:</span>
<span class="quote">&gt; &gt; &gt;     dump_stack+0x5c/0x86</span>
<span class="quote">&gt; &gt; &gt;     check_preemption_disabled+0xdd/0xe0</span>
<span class="quote">&gt; &gt; &gt;     native_flush_tlb_single+0x57/0xc0</span>
<span class="quote">&gt; &gt; &gt;     ? __set_pte_vaddr+0x2d/0x40</span>
<span class="quote">&gt; &gt; &gt;     __set_pte_vaddr+0x2d/0x40</span>
<span class="quote">&gt; &gt; &gt;     set_pte_vaddr+0x2f/0x40</span>
<span class="quote">&gt; &gt; &gt;     cea_set_pte+0x30/0x40</span>
<span class="quote">&gt; &gt; &gt;     ds_update_cea.constprop.4+0x4d/0x70</span>
<span class="quote">&gt; &gt; &gt;     reserve_ds_buffers+0x159/0x410</span>
<span class="quote">&gt; &gt; &gt;     ? wp_page_copy+0x370/0x6c0</span>
<span class="quote">&gt; &gt; &gt;     x86_reserve_hardware+0x150/0x160</span>
<span class="quote">&gt; &gt; &gt;     x86_pmu_event_init+0x3e/0x1f0</span>
<span class="quote">&gt; &gt; &gt;     perf_try_init_event+0x69/0x80</span>
<span class="quote">&gt; &gt; &gt;     perf_event_alloc+0x652/0x740</span>
<span class="quote">&gt; &gt; &gt;     SyS_perf_event_open+0x3f6/0xd60</span>
<span class="quote">&gt; &gt; &gt;     do_syscall_64+0x5c/0x190</span>
<span class="quote">&gt; &gt; &gt;     entry_SYSCALL64_slow_path+0x25/0x25</span>
<span class="quote">&gt; &gt; &gt;    RIP: 0033:0x72bff0a3c0b9</span>
<span class="quote">&gt; &gt; &gt;    RSP: 002b:00007ffed11c2f18 EFLAGS: 00000206 ORIG_RAX: 000000000000012a</span>
<span class="quote">&gt; &gt; &gt;    RAX: ffffffffffffffda RBX: 00007ffed11c30f0 RCX: 000072bff0a3c0b9</span>
<span class="quote">&gt; &gt; &gt;    RDX: 00000000ffffffff RSI: 0000000000000000 RDI: 00007ffed11c2f20</span>
<span class="quote">&gt; &gt; &gt;    RBP: 0000000000000000 R08: 0000000000000000 R09: 0000007000000000</span>
<span class="quote">&gt; &gt; &gt;    R10: 00000000ffffffff R11: 0000000000000206 R12: 0000000000000008</span>
<span class="quote">&gt; &gt; &gt;    R13: 0000000000000000 R14: 00007ffed11c30d0 R15: 000060986ecfb600</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Fun, so set_pte_vaddr() and the whole cpu_entry_area are supposed to be</span>
<span class="quote">&gt; per CPU. But the DS crud does cross CPU updates of those tables.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; So we need some additional fun and games..</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; How&#39;s the below?</span>
[...]

Looks good - I have successfully tested it on top of 4.14.11 and
4.15-rc6. In both cases, the error message is gone when this patch is
applied.

Thanks,

Thomas
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=178217">Thomas Zeitlhofer</a> - Jan. 6, 2018, 9:38 p.m.</div>
<pre class="content">
On Thu, Jan 04, 2018 at 07:38:00PM +0100, Thomas Zeitlhofer wrote:
<span class="quote">&gt; On Thu, Jan 04, 2018 at 06:07:12PM +0100, Peter Zijlstra wrote:</span>
<span class="quote">&gt; &gt; On Thu, Jan 04, 2018 at 04:37:24PM +0100, Thomas Gleixner wrote:</span>
<span class="quote">&gt; &gt; &gt; &gt; Yes:</span>
<span class="quote">&gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt;    BUG: using smp_processor_id() in preemptible [00000000] code: ovsdb-server/4498</span>
<span class="quote">&gt; &gt; &gt; &gt;    caller is native_flush_tlb_single+0x57/0xc0</span>
<span class="quote">&gt; &gt; &gt; &gt;    CPU: 2 PID: 4498 Comm: ovsdb-server Not tainted 4.15.0-rc6-kvm-00423-gea1908c252eb #3</span>
<span class="quote">&gt; &gt; &gt; &gt;    Hardware name: MSI MS-7798/B75MA-P45 (MS-7798), BIOS V1.9 09/30/2013</span>
<span class="quote">&gt; &gt; &gt; &gt;    Call Trace:</span>
<span class="quote">&gt; &gt; &gt; &gt;     dump_stack+0x5c/0x86</span>
<span class="quote">&gt; &gt; &gt; &gt;     check_preemption_disabled+0xdd/0xe0</span>
<span class="quote">&gt; &gt; &gt; &gt;     native_flush_tlb_single+0x57/0xc0</span>
<span class="quote">&gt; &gt; &gt; &gt;     ? __set_pte_vaddr+0x2d/0x40</span>
<span class="quote">&gt; &gt; &gt; &gt;     __set_pte_vaddr+0x2d/0x40</span>
<span class="quote">&gt; &gt; &gt; &gt;     set_pte_vaddr+0x2f/0x40</span>
<span class="quote">&gt; &gt; &gt; &gt;     cea_set_pte+0x30/0x40</span>
<span class="quote">&gt; &gt; &gt; &gt;     ds_update_cea.constprop.4+0x4d/0x70</span>
<span class="quote">&gt; &gt; &gt; &gt;     reserve_ds_buffers+0x159/0x410</span>
<span class="quote">&gt; &gt; &gt; &gt;     ? wp_page_copy+0x370/0x6c0</span>
<span class="quote">&gt; &gt; &gt; &gt;     x86_reserve_hardware+0x150/0x160</span>
<span class="quote">&gt; &gt; &gt; &gt;     x86_pmu_event_init+0x3e/0x1f0</span>
<span class="quote">&gt; &gt; &gt; &gt;     perf_try_init_event+0x69/0x80</span>
<span class="quote">&gt; &gt; &gt; &gt;     perf_event_alloc+0x652/0x740</span>
<span class="quote">&gt; &gt; &gt; &gt;     SyS_perf_event_open+0x3f6/0xd60</span>
<span class="quote">&gt; &gt; &gt; &gt;     do_syscall_64+0x5c/0x190</span>
<span class="quote">&gt; &gt; &gt; &gt;     entry_SYSCALL64_slow_path+0x25/0x25</span>
<span class="quote">&gt; &gt; &gt; &gt;    RIP: 0033:0x72bff0a3c0b9</span>
<span class="quote">&gt; &gt; &gt; &gt;    RSP: 002b:00007ffed11c2f18 EFLAGS: 00000206 ORIG_RAX: 000000000000012a</span>
<span class="quote">&gt; &gt; &gt; &gt;    RAX: ffffffffffffffda RBX: 00007ffed11c30f0 RCX: 000072bff0a3c0b9</span>
<span class="quote">&gt; &gt; &gt; &gt;    RDX: 00000000ffffffff RSI: 0000000000000000 RDI: 00007ffed11c2f20</span>
<span class="quote">&gt; &gt; &gt; &gt;    RBP: 0000000000000000 R08: 0000000000000000 R09: 0000007000000000</span>
<span class="quote">&gt; &gt; &gt; &gt;    R10: 00000000ffffffff R11: 0000000000000206 R12: 0000000000000008</span>
<span class="quote">&gt; &gt; &gt; &gt;    R13: 0000000000000000 R14: 00007ffed11c30d0 R15: 000060986ecfb600</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Fun, so set_pte_vaddr() and the whole cpu_entry_area are supposed to be</span>
<span class="quote">&gt; &gt; per CPU. But the DS crud does cross CPU updates of those tables.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; So we need some additional fun and games..</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; How&#39;s the below?</span>
<span class="quote">&gt; [...]</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Looks good - I have successfully tested it on top of 4.14.11 and</span>
<span class="quote">&gt; 4.15-rc6. In both cases, the error message is gone when this patch is</span>
<span class="quote">&gt; applied.</span>

While solving the previous problem, this patch also introduces new &quot;fun
and games&quot;...  

Now, terminating a systemd-nspawn container, reliably crashes the host
(so far tested only on Haswell, if that matters). Once, I was able to
capture the following trace:

   BUG: unable to handle kernel paging request at 0000000000206ccc
   IP: __task_pid_nr_ns+0x57/0xc0
   PGD 0 P4D 0 
   Oops: 0000 [#1] PREEMPT SMP PTI
   Modules linked in: uinput veth ip_vti ip_tunnel esp4 xfrm6_mode_tunnel fuse ccm xt_CHECKSUM tun bridge stp llc xfrm_user xfrm_algo ebtable_filter twofish_generic twofish_avx_x86_64 ebtables twofish_x86_64_3way twofish_x86_64 twofish_common vxlan ip6_udp_tunnel udp_tunnel serpent_avx2 serpent_avx_x86_64 serpent_sse2_x86_64 serpent_generic devlink blowfish_generic blowfish_x86_64 blowfish_common cast5_avx_x86_64 cast5_generic cast_common des_generic algif_skcipher camellia_generic camellia_aesni_avx2 camellia_aesni_avx_x86_64 ablk_helper camellia_x86_64 xcbc openvswitch nf_nat_ipv6 md4 algif_hash af_alg cmac rfcomm bnep xt_policy nf_conntrack_ipv6 nf_defrag_ipv6 ip6table_filter ip6_tables ipt_MASQUERADE nf_nat_masquerade_ipv4 iptable_nat msr nf_nat_ipv4 nf_nat xt_TCPMSS iptable_mangle ipt_REJECT
    nf_reject_ipv4 xt_tcpudp nf_conntrack_ipv4 nf_defrag_ipv4 xt_multiport xt_conntrack nf_conntrack binfmt_misc iptable_filter snd_hda_codec_hdmi hid_sensor_als hid_sensor_magn_3d hid_sensor_gyro_3d hid_sensor_incl_3d hid_sensor_rotation hid_sensor_accel_3d hid_sensor_trigger hid_sensor_iio_common industrialio_triggered_buffer kfifo_buf industrialio rtsx_pci_sdmmc mmc_core iTCO_wdt wmi_bmof arc4 x86_pkg_temp_thermal coretemp kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel uvcvideo joydev wacom videobuf2_vmalloc videobuf2_memops videobuf2_v4l2 videobuf2_core hid_sensor_hub videodev btusb btrtl hid_multitouch btbcm media btintel rtsx_pci i915 bluetooth snd_hda_codec_conexant lpc_ich snd_hda_codec_generic mfd_core iwlmvm iosf_mbi i2c_algo_bit ecdh_generic
    drm_kms_helper mac80211 snd_hda_intel syscopyarea snd_hda_codec sysfillrect sysimgblt snd_hda_core snd_pcm_oss iwlwifi fb_sys_fops thinkpad_acpi snd_mixer_oss drm nvram snd_pcm video cfg80211 intel_gtt snd_timer rfkill snd evdev wmi ecryptfs nfsd ip_tables x_tables ipv6 crc_ccitt
   CPU: 2 PID: 1 Comm: systemd Not tainted 4.14.12-kvm-00437-gd6765c06f03d #4
   Hardware name: LENOVO 20CD0035GE/20CD0035GE, BIOS GQET40WW (1.20 ) 11/07/2014
   task: ffff9c66560e0d00 task.stack: ffffbc6a00038000
   RIP: 0010:__task_pid_nr_ns+0x57/0xc0
   RSP: 0018:ffffbc6a0003bdb0 EFLAGS: 00010246
   RAX: ffff9c66560e8680 RBX: 0000000000000000 RCX: 0000000000206cc8
   RDX: 0000000000000000 RSI: 0000000000000000 RDI: 00000000000004d0
   RBP: 0000000000000000 R08: ffffffffb0237b10 R09: 0000000000000005
   R10: ffffbc6a0003bee0 R11: ffff9c65aa33c004 R12: ffffffffb02309a0
   R13: 0000000000001000 R14: ffff9c65ecbd4a00 R15: ffff9c6624516b00
   FS:  0000767a01669980(0000) GS:ffff9c665f280000(0000) knlGS:0000000000000000
   CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
   CR2: 0000000000206ccc CR3: 0000000215476003 CR4: 00000000001606e0
   Call Trace:
    cgroup_procs_show+0x10/0x30
    seq_read+0x30c/0x3d0
    __vfs_read+0x2e/0x150
    vfs_read+0x84/0x110
    SyS_read+0x4d/0xc0
    do_syscall_64+0x5c/0x190
    entry_SYSCALL64_slow_path+0x25/0x25
   RIP: 0033:0x767a00fa671d
   RSP: 002b:00007ffca8edc6e0 EFLAGS: 00000293 ORIG_RAX: 0000000000000000
   RAX: ffffffffffffffda RBX: 000057d4d8a02c10 RCX: 0000767a00fa671d
   RDX: 0000000000001000 RSI: 000057d4d8a05320 RDI: 0000000000000083
   RBP: 0000000000000d68 R08: 0000767a01265178 R09: 0000000000001010
   R10: 000057d4d8a03490 R11: 0000000000000293 R12: 0000767a01261440
   R13: 0000767a01260900 R14: 00000000ffffffff R15: 0000000000000000
   Code: 74 0d 48 8d 44 6d 00 48 8d 3c c5 d0 04 00 00 48 8b 9b 98 04 00 00 48 01 fb 48 8b 0b 48 85 c9 74 37 41 8b b4 24 30 08 00 00 31 db &lt;3b&gt; 71 04 77 0d 48 c1 e6 05 48 01 f1 4c 3b 61 38 74 0c e8 12 db 
   RIP: __task_pid_nr_ns+0x57/0xc0 RSP: ffffbc6a0003bdb0
   CR2: 0000000000206ccc
   ---[ end trace ce7578070732b5ee ]---
   BUG: unable to handle kernel NULL pointer dereference at 00000000000000b0
   IP: pids_free+0xb/0x30
   PGD 0 P4D 0 
   Oops: 0000 [#2] PREEMPT SMP PTI
   Modules linked in: uinput veth ip_vti ip_tunnel esp4 xfrm6_mode_tunnel fuse ccm xt_CHECKSUM tun bridge stp llc xfrm_user xfrm_algo ebtable_filter twofish_generic twofish_avx_x86_64 ebtables twofish_x86_64_3way twofish_x86_64 twofish_common vxlan ip6_udp_tunnel udp_tunnel serpent_avx2 serpent_avx_x86_64 serpent_sse2_x86_64 serpent_generic devlink blowfish_generic blowfish_x86_64 blowfish_common cast5_avx_x86_64 cast5_generic cast_common des_generic algif_skcipher camellia_generic camellia_aesni_avx2 camellia_aesni_avx_x86_64 ablk_helper camellia_x86_64 xcbc openvswitch nf_nat_ipv6 md4 algif_hash af_alg cmac rfcomm bnep xt_policy nf_conntrack_ipv6 nf_defrag_ipv6 ip6table_filter ip6_tables ipt_MASQUERADE nf_nat_masquerade_ipv4 iptable_nat msr nf_nat_ipv4 nf_nat xt_TCPMSS iptable_mangle ipt_REJECT
    nf_reject_ipv4 xt_tcpudp nf_conntrack_ipv4 nf_defrag_ipv4 xt_multiport xt_conntrack nf_conntrack binfmt_misc iptable_filter snd_hda_codec_hdmi hid_sensor_als hid_sensor_magn_3d hid_sensor_gyro_3d hid_sensor_incl_3d hid_sensor_rotation hid_sensor_accel_3d hid_sensor_trigger hid_sensor_iio_common industrialio_triggered_buffer kfifo_buf industrialio rtsx_pci_sdmmc mmc_core iTCO_wdt wmi_bmof arc4 x86_pkg_temp_thermal coretemp kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel uvcvideo joydev wacom videobuf2_vmalloc videobuf2_memops videobuf2_v4l2 videobuf2_core hid_sensor_hub videodev btusb btrtl hid_multitouch btbcm media btintel rtsx_pci i915 bluetooth snd_hda_codec_conexant lpc_ich snd_hda_codec_generic mfd_core iwlmvm iosf_mbi i2c_algo_bit ecdh_generic
    drm_kms_helper mac80211 snd_hda_intel syscopyarea snd_hda_codec sysfillrect sysimgblt snd_hda_core snd_pcm_oss iwlwifi fb_sys_fops thinkpad_acpi snd_mixer_oss drm nvram snd_pcm video cfg80211 intel_gtt snd_timer rfkill snd evdev wmi ecryptfs nfsd ip_tables x_tables ipv6 crc_ccitt
   CPU: 2 PID: 1 Comm: systemd Tainted: G      D         4.14.12-kvm-00437-gd6765c06f03d #4
   Hardware name: LENOVO 20CD0035GE/20CD0035GE, BIOS GQET40WW (1.20 ) 11/07/2014
   task: ffff9c66560e0d00 task.stack: ffffbc6a00038000
   RIP: 0010:pids_free+0xb/0x30
   RSP: 0018:ffffbc6a0003bdd8 EFLAGS: 00010297
   RAX: 0000000000000000 RBX: 000000000000000a RCX: 000000000000000a
   RDX: 000000000000000a RSI: 000000000000000c RDI: ffff9c6624516b00
   RBP: ffff9c6624516b00 R08: 0000000000000000 R09: 0000000000000000
   R10: ffff9c65bf8a8510 R11: ffff9c6656003800 R12: ffffffffb02387e0
   R13: ffff9c662ac6d590 R14: ffff9c66534cc7a0 R15: ffff9c6625d5f1e0
   FS:  0000000000000000(0000) GS:ffff9c665f280000(0000) knlGS:0000000000000000
   CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
   CR2: 00000000000000b0 CR3: 000000008220a006 CR4: 00000000001606e0
   Call Trace:
    cgroup_free+0x57/0xd0
    __put_task_struct+0x38/0x130
    cgroup_procs_release+0x12/0x20
    kernfs_fop_release+0x82/0x90
    __fput+0x9d/0x220
    task_work_run+0x84/0xa0
    do_exit+0x2b1/0xab0
    rewind_stack_do_exit+0x17/0x20
   Code: c7 e8 6a fd ff ff 48 8b 80 b0 00 00 00 48 83 b8 b0 00 00 00 00 75 e7 f3 c3 0f 1f 80 00 00 00 00 48 8b 87 88 07 00 00 48 8b 40 50 &lt;48&gt; 83 b8 b0 00 00 00 00 74 19 48 89 c7 e8 33 fd ff ff 48 8b 80 
   RIP: pids_free+0xb/0x30 RSP: ffffbc6a0003bdd8
   CR2: 00000000000000b0
   ---[ end trace ce7578070732b5ef ]---
   Fixing recursive fault but reboot is needed!
   ------------[ cut here ]------------
   WARNING: CPU: 2 PID: 1 at kernel/rcu/tree_plugin.h:329 rcu_note_context_switch+0x27/0x350
   Modules linked in: uinput veth ip_vti ip_tunnel esp4 xfrm6_mode_tunnel fuse ccm xt_CHECKSUM tun bridge stp llc xfrm_user xfrm_algo ebtable_filter twofish_generic twofish_avx_x86_64 ebtables twofish_x86_64_3way twofish_x86_64 twofish_common vxlan ip6_udp_tunnel udp_tunnel serpent_avx2 serpent_avx_x86_64 serpent_sse2_x86_64 serpent_generic devlink blowfish_generic blowfish_x86_64 blowfish_common cast5_avx_x86_64 cast5_generic cast_common des_generic algif_skcipher camellia_generic camellia_aesni_avx2 camellia_aesni_avx_x86_64 ablk_helper camellia_x86_64 xcbc openvswitch nf_nat_ipv6 md4 algif_hash af_alg cmac rfcomm bnep xt_policy nf_conntrack_ipv6 nf_defrag_ipv6 ip6table_filter ip6_tables ipt_MASQUERADE nf_nat_masquerade_ipv4 iptable_nat msr nf_nat_ipv4 nf_nat xt_TCPMSS iptable_mangle ipt_REJECT
    nf_reject_ipv4 xt_tcpudp nf_conntrack_ipv4 nf_defrag_ipv4 xt_multiport xt_conntrack nf_conntrack binfmt_misc iptable_filter snd_hda_codec_hdmi hid_sensor_als hid_sensor_magn_3d hid_sensor_gyro_3d hid_sensor_incl_3d hid_sensor_rotation hid_sensor_accel_3d hid_sensor_trigger hid_sensor_iio_common industrialio_triggered_buffer kfifo_buf industrialio rtsx_pci_sdmmc mmc_core iTCO_wdt wmi_bmof arc4 x86_pkg_temp_thermal coretemp kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel uvcvideo joydev wacom videobuf2_vmalloc videobuf2_memops videobuf2_v4l2 videobuf2_core hid_sensor_hub videodev btusb btrtl hid_multitouch btbcm media btintel rtsx_pci i915 bluetooth snd_hda_codec_conexant lpc_ich snd_hda_codec_generic mfd_core iwlmvm iosf_mbi i2c_algo_bit ecdh_generic
    drm_kms_helper mac80211 snd_hda_intel syscopyarea snd_hda_codec sysfillrect sysimgblt snd_hda_core snd_pcm_oss iwlwifi fb_sys_fops thinkpad_acpi snd_mixer_oss drm nvram snd_pcm video cfg80211 intel_gtt snd_timer rfkill snd evdev wmi ecryptfs nfsd ip_tables x_tables ipv6 crc_ccitt
   CPU: 2 PID: 1 Comm: systemd Tainted: G      D         4.14.12-kvm-00437-gd6765c06f03d #4
   Hardware name: LENOVO 20CD0035GE/20CD0035GE, BIOS GQET40WW (1.20 ) 11/07/2014
   task: ffff9c66560e0d00 task.stack: ffffbc6a00038000
   RIP: 0010:rcu_note_context_switch+0x27/0x350
   RSP: 0018:ffffbc6a0003be58 EFLAGS: 00010002
   RAX: 0000000000000001 RBX: ffff9c66560e0d00 RCX: 0000000000000001
   RDX: 0000000000000000 RSI: ffffffffafff992f RDI: ffffffffaffb7ead
   RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000365
   R10: 0000000000000086 R11: 0000000000000000 R12: ffff9c665f29fbc0
   R13: ffff9c66560e0d00 R14: ffff9c66560e12a8 R15: 000000000001fbc0
   FS:  0000000000000000(0000) GS:ffff9c665f280000(0000) knlGS:0000000000000000
   CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
   CR2: 00000000000000b0 CR3: 000000008220a006 CR4: 00000000001606e0
   Call Trace:
    __schedule+0x84/0x6f0
    schedule+0x37/0x90
    do_exit+0x8c2/0xab0
    rewind_stack_do_exit+0x17/0x20
   Code: 00 00 00 00 41 56 41 55 41 54 55 89 fd 53 65 48 8b 1c 25 00 4d 01 00 e8 48 da ff ff 40 84 ed 8b 83 f8 02 00 00 75 7d 85 c0 7e 7d &lt;0f&gt; ff 80 bb fc 02 00 00 00 0f 84 89 00 00 00 e8 c5 ca ff ff e8 
   ---[ end trace ce7578070732b5f0 ]---
   INFO: rcu_preempt detected stalls on CPUs/tasks:
   	Tasks blocked on level-0 rcu_node (CPUs 0-7): P1
   	(detected by 2, t=60002 jiffies, g=551687, c=551686, q=11683)
   systemd         D    0     1      0 0x80080002
   Call Trace:
    ? __schedule+0x292/0x6f0
    schedule+0x37/0x90
    do_exit+0x8c2/0xab0
    rewind_stack_do_exit+0x17/0x20
   systemd         D    0     1      0 0x80080002
   Call Trace:
    ? __schedule+0x292/0x6f0
    schedule+0x37/0x90
    do_exit+0x8c2/0xab0
    rewind_stack_do_exit+0x17/0x20
   
The crash does not happen with plain 4.14.11, but when this patch (*) is
included it happens with 4.14.1[12], and 4.14.12 plus the following set
of patches from the current 4.14 stable-queue:

	x86-mm-set-modules_end-to-0xffffffffff000000.patch
	x86-mm-map-cpu_entry_area-at-the-same-place-on-4-5-level.patch
	x86-kaslr-fix-the-vaddr_end-mess.patch
(*)	x86-events-intel-ds-use-the-proper-cache-flush-method-for-mapping-ds-buffers.patch
	x86-tlb-drop-the-_gpl-from-the-cpu_tlbstate-export.patch
	x86-alternatives-add-missing-n-at-end-of-alternative-inline-asm.patch
	x86-pti-rename-bug_cpu_insecure-to-bug_cpu_meltdown.patch
	kernel-acct.c-fix-the-acct-needcheck-check-in-check_free_space.patch
	mm-mprotect-add-a-cond_resched-inside-change_pmd_range.patch
	mm-sparse.c-wrong-allocation-for-mem_section.patch
	userfaultfd-clear-the-vma-vm_userfaultfd_ctx-if-uffd_event_fork-fails.patch
	btrfs-fix-refcount_t-usage-when-deleting-btrfs_delayed_nodes.patch
	efi-capsule-loader-reinstate-virtual-capsule-mapping.patch
	crypto-n2-cure-use-after-free.patch
	crypto-chacha20poly1305-validate-the-digest-size.patch
	crypto-pcrypt-fix-freeing-pcrypt-instances.patch
	crypto-chelsio-select-crypto_gf128mul.patch
	drm-i915-disable-dc-states-around-gmbus-on-glk.patch
	drm-i915-apply-display-wa-1183-on-skl-kbl-and-cfl.patch
	sunxi-rsb-include-of-based-modalias-in-device-uevent.patch
	fscache-fix-the-default-for-fscache_maybe_release_page.patch

Thanks,

Thomas
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Jan. 7, 2018, 8:17 a.m.</div>
<pre class="content">
On Sat, Jan 06, 2018 at 10:38:38PM +0100, Thomas Zeitlhofer wrote:
<span class="quote">&gt; On Thu, Jan 04, 2018 at 07:38:00PM +0100, Thomas Zeitlhofer wrote:</span>
<span class="quote">&gt; &gt; On Thu, Jan 04, 2018 at 06:07:12PM +0100, Peter Zijlstra wrote:</span>
<span class="quote">&gt; &gt; &gt; On Thu, Jan 04, 2018 at 04:37:24PM +0100, Thomas Gleixner wrote:</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; Yes:</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;    BUG: using smp_processor_id() in preemptible [00000000] code: ovsdb-server/4498</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;    caller is native_flush_tlb_single+0x57/0xc0</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;    CPU: 2 PID: 4498 Comm: ovsdb-server Not tainted 4.15.0-rc6-kvm-00423-gea1908c252eb #3</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;    Hardware name: MSI MS-7798/B75MA-P45 (MS-7798), BIOS V1.9 09/30/2013</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;    Call Trace:</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     dump_stack+0x5c/0x86</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     check_preemption_disabled+0xdd/0xe0</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     native_flush_tlb_single+0x57/0xc0</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     ? __set_pte_vaddr+0x2d/0x40</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     __set_pte_vaddr+0x2d/0x40</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     set_pte_vaddr+0x2f/0x40</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     cea_set_pte+0x30/0x40</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     ds_update_cea.constprop.4+0x4d/0x70</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     reserve_ds_buffers+0x159/0x410</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     ? wp_page_copy+0x370/0x6c0</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     x86_reserve_hardware+0x150/0x160</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     x86_pmu_event_init+0x3e/0x1f0</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     perf_try_init_event+0x69/0x80</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     perf_event_alloc+0x652/0x740</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     SyS_perf_event_open+0x3f6/0xd60</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     do_syscall_64+0x5c/0x190</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;     entry_SYSCALL64_slow_path+0x25/0x25</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;    RIP: 0033:0x72bff0a3c0b9</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;    RSP: 002b:00007ffed11c2f18 EFLAGS: 00000206 ORIG_RAX: 000000000000012a</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;    RAX: ffffffffffffffda RBX: 00007ffed11c30f0 RCX: 000072bff0a3c0b9</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;    RDX: 00000000ffffffff RSI: 0000000000000000 RDI: 00007ffed11c2f20</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;    RBP: 0000000000000000 R08: 0000000000000000 R09: 0000007000000000</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;    R10: 00000000ffffffff R11: 0000000000000206 R12: 0000000000000008</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;    R13: 0000000000000000 R14: 00007ffed11c30d0 R15: 000060986ecfb600</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; Fun, so set_pte_vaddr() and the whole cpu_entry_area are supposed to be</span>
<span class="quote">&gt; &gt; &gt; per CPU. But the DS crud does cross CPU updates of those tables.</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; So we need some additional fun and games..</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; How&#39;s the below?</span>
<span class="quote">&gt; &gt; [...]</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Looks good - I have successfully tested it on top of 4.14.11 and</span>
<span class="quote">&gt; &gt; 4.15-rc6. In both cases, the error message is gone when this patch is</span>
<span class="quote">&gt; &gt; applied.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; While solving the previous problem, this patch also introduces new &quot;fun</span>
<span class="quote">&gt; and games&quot;...  </span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Now, terminating a systemd-nspawn container, reliably crashes the host</span>
<span class="quote">&gt; (so far tested only on Haswell, if that matters). Once, I was able to</span>
<span class="quote">&gt; capture the following trace:</span>

Is this also reproducable on Linus&#39;s tree right now?

I&#39;ve been running nspawn containers on it with no issues like this at
all :(

thanks,

greg k-h
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=178217">Thomas Zeitlhofer</a> - Jan. 7, 2018, 8:53 a.m.</div>
<pre class="content">
On Sun, Jan 07, 2018 at 09:17:18AM +0100, Greg Kroah-Hartman wrote:
<span class="quote">&gt; On Sat, Jan 06, 2018 at 10:38:38PM +0100, Thomas Zeitlhofer wrote:</span>
<span class="quote">&gt; &gt; On Thu, Jan 04, 2018 at 07:38:00PM +0100, Thomas Zeitlhofer wrote:</span>
<span class="quote">&gt; &gt; &gt; On Thu, Jan 04, 2018 at 06:07:12PM +0100, Peter Zijlstra wrote:</span>
<span class="quote">&gt; &gt; &gt; &gt; On Thu, Jan 04, 2018 at 04:37:24PM +0100, Thomas Gleixner wrote:</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt; Yes:</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;    BUG: using smp_processor_id() in preemptible [00000000] code: ovsdb-server/4498</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;    caller is native_flush_tlb_single+0x57/0xc0</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;    CPU: 2 PID: 4498 Comm: ovsdb-server Not tainted 4.15.0-rc6-kvm-00423-gea1908c252eb #3</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;    Hardware name: MSI MS-7798/B75MA-P45 (MS-7798), BIOS V1.9 09/30/2013</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;    Call Trace:</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     dump_stack+0x5c/0x86</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     check_preemption_disabled+0xdd/0xe0</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     native_flush_tlb_single+0x57/0xc0</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     ? __set_pte_vaddr+0x2d/0x40</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     __set_pte_vaddr+0x2d/0x40</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     set_pte_vaddr+0x2f/0x40</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     cea_set_pte+0x30/0x40</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     ds_update_cea.constprop.4+0x4d/0x70</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     reserve_ds_buffers+0x159/0x410</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     ? wp_page_copy+0x370/0x6c0</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     x86_reserve_hardware+0x150/0x160</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     x86_pmu_event_init+0x3e/0x1f0</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     perf_try_init_event+0x69/0x80</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     perf_event_alloc+0x652/0x740</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     SyS_perf_event_open+0x3f6/0xd60</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     do_syscall_64+0x5c/0x190</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;     entry_SYSCALL64_slow_path+0x25/0x25</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;    RIP: 0033:0x72bff0a3c0b9</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;    RSP: 002b:00007ffed11c2f18 EFLAGS: 00000206 ORIG_RAX: 000000000000012a</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;    RAX: ffffffffffffffda RBX: 00007ffed11c30f0 RCX: 000072bff0a3c0b9</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;    RDX: 00000000ffffffff RSI: 0000000000000000 RDI: 00007ffed11c2f20</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;    RBP: 0000000000000000 R08: 0000000000000000 R09: 0000007000000000</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;    R10: 00000000ffffffff R11: 0000000000000206 R12: 0000000000000008</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt;    R13: 0000000000000000 R14: 00007ffed11c30d0 R15: 000060986ecfb600</span>
<span class="quote">&gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; Fun, so set_pte_vaddr() and the whole cpu_entry_area are supposed to be</span>
<span class="quote">&gt; &gt; &gt; &gt; per CPU. But the DS crud does cross CPU updates of those tables.</span>
<span class="quote">&gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; So we need some additional fun and games..</span>
<span class="quote">&gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; How&#39;s the below?</span>
<span class="quote">&gt; &gt; &gt; [...]</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; Looks good - I have successfully tested it on top of 4.14.11 and</span>
<span class="quote">&gt; &gt; &gt; 4.15-rc6. In both cases, the error message is gone when this patch is</span>
<span class="quote">&gt; &gt; &gt; applied.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; While solving the previous problem, this patch also introduces new &quot;fun</span>
<span class="quote">&gt; &gt; and games&quot;...  </span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Now, terminating a systemd-nspawn container, reliably crashes the host</span>
<span class="quote">&gt; &gt; (so far tested only on Haswell, if that matters). Once, I was able to</span>
<span class="quote">&gt; &gt; capture the following trace:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Is this also reproducable on Linus&#39;s tree right now?</span>

It is reproducible with this patch on top of 4.15-rc6 (might be able to
test Linus&#39;s current tree later that day). 

Thanks,

Thomas
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=178217">Thomas Zeitlhofer</a> - Jan. 8, 2018, 12:37 a.m.</div>
<pre class="content">
On Sun, Jan 07, 2018 at 09:53:19AM +0100, Thomas Zeitlhofer wrote:
<span class="quote">&gt; On Sun, Jan 07, 2018 at 09:17:18AM +0100, Greg Kroah-Hartman wrote:</span>
<span class="quote">&gt; &gt; On Sat, Jan 06, 2018 at 10:38:38PM +0100, Thomas Zeitlhofer wrote:</span>
[...]
<span class="quote">&gt; &gt; &gt; While solving the previous problem, this patch also introduces new</span>
<span class="quote">&gt; &gt; &gt; &quot;fun and games&quot;...  </span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; Now, terminating a systemd-nspawn container, reliably crashes the</span>
<span class="quote">&gt; &gt; &gt; host (so far tested only on Haswell, if that matters). Once, I was</span>
<span class="quote">&gt; &gt; &gt; able to capture the following trace:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Is this also reproducable on Linus&#39;s tree right now?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; It is reproducible with this patch on top of 4.15-rc6 (might be able</span>
<span class="quote">&gt; to test Linus&#39;s current tree later that day). </span>

Some more testing showed that this is not caused by the patch after all,
sorry for the noise.

The crash happens quite reliably, but with a rather low probability it
does not occur. When I have tested 4.14.11 without the patch it was
obviously such a low probability event - in the meantime 4.14.11 without
the patch also crashed. The situation is also unchanged with 4.15-rc7.

Interestingly, it happens only when using the boot switch &quot;-b&quot;, i.e.:

        systemd-nspawn -b -D &lt;path to rootfs&gt;

_and_ terminating the container by pressing ^] three times.  Other
combinations (e.g., no &quot;-b&quot; and terminating with ^]^]^], &quot;-b&quot; and
terminating by running shutdown inside the container) work just fine.
Anyway, this is already off-topic and might be subject to a different
thread...

Thanks,

Thomas
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/events/intel/ds.c b/arch/x86/events/intel/ds.c</span>
<span class="p_header">index 8f0aace08b87..8156e47da7ba 100644</span>
<span class="p_header">--- a/arch/x86/events/intel/ds.c</span>
<span class="p_header">+++ b/arch/x86/events/intel/ds.c</span>
<span class="p_chunk">@@ -5,6 +5,7 @@</span> <span class="p_context"></span>
 
 #include &lt;asm/cpu_entry_area.h&gt;
 #include &lt;asm/perf_event.h&gt;
<span class="p_add">+#include &lt;asm/tlbflush.h&gt;</span>
 #include &lt;asm/insn.h&gt;
 
 #include &quot;../perf_event.h&quot;
<span class="p_chunk">@@ -283,20 +284,35 @@</span> <span class="p_context"> static DEFINE_PER_CPU(void *, insn_buffer);</span>
 
 static void ds_update_cea(void *cea, void *addr, size_t size, pgprot_t prot)
 {
<span class="p_add">+	unsigned long start = (unsigned long)cea;</span>
 	phys_addr_t pa;
 	size_t msz = 0;
 
 	pa = virt_to_phys(addr);
<span class="p_add">+</span>
<span class="p_add">+	preempt_disable();</span>
 	for (; msz &lt; size; msz += PAGE_SIZE, pa += PAGE_SIZE, cea += PAGE_SIZE)
 		cea_set_pte(cea, pa, prot);
<span class="p_add">+</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * This is a cross-CPU update of the cpu_entry_area, we must shoot down</span>
<span class="p_add">+	 * all TLB entries for it.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	flush_tlb_kernel_range(start, start + size);</span>
<span class="p_add">+	preempt_enable();</span>
 }
 
 static void ds_clear_cea(void *cea, size_t size)
 {
<span class="p_add">+	unsigned long start = (unsigned long)cea;</span>
 	size_t msz = 0;
 
<span class="p_add">+	preempt_disable();</span>
 	for (; msz &lt; size; msz += PAGE_SIZE, cea += PAGE_SIZE)
 		cea_set_pte(cea, 0, PAGE_NONE);
<span class="p_add">+</span>
<span class="p_add">+	flush_tlb_kernel_range(start, start + size);</span>
<span class="p_add">+	preempt_enable();</span>
 }
 
 static void *dsalloc_pages(size_t size, gfp_t flags, int cpu)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



