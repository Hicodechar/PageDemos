
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/8] mincore: Add support for PUDs - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/8] mincore: Add support for PUDs</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=66491">Wilcox, Matthew R</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 24, 2015, 4:20 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1450974037-24775-3-git-send-email-matthew.r.wilcox@intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7919431/mbox/"
   >mbox</a>
|
   <a href="/patch/7919431/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7919431/">/patch/7919431/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id ADCC19F716
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 24 Dec 2015 16:21:06 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id DE8AE205FF
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 24 Dec 2015 16:21:05 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 0A3822060F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 24 Dec 2015 16:21:05 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754535AbbLXQUz (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 24 Dec 2015 11:20:55 -0500
Received: from mga03.intel.com ([134.134.136.65]:8966 &quot;EHLO mga03.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752375AbbLXQUo (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 24 Dec 2015 11:20:44 -0500
Received: from orsmga001.jf.intel.com ([10.7.209.18])
	by orsmga103.jf.intel.com with ESMTP; 24 Dec 2015 08:20:45 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.20,474,1444719600&quot;; d=&quot;scan&#39;208&quot;;a=&quot;847811502&quot;
Received: from ndattani-mobl1.amr.corp.intel.com (HELO thog.int.wil.cx)
	([10.252.130.112])
	by orsmga001.jf.intel.com with SMTP; 24 Dec 2015 08:20:43 -0800
Received: by thog.int.wil.cx (Postfix, from userid 1000)
	id 025735FB2E; Thu, 24 Dec 2015 11:20:44 -0500 (EST)
From: Matthew Wilcox &lt;matthew.r.wilcox@intel.com&gt;
Cc: Matthew Wilcox &lt;willy@linux.intel.com&gt;, linux-mm@kvack.org,
	linux-nvdimm@lists.01.org, linux-fsdevel@vger.kernel.org,
	linux-kernel@vger.kernel.org, x86@kernel.org
Subject: [PATCH 2/8] mincore: Add support for PUDs
Date: Thu, 24 Dec 2015 11:20:31 -0500
Message-Id: &lt;1450974037-24775-3-git-send-email-matthew.r.wilcox@intel.com&gt;
X-Mailer: git-send-email 2.6.2
In-Reply-To: &lt;1450974037-24775-1-git-send-email-matthew.r.wilcox@intel.com&gt;
References: &lt;1450974037-24775-1-git-send-email-matthew.r.wilcox@intel.com&gt;
To: unlisted-recipients:; (no To-header on input)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=66491">Wilcox, Matthew R</a> - Dec. 24, 2015, 4:20 p.m.</div>
<pre class="content">
<span class="from">From: Matthew Wilcox &lt;willy@linux.intel.com&gt;</span>

We don&#39;t actually care about the contents of the PUD, just set the bits
to indicate presence and return.
<span class="signed-off-by">
Signed-off-by: Matthew Wilcox &lt;willy@linux.intel.com&gt;</span>
---
 mm/mincore.c | 13 +++++++++++++
 1 file changed, 13 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/mincore.c b/mm/mincore.c</span>
<span class="p_header">index 2a565ed..8e6ce12 100644</span>
<span class="p_header">--- a/mm/mincore.c</span>
<span class="p_header">+++ b/mm/mincore.c</span>
<span class="p_chunk">@@ -108,6 +108,18 @@</span> <span class="p_context"> static int mincore_unmapped_range(unsigned long addr, unsigned long end,</span>
 	return 0;
 }
 
<span class="p_add">+static int mincore_pud_range(pud_t *pud, unsigned long addr, unsigned long end,</span>
<span class="p_add">+			struct mm_walk *walk)</span>
<span class="p_add">+{</span>
<span class="p_add">+	unsigned char *vec = walk-&gt;private;</span>
<span class="p_add">+	int nr = (end - addr) &gt;&gt; PAGE_SHIFT;</span>
<span class="p_add">+</span>
<span class="p_add">+	memset(vec, 1, nr);</span>
<span class="p_add">+	walk-&gt;private += nr;</span>
<span class="p_add">+</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static int mincore_pte_range(pmd_t *pmd, unsigned long addr, unsigned long end,
 			struct mm_walk *walk)
 {
<span class="p_chunk">@@ -176,6 +188,7 @@</span> <span class="p_context"> static long do_mincore(unsigned long addr, unsigned long pages, unsigned char *v</span>
 	unsigned long end;
 	int err;
 	struct mm_walk mincore_walk = {
<span class="p_add">+		.pud_entry = mincore_pud_range,</span>
 		.pmd_entry = mincore_pte_range,
 		.pte_hole = mincore_unmapped_range,
 		.hugetlb_entry = mincore_hugetlb,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



