
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>mm: show total hugetlb memory consumption in /proc/meminfo - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    mm: show total hugetlb memory consumption in /proc/meminfo</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=579">David Rientjes</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 15, 2017, 10:46 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;alpine.DEB.2.10.1711151443090.103372@chino.kir.corp.google.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10060471/mbox/"
   >mbox</a>
|
   <a href="/patch/10060471/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10060471/">/patch/10060471/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	A35C1604D4 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 15 Nov 2017 22:46:15 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 93CF62A25C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 15 Nov 2017 22:46:15 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 871242A2BC; Wed, 15 Nov 2017 22:46:15 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 2426A2A25C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 15 Nov 2017 22:46:15 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1758855AbdKOWqN (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 15 Nov 2017 17:46:13 -0500
Received: from mail-it0-f52.google.com ([209.85.214.52]:42185 &quot;EHLO
	mail-it0-f52.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1758541AbdKOWqD (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 15 Nov 2017 17:46:03 -0500
Received: by mail-it0-f52.google.com with SMTP id n134so3655479itg.1
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Wed, 15 Nov 2017 14:46:03 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=google.com; s=20161025;
	h=date:from:to:cc:subject:in-reply-to:message-id:references
	:user-agent:mime-version;
	bh=x6/M99LSTWL+UVq6OtXKUPkY0v1BA/ScWCewH3z/FQI=;
	b=iV/cFfNeeEFFE0+ZKPqM/JnHafpE+XQag2TVnU5hyvRWfk08GBu/xDQmTDXWuGEgFA
	PiGQdjILw7wRCNNUdGGUq7JHq7KroyWqENbCQhs8iBMRcsUMmIgPEjLA8DMYkyEErfiA
	lpKX/ZoRUgItjacMb7P/2VcD5CYmlUlFZ7pRzzYeK5IqM6j8rPSgudjeyEg+MTuU7EUF
	a9p1+z00kkYzRETrx/pxKyYjPvf9eX3NHD1QhNxbdJ6msqGat+UFC3bNqH3oeKdL/rv8
	aW3vIkVfO1vVfz7k5HuUlJC8f43NWxYAz1qTba9lt3MJBG11JeIlihpkK9WDM/CA1bO9
	0+Aw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:date:from:to:cc:subject:in-reply-to:message-id
	:references:user-agent:mime-version;
	bh=x6/M99LSTWL+UVq6OtXKUPkY0v1BA/ScWCewH3z/FQI=;
	b=RjhZZ+nIz4mdj4kM3eQsvrP2Bex+tAtu0f3qPb7sgUVDxD9eH/31YuNcxHY9SGntD6
	MT6VD4HNG/gk7YUQydrWFVr/bQwDyNdyB03a8POoieVvBEZ6fVJMQo6ODMHJq/GbKqx3
	domOxMRIUJssHs1ZdFKvtWlRhbzoNN6d33TzJzKh59Ezi9/lQll7QWS4zNY2yIpzMRYW
	FXrp6PMJ/jn6MesoS0HOkbOnRlxRnp/OtAZclXdBKFGhqLQgNSJyOhMQ4yaCmJis73o+
	6+XZo7aVQpxF8B3xJDFntI0BZX8WPePSLdgmY0WILw/a0YM8AJjUPsSwOgPsMFrqUcWS
	wKSg==
X-Gm-Message-State: AJaThX69Gz1DMaAZ5vhWDzp0raRn+ewP4lbcQtJTekDbjjGjaPbMXu+w
	DFiXPvsAcDVcTXaq8p8PMeBuaA==
X-Google-Smtp-Source: AGs4zMaM/dBMloQAPzfli9pufotscb2zJaYgQnbrHhLZ37HUjeZiVinjxb3g7reErFpCLbWh+z+xOA==
X-Received: by 10.36.169.75 with SMTP id x11mr6094iti.60.1510785962711;
	Wed, 15 Nov 2017 14:46:02 -0800 (PST)
Received: from [2620:15c:17:3:a803:f52d:f780:7b73]
	([2620:15c:17:3:a803:f52d:f780:7b73])
	by smtp.gmail.com with ESMTPSA id o1sm3289ite.2.2017.11.15.14.46.01
	(version=TLS1 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Wed, 15 Nov 2017 14:46:02 -0800 (PST)
Date: Wed, 15 Nov 2017 14:46:00 -0800 (PST)
From: David Rientjes &lt;rientjes@google.com&gt;
X-X-Sender: rientjes@chino.kir.corp.google.com
To: Michal Hocko &lt;mhocko@kernel.org&gt;
cc: Roman Gushchin &lt;guro@fb.com&gt;, linux-mm@kvack.org,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Johannes Weiner &lt;hannes@cmpxchg.org&gt;,
	Mike Kravetz &lt;mike.kravetz@oracle.com&gt;,
	&quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;,
	Andrea Arcangeli &lt;aarcange@redhat.com&gt;,
	Dave Hansen &lt;dave.hansen@intel.com&gt;, kernel-team@fb.com,
	linux-kernel@vger.kernel.org
Subject: Re: [PATCH] mm: show total hugetlb memory consumption in
	/proc/meminfo
In-Reply-To: &lt;20171115081818.ucnp26tho4qffdwx@dhcp22.suse.cz&gt;
Message-ID: &lt;alpine.DEB.2.10.1711151443090.103372@chino.kir.corp.google.com&gt;
References: &lt;20171114125026.7055-1-guro@fb.com&gt;
	&lt;20171114131736.v2m6alrt5gelmh5c@dhcp22.suse.cz&gt;
	&lt;alpine.DEB.2.10.1711141425220.112995@chino.kir.corp.google.com&gt;
	&lt;20171115081818.ucnp26tho4qffdwx@dhcp22.suse.cz&gt;
User-Agent: Alpine 2.10 (DEB 1266 2009-07-14)
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=579">David Rientjes</a> - Nov. 15, 2017, 10:46 p.m.</div>
<pre class="content">
On Wed, 15 Nov 2017, Michal Hocko wrote:
<span class="quote">
&gt; &gt; &gt; &gt;  	if (!hugepages_supported())</span>
<span class="quote">&gt; &gt; &gt; &gt;  		return;</span>
<span class="quote">&gt; &gt; &gt; &gt;  	seq_printf(m,</span>
<span class="quote">&gt; &gt; &gt; &gt; @@ -2987,6 +2989,11 @@ void hugetlb_report_meminfo(struct seq_file *m)</span>
<span class="quote">&gt; &gt; &gt; &gt;  			h-&gt;resv_huge_pages,</span>
<span class="quote">&gt; &gt; &gt; &gt;  			h-&gt;surplus_huge_pages,</span>
<span class="quote">&gt; &gt; &gt; &gt;  			1UL &lt;&lt; (huge_page_order(h) + PAGE_SHIFT - 10));</span>
<span class="quote">&gt; &gt; &gt; &gt; +</span>
<span class="quote">&gt; &gt; &gt; &gt; +	for_each_hstate(h)</span>
<span class="quote">&gt; &gt; &gt; &gt; +		total += (PAGE_SIZE &lt;&lt; huge_page_order(h)) * h-&gt;nr_huge_pages;</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; Please keep the total calculation consistent with what we have there</span>
<span class="quote">&gt; &gt; &gt; already.</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Yeah, and I&#39;m not sure if your comment eludes to this being racy, but it </span>
<span class="quote">&gt; &gt; would be better to store the default size for default_hstate during the </span>
<span class="quote">&gt; &gt; iteration to total the size for all hstates.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I just meant to have the code consistent. I do not prefer one or other</span>
<span class="quote">&gt; option.</span>

It&#39;s always nice when HugePages_Total * Hugepagesize cannot become greater 
than Hugetlb.  Roman, could you factor something like this into your 
change accompanied with a documentation upodate as suggested by Dave?
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=174271">Roman Gushchin</a> - Nov. 15, 2017, 10:49 p.m.</div>
<pre class="content">
On Wed, Nov 15, 2017 at 02:46:00PM -0800, David Rientjes wrote:
<span class="quote">&gt; On Wed, 15 Nov 2017, Michal Hocko wrote:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;  	if (!hugepages_supported())</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;  		return;</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;  	seq_printf(m,</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; @@ -2987,6 +2989,11 @@ void hugetlb_report_meminfo(struct seq_file *m)</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;  			h-&gt;resv_huge_pages,</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;  			h-&gt;surplus_huge_pages,</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;  			1UL &lt;&lt; (huge_page_order(h) + PAGE_SHIFT - 10));</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; +</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; +	for_each_hstate(h)</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; +		total += (PAGE_SIZE &lt;&lt; huge_page_order(h)) * h-&gt;nr_huge_pages;</span>
<span class="quote">&gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; Please keep the total calculation consistent with what we have there</span>
<span class="quote">&gt; &gt; &gt; &gt; already.</span>
<span class="quote">&gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; Yeah, and I&#39;m not sure if your comment eludes to this being racy, but it </span>
<span class="quote">&gt; &gt; &gt; would be better to store the default size for default_hstate during the </span>
<span class="quote">&gt; &gt; &gt; iteration to total the size for all hstates.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; I just meant to have the code consistent. I do not prefer one or other</span>
<span class="quote">&gt; &gt; option.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; It&#39;s always nice when HugePages_Total * Hugepagesize cannot become greater </span>
<span class="quote">&gt; than Hugetlb.  Roman, could you factor something like this into your </span>
<span class="quote">&gt; change accompanied with a documentation upodate as suggested by Dave?</span>

Hi David!

Working on it... I&#39;ll post an update soon.

Thanks!
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -2975,20 +2975,33 @@</span> <span class="p_context"> int hugetlb_overcommit_handler(struct ctl_table *table, int write,</span>
 
 void hugetlb_report_meminfo(struct seq_file *m)
 {
<span class="p_del">-	struct hstate *h = &amp;default_hstate;</span>
<span class="p_add">+	struct hstate *h;</span>
<span class="p_add">+	unsigned long total = 0;</span>
<span class="p_add">+</span>
 	if (!hugepages_supported())
 		return;
<span class="p_del">-	seq_printf(m,</span>
<span class="p_del">-			&quot;HugePages_Total:   %5lu\n&quot;</span>
<span class="p_del">-			&quot;HugePages_Free:    %5lu\n&quot;</span>
<span class="p_del">-			&quot;HugePages_Rsvd:    %5lu\n&quot;</span>
<span class="p_del">-			&quot;HugePages_Surp:    %5lu\n&quot;</span>
<span class="p_del">-			&quot;Hugepagesize:   %8lu kB\n&quot;,</span>
<span class="p_del">-			h-&gt;nr_huge_pages,</span>
<span class="p_del">-			h-&gt;free_huge_pages,</span>
<span class="p_del">-			h-&gt;resv_huge_pages,</span>
<span class="p_del">-			h-&gt;surplus_huge_pages,</span>
<span class="p_del">-			1UL &lt;&lt; (huge_page_order(h) + PAGE_SHIFT - 10));</span>
<span class="p_add">+</span>
<span class="p_add">+	for_each_hstate(h) {</span>
<span class="p_add">+		unsigned long nr_huge_pages = h-&gt;nr_huge_pages;</span>
<span class="p_add">+</span>
<span class="p_add">+		total += nr_huge_pages &lt;&lt;</span>
<span class="p_add">+			 (huge_page_order(h) + PAGE_SHIFT - 10);</span>
<span class="p_add">+</span>
<span class="p_add">+		if (h == &amp;default_hstate) {</span>
<span class="p_add">+			seq_printf(m,</span>
<span class="p_add">+				&quot;HugePages_Total:   %5lu\n&quot;</span>
<span class="p_add">+				&quot;HugePages_Free:    %5lu\n&quot;</span>
<span class="p_add">+				&quot;HugePages_Rsvd:    %5lu\n&quot;</span>
<span class="p_add">+				&quot;HugePages_Surp:    %5lu\n&quot;</span>
<span class="p_add">+				&quot;Hugepagesize:   %8lu kB\n&quot;,</span>
<span class="p_add">+				nr_huge_pages,</span>
<span class="p_add">+				h-&gt;free_huge_pages,</span>
<span class="p_add">+				h-&gt;resv_huge_pages,</span>
<span class="p_add">+				h-&gt;surplus_huge_pages,</span>
<span class="p_add">+				1UL &lt;&lt; (huge_page_order(h) + PAGE_SHIFT - 10));</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+	seq_printf(m, &quot;Hugetlb:            %5lu kB\n&quot;, total);</span>
 }
 
 int hugetlb_report_node_meminfo(int nid, char *buf)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



