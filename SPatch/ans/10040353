
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[tip:perf/core] perf stat: Move the shadow stats scale computation in perf_stat__update_shadow_stats - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [tip:perf/core] perf stat: Move the shadow stats scale computation in perf_stat__update_shadow_stats</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 3, 2017, 2:21 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;tip-htg7mmyxv6pcrf57qyo6msid@git.kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10040353/mbox/"
   >mbox</a>
|
   <a href="/patch/10040353/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10040353/">/patch/10040353/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	2DFC8602D8 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  3 Nov 2017 14:25:14 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 187F229665
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  3 Nov 2017 14:25:14 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 0D21C29670; Fri,  3 Nov 2017 14:25:14 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id DFBBC29665
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  3 Nov 2017 14:25:12 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1756044AbdKCOZL (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 3 Nov 2017 10:25:11 -0400
Received: from terminus.zytor.com ([65.50.211.136]:60039 &quot;EHLO
	terminus.zytor.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1750821AbdKCOZB (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 3 Nov 2017 10:25:01 -0400
Received: from terminus.zytor.com (localhost [127.0.0.1])
	by terminus.zytor.com (8.15.2/8.15.2) with ESMTP id vA3EL5u2010687;
	Fri, 3 Nov 2017 07:21:05 -0700
Received: (from tipbot@localhost)
	by terminus.zytor.com (8.15.2/8.15.2/Submit) id vA3EL5Rq010677;
	Fri, 3 Nov 2017 07:21:05 -0700
Date: Fri, 3 Nov 2017 07:21:05 -0700
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to
	tipbot@zytor.com using -f
From: tip-bot for Jiri Olsa &lt;tipbot@zytor.com&gt;
Message-ID: &lt;tip-htg7mmyxv6pcrf57qyo6msid@git.kernel.org&gt;
Cc: hpa@zytor.com, tglx@linutronix.de, mingo@kernel.org,
	changbin.du@intel.com, peterz@infradead.org, acme@redhat.com,
	andi@firstfloor.org, jolsa@kernel.org,
	linux-kernel@vger.kernel.org, wangnan0@huawei.com,
	namhyung@kernel.org, dsahern@gmail.com, yao.jin@linux.intel.com
Reply-To: tglx@linutronix.de, hpa@zytor.com, changbin.du@intel.com,
	mingo@kernel.org, peterz@infradead.org, acme@redhat.com,
	andi@firstfloor.org, jolsa@kernel.org, wangnan0@huawei.com,
	linux-kernel@vger.kernel.org, dsahern@gmail.com,
	namhyung@kernel.org, yao.jin@linux.intel.com
To: linux-tip-commits@vger.kernel.org
Subject: [tip:perf/core] perf stat: Move the shadow stats scale computation
	in perf_stat__update_shadow_stats
Git-Commit-ID: 54830dd0c342525de2ff10f8be7cf0a9f062b896
X-Mailer: tip-git-log-daemon
Robot-ID: &lt;tip-bot.git.kernel.org&gt;
Robot-Unsubscribe: Contact &lt;mailto:hpa@kernel.org&gt; to get blacklisted from
	these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a> - Nov. 3, 2017, 2:21 p.m.</div>
<pre class="content">
Commit-ID:  54830dd0c342525de2ff10f8be7cf0a9f062b896
Gitweb:     https://git.kernel.org/tip/54830dd0c342525de2ff10f8be7cf0a9f062b896
Author:     Jiri Olsa &lt;jolsa@kernel.org&gt;
AuthorDate: Mon, 23 Jan 2017 22:42:56 +0100
Committer:  Arnaldo Carvalho de Melo &lt;acme@redhat.com&gt;
CommitDate: Mon, 30 Oct 2017 13:40:33 -0300

perf stat: Move the shadow stats scale computation in perf_stat__update_shadow_stats

Move the shadow stats scale computation to the
perf_stat__update_shadow_stats() function, so it&#39;s centralized and we
don&#39;t forget to do it. It also saves few lines of code.
<span class="signed-off-by">
Signed-off-by: Jiri Olsa &lt;jolsa@kernel.org&gt;</span>
Cc: Andi Kleen &lt;andi@firstfloor.org&gt;
Cc: Changbin Du &lt;changbin.du@intel.com&gt;
Cc: David Ahern &lt;dsahern@gmail.com&gt;
Cc: Jin Yao &lt;yao.jin@linux.intel.com&gt;
Cc: Namhyung Kim &lt;namhyung@kernel.org&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: Wang Nan &lt;wangnan0@huawei.com&gt;
Link: http://lkml.kernel.org/n/tip-htg7mmyxv6pcrf57qyo6msid@git.kernel.org
<span class="signed-off-by">Signed-off-by: Arnaldo Carvalho de Melo &lt;acme@redhat.com&gt;</span>
---
 tools/perf/builtin-stat.c     |  3 +--
 tools/perf/util/stat-shadow.c | 48 ++++++++++++++++++++++---------------------
 tools/perf/util/stat.c        |  6 ++----
 tools/perf/util/stat.h        |  2 +-
 4 files changed, 29 insertions(+), 30 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/tools/perf/builtin-stat.c b/tools/perf/builtin-stat.c</span>
<span class="p_header">index fa58962..59af5a8 100644</span>
<span class="p_header">--- a/tools/perf/builtin-stat.c</span>
<span class="p_header">+++ b/tools/perf/builtin-stat.c</span>
<span class="p_chunk">@@ -1267,8 +1267,7 @@</span> <span class="p_context"> static void aggr_update_shadow(void)</span>
 					continue;
 				val += perf_counts(counter-&gt;counts, cpu, 0)-&gt;val;
 			}
<span class="p_del">-			val = val * counter-&gt;scale;</span>
<span class="p_del">-			perf_stat__update_shadow_stats(counter, &amp;val,</span>
<span class="p_add">+			perf_stat__update_shadow_stats(counter, val,</span>
 						       first_shadow_cpu(counter, id));
 		}
 	}
<span class="p_header">diff --git a/tools/perf/util/stat-shadow.c b/tools/perf/util/stat-shadow.c</span>
<span class="p_header">index a2c12d1e..51ad03a 100644</span>
<span class="p_header">--- a/tools/perf/util/stat-shadow.c</span>
<span class="p_header">+++ b/tools/perf/util/stat-shadow.c</span>
<span class="p_chunk">@@ -178,58 +178,60 @@</span> <span class="p_context"> void perf_stat__reset_shadow_stats(void)</span>
  * more semantic information such as miss/hit ratios,
  * instruction rates, etc:
  */
<span class="p_del">-void perf_stat__update_shadow_stats(struct perf_evsel *counter, u64 *count,</span>
<span class="p_add">+void perf_stat__update_shadow_stats(struct perf_evsel *counter, u64 count,</span>
 				    int cpu)
 {
 	int ctx = evsel_context(counter);
 
<span class="p_add">+	count *= counter-&gt;scale;</span>
<span class="p_add">+</span>
 	if (perf_evsel__match(counter, SOFTWARE, SW_TASK_CLOCK) ||
 	    perf_evsel__match(counter, SOFTWARE, SW_CPU_CLOCK))
<span class="p_del">-		update_stats(&amp;runtime_nsecs_stats[cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_nsecs_stats[cpu], count);</span>
 	else if (perf_evsel__match(counter, HARDWARE, HW_CPU_CYCLES))
<span class="p_del">-		update_stats(&amp;runtime_cycles_stats[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_cycles_stats[ctx][cpu], count);</span>
 	else if (perf_stat_evsel__is(counter, CYCLES_IN_TX))
<span class="p_del">-		update_stats(&amp;runtime_cycles_in_tx_stats[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_cycles_in_tx_stats[ctx][cpu], count);</span>
 	else if (perf_stat_evsel__is(counter, TRANSACTION_START))
<span class="p_del">-		update_stats(&amp;runtime_transaction_stats[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_transaction_stats[ctx][cpu], count);</span>
 	else if (perf_stat_evsel__is(counter, ELISION_START))
<span class="p_del">-		update_stats(&amp;runtime_elision_stats[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_elision_stats[ctx][cpu], count);</span>
 	else if (perf_stat_evsel__is(counter, TOPDOWN_TOTAL_SLOTS))
<span class="p_del">-		update_stats(&amp;runtime_topdown_total_slots[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_topdown_total_slots[ctx][cpu], count);</span>
 	else if (perf_stat_evsel__is(counter, TOPDOWN_SLOTS_ISSUED))
<span class="p_del">-		update_stats(&amp;runtime_topdown_slots_issued[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_topdown_slots_issued[ctx][cpu], count);</span>
 	else if (perf_stat_evsel__is(counter, TOPDOWN_SLOTS_RETIRED))
<span class="p_del">-		update_stats(&amp;runtime_topdown_slots_retired[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_topdown_slots_retired[ctx][cpu], count);</span>
 	else if (perf_stat_evsel__is(counter, TOPDOWN_FETCH_BUBBLES))
<span class="p_del">-		update_stats(&amp;runtime_topdown_fetch_bubbles[ctx][cpu],count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_topdown_fetch_bubbles[ctx][cpu], count);</span>
 	else if (perf_stat_evsel__is(counter, TOPDOWN_RECOVERY_BUBBLES))
<span class="p_del">-		update_stats(&amp;runtime_topdown_recovery_bubbles[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_topdown_recovery_bubbles[ctx][cpu], count);</span>
 	else if (perf_evsel__match(counter, HARDWARE, HW_STALLED_CYCLES_FRONTEND))
<span class="p_del">-		update_stats(&amp;runtime_stalled_cycles_front_stats[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_stalled_cycles_front_stats[ctx][cpu], count);</span>
 	else if (perf_evsel__match(counter, HARDWARE, HW_STALLED_CYCLES_BACKEND))
<span class="p_del">-		update_stats(&amp;runtime_stalled_cycles_back_stats[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_stalled_cycles_back_stats[ctx][cpu], count);</span>
 	else if (perf_evsel__match(counter, HARDWARE, HW_BRANCH_INSTRUCTIONS))
<span class="p_del">-		update_stats(&amp;runtime_branches_stats[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_branches_stats[ctx][cpu], count);</span>
 	else if (perf_evsel__match(counter, HARDWARE, HW_CACHE_REFERENCES))
<span class="p_del">-		update_stats(&amp;runtime_cacherefs_stats[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_cacherefs_stats[ctx][cpu], count);</span>
 	else if (perf_evsel__match(counter, HW_CACHE, HW_CACHE_L1D))
<span class="p_del">-		update_stats(&amp;runtime_l1_dcache_stats[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_l1_dcache_stats[ctx][cpu], count);</span>
 	else if (perf_evsel__match(counter, HW_CACHE, HW_CACHE_L1I))
<span class="p_del">-		update_stats(&amp;runtime_ll_cache_stats[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_ll_cache_stats[ctx][cpu], count);</span>
 	else if (perf_evsel__match(counter, HW_CACHE, HW_CACHE_LL))
<span class="p_del">-		update_stats(&amp;runtime_ll_cache_stats[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_ll_cache_stats[ctx][cpu], count);</span>
 	else if (perf_evsel__match(counter, HW_CACHE, HW_CACHE_DTLB))
<span class="p_del">-		update_stats(&amp;runtime_dtlb_cache_stats[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_dtlb_cache_stats[ctx][cpu], count);</span>
 	else if (perf_evsel__match(counter, HW_CACHE, HW_CACHE_ITLB))
<span class="p_del">-		update_stats(&amp;runtime_itlb_cache_stats[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_itlb_cache_stats[ctx][cpu], count);</span>
 	else if (perf_stat_evsel__is(counter, SMI_NUM))
<span class="p_del">-		update_stats(&amp;runtime_smi_num_stats[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_smi_num_stats[ctx][cpu], count);</span>
 	else if (perf_stat_evsel__is(counter, APERF))
<span class="p_del">-		update_stats(&amp;runtime_aperf_stats[ctx][cpu], count[0]);</span>
<span class="p_add">+		update_stats(&amp;runtime_aperf_stats[ctx][cpu], count);</span>
 
 	if (counter-&gt;collect_stat) {
 		struct saved_value *v = saved_value_lookup(counter, cpu, true);
<span class="p_del">-		update_stats(&amp;v-&gt;stats, count[0]);</span>
<span class="p_add">+		update_stats(&amp;v-&gt;stats, count);</span>
 	}
 }
 
<span class="p_header">diff --git a/tools/perf/util/stat.c b/tools/perf/util/stat.c</span>
<span class="p_header">index 933de91..ef00c91 100644</span>
<span class="p_header">--- a/tools/perf/util/stat.c</span>
<span class="p_header">+++ b/tools/perf/util/stat.c</span>
<span class="p_chunk">@@ -277,7 +277,7 @@</span> <span class="p_context"> process_counter_values(struct perf_stat_config *config, struct perf_evsel *evsel</span>
 			perf_evsel__compute_deltas(evsel, cpu, thread, count);
 		perf_counts_values__scale(count, config-&gt;scale, NULL);
 		if (config-&gt;aggr_mode == AGGR_NONE)
<span class="p_del">-			perf_stat__update_shadow_stats(evsel, count-&gt;values, cpu);</span>
<span class="p_add">+			perf_stat__update_shadow_stats(evsel, count-&gt;val, cpu);</span>
 		break;
 	case AGGR_GLOBAL:
 		aggr-&gt;val += count-&gt;val;
<span class="p_chunk">@@ -320,7 +320,6 @@</span> <span class="p_context"> int perf_stat_process_counter(struct perf_stat_config *config,</span>
 	struct perf_counts_values *aggr = &amp;counter-&gt;counts-&gt;aggr;
 	struct perf_stat_evsel *ps = counter-&gt;stats;
 	u64 *count = counter-&gt;counts-&gt;aggr.values;
<span class="p_del">-	u64 val;</span>
 	int i, ret;
 
 	aggr-&gt;val = aggr-&gt;ena = aggr-&gt;run = 0;
<span class="p_chunk">@@ -360,8 +359,7 @@</span> <span class="p_context"> int perf_stat_process_counter(struct perf_stat_config *config,</span>
 	/*
 	 * Save the full runtime - to allow normalization during printout:
 	 */
<span class="p_del">-	val = counter-&gt;scale * *count;</span>
<span class="p_del">-	perf_stat__update_shadow_stats(counter, &amp;val, 0);</span>
<span class="p_add">+	perf_stat__update_shadow_stats(counter, *count, 0);</span>
 
 	return 0;
 }
<span class="p_header">diff --git a/tools/perf/util/stat.h b/tools/perf/util/stat.h</span>
<span class="p_header">index 47915df..490b78a 100644</span>
<span class="p_header">--- a/tools/perf/util/stat.h</span>
<span class="p_header">+++ b/tools/perf/util/stat.h</span>
<span class="p_chunk">@@ -82,7 +82,7 @@</span> <span class="p_context"> typedef void (*new_line_t )(void *ctx);</span>
 
 void perf_stat__init_shadow_stats(void);
 void perf_stat__reset_shadow_stats(void);
<span class="p_del">-void perf_stat__update_shadow_stats(struct perf_evsel *counter, u64 *count,</span>
<span class="p_add">+void perf_stat__update_shadow_stats(struct perf_evsel *counter, u64 count,</span>
 				    int cpu);
 struct perf_stat_output_ctx {
 	void *ctx;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



