
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,0/2] arm64: fix the bugs found in the hugetlb test - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,0/2] arm64: fix the bugs found in the hugetlb test</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=352">Catalin Marinas</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 8, 2016, 2:09 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161108140909.GF29087@e104818-lin.cambridge.arm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9417553/mbox/"
   >mbox</a>
|
   <a href="/patch/9417553/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9417553/">/patch/9417553/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	88B1D60585 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  8 Nov 2016 14:09:28 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7A54628A0A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  8 Nov 2016 14:09:28 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 6E82428A16; Tue,  8 Nov 2016 14:09:28 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id CD09428A0A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  8 Nov 2016 14:09:27 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752871AbcKHOJQ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 8 Nov 2016 09:09:16 -0500
Received: from foss.arm.com ([217.140.101.70]:60752 &quot;EHLO foss.arm.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751134AbcKHOJO (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 8 Nov 2016 09:09:14 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
	by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id DE5EDCF6;
	Tue,  8 Nov 2016 06:09:13 -0800 (PST)
Received: from e104818-lin.cambridge.arm.com (e104818-lin.cambridge.arm.com
	[10.1.206.48])
	by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id
	76C943F25D; Tue,  8 Nov 2016 06:09:12 -0800 (PST)
Date: Tue, 8 Nov 2016 14:09:09 +0000
From: Catalin Marinas &lt;catalin.marinas@arm.com&gt;
To: Huang Shijie &lt;shijie.huang@arm.com&gt;
Cc: dwoods@mellanox.com, steve.capper@arm.com, will.deacon@arm.com,
	linux-kernel@vger.kernel.org, kaly.xin@arm.com,
	akpm@linux-foundation.org, nd@arm.com,
	linux-arm-kernel@lists.infradead.org
Subject: Re: [PATCH v2 0/2] arm64: fix the bugs found in the hugetlb test
Message-ID: &lt;20161108140909.GF29087@e104818-lin.cambridge.arm.com&gt;
References: &lt;1478583879-14654-1-git-send-email-shijie.huang@arm.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: &lt;1478583879-14654-1-git-send-email-shijie.huang@arm.com&gt;
User-Agent: Mutt/1.5.23 (2014-03-12)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=352">Catalin Marinas</a> - Nov. 8, 2016, 2:09 p.m.</div>
<pre class="content">
On Tue, Nov 08, 2016 at 01:44:37PM +0800, Huang Shijie wrote:
<span class="quote">&gt; (3) The test result in the Softiron and Juno-r1 boards:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;    This detail test result shows below (both the &quot;make func&quot; &amp; &quot;make stress&quot;):</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;     4KB granule:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;         1.1) PTE + Contiguous bit : 4K x 16 = 64K (per huge page size)</span>
<span class="quote">&gt;              Test result          : PASS</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;         1.2) PMD                  : 2M x  1 = 2M  (per huge page size)</span>
<span class="quote">&gt;              Test result          : PASS</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;         1.3) PMD + Contiguous bit : 2M x 16 = 32M (per huge page size)</span>
<span class="quote">&gt;              Test result          : PASS</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;     64KB granule:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;         3.1) PTE + Contiguous bit : 64K x 32 = 2M (per huge page size)</span>
<span class="quote">&gt;              Test result          : PASS</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;         3.2) PMD + Contiguous bit : 512M x 32 = 16G (per huge page size)</span>
<span class="quote">&gt;              Test result          : no hardware to support this test</span>

Don&#39;t we have support for single (non-contiguous) PMD huge page with 64K
pages (512M per huge page)? I gave it a try and it seems to work (though
without your patches applied ;)).
<span class="quote">
&gt; Huang Shijie (2):</span>
<span class="quote">&gt;   arm64: hugetlb: remove the wrong pmd check in find_num_contig()</span>
<span class="quote">&gt;   arm64: hugetlb: fix the wrong address for several functions</span>

For these patches:
<span class="reviewed-by">
Reviewed-by: Catalin Marinas &lt;catalin.marinas@arm.com&gt;</span>

I&#39;m not sure whether Will plans to push them into 4.9. AFAICT, the
contiguous huge pages never worked properly, so we may not count it as a
regression but a new feature. If Will doesn&#39;t take them, I&#39;ll queue the
patches for 4.10.

BTW, I think we also need to fix this (no functional change though):
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7096">Will Deacon</a> - Nov. 8, 2016, 4:36 p.m.</div>
<pre class="content">
On Tue, Nov 08, 2016 at 02:09:09PM +0000, Catalin Marinas wrote:
<span class="quote">&gt; On Tue, Nov 08, 2016 at 01:44:37PM +0800, Huang Shijie wrote:</span>
<span class="quote">&gt; &gt; (3) The test result in the Softiron and Juno-r1 boards:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;    This detail test result shows below (both the &quot;make func&quot; &amp; &quot;make stress&quot;):</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;     4KB granule:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;         1.1) PTE + Contiguous bit : 4K x 16 = 64K (per huge page size)</span>
<span class="quote">&gt; &gt;              Test result          : PASS</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;         1.2) PMD                  : 2M x  1 = 2M  (per huge page size)</span>
<span class="quote">&gt; &gt;              Test result          : PASS</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;         1.3) PMD + Contiguous bit : 2M x 16 = 32M (per huge page size)</span>
<span class="quote">&gt; &gt;              Test result          : PASS</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;     64KB granule:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;         3.1) PTE + Contiguous bit : 64K x 32 = 2M (per huge page size)</span>
<span class="quote">&gt; &gt;              Test result          : PASS</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;         3.2) PMD + Contiguous bit : 512M x 32 = 16G (per huge page size)</span>
<span class="quote">&gt; &gt;              Test result          : no hardware to support this test</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Don&#39;t we have support for single (non-contiguous) PMD huge page with 64K</span>
<span class="quote">&gt; pages (512M per huge page)? I gave it a try and it seems to work (though</span>
<span class="quote">&gt; without your patches applied ;)).</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; Huang Shijie (2):</span>
<span class="quote">&gt; &gt;   arm64: hugetlb: remove the wrong pmd check in find_num_contig()</span>
<span class="quote">&gt; &gt;   arm64: hugetlb: fix the wrong address for several functions</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; For these patches:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Reviewed-by: Catalin Marinas &lt;catalin.marinas@arm.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I&#39;m not sure whether Will plans to push them into 4.9. AFAICT, the</span>
<span class="quote">&gt; contiguous huge pages never worked properly, so we may not count it as a</span>
<span class="quote">&gt; regression but a new feature. If Will doesn&#39;t take them, I&#39;ll queue the</span>
<span class="quote">&gt; patches for 4.10.</span>

Right, given that it&#39;s never worked and the failure only seems to crop up
in synthetic testing, I think you can queue these for 4.10.

Will
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=140061">Huang Shijie</a> - Nov. 9, 2016, 1:42 a.m.</div>
<pre class="content">
Hi Will &amp; Catalin,

On Tue, Nov 08, 2016 at 04:36:43PM +0000, Will Deacon wrote:
<span class="quote">&gt; On Tue, Nov 08, 2016 at 02:09:09PM +0000, Catalin Marinas wrote:</span>
<span class="quote">&gt; &gt; On Tue, Nov 08, 2016 at 01:44:37PM +0800, Huang Shijie wrote:</span>
<span class="quote">&gt; &gt; &gt; (3) The test result in the Softiron and Juno-r1 boards:</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt;    This detail test result shows below (both the &quot;make func&quot; &amp; &quot;make stress&quot;):</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt;     4KB granule:</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt;         1.1) PTE + Contiguous bit : 4K x 16 = 64K (per huge page size)</span>
<span class="quote">&gt; &gt; &gt;              Test result          : PASS</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt;         1.2) PMD                  : 2M x  1 = 2M  (per huge page size)</span>
<span class="quote">&gt; &gt; &gt;              Test result          : PASS</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt;         1.3) PMD + Contiguous bit : 2M x 16 = 32M (per huge page size)</span>
<span class="quote">&gt; &gt; &gt;              Test result          : PASS</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt;     64KB granule:</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt;         3.1) PTE + Contiguous bit : 64K x 32 = 2M (per huge page size)</span>
<span class="quote">&gt; &gt; &gt;              Test result          : PASS</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt;         3.2) PMD + Contiguous bit : 512M x 32 = 16G (per huge page size)</span>
<span class="quote">&gt; &gt; &gt;              Test result          : no hardware to support this test</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Don&#39;t we have support for single (non-contiguous) PMD huge page with 64K</span>
<span class="quote">&gt; &gt; pages (512M per huge page)? I gave it a try and it seems to work (though</span>
<span class="quote">&gt; &gt; without your patches applied ;)).</span>
Yes, it should be okay. This patch set does not affect the the single
PMD huge page.
<span class="quote">
&gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; Huang Shijie (2):</span>
<span class="quote">&gt; &gt; &gt;   arm64: hugetlb: remove the wrong pmd check in find_num_contig()</span>
<span class="quote">&gt; &gt; &gt;   arm64: hugetlb: fix the wrong address for several functions</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; For these patches:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Reviewed-by: Catalin Marinas &lt;catalin.marinas@arm.com&gt;</span>
Thanks you, Catalin.
<span class="quote">
&gt; &gt; </span>
<span class="quote">&gt; &gt; I&#39;m not sure whether Will plans to push them into 4.9. AFAICT, the</span>
<span class="quote">&gt; &gt; contiguous huge pages never worked properly, so we may not count it as a</span>
<span class="quote">&gt; &gt; regression but a new feature. If Will doesn&#39;t take them, I&#39;ll queue the</span>
<span class="quote">&gt; &gt; patches for 4.10.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Right, given that it&#39;s never worked and the failure only seems to crop up</span>
<span class="quote">&gt; in synthetic testing, I think you can queue these for 4.10.</span>
Okay. Thank for queue them for 4.10.

Thanks
Huang Shijie
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/mm/hugetlbpage.c b/arch/arm64/mm/hugetlbpage.c</span>
<span class="p_header">index 2e49bd252fe7..0a4c97b618ec 100644</span>
<span class="p_header">--- a/arch/arm64/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/arm64/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -323,7 +323,7 @@</span> <span class="p_context"> __setup(&quot;hugepagesz=&quot;, setup_hugepagesz);</span>
 static __init int add_default_hugepagesz(void)
 {
 	if (size_to_hstate(CONT_PTES * PAGE_SIZE) == NULL)
<span class="p_del">-		hugetlb_add_hstate(CONT_PMD_SHIFT);</span>
<span class="p_add">+		hugetlb_add_hstate(CONT_PTE_SHIFT);</span>
 	return 0;
 }
 arch_initcall(add_default_hugepagesz);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



