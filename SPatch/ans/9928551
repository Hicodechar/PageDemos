
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[12/13] KVM: update to new mmu_notifier semantic - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [12/13] KVM: update to new mmu_notifier semantic</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=2554">Jerome Glisse</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 29, 2017, 11:54 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170829235447.10050-13-jglisse@redhat.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9928551/mbox/"
   >mbox</a>
|
   <a href="/patch/9928551/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9928551/">/patch/9928551/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	D87F3602B5 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 29 Aug 2017 23:56:23 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C9D5928A93
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 29 Aug 2017 23:56:23 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id BEBC028A9F; Tue, 29 Aug 2017 23:56:23 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 45B5028A93
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 29 Aug 2017 23:56:23 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752145AbdH2Xzn (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 29 Aug 2017 19:55:43 -0400
Received: from mx1.redhat.com ([209.132.183.28]:55688 &quot;EHLO mx1.redhat.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752082AbdH2XzS (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 29 Aug 2017 19:55:18 -0400
Received: from smtp.corp.redhat.com
	(int-mx04.intmail.prod.int.phx2.redhat.com [10.5.11.14])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 783D9356DA;
	Tue, 29 Aug 2017 23:55:18 +0000 (UTC)
DMARC-Filter: OpenDMARC Filter v1.3.2 mx1.redhat.com 783D9356DA
Authentication-Results: ext-mx06.extmail.prod.ext.phx2.redhat.com;
	dmarc=none (p=none dis=none) header.from=redhat.com
Authentication-Results: ext-mx06.extmail.prod.ext.phx2.redhat.com;
	spf=fail smtp.mailfrom=jglisse@redhat.com
Received: from localhost.localdomain.com (unknown [10.20.6.234])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 552CC5D9CC;
	Tue, 29 Aug 2017 23:55:17 +0000 (UTC)
From: =?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= &lt;jglisse@redhat.com&gt;
To: linux-kernel@vger.kernel.org, linux-mm@kvack.org
Cc: =?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= &lt;jglisse@redhat.com&gt;,
	Paolo Bonzini &lt;pbonzini@redhat.com&gt;,
	=?UTF-8?q?Radim=20Kr=C4=8Dm=C3=A1=C5=99?= &lt;rkrcmar@redhat.com&gt;,
	kvm@vger.kernel.org,
	&quot;Kirill A . Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Andrea Arcangeli &lt;aarcange@redhat.com&gt;
Subject: [PATCH 12/13] KVM: update to new mmu_notifier semantic
Date: Tue, 29 Aug 2017 19:54:46 -0400
Message-Id: &lt;20170829235447.10050-13-jglisse@redhat.com&gt;
In-Reply-To: &lt;20170829235447.10050-1-jglisse@redhat.com&gt;
References: &lt;20170829235447.10050-1-jglisse@redhat.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.30]);
	Tue, 29 Aug 2017 23:55:18 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2554">Jerome Glisse</a> - Aug. 29, 2017, 11:54 p.m.</div>
<pre class="content">
Call to mmu_notifier_invalidate_page() are replaced by call to
mmu_notifier_invalidate_range() and thus call are bracketed by
call to mmu_notifier_invalidate_range_start()/end()

Remove now useless invalidate_page callback.
<span class="signed-off-by">
Signed-off-by: Jérôme Glisse &lt;jglisse@redhat.com&gt;</span>
Cc: Paolo Bonzini &lt;pbonzini@redhat.com&gt;
Cc: Radim Krčmář &lt;rkrcmar@redhat.com&gt;
Cc: kvm@vger.kernel.org
Cc: Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt;
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Andrea Arcangeli &lt;aarcange@redhat.com&gt;
---
 virt/kvm/kvm_main.c | 42 ------------------------------------------
 1 file changed, 42 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c</span>
<span class="p_header">index 15252d723b54..4d81f6ded88e 100644</span>
<span class="p_header">--- a/virt/kvm/kvm_main.c</span>
<span class="p_header">+++ b/virt/kvm/kvm_main.c</span>
<span class="p_chunk">@@ -322,47 +322,6 @@</span> <span class="p_context"> static inline struct kvm *mmu_notifier_to_kvm(struct mmu_notifier *mn)</span>
 	return container_of(mn, struct kvm, mmu_notifier);
 }
 
<span class="p_del">-static void kvm_mmu_notifier_invalidate_page(struct mmu_notifier *mn,</span>
<span class="p_del">-					     struct mm_struct *mm,</span>
<span class="p_del">-					     unsigned long address)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct kvm *kvm = mmu_notifier_to_kvm(mn);</span>
<span class="p_del">-	int need_tlb_flush, idx;</span>
<span class="p_del">-</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * When -&gt;invalidate_page runs, the linux pte has been zapped</span>
<span class="p_del">-	 * already but the page is still allocated until</span>
<span class="p_del">-	 * -&gt;invalidate_page returns. So if we increase the sequence</span>
<span class="p_del">-	 * here the kvm page fault will notice if the spte can&#39;t be</span>
<span class="p_del">-	 * established because the page is going to be freed. If</span>
<span class="p_del">-	 * instead the kvm page fault establishes the spte before</span>
<span class="p_del">-	 * -&gt;invalidate_page runs, kvm_unmap_hva will release it</span>
<span class="p_del">-	 * before returning.</span>
<span class="p_del">-	 *</span>
<span class="p_del">-	 * The sequence increase only need to be seen at spin_unlock</span>
<span class="p_del">-	 * time, and not at spin_lock time.</span>
<span class="p_del">-	 *</span>
<span class="p_del">-	 * Increasing the sequence after the spin_unlock would be</span>
<span class="p_del">-	 * unsafe because the kvm page fault could then establish the</span>
<span class="p_del">-	 * pte after kvm_unmap_hva returned, without noticing the page</span>
<span class="p_del">-	 * is going to be freed.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	idx = srcu_read_lock(&amp;kvm-&gt;srcu);</span>
<span class="p_del">-	spin_lock(&amp;kvm-&gt;mmu_lock);</span>
<span class="p_del">-</span>
<span class="p_del">-	kvm-&gt;mmu_notifier_seq++;</span>
<span class="p_del">-	need_tlb_flush = kvm_unmap_hva(kvm, address) | kvm-&gt;tlbs_dirty;</span>
<span class="p_del">-	/* we&#39;ve to flush the tlb before the pages can be freed */</span>
<span class="p_del">-	if (need_tlb_flush)</span>
<span class="p_del">-		kvm_flush_remote_tlbs(kvm);</span>
<span class="p_del">-</span>
<span class="p_del">-	spin_unlock(&amp;kvm-&gt;mmu_lock);</span>
<span class="p_del">-</span>
<span class="p_del">-	kvm_arch_mmu_notifier_invalidate_page(kvm, address);</span>
<span class="p_del">-</span>
<span class="p_del">-	srcu_read_unlock(&amp;kvm-&gt;srcu, idx);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static void kvm_mmu_notifier_change_pte(struct mmu_notifier *mn,
 					struct mm_struct *mm,
 					unsigned long address,
<span class="p_chunk">@@ -510,7 +469,6 @@</span> <span class="p_context"> static void kvm_mmu_notifier_release(struct mmu_notifier *mn,</span>
 }
 
 static const struct mmu_notifier_ops kvm_mmu_notifier_ops = {
<span class="p_del">-	.invalidate_page	= kvm_mmu_notifier_invalidate_page,</span>
 	.invalidate_range_start	= kvm_mmu_notifier_invalidate_range_start,
 	.invalidate_range_end	= kvm_mmu_notifier_invalidate_range_end,
 	.clear_flush_young	= kvm_mmu_notifier_clear_flush_young,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



