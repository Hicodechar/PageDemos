
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[1/4] x86/paravirt: Dont patch flush_tlb_single - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [1/4] x86/paravirt: Dont patch flush_tlb_single</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=107">Thomas Gleixner</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 27, 2017, 8:34 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171127204257.497387357@linutronix.de&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10078031/mbox/"
   >mbox</a>
|
   <a href="/patch/10078031/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10078031/">/patch/10078031/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	20077602BC for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 27 Nov 2017 20:43:56 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1377529060
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 27 Nov 2017 20:43:56 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 0809C29062; Mon, 27 Nov 2017 20:43:56 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 8C56729061
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 27 Nov 2017 20:43:55 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753395AbdK0Unl (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 27 Nov 2017 15:43:41 -0500
Received: from Galois.linutronix.de ([146.0.238.70]:57989 &quot;EHLO
	Galois.linutronix.de&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752750AbdK0Uni (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 27 Nov 2017 15:43:38 -0500
Received: from localhost ([127.0.0.1] helo=[127.0.1.1])
	by Galois.linutronix.de with esmtp (Exim 4.80)
	(envelope-from &lt;tglx@linutronix.de&gt;)
	id 1eJQEY-0002gR-8I; Mon, 27 Nov 2017 21:42:30 +0100
Message-Id: &lt;20171127204257.497387357@linutronix.de&gt;
User-Agent: quilt/0.63-1
Date: Mon, 27 Nov 2017 21:34:17 +0100
From: Thomas Gleixner &lt;tglx@linutronix.de&gt;
To: LKML &lt;linux-kernel@vger.kernel.org&gt;
Cc: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;,
	Andy Lutomirski &lt;luto@kernel.org&gt;,
	Ingo Molnar &lt;mingo@kernel.org&gt;, Borislav Petkov &lt;bp@alien8.de&gt;,
	Brian Gerst &lt;brgerst@gmail.com&gt;, Denys Vlasenko &lt;dvlasenk@redhat.com&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;, Josh Poimboeuf &lt;jpoimboe@redhat.com&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Peter Zijlstra &lt;peterz@infradead.org&gt;,
	Rik van Riel &lt;riel@redhat.com&gt;, daniel.gruss@iaik.tugraz.at,
	hughd@google.com, keescook@google.com, linux-mm@kvack.org,
	michael.schwarz@iaik.tugraz.at, moritz.lipp@iaik.tugraz.at,
	richard.fellner@student.tugraz.at, Juergen Gross &lt;jgross@suse.com&gt;,
	Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;
Subject: [patch 1/4] x86/paravirt: Dont patch flush_tlb_single
References: &lt;20171127203416.236563829@linutronix.de&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-15
Content-Disposition: inline;
	filename=x86-paravirt--Dont-patch-flush_tlb_single.patch
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=107">Thomas Gleixner</a> - Nov. 27, 2017, 8:34 p.m.</div>
<pre class="content">
native_flush_tlb_single() is not just INLVPG anymore. With
X86_FEATURE_INVPCID_SINGLE and KAISER enabled it flushes also the shadow
mapping. But even with KAISER disabled flushing the particular ASID is the
right thing to do.

Remove the paravirt patching for it.

Fixes: 1fde25dc8ef4 (&quot;x86/mm/kaiser: Use PCID feature to make user and kernel switches faster&quot;)
<span class="signed-off-by">Signed-off-by: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>
---
 arch/x86/kernel/paravirt_patch_64.c |    2 --
 1 file changed, 2 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a> - Nov. 27, 2017, 9:01 p.m.</div>
<pre class="content">
On Mon, Nov 27, 2017 at 09:34:17PM +0100, Thomas Gleixner wrote:
<span class="quote">&gt; native_flush_tlb_single() is not just INLVPG anymore. With</span>
<span class="quote">&gt; X86_FEATURE_INVPCID_SINGLE and KAISER enabled it flushes also the shadow</span>
<span class="quote">&gt; mapping. But even with KAISER disabled flushing the particular ASID is the</span>
<span class="quote">&gt; right thing to do.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Remove the paravirt patching for it.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Fixes: 1fde25dc8ef4 (&quot;x86/mm/kaiser: Use PCID feature to make user and kernel switches faster&quot;)</span>
<span class="quote">&gt; Signed-off-by: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>

Argh!! Yes quite.

ACK
<span class="quote">
&gt; ---</span>
<span class="quote">&gt;  arch/x86/kernel/paravirt_patch_64.c |    2 --</span>
<span class="quote">&gt;  1 file changed, 2 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; --- a/arch/x86/kernel/paravirt_patch_64.c</span>
<span class="quote">&gt; +++ b/arch/x86/kernel/paravirt_patch_64.c</span>
<span class="quote">&gt; @@ -10,7 +10,6 @@ DEF_NATIVE(pv_irq_ops, save_fl, &quot;pushfq;</span>
<span class="quote">&gt;  DEF_NATIVE(pv_mmu_ops, read_cr2, &quot;movq %cr2, %rax&quot;);</span>
<span class="quote">&gt;  DEF_NATIVE(pv_mmu_ops, read_cr3, &quot;movq %cr3, %rax&quot;);</span>
<span class="quote">&gt;  DEF_NATIVE(pv_mmu_ops, write_cr3, &quot;movq %rdi, %cr3&quot;);</span>
<span class="quote">&gt; -DEF_NATIVE(pv_mmu_ops, flush_tlb_single, &quot;invlpg (%rdi)&quot;);</span>
<span class="quote">&gt;  DEF_NATIVE(pv_cpu_ops, wbinvd, &quot;wbinvd&quot;);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  DEF_NATIVE(pv_cpu_ops, usergs_sysret64, &quot;swapgs; sysretq&quot;);</span>
<span class="quote">&gt; @@ -60,7 +59,6 @@ unsigned native_patch(u8 type, u16 clobb</span>
<span class="quote">&gt;  		PATCH_SITE(pv_mmu_ops, read_cr2);</span>
<span class="quote">&gt;  		PATCH_SITE(pv_mmu_ops, read_cr3);</span>
<span class="quote">&gt;  		PATCH_SITE(pv_mmu_ops, write_cr3);</span>
<span class="quote">&gt; -		PATCH_SITE(pv_mmu_ops, flush_tlb_single);</span>
<span class="quote">&gt;  		PATCH_SITE(pv_cpu_ops, wbinvd);</span>
<span class="quote">&gt;  #if defined(CONFIG_PARAVIRT_SPINLOCKS)</span>
<span class="quote">&gt;  		case PARAVIRT_PATCH(pv_lock_ops.queued_spin_unlock):</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=95791">Josh Poimboeuf</a> - Nov. 27, 2017, 9:13 p.m.</div>
<pre class="content">
On Mon, Nov 27, 2017 at 09:34:17PM +0100, Thomas Gleixner wrote:
<span class="quote">&gt; native_flush_tlb_single() is not just INLVPG anymore. With</span>
<span class="quote">&gt; X86_FEATURE_INVPCID_SINGLE and KAISER enabled it flushes also the shadow</span>
<span class="quote">&gt; mapping. But even with KAISER disabled flushing the particular ASID is the</span>
<span class="quote">&gt; right thing to do.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Remove the paravirt patching for it.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Fixes: 1fde25dc8ef4 (&quot;x86/mm/kaiser: Use PCID feature to make user and kernel switches faster&quot;)</span>
<span class="quote">&gt; Signed-off-by: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/x86/kernel/paravirt_patch_64.c |    2 --</span>
<span class="quote">&gt;  1 file changed, 2 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; --- a/arch/x86/kernel/paravirt_patch_64.c</span>
<span class="quote">&gt; +++ b/arch/x86/kernel/paravirt_patch_64.c</span>
<span class="quote">&gt; @@ -10,7 +10,6 @@ DEF_NATIVE(pv_irq_ops, save_fl, &quot;pushfq;</span>
<span class="quote">&gt;  DEF_NATIVE(pv_mmu_ops, read_cr2, &quot;movq %cr2, %rax&quot;);</span>
<span class="quote">&gt;  DEF_NATIVE(pv_mmu_ops, read_cr3, &quot;movq %cr3, %rax&quot;);</span>
<span class="quote">&gt;  DEF_NATIVE(pv_mmu_ops, write_cr3, &quot;movq %rdi, %cr3&quot;);</span>
<span class="quote">&gt; -DEF_NATIVE(pv_mmu_ops, flush_tlb_single, &quot;invlpg (%rdi)&quot;);</span>
<span class="quote">&gt;  DEF_NATIVE(pv_cpu_ops, wbinvd, &quot;wbinvd&quot;);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  DEF_NATIVE(pv_cpu_ops, usergs_sysret64, &quot;swapgs; sysretq&quot;);</span>
<span class="quote">&gt; @@ -60,7 +59,6 @@ unsigned native_patch(u8 type, u16 clobb</span>
<span class="quote">&gt;  		PATCH_SITE(pv_mmu_ops, read_cr2);</span>
<span class="quote">&gt;  		PATCH_SITE(pv_mmu_ops, read_cr3);</span>
<span class="quote">&gt;  		PATCH_SITE(pv_mmu_ops, write_cr3);</span>
<span class="quote">&gt; -		PATCH_SITE(pv_mmu_ops, flush_tlb_single);</span>
<span class="quote">&gt;  		PATCH_SITE(pv_cpu_ops, wbinvd);</span>
<span class="quote">&gt;  #if defined(CONFIG_PARAVIRT_SPINLOCKS)</span>
<span class="quote">&gt;  		case PARAVIRT_PATCH(pv_lock_ops.queued_spin_unlock):</span>

Nice find!

Reviewed-and-tested-by: Josh Poimboeuf &lt;jpoimboe@redhat.com&gt;
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/x86/kernel/paravirt_patch_64.c</span>
<span class="p_header">+++ b/arch/x86/kernel/paravirt_patch_64.c</span>
<span class="p_chunk">@@ -10,7 +10,6 @@</span> <span class="p_context"> DEF_NATIVE(pv_irq_ops, save_fl, &quot;pushfq;</span>
 DEF_NATIVE(pv_mmu_ops, read_cr2, &quot;movq %cr2, %rax&quot;);
 DEF_NATIVE(pv_mmu_ops, read_cr3, &quot;movq %cr3, %rax&quot;);
 DEF_NATIVE(pv_mmu_ops, write_cr3, &quot;movq %rdi, %cr3&quot;);
<span class="p_del">-DEF_NATIVE(pv_mmu_ops, flush_tlb_single, &quot;invlpg (%rdi)&quot;);</span>
 DEF_NATIVE(pv_cpu_ops, wbinvd, &quot;wbinvd&quot;);
 
 DEF_NATIVE(pv_cpu_ops, usergs_sysret64, &quot;swapgs; sysretq&quot;);
<span class="p_chunk">@@ -60,7 +59,6 @@</span> <span class="p_context"> unsigned native_patch(u8 type, u16 clobb</span>
 		PATCH_SITE(pv_mmu_ops, read_cr2);
 		PATCH_SITE(pv_mmu_ops, read_cr3);
 		PATCH_SITE(pv_mmu_ops, write_cr3);
<span class="p_del">-		PATCH_SITE(pv_mmu_ops, flush_tlb_single);</span>
 		PATCH_SITE(pv_cpu_ops, wbinvd);
 #if defined(CONFIG_PARAVIRT_SPINLOCKS)
 		case PARAVIRT_PATCH(pv_lock_ops.queued_spin_unlock):

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



