
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[1/8] hugetlb: make mm and fs code explicitly non-modular - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [1/8] hugetlb: make mm and fs code explicitly non-modular</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=1553">Paul Gortmaker</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 17, 2015, 7:10 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1450379466-23115-2-git-send-email-paul.gortmaker@windriver.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7876271/mbox/"
   >mbox</a>
|
   <a href="/patch/7876271/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7876271/">/patch/7876271/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id C70C69F32E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 17 Dec 2015 19:12:35 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 1877720437
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 17 Dec 2015 19:12:31 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id E3EFA2042C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 17 Dec 2015 19:12:29 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755038AbbLQTLt (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 17 Dec 2015 14:11:49 -0500
Received: from mail5.windriver.com ([192.103.53.11]:52547 &quot;EHLO
	mail5.wrs.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1754756AbbLQTLd (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 17 Dec 2015 14:11:33 -0500
Received: from ALA-HCA.corp.ad.wrs.com (ala-hca.corp.ad.wrs.com
	[147.11.189.40])
	by mail5.wrs.com (8.15.2/8.15.2) with ESMTPS id tBHJBKZv003383
	(version=TLSv1 cipher=AES128-SHA bits=128 verify=OK);
	Thu, 17 Dec 2015 11:11:20 -0800
Received: from yow-lpgnfs-02.corp.ad.wrs.com (128.224.149.8) by
	ALA-HCA.corp.ad.wrs.com (147.11.189.40) with Microsoft SMTP Server id
	14.3.248.2; Thu, 17 Dec 2015 11:11:19 -0800
From: Paul Gortmaker &lt;paul.gortmaker@windriver.com&gt;
To: &lt;linux-kernel@vger.kernel.org&gt;
CC: Paul Gortmaker &lt;paul.gortmaker@windriver.com&gt;,
	Nadia Yvette Chambers &lt;nyc@holomorphy.com&gt;,
	Alexander Viro &lt;viro@zeniv.linux.org.uk&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;,
	Mike Kravetz &lt;mike.kravetz@oracle.com&gt;,
	David Rientjes &lt;rientjes@google.com&gt;,
	Hillf Danton &lt;hillf.zj@alibaba-inc.com&gt;,
	Davidlohr Bueso &lt;dave@stgolabs.net&gt;, &lt;linux-mm@kvack.org&gt;,
	&lt;linux-fsdevel@vger.kernel.org&gt;
Subject: [PATCH 1/8] hugetlb: make mm and fs code explicitly non-modular
Date: Thu, 17 Dec 2015 14:10:59 -0500
Message-ID: &lt;1450379466-23115-2-git-send-email-paul.gortmaker@windriver.com&gt;
X-Mailer: git-send-email 2.6.1
In-Reply-To: &lt;1450379466-23115-1-git-send-email-paul.gortmaker@windriver.com&gt;
References: &lt;1450379466-23115-1-git-send-email-paul.gortmaker@windriver.com&gt;
MIME-Version: 1.0
Content-Type: text/plain
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1553">Paul Gortmaker</a> - Dec. 17, 2015, 7:10 p.m.</div>
<pre class="content">
The Kconfig currently controlling compilation of this code is:

config HUGETLBFS
        bool &quot;HugeTLB file system support&quot;

...meaning that it currently is not being built as a module by anyone.

Lets remove the modular code that is essentially orphaned, so that
when reading the driver there is no doubt it is builtin-only.

Since module_init translates to device_initcall in the non-modular
case, the init ordering gets moved to earlier levels when we use the
more appropriate initcalls here.

Originally I had the fs part and the mm part as separate commits,
just by happenstance of the nature of how I detected these
non-modular use cases.  But that can possibly introduce regressions
if the patch merge ordering puts the fs part 1st -- as the 0-day
testing reported a splat at mount time.

Investigating with &quot;initcall_debug&quot; showed that the delta was
init_hugetlbfs_fs being called _before_ hugetlb_init instead of
after.  So both the fs change and the mm change are here together.

In addition, it worked before due to luck of link order, since they
were both in the same initcall category.  So we now have the fs
part using fs_initcall, and the mm part using subsys_initcall,
which puts it one bucket earlier.  It now passes the basic sanity
test that failed in earlier 0-day testing.

We delete the MODULE_LICENSE tag and capture that information at the
top of the file alongside author comments, etc.

We don&#39;t replace module.h with init.h since the file already has that.
Also note that MODULE_ALIAS is a no-op for non-modular code.

Cc: Nadia Yvette Chambers &lt;nyc@holomorphy.com&gt;
Cc: Alexander Viro &lt;viro@zeniv.linux.org.uk&gt;
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;
Cc: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
Cc: David Rientjes &lt;rientjes@google.com&gt;
Cc: Hillf Danton &lt;hillf.zj@alibaba-inc.com&gt;
Cc: Davidlohr Bueso &lt;dave@stgolabs.net&gt;
Cc: linux-mm@kvack.org
Cc: linux-fsdevel@vger.kernel.org
Reported-by: kernel test robot &lt;ying.huang@linux.intel.com&gt;
<span class="signed-off-by">Signed-off-by: Paul Gortmaker &lt;paul.gortmaker@windriver.com&gt;</span>
---
 fs/hugetlbfs/inode.c | 27 ++-------------------------
 mm/hugetlb.c         | 39 +--------------------------------------
 2 files changed, 3 insertions(+), 63 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - Dec. 17, 2015, 10:45 p.m.</div>
<pre class="content">
On 12/17/2015 11:10 AM, Paul Gortmaker wrote:
<span class="quote">&gt; The Kconfig currently controlling compilation of this code is:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; config HUGETLBFS</span>
<span class="quote">&gt;         bool &quot;HugeTLB file system support&quot;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; ...meaning that it currently is not being built as a module by anyone.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Lets remove the modular code that is essentially orphaned, so that</span>
<span class="quote">&gt; when reading the driver there is no doubt it is builtin-only.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Since module_init translates to device_initcall in the non-modular</span>
<span class="quote">&gt; case, the init ordering gets moved to earlier levels when we use the</span>
<span class="quote">&gt; more appropriate initcalls here.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Originally I had the fs part and the mm part as separate commits,</span>
<span class="quote">&gt; just by happenstance of the nature of how I detected these</span>
<span class="quote">&gt; non-modular use cases.  But that can possibly introduce regressions</span>
<span class="quote">&gt; if the patch merge ordering puts the fs part 1st -- as the 0-day</span>
<span class="quote">&gt; testing reported a splat at mount time.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Investigating with &quot;initcall_debug&quot; showed that the delta was</span>
<span class="quote">&gt; init_hugetlbfs_fs being called _before_ hugetlb_init instead of</span>
<span class="quote">&gt; after.  So both the fs change and the mm change are here together.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; In addition, it worked before due to luck of link order, since they</span>
<span class="quote">&gt; were both in the same initcall category.  So we now have the fs</span>
<span class="quote">&gt; part using fs_initcall, and the mm part using subsys_initcall,</span>
<span class="quote">&gt; which puts it one bucket earlier.  It now passes the basic sanity</span>
<span class="quote">&gt; test that failed in earlier 0-day testing.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; We delete the MODULE_LICENSE tag and capture that information at the</span>
<span class="quote">&gt; top of the file alongside author comments, etc.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; We don&#39;t replace module.h with init.h since the file already has that.</span>
<span class="quote">&gt; Also note that MODULE_ALIAS is a no-op for non-modular code.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Cc: Nadia Yvette Chambers &lt;nyc@holomorphy.com&gt;</span>
<span class="quote">&gt; Cc: Alexander Viro &lt;viro@zeniv.linux.org.uk&gt;</span>
<span class="quote">&gt; Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;</span>
<span class="quote">&gt; Cc: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>
<span class="quote">&gt; Cc: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="quote">&gt; Cc: David Rientjes &lt;rientjes@google.com&gt;</span>
<span class="quote">&gt; Cc: Hillf Danton &lt;hillf.zj@alibaba-inc.com&gt;</span>
<span class="quote">&gt; Cc: Davidlohr Bueso &lt;dave@stgolabs.net&gt;</span>
<span class="quote">&gt; Cc: linux-mm@kvack.org</span>
<span class="quote">&gt; Cc: linux-fsdevel@vger.kernel.org</span>
<span class="quote">&gt; Reported-by: kernel test robot &lt;ying.huang@linux.intel.com&gt;</span>
<span class="quote">&gt; Signed-off-by: Paul Gortmaker &lt;paul.gortmaker@windriver.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  fs/hugetlbfs/inode.c | 27 ++-------------------------</span>
<span class="quote">&gt;  mm/hugetlb.c         | 39 +--------------------------------------</span>
<span class="quote">&gt;  2 files changed, 3 insertions(+), 63 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/fs/hugetlbfs/inode.c b/fs/hugetlbfs/inode.c</span>
<span class="quote">&gt; index de4bdfac0cec..dd04c2ad23b3 100644</span>
<span class="quote">&gt; --- a/fs/hugetlbfs/inode.c</span>
<span class="quote">&gt; +++ b/fs/hugetlbfs/inode.c</span>
<span class="quote">&gt; @@ -4,11 +4,11 @@</span>
<span class="quote">&gt;   * Nadia Yvette Chambers, 2002</span>
<span class="quote">&gt;   *</span>
<span class="quote">&gt;   * Copyright (C) 2002 Linus Torvalds.</span>
<span class="quote">&gt; + * License: GPL</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define pr_fmt(fmt) KBUILD_MODNAME &quot;: &quot; fmt</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -#include &lt;linux/module.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/thread_info.h&gt;</span>
<span class="quote">&gt;  #include &lt;asm/current.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/sched.h&gt;		/* remove ASAP */</span>
<span class="quote">&gt; @@ -1201,7 +1201,6 @@ static struct file_system_type hugetlbfs_fs_type = {</span>
<span class="quote">&gt;  	.mount		= hugetlbfs_mount,</span>
<span class="quote">&gt;  	.kill_sb	= kill_litter_super,</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt; -MODULE_ALIAS_FS(&quot;hugetlbfs&quot;);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  static struct vfsmount *hugetlbfs_vfsmount[HUGE_MAX_HSTATE];</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; @@ -1355,26 +1354,4 @@ static int __init init_hugetlbfs_fs(void)</span>
<span class="quote">&gt;   out2:</span>
<span class="quote">&gt;  	return error;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -static void __exit exit_hugetlbfs_fs(void)</span>
<span class="quote">&gt; -{</span>
<span class="quote">&gt; -	struct hstate *h;</span>
<span class="quote">&gt; -	int i;</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	/*</span>
<span class="quote">&gt; -	 * Make sure all delayed rcu free inodes are flushed before we</span>
<span class="quote">&gt; -	 * destroy cache.</span>
<span class="quote">&gt; -	 */</span>
<span class="quote">&gt; -	rcu_barrier();</span>
<span class="quote">&gt; -	kmem_cache_destroy(hugetlbfs_inode_cachep);</span>
<span class="quote">&gt; -	i = 0;</span>
<span class="quote">&gt; -	for_each_hstate(h)</span>
<span class="quote">&gt; -		kern_unmount(hugetlbfs_vfsmount[i++]);</span>
<span class="quote">&gt; -	unregister_filesystem(&amp;hugetlbfs_fs_type);</span>
<span class="quote">&gt; -}</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -module_init(init_hugetlbfs_fs)</span>
<span class="quote">&gt; -module_exit(exit_hugetlbfs_fs)</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -MODULE_LICENSE(&quot;GPL&quot;);</span>
<span class="quote">&gt; +fs_initcall(init_hugetlbfs_fs)</span>
<span class="quote">&gt; diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="quote">&gt; index ef6963b577fd..be934df69b85 100644</span>
<span class="quote">&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt; @@ -4,7 +4,6 @@</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt;  #include &lt;linux/list.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/init.h&gt;</span>
<span class="quote">&gt; -#include &lt;linux/module.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/mm.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/seq_file.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/sysctl.h&gt;</span>
<span class="quote">&gt; @@ -2549,25 +2548,6 @@ static void hugetlb_unregister_node(struct node *node)</span>
<span class="quote">&gt;  	nhs-&gt;hugepages_kobj = NULL;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -/*</span>
<span class="quote">&gt; - * hugetlb module exit:  unregister hstate attributes from node devices</span>
<span class="quote">&gt; - * that have them.</span>
<span class="quote">&gt; - */</span>
<span class="quote">&gt; -static void hugetlb_unregister_all_nodes(void)</span>
<span class="quote">&gt; -{</span>
<span class="quote">&gt; -	int nid;</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	/*</span>
<span class="quote">&gt; -	 * disable node device registrations.</span>
<span class="quote">&gt; -	 */</span>
<span class="quote">&gt; -	register_hugetlbfs_with_node(NULL, NULL);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	/*</span>
<span class="quote">&gt; -	 * remove hstate attributes from any nodes that have them.</span>
<span class="quote">&gt; -	 */</span>
<span class="quote">&gt; -	for (nid = 0; nid &lt; nr_node_ids; nid++)</span>
<span class="quote">&gt; -		hugetlb_unregister_node(node_devices[nid]);</span>
<span class="quote">&gt; -}</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * Register hstate attributes for a single node device.</span>
<span class="quote">&gt; @@ -2632,27 +2612,10 @@ static struct hstate *kobj_to_node_hstate(struct kobject *kobj, int *nidp)</span>
<span class="quote">&gt;  	return NULL;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -static void hugetlb_unregister_all_nodes(void) { }</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  static void hugetlb_register_all_nodes(void) { }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -static void __exit hugetlb_exit(void)</span>
<span class="quote">&gt; -{</span>
<span class="quote">&gt; -	struct hstate *h;</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	hugetlb_unregister_all_nodes();</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	for_each_hstate(h) {</span>
<span class="quote">&gt; -		kobject_put(hstate_kobjs[hstate_index(h)]);</span>
<span class="quote">&gt; -	}</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	kobject_put(hugepages_kobj);</span>
<span class="quote">&gt; -	kfree(hugetlb_fault_mutex_table);</span>
<span class="quote">&gt; -}</span>
<span class="quote">&gt; -module_exit(hugetlb_exit);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  static int __init hugetlb_init(void)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	int i;</span>
<span class="quote">&gt; @@ -2690,7 +2653,7 @@ static int __init hugetlb_init(void)</span>
<span class="quote">&gt;  		mutex_init(&amp;hugetlb_fault_mutex_table[i]);</span>
<span class="quote">&gt;  	return 0;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -module_init(hugetlb_init);</span>
<span class="quote">&gt; +subsys_initcall(hugetlb_init);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /* Should be called on processing a hugepagesz=... option */</span>
<span class="quote">&gt;  void __init hugetlb_add_hstate(unsigned int order)</span>
<span class="quote">&gt; </span>

I like the removal of code.
<span class="reviewed-by">Reviewed-By: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=106071">Davidlohr Bueso</a> - Dec. 18, 2015, 2:46 a.m.</div>
<pre class="content">
On Thu, 17 Dec 2015, Paul Gortmaker wrote:
<span class="quote">
&gt;The Kconfig currently controlling compilation of this code is:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;config HUGETLBFS</span>
<span class="quote">&gt;        bool &quot;HugeTLB file system support&quot;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;...meaning that it currently is not being built as a module by anyone.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;Lets remove the modular code that is essentially orphaned, so that</span>
<span class="quote">&gt;when reading the driver there is no doubt it is builtin-only.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;Since module_init translates to device_initcall in the non-modular</span>
<span class="quote">&gt;case, the init ordering gets moved to earlier levels when we use the</span>
<span class="quote">&gt;more appropriate initcalls here.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;Originally I had the fs part and the mm part as separate commits,</span>
<span class="quote">&gt;just by happenstance of the nature of how I detected these</span>
<span class="quote">&gt;non-modular use cases.  But that can possibly introduce regressions</span>
<span class="quote">&gt;if the patch merge ordering puts the fs part 1st -- as the 0-day</span>
<span class="quote">&gt;testing reported a splat at mount time.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;Investigating with &quot;initcall_debug&quot; showed that the delta was</span>
<span class="quote">&gt;init_hugetlbfs_fs being called _before_ hugetlb_init instead of</span>
<span class="quote">&gt;after.  So both the fs change and the mm change are here together.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;In addition, it worked before due to luck of link order, since they</span>
<span class="quote">&gt;were both in the same initcall category.  So we now have the fs</span>
<span class="quote">&gt;part using fs_initcall, and the mm part using subsys_initcall,</span>
<span class="quote">&gt;which puts it one bucket earlier.  It now passes the basic sanity</span>
<span class="quote">&gt;test that failed in earlier 0-day testing.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;We delete the MODULE_LICENSE tag and capture that information at the</span>
<span class="quote">&gt;top of the file alongside author comments, etc.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;We don&#39;t replace module.h with init.h since the file already has that.</span>
<span class="quote">&gt;Also note that MODULE_ALIAS is a no-op for non-modular code.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;Cc: Nadia Yvette Chambers &lt;nyc@holomorphy.com&gt;</span>
<span class="quote">&gt;Cc: Alexander Viro &lt;viro@zeniv.linux.org.uk&gt;</span>
<span class="quote">&gt;Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;</span>
<span class="quote">&gt;Cc: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>
<span class="quote">&gt;Cc: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="quote">&gt;Cc: David Rientjes &lt;rientjes@google.com&gt;</span>
<span class="quote">&gt;Cc: Hillf Danton &lt;hillf.zj@alibaba-inc.com&gt;</span>
<span class="quote">&gt;Cc: Davidlohr Bueso &lt;dave@stgolabs.net&gt;</span>
<span class="quote">&gt;Cc: linux-mm@kvack.org</span>
<span class="quote">&gt;Cc: linux-fsdevel@vger.kernel.org</span>
<span class="quote">&gt;Reported-by: kernel test robot &lt;ying.huang@linux.intel.com&gt;</span>
<span class="quote">&gt;Signed-off-by: Paul Gortmaker &lt;paul.gortmaker@windriver.com&gt;</span>
<span class="acked-by">
Acked-by: Davidlohr Bueso &lt;dave@stgolabs.net&gt;</span>
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/fs/hugetlbfs/inode.c b/fs/hugetlbfs/inode.c</span>
<span class="p_header">index de4bdfac0cec..dd04c2ad23b3 100644</span>
<span class="p_header">--- a/fs/hugetlbfs/inode.c</span>
<span class="p_header">+++ b/fs/hugetlbfs/inode.c</span>
<span class="p_chunk">@@ -4,11 +4,11 @@</span> <span class="p_context"></span>
  * Nadia Yvette Chambers, 2002
  *
  * Copyright (C) 2002 Linus Torvalds.
<span class="p_add">+ * License: GPL</span>
  */
 
 #define pr_fmt(fmt) KBUILD_MODNAME &quot;: &quot; fmt
 
<span class="p_del">-#include &lt;linux/module.h&gt;</span>
 #include &lt;linux/thread_info.h&gt;
 #include &lt;asm/current.h&gt;
 #include &lt;linux/sched.h&gt;		/* remove ASAP */
<span class="p_chunk">@@ -1201,7 +1201,6 @@</span> <span class="p_context"> static struct file_system_type hugetlbfs_fs_type = {</span>
 	.mount		= hugetlbfs_mount,
 	.kill_sb	= kill_litter_super,
 };
<span class="p_del">-MODULE_ALIAS_FS(&quot;hugetlbfs&quot;);</span>
 
 static struct vfsmount *hugetlbfs_vfsmount[HUGE_MAX_HSTATE];
 
<span class="p_chunk">@@ -1355,26 +1354,4 @@</span> <span class="p_context"> static int __init init_hugetlbfs_fs(void)</span>
  out2:
 	return error;
 }
<span class="p_del">-</span>
<span class="p_del">-static void __exit exit_hugetlbfs_fs(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct hstate *h;</span>
<span class="p_del">-	int i;</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * Make sure all delayed rcu free inodes are flushed before we</span>
<span class="p_del">-	 * destroy cache.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	rcu_barrier();</span>
<span class="p_del">-	kmem_cache_destroy(hugetlbfs_inode_cachep);</span>
<span class="p_del">-	i = 0;</span>
<span class="p_del">-	for_each_hstate(h)</span>
<span class="p_del">-		kern_unmount(hugetlbfs_vfsmount[i++]);</span>
<span class="p_del">-	unregister_filesystem(&amp;hugetlbfs_fs_type);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-module_init(init_hugetlbfs_fs)</span>
<span class="p_del">-module_exit(exit_hugetlbfs_fs)</span>
<span class="p_del">-</span>
<span class="p_del">-MODULE_LICENSE(&quot;GPL&quot;);</span>
<span class="p_add">+fs_initcall(init_hugetlbfs_fs)</span>
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index ef6963b577fd..be934df69b85 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -4,7 +4,6 @@</span> <span class="p_context"></span>
  */
 #include &lt;linux/list.h&gt;
 #include &lt;linux/init.h&gt;
<span class="p_del">-#include &lt;linux/module.h&gt;</span>
 #include &lt;linux/mm.h&gt;
 #include &lt;linux/seq_file.h&gt;
 #include &lt;linux/sysctl.h&gt;
<span class="p_chunk">@@ -2549,25 +2548,6 @@</span> <span class="p_context"> static void hugetlb_unregister_node(struct node *node)</span>
 	nhs-&gt;hugepages_kobj = NULL;
 }
 
<span class="p_del">-/*</span>
<span class="p_del">- * hugetlb module exit:  unregister hstate attributes from node devices</span>
<span class="p_del">- * that have them.</span>
<span class="p_del">- */</span>
<span class="p_del">-static void hugetlb_unregister_all_nodes(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	int nid;</span>
<span class="p_del">-</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * disable node device registrations.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	register_hugetlbfs_with_node(NULL, NULL);</span>
<span class="p_del">-</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * remove hstate attributes from any nodes that have them.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	for (nid = 0; nid &lt; nr_node_ids; nid++)</span>
<span class="p_del">-		hugetlb_unregister_node(node_devices[nid]);</span>
<span class="p_del">-}</span>
 
 /*
  * Register hstate attributes for a single node device.
<span class="p_chunk">@@ -2632,27 +2612,10 @@</span> <span class="p_context"> static struct hstate *kobj_to_node_hstate(struct kobject *kobj, int *nidp)</span>
 	return NULL;
 }
 
<span class="p_del">-static void hugetlb_unregister_all_nodes(void) { }</span>
<span class="p_del">-</span>
 static void hugetlb_register_all_nodes(void) { }
 
 #endif
 
<span class="p_del">-static void __exit hugetlb_exit(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct hstate *h;</span>
<span class="p_del">-</span>
<span class="p_del">-	hugetlb_unregister_all_nodes();</span>
<span class="p_del">-</span>
<span class="p_del">-	for_each_hstate(h) {</span>
<span class="p_del">-		kobject_put(hstate_kobjs[hstate_index(h)]);</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	kobject_put(hugepages_kobj);</span>
<span class="p_del">-	kfree(hugetlb_fault_mutex_table);</span>
<span class="p_del">-}</span>
<span class="p_del">-module_exit(hugetlb_exit);</span>
<span class="p_del">-</span>
 static int __init hugetlb_init(void)
 {
 	int i;
<span class="p_chunk">@@ -2690,7 +2653,7 @@</span> <span class="p_context"> static int __init hugetlb_init(void)</span>
 		mutex_init(&amp;hugetlb_fault_mutex_table[i]);
 	return 0;
 }
<span class="p_del">-module_init(hugetlb_init);</span>
<span class="p_add">+subsys_initcall(hugetlb_init);</span>
 
 /* Should be called on processing a hugepagesz=... option */
 void __init hugetlb_add_hstate(unsigned int order)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



