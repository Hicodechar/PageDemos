
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v5,2/2] arm: perf: Add event descriptions - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v5,2/2] arm: perf: Add event descriptions</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=88861">Drew Richardson</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 13, 2015, 3:36 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20151013153644.GC18121@dreric01-gentoo.localdomain&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7386251/mbox/"
   >mbox</a>
|
   <a href="/patch/7386251/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7386251/">/patch/7386251/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 8C4459F1B9
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 13 Oct 2015 15:37:22 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 783BA206F2
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 13 Oct 2015 15:37:20 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 42EA820673
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 13 Oct 2015 15:37:19 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753090AbbJMPhO (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 13 Oct 2015 11:37:14 -0400
Received: from foss.arm.com ([217.140.101.70]:53750 &quot;EHLO foss.arm.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752845AbbJMPhN (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 13 Oct 2015 11:37:13 -0400
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
	by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 9B6873C;
	Tue, 13 Oct 2015 08:37:10 -0700 (PDT)
Received: from localhost (usa-sjc-imap-foss1.foss.arm.com [10.72.51.249])
	by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id
	892ED3F2E5; Tue, 13 Oct 2015 08:37:12 -0700 (PDT)
Date: Tue, 13 Oct 2015 08:36:45 -0700
From: Drew Richardson &lt;drew.richardson@arm.com&gt;
To: Will Deacon &lt;Will.Deacon@arm.com&gt;
Cc: Peter Zijlstra &lt;a.p.zijlstra@chello.nl&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	Arnaldo Carvalho de Melo &lt;acme@kernel.org&gt;,
	Russell King &lt;linux@arm.linux.org.uk&gt;,
	&quot;linux-kernel@vger.kernel.org&quot; &lt;linux-kernel@vger.kernel.org&gt;,
	&quot;linux-arm-kernel@lists.infradead.org&quot; 
	&lt;linux-arm-kernel@lists.infradead.org&gt;,
	Wade Cherry &lt;Wade.Cherry@arm.com&gt;, Pawel Moll &lt;Pawel.Moll@arm.com&gt;
Subject: Re: [PATCH v5 2/2] arm: perf: Add event descriptions
Message-ID: &lt;20151013153644.GC18121@dreric01-gentoo.localdomain&gt;
References: &lt;20151007182735.GA18706@dreric01-gentoo.localdomain&gt;
	&lt;20151009101338.GH26278@arm.com&gt;
	&lt;20151009165330.GA22415@dreric01-gentoo.localdomain&gt;
	&lt;20151012143025.GG16124@arm.com&gt;
	&lt;20151012181037.GA16013@dreric01-gentoo.localdomain&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: &lt;20151012181037.GA16013@dreric01-gentoo.localdomain&gt;
User-Agent: Mutt/1.5.23 (2014-03-12)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=88861">Drew Richardson</a> - Oct. 13, 2015, 3:36 p.m.</div>
<pre class="content">
Add additional information about the ARM architected hardware events
to make counters self describing. This makes the hardware PMUs easier
to use as perf list contains possible events instead of users having
to refer to documentation like the ARM TRMs.
<span class="signed-off-by">
Signed-off-by: Drew Richardson &lt;drew.richardson@arm.com&gt;</span>
---
 arch/arm/kernel/perf_event_v7.c | 121 ++++++++++++++++++++++++++++++++++++++++
 drivers/perf/arm_pmu.c          |   1 +
 2 files changed, 122 insertions(+)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7096">Will Deacon</a> - Oct. 15, 2015, 1:21 p.m.</div>
<pre class="content">
On Tue, Oct 13, 2015 at 08:36:45AM -0700, Drew Richardson wrote:
<span class="quote">&gt; Add additional information about the ARM architected hardware events</span>
<span class="quote">&gt; to make counters self describing. This makes the hardware PMUs easier</span>
<span class="quote">&gt; to use as perf list contains possible events instead of users having</span>
<span class="quote">&gt; to refer to documentation like the ARM TRMs.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Drew Richardson &lt;drew.richardson@arm.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/arm/kernel/perf_event_v7.c | 121 ++++++++++++++++++++++++++++++++++++++++</span>
<span class="quote">&gt;  drivers/perf/arm_pmu.c          |   1 +</span>
<span class="quote">&gt;  2 files changed, 122 insertions(+)</span>

[...]
<span class="quote">
&gt; diff --git a/drivers/perf/arm_pmu.c b/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; index 2365a32a595e..e933d2dd71c0 100644</span>
<span class="quote">&gt; --- a/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; +++ b/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; @@ -548,6 +548,7 @@ static void armpmu_init(struct arm_pmu *armpmu)</span>
<span class="quote">&gt;  		.stop		= armpmu_stop,</span>
<span class="quote">&gt;  		.read		= armpmu_read,</span>
<span class="quote">&gt;  		.filter_match	= armpmu_filter_match,</span>
<span class="quote">&gt; +		.attr_groups	= armpmu-&gt;pmu.attr_groups,</span>

I don&#39;t understand this hunk. What&#39;s it doing?

Will
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=88861">Drew Richardson</a> - Oct. 15, 2015, 3:15 p.m.</div>
<pre class="content">
On Thu, Oct 15, 2015 at 02:21:12PM +0100, Will Deacon wrote:
<span class="quote">&gt; On Tue, Oct 13, 2015 at 08:36:45AM -0700, Drew Richardson wrote:</span>
<span class="quote">&gt; &gt; Add additional information about the ARM architected hardware events</span>
<span class="quote">&gt; &gt; to make counters self describing. This makes the hardware PMUs easier</span>
<span class="quote">&gt; &gt; to use as perf list contains possible events instead of users having</span>
<span class="quote">&gt; &gt; to refer to documentation like the ARM TRMs.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Signed-off-by: Drew Richardson &lt;drew.richardson@arm.com&gt;</span>
<span class="quote">&gt; &gt; ---</span>
<span class="quote">&gt; &gt;  arch/arm/kernel/perf_event_v7.c | 121 ++++++++++++++++++++++++++++++++++++++++</span>
<span class="quote">&gt; &gt;  drivers/perf/arm_pmu.c          |   1 +</span>
<span class="quote">&gt; &gt;  2 files changed, 122 insertions(+)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; [...]</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; diff --git a/drivers/perf/arm_pmu.c b/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; &gt; index 2365a32a595e..e933d2dd71c0 100644</span>
<span class="quote">&gt; &gt; --- a/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; &gt; +++ b/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; &gt; @@ -548,6 +548,7 @@ static void armpmu_init(struct arm_pmu *armpmu)</span>
<span class="quote">&gt; &gt;  		.stop		= armpmu_stop,</span>
<span class="quote">&gt; &gt;  		.read		= armpmu_read,</span>
<span class="quote">&gt; &gt;  		.filter_match	= armpmu_filter_match,</span>
<span class="quote">&gt; &gt; +		.attr_groups	= armpmu-&gt;pmu.attr_groups,</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I don&#39;t understand this hunk. What&#39;s it doing?</span>

I&#39;m not 100% clear either on what it&#39;s doing. But without this line
the attr_groups don&#39;t get passed on and I don&#39;t see them on my TC2. I
debugged the issue down to this but it may not be the proper way to
solve the problem.

Drew
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=20181">Pawel Moll</a> - Oct. 15, 2015, 3:20 p.m.</div>
<pre class="content">
On Thu, 2015-10-15 at 08:15 -0700, Drew Richardson wrote:
<span class="quote">&gt; On Thu, Oct 15, 2015 at 02:21:12PM +0100, Will Deacon wrote:</span>
<span class="quote">&gt; &gt; On Tue, Oct 13, 2015 at 08:36:45AM -0700, Drew Richardson wrote:</span>
<span class="quote">&gt; &gt; &gt; Add additional information about the ARM architected hardware events</span>
<span class="quote">&gt; &gt; &gt; to make counters self describing. This makes the hardware PMUs easier</span>
<span class="quote">&gt; &gt; &gt; to use as perf list contains possible events instead of users having</span>
<span class="quote">&gt; &gt; &gt; to refer to documentation like the ARM TRMs.</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; Signed-off-by: Drew Richardson &lt;drew.richardson@arm.com&gt;</span>
<span class="quote">&gt; &gt; &gt; ---</span>
<span class="quote">&gt; &gt; &gt;  arch/arm/kernel/perf_event_v7.c | 121 ++++++++++++++++++++++++++++++++++++++++</span>
<span class="quote">&gt; &gt; &gt;  drivers/perf/arm_pmu.c          |   1 +</span>
<span class="quote">&gt; &gt; &gt;  2 files changed, 122 insertions(+)</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; [...]</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; diff --git a/drivers/perf/arm_pmu.c b/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; &gt; &gt; index 2365a32a595e..e933d2dd71c0 100644</span>
<span class="quote">&gt; &gt; &gt; --- a/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; &gt; &gt; +++ b/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; &gt; &gt; @@ -548,6 +548,7 @@ static void armpmu_init(struct arm_pmu *armpmu)</span>
<span class="quote">&gt; &gt; &gt;  		.stop		= armpmu_stop,</span>
<span class="quote">&gt; &gt; &gt;  		.read		= armpmu_read,</span>
<span class="quote">&gt; &gt; &gt;  		.filter_match	= armpmu_filter_match,</span>
<span class="quote">&gt; &gt; &gt; +		.attr_groups	= armpmu-&gt;pmu.attr_groups,</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; I don&#39;t understand this hunk. What&#39;s it doing?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I&#39;m not 100% clear either on what it&#39;s doing. But without this line</span>
<span class="quote">&gt; the attr_groups don&#39;t get passed on and I don&#39;t see them on my TC2. I</span>
<span class="quote">&gt; debugged the issue down to this but it may not be the proper way to</span>
<span class="quote">&gt; solve the problem.</span>

The perf core creates attributes passed as pmu.attr_groups
in /sys/bus/events/devices/&lt;pmu&gt;.

Pawel

--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7096">Will Deacon</a> - Oct. 15, 2015, 3:29 p.m.</div>
<pre class="content">
On Thu, Oct 15, 2015 at 08:15:06AM -0700, Drew Richardson wrote:
<span class="quote">&gt; On Thu, Oct 15, 2015 at 02:21:12PM +0100, Will Deacon wrote:</span>
<span class="quote">&gt; &gt; On Tue, Oct 13, 2015 at 08:36:45AM -0700, Drew Richardson wrote:</span>
<span class="quote">&gt; &gt; &gt; Add additional information about the ARM architected hardware events</span>
<span class="quote">&gt; &gt; &gt; to make counters self describing. This makes the hardware PMUs easier</span>
<span class="quote">&gt; &gt; &gt; to use as perf list contains possible events instead of users having</span>
<span class="quote">&gt; &gt; &gt; to refer to documentation like the ARM TRMs.</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; Signed-off-by: Drew Richardson &lt;drew.richardson@arm.com&gt;</span>
<span class="quote">&gt; &gt; &gt; ---</span>
<span class="quote">&gt; &gt; &gt;  arch/arm/kernel/perf_event_v7.c | 121 ++++++++++++++++++++++++++++++++++++++++</span>
<span class="quote">&gt; &gt; &gt;  drivers/perf/arm_pmu.c          |   1 +</span>
<span class="quote">&gt; &gt; &gt;  2 files changed, 122 insertions(+)</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; [...]</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; diff --git a/drivers/perf/arm_pmu.c b/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; &gt; &gt; index 2365a32a595e..e933d2dd71c0 100644</span>
<span class="quote">&gt; &gt; &gt; --- a/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; &gt; &gt; +++ b/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; &gt; &gt; @@ -548,6 +548,7 @@ static void armpmu_init(struct arm_pmu *armpmu)</span>
<span class="quote">&gt; &gt; &gt;  		.stop		= armpmu_stop,</span>
<span class="quote">&gt; &gt; &gt;  		.read		= armpmu_read,</span>
<span class="quote">&gt; &gt; &gt;  		.filter_match	= armpmu_filter_match,</span>
<span class="quote">&gt; &gt; &gt; +		.attr_groups	= armpmu-&gt;pmu.attr_groups,</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; I don&#39;t understand this hunk. What&#39;s it doing?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I&#39;m not 100% clear either on what it&#39;s doing. But without this line</span>
<span class="quote">&gt; the attr_groups don&#39;t get passed on and I don&#39;t see them on my TC2. I</span>
<span class="quote">&gt; debugged the issue down to this but it may not be the proper way to</span>
<span class="quote">&gt; solve the problem.</span>

Oh yuck, it&#39;s because we call armpmu_init after cpu_pmu_init and the former
uses struct initialisation and ends up zeroing anything set previously.

We should probably tidy all this up:

  * Remove armpmu_register and call perf_pmu_register directly from
    arm_pmu_device_probe instead

  * Call armpmu_init immediately prior to arm_cpu_init

Will
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=30282">Mark Rutland</a> - Oct. 15, 2015, 3:42 p.m.</div>
<pre class="content">
On Thu, Oct 15, 2015 at 04:20:37PM +0100, Pawel Moll wrote:
<span class="quote">&gt; On Thu, 2015-10-15 at 08:15 -0700, Drew Richardson wrote:</span>
<span class="quote">&gt; &gt; On Thu, Oct 15, 2015 at 02:21:12PM +0100, Will Deacon wrote:</span>
<span class="quote">&gt; &gt; &gt; On Tue, Oct 13, 2015 at 08:36:45AM -0700, Drew Richardson wrote:</span>
<span class="quote">&gt; &gt; &gt; &gt; Add additional information about the ARM architected hardware events</span>
<span class="quote">&gt; &gt; &gt; &gt; to make counters self describing. This makes the hardware PMUs easier</span>
<span class="quote">&gt; &gt; &gt; &gt; to use as perf list contains possible events instead of users having</span>
<span class="quote">&gt; &gt; &gt; &gt; to refer to documentation like the ARM TRMs.</span>
<span class="quote">&gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; Signed-off-by: Drew Richardson &lt;drew.richardson@arm.com&gt;</span>
<span class="quote">&gt; &gt; &gt; &gt; ---</span>
<span class="quote">&gt; &gt; &gt; &gt;  arch/arm/kernel/perf_event_v7.c | 121 ++++++++++++++++++++++++++++++++++++++++</span>
<span class="quote">&gt; &gt; &gt; &gt;  drivers/perf/arm_pmu.c          |   1 +</span>
<span class="quote">&gt; &gt; &gt; &gt;  2 files changed, 122 insertions(+)</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; [...]</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; diff --git a/drivers/perf/arm_pmu.c b/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; &gt; &gt; &gt; index 2365a32a595e..e933d2dd71c0 100644</span>
<span class="quote">&gt; &gt; &gt; &gt; --- a/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; &gt; &gt; &gt; +++ b/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; &gt; &gt; &gt; @@ -548,6 +548,7 @@ static void armpmu_init(struct arm_pmu *armpmu)</span>
<span class="quote">&gt; &gt; &gt; &gt;  		.stop		= armpmu_stop,</span>
<span class="quote">&gt; &gt; &gt; &gt;  		.read		= armpmu_read,</span>
<span class="quote">&gt; &gt; &gt; &gt;  		.filter_match	= armpmu_filter_match,</span>
<span class="quote">&gt; &gt; &gt; &gt; +		.attr_groups	= armpmu-&gt;pmu.attr_groups,</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; I don&#39;t understand this hunk. What&#39;s it doing?</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; I&#39;m not 100% clear either on what it&#39;s doing. But without this line</span>
<span class="quote">&gt; &gt; the attr_groups don&#39;t get passed on and I don&#39;t see them on my TC2. I</span>
<span class="quote">&gt; &gt; debugged the issue down to this but it may not be the proper way to</span>
<span class="quote">&gt; &gt; solve the problem.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The perf core creates attributes passed as pmu.attr_groups</span>
<span class="quote">&gt; in /sys/bus/events/devices/&lt;pmu&gt;.</span>

Sure, but the confusion here had to do with why we were re-assigning the
field to itself rather than what the purpose of said field was.

Thanks,
Mark.
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=20181">Pawel Moll</a> - Oct. 15, 2015, 3:49 p.m.</div>
<pre class="content">
On Thu, 2015-10-15 at 16:42 +0100, Mark Rutland wrote:
<span class="quote">&gt; On Thu, Oct 15, 2015 at 04:20:37PM +0100, Pawel Moll wrote:</span>
<span class="quote">&gt; &gt; On Thu, 2015-10-15 at 08:15 -0700, Drew Richardson wrote:</span>
<span class="quote">&gt; &gt; &gt; On Thu, Oct 15, 2015 at 02:21:12PM +0100, Will Deacon wrote:</span>
<span class="quote">&gt; &gt; &gt; &gt; On Tue, Oct 13, 2015 at 08:36:45AM -0700, Drew Richardson wrote:</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; Add additional information about the ARM architected hardware events</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; to make counters self describing. This makes the hardware PMUs easier</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; to use as perf list contains possible events instead of users having</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; to refer to documentation like the ARM TRMs.</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; Signed-off-by: Drew Richardson &lt;drew.richardson@arm.com&gt;</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; ---</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;  arch/arm/kernel/perf_event_v7.c | 121 ++++++++++++++++++++++++++++++++++++++++</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;  drivers/perf/arm_pmu.c          |   1 +</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;  2 files changed, 122 insertions(+)</span>
<span class="quote">&gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; [...]</span>
<span class="quote">&gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; diff --git a/drivers/perf/arm_pmu.c b/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; index 2365a32a595e..e933d2dd71c0 100644</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; --- a/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; +++ b/drivers/perf/arm_pmu.c</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; @@ -548,6 +548,7 @@ static void armpmu_init(struct arm_pmu *armpmu)</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;  		.stop		= armpmu_stop,</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;  		.read		= armpmu_read,</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt;  		.filter_match	= armpmu_filter_match,</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; +		.attr_groups	= armpmu-&gt;pmu.attr_groups,</span>
<span class="quote">&gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; I don&#39;t understand this hunk. What&#39;s it doing?</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; I&#39;m not 100% clear either on what it&#39;s doing. But without this line</span>
<span class="quote">&gt; &gt; &gt; the attr_groups don&#39;t get passed on and I don&#39;t see them on my TC2. I</span>
<span class="quote">&gt; &gt; &gt; debugged the issue down to this but it may not be the proper way to</span>
<span class="quote">&gt; &gt; &gt; solve the problem.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; The perf core creates attributes passed as pmu.attr_groups</span>
<span class="quote">&gt; &gt; in /sys/bus/events/devices/&lt;pmu&gt;.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Sure, but the confusion here had to do with why we were re-assigning the</span>
<span class="quote">&gt; field to itself rather than what the purpose of said field was.</span>

Ah, right. Sorry. I must admit I haven&#39;t looked to the right from the =
sign...

Pawel

--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm/kernel/perf_event_v7.c b/arch/arm/kernel/perf_event_v7.c</span>
<span class="p_header">index dc979724e3bb..970e1364e484 100644</span>
<span class="p_header">--- a/arch/arm/kernel/perf_event_v7.c</span>
<span class="p_header">+++ b/arch/arm/kernel/perf_event_v7.c</span>
<span class="p_chunk">@@ -531,6 +531,120 @@</span> <span class="p_context"> static const unsigned scorpion_perf_cache_map[PERF_COUNT_HW_CACHE_MAX]</span>
 	[C(BPU)][C(OP_WRITE)][C(RESULT_MISS)] = ARMV7_PERFCTR_PC_BRANCH_MIS_PRED,
 };
 
<span class="p_add">+#define ARMV7_EVENT_ATTR_RESOLVE(m) #m</span>
<span class="p_add">+#define ARMV7_EVENT_ATTR(name, config) \</span>
<span class="p_add">+	PMU_EVENT_ATTR_STRING(name, armv7_event_attr_##name, \</span>
<span class="p_add">+			      &quot;event=&quot; ARMV7_EVENT_ATTR_RESOLVE(config))</span>
<span class="p_add">+</span>
<span class="p_add">+ARMV7_EVENT_ATTR(sw_incr, ARMV7_PERFCTR_PMNC_SW_INCR);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(l1i_cache_refill, ARMV7_PERFCTR_L1_ICACHE_REFILL);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(l1i_tlb_refill, ARMV7_PERFCTR_ITLB_REFILL);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(l1d_cache_refill, ARMV7_PERFCTR_L1_DCACHE_REFILL);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(l1d_cache, ARMV7_PERFCTR_L1_DCACHE_ACCESS);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(l1d_tlb_refill, ARMV7_PERFCTR_DTLB_REFILL);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(ld_retired, ARMV7_PERFCTR_MEM_READ);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(st_retired, ARMV7_PERFCTR_MEM_WRITE);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(inst_retired, ARMV7_PERFCTR_INSTR_EXECUTED);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(exc_taken, ARMV7_PERFCTR_EXC_TAKEN);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(exc_return, ARMV7_PERFCTR_EXC_EXECUTED);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(cid_write_retired, ARMV7_PERFCTR_CID_WRITE);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(pc_write_retired, ARMV7_PERFCTR_PC_WRITE);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(br_immed_retired, ARMV7_PERFCTR_PC_IMM_BRANCH);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(br_return_retired, ARMV7_PERFCTR_PC_PROC_RETURN);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(unaligned_ldst_retired, ARMV7_PERFCTR_MEM_UNALIGNED_ACCESS);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(br_mis_pred, ARMV7_PERFCTR_PC_BRANCH_MIS_PRED);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(cpu_cycles, ARMV7_PERFCTR_CLOCK_CYCLES);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(br_pred, ARMV7_PERFCTR_PC_BRANCH_PRED);</span>
<span class="p_add">+</span>
<span class="p_add">+static struct attribute *armv7_pmuv1_event_attrs[] = {</span>
<span class="p_add">+	&amp;armv7_event_attr_sw_incr.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_l1i_cache_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_l1i_tlb_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_l1d_cache_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_l1d_cache.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_l1d_tlb_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_ld_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_st_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_inst_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_exc_taken.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_exc_return.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_cid_write_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_pc_write_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_br_immed_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_br_return_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_unaligned_ldst_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_br_mis_pred.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_cpu_cycles.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_br_pred.attr.attr,</span>
<span class="p_add">+	NULL</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+static struct attribute_group armv7_pmuv1_events_attr_group = {</span>
<span class="p_add">+	.name = &quot;events&quot;,</span>
<span class="p_add">+	.attrs = armv7_pmuv1_event_attrs,</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+static const struct attribute_group *armv7_pmuv1_attr_groups[] = {</span>
<span class="p_add">+	&amp;armv7_pmuv1_events_attr_group,</span>
<span class="p_add">+	NULL</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+ARMV7_EVENT_ATTR(mem_access, ARMV7_PERFCTR_MEM_ACCESS);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(l1i_cache, ARMV7_PERFCTR_L1_ICACHE_ACCESS);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(l1d_cache_wb, ARMV7_PERFCTR_L1_DCACHE_WB);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(l2d_cache, ARMV7_PERFCTR_L2_CACHE_ACCESS);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(l2d_cache_refill, ARMV7_PERFCTR_L2_CACHE_REFILL);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(l2d_cache_wb, ARMV7_PERFCTR_L2_CACHE_WB);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(bus_access, ARMV7_PERFCTR_BUS_ACCESS);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(memory_error, ARMV7_PERFCTR_MEM_ERROR);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(inst_spec, ARMV7_PERFCTR_INSTR_SPEC);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(ttbr_write_retired, ARMV7_PERFCTR_TTBR_WRITE);</span>
<span class="p_add">+ARMV7_EVENT_ATTR(bus_cycles, ARMV7_PERFCTR_BUS_CYCLES);</span>
<span class="p_add">+</span>
<span class="p_add">+static struct attribute *armv7_pmuv2_event_attrs[] = {</span>
<span class="p_add">+	&amp;armv7_event_attr_sw_incr.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_l1i_cache_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_l1i_tlb_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_l1d_cache_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_l1d_cache.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_l1d_tlb_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_ld_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_st_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_inst_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_exc_taken.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_exc_return.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_cid_write_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_pc_write_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_br_immed_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_br_return_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_unaligned_ldst_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_br_mis_pred.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_cpu_cycles.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_br_pred.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_mem_access.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_l1i_cache.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_l1d_cache_wb.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_l2d_cache.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_l2d_cache_refill.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_l2d_cache_wb.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_bus_access.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_memory_error.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_inst_spec.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_ttbr_write_retired.attr.attr,</span>
<span class="p_add">+	&amp;armv7_event_attr_bus_cycles.attr.attr,</span>
<span class="p_add">+	NULL</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+static struct attribute_group armv7_pmuv2_events_attr_group = {</span>
<span class="p_add">+	.name = &quot;events&quot;,</span>
<span class="p_add">+	.attrs = armv7_pmuv2_event_attrs,</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+static const struct attribute_group *armv7_pmuv2_attr_groups[] = {</span>
<span class="p_add">+	&amp;armv7_pmuv2_events_attr_group,</span>
<span class="p_add">+	NULL</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 /*
  * Perf Events&#39; indices
  */
<span class="p_chunk">@@ -1069,6 +1183,7 @@</span> <span class="p_context"> static int armv7_a8_pmu_init(struct arm_pmu *cpu_pmu)</span>
 	armv7pmu_init(cpu_pmu);
 	cpu_pmu-&gt;name		= &quot;armv7_cortex_a8&quot;;
 	cpu_pmu-&gt;map_event	= armv7_a8_map_event;
<span class="p_add">+	cpu_pmu-&gt;pmu.attr_groups = armv7_pmuv1_attr_groups;</span>
 	return armv7_probe_num_events(cpu_pmu);
 }
 
<span class="p_chunk">@@ -1077,6 +1192,7 @@</span> <span class="p_context"> static int armv7_a9_pmu_init(struct arm_pmu *cpu_pmu)</span>
 	armv7pmu_init(cpu_pmu);
 	cpu_pmu-&gt;name		= &quot;armv7_cortex_a9&quot;;
 	cpu_pmu-&gt;map_event	= armv7_a9_map_event;
<span class="p_add">+	cpu_pmu-&gt;pmu.attr_groups = armv7_pmuv1_attr_groups;</span>
 	return armv7_probe_num_events(cpu_pmu);
 }
 
<span class="p_chunk">@@ -1085,6 +1201,7 @@</span> <span class="p_context"> static int armv7_a5_pmu_init(struct arm_pmu *cpu_pmu)</span>
 	armv7pmu_init(cpu_pmu);
 	cpu_pmu-&gt;name		= &quot;armv7_cortex_a5&quot;;
 	cpu_pmu-&gt;map_event	= armv7_a5_map_event;
<span class="p_add">+	cpu_pmu-&gt;pmu.attr_groups = armv7_pmuv1_attr_groups;</span>
 	return armv7_probe_num_events(cpu_pmu);
 }
 
<span class="p_chunk">@@ -1094,6 +1211,7 @@</span> <span class="p_context"> static int armv7_a15_pmu_init(struct arm_pmu *cpu_pmu)</span>
 	cpu_pmu-&gt;name		= &quot;armv7_cortex_a15&quot;;
 	cpu_pmu-&gt;map_event	= armv7_a15_map_event;
 	cpu_pmu-&gt;set_event_filter = armv7pmu_set_event_filter;
<span class="p_add">+	cpu_pmu-&gt;pmu.attr_groups = armv7_pmuv2_attr_groups;</span>
 	return armv7_probe_num_events(cpu_pmu);
 }
 
<span class="p_chunk">@@ -1103,6 +1221,7 @@</span> <span class="p_context"> static int armv7_a7_pmu_init(struct arm_pmu *cpu_pmu)</span>
 	cpu_pmu-&gt;name		= &quot;armv7_cortex_a7&quot;;
 	cpu_pmu-&gt;map_event	= armv7_a7_map_event;
 	cpu_pmu-&gt;set_event_filter = armv7pmu_set_event_filter;
<span class="p_add">+	cpu_pmu-&gt;pmu.attr_groups = armv7_pmuv2_attr_groups;</span>
 	return armv7_probe_num_events(cpu_pmu);
 }
 
<span class="p_chunk">@@ -1112,6 +1231,7 @@</span> <span class="p_context"> static int armv7_a12_pmu_init(struct arm_pmu *cpu_pmu)</span>
 	cpu_pmu-&gt;name		= &quot;armv7_cortex_a12&quot;;
 	cpu_pmu-&gt;map_event	= armv7_a12_map_event;
 	cpu_pmu-&gt;set_event_filter = armv7pmu_set_event_filter;
<span class="p_add">+	cpu_pmu-&gt;pmu.attr_groups = armv7_pmuv2_attr_groups;</span>
 	return armv7_probe_num_events(cpu_pmu);
 }
 
<span class="p_chunk">@@ -1119,6 +1239,7 @@</span> <span class="p_context"> static int armv7_a17_pmu_init(struct arm_pmu *cpu_pmu)</span>
 {
 	int ret = armv7_a12_pmu_init(cpu_pmu);
 	cpu_pmu-&gt;name = &quot;armv7_cortex_a17&quot;;
<span class="p_add">+	cpu_pmu-&gt;pmu.attr_groups = armv7_pmuv2_attr_groups;</span>
 	return ret;
 }
 
<span class="p_header">diff --git a/drivers/perf/arm_pmu.c b/drivers/perf/arm_pmu.c</span>
<span class="p_header">index 2365a32a595e..e933d2dd71c0 100644</span>
<span class="p_header">--- a/drivers/perf/arm_pmu.c</span>
<span class="p_header">+++ b/drivers/perf/arm_pmu.c</span>
<span class="p_chunk">@@ -548,6 +548,7 @@</span> <span class="p_context"> static void armpmu_init(struct arm_pmu *armpmu)</span>
 		.stop		= armpmu_stop,
 		.read		= armpmu_read,
 		.filter_match	= armpmu_filter_match,
<span class="p_add">+		.attr_groups	= armpmu-&gt;pmu.attr_groups,</span>
 	};
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



