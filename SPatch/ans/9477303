
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>jemalloc testsuite stalls in memset - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    jemalloc testsuite stalls in memset</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=36811">Minchan Kim</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 16, 2016, 6:39 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161216063940.GA1334@bbox&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9477303/mbox/"
   >mbox</a>
|
   <a href="/patch/9477303/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9477303/">/patch/9477303/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	4F3B1607EE for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Dec 2016 06:39:59 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 338D527F94
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Dec 2016 06:39:59 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 14CC82885C; Fri, 16 Dec 2016 06:39:59 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9AD3A27F94
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Dec 2016 06:39:58 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1757166AbcLPGjw (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 16 Dec 2016 01:39:52 -0500
Received: from LGEAMRELO12.lge.com ([156.147.23.52]:53153 &quot;EHLO
	lgeamrelo12.lge.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754045AbcLPGjn (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 16 Dec 2016 01:39:43 -0500
Received: from unknown (HELO lgeamrelo04.lge.com) (156.147.1.127)
	by 156.147.23.52 with ESMTP; 16 Dec 2016 15:39:41 +0900
X-Original-SENDERIP: 156.147.1.127
X-Original-MAILFROM: minchan@kernel.org
Received: from unknown (HELO LGEAEXHB02P.LGE.NET) (165.244.249.26)
	by 156.147.1.127 with ESMTP; 16 Dec 2016 15:39:41 +0900
X-Original-SENDERIP: 165.244.249.26
X-Original-MAILFROM: minchan@kernel.org
Received: from lgekrmhub07.lge.com (10.185.110.17) by LGEAEXHB02P.LGE.NET
	(165.244.249.22) with Microsoft SMTP Server id 8.3.264.0;
	Fri, 16 Dec 2016 15:39:41 +0900
Received: from lgemrelse6q.lge.com ([156.147.1.121])          by
	lgekrmhub07.lge.com (Lotus Domino Release 8.5.3FP6) with ESMTP id
	2016121615394027-913781 ;          Fri, 16 Dec 2016 15:39:40 +0900 
Received: from unknown (HELO bbox) (10.177.223.161) by 156.147.1.121 with
	ESMTP; 16 Dec 2016 15:39:40 +0900
X-Original-SENDERIP: 10.177.223.161
X-Original-MAILFROM: minchan@kernel.org
Date: Fri, 16 Dec 2016 15:39:40 +0900
From: Minchan Kim &lt;minchan@kernel.org&gt;
To: Andreas Schwab &lt;schwab@suse.de&gt;
CC: &lt;linux-arm-kernel@lists.infradead.org&gt;,
	&lt;linux-kernel@vger.kernel.org&gt;, &lt;mbrugger@suse.de&gt;,
	&lt;linux-mm@kvack.org&gt;, Jason Evans &lt;je@fb.com&gt;
Subject: Re: jemalloc testsuite stalls in memset
Message-ID: &lt;20161216063940.GA1334@bbox&gt;
References: &lt;mvmmvfy37g1.fsf@hawking.suse.de&gt; &lt;20161214235031.GA2912@bbox&gt;
	&lt;mvm4m2535pc.fsf@hawking.suse.de&gt;
MIME-Version: 1.0
In-Reply-To: &lt;mvm4m2535pc.fsf@hawking.suse.de&gt;
User-Agent: Mutt/1.5.24 (2015-08-30)
X-MIMETrack: Itemize by SMTP Server on LGEKRMHUB07/LGE/LG Group(Release
	8.5.3FP6|November 21, 2013) at 2016/12/16 15:39:40,
	Serialize by Router on LGEKRMHUB07/LGE/LG Group(Release
	8.5.3FP6|November 21, 2013) at 2016/12/16 15:39:40,
	Serialize complete at 2016/12/16 15:39:40
Content-Type: text/plain; charset=&quot;us-ascii&quot;
Content-Disposition: inline
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=36811">Minchan Kim</a> - Dec. 16, 2016, 6:39 a.m.</div>
<pre class="content">
Hello,

On Thu, Dec 15, 2016 at 10:24:47AM +0100, Andreas Schwab wrote:
<span class="quote">&gt; On Dez 15 2016, Minchan Kim &lt;minchan@kernel.org&gt; wrote:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; You mean program itself access the address(ie, 0xffffb7400000) is hang</span>
<span class="quote">&gt; &gt; while access the address from the debugger is OK?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Yes.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; Can you reproduce it easily?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; 100%</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; Did you test it in real machine or qemu on x86?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Both real and kvm.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; Could you show me how I can reproduce it?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Just run make check.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; I want to test it in x86 machine, first of all.</span>
<span class="quote">&gt; &gt; Unfortunately, I don&#39;t have any aarch64 platform now so maybe I have to</span>
<span class="quote">&gt; &gt; run it on qemu on x86 until I can set up aarch64 platform if it is reproducible</span>
<span class="quote">&gt; &gt; on real machine only.</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt;&gt; </span>
<span class="quote">&gt; &gt;&gt; The kernel has been configured with transparent hugepages.</span>
<span class="quote">&gt; &gt;&gt; </span>
<span class="quote">&gt; &gt;&gt; CONFIG_TRANSPARENT_HUGEPAGE=y</span>
<span class="quote">&gt; &gt;&gt; CONFIG_TRANSPARENT_HUGEPAGE_ALWAYS=y</span>
<span class="quote">&gt; &gt;&gt; # CONFIG_TRANSPARENT_HUGEPAGE_MADVISE is not set</span>
<span class="quote">&gt; &gt;&gt; CONFIG_TRANSPARENT_HUGE_PAGECACHE=y</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; What&#39;s the exact kernel version?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Anything &gt;= your commit.</span>

Thanks for the info. I cannot setup testing enviroment but when I read code,
it seems we need pmd_wrprotect for non-hardware dirty architecture.

Below helps?
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=240">Andreas Schwab</a> - Dec. 16, 2016, 2:16 p.m.</div>
<pre class="content">
On Dez 16 2016, Minchan Kim &lt;minchan@kernel.org&gt; wrote:
<span class="quote">
&gt; Below helps?</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; diff --git a/mm/huge_memory.c b/mm/huge_memory.c</span>
<span class="quote">&gt; index e10a4fe..dc37c9a 100644</span>
<span class="quote">&gt; --- a/mm/huge_memory.c</span>
<span class="quote">&gt; +++ b/mm/huge_memory.c</span>
<span class="quote">&gt; @@ -1611,6 +1611,7 @@ int madvise_free_huge_pmd(struct mmu_gather *tlb, struct vm_area_struct *vma,</span>
<span class="quote">&gt;  			tlb-&gt;fullmm);</span>
<span class="quote">&gt;  		orig_pmd = pmd_mkold(orig_pmd);</span>
<span class="quote">&gt;  		orig_pmd = pmd_mkclean(orig_pmd);</span>
<span class="quote">&gt; +		orig_pmd = pmd_wrprotect(orig_pmd);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  		set_pmd_at(mm, addr, pmd, orig_pmd);</span>
<span class="quote">&gt;  		tlb_remove_pmd_tlb_entry(tlb, pmd, addr);</span>

Thanks, this fixes the issue (tested with 4.9).

Andreas.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=36811">Minchan Kim</a> - Dec. 21, 2016, 11:54 p.m.</div>
<pre class="content">
Hello, Andreas

Sorry for long delay. I was on vacation.

On Fri, Dec 16, 2016 at 03:16:20PM +0100, Andreas Schwab wrote:
<span class="quote">&gt; On Dez 16 2016, Minchan Kim &lt;minchan@kernel.org&gt; wrote:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; Below helps?</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; diff --git a/mm/huge_memory.c b/mm/huge_memory.c</span>
<span class="quote">&gt; &gt; index e10a4fe..dc37c9a 100644</span>
<span class="quote">&gt; &gt; --- a/mm/huge_memory.c</span>
<span class="quote">&gt; &gt; +++ b/mm/huge_memory.c</span>
<span class="quote">&gt; &gt; @@ -1611,6 +1611,7 @@ int madvise_free_huge_pmd(struct mmu_gather *tlb, struct vm_area_struct *vma,</span>
<span class="quote">&gt; &gt;  			tlb-&gt;fullmm);</span>
<span class="quote">&gt; &gt;  		orig_pmd = pmd_mkold(orig_pmd);</span>
<span class="quote">&gt; &gt;  		orig_pmd = pmd_mkclean(orig_pmd);</span>
<span class="quote">&gt; &gt; +		orig_pmd = pmd_wrprotect(orig_pmd);</span>
<span class="quote">&gt; &gt;  </span>
<span class="quote">&gt; &gt;  		set_pmd_at(mm, addr, pmd, orig_pmd);</span>
<span class="quote">&gt; &gt;  		tlb_remove_pmd_tlb_entry(tlb, pmd, addr);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Thanks, this fixes the issue (tested with 4.9).</span>

It was a quick hack to know what exact problem is there and your confirming
helped a lot to understand the problem clear.

More right approach is to support pmd dirty handling in general page fault
handler rather than tweaking MADV_FREE. I just sent a new patch with Ccing
you.

Could you test it, please?
Thanks!
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/huge_memory.c b/mm/huge_memory.c</span>
<span class="p_header">index e10a4fe..dc37c9a 100644</span>
<span class="p_header">--- a/mm/huge_memory.c</span>
<span class="p_header">+++ b/mm/huge_memory.c</span>
<span class="p_chunk">@@ -1611,6 +1611,7 @@</span> <span class="p_context"> int madvise_free_huge_pmd(struct mmu_gather *tlb, struct vm_area_struct *vma,</span>
 			tlb-&gt;fullmm);
 		orig_pmd = pmd_mkold(orig_pmd);
 		orig_pmd = pmd_mkclean(orig_pmd);
<span class="p_add">+		orig_pmd = pmd_wrprotect(orig_pmd);</span>
 
 		set_pmd_at(mm, addr, pmd, orig_pmd);
 		tlb_remove_pmd_tlb_entry(tlb, pmd, addr);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



