
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>Linux 4.4.94 - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    Linux 4.4.94</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 22, 2017, 6:02 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171022180211.GB19458@kroah.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10021741/mbox/"
   >mbox</a>
|
   <a href="/patch/10021741/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10021741/">/patch/10021741/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	45D9060381 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 22 Oct 2017 18:02:20 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 31D9828703
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 22 Oct 2017 18:02:20 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 259BF2870B; Sun, 22 Oct 2017 18:02:20 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id A538C28703
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 22 Oct 2017 18:02:17 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932176AbdJVSCO (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 22 Oct 2017 14:02:14 -0400
Received: from mail.linuxfoundation.org ([140.211.169.12]:59642 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932100AbdJVSCH (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 22 Oct 2017 14:02:07 -0400
Received: from localhost (unknown [62.168.35.106])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id 7EE038D4;
	Sun, 22 Oct 2017 18:02:05 +0000 (UTC)
Date: Sun, 22 Oct 2017 20:02:11 +0200
From: Greg KH &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org, Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	torvalds@linux-foundation.org, stable@vger.kernel.org
Cc: lwn@lwn.net, Jiri Slaby &lt;jslaby@suse.cz&gt;
Subject: Re: Linux 4.4.94
Message-ID: &lt;20171022180211.GB19458@kroah.com&gt;
References: &lt;20171022180206.GA19458@kroah.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: &lt;20171022180206.GA19458@kroah.com&gt;
User-Agent: Mutt/1.9.1 (2017-09-22)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Oct. 22, 2017, 6:02 p.m.</div>
<pre class="content">

</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/Makefile b/Makefile</span>
<span class="p_header">index 77a17fb24b6d..ff9d6bbf2210 100644</span>
<span class="p_header">--- a/Makefile</span>
<span class="p_header">+++ b/Makefile</span>
<span class="p_chunk">@@ -1,6 +1,6 @@</span> <span class="p_context"></span>
 VERSION = 4
 PATCHLEVEL = 4
<span class="p_del">-SUBLEVEL = 93</span>
<span class="p_add">+SUBLEVEL = 94</span>
 EXTRAVERSION =
 NAME = Blurry Fish Butt
 
<span class="p_header">diff --git a/arch/mips/include/asm/irq.h b/arch/mips/include/asm/irq.h</span>
<span class="p_header">index 77edb22f855d..5433ccc9d706 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/irq.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/irq.h</span>
<span class="p_chunk">@@ -18,7 +18,7 @@</span> <span class="p_context"></span>
 #include &lt;irq.h&gt;
 
 #define IRQ_STACK_SIZE			THREAD_SIZE
<span class="p_del">-#define IRQ_STACK_START			(IRQ_STACK_SIZE - sizeof(unsigned long))</span>
<span class="p_add">+#define IRQ_STACK_START			(IRQ_STACK_SIZE - 16)</span>
 
 extern void *irq_stack[NR_CPUS];
 
<span class="p_header">diff --git a/arch/sparc/include/asm/setup.h b/arch/sparc/include/asm/setup.h</span>
<span class="p_header">index be0cc1beed41..3fae200dd251 100644</span>
<span class="p_header">--- a/arch/sparc/include/asm/setup.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/setup.h</span>
<span class="p_chunk">@@ -59,8 +59,11 @@</span> <span class="p_context"> extern atomic_t dcpage_flushes;</span>
 extern atomic_t dcpage_flushes_xcall;
 
 extern int sysctl_tsb_ratio;
<span class="p_del">-#endif</span>
 
<span class="p_add">+#ifdef CONFIG_SERIAL_SUNHV</span>
<span class="p_add">+void sunhv_migrate_hvcons_irq(int cpu);</span>
<span class="p_add">+#endif</span>
<span class="p_add">+#endif</span>
 void sun_do_break(void);
 extern int stop_a_enabled;
 extern int scons_pwroff;
<span class="p_header">diff --git a/arch/sparc/kernel/smp_64.c b/arch/sparc/kernel/smp_64.c</span>
<span class="p_header">index 4511caa3b7e9..46866b2097e8 100644</span>
<span class="p_header">--- a/arch/sparc/kernel/smp_64.c</span>
<span class="p_header">+++ b/arch/sparc/kernel/smp_64.c</span>
<span class="p_chunk">@@ -1443,8 +1443,12 @@</span> <span class="p_context"> void smp_send_stop(void)</span>
 	int cpu;
 
 	if (tlb_type == hypervisor) {
<span class="p_add">+		int this_cpu = smp_processor_id();</span>
<span class="p_add">+#ifdef CONFIG_SERIAL_SUNHV</span>
<span class="p_add">+		sunhv_migrate_hvcons_irq(this_cpu);</span>
<span class="p_add">+#endif</span>
 		for_each_online_cpu(cpu) {
<span class="p_del">-			if (cpu == smp_processor_id())</span>
<span class="p_add">+			if (cpu == this_cpu)</span>
 				continue;
 #ifdef CONFIG_SUN_LDOMS
 			if (ldom_domaining_enabled) {
<span class="p_header">diff --git a/block/bsg-lib.c b/block/bsg-lib.c</span>
<span class="p_header">index 341b8d858e67..650f427d915b 100644</span>
<span class="p_header">--- a/block/bsg-lib.c</span>
<span class="p_header">+++ b/block/bsg-lib.c</span>
<span class="p_chunk">@@ -147,6 +147,7 @@</span> <span class="p_context"> static int bsg_create_job(struct device *dev, struct request *req)</span>
 failjob_rls_rqst_payload:
 	kfree(job-&gt;request_payload.sg_list);
 failjob_rls_job:
<span class="p_add">+	kfree(job);</span>
 	return -ENOMEM;
 }
 
<span class="p_header">diff --git a/crypto/Kconfig b/crypto/Kconfig</span>
<span class="p_header">index 7240821137fd..617bf4a7da56 100644</span>
<span class="p_header">--- a/crypto/Kconfig</span>
<span class="p_header">+++ b/crypto/Kconfig</span>
<span class="p_chunk">@@ -343,6 +343,7 @@</span> <span class="p_context"> config CRYPTO_XTS</span>
 	select CRYPTO_BLKCIPHER
 	select CRYPTO_MANAGER
 	select CRYPTO_GF128MUL
<span class="p_add">+	select CRYPTO_ECB</span>
 	help
 	  XTS: IEEE1619/D16 narrow block cipher use with aes-xts-plain,
 	  key size 256, 384 or 512 bits. This implementation currently
<span class="p_header">diff --git a/drivers/cpufreq/Kconfig.arm b/drivers/cpufreq/Kconfig.arm</span>
<span class="p_header">index b1f8a73e5a94..eed1e073d96d 100644</span>
<span class="p_header">--- a/drivers/cpufreq/Kconfig.arm</span>
<span class="p_header">+++ b/drivers/cpufreq/Kconfig.arm</span>
<span class="p_chunk">@@ -241,7 +241,7 @@</span> <span class="p_context"> config ARM_PXA2xx_CPUFREQ</span>
 
 config ACPI_CPPC_CPUFREQ
 	tristate &quot;CPUFreq driver based on the ACPI CPPC spec&quot;
<span class="p_del">-	depends on ACPI</span>
<span class="p_add">+	depends on ACPI_PROCESSOR</span>
 	select ACPI_CPPC_LIB
 	default n
 	help
<span class="p_header">diff --git a/drivers/gpu/drm/drm_dp_mst_topology.c b/drivers/gpu/drm/drm_dp_mst_topology.c</span>
<span class="p_header">index 58bf94b69186..273e05a3c933 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/drm_dp_mst_topology.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/drm_dp_mst_topology.c</span>
<span class="p_chunk">@@ -1802,6 +1802,7 @@</span> <span class="p_context"> int drm_dp_update_payload_part1(struct drm_dp_mst_topology_mgr *mgr)</span>
 				return -EINVAL;
 			}
 			req_payload.num_slots = mgr-&gt;proposed_vcpis[i]-&gt;num_slots;
<span class="p_add">+			req_payload.vcpi = mgr-&gt;proposed_vcpis[i]-&gt;vcpi;</span>
 		} else {
 			port = NULL;
 			req_payload.num_slots = 0;
<span class="p_chunk">@@ -1817,6 +1818,7 @@</span> <span class="p_context"> int drm_dp_update_payload_part1(struct drm_dp_mst_topology_mgr *mgr)</span>
 			if (req_payload.num_slots) {
 				drm_dp_create_payload_step1(mgr, mgr-&gt;proposed_vcpis[i]-&gt;vcpi, &amp;req_payload);
 				mgr-&gt;payloads[i].num_slots = req_payload.num_slots;
<span class="p_add">+				mgr-&gt;payloads[i].vcpi = req_payload.vcpi;</span>
 			} else if (mgr-&gt;payloads[i].num_slots) {
 				mgr-&gt;payloads[i].num_slots = 0;
 				drm_dp_destroy_payload_step1(mgr, port, mgr-&gt;payloads[i].vcpi, &amp;mgr-&gt;payloads[i]);
<span class="p_header">diff --git a/drivers/i2c/busses/i2c-at91.c b/drivers/i2c/busses/i2c-at91.c</span>
<span class="p_header">index 10835d1f559b..dee0fc421054 100644</span>
<span class="p_header">--- a/drivers/i2c/busses/i2c-at91.c</span>
<span class="p_header">+++ b/drivers/i2c/busses/i2c-at91.c</span>
<span class="p_chunk">@@ -1131,6 +1131,7 @@</span> <span class="p_context"> static int at91_twi_suspend_noirq(struct device *dev)</span>
 
 static int at91_twi_resume_noirq(struct device *dev)
 {
<span class="p_add">+	struct at91_twi_dev *twi_dev = dev_get_drvdata(dev);</span>
 	int ret;
 
 	if (!pm_runtime_status_suspended(dev)) {
<span class="p_chunk">@@ -1142,6 +1143,8 @@</span> <span class="p_context"> static int at91_twi_resume_noirq(struct device *dev)</span>
 	pm_runtime_mark_last_busy(dev);
 	pm_request_autosuspend(dev);
 
<span class="p_add">+	at91_init_twi_bus(twi_dev);</span>
<span class="p_add">+</span>
 	return 0;
 }
 
<span class="p_header">diff --git a/drivers/iio/adc/xilinx-xadc-core.c b/drivers/iio/adc/xilinx-xadc-core.c</span>
<span class="p_header">index 02e636a1c49a..475c5a74f2d1 100644</span>
<span class="p_header">--- a/drivers/iio/adc/xilinx-xadc-core.c</span>
<span class="p_header">+++ b/drivers/iio/adc/xilinx-xadc-core.c</span>
<span class="p_chunk">@@ -1208,7 +1208,7 @@</span> <span class="p_context"> static int xadc_probe(struct platform_device *pdev)</span>
 
 	ret = xadc-&gt;ops-&gt;setup(pdev, indio_dev, irq);
 	if (ret)
<span class="p_del">-		goto err_free_samplerate_trigger;</span>
<span class="p_add">+		goto err_clk_disable_unprepare;</span>
 
 	ret = request_irq(irq, xadc-&gt;ops-&gt;interrupt_handler, 0,
 			dev_name(&amp;pdev-&gt;dev), indio_dev);
<span class="p_chunk">@@ -1268,6 +1268,8 @@</span> <span class="p_context"> static int xadc_probe(struct platform_device *pdev)</span>
 
 err_free_irq:
 	free_irq(irq, indio_dev);
<span class="p_add">+err_clk_disable_unprepare:</span>
<span class="p_add">+	clk_disable_unprepare(xadc-&gt;clk);</span>
 err_free_samplerate_trigger:
 	if (xadc-&gt;ops-&gt;flags &amp; XADC_FLAGS_BUFFERED)
 		iio_trigger_free(xadc-&gt;samplerate_trigger);
<span class="p_chunk">@@ -1277,8 +1279,6 @@</span> <span class="p_context"> err_free_convst_trigger:</span>
 err_triggered_buffer_cleanup:
 	if (xadc-&gt;ops-&gt;flags &amp; XADC_FLAGS_BUFFERED)
 		iio_triggered_buffer_cleanup(indio_dev);
<span class="p_del">-err_clk_disable_unprepare:</span>
<span class="p_del">-	clk_disable_unprepare(xadc-&gt;clk);</span>
 err_device_free:
 	kfree(indio_dev-&gt;channels);
 
<span class="p_header">diff --git a/drivers/irqchip/irq-crossbar.c b/drivers/irqchip/irq-crossbar.c</span>
<span class="p_header">index 75573fa431ba..63faee04a008 100644</span>
<span class="p_header">--- a/drivers/irqchip/irq-crossbar.c</span>
<span class="p_header">+++ b/drivers/irqchip/irq-crossbar.c</span>
<span class="p_chunk">@@ -198,7 +198,8 @@</span> <span class="p_context"> static const struct irq_domain_ops crossbar_domain_ops = {</span>
 
 static int __init crossbar_of_init(struct device_node *node)
 {
<span class="p_del">-	int i, size, max = 0, reserved = 0, entry;</span>
<span class="p_add">+	int i, size, reserved = 0;</span>
<span class="p_add">+	u32 max = 0, entry;</span>
 	const __be32 *irqsr;
 	int ret = -ENOMEM;
 
<span class="p_header">diff --git a/drivers/isdn/i4l/isdn_ppp.c b/drivers/isdn/i4l/isdn_ppp.c</span>
<span class="p_header">index bf3fbd00a091..64b586458d3d 100644</span>
<span class="p_header">--- a/drivers/isdn/i4l/isdn_ppp.c</span>
<span class="p_header">+++ b/drivers/isdn/i4l/isdn_ppp.c</span>
<span class="p_chunk">@@ -828,7 +828,6 @@</span> <span class="p_context"> isdn_ppp_write(int min, struct file *file, const char __user *buf, int count)</span>
 	isdn_net_local *lp;
 	struct ippp_struct *is;
 	int proto;
<span class="p_del">-	unsigned char protobuf[4];</span>
 
 	is = file-&gt;private_data;
 
<span class="p_chunk">@@ -842,24 +841,28 @@</span> <span class="p_context"> isdn_ppp_write(int min, struct file *file, const char __user *buf, int count)</span>
 	if (!lp)
 		printk(KERN_DEBUG &quot;isdn_ppp_write: lp == NULL\n&quot;);
 	else {
<span class="p_del">-		/*</span>
<span class="p_del">-		 * Don&#39;t reset huptimer for</span>
<span class="p_del">-		 * LCP packets. (Echo requests).</span>
<span class="p_del">-		 */</span>
<span class="p_del">-		if (copy_from_user(protobuf, buf, 4))</span>
<span class="p_del">-			return -EFAULT;</span>
<span class="p_del">-		proto = PPP_PROTOCOL(protobuf);</span>
<span class="p_del">-		if (proto != PPP_LCP)</span>
<span class="p_del">-			lp-&gt;huptimer = 0;</span>
<span class="p_add">+		if (lp-&gt;isdn_device &lt; 0 || lp-&gt;isdn_channel &lt; 0) {</span>
<span class="p_add">+			unsigned char protobuf[4];</span>
<span class="p_add">+			/*</span>
<span class="p_add">+			 * Don&#39;t reset huptimer for</span>
<span class="p_add">+			 * LCP packets. (Echo requests).</span>
<span class="p_add">+			 */</span>
<span class="p_add">+			if (copy_from_user(protobuf, buf, 4))</span>
<span class="p_add">+				return -EFAULT;</span>
<span class="p_add">+</span>
<span class="p_add">+			proto = PPP_PROTOCOL(protobuf);</span>
<span class="p_add">+			if (proto != PPP_LCP)</span>
<span class="p_add">+				lp-&gt;huptimer = 0;</span>
 
<span class="p_del">-		if (lp-&gt;isdn_device &lt; 0 || lp-&gt;isdn_channel &lt; 0)</span>
 			return 0;
<span class="p_add">+		}</span>
 
 		if ((dev-&gt;drv[lp-&gt;isdn_device]-&gt;flags &amp; DRV_FLAG_RUNNING) &amp;&amp;
 		    lp-&gt;dialstate == 0 &amp;&amp;
 		    (lp-&gt;flags &amp; ISDN_NET_CONNECTED)) {
 			unsigned short hl;
 			struct sk_buff *skb;
<span class="p_add">+			unsigned char *cpy_buf;</span>
 			/*
 			 * we need to reserve enough space in front of
 			 * sk_buff. old call to dev_alloc_skb only reserved
<span class="p_chunk">@@ -872,11 +875,21 @@</span> <span class="p_context"> isdn_ppp_write(int min, struct file *file, const char __user *buf, int count)</span>
 				return count;
 			}
 			skb_reserve(skb, hl);
<span class="p_del">-			if (copy_from_user(skb_put(skb, count), buf, count))</span>
<span class="p_add">+			cpy_buf = skb_put(skb, count);</span>
<span class="p_add">+			if (copy_from_user(cpy_buf, buf, count))</span>
 			{
 				kfree_skb(skb);
 				return -EFAULT;
 			}
<span class="p_add">+</span>
<span class="p_add">+			/*</span>
<span class="p_add">+			 * Don&#39;t reset huptimer for</span>
<span class="p_add">+			 * LCP packets. (Echo requests).</span>
<span class="p_add">+			 */</span>
<span class="p_add">+			proto = PPP_PROTOCOL(cpy_buf);</span>
<span class="p_add">+			if (proto != PPP_LCP)</span>
<span class="p_add">+				lp-&gt;huptimer = 0;</span>
<span class="p_add">+</span>
 			if (is-&gt;debug &amp; 0x40) {
 				printk(KERN_DEBUG &quot;ppp xmit: len %d\n&quot;, (int) skb-&gt;len);
 				isdn_ppp_frame_log(&quot;xmit&quot;, skb-&gt;data, skb-&gt;len, 32, is-&gt;unit, lp-&gt;ppp_slot);
<span class="p_header">diff --git a/drivers/md/linear.c b/drivers/md/linear.c</span>
<span class="p_header">index 6ba3227e29b2..7ffb20ec1a46 100644</span>
<span class="p_header">--- a/drivers/md/linear.c</span>
<span class="p_header">+++ b/drivers/md/linear.c</span>
<span class="p_chunk">@@ -223,7 +223,8 @@</span> <span class="p_context"> static int linear_add(struct mddev *mddev, struct md_rdev *rdev)</span>
 	 * oldconf until no one uses it anymore.
 	 */
 	mddev_suspend(mddev);
<span class="p_del">-	oldconf = rcu_dereference(mddev-&gt;private);</span>
<span class="p_add">+	oldconf = rcu_dereference_protected(mddev-&gt;private,</span>
<span class="p_add">+			lockdep_is_held(&amp;mddev-&gt;reconfig_mutex));</span>
 	mddev-&gt;raid_disks++;
 	WARN_ONCE(mddev-&gt;raid_disks != newconf-&gt;raid_disks,
 		&quot;copied raid_disks doesn&#39;t match mddev-&gt;raid_disks&quot;);
<span class="p_header">diff --git a/drivers/net/ethernet/ibm/emac/mal.c b/drivers/net/ethernet/ibm/emac/mal.c</span>
<span class="p_header">index fdb5cdb3cd15..81abe46c9e0d 100644</span>
<span class="p_header">--- a/drivers/net/ethernet/ibm/emac/mal.c</span>
<span class="p_header">+++ b/drivers/net/ethernet/ibm/emac/mal.c</span>
<span class="p_chunk">@@ -402,7 +402,7 @@</span> <span class="p_context"> static int mal_poll(struct napi_struct *napi, int budget)</span>
 	unsigned long flags;
 
 	MAL_DBG2(mal, &quot;poll(%d)&quot; NL, budget);
<span class="p_del">- again:</span>
<span class="p_add">+</span>
 	/* Process TX skbs */
 	list_for_each(l, &amp;mal-&gt;poll_list) {
 		struct mal_commac *mc =
<span class="p_chunk">@@ -451,7 +451,6 @@</span> <span class="p_context"> static int mal_poll(struct napi_struct *napi, int budget)</span>
 			spin_lock_irqsave(&amp;mal-&gt;lock, flags);
 			mal_disable_eob_irq(mal);
 			spin_unlock_irqrestore(&amp;mal-&gt;lock, flags);
<span class="p_del">-			goto again;</span>
 		}
 		mc-&gt;ops-&gt;poll_tx(mc-&gt;dev);
 	}
<span class="p_header">diff --git a/drivers/net/ethernet/marvell/mvpp2.c b/drivers/net/ethernet/marvell/mvpp2.c</span>
<span class="p_header">index 0e67145bc418..4f34e1b79705 100644</span>
<span class="p_header">--- a/drivers/net/ethernet/marvell/mvpp2.c</span>
<span class="p_header">+++ b/drivers/net/ethernet/marvell/mvpp2.c</span>
<span class="p_chunk">@@ -4415,13 +4415,12 @@</span> <span class="p_context"> static void mvpp2_txq_bufs_free(struct mvpp2_port *port,</span>
 		struct mvpp2_txq_pcpu_buf *tx_buf =
 			txq_pcpu-&gt;buffs + txq_pcpu-&gt;txq_get_index;
 
<span class="p_del">-		mvpp2_txq_inc_get(txq_pcpu);</span>
<span class="p_del">-</span>
 		dma_unmap_single(port-&gt;dev-&gt;dev.parent, tx_buf-&gt;phys,
 				 tx_buf-&gt;size, DMA_TO_DEVICE);
<span class="p_del">-		if (!tx_buf-&gt;skb)</span>
<span class="p_del">-			continue;</span>
<span class="p_del">-		dev_kfree_skb_any(tx_buf-&gt;skb);</span>
<span class="p_add">+		if (tx_buf-&gt;skb)</span>
<span class="p_add">+			dev_kfree_skb_any(tx_buf-&gt;skb);</span>
<span class="p_add">+</span>
<span class="p_add">+		mvpp2_txq_inc_get(txq_pcpu);</span>
 	}
 }
 
<span class="p_header">diff --git a/drivers/net/ethernet/mellanox/mlx4/en_clock.c b/drivers/net/ethernet/mellanox/mlx4/en_clock.c</span>
<span class="p_header">index 1494997c4f7e..4dccf7287f0f 100644</span>
<span class="p_header">--- a/drivers/net/ethernet/mellanox/mlx4/en_clock.c</span>
<span class="p_header">+++ b/drivers/net/ethernet/mellanox/mlx4/en_clock.c</span>
<span class="p_chunk">@@ -88,10 +88,17 @@</span> <span class="p_context"> void mlx4_en_remove_timestamp(struct mlx4_en_dev *mdev)</span>
 	}
 }
 
<span class="p_add">+#define MLX4_EN_WRAP_AROUND_SEC	10UL</span>
<span class="p_add">+/* By scheduling the overflow check every 5 seconds, we have a reasonably</span>
<span class="p_add">+ * good chance we wont miss a wrap around.</span>
<span class="p_add">+ * TOTO: Use a timer instead of a work queue to increase the guarantee.</span>
<span class="p_add">+ */</span>
<span class="p_add">+#define MLX4_EN_OVERFLOW_PERIOD (MLX4_EN_WRAP_AROUND_SEC * HZ / 2)</span>
<span class="p_add">+</span>
 void mlx4_en_ptp_overflow_check(struct mlx4_en_dev *mdev)
 {
 	bool timeout = time_is_before_jiffies(mdev-&gt;last_overflow_check +
<span class="p_del">-					      mdev-&gt;overflow_period);</span>
<span class="p_add">+					      MLX4_EN_OVERFLOW_PERIOD);</span>
 	unsigned long flags;
 
 	if (timeout) {
<span class="p_chunk">@@ -236,7 +243,6 @@</span> <span class="p_context"> static const struct ptp_clock_info mlx4_en_ptp_clock_info = {</span>
 	.enable		= mlx4_en_phc_enable,
 };
 
<span class="p_del">-#define MLX4_EN_WRAP_AROUND_SEC	10ULL</span>
 
 /* This function calculates the max shift that enables the user range
  * of MLX4_EN_WRAP_AROUND_SEC values in the cycles register.
<span class="p_chunk">@@ -258,7 +264,6 @@</span> <span class="p_context"> void mlx4_en_init_timestamp(struct mlx4_en_dev *mdev)</span>
 {
 	struct mlx4_dev *dev = mdev-&gt;dev;
 	unsigned long flags;
<span class="p_del">-	u64 ns, zero = 0;</span>
 
 	/* mlx4_en_init_timestamp is called for each netdev.
 	 * mdev-&gt;ptp_clock is common for all ports, skip initialization if
<span class="p_chunk">@@ -282,13 +287,6 @@</span> <span class="p_context"> void mlx4_en_init_timestamp(struct mlx4_en_dev *mdev)</span>
 			 ktime_to_ns(ktime_get_real()));
 	write_unlock_irqrestore(&amp;mdev-&gt;clock_lock, flags);
 
<span class="p_del">-	/* Calculate period in seconds to call the overflow watchdog - to make</span>
<span class="p_del">-	 * sure counter is checked at least once every wrap around.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	ns = cyclecounter_cyc2ns(&amp;mdev-&gt;cycles, mdev-&gt;cycles.mask, zero, &amp;zero);</span>
<span class="p_del">-	do_div(ns, NSEC_PER_SEC / 2 / HZ);</span>
<span class="p_del">-	mdev-&gt;overflow_period = ns;</span>
<span class="p_del">-</span>
 	/* Configure the PHC */
 	mdev-&gt;ptp_clock_info = mlx4_en_ptp_clock_info;
 	snprintf(mdev-&gt;ptp_clock_info.name, 16, &quot;mlx4 ptp&quot;);
<span class="p_header">diff --git a/drivers/net/ethernet/mellanox/mlx4/main.c b/drivers/net/ethernet/mellanox/mlx4/main.c</span>
<span class="p_header">index 31c491e02e69..99361352ed0d 100644</span>
<span class="p_header">--- a/drivers/net/ethernet/mellanox/mlx4/main.c</span>
<span class="p_header">+++ b/drivers/net/ethernet/mellanox/mlx4/main.c</span>
<span class="p_chunk">@@ -791,8 +791,6 @@</span> <span class="p_context"> static int mlx4_slave_cap(struct mlx4_dev *dev)</span>
 		return -ENOSYS;
 	}
 
<span class="p_del">-	mlx4_log_num_mgm_entry_size = hca_param.log_mc_entry_sz;</span>
<span class="p_del">-</span>
 	dev-&gt;caps.hca_core_clock = hca_param.hca_core_clock;
 
 	memset(&amp;dev_cap, 0, sizeof(dev_cap));
<span class="p_header">diff --git a/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h b/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h</span>
<span class="p_header">index c41f15102ae0..10aa6544cf4d 100644</span>
<span class="p_header">--- a/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h</span>
<span class="p_header">+++ b/drivers/net/ethernet/mellanox/mlx4/mlx4_en.h</span>
<span class="p_chunk">@@ -409,7 +409,6 @@</span> <span class="p_context"> struct mlx4_en_dev {</span>
 	struct cyclecounter	cycles;
 	struct timecounter	clock;
 	unsigned long		last_overflow_check;
<span class="p_del">-	unsigned long		overflow_period;</span>
 	struct ptp_clock	*ptp_clock;
 	struct ptp_clock_info	ptp_clock_info;
 	struct notifier_block	nb;
<span class="p_header">diff --git a/drivers/net/tun.c b/drivers/net/tun.c</span>
<span class="p_header">index c31d8e74f131..cd191f82d816 100644</span>
<span class="p_header">--- a/drivers/net/tun.c</span>
<span class="p_header">+++ b/drivers/net/tun.c</span>
<span class="p_chunk">@@ -1195,11 +1195,13 @@</span> <span class="p_context"> static ssize_t tun_get_user(struct tun_struct *tun, struct tun_file *tfile,</span>
 	switch (tun-&gt;flags &amp; TUN_TYPE_MASK) {
 	case IFF_TUN:
 		if (tun-&gt;flags &amp; IFF_NO_PI) {
<span class="p_del">-			switch (skb-&gt;data[0] &amp; 0xf0) {</span>
<span class="p_del">-			case 0x40:</span>
<span class="p_add">+			u8 ip_version = skb-&gt;len ? (skb-&gt;data[0] &gt;&gt; 4) : 0;</span>
<span class="p_add">+</span>
<span class="p_add">+			switch (ip_version) {</span>
<span class="p_add">+			case 4:</span>
 				pi.proto = htons(ETH_P_IP);
 				break;
<span class="p_del">-			case 0x60:</span>
<span class="p_add">+			case 6:</span>
 				pi.proto = htons(ETH_P_IPV6);
 				break;
 			default:
<span class="p_header">diff --git a/drivers/net/wireless/mac80211_hwsim.c b/drivers/net/wireless/mac80211_hwsim.c</span>
<span class="p_header">index 019d7165a045..2a996a68fc2b 100644</span>
<span class="p_header">--- a/drivers/net/wireless/mac80211_hwsim.c</span>
<span class="p_header">+++ b/drivers/net/wireless/mac80211_hwsim.c</span>
<span class="p_chunk">@@ -2884,6 +2884,7 @@</span> <span class="p_context"> static int hwsim_register_received_nl(struct sk_buff *skb_2,</span>
 static int hwsim_new_radio_nl(struct sk_buff *msg, struct genl_info *info)
 {
 	struct hwsim_new_radio_params param = { 0 };
<span class="p_add">+	const char *hwname = NULL;</span>
 
 	param.reg_strict = info-&gt;attrs[HWSIM_ATTR_REG_STRICT_REG];
 	param.p2p_device = info-&gt;attrs[HWSIM_ATTR_SUPPORT_P2P_DEVICE];
<span class="p_chunk">@@ -2897,8 +2898,14 @@</span> <span class="p_context"> static int hwsim_new_radio_nl(struct sk_buff *msg, struct genl_info *info)</span>
 	if (info-&gt;attrs[HWSIM_ATTR_NO_VIF])
 		param.no_vif = true;
 
<span class="p_del">-	if (info-&gt;attrs[HWSIM_ATTR_RADIO_NAME])</span>
<span class="p_del">-		param.hwname = nla_data(info-&gt;attrs[HWSIM_ATTR_RADIO_NAME]);</span>
<span class="p_add">+	if (info-&gt;attrs[HWSIM_ATTR_RADIO_NAME]) {</span>
<span class="p_add">+		hwname = kasprintf(GFP_KERNEL, &quot;%.*s&quot;,</span>
<span class="p_add">+				   nla_len(info-&gt;attrs[HWSIM_ATTR_RADIO_NAME]),</span>
<span class="p_add">+				   (char *)nla_data(info-&gt;attrs[HWSIM_ATTR_RADIO_NAME]));</span>
<span class="p_add">+		if (!hwname)</span>
<span class="p_add">+			return -ENOMEM;</span>
<span class="p_add">+		param.hwname = hwname;</span>
<span class="p_add">+	}</span>
 
 	if (info-&gt;attrs[HWSIM_ATTR_USE_CHANCTX])
 		param.use_chanctx = true;
<span class="p_chunk">@@ -2926,11 +2933,15 @@</span> <span class="p_context"> static int hwsim_del_radio_nl(struct sk_buff *msg, struct genl_info *info)</span>
 	s64 idx = -1;
 	const char *hwname = NULL;
 
<span class="p_del">-	if (info-&gt;attrs[HWSIM_ATTR_RADIO_ID])</span>
<span class="p_add">+	if (info-&gt;attrs[HWSIM_ATTR_RADIO_ID]) {</span>
 		idx = nla_get_u32(info-&gt;attrs[HWSIM_ATTR_RADIO_ID]);
<span class="p_del">-	else if (info-&gt;attrs[HWSIM_ATTR_RADIO_NAME])</span>
<span class="p_del">-		hwname = (void *)nla_data(info-&gt;attrs[HWSIM_ATTR_RADIO_NAME]);</span>
<span class="p_del">-	else</span>
<span class="p_add">+	} else if (info-&gt;attrs[HWSIM_ATTR_RADIO_NAME]) {</span>
<span class="p_add">+		hwname = kasprintf(GFP_KERNEL, &quot;%.*s&quot;,</span>
<span class="p_add">+				   nla_len(info-&gt;attrs[HWSIM_ATTR_RADIO_NAME]),</span>
<span class="p_add">+				   (char *)nla_data(info-&gt;attrs[HWSIM_ATTR_RADIO_NAME]));</span>
<span class="p_add">+		if (!hwname)</span>
<span class="p_add">+			return -ENOMEM;</span>
<span class="p_add">+	} else</span>
 		return -EINVAL;
 
 	spin_lock_bh(&amp;hwsim_radio_lock);
<span class="p_chunk">@@ -2939,7 +2950,8 @@</span> <span class="p_context"> static int hwsim_del_radio_nl(struct sk_buff *msg, struct genl_info *info)</span>
 			if (data-&gt;idx != idx)
 				continue;
 		} else {
<span class="p_del">-			if (strcmp(hwname, wiphy_name(data-&gt;hw-&gt;wiphy)))</span>
<span class="p_add">+			if (!hwname ||</span>
<span class="p_add">+			    strcmp(hwname, wiphy_name(data-&gt;hw-&gt;wiphy)))</span>
 				continue;
 		}
 
<span class="p_chunk">@@ -2947,10 +2959,12 @@</span> <span class="p_context"> static int hwsim_del_radio_nl(struct sk_buff *msg, struct genl_info *info)</span>
 		spin_unlock_bh(&amp;hwsim_radio_lock);
 		mac80211_hwsim_del_radio(data, wiphy_name(data-&gt;hw-&gt;wiphy),
 					 info);
<span class="p_add">+		kfree(hwname);</span>
 		return 0;
 	}
 	spin_unlock_bh(&amp;hwsim_radio_lock);
 
<span class="p_add">+	kfree(hwname);</span>
 	return -ENODEV;
 }
 
<span class="p_header">diff --git a/drivers/scsi/device_handler/scsi_dh_emc.c b/drivers/scsi/device_handler/scsi_dh_emc.c</span>
<span class="p_header">index e6fb97cb12f4..7c28dc1cb0dd 100644</span>
<span class="p_header">--- a/drivers/scsi/device_handler/scsi_dh_emc.c</span>
<span class="p_header">+++ b/drivers/scsi/device_handler/scsi_dh_emc.c</span>
<span class="p_chunk">@@ -456,7 +456,7 @@</span> <span class="p_context"> static int clariion_prep_fn(struct scsi_device *sdev, struct request *req)</span>
 static int clariion_std_inquiry(struct scsi_device *sdev,
 				struct clariion_dh_data *csdev)
 {
<span class="p_del">-	int err;</span>
<span class="p_add">+	int err = SCSI_DH_OK;</span>
 	char *sp_model;
 
 	err = send_inquiry_cmd(sdev, 0, csdev);
<span class="p_header">diff --git a/drivers/target/iscsi/iscsi_target_erl0.c b/drivers/target/iscsi/iscsi_target_erl0.c</span>
<span class="p_header">index 6c88fb021444..4eeb82cf79e4 100644</span>
<span class="p_header">--- a/drivers/target/iscsi/iscsi_target_erl0.c</span>
<span class="p_header">+++ b/drivers/target/iscsi/iscsi_target_erl0.c</span>
<span class="p_chunk">@@ -44,10 +44,8 @@</span> <span class="p_context"> void iscsit_set_dataout_sequence_values(</span>
 	 */
 	if (cmd-&gt;unsolicited_data) {
 		cmd-&gt;seq_start_offset = cmd-&gt;write_data_done;
<span class="p_del">-		cmd-&gt;seq_end_offset = (cmd-&gt;write_data_done +</span>
<span class="p_del">-			((cmd-&gt;se_cmd.data_length &gt;</span>
<span class="p_del">-			  conn-&gt;sess-&gt;sess_ops-&gt;FirstBurstLength) ?</span>
<span class="p_del">-			 conn-&gt;sess-&gt;sess_ops-&gt;FirstBurstLength : cmd-&gt;se_cmd.data_length));</span>
<span class="p_add">+		cmd-&gt;seq_end_offset = min(cmd-&gt;se_cmd.data_length,</span>
<span class="p_add">+					conn-&gt;sess-&gt;sess_ops-&gt;FirstBurstLength);</span>
 		return;
 	}
 
<span class="p_header">diff --git a/drivers/tty/goldfish.c b/drivers/tty/goldfish.c</span>
<span class="p_header">index e04b57f79df8..0f82c0b146f6 100644</span>
<span class="p_header">--- a/drivers/tty/goldfish.c</span>
<span class="p_header">+++ b/drivers/tty/goldfish.c</span>
<span class="p_chunk">@@ -293,7 +293,7 @@</span> <span class="p_context"> static int goldfish_tty_probe(struct platform_device *pdev)</span>
 	return 0;
 
 err_tty_register_device_failed:
<span class="p_del">-	free_irq(irq, qtty);</span>
<span class="p_add">+	free_irq(irq, pdev);</span>
 err_request_irq_failed:
 	goldfish_tty_current_line_count--;
 	if (goldfish_tty_current_line_count == 0)
<span class="p_header">diff --git a/drivers/tty/serial/sunhv.c b/drivers/tty/serial/sunhv.c</span>
<span class="p_header">index 4e603d060e80..59828d819145 100644</span>
<span class="p_header">--- a/drivers/tty/serial/sunhv.c</span>
<span class="p_header">+++ b/drivers/tty/serial/sunhv.c</span>
<span class="p_chunk">@@ -398,6 +398,12 @@</span> <span class="p_context"> static struct uart_driver sunhv_reg = {</span>
 
 static struct uart_port *sunhv_port;
 
<span class="p_add">+void sunhv_migrate_hvcons_irq(int cpu)</span>
<span class="p_add">+{</span>
<span class="p_add">+	/* Migrate hvcons irq to param cpu */</span>
<span class="p_add">+	irq_force_affinity(sunhv_port-&gt;irq, cpumask_of(cpu));</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 /* Copy &#39;s&#39; into the con_write_page, decoding &quot;\n&quot; into
  * &quot;\r\n&quot; along the way.  We have to return two lengths
  * because the caller needs to know how much to advance
<span class="p_header">diff --git a/drivers/watchdog/kempld_wdt.c b/drivers/watchdog/kempld_wdt.c</span>
<span class="p_header">index 5bf931ce1353..978098f71761 100644</span>
<span class="p_header">--- a/drivers/watchdog/kempld_wdt.c</span>
<span class="p_header">+++ b/drivers/watchdog/kempld_wdt.c</span>
<span class="p_chunk">@@ -140,12 +140,19 @@</span> <span class="p_context"> static int kempld_wdt_set_stage_timeout(struct kempld_wdt_data *wdt_data,</span>
 					unsigned int timeout)
 {
 	struct kempld_device_data *pld = wdt_data-&gt;pld;
<span class="p_del">-	u32 prescaler = kempld_prescaler[PRESCALER_21];</span>
<span class="p_add">+	u32 prescaler;</span>
 	u64 stage_timeout64;
 	u32 stage_timeout;
 	u32 remainder;
 	u8 stage_cfg;
 
<span class="p_add">+#if GCC_VERSION &lt; 40400</span>
<span class="p_add">+	/* work around a bug compiling do_div() */</span>
<span class="p_add">+	prescaler = READ_ONCE(kempld_prescaler[PRESCALER_21]);</span>
<span class="p_add">+#else</span>
<span class="p_add">+	prescaler = kempld_prescaler[PRESCALER_21];</span>
<span class="p_add">+#endif</span>
<span class="p_add">+</span>
 	if (!stage)
 		return -EINVAL;
 
<span class="p_header">diff --git a/fs/btrfs/send.c b/fs/btrfs/send.c</span>
<span class="p_header">index 63a6152be04b..c5bbb5300658 100644</span>
<span class="p_header">--- a/fs/btrfs/send.c</span>
<span class="p_header">+++ b/fs/btrfs/send.c</span>
<span class="p_chunk">@@ -1648,6 +1648,9 @@</span> <span class="p_context"> static int is_inode_existent(struct send_ctx *sctx, u64 ino, u64 gen)</span>
 {
 	int ret;
 
<span class="p_add">+	if (ino == BTRFS_FIRST_FREE_OBJECTID)</span>
<span class="p_add">+		return 1;</span>
<span class="p_add">+</span>
 	ret = get_cur_inode_state(sctx, ino, gen);
 	if (ret &lt; 0)
 		goto out;
<span class="p_chunk">@@ -1833,7 +1836,7 @@</span> <span class="p_context"> static int will_overwrite_ref(struct send_ctx *sctx, u64 dir, u64 dir_gen,</span>
 	 * not delted and then re-created, if it was then we have no overwrite
 	 * and we can just unlink this entry.
 	 */
<span class="p_del">-	if (sctx-&gt;parent_root) {</span>
<span class="p_add">+	if (sctx-&gt;parent_root &amp;&amp; dir != BTRFS_FIRST_FREE_OBJECTID) {</span>
 		ret = get_inode_info(sctx-&gt;parent_root, dir, NULL, &amp;gen, NULL,
 				     NULL, NULL, NULL);
 		if (ret &lt; 0 &amp;&amp; ret != -ENOENT)
<span class="p_header">diff --git a/fs/ceph/mds_client.c b/fs/ceph/mds_client.c</span>
<span class="p_header">index f54f77037d22..ead89489ae71 100644</span>
<span class="p_header">--- a/fs/ceph/mds_client.c</span>
<span class="p_header">+++ b/fs/ceph/mds_client.c</span>
<span class="p_chunk">@@ -1845,13 +1845,18 @@</span> <span class="p_context"> static int build_dentry_path(struct dentry *dentry,</span>
 			     int *pfreepath)
 {
 	char *path;
<span class="p_add">+	struct inode *dir;</span>
 
<span class="p_del">-	if (ceph_snap(d_inode(dentry-&gt;d_parent)) == CEPH_NOSNAP) {</span>
<span class="p_del">-		*pino = ceph_ino(d_inode(dentry-&gt;d_parent));</span>
<span class="p_add">+	rcu_read_lock();</span>
<span class="p_add">+	dir = d_inode_rcu(dentry-&gt;d_parent);</span>
<span class="p_add">+	if (dir &amp;&amp; ceph_snap(dir) == CEPH_NOSNAP) {</span>
<span class="p_add">+		*pino = ceph_ino(dir);</span>
<span class="p_add">+		rcu_read_unlock();</span>
 		*ppath = dentry-&gt;d_name.name;
 		*ppathlen = dentry-&gt;d_name.len;
 		return 0;
 	}
<span class="p_add">+	rcu_read_unlock();</span>
 	path = ceph_mdsc_build_path(dentry, ppathlen, pino, 1);
 	if (IS_ERR(path))
 		return PTR_ERR(path);
<span class="p_header">diff --git a/fs/f2fs/data.c b/fs/f2fs/data.c</span>
<span class="p_header">index 972eab7ac071..98b2fc2678ff 100644</span>
<span class="p_header">--- a/fs/f2fs/data.c</span>
<span class="p_header">+++ b/fs/f2fs/data.c</span>
<span class="p_chunk">@@ -1416,7 +1416,12 @@</span> <span class="p_context"> static int f2fs_write_begin(struct file *file, struct address_space *mapping,</span>
 			goto fail;
 	}
 repeat:
<span class="p_del">-	page = grab_cache_page_write_begin(mapping, index, flags);</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Do not use grab_cache_page_write_begin() to avoid deadlock due to</span>
<span class="p_add">+	 * wait_for_stable_page. Will wait that below with our IO control.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	page = pagecache_get_page(mapping, index,</span>
<span class="p_add">+				FGP_LOCK | FGP_WRITE | FGP_CREAT, GFP_NOFS);</span>
 	if (!page) {
 		err = -ENOMEM;
 		goto fail;
<span class="p_header">diff --git a/fs/nfsd/nfs4callback.c b/fs/nfsd/nfs4callback.c</span>
<span class="p_header">index 15bdc2d48cfe..24ace275160c 100644</span>
<span class="p_header">--- a/fs/nfsd/nfs4callback.c</span>
<span class="p_header">+++ b/fs/nfsd/nfs4callback.c</span>
<span class="p_chunk">@@ -696,6 +696,14 @@</span> <span class="p_context"> int set_callback_cred(void)</span>
 	return 0;
 }
 
<span class="p_add">+void cleanup_callback_cred(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if (callback_cred) {</span>
<span class="p_add">+		put_rpccred(callback_cred);</span>
<span class="p_add">+		callback_cred = NULL;</span>
<span class="p_add">+	}</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static struct rpc_cred *get_backchannel_cred(struct nfs4_client *clp, struct rpc_clnt *client, struct nfsd4_session *ses)
 {
 	if (clp-&gt;cl_minorversion == 0) {
<span class="p_header">diff --git a/fs/nfsd/nfs4state.c b/fs/nfsd/nfs4state.c</span>
<span class="p_header">index 9e5a6842346e..ca9ebc3242d3 100644</span>
<span class="p_header">--- a/fs/nfsd/nfs4state.c</span>
<span class="p_header">+++ b/fs/nfsd/nfs4state.c</span>
<span class="p_chunk">@@ -6792,23 +6792,24 @@</span> <span class="p_context"> nfs4_state_start(void)</span>
 
 	ret = set_callback_cred();
 	if (ret)
<span class="p_del">-		return -ENOMEM;</span>
<span class="p_add">+		return ret;</span>
<span class="p_add">+</span>
 	laundry_wq = alloc_workqueue(&quot;%s&quot;, WQ_UNBOUND, 0, &quot;nfsd4&quot;);
 	if (laundry_wq == NULL) {
 		ret = -ENOMEM;
<span class="p_del">-		goto out_recovery;</span>
<span class="p_add">+		goto out_cleanup_cred;</span>
 	}
 	ret = nfsd4_create_callback_queue();
 	if (ret)
 		goto out_free_laundry;
 
 	set_max_delegations();
<span class="p_del">-</span>
 	return 0;
 
 out_free_laundry:
 	destroy_workqueue(laundry_wq);
<span class="p_del">-out_recovery:</span>
<span class="p_add">+out_cleanup_cred:</span>
<span class="p_add">+	cleanup_callback_cred();</span>
 	return ret;
 }
 
<span class="p_chunk">@@ -6847,6 +6848,7 @@</span> <span class="p_context"> nfs4_state_shutdown(void)</span>
 {
 	destroy_workqueue(laundry_wq);
 	nfsd4_destroy_callback_queue();
<span class="p_add">+	cleanup_callback_cred();</span>
 }
 
 static void
<span class="p_header">diff --git a/fs/nfsd/state.h b/fs/nfsd/state.h</span>
<span class="p_header">index 5134eedcb16c..86af697c21d3 100644</span>
<span class="p_header">--- a/fs/nfsd/state.h</span>
<span class="p_header">+++ b/fs/nfsd/state.h</span>
<span class="p_chunk">@@ -595,6 +595,7 @@</span> <span class="p_context"> extern struct nfs4_client_reclaim *nfsd4_find_reclaim_client(const char *recdir,</span>
 extern __be32 nfs4_check_open_reclaim(clientid_t *clid,
 		struct nfsd4_compound_state *cstate, struct nfsd_net *nn);
 extern int set_callback_cred(void);
<span class="p_add">+extern void cleanup_callback_cred(void);</span>
 extern void nfsd4_probe_callback(struct nfs4_client *clp);
 extern void nfsd4_probe_callback_sync(struct nfs4_client *clp);
 extern void nfsd4_change_callback(struct nfs4_client *clp, struct nfs4_cb_conn *);
<span class="p_header">diff --git a/fs/ocfs2/dlmglue.c b/fs/ocfs2/dlmglue.c</span>
<span class="p_header">index 60a5f1548cd9..555b57a16499 100644</span>
<span class="p_header">--- a/fs/ocfs2/dlmglue.c</span>
<span class="p_header">+++ b/fs/ocfs2/dlmglue.c</span>
<span class="p_chunk">@@ -531,6 +531,7 @@</span> <span class="p_context"> void ocfs2_lock_res_init_once(struct ocfs2_lock_res *res)</span>
 	init_waitqueue_head(&amp;res-&gt;l_event);
 	INIT_LIST_HEAD(&amp;res-&gt;l_blocked_list);
 	INIT_LIST_HEAD(&amp;res-&gt;l_mask_waiters);
<span class="p_add">+	INIT_LIST_HEAD(&amp;res-&gt;l_holders);</span>
 }
 
 void ocfs2_inode_lock_res_init(struct ocfs2_lock_res *res,
<span class="p_chunk">@@ -748,6 +749,50 @@</span> <span class="p_context"> void ocfs2_lock_res_free(struct ocfs2_lock_res *res)</span>
 	res-&gt;l_flags = 0UL;
 }
 
<span class="p_add">+/*</span>
<span class="p_add">+ * Keep a list of processes who have interest in a lockres.</span>
<span class="p_add">+ * Note: this is now only uesed for check recursive cluster locking.</span>
<span class="p_add">+ */</span>
<span class="p_add">+static inline void ocfs2_add_holder(struct ocfs2_lock_res *lockres,</span>
<span class="p_add">+				   struct ocfs2_lock_holder *oh)</span>
<span class="p_add">+{</span>
<span class="p_add">+	INIT_LIST_HEAD(&amp;oh-&gt;oh_list);</span>
<span class="p_add">+	oh-&gt;oh_owner_pid = get_pid(task_pid(current));</span>
<span class="p_add">+</span>
<span class="p_add">+	spin_lock(&amp;lockres-&gt;l_lock);</span>
<span class="p_add">+	list_add_tail(&amp;oh-&gt;oh_list, &amp;lockres-&gt;l_holders);</span>
<span class="p_add">+	spin_unlock(&amp;lockres-&gt;l_lock);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline void ocfs2_remove_holder(struct ocfs2_lock_res *lockres,</span>
<span class="p_add">+				       struct ocfs2_lock_holder *oh)</span>
<span class="p_add">+{</span>
<span class="p_add">+	spin_lock(&amp;lockres-&gt;l_lock);</span>
<span class="p_add">+	list_del(&amp;oh-&gt;oh_list);</span>
<span class="p_add">+	spin_unlock(&amp;lockres-&gt;l_lock);</span>
<span class="p_add">+</span>
<span class="p_add">+	put_pid(oh-&gt;oh_owner_pid);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline int ocfs2_is_locked_by_me(struct ocfs2_lock_res *lockres)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct ocfs2_lock_holder *oh;</span>
<span class="p_add">+	struct pid *pid;</span>
<span class="p_add">+</span>
<span class="p_add">+	/* look in the list of holders for one with the current task as owner */</span>
<span class="p_add">+	spin_lock(&amp;lockres-&gt;l_lock);</span>
<span class="p_add">+	pid = task_pid(current);</span>
<span class="p_add">+	list_for_each_entry(oh, &amp;lockres-&gt;l_holders, oh_list) {</span>
<span class="p_add">+		if (oh-&gt;oh_owner_pid == pid) {</span>
<span class="p_add">+			spin_unlock(&amp;lockres-&gt;l_lock);</span>
<span class="p_add">+			return 1;</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+	spin_unlock(&amp;lockres-&gt;l_lock);</span>
<span class="p_add">+</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static inline void ocfs2_inc_holders(struct ocfs2_lock_res *lockres,
 				     int level)
 {
<span class="p_chunk">@@ -2343,8 +2388,9 @@</span> <span class="p_context"> int ocfs2_inode_lock_full_nested(struct inode *inode,</span>
 		goto getbh;
 	}
 
<span class="p_del">-	if (ocfs2_mount_local(osb))</span>
<span class="p_del">-		goto local;</span>
<span class="p_add">+	if ((arg_flags &amp; OCFS2_META_LOCK_GETBH) ||</span>
<span class="p_add">+	    ocfs2_mount_local(osb))</span>
<span class="p_add">+		goto update;</span>
 
 	if (!(arg_flags &amp; OCFS2_META_LOCK_RECOVERY))
 		ocfs2_wait_for_recovery(osb);
<span class="p_chunk">@@ -2373,7 +2419,7 @@</span> <span class="p_context"> int ocfs2_inode_lock_full_nested(struct inode *inode,</span>
 	if (!(arg_flags &amp; OCFS2_META_LOCK_RECOVERY))
 		ocfs2_wait_for_recovery(osb);
 
<span class="p_del">-local:</span>
<span class="p_add">+update:</span>
 	/*
 	 * We only see this flag if we&#39;re being called from
 	 * ocfs2_read_locked_inode(). It means we&#39;re locking an inode
<span class="p_chunk">@@ -2515,6 +2561,59 @@</span> <span class="p_context"> void ocfs2_inode_unlock(struct inode *inode,</span>
 		ocfs2_cluster_unlock(OCFS2_SB(inode-&gt;i_sb), lockres, level);
 }
 
<span class="p_add">+/*</span>
<span class="p_add">+ * This _tracker variantes are introduced to deal with the recursive cluster</span>
<span class="p_add">+ * locking issue. The idea is to keep track of a lock holder on the stack of</span>
<span class="p_add">+ * the current process. If there&#39;s a lock holder on the stack, we know the</span>
<span class="p_add">+ * task context is already protected by cluster locking. Currently, they&#39;re</span>
<span class="p_add">+ * used in some VFS entry routines.</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * return &lt; 0 on error, return == 0 if there&#39;s no lock holder on the stack</span>
<span class="p_add">+ * before this call, return == 1 if this call would be a recursive locking.</span>
<span class="p_add">+ */</span>
<span class="p_add">+int ocfs2_inode_lock_tracker(struct inode *inode,</span>
<span class="p_add">+			     struct buffer_head **ret_bh,</span>
<span class="p_add">+			     int ex,</span>
<span class="p_add">+			     struct ocfs2_lock_holder *oh)</span>
<span class="p_add">+{</span>
<span class="p_add">+	int status;</span>
<span class="p_add">+	int arg_flags = 0, has_locked;</span>
<span class="p_add">+	struct ocfs2_lock_res *lockres;</span>
<span class="p_add">+</span>
<span class="p_add">+	lockres = &amp;OCFS2_I(inode)-&gt;ip_inode_lockres;</span>
<span class="p_add">+	has_locked = ocfs2_is_locked_by_me(lockres);</span>
<span class="p_add">+	/* Just get buffer head if the cluster lock has been taken */</span>
<span class="p_add">+	if (has_locked)</span>
<span class="p_add">+		arg_flags = OCFS2_META_LOCK_GETBH;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (likely(!has_locked || ret_bh)) {</span>
<span class="p_add">+		status = ocfs2_inode_lock_full(inode, ret_bh, ex, arg_flags);</span>
<span class="p_add">+		if (status &lt; 0) {</span>
<span class="p_add">+			if (status != -ENOENT)</span>
<span class="p_add">+				mlog_errno(status);</span>
<span class="p_add">+			return status;</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+	if (!has_locked)</span>
<span class="p_add">+		ocfs2_add_holder(lockres, oh);</span>
<span class="p_add">+</span>
<span class="p_add">+	return has_locked;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+void ocfs2_inode_unlock_tracker(struct inode *inode,</span>
<span class="p_add">+				int ex,</span>
<span class="p_add">+				struct ocfs2_lock_holder *oh,</span>
<span class="p_add">+				int had_lock)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct ocfs2_lock_res *lockres;</span>
<span class="p_add">+</span>
<span class="p_add">+	lockres = &amp;OCFS2_I(inode)-&gt;ip_inode_lockres;</span>
<span class="p_add">+	if (!had_lock) {</span>
<span class="p_add">+		ocfs2_remove_holder(lockres, oh);</span>
<span class="p_add">+		ocfs2_inode_unlock(inode, ex);</span>
<span class="p_add">+	}</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 int ocfs2_orphan_scan_lock(struct ocfs2_super *osb, u32 *seqno)
 {
 	struct ocfs2_lock_res *lockres;
<span class="p_header">diff --git a/fs/ocfs2/dlmglue.h b/fs/ocfs2/dlmglue.h</span>
<span class="p_header">index d293a22c32c5..a7fc18ba0dc1 100644</span>
<span class="p_header">--- a/fs/ocfs2/dlmglue.h</span>
<span class="p_header">+++ b/fs/ocfs2/dlmglue.h</span>
<span class="p_chunk">@@ -70,6 +70,11 @@</span> <span class="p_context"> struct ocfs2_orphan_scan_lvb {</span>
 	__be32	lvb_os_seqno;
 };
 
<span class="p_add">+struct ocfs2_lock_holder {</span>
<span class="p_add">+	struct list_head oh_list;</span>
<span class="p_add">+	struct pid *oh_owner_pid;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 /* ocfs2_inode_lock_full() &#39;arg_flags&#39; flags */
 /* don&#39;t wait on recovery. */
 #define OCFS2_META_LOCK_RECOVERY	(0x01)
<span class="p_chunk">@@ -77,6 +82,8 @@</span> <span class="p_context"> struct ocfs2_orphan_scan_lvb {</span>
 #define OCFS2_META_LOCK_NOQUEUE		(0x02)
 /* don&#39;t block waiting for the downconvert thread, instead return -EAGAIN */
 #define OCFS2_LOCK_NONBLOCK		(0x04)
<span class="p_add">+/* just get back disk inode bh if we&#39;ve got cluster lock. */</span>
<span class="p_add">+#define OCFS2_META_LOCK_GETBH		(0x08)</span>
 
 /* Locking subclasses of inode cluster lock */
 enum {
<span class="p_chunk">@@ -170,4 +177,15 @@</span> <span class="p_context"> void ocfs2_put_dlm_debug(struct ocfs2_dlm_debug *dlm_debug);</span>
 
 /* To set the locking protocol on module initialization */
 void ocfs2_set_locking_protocol(void);
<span class="p_add">+</span>
<span class="p_add">+/* The _tracker pair is used to avoid cluster recursive locking */</span>
<span class="p_add">+int ocfs2_inode_lock_tracker(struct inode *inode,</span>
<span class="p_add">+			     struct buffer_head **ret_bh,</span>
<span class="p_add">+			     int ex,</span>
<span class="p_add">+			     struct ocfs2_lock_holder *oh);</span>
<span class="p_add">+void ocfs2_inode_unlock_tracker(struct inode *inode,</span>
<span class="p_add">+				int ex,</span>
<span class="p_add">+				struct ocfs2_lock_holder *oh,</span>
<span class="p_add">+				int had_lock);</span>
<span class="p_add">+</span>
 #endif	/* DLMGLUE_H */
<span class="p_header">diff --git a/fs/ocfs2/ocfs2.h b/fs/ocfs2/ocfs2.h</span>
<span class="p_header">index 7a0126267847..2495066a9ca3 100644</span>
<span class="p_header">--- a/fs/ocfs2/ocfs2.h</span>
<span class="p_header">+++ b/fs/ocfs2/ocfs2.h</span>
<span class="p_chunk">@@ -172,6 +172,7 @@</span> <span class="p_context"> struct ocfs2_lock_res {</span>
 
 	struct list_head         l_blocked_list;
 	struct list_head         l_mask_waiters;
<span class="p_add">+	struct list_head	 l_holders;</span>
 
 	unsigned long		 l_flags;
 	char                     l_name[OCFS2_LOCK_ID_MAX_LEN];
<span class="p_header">diff --git a/include/asm-generic/percpu.h b/include/asm-generic/percpu.h</span>
<span class="p_header">index 4d9f233c4ba8..7d58ffdacd62 100644</span>
<span class="p_header">--- a/include/asm-generic/percpu.h</span>
<span class="p_header">+++ b/include/asm-generic/percpu.h</span>
<span class="p_chunk">@@ -105,15 +105,35 @@</span> <span class="p_context"> do {									\</span>
 	(__ret);							\
 })
 
<span class="p_del">-#define this_cpu_generic_read(pcp)					\</span>
<span class="p_add">+#define __this_cpu_generic_read_nopreempt(pcp)				\</span>
 ({									\
 	typeof(pcp) __ret;						\
 	preempt_disable();						\
<span class="p_del">-	__ret = *this_cpu_ptr(&amp;(pcp));					\</span>
<span class="p_add">+	__ret = READ_ONCE(*raw_cpu_ptr(&amp;(pcp)));			\</span>
 	preempt_enable();						\
 	__ret;								\
 })
 
<span class="p_add">+#define __this_cpu_generic_read_noirq(pcp)				\</span>
<span class="p_add">+({									\</span>
<span class="p_add">+	typeof(pcp) __ret;						\</span>
<span class="p_add">+	unsigned long __flags;						\</span>
<span class="p_add">+	raw_local_irq_save(__flags);					\</span>
<span class="p_add">+	__ret = *raw_cpu_ptr(&amp;(pcp));					\</span>
<span class="p_add">+	raw_local_irq_restore(__flags);					\</span>
<span class="p_add">+	__ret;								\</span>
<span class="p_add">+})</span>
<span class="p_add">+</span>
<span class="p_add">+#define this_cpu_generic_read(pcp)					\</span>
<span class="p_add">+({									\</span>
<span class="p_add">+	typeof(pcp) __ret;						\</span>
<span class="p_add">+	if (__native_word(pcp))						\</span>
<span class="p_add">+		__ret = __this_cpu_generic_read_nopreempt(pcp);		\</span>
<span class="p_add">+	else								\</span>
<span class="p_add">+		__ret = __this_cpu_generic_read_noirq(pcp);		\</span>
<span class="p_add">+	__ret;								\</span>
<span class="p_add">+})</span>
<span class="p_add">+</span>
 #define this_cpu_generic_to_op(pcp, val, op)				\
 do {									\
 	unsigned long __flags;						\
<span class="p_header">diff --git a/include/linux/trace_events.h b/include/linux/trace_events.h</span>
<span class="p_header">index 925730bc9fc1..311176f290b2 100644</span>
<span class="p_header">--- a/include/linux/trace_events.h</span>
<span class="p_header">+++ b/include/linux/trace_events.h</span>
<span class="p_chunk">@@ -301,6 +301,7 @@</span> <span class="p_context"> struct trace_event_call {</span>
 	int				perf_refcount;
 	struct hlist_head __percpu	*perf_events;
 	struct bpf_prog			*prog;
<span class="p_add">+	struct perf_event		*bpf_prog_owner;</span>
 
 	int	(*perf_perm)(struct trace_event_call *,
 			     struct perf_event *);
<span class="p_header">diff --git a/include/net/sctp/ulpevent.h b/include/net/sctp/ulpevent.h</span>
<span class="p_header">index cccdcfd14973..f348c736e6e0 100644</span>
<span class="p_header">--- a/include/net/sctp/ulpevent.h</span>
<span class="p_header">+++ b/include/net/sctp/ulpevent.h</span>
<span class="p_chunk">@@ -141,8 +141,12 @@</span> <span class="p_context"> __u16 sctp_ulpevent_get_notification_type(const struct sctp_ulpevent *event);</span>
 static inline int sctp_ulpevent_type_enabled(__u16 sn_type,
 					     struct sctp_event_subscribe *mask)
 {
<span class="p_add">+	int offset = sn_type - SCTP_SN_TYPE_BASE;</span>
 	char *amask = (char *) mask;
<span class="p_del">-	return amask[sn_type - SCTP_SN_TYPE_BASE];</span>
<span class="p_add">+</span>
<span class="p_add">+	if (offset &gt;= sizeof(struct sctp_event_subscribe))</span>
<span class="p_add">+		return 0;</span>
<span class="p_add">+	return amask[offset];</span>
 }
 
 /* Given an event subscription, is this event enabled? */
<span class="p_header">diff --git a/include/uapi/linux/mroute6.h b/include/uapi/linux/mroute6.h</span>
<span class="p_header">index ce91215cf7e6..e0b566dc72ef 100644</span>
<span class="p_header">--- a/include/uapi/linux/mroute6.h</span>
<span class="p_header">+++ b/include/uapi/linux/mroute6.h</span>
<span class="p_chunk">@@ -3,6 +3,7 @@</span> <span class="p_context"></span>
 
 #include &lt;linux/types.h&gt;
 #include &lt;linux/sockios.h&gt;
<span class="p_add">+#include &lt;linux/in6.h&gt;		/* For struct sockaddr_in6. */</span>
 
 /*
  *	Based on the MROUTING 3.5 defines primarily to keep
<span class="p_header">diff --git a/include/uapi/linux/rds.h b/include/uapi/linux/rds.h</span>
<span class="p_header">index 0f9265cb2a96..7af20a136429 100644</span>
<span class="p_header">--- a/include/uapi/linux/rds.h</span>
<span class="p_header">+++ b/include/uapi/linux/rds.h</span>
<span class="p_chunk">@@ -35,6 +35,7 @@</span> <span class="p_context"></span>
 #define _LINUX_RDS_H
 
 #include &lt;linux/types.h&gt;
<span class="p_add">+#include &lt;linux/socket.h&gt;		/* For __kernel_sockaddr_storage. */</span>
 
 #define RDS_IB_ABI_VERSION		0x301
 
<span class="p_chunk">@@ -223,7 +224,7 @@</span> <span class="p_context"> struct rds_get_mr_args {</span>
 };
 
 struct rds_get_mr_for_dest_args {
<span class="p_del">-	struct sockaddr_storage	dest_addr;</span>
<span class="p_add">+	struct __kernel_sockaddr_storage dest_addr;</span>
 	struct rds_iovec 	vec;
 	uint64_t		cookie_addr;
 	uint64_t		flags;
<span class="p_header">diff --git a/kernel/bpf/verifier.c b/kernel/bpf/verifier.c</span>
<span class="p_header">index 863e24f1e62e..70dc6dcf8649 100644</span>
<span class="p_header">--- a/kernel/bpf/verifier.c</span>
<span class="p_header">+++ b/kernel/bpf/verifier.c</span>
<span class="p_chunk">@@ -1033,7 +1033,8 @@</span> <span class="p_context"> static int check_alu_op(struct verifier_env *env, struct bpf_insn *insn)</span>
 			}
 		} else {
 			if (insn-&gt;src_reg != BPF_REG_0 || insn-&gt;off != 0 ||
<span class="p_del">-			    (insn-&gt;imm != 16 &amp;&amp; insn-&gt;imm != 32 &amp;&amp; insn-&gt;imm != 64)) {</span>
<span class="p_add">+			    (insn-&gt;imm != 16 &amp;&amp; insn-&gt;imm != 32 &amp;&amp; insn-&gt;imm != 64) ||</span>
<span class="p_add">+			    BPF_CLASS(insn-&gt;code) == BPF_ALU64) {</span>
 				verbose(&quot;BPF_END uses reserved fields\n&quot;);
 				return -EINVAL;
 			}
<span class="p_header">diff --git a/kernel/events/core.c b/kernel/events/core.c</span>
<span class="p_header">index 3697063dd09a..8f75386e61a7 100644</span>
<span class="p_header">--- a/kernel/events/core.c</span>
<span class="p_header">+++ b/kernel/events/core.c</span>
<span class="p_chunk">@@ -7108,6 +7108,7 @@</span> <span class="p_context"> static int perf_event_set_bpf_prog(struct perf_event *event, u32 prog_fd)</span>
 	}
 
 	event-&gt;tp_event-&gt;prog = prog;
<span class="p_add">+	event-&gt;tp_event-&gt;bpf_prog_owner = event;</span>
 
 	return 0;
 }
<span class="p_chunk">@@ -7120,7 +7121,7 @@</span> <span class="p_context"> static void perf_event_free_bpf_prog(struct perf_event *event)</span>
 		return;
 
 	prog = event-&gt;tp_event-&gt;prog;
<span class="p_del">-	if (prog) {</span>
<span class="p_add">+	if (prog &amp;&amp; event-&gt;tp_event-&gt;bpf_prog_owner == event) {</span>
 		event-&gt;tp_event-&gt;prog = NULL;
 		bpf_prog_put_rcu(prog);
 	}
<span class="p_header">diff --git a/kernel/locking/lockdep.c b/kernel/locking/lockdep.c</span>
<span class="p_header">index 60ace56618f6..0e2c4911ba61 100644</span>
<span class="p_header">--- a/kernel/locking/lockdep.c</span>
<span class="p_header">+++ b/kernel/locking/lockdep.c</span>
<span class="p_chunk">@@ -3128,10 +3128,17 @@</span> <span class="p_context"> static int __lock_acquire(struct lockdep_map *lock, unsigned int subclass,</span>
 	if (depth) {
 		hlock = curr-&gt;held_locks + depth - 1;
 		if (hlock-&gt;class_idx == class_idx &amp;&amp; nest_lock) {
<span class="p_del">-			if (hlock-&gt;references)</span>
<span class="p_add">+			if (hlock-&gt;references) {</span>
<span class="p_add">+				/*</span>
<span class="p_add">+				 * Check: unsigned int references:12, overflow.</span>
<span class="p_add">+				 */</span>
<span class="p_add">+				if (DEBUG_LOCKS_WARN_ON(hlock-&gt;references == (1 &lt;&lt; 12)-1))</span>
<span class="p_add">+					return 0;</span>
<span class="p_add">+</span>
 				hlock-&gt;references++;
<span class="p_del">-			else</span>
<span class="p_add">+			} else {</span>
 				hlock-&gt;references = 2;
<span class="p_add">+			}</span>
 
 			return 1;
 		}
<span class="p_header">diff --git a/mm/slab_common.c b/mm/slab_common.c</span>
<span class="p_header">index bec2fce9fafc..01e7246de8df 100644</span>
<span class="p_header">--- a/mm/slab_common.c</span>
<span class="p_header">+++ b/mm/slab_common.c</span>
<span class="p_chunk">@@ -250,7 +250,7 @@</span> <span class="p_context"> struct kmem_cache *find_mergeable(size_t size, size_t align,</span>
 {
 	struct kmem_cache *s;
 
<span class="p_del">-	if (slab_nomerge || (flags &amp; SLAB_NEVER_MERGE))</span>
<span class="p_add">+	if (slab_nomerge)</span>
 		return NULL;
 
 	if (ctor)
<span class="p_chunk">@@ -261,6 +261,9 @@</span> <span class="p_context"> struct kmem_cache *find_mergeable(size_t size, size_t align,</span>
 	size = ALIGN(size, align);
 	flags = kmem_cache_flags(size, flags, name, NULL);
 
<span class="p_add">+	if (flags &amp; SLAB_NEVER_MERGE)</span>
<span class="p_add">+		return NULL;</span>
<span class="p_add">+</span>
 	list_for_each_entry_reverse(s, &amp;slab_caches, list) {
 		if (slab_unmergeable(s))
 			continue;
<span class="p_header">diff --git a/net/core/sock.c b/net/core/sock.c</span>
<span class="p_header">index bd2fad27891e..cd12cb6fe366 100644</span>
<span class="p_header">--- a/net/core/sock.c</span>
<span class="p_header">+++ b/net/core/sock.c</span>
<span class="p_chunk">@@ -1516,6 +1516,8 @@</span> <span class="p_context"> struct sock *sk_clone_lock(const struct sock *sk, const gfp_t priority)</span>
 
 		sock_copy(newsk, sk);
 
<span class="p_add">+		newsk-&gt;sk_prot_creator = sk-&gt;sk_prot;</span>
<span class="p_add">+</span>
 		/* SANITY */
 		if (likely(newsk-&gt;sk_net_refcnt))
 			get_net(sock_net(newsk));
<span class="p_header">diff --git a/net/ipv4/ip_vti.c b/net/ipv4/ip_vti.c</span>
<span class="p_header">index 65036891e080..a03f834f16d5 100644</span>
<span class="p_header">--- a/net/ipv4/ip_vti.c</span>
<span class="p_header">+++ b/net/ipv4/ip_vti.c</span>
<span class="p_chunk">@@ -156,6 +156,7 @@</span> <span class="p_context"> static netdev_tx_t vti_xmit(struct sk_buff *skb, struct net_device *dev,</span>
 	struct ip_tunnel_parm *parms = &amp;tunnel-&gt;parms;
 	struct dst_entry *dst = skb_dst(skb);
 	struct net_device *tdev;	/* Device to other host */
<span class="p_add">+	int pkt_len = skb-&gt;len;</span>
 	int err;
 
 	if (!dst) {
<span class="p_chunk">@@ -199,7 +200,7 @@</span> <span class="p_context"> static netdev_tx_t vti_xmit(struct sk_buff *skb, struct net_device *dev,</span>
 
 	err = dst_output(tunnel-&gt;net, skb-&gt;sk, skb);
 	if (net_xmit_eval(err) == 0)
<span class="p_del">-		err = skb-&gt;len;</span>
<span class="p_add">+		err = pkt_len;</span>
 	iptunnel_xmit_stats(err, &amp;dev-&gt;stats, dev-&gt;tstats);
 	return NETDEV_TX_OK;
 
<span class="p_header">diff --git a/net/ipv6/ip6_gre.c b/net/ipv6/ip6_gre.c</span>
<span class="p_header">index e89135828c3d..eab117033b8a 100644</span>
<span class="p_header">--- a/net/ipv6/ip6_gre.c</span>
<span class="p_header">+++ b/net/ipv6/ip6_gre.c</span>
<span class="p_chunk">@@ -1173,24 +1173,25 @@</span> <span class="p_context"> static int ip6gre_tunnel_change_mtu(struct net_device *dev, int new_mtu)</span>
 }
 
 static int ip6gre_header(struct sk_buff *skb, struct net_device *dev,
<span class="p_del">-			unsigned short type,</span>
<span class="p_del">-			const void *daddr, const void *saddr, unsigned int len)</span>
<span class="p_add">+			 unsigned short type, const void *daddr,</span>
<span class="p_add">+			 const void *saddr, unsigned int len)</span>
 {
 	struct ip6_tnl *t = netdev_priv(dev);
<span class="p_del">-	struct ipv6hdr *ipv6h = (struct ipv6hdr *)skb_push(skb, t-&gt;hlen);</span>
<span class="p_del">-	__be16 *p = (__be16 *)(ipv6h+1);</span>
<span class="p_add">+	struct ipv6hdr *ipv6h;</span>
<span class="p_add">+	__be16 *p;</span>
 
<span class="p_del">-	ip6_flow_hdr(ipv6h, 0,</span>
<span class="p_del">-		     ip6_make_flowlabel(dev_net(dev), skb,</span>
<span class="p_del">-					t-&gt;fl.u.ip6.flowlabel, true,</span>
<span class="p_del">-					&amp;t-&gt;fl.u.ip6));</span>
<span class="p_add">+	ipv6h = (struct ipv6hdr *)skb_push(skb, t-&gt;hlen + sizeof(*ipv6h));</span>
<span class="p_add">+	ip6_flow_hdr(ipv6h, 0, ip6_make_flowlabel(dev_net(dev), skb,</span>
<span class="p_add">+						  t-&gt;fl.u.ip6.flowlabel,</span>
<span class="p_add">+						  true, &amp;t-&gt;fl.u.ip6));</span>
 	ipv6h-&gt;hop_limit = t-&gt;parms.hop_limit;
 	ipv6h-&gt;nexthdr = NEXTHDR_GRE;
 	ipv6h-&gt;saddr = t-&gt;parms.laddr;
 	ipv6h-&gt;daddr = t-&gt;parms.raddr;
 
<span class="p_del">-	p[0]		= t-&gt;parms.o_flags;</span>
<span class="p_del">-	p[1]		= htons(type);</span>
<span class="p_add">+	p = (__be16 *)(ipv6h + 1);</span>
<span class="p_add">+	p[0] = t-&gt;parms.o_flags;</span>
<span class="p_add">+	p[1] = htons(type);</span>
 
 	/*
 	 *	Set the source hardware address.
<span class="p_header">diff --git a/net/ipv6/ip6_vti.c b/net/ipv6/ip6_vti.c</span>
<span class="p_header">index bdcc4d9cedd3..7ebb14def2cb 100644</span>
<span class="p_header">--- a/net/ipv6/ip6_vti.c</span>
<span class="p_header">+++ b/net/ipv6/ip6_vti.c</span>
<span class="p_chunk">@@ -434,6 +434,7 @@</span> <span class="p_context"> vti6_xmit(struct sk_buff *skb, struct net_device *dev, struct flowi *fl)</span>
 	struct dst_entry *dst = skb_dst(skb);
 	struct net_device *tdev;
 	struct xfrm_state *x;
<span class="p_add">+	int pkt_len = skb-&gt;len;</span>
 	int err = -1;
 	int mtu;
 
<span class="p_chunk">@@ -487,7 +488,7 @@</span> <span class="p_context"> vti6_xmit(struct sk_buff *skb, struct net_device *dev, struct flowi *fl)</span>
 		struct pcpu_sw_netstats *tstats = this_cpu_ptr(dev-&gt;tstats);
 
 		u64_stats_update_begin(&amp;tstats-&gt;syncp);
<span class="p_del">-		tstats-&gt;tx_bytes += skb-&gt;len;</span>
<span class="p_add">+		tstats-&gt;tx_bytes += pkt_len;</span>
 		tstats-&gt;tx_packets++;
 		u64_stats_update_end(&amp;tstats-&gt;syncp);
 	} else {
<span class="p_header">diff --git a/net/ipv6/udp.c b/net/ipv6/udp.c</span>
<span class="p_header">index 6fd4af3b5b79..6eb1e9293b6f 100644</span>
<span class="p_header">--- a/net/ipv6/udp.c</span>
<span class="p_header">+++ b/net/ipv6/udp.c</span>
<span class="p_chunk">@@ -1007,6 +1007,7 @@</span> <span class="p_context"> static void udp6_hwcsum_outgoing(struct sock *sk, struct sk_buff *skb,</span>
 		 */
 		offset = skb_transport_offset(skb);
 		skb-&gt;csum = skb_checksum(skb, offset, skb-&gt;len - offset, 0);
<span class="p_add">+		csum = skb-&gt;csum;</span>
 
 		skb-&gt;ip_summed = CHECKSUM_NONE;
 
<span class="p_header">diff --git a/net/l2tp/l2tp_core.c b/net/l2tp/l2tp_core.c</span>
<span class="p_header">index d3dec414fd44..d48281ca9c72 100644</span>
<span class="p_header">--- a/net/l2tp/l2tp_core.c</span>
<span class="p_header">+++ b/net/l2tp/l2tp_core.c</span>
<span class="p_chunk">@@ -1321,6 +1321,9 @@</span> <span class="p_context"> static void l2tp_tunnel_del_work(struct work_struct *work)</span>
 	struct sock *sk = NULL;
 
 	tunnel = container_of(work, struct l2tp_tunnel, del_work);
<span class="p_add">+</span>
<span class="p_add">+	l2tp_tunnel_closeall(tunnel);</span>
<span class="p_add">+</span>
 	sk = l2tp_tunnel_sock_lookup(tunnel);
 	if (!sk)
 		goto out;
<span class="p_chunk">@@ -1640,15 +1643,12 @@</span> <span class="p_context"> EXPORT_SYMBOL_GPL(l2tp_tunnel_create);</span>
 
 /* This function is used by the netlink TUNNEL_DELETE command.
  */
<span class="p_del">-int l2tp_tunnel_delete(struct l2tp_tunnel *tunnel)</span>
<span class="p_add">+void l2tp_tunnel_delete(struct l2tp_tunnel *tunnel)</span>
 {
<span class="p_del">-	l2tp_tunnel_inc_refcount(tunnel);</span>
<span class="p_del">-	l2tp_tunnel_closeall(tunnel);</span>
<span class="p_del">-	if (false == queue_work(l2tp_wq, &amp;tunnel-&gt;del_work)) {</span>
<span class="p_del">-		l2tp_tunnel_dec_refcount(tunnel);</span>
<span class="p_del">-		return 1;</span>
<span class="p_add">+	if (!test_and_set_bit(0, &amp;tunnel-&gt;dead)) {</span>
<span class="p_add">+		l2tp_tunnel_inc_refcount(tunnel);</span>
<span class="p_add">+		queue_work(l2tp_wq, &amp;tunnel-&gt;del_work);</span>
 	}
<span class="p_del">-	return 0;</span>
 }
 EXPORT_SYMBOL_GPL(l2tp_tunnel_delete);
 
<span class="p_header">diff --git a/net/l2tp/l2tp_core.h b/net/l2tp/l2tp_core.h</span>
<span class="p_header">index 555d962a62d2..9cf546846edb 100644</span>
<span class="p_header">--- a/net/l2tp/l2tp_core.h</span>
<span class="p_header">+++ b/net/l2tp/l2tp_core.h</span>
<span class="p_chunk">@@ -169,6 +169,9 @@</span> <span class="p_context"> struct l2tp_tunnel_cfg {</span>
 
 struct l2tp_tunnel {
 	int			magic;		/* Should be L2TP_TUNNEL_MAGIC */
<span class="p_add">+</span>
<span class="p_add">+	unsigned long		dead;</span>
<span class="p_add">+</span>
 	struct rcu_head rcu;
 	rwlock_t		hlist_lock;	/* protect session_hlist */
 	struct hlist_head	session_hlist[L2TP_HASH_SIZE];
<span class="p_chunk">@@ -253,7 +256,7 @@</span> <span class="p_context"> int l2tp_tunnel_create(struct net *net, int fd, int version, u32 tunnel_id,</span>
 		       u32 peer_tunnel_id, struct l2tp_tunnel_cfg *cfg,
 		       struct l2tp_tunnel **tunnelp);
 void l2tp_tunnel_closeall(struct l2tp_tunnel *tunnel);
<span class="p_del">-int l2tp_tunnel_delete(struct l2tp_tunnel *tunnel);</span>
<span class="p_add">+void l2tp_tunnel_delete(struct l2tp_tunnel *tunnel);</span>
 struct l2tp_session *l2tp_session_create(int priv_size,
 					 struct l2tp_tunnel *tunnel,
 					 u32 session_id, u32 peer_session_id,
<span class="p_header">diff --git a/net/mac80211/sta_info.c b/net/mac80211/sta_info.c</span>
<span class="p_header">index 63ea6cbac5ad..7e7b9ef29d8d 100644</span>
<span class="p_header">--- a/net/mac80211/sta_info.c</span>
<span class="p_header">+++ b/net/mac80211/sta_info.c</span>
<span class="p_chunk">@@ -661,7 +661,7 @@</span> <span class="p_context"> static void __sta_info_recalc_tim(struct sta_info *sta, bool ignore_pending)</span>
 	}
 
 	/* No need to do anything if the driver does all */
<span class="p_del">-	if (ieee80211_hw_check(&amp;local-&gt;hw, AP_LINK_PS))</span>
<span class="p_add">+	if (ieee80211_hw_check(&amp;local-&gt;hw, AP_LINK_PS) &amp;&amp; !local-&gt;ops-&gt;set_tim)</span>
 		return;
 
 	if (sta-&gt;dead)
<span class="p_header">diff --git a/net/netfilter/nf_conntrack_expect.c b/net/netfilter/nf_conntrack_expect.c</span>
<span class="p_header">index acf5c7b3f378..7f16d19d6198 100644</span>
<span class="p_header">--- a/net/netfilter/nf_conntrack_expect.c</span>
<span class="p_header">+++ b/net/netfilter/nf_conntrack_expect.c</span>
<span class="p_chunk">@@ -395,7 +395,7 @@</span> <span class="p_context"> static inline int __nf_ct_expect_check(struct nf_conntrack_expect *expect)</span>
 	struct net *net = nf_ct_exp_net(expect);
 	struct hlist_node *next;
 	unsigned int h;
<span class="p_del">-	int ret = 1;</span>
<span class="p_add">+	int ret = 0;</span>
 
 	if (!master_help) {
 		ret = -ESHUTDOWN;
<span class="p_chunk">@@ -445,7 +445,7 @@</span> <span class="p_context"> int nf_ct_expect_related_report(struct nf_conntrack_expect *expect,</span>
 
 	spin_lock_bh(&amp;nf_conntrack_expect_lock);
 	ret = __nf_ct_expect_check(expect);
<span class="p_del">-	if (ret &lt;= 0)</span>
<span class="p_add">+	if (ret &lt; 0)</span>
 		goto out;
 
 	ret = nf_ct_expect_insert(expect);
<span class="p_header">diff --git a/net/packet/af_packet.c b/net/packet/af_packet.c</span>
<span class="p_header">index b70055fc30cb..241f69039a72 100644</span>
<span class="p_header">--- a/net/packet/af_packet.c</span>
<span class="p_header">+++ b/net/packet/af_packet.c</span>
<span class="p_chunk">@@ -1652,10 +1652,6 @@</span> <span class="p_context"> static int fanout_add(struct sock *sk, u16 id, u16 type_flags)</span>
 
 	mutex_lock(&amp;fanout_mutex);
 
<span class="p_del">-	err = -EINVAL;</span>
<span class="p_del">-	if (!po-&gt;running)</span>
<span class="p_del">-		goto out;</span>
<span class="p_del">-</span>
 	err = -EALREADY;
 	if (po-&gt;fanout)
 		goto out;
<span class="p_chunk">@@ -1704,7 +1700,10 @@</span> <span class="p_context"> static int fanout_add(struct sock *sk, u16 id, u16 type_flags)</span>
 		list_add(&amp;match-&gt;list, &amp;fanout_list);
 	}
 	err = -EINVAL;
<span class="p_del">-	if (match-&gt;type == type &amp;&amp;</span>
<span class="p_add">+</span>
<span class="p_add">+	spin_lock(&amp;po-&gt;bind_lock);</span>
<span class="p_add">+	if (po-&gt;running &amp;&amp;</span>
<span class="p_add">+	    match-&gt;type == type &amp;&amp;</span>
 	    match-&gt;prot_hook.type == po-&gt;prot_hook.type &amp;&amp;
 	    match-&gt;prot_hook.dev == po-&gt;prot_hook.dev) {
 		err = -ENOSPC;
<span class="p_chunk">@@ -1716,6 +1715,13 @@</span> <span class="p_context"> static int fanout_add(struct sock *sk, u16 id, u16 type_flags)</span>
 			err = 0;
 		}
 	}
<span class="p_add">+	spin_unlock(&amp;po-&gt;bind_lock);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (err &amp;&amp; !atomic_read(&amp;match-&gt;sk_ref)) {</span>
<span class="p_add">+		list_del(&amp;match-&gt;list);</span>
<span class="p_add">+		kfree(match);</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 out:
 	if (err &amp;&amp; rollover) {
 		kfree(rollover);
<span class="p_chunk">@@ -2650,6 +2656,7 @@</span> <span class="p_context"> static int packet_snd(struct socket *sock, struct msghdr *msg, size_t len)</span>
 	int vnet_hdr_len;
 	struct packet_sock *po = pkt_sk(sk);
 	unsigned short gso_type = 0;
<span class="p_add">+	bool has_vnet_hdr = false;</span>
 	int hlen, tlen, linear;
 	int extra_len = 0;
 	ssize_t n;
<span class="p_chunk">@@ -2737,6 +2744,7 @@</span> <span class="p_context"> static int packet_snd(struct socket *sock, struct msghdr *msg, size_t len)</span>
 				goto out_unlock;
 
 		}
<span class="p_add">+		has_vnet_hdr = true;</span>
 	}
 
 	if (unlikely(sock_flag(sk, SOCK_NOFCS))) {
<span class="p_chunk">@@ -2796,7 +2804,7 @@</span> <span class="p_context"> static int packet_snd(struct socket *sock, struct msghdr *msg, size_t len)</span>
 
 	packet_pick_tx_queue(dev, skb);
 
<span class="p_del">-	if (po-&gt;has_vnet_hdr) {</span>
<span class="p_add">+	if (has_vnet_hdr) {</span>
 		if (vnet_hdr.flags &amp; VIRTIO_NET_HDR_F_NEEDS_CSUM) {
 			u16 s = __virtio16_to_cpu(vio_le(), vnet_hdr.csum_start);
 			u16 o = __virtio16_to_cpu(vio_le(), vnet_hdr.csum_offset);
<span class="p_chunk">@@ -2938,13 +2946,15 @@</span> <span class="p_context"> static int packet_do_bind(struct sock *sk, const char *name, int ifindex,</span>
 	int ret = 0;
 	bool unlisted = false;
 
<span class="p_del">-	if (po-&gt;fanout)</span>
<span class="p_del">-		return -EINVAL;</span>
<span class="p_del">-</span>
 	lock_sock(sk);
 	spin_lock(&amp;po-&gt;bind_lock);
 	rcu_read_lock();
 
<span class="p_add">+	if (po-&gt;fanout) {</span>
<span class="p_add">+		ret = -EINVAL;</span>
<span class="p_add">+		goto out_unlock;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	if (name) {
 		dev = dev_get_by_name_rcu(sock_net(sk), name);
 		if (!dev) {
<span class="p_header">diff --git a/net/tipc/msg.c b/net/tipc/msg.c</span>
<span class="p_header">index 8740930f0787..67bddcb2ff46 100644</span>
<span class="p_header">--- a/net/tipc/msg.c</span>
<span class="p_header">+++ b/net/tipc/msg.c</span>
<span class="p_chunk">@@ -541,7 +541,7 @@</span> <span class="p_context"> bool tipc_msg_lookup_dest(struct net *net, struct sk_buff *skb, int *err)</span>
 		return false;
 	if (msg_errcode(msg))
 		return false;
<span class="p_del">-	*err = -TIPC_ERR_NO_NAME;</span>
<span class="p_add">+	*err = TIPC_ERR_NO_NAME;</span>
 	if (skb_linearize(skb))
 		return false;
 	msg = buf_msg(skb);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



