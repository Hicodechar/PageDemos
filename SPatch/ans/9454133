
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.4,16/21] parisc: Also flush data TLB in flush_icache_page_asm - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.4,16/21] parisc: Also flush data TLB in flush_icache_page_asm</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 30, 2016, 9:27 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161130092655.669803811@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9454133/mbox/"
   >mbox</a>
|
   <a href="/patch/9454133/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9454133/">/patch/9454133/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	8D40F6071E for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 30 Nov 2016 11:33:26 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7085328478
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 30 Nov 2016 11:33:26 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 6F1E928482; Wed, 30 Nov 2016 11:33:26 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 86CDC284BB
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 30 Nov 2016 11:33:18 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1756199AbcK3Jak (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 30 Nov 2016 04:30:40 -0500
Received: from mail.linuxfoundation.org ([140.211.169.12]:60402 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753677AbcK3J2S (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 30 Nov 2016 04:28:18 -0500
Received: from localhost (pes75-3-78-192-101-3.fbxo.proxad.net
	[78.192.101.3])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id 8605F93E;
	Wed, 30 Nov 2016 09:28:17 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, John David Anglin &lt;dave.anglin@bell.net&gt;,
	Helge Deller &lt;deller@gmx.de&gt;
Subject: [PATCH 4.4 16/21] parisc: Also flush data TLB in
	flush_icache_page_asm
Date: Wed, 30 Nov 2016 10:27:32 +0100
Message-Id: &lt;20161130092655.669803811@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.10.2
In-Reply-To: &lt;20161130092654.890709900@linuxfoundation.org&gt;
References: &lt;20161130092654.890709900@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Nov. 30, 2016, 9:27 a.m.</div>
<pre class="content">
4.4-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: John David Anglin &lt;dave.anglin@bell.net&gt;</span>

commit 5035b230e7b67ac12691ed3b5495bbb617027b68 upstream.

This is the second issue I noticed in reviewing the parisc TLB code.

The fic instruction may use either the instruction or data TLB in
flushing the instruction cache.  Thus, on machines with a split TLB, we
should also flush the data TLB after setting up the temporary alias
registers.

Although this has no functional impact, I changed the pdtlb and pitlb
instructions to consistently use the index register %r0.  These
instructions do not support integer displacements.

Tested on rp3440 and c8000.
<span class="signed-off-by">
Signed-off-by: John David Anglin  &lt;dave.anglin@bell.net&gt;</span>
<span class="signed-off-by">Signed-off-by: Helge Deller &lt;deller@gmx.de&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>

---
 arch/parisc/kernel/pacache.S |   37 ++++++++++++++++++++++---------------
 1 file changed, 22 insertions(+), 15 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/parisc/kernel/pacache.S</span>
<span class="p_header">+++ b/arch/parisc/kernel/pacache.S</span>
<span class="p_chunk">@@ -96,7 +96,7 @@</span> <span class="p_context"> fitmanyloop:					/* Loop if LOOP &gt;= 2 */</span>
 
 fitmanymiddle:					/* Loop if LOOP &gt;= 2 */
 	addib,COND(&gt;)		-1, %r31, fitmanymiddle	/* Adjusted inner loop decr */
<span class="p_del">-	pitlbe		0(%sr1, %r28)</span>
<span class="p_add">+	pitlbe		%r0(%sr1, %r28)</span>
 	pitlbe,m	%arg1(%sr1, %r28)	/* Last pitlbe and addr adjust */
 	addib,COND(&gt;)		-1, %r29, fitmanymiddle	/* Middle loop decr */
 	copy		%arg3, %r31		/* Re-init inner loop count */
<span class="p_chunk">@@ -139,7 +139,7 @@</span> <span class="p_context"> fdtmanyloop:					/* Loop if LOOP &gt;= 2 */</span>
 
 fdtmanymiddle:					/* Loop if LOOP &gt;= 2 */
 	addib,COND(&gt;)		-1, %r31, fdtmanymiddle	/* Adjusted inner loop decr */
<span class="p_del">-	pdtlbe		0(%sr1, %r28)</span>
<span class="p_add">+	pdtlbe		%r0(%sr1, %r28)</span>
 	pdtlbe,m	%arg1(%sr1, %r28)	/* Last pdtlbe and addr adjust */
 	addib,COND(&gt;)		-1, %r29, fdtmanymiddle	/* Middle loop decr */
 	copy		%arg3, %r31		/* Re-init inner loop count */
<span class="p_chunk">@@ -620,12 +620,12 @@</span> <span class="p_context"> ENTRY(copy_user_page_asm)</span>
 	/* Purge any old translations */
 
 #ifdef CONFIG_PA20
<span class="p_del">-	pdtlb,l		0(%r28)</span>
<span class="p_del">-	pdtlb,l		0(%r29)</span>
<span class="p_add">+	pdtlb,l		%r0(%r28)</span>
<span class="p_add">+	pdtlb,l		%r0(%r29)</span>
 #else
 	tlb_lock	%r20,%r21,%r22
<span class="p_del">-	pdtlb		0(%r28)</span>
<span class="p_del">-	pdtlb		0(%r29)</span>
<span class="p_add">+	pdtlb		%r0(%r28)</span>
<span class="p_add">+	pdtlb		%r0(%r29)</span>
 	tlb_unlock	%r20,%r21,%r22
 #endif
 
<span class="p_chunk">@@ -768,10 +768,10 @@</span> <span class="p_context"> ENTRY(clear_user_page_asm)</span>
 	/* Purge any old translation */
 
 #ifdef CONFIG_PA20
<span class="p_del">-	pdtlb,l		0(%r28)</span>
<span class="p_add">+	pdtlb,l		%r0(%r28)</span>
 #else
 	tlb_lock	%r20,%r21,%r22
<span class="p_del">-	pdtlb		0(%r28)</span>
<span class="p_add">+	pdtlb		%r0(%r28)</span>
 	tlb_unlock	%r20,%r21,%r22
 #endif
 
<span class="p_chunk">@@ -852,10 +852,10 @@</span> <span class="p_context"> ENTRY(flush_dcache_page_asm)</span>
 	/* Purge any old translation */
 
 #ifdef CONFIG_PA20
<span class="p_del">-	pdtlb,l		0(%r28)</span>
<span class="p_add">+	pdtlb,l		%r0(%r28)</span>
 #else
 	tlb_lock	%r20,%r21,%r22
<span class="p_del">-	pdtlb		0(%r28)</span>
<span class="p_add">+	pdtlb		%r0(%r28)</span>
 	tlb_unlock	%r20,%r21,%r22
 #endif
 
<span class="p_chunk">@@ -892,10 +892,10 @@</span> <span class="p_context"> ENTRY(flush_dcache_page_asm)</span>
 	sync
 
 #ifdef CONFIG_PA20
<span class="p_del">-	pdtlb,l		0(%r25)</span>
<span class="p_add">+	pdtlb,l		%r0(%r25)</span>
 #else
 	tlb_lock	%r20,%r21,%r22
<span class="p_del">-	pdtlb		0(%r25)</span>
<span class="p_add">+	pdtlb		%r0(%r25)</span>
 	tlb_unlock	%r20,%r21,%r22
 #endif
 
<span class="p_chunk">@@ -925,13 +925,18 @@</span> <span class="p_context"> ENTRY(flush_icache_page_asm)</span>
 	depwi		0, 31,PAGE_SHIFT, %r28	/* Clear any offset bits */
 #endif
 
<span class="p_del">-	/* Purge any old translation */</span>
<span class="p_add">+	/* Purge any old translation.  Note that the FIC instruction</span>
<span class="p_add">+	 * may use either the instruction or data TLB.  Given that we</span>
<span class="p_add">+	 * have a flat address space, it&#39;s not clear which TLB will be</span>
<span class="p_add">+	 * used.  So, we purge both entries.  */</span>
 
 #ifdef CONFIG_PA20
<span class="p_add">+	pdtlb,l		%r0(%r28)</span>
 	pitlb,l         %r0(%sr4,%r28)
 #else
 	tlb_lock        %r20,%r21,%r22
<span class="p_del">-	pitlb           (%sr4,%r28)</span>
<span class="p_add">+	pdtlb		%r0(%r28)</span>
<span class="p_add">+	pitlb           %r0(%sr4,%r28)</span>
 	tlb_unlock      %r20,%r21,%r22
 #endif
 
<span class="p_chunk">@@ -970,10 +975,12 @@</span> <span class="p_context"> ENTRY(flush_icache_page_asm)</span>
 	sync
 
 #ifdef CONFIG_PA20
<span class="p_add">+	pdtlb,l		%r0(%r28)</span>
 	pitlb,l         %r0(%sr4,%r25)
 #else
 	tlb_lock        %r20,%r21,%r22
<span class="p_del">-	pitlb           (%sr4,%r25)</span>
<span class="p_add">+	pdtlb		%r0(%r28)</span>
<span class="p_add">+	pitlb           %r0(%sr4,%r25)</span>
 	tlb_unlock      %r20,%r21,%r22
 #endif
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



