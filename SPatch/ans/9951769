
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[GIT,PULL] x86 fixes - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [GIT,PULL] x86 fixes</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 13, 2017, 5:54 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170913175435.uxpahmd6ek7476mx@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9951769/mbox/"
   >mbox</a>
|
   <a href="/patch/9951769/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9951769/">/patch/9951769/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	BE66160360 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 13 Sep 2017 17:54:50 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id AA06B28CC3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 13 Sep 2017 17:54:50 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 9EA9A28CC9; Wed, 13 Sep 2017 17:54:50 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 437A028CC3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 13 Sep 2017 17:54:48 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751546AbdIMRyp (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 13 Sep 2017 13:54:45 -0400
Received: from mail-wr0-f194.google.com ([209.85.128.194]:36374 &quot;EHLO
	mail-wr0-f194.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751507AbdIMRyk (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 13 Sep 2017 13:54:40 -0400
Received: by mail-wr0-f194.google.com with SMTP id g50so465039wra.3
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Wed, 13 Sep 2017 10:54:39 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=sender:date:from:to:cc:subject:message-id:mime-version
	:content-disposition:user-agent;
	bh=ZgDcShu+qFCpXSkmZ7QSI42w+lxR49SUXykNnYNAe9o=;
	b=I1h9fQYqBvJ+S1ciuKad6eQ+7+j4OinNbIbWowjZXWwAhl+GU6Xy7owaN+IgCcafoY
	nOiFR9v4A6S0w40nyXfbfEhKhTBj+g59Bro5cX069p6t+VctoXiPxL0M50BxVRM2eYSy
	oEhwpYyp7wuv8yopxDpf2TzO1rMB/TihH4AIWtBUDXO8c10gcCRbJFf82aRFPb4Lm6a2
	xbUiVZTn9S1wtOJRCAqiNGqv/9YrWtvvpCTXz3VcFxa9y3yH2RKatEW5et3F0s5pvLeK
	CVRhkc/FTvaKlSmecGyVvk047ra1fPOv7qcAtXvEmQuBrXhiHOuBThvCGLkFr0xjgntT
	whog==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:sender:date:from:to:cc:subject:message-id
	:mime-version:content-disposition:user-agent;
	bh=ZgDcShu+qFCpXSkmZ7QSI42w+lxR49SUXykNnYNAe9o=;
	b=A+DlhJy6tl70i7lPo1tkj1zsrWWhYSFpgD47CQa2+kVESdaLCWBQ3K15cZ0Adpyrsj
	IsNir4szW79JwwueollKmfc6N+uM0SGo8QGE8ZPlakTnRbh+Po2DzTgbmCfPXIq04CTb
	Lp5MbIsEN6UP566xaVEC4asPvOJvzLslloi0pIsYHyJoa3d/p0yCVqRUGKy3ScsmphaI
	rMXWH8nT8QzCrQILcwcoxFXwHmaM+DiBwvFXjvY1Nj/YlPyX1lcIGHpRIFWed5+S50cI
	SAYu7TBfORppIO4IDljV2EjcX3rHX3CLimtuySRyiy/xI0cTIYbE/tM3A9swE0XY8DZk
	1+BA==
X-Gm-Message-State: AHPjjUjvz8TkY/yeStaeR1quJX8HM0GJHe30nRBnh2jMAZG5pGwr0qth
	NnBjyBekZLvDgA==
X-Google-Smtp-Source: ADKCNb5ysx+hQlteF5csuMdSfoOeJ96ofkgD7gAOVXE1sNy06pAirXfGK8kTRitMO8gHyvtYI8SSpg==
X-Received: by 10.223.134.248 with SMTP id 53mr17754143wry.57.1505325278610; 
	Wed, 13 Sep 2017 10:54:38 -0700 (PDT)
Received: from gmail.com (2E8B0CD5.catv.pool.telekom.hu. [46.139.12.213])
	by smtp.gmail.com with ESMTPSA id
	l15sm2677193wmd.23.2017.09.13.10.54.37
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Wed, 13 Sep 2017 10:54:37 -0700 (PDT)
Date: Wed, 13 Sep 2017 19:54:35 +0200
From: Ingo Molnar &lt;mingo@kernel.org&gt;
To: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: linux-kernel@vger.kernel.org, Thomas Gleixner &lt;tglx@linutronix.de&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;,
	Peter Zijlstra &lt;a.p.zijlstra@chello.nl&gt;,
	Andy Lutomirski &lt;luto@kernel.org&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;, Borislav Petkov &lt;bp@alien8.de&gt;
Subject: [GIT PULL] x86 fixes
Message-ID: &lt;20170913175435.uxpahmd6ek7476mx@gmail.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: NeoMutt/20170113 (1.7.2)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a> - Sept. 13, 2017, 5:54 p.m.</div>
<pre class="content">
Linus,

Please pull the latest x86-urgent-for-linus git tree from:

   git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git x86-urgent-for-linus

   # HEAD: 1278f58cdee63cfbb04e5624474a291c81a7a13b x86/hyper-v: Remove duplicated HV_X64_EX_PROCESSOR_MASKS_RECOMMENDED definition

The main changes are the PCID fixes from Andy, but there&#39;s also two hyperv fixes 
and two paravirt updates.

  out-of-topic modifications in x86-urgent-for-linus:
  -----------------------------------------------------
  MAINTAINERS                        # 30c1bbffe629: paravirt: Switch maintainer

 Thanks,

	Ingo

------------------&gt;
Andy Lutomirski (3):
      x86/mm: Get rid of VM_BUG_ON in switch_tlb_irqs_off()
      x86/hibernate/64: Mask off CR3&#39;s PCID bits in the saved CR3
      x86/mm/64: Initialize CR4.PCIDE early

Juergen Gross (2):
      x86/paravirt: Remove no longer used paravirt functions
      paravirt: Switch maintainer

K. Y. Srinivasan (1):
      x86/hyper-V: Allocate the IDT entry early in boot

Vitaly Kuznetsov (1):
      x86/hyper-v: Remove duplicated HV_X64_EX_PROCESSOR_MASKS_RECOMMENDED definition


 MAINTAINERS                           |  4 +--
 arch/x86/include/asm/desc.h           |  3 +--
 arch/x86/include/asm/paravirt.h       | 37 --------------------------
 arch/x86/include/asm/paravirt_types.h |  9 -------
 arch/x86/include/asm/pgtable.h        | 27 +++----------------
 arch/x86/include/asm/special_insns.h  | 10 +++----
 arch/x86/include/uapi/asm/hyperv.h    |  6 -----
 arch/x86/kernel/cpu/common.c          | 49 +++++------------------------------
 arch/x86/kernel/cpu/mshyperv.c        |  4 +--
 arch/x86/kernel/paravirt.c            |  5 ----
 arch/x86/kernel/setup.c               |  5 +++-
 arch/x86/kernel/smpboot.c             |  8 +++---
 arch/x86/kvm/vmx.c                    |  2 +-
 arch/x86/mm/init.c                    | 34 ++++++++++++++++++++++++
 arch/x86/mm/pgtable.c                 |  7 +----
 arch/x86/mm/tlb.c                     | 22 +++++++++++++++-
 arch/x86/power/hibernate_64.c         | 21 ++++++++++++++-
 arch/x86/xen/enlighten_pv.c           |  2 --
 arch/x86/xen/mmu_pv.c                 |  2 --
 19 files changed, 107 insertions(+), 150 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/MAINTAINERS b/MAINTAINERS</span>
<span class="p_header">index f46a3225e398..14e76a41b302 100644</span>
<span class="p_header">--- a/MAINTAINERS</span>
<span class="p_header">+++ b/MAINTAINERS</span>
<span class="p_chunk">@@ -10129,7 +10129,7 @@</span> <span class="p_context"> F:	include/uapi/linux/ppdev.h</span>
 F:	Documentation/parport*.txt
 
 PARAVIRT_OPS INTERFACE
<span class="p_del">-M:	Jeremy Fitzhardinge &lt;jeremy@goop.org&gt;</span>
<span class="p_add">+M:	Juergen Gross &lt;jgross@suse.com&gt;</span>
 M:	Chris Wright &lt;chrisw@sous-sol.org&gt;
 M:	Alok Kataria &lt;akataria@vmware.com&gt;
 M:	Rusty Russell &lt;rusty@rustcorp.com.au&gt;
<span class="p_chunk">@@ -10137,7 +10137,7 @@</span> <span class="p_context"> L:	virtualization@lists.linux-foundation.org</span>
 S:	Supported
 F:	Documentation/virtual/paravirt_ops.txt
 F:	arch/*/kernel/paravirt*
<span class="p_del">-F:	arch/*/include/asm/paravirt.h</span>
<span class="p_add">+F:	arch/*/include/asm/paravirt*.h</span>
 F:	include/linux/hypervisor.h
 
 PARIDE DRIVERS FOR PARALLEL PORT IDE DEVICES
<span class="p_header">diff --git a/arch/x86/include/asm/desc.h b/arch/x86/include/asm/desc.h</span>
<span class="p_header">index 1a2ba368da39..9d0e13738ed3 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/desc.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/desc.h</span>
<span class="p_chunk">@@ -121,7 +121,6 @@</span> <span class="p_context"> static inline int desc_empty(const void *ptr)</span>
 #define load_ldt(ldt)				asm volatile(&quot;lldt %0&quot;::&quot;m&quot; (ldt))
 
 #define store_gdt(dtr)				native_store_gdt(dtr)
<span class="p_del">-#define store_idt(dtr)				native_store_idt(dtr)</span>
 #define store_tr(tr)				(tr = native_store_tr())
 
 #define load_TLS(t, cpu)			native_load_tls(t, cpu)
<span class="p_chunk">@@ -228,7 +227,7 @@</span> <span class="p_context"> static inline void native_store_gdt(struct desc_ptr *dtr)</span>
 	asm volatile(&quot;sgdt %0&quot;:&quot;=m&quot; (*dtr));
 }
 
<span class="p_del">-static inline void native_store_idt(struct desc_ptr *dtr)</span>
<span class="p_add">+static inline void store_idt(struct desc_ptr *dtr)</span>
 {
 	asm volatile(&quot;sidt %0&quot;:&quot;=m&quot; (*dtr));
 }
<span class="p_header">diff --git a/arch/x86/include/asm/paravirt.h b/arch/x86/include/asm/paravirt.h</span>
<span class="p_header">index c25dd22f7c70..12deec722cf0 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/paravirt.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/paravirt.h</span>
<span class="p_chunk">@@ -71,11 +71,6 @@</span> <span class="p_context"> static inline void write_cr3(unsigned long x)</span>
 	PVOP_VCALL1(pv_mmu_ops.write_cr3, x);
 }
 
<span class="p_del">-static inline unsigned long __read_cr4(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return PVOP_CALL0(unsigned long, pv_cpu_ops.read_cr4);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline void __write_cr4(unsigned long x)
 {
 	PVOP_VCALL1(pv_cpu_ops.write_cr4, x);
<span class="p_chunk">@@ -228,10 +223,6 @@</span> <span class="p_context"> static inline void set_ldt(const void *addr, unsigned entries)</span>
 {
 	PVOP_VCALL2(pv_cpu_ops.set_ldt, addr, entries);
 }
<span class="p_del">-static inline void store_idt(struct desc_ptr *dtr)</span>
<span class="p_del">-{</span>
<span class="p_del">-	PVOP_VCALL1(pv_cpu_ops.store_idt, dtr);</span>
<span class="p_del">-}</span>
 static inline unsigned long paravirt_store_tr(void)
 {
 	return PVOP_CALL0(unsigned long, pv_cpu_ops.store_tr);
<span class="p_chunk">@@ -365,12 +356,6 @@</span> <span class="p_context"> static inline void paravirt_release_p4d(unsigned long pfn)</span>
 	PVOP_VCALL1(pv_mmu_ops.release_p4d, pfn);
 }
 
<span class="p_del">-static inline void pte_update(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_del">-			      pte_t *ptep)</span>
<span class="p_del">-{</span>
<span class="p_del">-	PVOP_VCALL3(pv_mmu_ops.pte_update, mm, addr, ptep);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline pte_t __pte(pteval_t val)
 {
 	pteval_t ret;
<span class="p_chunk">@@ -472,28 +457,6 @@</span> <span class="p_context"> static inline void set_pte_at(struct mm_struct *mm, unsigned long addr,</span>
 		PVOP_VCALL4(pv_mmu_ops.set_pte_at, mm, addr, ptep, pte.pte);
 }
 
<span class="p_del">-static inline void set_pmd_at(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_del">-			      pmd_t *pmdp, pmd_t pmd)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (sizeof(pmdval_t) &gt; sizeof(long))</span>
<span class="p_del">-		/* 5 arg words */</span>
<span class="p_del">-		pv_mmu_ops.set_pmd_at(mm, addr, pmdp, pmd);</span>
<span class="p_del">-	else</span>
<span class="p_del">-		PVOP_VCALL4(pv_mmu_ops.set_pmd_at, mm, addr, pmdp,</span>
<span class="p_del">-			    native_pmd_val(pmd));</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void set_pud_at(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_del">-			      pud_t *pudp, pud_t pud)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (sizeof(pudval_t) &gt; sizeof(long))</span>
<span class="p_del">-		/* 5 arg words */</span>
<span class="p_del">-		pv_mmu_ops.set_pud_at(mm, addr, pudp, pud);</span>
<span class="p_del">-	else</span>
<span class="p_del">-		PVOP_VCALL4(pv_mmu_ops.set_pud_at, mm, addr, pudp,</span>
<span class="p_del">-			    native_pud_val(pud));</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline void set_pmd(pmd_t *pmdp, pmd_t pmd)
 {
 	pmdval_t val = native_pmd_val(pmd);
<span class="p_header">diff --git a/arch/x86/include/asm/paravirt_types.h b/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_header">index 6b64fc6367f2..42873edd9f9d 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_chunk">@@ -107,7 +107,6 @@</span> <span class="p_context"> struct pv_cpu_ops {</span>
 	unsigned long (*read_cr0)(void);
 	void (*write_cr0)(unsigned long);
 
<span class="p_del">-	unsigned long (*read_cr4)(void);</span>
 	void (*write_cr4)(unsigned long);
 
 #ifdef CONFIG_X86_64
<span class="p_chunk">@@ -119,8 +118,6 @@</span> <span class="p_context"> struct pv_cpu_ops {</span>
 	void (*load_tr_desc)(void);
 	void (*load_gdt)(const struct desc_ptr *);
 	void (*load_idt)(const struct desc_ptr *);
<span class="p_del">-	/* store_gdt has been removed. */</span>
<span class="p_del">-	void (*store_idt)(struct desc_ptr *);</span>
 	void (*set_ldt)(const void *desc, unsigned entries);
 	unsigned long (*store_tr)(void);
 	void (*load_tls)(struct thread_struct *t, unsigned int cpu);
<span class="p_chunk">@@ -245,12 +242,6 @@</span> <span class="p_context"> struct pv_mmu_ops {</span>
 	void (*set_pte_at)(struct mm_struct *mm, unsigned long addr,
 			   pte_t *ptep, pte_t pteval);
 	void (*set_pmd)(pmd_t *pmdp, pmd_t pmdval);
<span class="p_del">-	void (*set_pmd_at)(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_del">-			   pmd_t *pmdp, pmd_t pmdval);</span>
<span class="p_del">-	void (*set_pud_at)(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_del">-			   pud_t *pudp, pud_t pudval);</span>
<span class="p_del">-	void (*pte_update)(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_del">-			   pte_t *ptep);</span>
 
 	pte_t (*ptep_modify_prot_start)(struct mm_struct *mm, unsigned long addr,
 					pte_t *ptep);
<span class="p_header">diff --git a/arch/x86/include/asm/pgtable.h b/arch/x86/include/asm/pgtable.h</span>
<span class="p_header">index 5b4c44d419c5..b714934512b3 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -55,8 +55,6 @@</span> <span class="p_context"> extern pmdval_t early_pmd_flags;</span>
 #else  /* !CONFIG_PARAVIRT */
 #define set_pte(ptep, pte)		native_set_pte(ptep, pte)
 #define set_pte_at(mm, addr, ptep, pte)	native_set_pte_at(mm, addr, ptep, pte)
<span class="p_del">-#define set_pmd_at(mm, addr, pmdp, pmd)	native_set_pmd_at(mm, addr, pmdp, pmd)</span>
<span class="p_del">-#define set_pud_at(mm, addr, pudp, pud)	native_set_pud_at(mm, addr, pudp, pud)</span>
 
 #define set_pte_atomic(ptep, pte)					\
 	native_set_pte_atomic(ptep, pte)
<span class="p_chunk">@@ -87,8 +85,6 @@</span> <span class="p_context"> extern pmdval_t early_pmd_flags;</span>
 #define pte_clear(mm, addr, ptep)	native_pte_clear(mm, addr, ptep)
 #define pmd_clear(pmd)			native_pmd_clear(pmd)
 
<span class="p_del">-#define pte_update(mm, addr, ptep)              do { } while (0)</span>
<span class="p_del">-</span>
 #define pgd_val(x)	native_pgd_val(x)
 #define __pgd(x)	native_make_pgd(x)
 
<span class="p_chunk">@@ -979,31 +975,18 @@</span> <span class="p_context"> static inline void native_set_pte_at(struct mm_struct *mm, unsigned long addr,</span>
 	native_set_pte(ptep, pte);
 }
 
<span class="p_del">-static inline void native_set_pmd_at(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_del">-				     pmd_t *pmdp , pmd_t pmd)</span>
<span class="p_add">+static inline void set_pmd_at(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_add">+			      pmd_t *pmdp, pmd_t pmd)</span>
 {
 	native_set_pmd(pmdp, pmd);
 }
 
<span class="p_del">-static inline void native_set_pud_at(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_del">-				     pud_t *pudp, pud_t pud)</span>
<span class="p_add">+static inline void set_pud_at(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_add">+			      pud_t *pudp, pud_t pud)</span>
 {
 	native_set_pud(pudp, pud);
 }
 
<span class="p_del">-#ifndef CONFIG_PARAVIRT</span>
<span class="p_del">-/*</span>
<span class="p_del">- * Rules for using pte_update - it must be called after any PTE update which</span>
<span class="p_del">- * has not been done using the set_pte / clear_pte interfaces.  It is used by</span>
<span class="p_del">- * shadow mode hypervisors to resynchronize the shadow page tables.  Kernel PTE</span>
<span class="p_del">- * updates should either be sets, clears, or set_pte_atomic for P-&gt;P</span>
<span class="p_del">- * transitions, which means this hook should only be called for user PTEs.</span>
<span class="p_del">- * This hook implies a P-&gt;P protection or access change has taken place, which</span>
<span class="p_del">- * requires a subsequent TLB flush.</span>
<span class="p_del">- */</span>
<span class="p_del">-#define pte_update(mm, addr, ptep)		do { } while (0)</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
 /*
  * We only update the dirty/accessed state if we set
  * the dirty bit by hand in the kernel, since the hardware
<span class="p_chunk">@@ -1031,7 +1014,6 @@</span> <span class="p_context"> static inline pte_t ptep_get_and_clear(struct mm_struct *mm, unsigned long addr,</span>
 				       pte_t *ptep)
 {
 	pte_t pte = native_ptep_get_and_clear(ptep);
<span class="p_del">-	pte_update(mm, addr, ptep);</span>
 	return pte;
 }
 
<span class="p_chunk">@@ -1058,7 +1040,6 @@</span> <span class="p_context"> static inline void ptep_set_wrprotect(struct mm_struct *mm,</span>
 				      unsigned long addr, pte_t *ptep)
 {
 	clear_bit(_PAGE_BIT_RW, (unsigned long *)&amp;ptep-&gt;pte);
<span class="p_del">-	pte_update(mm, addr, ptep);</span>
 }
 
 #define flush_tlb_fix_spurious_fault(vma, address) do { } while (0)
<span class="p_header">diff --git a/arch/x86/include/asm/special_insns.h b/arch/x86/include/asm/special_insns.h</span>
<span class="p_header">index 9efaabf5b54b..a24dfcf79f4a 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/special_insns.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/special_insns.h</span>
<span class="p_chunk">@@ -135,6 +135,11 @@</span> <span class="p_context"> static inline void native_wbinvd(void)</span>
 
 extern asmlinkage void native_load_gs_index(unsigned);
 
<span class="p_add">+static inline unsigned long __read_cr4(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return native_read_cr4();</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 #ifdef CONFIG_PARAVIRT
 #include &lt;asm/paravirt.h&gt;
 #else
<span class="p_chunk">@@ -173,11 +178,6 @@</span> <span class="p_context"> static inline void write_cr3(unsigned long x)</span>
 	native_write_cr3(x);
 }
 
<span class="p_del">-static inline unsigned long __read_cr4(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return native_read_cr4();</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline void __write_cr4(unsigned long x)
 {
 	native_write_cr4(x);
<span class="p_header">diff --git a/arch/x86/include/uapi/asm/hyperv.h b/arch/x86/include/uapi/asm/hyperv.h</span>
<span class="p_header">index 7032f4d8dff3..f65d12504e80 100644</span>
<span class="p_header">--- a/arch/x86/include/uapi/asm/hyperv.h</span>
<span class="p_header">+++ b/arch/x86/include/uapi/asm/hyperv.h</span>
<span class="p_chunk">@@ -153,12 +153,6 @@</span> <span class="p_context"></span>
 #define HV_X64_EX_PROCESSOR_MASKS_RECOMMENDED	(1 &lt;&lt; 11)
 
 /*
<span class="p_del">- * HV_VP_SET available</span>
<span class="p_del">- */</span>
<span class="p_del">-#define HV_X64_EX_PROCESSOR_MASKS_RECOMMENDED	(1 &lt;&lt; 11)</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
<span class="p_del">-/*</span>
  * Crash notification flag.
  */
 #define HV_CRASH_CTL_CRASH_NOTIFY (1ULL &lt;&lt; 63)
<span class="p_header">diff --git a/arch/x86/kernel/cpu/common.c b/arch/x86/kernel/cpu/common.c</span>
<span class="p_header">index fb1d3358a4af..775f10100d7f 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/common.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/common.c</span>
<span class="p_chunk">@@ -169,21 +169,21 @@</span> <span class="p_context"> static int __init x86_mpx_setup(char *s)</span>
 __setup(&quot;nompx&quot;, x86_mpx_setup);
 
 #ifdef CONFIG_X86_64
<span class="p_del">-static int __init x86_pcid_setup(char *s)</span>
<span class="p_add">+static int __init x86_nopcid_setup(char *s)</span>
 {
<span class="p_del">-	/* require an exact match without trailing characters */</span>
<span class="p_del">-	if (strlen(s))</span>
<span class="p_del">-		return 0;</span>
<span class="p_add">+	/* nopcid doesn&#39;t accept parameters */</span>
<span class="p_add">+	if (s)</span>
<span class="p_add">+		return -EINVAL;</span>
 
 	/* do not emit a message if the feature is not present */
 	if (!boot_cpu_has(X86_FEATURE_PCID))
<span class="p_del">-		return 1;</span>
<span class="p_add">+		return 0;</span>
 
 	setup_clear_cpu_cap(X86_FEATURE_PCID);
 	pr_info(&quot;nopcid: PCID feature disabled\n&quot;);
<span class="p_del">-	return 1;</span>
<span class="p_add">+	return 0;</span>
 }
<span class="p_del">-__setup(&quot;nopcid&quot;, x86_pcid_setup);</span>
<span class="p_add">+early_param(&quot;nopcid&quot;, x86_nopcid_setup);</span>
 #endif
 
 static int __init x86_noinvpcid_setup(char *s)
<span class="p_chunk">@@ -329,38 +329,6 @@</span> <span class="p_context"> static __always_inline void setup_smap(struct cpuinfo_x86 *c)</span>
 	}
 }
 
<span class="p_del">-static void setup_pcid(struct cpuinfo_x86 *c)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (cpu_has(c, X86_FEATURE_PCID)) {</span>
<span class="p_del">-		if (cpu_has(c, X86_FEATURE_PGE)) {</span>
<span class="p_del">-			/*</span>
<span class="p_del">-			 * We&#39;d like to use cr4_set_bits_and_update_boot(),</span>
<span class="p_del">-			 * but we can&#39;t.  CR4.PCIDE is special and can only</span>
<span class="p_del">-			 * be set in long mode, and the early CPU init code</span>
<span class="p_del">-			 * doesn&#39;t know this and would try to restore CR4.PCIDE</span>
<span class="p_del">-			 * prior to entering long mode.</span>
<span class="p_del">-			 *</span>
<span class="p_del">-			 * Instead, we rely on the fact that hotplug, resume,</span>
<span class="p_del">-			 * etc all fully restore CR4 before they write anything</span>
<span class="p_del">-			 * that could have nonzero PCID bits to CR3.  CR4.PCIDE</span>
<span class="p_del">-			 * has no effect on the page tables themselves, so we</span>
<span class="p_del">-			 * don&#39;t need it to be restored early.</span>
<span class="p_del">-			 */</span>
<span class="p_del">-			cr4_set_bits(X86_CR4_PCIDE);</span>
<span class="p_del">-		} else {</span>
<span class="p_del">-			/*</span>
<span class="p_del">-			 * flush_tlb_all(), as currently implemented, won&#39;t</span>
<span class="p_del">-			 * work if PCID is on but PGE is not.  Since that</span>
<span class="p_del">-			 * combination doesn&#39;t exist on real hardware, there&#39;s</span>
<span class="p_del">-			 * no reason to try to fully support it, but it&#39;s</span>
<span class="p_del">-			 * polite to avoid corrupting data if we&#39;re on</span>
<span class="p_del">-			 * an improperly configured VM.</span>
<span class="p_del">-			 */</span>
<span class="p_del">-			clear_cpu_cap(c, X86_FEATURE_PCID);</span>
<span class="p_del">-		}</span>
<span class="p_del">-	}</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 /*
  * Protection Keys are not available in 32-bit mode.
  */
<span class="p_chunk">@@ -1175,9 +1143,6 @@</span> <span class="p_context"> static void identify_cpu(struct cpuinfo_x86 *c)</span>
 	setup_smep(c);
 	setup_smap(c);
 
<span class="p_del">-	/* Set up PCID */</span>
<span class="p_del">-	setup_pcid(c);</span>
<span class="p_del">-</span>
 	/*
 	 * The vendor-specific functions might have changed features.
 	 * Now we do &quot;generic changes.&quot;
<span class="p_header">diff --git a/arch/x86/kernel/cpu/mshyperv.c b/arch/x86/kernel/cpu/mshyperv.c</span>
<span class="p_header">index 3b3f713e15e5..236324e83a3a 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/mshyperv.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/mshyperv.c</span>
<span class="p_chunk">@@ -59,8 +59,6 @@</span> <span class="p_context"> void hyperv_vector_handler(struct pt_regs *regs)</span>
 void hv_setup_vmbus_irq(void (*handler)(void))
 {
 	vmbus_handler = handler;
<span class="p_del">-	/* Setup the IDT for hypervisor callback */</span>
<span class="p_del">-	alloc_intr_gate(HYPERVISOR_CALLBACK_VECTOR, hyperv_callback_vector);</span>
 }
 
 void hv_remove_vmbus_irq(void)
<span class="p_chunk">@@ -251,6 +249,8 @@</span> <span class="p_context"> static void __init ms_hyperv_init_platform(void)</span>
 	 */
 	x86_platform.apic_post_init = hyperv_init;
 	hyperv_setup_mmu_ops();
<span class="p_add">+	/* Setup the IDT for hypervisor callback */</span>
<span class="p_add">+	alloc_intr_gate(HYPERVISOR_CALLBACK_VECTOR, hyperv_callback_vector);</span>
 #endif
 }
 
<span class="p_header">diff --git a/arch/x86/kernel/paravirt.c b/arch/x86/kernel/paravirt.c</span>
<span class="p_header">index a14df9eecfed..19a3e8f961c7 100644</span>
<span class="p_header">--- a/arch/x86/kernel/paravirt.c</span>
<span class="p_header">+++ b/arch/x86/kernel/paravirt.c</span>
<span class="p_chunk">@@ -327,7 +327,6 @@</span> <span class="p_context"> __visible struct pv_cpu_ops pv_cpu_ops = {</span>
 	.set_debugreg = native_set_debugreg,
 	.read_cr0 = native_read_cr0,
 	.write_cr0 = native_write_cr0,
<span class="p_del">-	.read_cr4 = native_read_cr4,</span>
 	.write_cr4 = native_write_cr4,
 #ifdef CONFIG_X86_64
 	.read_cr8 = native_read_cr8,
<span class="p_chunk">@@ -343,7 +342,6 @@</span> <span class="p_context"> __visible struct pv_cpu_ops pv_cpu_ops = {</span>
 	.set_ldt = native_set_ldt,
 	.load_gdt = native_load_gdt,
 	.load_idt = native_load_idt,
<span class="p_del">-	.store_idt = native_store_idt,</span>
 	.store_tr = native_store_tr,
 	.load_tls = native_load_tls,
 #ifdef CONFIG_X86_64
<span class="p_chunk">@@ -411,8 +409,6 @@</span> <span class="p_context"> struct pv_mmu_ops pv_mmu_ops __ro_after_init = {</span>
 	.set_pte = native_set_pte,
 	.set_pte_at = native_set_pte_at,
 	.set_pmd = native_set_pmd,
<span class="p_del">-	.set_pmd_at = native_set_pmd_at,</span>
<span class="p_del">-	.pte_update = paravirt_nop,</span>
 
 	.ptep_modify_prot_start = __ptep_modify_prot_start,
 	.ptep_modify_prot_commit = __ptep_modify_prot_commit,
<span class="p_chunk">@@ -424,7 +420,6 @@</span> <span class="p_context"> struct pv_mmu_ops pv_mmu_ops __ro_after_init = {</span>
 	.pmd_clear = native_pmd_clear,
 #endif
 	.set_pud = native_set_pud,
<span class="p_del">-	.set_pud_at = native_set_pud_at,</span>
 
 	.pmd_val = PTE_IDENT,
 	.make_pmd = PTE_IDENT,
<span class="p_header">diff --git a/arch/x86/kernel/setup.c b/arch/x86/kernel/setup.c</span>
<span class="p_header">index d84afb0a322d..0957dd73d127 100644</span>
<span class="p_header">--- a/arch/x86/kernel/setup.c</span>
<span class="p_header">+++ b/arch/x86/kernel/setup.c</span>
<span class="p_chunk">@@ -1178,8 +1178,11 @@</span> <span class="p_context"> void __init setup_arch(char **cmdline_p)</span>
 	 * with the current CR4 value.  This may not be necessary, but
 	 * auditing all the early-boot CR4 manipulation would be needed to
 	 * rule it out.
<span class="p_add">+	 *</span>
<span class="p_add">+	 * Mask off features that don&#39;t work outside long mode (just</span>
<span class="p_add">+	 * PCIDE for now).</span>
 	 */
<span class="p_del">-	mmu_cr4_features = __read_cr4();</span>
<span class="p_add">+	mmu_cr4_features = __read_cr4() &amp; ~X86_CR4_PCIDE;</span>
 
 	memblock_set_current_limit(get_max_mapped());
 
<span class="p_header">diff --git a/arch/x86/kernel/smpboot.c b/arch/x86/kernel/smpboot.c</span>
<span class="p_header">index cd6622c3204e..0854ff169274 100644</span>
<span class="p_header">--- a/arch/x86/kernel/smpboot.c</span>
<span class="p_header">+++ b/arch/x86/kernel/smpboot.c</span>
<span class="p_chunk">@@ -226,10 +226,12 @@</span> <span class="p_context"> static int enable_start_cpu0;</span>
 static void notrace start_secondary(void *unused)
 {
 	/*
<span class="p_del">-	 * Don&#39;t put *anything* before cpu_init(), SMP booting is too</span>
<span class="p_del">-	 * fragile that we want to limit the things done here to the</span>
<span class="p_del">-	 * most necessary things.</span>
<span class="p_add">+	 * Don&#39;t put *anything* except direct CPU state initialization</span>
<span class="p_add">+	 * before cpu_init(), SMP booting is too fragile that we want to</span>
<span class="p_add">+	 * limit the things done here to the most necessary things.</span>
 	 */
<span class="p_add">+	if (boot_cpu_has(X86_FEATURE_PCID))</span>
<span class="p_add">+		__write_cr4(__read_cr4() | X86_CR4_PCIDE);</span>
 	cpu_init();
 	x86_cpuinit.early_percpu_clock_init();
 	preempt_disable();
<span class="p_header">diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c</span>
<span class="p_header">index 4253adef9044..699704d4bc9e 100644</span>
<span class="p_header">--- a/arch/x86/kvm/vmx.c</span>
<span class="p_header">+++ b/arch/x86/kvm/vmx.c</span>
<span class="p_chunk">@@ -5192,7 +5192,7 @@</span> <span class="p_context"> static void vmx_set_constant_host_state(struct vcpu_vmx *vmx)</span>
 	vmcs_write16(HOST_SS_SELECTOR, __KERNEL_DS);  /* 22.2.4 */
 	vmcs_write16(HOST_TR_SELECTOR, GDT_ENTRY_TSS*8);  /* 22.2.4 */
 
<span class="p_del">-	native_store_idt(&amp;dt);</span>
<span class="p_add">+	store_idt(&amp;dt);</span>
 	vmcs_writel(HOST_IDTR_BASE, dt.address);   /* 22.2.4 */
 	vmx-&gt;host_idt_base = dt.address;
 
<span class="p_header">diff --git a/arch/x86/mm/init.c b/arch/x86/mm/init.c</span>
<span class="p_header">index 7777ccc0e9f9..af5c1ed21d43 100644</span>
<span class="p_header">--- a/arch/x86/mm/init.c</span>
<span class="p_header">+++ b/arch/x86/mm/init.c</span>
<span class="p_chunk">@@ -19,6 +19,7 @@</span> <span class="p_context"></span>
 #include &lt;asm/microcode.h&gt;
 #include &lt;asm/kaslr.h&gt;
 #include &lt;asm/hypervisor.h&gt;
<span class="p_add">+#include &lt;asm/cpufeature.h&gt;</span>
 
 /*
  * We need to define the tracepoints somewhere, and tlb.c
<span class="p_chunk">@@ -193,6 +194,38 @@</span> <span class="p_context"> static void __init probe_page_size_mask(void)</span>
 	}
 }
 
<span class="p_add">+static void setup_pcid(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+#ifdef CONFIG_X86_64</span>
<span class="p_add">+	if (boot_cpu_has(X86_FEATURE_PCID)) {</span>
<span class="p_add">+		if (boot_cpu_has(X86_FEATURE_PGE)) {</span>
<span class="p_add">+			/*</span>
<span class="p_add">+			 * This can&#39;t be cr4_set_bits_and_update_boot() --</span>
<span class="p_add">+			 * the trampoline code can&#39;t handle CR4.PCIDE and</span>
<span class="p_add">+			 * it wouldn&#39;t do any good anyway.  Despite the name,</span>
<span class="p_add">+			 * cr4_set_bits_and_update_boot() doesn&#39;t actually</span>
<span class="p_add">+			 * cause the bits in question to remain set all the</span>
<span class="p_add">+			 * way through the secondary boot asm.</span>
<span class="p_add">+			 *</span>
<span class="p_add">+			 * Instead, we brute-force it and set CR4.PCIDE</span>
<span class="p_add">+			 * manually in start_secondary().</span>
<span class="p_add">+			 */</span>
<span class="p_add">+			cr4_set_bits(X86_CR4_PCIDE);</span>
<span class="p_add">+		} else {</span>
<span class="p_add">+			/*</span>
<span class="p_add">+			 * flush_tlb_all(), as currently implemented, won&#39;t</span>
<span class="p_add">+			 * work if PCID is on but PGE is not.  Since that</span>
<span class="p_add">+			 * combination doesn&#39;t exist on real hardware, there&#39;s</span>
<span class="p_add">+			 * no reason to try to fully support it, but it&#39;s</span>
<span class="p_add">+			 * polite to avoid corrupting data if we&#39;re on</span>
<span class="p_add">+			 * an improperly configured VM.</span>
<span class="p_add">+			 */</span>
<span class="p_add">+			setup_clear_cpu_cap(X86_FEATURE_PCID);</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+#endif</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 #ifdef CONFIG_X86_32
 #define NR_RANGE_MR 3
 #else /* CONFIG_X86_64 */
<span class="p_chunk">@@ -592,6 +625,7 @@</span> <span class="p_context"> void __init init_mem_mapping(void)</span>
 	unsigned long end;
 
 	probe_page_size_mask();
<span class="p_add">+	setup_pcid();</span>
 
 #ifdef CONFIG_X86_64
 	end = max_pfn &lt;&lt; PAGE_SHIFT;
<span class="p_header">diff --git a/arch/x86/mm/pgtable.c b/arch/x86/mm/pgtable.c</span>
<span class="p_header">index 218834a3e9ad..b372f3442bbf 100644</span>
<span class="p_header">--- a/arch/x86/mm/pgtable.c</span>
<span class="p_header">+++ b/arch/x86/mm/pgtable.c</span>
<span class="p_chunk">@@ -426,10 +426,8 @@</span> <span class="p_context"> int ptep_set_access_flags(struct vm_area_struct *vma,</span>
 {
 	int changed = !pte_same(*ptep, entry);
 
<span class="p_del">-	if (changed &amp;&amp; dirty) {</span>
<span class="p_add">+	if (changed &amp;&amp; dirty)</span>
 		*ptep = entry;
<span class="p_del">-		pte_update(vma-&gt;vm_mm, address, ptep);</span>
<span class="p_del">-	}</span>
 
 	return changed;
 }
<span class="p_chunk">@@ -486,9 +484,6 @@</span> <span class="p_context"> int ptep_test_and_clear_young(struct vm_area_struct *vma,</span>
 		ret = test_and_clear_bit(_PAGE_BIT_ACCESSED,
 					 (unsigned long *) &amp;ptep-&gt;pte);
 
<span class="p_del">-	if (ret)</span>
<span class="p_del">-		pte_update(vma-&gt;vm_mm, addr, ptep);</span>
<span class="p_del">-</span>
 	return ret;
 }
 
<span class="p_header">diff --git a/arch/x86/mm/tlb.c b/arch/x86/mm/tlb.c</span>
<span class="p_header">index 37689a7cc03b..1ab3821f9e26 100644</span>
<span class="p_header">--- a/arch/x86/mm/tlb.c</span>
<span class="p_header">+++ b/arch/x86/mm/tlb.c</span>
<span class="p_chunk">@@ -121,8 +121,28 @@</span> <span class="p_context"> void switch_mm_irqs_off(struct mm_struct *prev, struct mm_struct *next,</span>
 	 * hypothetical buggy code that directly switches to swapper_pg_dir
 	 * without going through leave_mm() / switch_mm_irqs_off() or that
 	 * does something like write_cr3(read_cr3_pa()).
<span class="p_add">+	 *</span>
<span class="p_add">+	 * Only do this check if CONFIG_DEBUG_VM=y because __read_cr3()</span>
<span class="p_add">+	 * isn&#39;t free.</span>
 	 */
<span class="p_del">-	VM_BUG_ON(__read_cr3() != (__sme_pa(real_prev-&gt;pgd) | prev_asid));</span>
<span class="p_add">+#ifdef CONFIG_DEBUG_VM</span>
<span class="p_add">+	if (WARN_ON_ONCE(__read_cr3() !=</span>
<span class="p_add">+			 (__sme_pa(real_prev-&gt;pgd) | prev_asid))) {</span>
<span class="p_add">+		/*</span>
<span class="p_add">+		 * If we were to BUG here, we&#39;d be very likely to kill</span>
<span class="p_add">+		 * the system so hard that we don&#39;t see the call trace.</span>
<span class="p_add">+		 * Try to recover instead by ignoring the error and doing</span>
<span class="p_add">+		 * a global flush to minimize the chance of corruption.</span>
<span class="p_add">+		 *</span>
<span class="p_add">+		 * (This is far from being a fully correct recovery.</span>
<span class="p_add">+		 *  Architecturally, the CPU could prefetch something</span>
<span class="p_add">+		 *  back into an incorrect ASID slot and leave it there</span>
<span class="p_add">+		 *  to cause trouble down the road.  It&#39;s better than</span>
<span class="p_add">+		 *  nothing, though.)</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		__flush_tlb_all();</span>
<span class="p_add">+	}</span>
<span class="p_add">+#endif</span>
 
 	if (real_prev == next) {
 		VM_BUG_ON(this_cpu_read(cpu_tlbstate.ctxs[prev_asid].ctx_id) !=
<span class="p_header">diff --git a/arch/x86/power/hibernate_64.c b/arch/x86/power/hibernate_64.c</span>
<span class="p_header">index f2598d81cd55..f910c514438f 100644</span>
<span class="p_header">--- a/arch/x86/power/hibernate_64.c</span>
<span class="p_header">+++ b/arch/x86/power/hibernate_64.c</span>
<span class="p_chunk">@@ -295,7 +295,26 @@</span> <span class="p_context"> int arch_hibernation_header_save(void *addr, unsigned int max_size)</span>
 		return -EOVERFLOW;
 	rdr-&gt;jump_address = (unsigned long)restore_registers;
 	rdr-&gt;jump_address_phys = __pa_symbol(restore_registers);
<span class="p_del">-	rdr-&gt;cr3 = restore_cr3;</span>
<span class="p_add">+</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * The restore code fixes up CR3 and CR4 in the following sequence:</span>
<span class="p_add">+	 *</span>
<span class="p_add">+	 * [in hibernation asm]</span>
<span class="p_add">+	 * 1. CR3 &lt;= temporary page tables</span>
<span class="p_add">+	 * 2. CR4 &lt;= mmu_cr4_features (from the kernel that restores us)</span>
<span class="p_add">+	 * 3. CR3 &lt;= rdr-&gt;cr3</span>
<span class="p_add">+	 * 4. CR4 &lt;= mmu_cr4_features (from us, i.e. the image kernel)</span>
<span class="p_add">+	 * [in restore_processor_state()]</span>
<span class="p_add">+	 * 5. CR4 &lt;= saved CR4</span>
<span class="p_add">+	 * 6. CR3 &lt;= saved CR3</span>
<span class="p_add">+	 *</span>
<span class="p_add">+	 * Our mmu_cr4_features has CR4.PCIDE=0, and toggling</span>
<span class="p_add">+	 * CR4.PCIDE while CR3&#39;s PCID bits are nonzero is illegal, so</span>
<span class="p_add">+	 * rdr-&gt;cr3 needs to point to valid page tables but must not</span>
<span class="p_add">+	 * have any of the PCID bits set.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	rdr-&gt;cr3 = restore_cr3 &amp; ~CR3_PCID_MASK;</span>
<span class="p_add">+</span>
 	rdr-&gt;magic = RESTORE_MAGIC;
 
 	hibernation_e820_save(rdr-&gt;e820_digest);
<span class="p_header">diff --git a/arch/x86/xen/enlighten_pv.c b/arch/x86/xen/enlighten_pv.c</span>
<span class="p_header">index ae2a2e2d6362..69b9deff7e5c 100644</span>
<span class="p_header">--- a/arch/x86/xen/enlighten_pv.c</span>
<span class="p_header">+++ b/arch/x86/xen/enlighten_pv.c</span>
<span class="p_chunk">@@ -1038,7 +1038,6 @@</span> <span class="p_context"> static const struct pv_cpu_ops xen_cpu_ops __initconst = {</span>
 	.read_cr0 = xen_read_cr0,
 	.write_cr0 = xen_write_cr0,
 
<span class="p_del">-	.read_cr4 = native_read_cr4,</span>
 	.write_cr4 = xen_write_cr4,
 
 #ifdef CONFIG_X86_64
<span class="p_chunk">@@ -1073,7 +1072,6 @@</span> <span class="p_context"> static const struct pv_cpu_ops xen_cpu_ops __initconst = {</span>
 	.alloc_ldt = xen_alloc_ldt,
 	.free_ldt = xen_free_ldt,
 
<span class="p_del">-	.store_idt = native_store_idt,</span>
 	.store_tr = xen_store_tr,
 
 	.write_ldt_entry = xen_write_ldt_entry,
<span class="p_header">diff --git a/arch/x86/xen/mmu_pv.c b/arch/x86/xen/mmu_pv.c</span>
<span class="p_header">index 6b983b300666..509f560bd0c6 100644</span>
<span class="p_header">--- a/arch/x86/xen/mmu_pv.c</span>
<span class="p_header">+++ b/arch/x86/xen/mmu_pv.c</span>
<span class="p_chunk">@@ -2409,8 +2409,6 @@</span> <span class="p_context"> static const struct pv_mmu_ops xen_mmu_ops __initconst = {</span>
 	.flush_tlb_single = xen_flush_tlb_single,
 	.flush_tlb_others = xen_flush_tlb_others,
 
<span class="p_del">-	.pte_update = paravirt_nop,</span>
<span class="p_del">-</span>
 	.pgd_alloc = xen_pgd_alloc,
 	.pgd_free = xen_pgd_free,
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



