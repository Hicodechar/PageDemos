
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[V2] x86/platform/uv/BAU: minor cleanup, make some local functions static - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [V2] x86/platform/uv/BAU: minor cleanup, make some local functions static</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=1168">Colin Ian King</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 4, 2017, 8:31 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170704083129.10559-1-colin.king@canonical.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9824319/mbox/"
   >mbox</a>
|
   <a href="/patch/9824319/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9824319/">/patch/9824319/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	2B5B460237 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  4 Jul 2017 08:31:56 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1A18427FB1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  4 Jul 2017 08:31:56 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 0E6692811A; Tue,  4 Jul 2017 08:31:56 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 2CC1A27FB1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  4 Jul 2017 08:31:54 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752314AbdGDIbw (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 4 Jul 2017 04:31:52 -0400
Received: from youngberry.canonical.com ([91.189.89.112]:50680 &quot;EHLO
	youngberry.canonical.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751960AbdGDIbu (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 4 Jul 2017 04:31:50 -0400
Received: from 1.general.cking.uk.vpn ([10.172.193.212] helo=localhost)
	by youngberry.canonical.com with esmtpsa
	(TLS1.0:RSA_AES_256_CBC_SHA1:32) (Exim 4.76)
	(envelope-from &lt;colin.king@canonical.com&gt;)
	id 1dSJF3-0001ZY-Ta; Tue, 04 Jul 2017 08:31:30 +0000
From: Colin King &lt;colin.king@canonical.com&gt;
To: Thomas Gleixner &lt;tglx@linutronix.de&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	&quot;H . Peter Anvin&quot; &lt;hpa@zytor.com&gt;, x86@kernel.org,
	Andrew Banman &lt;abanman@hpe.com&gt;, Mike Travis &lt;mike.travis@hpe.com&gt;,
	Dimitri Sivanich &lt;sivanich@sgi.com&gt;
Cc: kernel-janitors@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH][V2] x86/platform/uv/BAU: minor cleanup,
	make some local functions static
Date: Tue,  4 Jul 2017 09:31:29 +0100
Message-Id: &lt;20170704083129.10559-1-colin.king@canonical.com&gt;
X-Mailer: git-send-email 2.11.0
MIME-Version: 1.0
Content-Type: text/plain; charset=&quot;utf-8&quot;
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1168">Colin Ian King</a> - July 4, 2017, 8:31 a.m.</div>
<pre class="content">
<span class="from">From: Colin Ian King &lt;colin.king@canonical.com&gt;</span>

Functions handle_uv2_busy, uv_flush_send_and_wait and
find_another_by_swack are local to the source, so make them static.
Also remove normal_busy as it is no longer used.

Fixes various smatch warnings, such as:
&quot;symbol &#39;find_another_by_swack&#39; was not declared. Should it be static?&quot;
&quot;symbol &#39;handle_uv2_busy&#39; was not declared. Should it be static?&quot;
<span class="signed-off-by">
Signed-off-by: Colin Ian King &lt;colin.king@canonical.com&gt;</span>
---
 arch/x86/platform/uv/tlb_uv.c | 29 +++++------------------------
 1 file changed, 5 insertions(+), 24 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">index 2983faab5b18..e21420843641 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_chunk">@@ -588,31 +588,11 @@</span> <span class="p_context"> static unsigned long uv2_3_read_status(unsigned long offset, int rshft, int desc</span>
 }
 
 /*
<span class="p_del">- * Return whether the status of the descriptor that is normally used for this</span>
<span class="p_del">- * cpu (the one indexed by its hub-relative cpu number) is busy.</span>
<span class="p_del">- * The status of the original 32 descriptors is always reflected in the 64</span>
<span class="p_del">- * bits of UVH_LB_BAU_SB_ACTIVATION_STATUS_0.</span>
<span class="p_del">- * The bit provided by the activation_status_2 register is irrelevant to</span>
<span class="p_del">- * the status if it is only being tested for busy or not busy.</span>
<span class="p_del">- */</span>
<span class="p_del">-int normal_busy(struct bau_control *bcp)</span>
<span class="p_del">-{</span>
<span class="p_del">-	int cpu = bcp-&gt;uvhub_cpu;</span>
<span class="p_del">-	int mmr_offset;</span>
<span class="p_del">-	int right_shift;</span>
<span class="p_del">-</span>
<span class="p_del">-	mmr_offset = UVH_LB_BAU_SB_ACTIVATION_STATUS_0;</span>
<span class="p_del">-	right_shift = cpu * UV_ACT_STATUS_SIZE;</span>
<span class="p_del">-	return (((((read_lmmr(mmr_offset) &gt;&gt; right_shift) &amp;</span>
<span class="p_del">-				UV_ACT_STATUS_MASK)) &lt;&lt; 1) == UV2H_DESC_BUSY);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-/*</span>
  * Entered when a bau descriptor has gone into a permanent busy wait because
  * of a hardware bug.
  * Workaround the bug.
  */
<span class="p_del">-int handle_uv2_busy(struct bau_control *bcp)</span>
<span class="p_add">+static int handle_uv2_busy(struct bau_control *bcp)</span>
 {
 	struct ptc_stats *stat = bcp-&gt;statp;
 
<span class="p_chunk">@@ -917,7 +897,8 @@</span> <span class="p_context"> static void handle_cmplt(int completion_status, struct bau_desc *bau_desc,</span>
  * Returns 1 if it gives up entirely and the original cpu mask is to be
  * returned to the kernel.
  */
<span class="p_del">-int uv_flush_send_and_wait(struct cpumask *flush_mask, struct bau_control *bcp,</span>
<span class="p_add">+static int uv_flush_send_and_wait(struct cpumask *flush_mask,</span>
<span class="p_add">+	struct bau_control *bcp,</span>
 	struct bau_desc *bau_desc)
 {
 	int seq_number = 0;
<span class="p_chunk">@@ -1212,8 +1193,8 @@</span> <span class="p_context"> const struct cpumask *uv_flush_tlb_others(const struct cpumask *cpumask,</span>
  * Search the message queue for any &#39;other&#39; unprocessed message with the
  * same software acknowledge resource bit vector as the &#39;msg&#39; message.
  */
<span class="p_del">-struct bau_pq_entry *find_another_by_swack(struct bau_pq_entry *msg,</span>
<span class="p_del">-					   struct bau_control *bcp)</span>
<span class="p_add">+static struct bau_pq_entry *find_another_by_swack(struct bau_pq_entry *msg,</span>
<span class="p_add">+						  struct bau_control *bcp)</span>
 {
 	struct bau_pq_entry *msg_next = msg + 1;
 	unsigned char swack_vec = msg-&gt;swack_vec;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



