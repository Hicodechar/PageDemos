
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,02/26] treewide: Move dma_ops from struct dev_archdata into struct device - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,02/26] treewide: Move dma_ops from struct dev_archdata into struct device</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=119921">Bart Van Assche</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 12, 2017, 7:06 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170112190718.6728-3-bart.vanassche@sandisk.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9514083/mbox/"
   >mbox</a>
|
   <a href="/patch/9514083/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9514083/">/patch/9514083/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	C8F4F601E7 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 12 Jan 2017 19:14:55 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B72C6284C3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 12 Jan 2017 19:14:55 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A95FC286D9; Thu, 12 Jan 2017 19:14:55 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_HI autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4C0E5284C3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 12 Jan 2017 19:14:54 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751242AbdALTOV (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 12 Jan 2017 14:14:21 -0500
Received: from mail-dm3nam03on0054.outbound.protection.outlook.com
	([104.47.41.54]:56639
	&quot;EHLO NAM03-DM3-obe.outbound.protection.outlook.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1750780AbdALTII (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 12 Jan 2017 14:08:08 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=sandiskcorp.onmicrosoft.com; s=selector1-sandisk-com;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version;
	bh=4PEZ/3zAniYscfC1Izof/cdkiV5a7y6ohlk9I1us+zM=;
	b=u51b9zI812YoWE7CmHh0whEhB8Ixoi+5uchGa0qPpHwQpUD5vSUr2C/PKzwWRNjpNwNYYZcNtqBYx1ueOXcaqV3r8ISIBxSIQhS0M8/VC4CbkzJRC6gLex8b37wffNTib7w7YXLiGzNk03bSQ4S4jjXxTiWZQp8PpKf+H3LtkYA=
Received: from BN1PR02CA0016.namprd02.prod.outlook.com (10.141.56.16) by
	SN1PR02MB1423.namprd02.prod.outlook.com (10.162.0.27) with Microsoft
	SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P384) id
	15.1.829.7; Thu, 12 Jan 2017 19:08:04 +0000
Received: from BY2FFO11FD023.protection.gbl (2a01:111:f400:7c0c::129) by
	BN1PR02CA0016.outlook.office365.com (2a01:111:e400:2a::16) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P384) id 15.1.845.12 via
	Frontend Transport; Thu, 12 Jan 2017 19:08:04 +0000
Authentication-Results: spf=pass (sender IP is 63.163.107.225)
	smtp.mailfrom=sandisk.com; vger.kernel.org;
	dkim=none (message not signed)
	header.d=none;vger.kernel.org; dmarc=bestguesspass action=none
	header.from=sandisk.com;
Received-SPF: Pass (protection.outlook.com: domain of sandisk.com designates
	63.163.107.225 as permitted sender)
	receiver=protection.outlook.com; 
	client-ip=63.163.107.225; helo=milsmgep14.sandisk.com;
Received: from milsmgep14.sandisk.com (63.163.107.225) by
	BY2FFO11FD023.mail.protection.outlook.com (10.1.15.212) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P384) id
	15.1.803.8 via Frontend Transport; Thu, 12 Jan 2017 19:08:02 +0000
Received: from MILHUBIP03.sdcorp.global.sandisk.com (Unknown_Domain
	[10.201.67.162])
	(using TLS with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(Client did not present a certificate)
	by  (Symantec Messaging Gateway) with SMTP id 1F.6B.01420.0F1D7785;
	Thu, 12 Jan 2017 10:59:00 -0800 (PST)
Received: from milsmgip12.sandisk.com (10.177.8.100) by
	MILHUBIP03.sdcorp.global.sandisk.com (10.177.9.96) with Microsoft
	SMTP Server id 14.3.319.2; Thu, 12 Jan 2017 11:07:58 -0800
X-AuditID: 0ac94371-47fff7000001058c-c7-5877d1f0b1f4
Received: from exp-402881.sdcorp.global.sandisk.com ( [10.177.9.6])     by
	(Symantec Messaging Gateway) with SMTP id 64.DF.09762.E04D7785;
	Thu, 12 Jan 2017 11:07:58 -0800 (PST)
From: Bart Van Assche &lt;bart.vanassche@sandisk.com&gt;
To: Doug Ledford &lt;dledford@redhat.com&gt;
CC: &lt;linux-rdma@vger.kernel.org&gt;, &lt;linux-kernel@vger.kernel.org&gt;,
	&quot;Greg Kroah-Hartman&quot; &lt;gregkh@linuxfoundation.org&gt;,
	Bart Van Assche &lt;bart.vanassche@sandisk.com&gt;,
	Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;,
	Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;,
	David Woodhouse &lt;dwmw2@infradead.org&gt;, Juergen Gross &lt;jgross@suse.com&gt;,
	&quot;H . Peter Anvin&quot; &lt;hpa@zytor.com&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	&lt;linux-arch@vger.kernel.org&gt;, Russell King &lt;linux@armlinux.org.uk&gt;,
	&lt;x86@kernel.org&gt;
Subject: [PATCH v2 02/26] treewide: Move dma_ops from struct dev_archdata
	into struct device
Date: Thu, 12 Jan 2017 11:06:54 -0800
Message-ID: &lt;20170112190718.6728-3-bart.vanassche@sandisk.com&gt;
X-Mailer: git-send-email 2.11.0
In-Reply-To: &lt;20170112190718.6728-1-bart.vanassche@sandisk.com&gt;
References: &lt;20170112190718.6728-1-bart.vanassche@sandisk.com&gt;
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFprHIsWRmVeSWpSXmKPExsXCddJ5ke6Xi+URBvP62Sw+NLUyW1yc3spi
	8fL8B1aLiSsnM1s0L17PZjFto7jFnJtGFh27vrJYXN41h83i2aFeFotDU/cyWlw6sIDJ4seG
	x6wOvB6Xr11k9ti8Qsuj500Lq8emVZ1sHvvnrmH3+Pj0FovH+31X2TzWb7nK4vF5k5zHiZYv
	rAFcUVw2Kak5mWWpRfp2CVwZXxvOMxbs3sVY8elGVQPj5jmMXYycHBICJhJPtp5i62Lk4hAS
	WMokMeHBBihnB6PE7AUrmWCqVny5xwSR2MgosfzzbHaQBJuAkcS39zNZQGwRATWJTa8WgcWZ
	Bd4zS0w/7w5iCwvESJy4cQVsHYuAqsSZ7auYuxg5OHgF7CTmdvBDzJeX2NV2kRXE5hSwl/j2
	/xJYuRBQya4D/1kgaj6ySqxrMwWxeQUEJU7OfMICsUpC4uCLF8wQ9eoSJ5fMZ5rAKDQLSdks
	JGULGJlWMYrlZuYU56anFhia6BUn5qVkFmfrJefnbmKExFrhDsbXt70PMQpwMCrx8O6wKYsQ
	Yk0sK67MPcQowcGsJMI763x5hBBvSmJlVWpRfnxRaU5q8SFGaQ4WJXHei9Efw4QE0hNLUrNT
	UwtSi2CyTBycUg2Mh6qnJ7ZlrcxVaVU5K+MZfT5yc8g/eTPtj9HaKTu+dS265en3zPg0a8+j
	3f3Xfl7IXPF37vwLiSFXaos/n389b7JNuoBKNttRodOnDgWZf2l7cWndtMjtdx4fieP6UpsZ
	cOckx4//eScnzHX5laEWIvH+/YGZjzxczrVyfxJwP81U7ruCl/2krRJLcUaioRZzUXEiANsw
	cMKxAgAA
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFvrAJMWRmVeSWpSXmKPExsXCtZGTTZfvSnmEwcpVPBYHf7YxWnxoamW2
	uDi9lcXi5fkPrBYTV05mtmhevJ7NYtpGcYs5N40sOnZ9ZbG4vGsOm8WzQ70sFoem7mW0uHRg
	AZPFjw2PWR34PC5fu8jssXmFlkfPmxZWj02rOtk89s9dw+7x8ektFo/3+66yeUxbc57JY/2W
	qywenzfJeZxo+cIawB3FZZOSmpNZllqkb5fAlfG14Txjwe5djBWfblQ1MG6ew9jFyMkhIWAi
	seLLPaYuRi4OIYH1jBLzVz5hBUmwCRhJfHs/kwXEFhFQk9j0ahE7SBGzwEdmibkfpjGBJIQF
	YiRO3LgCNolFQFXizPZVzCA2r4CdxI7X19khNshL7Gq7CDaUU8Be4tv/S2D1QkA1uw78Z5nA
	yL2AkWEVo1huZk5xbnpmgaGRXnFiXkpmcbZecn7uJkZImEbtYLw+0fwQIxMHp1QDY8u9yYKF
	UTG5gfUfjxy+f0T88okO1ozHKo/4pi9NVQyMPyickh75neV0oMnU+L9HetefYbv2ZuXe6u0H
	3b6vldV9YVWse+7nCeNv5yeLbwjJlD5cNTOsOuGnm/2rwEJXHbGKNcs3bY+S/GbOY/Nd1L3Y
	a7Pkl46f8/tsNc8kidRxixdqcmYdUGIpzkg01GIuKk4EAFCHZgcDAgAA
MIME-Version: 1.0
Content-Type: text/plain
X-EOPAttributedMessage: 0
X-MS-Office365-Filtering-HT: Tenant
X-Forefront-Antispam-Report: CIP:63.163.107.225; IPV:NLI; CTRY:US; EFV:NLI;
	SFV:NSPM;
	SFS:(10009020)(6009001)(7916002)(39860400002)(39450400003)(39850400002)(39840400002)(39410400002)(2980300002)(438002)(189002)(199003)(2906002)(356003)(4326007)(97736004)(69596002)(8676002)(5003940100001)(36756003)(50986999)(8936002)(76176999)(81166006)(81156014)(189998001)(626004)(1076002)(6666003)(305945005)(5660300001)(50226002)(575784001)(68736007)(47776003)(86362001)(5890100001)(106466001)(92566002)(7416002)(2270400002)(38730400001)(6916009)(2950100002)(33646002)(110136003)(50466002)(48376002)(54906002)(77096006);
	DIR:OUT; SFP:1101; SCL:1; SRVR:SN1PR02MB1423;
	H:milsmgep14.sandisk.com; FPR:; SPF:Pass;
	PTR:InfoDomainNonexistent; MX:1; A:1; LANG:en; 
X-Microsoft-Exchange-Diagnostics: 1; BY2FFO11FD023;
	1:EqrNSRvewaKCjnVnuVygMi8E2EmUGXIWTVr/aCg/xDTqccH2iyp1SwSX90ZHELtBF6M/PMCXiSlg6SAO/5AsO8rmDXPME0YraiR9i523U13lQ0q4UyKEr+LR/4MM/M+C8eWKQZKWlRWymKQ0excqwrodNtzN65hRwKvLWdUSSGLEbvVt2LwU6OcKa/qBkQzdgadPsO2ZaA8fiw7Y4OG0TyKbbyEuEn7XZ1MZdZ1WGyU05mIBkFIBfS8+/aOJs2iVTA03ZvLos+NNb3NO/lX9BbSlA62hdHaMsgy4P2iee3JLqmvxqpSNjPH6Sl0iBTmqylTG4rTdhDQyAWTNGoL/wwlw7ATppD+XKXIUG5yh4t8T/zjF8Z3VYtuK2B13Nd/DGLIdZ6tkWRyZtdmFl+C8fESzI2n4fuOy8Sc0J9E5/JE3srQkKM+/h4xzp9zOVTQ26yR91SNVOHXgWgAVYv0XsVnBJ7m5l433r6xFSULbN9T0wFxECKn8VxLG+qNz3XeL
X-MS-Office365-Filtering-Correlation-Id: 62b0db3b-a186-4d45-a7c5-08d43b1e5598
X-Microsoft-Antispam: UriScan:; BCL:0; PCL:0; RULEID:(22001)(8251501002);
	SRVR:SN1PR02MB1423; 
X-Microsoft-Exchange-Diagnostics: 1; SN1PR02MB1423;
	3:RLQYrKS1zqTOnBdeVAVJkbbNN0lBNSIWjvN6mZxOl1q7+wfsj7QPmc5onXNDdxT0cvLu6xeljI7EXrL4wsHlPjMoFJe1reN6LRhStHc9X+J+tgsFw5nbFtxESy9DDSYXCeNySLCvhuO63DjaxhlfshHtsHQiTF8tcZimvtx8K6OBb9fkOQ7b+C9QMEwBbajtAg15ZNyZ7fYkDIewoqDij4tgvc5/GP35yhvLt4/a8o4YI/IQkkxvpsh1oSiz7IBVh5JB6mptryIS6mgMQF6k579LvwkCPua94QaaSfZGwd0RoP0iojho6oyOmBfGHYZjzGf5Tl8MVFZV1trUAZkImYYL4T+SUZ2yg10RyD3H14x8VXnxkDU1cSaveG1VH1d+9i1bp9KiRfbQByAoWrIU1A==
X-Microsoft-Exchange-Diagnostics: 1; SN1PR02MB1423;
	25:YBkmZujCfcNdXi8q7xn+n0WYCs/JE8aoPzATHR16Uxb1a+1My9IXDCkXe0HMduDmC7Y/iGJ/OIPweWtA2+Y85zRMdoC3pFc7kZpCo0jn7ME9mDsSAL6FMdLsbi4CinDESN3rDMjnNVetP8/+fQtBAjrj/YWxnKbEV3WBNp1JUnDLN1EjaZh9o0/CVaPDNKJZGZ2HTxK8UgBC0ee+6/q0W0mqh8r6SQYZYyUOo/6TRKlxLpEcMTgxQoH0/2wsHHNylndshmVrAHqgW8S+/sxa+A96eDmWnPeJJ9GArlL6QiM3JbcUS9cKXxelfBC4RSyjgJ1YBAa+W87etUVMqkn5FwWCD7S8HRTftq5vNT4F7yFWKoVuoXXy7nOk2tWROYm+jfkCQcVHoPl7YZy/bq+JW0b5jjYkNTkWjf9bJbQ+aKzS+OjPfm9zxQiHpGHNWkUxL+htXlC9CfFEFo8vmuwpBoYulDmM/CUkHLooMXC0QoIzuYxA+QZMCrnCejF664ki8CCB7HXYyNY5T3v+bZIholzUwMN49P4TyvUndh3sC5/YXh4UQ2nThhOy2WAWWmZNkJeJT09BoTidIcKUi7nbOWklWTjqNdO/U0rQbb9kVNlJ/NJz4/9EScDP8+zuKRK4pbpxlWW8VimFS1OEWFTu3y5DVx7uWjpSoUUH/48bCCT84AghR4v1IECdcpR5ZHe8Gg2gx+t3VOo2SxR9fZwfo3Y8UWUdztMtguqaxP+eUUTnFobD2idvWuhJL7hDsyQwkyF5oBrcxPjbZD1MQY6K1Rd1n+/iWczP6Yzo8mHz7E4tbNopWGV8KxdBuEJVAnu/qIKn8J3lNf4yWfV3mSIOdw==
X-Microsoft-Exchange-Diagnostics: 1; SN1PR02MB1423;
	31:trhnY0ib6ldKaVU6s/SpZ4p4gSe5hUWAjatO6nezcWPd0NqKcij3nwlka4xHFP8wihHCLLDudf7bEe7rNzbuIfElF9Q6S0NJpi+svlLAidiopqAz75KHdlPug7RGsvJLL4eMPwl0RKhWcwM1zoGZilbtQHDoxdGqViwx3tOdP9IcF5Y64lQH7SIW3xsB0AS8fPWZLCQ0OAAm9fjUB+Y9xdetqHNRdwsK6yfFKDi1Nq/HyLphn80DyMr9ba3FvvMGhkqegBd5C10Fzi0/byZxfA==;
	20:8bPecTnqQ1ucy7ORZ0RDYTvWnpMegcFxzOcOvNO5Dhku1bWGuMIqGDpeSnhT0+AHBmNCerukBMmKrL6OqIwE2R7Kn/kayWAalGoQz7m7kNer/SFLiNgDAzrN4e1/wH8Ybss6pFqnK6xgyv1sMo3yIgvqTnSLM0lUtMJn9i5LXOlSuTNv28Mxig6/gTUkBN+DpHhmQLbVLfVDykECbkk4nPXjecOvhTk2VuvoCRP/f5OLOq+MvT/TP4TsliqfhZK5R5INab6/gT5ht3TPtYD2pF7+QFekE/2JfK0gsirNKxpzmxby0APZ2D1lLAK3h7iHCF26EzzFamTfctCS+FHhyb2RaFNXpDKdF4k+a8OHj4f3B5Zq8cTkNYSvJHk0K3hxjfbWrC8LAD/bWDpJNNul9D6jkCbjDrZ/gQCFc/ZnzHM0q8qayywBGF3fTX1mjjkPWMNO1EmN9JTKE9r0oebFLhaZxPQH7VzowK3hvdrQmjteJVIp+ZAnE5pT8mzVFPoZ
X-Microsoft-Antispam-PRVS: &lt;SN1PR02MB1423098EE8D9C8697982E4E781790@SN1PR02MB1423.namprd02.prod.outlook.com&gt;
X-Exchange-Antispam-Report-Test: UriScan:(9452136761055)(146099531331640)(42932892334569); 
X-Exchange-Antispam-Report-CFA-Test: BCL:0; PCL:0;
	RULEID:(6040375)(601004)(2401047)(13018025)(13016025)(5005006)(8121501046)(3002001)(10201501046)(6055026)(6041248)(20161123560025)(20161123558021)(20161123555025)(20161123562025)(20161123564025)(6072148);
	SRVR:SN1PR02MB1423; BCL:0; PCL:0; RULEID:; SRVR:SN1PR02MB1423;
X-Microsoft-Exchange-Diagnostics: 1; SN1PR02MB1423;
	4:c5AKjMh1kFgoNaLlTYxEQxWssl6bRVv0Na2P7INcs/MuQ+kxTtv/MQHsB55nO7B+6xPFdcpnMGPbmqsaFvas3Pb45bR8dK1bF6GrlP1lOsAz6idCxweNlwAtxAV0oPxxEm9TAE2RQUvbvrKYj1wof/cTqAkebfFl5taU4MFWMYUo7nCaF4KCNjNuJqtVF9L7mndfPRxz9I8Im3RgBqAoRhN5vHYs3m26k2cTNRKEZfNQRwKJWuG4ZyMaLMs+bm9FLvurS4bTOWOOMGn7IuP4X0T312AbDQlmktmFH5IcYspbBHoSfSgBFlS698bVrdE1Xe+OAyRQpRvp1/CQV7RcBjANF7XUFQLUHD4fjQYQKMePgTXtfkU3JC8+i1Pz+xAdDsEQswaWVl3DPkfy9p/cihkZyKiXBAtAKIrGgH+7tAiVQnzxusVkY+JZBQyNqzGPpSJvGXRsomMerKHjrjtqOiJQn7STZ6+wI0BK6RRuH43ZnMoyK24tXv8jf+Jk0XWJWPvyp/x8k2EZm+opuawwTeqN/8YaaORwSU2+kO/cNtk8V3ReBlHJKhZaQQZLQOdlnlmrsGSnCr81cBPbpHSMuQEwXyalNjRurmw4Uag3kstCcxC/33htH52BfRsbhouHWbjohev7WOZ//4gvA02GlF9dMGLXXe39zlc8RhIaO/FmSaQ5LQGcObsO9wwdf+qamEGph0EUX9qwxQB6a3DsJcKzmFjsXwEQ8wbctp0VMvljqn3apxjtTbsA1uIzjE1VjftyIaKkEKxIzyKR7tBn5A==
X-Forefront-PRVS: 018577E36E
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1; SN1PR02MB1423;
	23:QTRecIy66wuBMQGBZu5CBFZ5qC7YNvK/gT5/1EsQ2?=
	=?us-ascii?Q?EFlF6TS2xVovWq87MEfHpM+sEtRcIfng204k+8CQvhiiXmV5JpDx/1pdyvEw?=
	=?us-ascii?Q?D7RZetFbwOqgKDZCE6A2T1WIAJcHq4mOYHWDuTxMdm1iLJ2Dqe0x+U4cdTU4?=
	=?us-ascii?Q?nLEauMIGaYLEllbVOgsxgZ59pVZqZ8qgHSZ+6Pmu1/TGOQ5fmfolN/MFVPoA?=
	=?us-ascii?Q?lW8Mh8ubKC3utFqSijR5c/vWDzn44mnpsgJ4oDw6bU1AHvLvcNCp1UNl2euh?=
	=?us-ascii?Q?4KFf6rS9YKGe29JysJAoNWVvRbyoKcRrNaTb4AVeGfiK/AwHcBsxmBW2MNOV?=
	=?us-ascii?Q?QyQz0uQ1tuFKHxp8OivbqqyGHyN7t5su2o1lygyQaeCuaiQicED2bnXIy2y7?=
	=?us-ascii?Q?SsLKnPFqmx0AIzPZNU/9niqUUmDV6zVjK8SCF2aEJEWE0btm6ahczU/dnavu?=
	=?us-ascii?Q?GwReUiu/YZ01e8/Mb6YC8RN1K0xaw077QLMBcmah0l76VaKMiNEbeLskwnm4?=
	=?us-ascii?Q?BzjBXXTfyAQP9vRHWG9OoFPEFp02YZ+kRxGbtYkEVw2vmKZ+k6RRoZChuDyc?=
	=?us-ascii?Q?b/VKVyxE1nCSkJSVk5yZ7mJe+5NOKz0kItxhJGYnsC/im8w8IOlWWonrqFCx?=
	=?us-ascii?Q?rvgmh5xi6bn8zkOA24lc4XRK+ebVayEYpQP9KGIa41xDhdbGC9GTGpFS/p1z?=
	=?us-ascii?Q?bavJQyfer4zP9sta9aosy/TEYBgBhjuvD0H1mxCTO3hMLH0d0NkeYDVv/0Ub?=
	=?us-ascii?Q?uqFWaJ80aVaPt8pPhpiwpGXRvP0w6AcfbfFZ5xeQOVDRdTu8vZ0ChksCBA9j?=
	=?us-ascii?Q?/l64e6RRlZhBRFZMvnGjvNXW6fkKh+A4MZRpc3HZi878Ik1m1Ej8alOzzZjF?=
	=?us-ascii?Q?CfqfhjsNopsI9JWZHtqYCHoRGJhXdIGseFI/p5uPWLeVCclBUe9YIecGZ65O?=
	=?us-ascii?Q?cEfl8shiSUrnKKzNkbct7xXrt5MsLs7vUUs8B1tbO3kFeRAVNSGcBDNj/fjz?=
	=?us-ascii?Q?wE+m0HiBkCsnAThHUXt7E7QlWjC2p5U33d3qkJfHORjqv1CT4yc5g86faq6z?=
	=?us-ascii?Q?dAZUn94R5HjDkLt9EEKa01Ua104qR+GdfNzrmt5aAiyVJa0VpJGQTUg6UA3L?=
	=?us-ascii?Q?QA7lwa69JDm2ZbAAirUaOx/Te782sg6po/vlDlJJ59Ha1l0NSSfvgIEMf2sA?=
	=?us-ascii?Q?Ee28R4/BZUuTj9+B1y+GO+km+ME6bzI5eHg?=
X-Microsoft-Exchange-Diagnostics: 1; SN1PR02MB1423;
	6:dTAYKIx5eZXgM/mfgsySAQjc8ikb07Ox5IgQW6o9mzFWxLjVaFp+hCfU6qD9d4S/lAGyHjt4hKyoecJXbTLxVP9oy+j4mX2UX5dRqaG1He8TFGycW7TwaSL7S8rGcsn0CfRxrV9Jmkvx/rcq5J3HWuUZGpKktzn2Deu7T5aMoDcVZMubSleFYLAN5ILI+jSh7gCZBBNYQeOsJfKOFsHjho7AH2C8CmK3NpT6+zqEuGmyshCR+MN1IzOjySGGz5wn67FRwTRHfNsE7hZ6mHuzlSqAwsChy7JiFuEI9PCRsyvYKosH/e79xnXy2L3KytnWsQ29Mhfp6QrKr8dprIm7NVgBLavT8xPjccFM2Ifo5r8MjRwEj/4PBFDBUUdMIYk1rZ7kqsfjftrKO1KfxDXeZZni0b3IhSRthmrQr5ajwL8nSsy/42rXD0cP/HTiyK7bC4ssYI/dZC5nATcVRTxMDg==;
	5:OHhmNBAax0nU1esPfpGBxNYy8ejtYePQ2EGXQRmMl6+S1OiTZO5PSfwCEqBNFeiSTe3vLvqXzNX3YM+A3XGRU1cO2R3PxCMjHd1E1urpHkOsntlrLwwu9xEJWUI/DCT2Ih2wlMYfmzh/sNrOMXHihw==;
	24:PpVzTvJotoEx6IyDxpswSNfoXzrTNpsRldOOIg0rQG3KirURk4GshEIjppTZz1mg46yFZ1kL7YeWOLAtfkVo52WquRv4Dn45UFmz/9iPdMM=
SpamDiagnosticOutput: 1:99
SpamDiagnosticMetadata: NSPM
X-Microsoft-Exchange-Diagnostics: 1; SN1PR02MB1423;
	7:2/NWAvW6WVfYZxanhnLD6/su+mASvCaBQmF/nMAyt8axYKLlz+PsDKyqHhk3mAyt5GDe/4rVxGQrsKY8sEyI+dJHkGqXNL6J5lXMlSWjUW8Jx/5TtWpIIuhIjb+Z0bLfsRiUEZat9Zb2sdgDmvKLA44gHReNpfc21sc/YQ28L5IJ9tvwJI6B+sLYkTWeM08HmT7+PO5KtBUNvO2UBG03gvn6MNzXovv7u5yKEzlAhqNybeSc2EUyyGdUE3MoaqnGYhKXC0u3avcRY69yW9AHz4kOzMzdWzwHncC7j0w4/I+ZreluWRnbUGC9NX1DcF1SdXIv13jrtyo3Q3zs1lHzPbF2FwmSv097MfJgmKZuLpMWagBQ7WvL4Emot/hYd9Vcj9dcdsJ7xVM/miHqeu2MUC3KOhhj9ey5XDLae1nauAY1BHegqkL8F/hWVsR8vqmJK4qNzidhADO+Rlig0r9Mpg==
X-OriginatorOrg: sandisk.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 12 Jan 2017 19:08:02.7536
	(UTC)
X-MS-Exchange-CrossTenant-Id: fcd9ea9c-ae8c-460c-ab3c-3db42d7ac64d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=fcd9ea9c-ae8c-460c-ab3c-3db42d7ac64d;
	Ip=[63.163.107.225]; Helo=[milsmgep14.sandisk.com]
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN1PR02MB1423
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=119921">Bart Van Assche</a> - Jan. 12, 2017, 7:06 p.m.</div>
<pre class="content">
Some but not all architectures provide set_dma_ops(). Move dma_ops
from struct dev_archdata into struct device such that it becomes
possible on all architectures to configure dma_ops per device.
<span class="signed-off-by">
Signed-off-by: Bart Van Assche &lt;bart.vanassche@sandisk.com&gt;</span>
Cc: Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;
Cc: Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;
Cc: David Woodhouse &lt;dwmw2@infradead.org&gt;
Cc: Juergen Gross &lt;jgross@suse.com&gt;
Cc: H. Peter Anvin &lt;hpa@zytor.com&gt;
Cc: Ingo Molnar &lt;mingo@redhat.com&gt;
Cc: linux-arch@vger.kernel.org
Cc: linux-kernel@vger.kernel.org
Cc: Russell King &lt;linux@armlinux.org.uk&gt;
Cc: x86@kernel.org
---
 arch/arm/include/asm/device.h            | 1 -
 arch/arm/include/asm/dma-mapping.h       | 6 +++---
 arch/arm64/include/asm/device.h          | 1 -
 arch/arm64/include/asm/dma-mapping.h     | 4 ++--
 arch/arm64/mm/dma-mapping.c              | 8 ++++----
 arch/m32r/include/asm/device.h           | 1 -
 arch/m32r/include/asm/dma-mapping.h      | 4 ++--
 arch/mips/include/asm/device.h           | 5 -----
 arch/mips/include/asm/dma-mapping.h      | 4 ++--
 arch/mips/pci/pci-octeon.c               | 2 +-
 arch/powerpc/include/asm/device.h        | 4 ----
 arch/powerpc/include/asm/dma-mapping.h   | 4 ++--
 arch/powerpc/kernel/dma.c                | 2 +-
 arch/powerpc/platforms/cell/iommu.c      | 2 +-
 arch/powerpc/platforms/pasemi/iommu.c    | 2 +-
 arch/powerpc/platforms/pasemi/setup.c    | 2 +-
 arch/powerpc/platforms/ps3/system-bus.c  | 4 ++--
 arch/powerpc/platforms/pseries/ibmebus.c | 2 +-
 arch/s390/include/asm/device.h           | 1 -
 arch/s390/include/asm/dma-mapping.h      | 4 ++--
 arch/s390/pci/pci.c                      | 2 +-
 arch/tile/include/asm/device.h           | 3 ---
 arch/tile/include/asm/dma-mapping.h      | 6 +++---
 arch/x86/include/asm/device.h            | 3 ---
 arch/x86/include/asm/dma-mapping.h       | 4 ++--
 arch/x86/kernel/pci-calgary_64.c         | 4 ++--
 arch/x86/pci/common.c                    | 2 +-
 arch/x86/pci/sta2x11-fixup.c             | 8 ++++----
 arch/xtensa/include/asm/device.h         | 4 ----
 arch/xtensa/include/asm/dma-mapping.h    | 4 ++--
 drivers/infiniband/ulp/srpt/ib_srpt.c    | 2 +-
 drivers/iommu/amd_iommu.c                | 6 +++---
 drivers/misc/mic/bus/mic_bus.c           | 2 +-
 drivers/misc/mic/bus/scif_bus.c          | 2 +-
 drivers/misc/mic/bus/vop_bus.c           | 2 +-
 include/linux/device.h                   | 1 +
 36 files changed, 48 insertions(+), 70 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Jan. 19, 2017, 9:10 a.m.</div>
<pre class="content">
On Thu, Jan 12, 2017 at 11:06:54AM -0800, Bart Van Assche wrote:
<span class="quote">&gt; Some but not all architectures provide set_dma_ops(). Move dma_ops</span>
<span class="quote">&gt; from struct dev_archdata into struct device such that it becomes</span>
<span class="quote">&gt; possible on all architectures to configure dma_ops per device.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Bart Van Assche &lt;bart.vanassche@sandisk.com&gt;</span>
<span class="quote">&gt; Cc: Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;</span>
<span class="quote">&gt; Cc: Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;</span>
<span class="quote">&gt; Cc: David Woodhouse &lt;dwmw2@infradead.org&gt;</span>
<span class="quote">&gt; Cc: Juergen Gross &lt;jgross@suse.com&gt;</span>
<span class="quote">&gt; Cc: H. Peter Anvin &lt;hpa@zytor.com&gt;</span>
<span class="quote">&gt; Cc: Ingo Molnar &lt;mingo@redhat.com&gt;</span>
<span class="quote">&gt; Cc: linux-arch@vger.kernel.org</span>
<span class="quote">&gt; Cc: linux-kernel@vger.kernel.org</span>
<span class="quote">&gt; Cc: Russell King &lt;linux@armlinux.org.uk&gt;</span>
<span class="quote">&gt; Cc: x86@kernel.org</span>
<span class="acked-by">

Acked-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm/include/asm/device.h b/arch/arm/include/asm/device.h</span>
<span class="p_header">index d8a572f9c187..220ba207be91 100644</span>
<span class="p_header">--- a/arch/arm/include/asm/device.h</span>
<span class="p_header">+++ b/arch/arm/include/asm/device.h</span>
<span class="p_chunk">@@ -7,7 +7,6 @@</span> <span class="p_context"></span>
 #define ASMARM_DEVICE_H
 
 struct dev_archdata {
<span class="p_del">-	const struct dma_map_ops	*dma_ops;</span>
 #ifdef CONFIG_DMABOUNCE
 	struct dmabounce_device_info *dmabounce;
 #endif
<span class="p_header">diff --git a/arch/arm/include/asm/dma-mapping.h b/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_header">index 1aabd781306f..312f4d0564d6 100644</span>
<span class="p_header">--- a/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -18,8 +18,8 @@</span> <span class="p_context"> extern const struct dma_map_ops arm_coherent_dma_ops;</span>
 
 static inline const struct dma_map_ops *__generic_dma_ops(struct device *dev)
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;archdata.dma_ops)</span>
<span class="p_del">-		return dev-&gt;archdata.dma_ops;</span>
<span class="p_add">+	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_add">+		return dev-&gt;dma_ops;</span>
 	return &amp;arm_dma_ops;
 }
 
<span class="p_chunk">@@ -34,7 +34,7 @@</span> <span class="p_context"> static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 static inline void set_dma_ops(struct device *dev, const struct dma_map_ops *ops)
 {
 	BUG_ON(!dev);
<span class="p_del">-	dev-&gt;archdata.dma_ops = ops;</span>
<span class="p_add">+	dev-&gt;dma_ops = ops;</span>
 }
 
 #define HAVE_ARCH_DMA_SUPPORTED 1
<span class="p_header">diff --git a/arch/arm64/include/asm/device.h b/arch/arm64/include/asm/device.h</span>
<span class="p_header">index 00c678cc31e1..73d5bab015eb 100644</span>
<span class="p_header">--- a/arch/arm64/include/asm/device.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/device.h</span>
<span class="p_chunk">@@ -17,7 +17,6 @@</span> <span class="p_context"></span>
 #define __ASM_DEVICE_H
 
 struct dev_archdata {
<span class="p_del">-	const struct dma_map_ops *dma_ops;</span>
 #ifdef CONFIG_IOMMU_API
 	void *iommu;			/* private IOMMU data */
 #endif
<span class="p_header">diff --git a/arch/arm64/include/asm/dma-mapping.h b/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_header">index 1fedb43be712..58ae36cc3b60 100644</span>
<span class="p_header">--- a/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -29,8 +29,8 @@</span> <span class="p_context"> extern const struct dma_map_ops dummy_dma_ops;</span>
 
 static inline const struct dma_map_ops *__generic_dma_ops(struct device *dev)
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;archdata.dma_ops)</span>
<span class="p_del">-		return dev-&gt;archdata.dma_ops;</span>
<span class="p_add">+	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_add">+		return dev-&gt;dma_ops;</span>
 
 	/*
 	 * We expect no ISA devices, and all other DMA masters are expected to
<span class="p_header">diff --git a/arch/arm64/mm/dma-mapping.c b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">index bcef6368d48f..dbab4c6c084b 100644</span>
<span class="p_header">--- a/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">+++ b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_chunk">@@ -837,7 +837,7 @@</span> <span class="p_context"> static bool do_iommu_attach(struct device *dev, const struct iommu_ops *ops,</span>
 		return false;
 	}
 
<span class="p_del">-	dev-&gt;archdata.dma_ops = &amp;iommu_dma_ops;</span>
<span class="p_add">+	dev-&gt;dma_ops = &amp;iommu_dma_ops;</span>
 	return true;
 }
 
<span class="p_chunk">@@ -941,7 +941,7 @@</span> <span class="p_context"> static void __iommu_setup_dma_ops(struct device *dev, u64 dma_base, u64 size,</span>
 
 void arch_teardown_dma_ops(struct device *dev)
 {
<span class="p_del">-	dev-&gt;archdata.dma_ops = NULL;</span>
<span class="p_add">+	dev-&gt;dma_ops = NULL;</span>
 }
 
 #else
<span class="p_chunk">@@ -955,8 +955,8 @@</span> <span class="p_context"> static void __iommu_setup_dma_ops(struct device *dev, u64 dma_base, u64 size,</span>
 void arch_setup_dma_ops(struct device *dev, u64 dma_base, u64 size,
 			const struct iommu_ops *iommu, bool coherent)
 {
<span class="p_del">-	if (!dev-&gt;archdata.dma_ops)</span>
<span class="p_del">-		dev-&gt;archdata.dma_ops = &amp;swiotlb_dma_ops;</span>
<span class="p_add">+	if (!dev-&gt;dma_ops)</span>
<span class="p_add">+		dev-&gt;dma_ops = &amp;swiotlb_dma_ops;</span>
 
 	dev-&gt;archdata.dma_coherent = coherent;
 	__iommu_setup_dma_ops(dev, dma_base, size, iommu);
<span class="p_header">diff --git a/arch/m32r/include/asm/device.h b/arch/m32r/include/asm/device.h</span>
<span class="p_header">index 7955a9799466..5203fc87f080 100644</span>
<span class="p_header">--- a/arch/m32r/include/asm/device.h</span>
<span class="p_header">+++ b/arch/m32r/include/asm/device.h</span>
<span class="p_chunk">@@ -4,7 +4,6 @@</span> <span class="p_context"></span>
  * This file is released under the GPLv2
  */
 struct dev_archdata {
<span class="p_del">-	const struct dma_map_ops *dma_ops;</span>
 };
 
 struct pdev_archdata {
<span class="p_header">diff --git a/arch/m32r/include/asm/dma-mapping.h b/arch/m32r/include/asm/dma-mapping.h</span>
<span class="p_header">index 99c43d2f05dc..27b1597ac563 100644</span>
<span class="p_header">--- a/arch/m32r/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/m32r/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -12,8 +12,8 @@</span> <span class="p_context"></span>
 
 static inline const struct dma_map_ops *get_dma_ops(struct device *dev)
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;archdata.dma_ops)</span>
<span class="p_del">-		return dev-&gt;archdata.dma_ops;</span>
<span class="p_add">+	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_add">+		return dev-&gt;dma_ops;</span>
 	return &amp;dma_noop_ops;
 }
 
<span class="p_header">diff --git a/arch/mips/include/asm/device.h b/arch/mips/include/asm/device.h</span>
<span class="p_header">index ebc5c1265473..6aa796f1081a 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/device.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/device.h</span>
<span class="p_chunk">@@ -6,12 +6,7 @@</span> <span class="p_context"></span>
 #ifndef _ASM_MIPS_DEVICE_H
 #define _ASM_MIPS_DEVICE_H
 
<span class="p_del">-struct dma_map_ops;</span>
<span class="p_del">-</span>
 struct dev_archdata {
<span class="p_del">-	/* DMA operations on that device */</span>
<span class="p_del">-	const struct dma_map_ops *dma_ops;</span>
<span class="p_del">-</span>
 #ifdef CONFIG_DMA_PERDEV_COHERENT
 	/* Non-zero if DMA is coherent with CPU caches */
 	bool dma_coherent;
<span class="p_header">diff --git a/arch/mips/include/asm/dma-mapping.h b/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_header">index b59b084a7569..dad3b09fe993 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -13,8 +13,8 @@</span> <span class="p_context"> extern const struct dma_map_ops *mips_dma_map_ops;</span>
 
 static inline const struct dma_map_ops *get_dma_ops(struct device *dev)
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;archdata.dma_ops)</span>
<span class="p_del">-		return dev-&gt;archdata.dma_ops;</span>
<span class="p_add">+	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_add">+		return dev-&gt;dma_ops;</span>
 	else
 		return mips_dma_map_ops;
 }
<span class="p_header">diff --git a/arch/mips/pci/pci-octeon.c b/arch/mips/pci/pci-octeon.c</span>
<span class="p_header">index 308d051fc45c..9ee01936862e 100644</span>
<span class="p_header">--- a/arch/mips/pci/pci-octeon.c</span>
<span class="p_header">+++ b/arch/mips/pci/pci-octeon.c</span>
<span class="p_chunk">@@ -167,7 +167,7 @@</span> <span class="p_context"> int pcibios_plat_dev_init(struct pci_dev *dev)</span>
 		pci_write_config_dword(dev, pos + PCI_ERR_ROOT_STATUS, dconfig);
 	}
 
<span class="p_del">-	dev-&gt;dev.archdata.dma_ops = octeon_pci_dma_map_ops;</span>
<span class="p_add">+	dev-&gt;dev.dma_ops = octeon_pci_dma_map_ops;</span>
 
 	return 0;
 }
<span class="p_header">diff --git a/arch/powerpc/include/asm/device.h b/arch/powerpc/include/asm/device.h</span>
<span class="p_header">index 49cbb0fca233..0245bfcaac32 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/device.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/device.h</span>
<span class="p_chunk">@@ -6,7 +6,6 @@</span> <span class="p_context"></span>
 #ifndef _ASM_POWERPC_DEVICE_H
 #define _ASM_POWERPC_DEVICE_H
 
<span class="p_del">-struct dma_map_ops;</span>
 struct device_node;
 #ifdef CONFIG_PPC64
 struct pci_dn;
<span class="p_chunk">@@ -20,9 +19,6 @@</span> <span class="p_context"> struct iommu_table;</span>
  * drivers/macintosh/macio_asic.c
  */
 struct dev_archdata {
<span class="p_del">-	/* DMA operations on that device */</span>
<span class="p_del">-	const struct dma_map_ops	*dma_ops;</span>
<span class="p_del">-</span>
 	/*
 	 * These two used to be a union. However, with the hybrid ops we need
 	 * both so here we store both a DMA offset for direct mappings and
<span class="p_header">diff --git a/arch/powerpc/include/asm/dma-mapping.h b/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_header">index 2ec3eadf336f..59fbd4abcbf8 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -88,12 +88,12 @@</span> <span class="p_context"> static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 	if (unlikely(dev == NULL))
 		return NULL;
 
<span class="p_del">-	return dev-&gt;archdata.dma_ops;</span>
<span class="p_add">+	return dev-&gt;dma_ops;</span>
 }
 
 static inline void set_dma_ops(struct device *dev, const struct dma_map_ops *ops)
 {
<span class="p_del">-	dev-&gt;archdata.dma_ops = ops;</span>
<span class="p_add">+	dev-&gt;dma_ops = ops;</span>
 }
 
 /*
<span class="p_header">diff --git a/arch/powerpc/kernel/dma.c b/arch/powerpc/kernel/dma.c</span>
<span class="p_header">index 03b98f1f98ec..41c749586bd2 100644</span>
<span class="p_header">--- a/arch/powerpc/kernel/dma.c</span>
<span class="p_header">+++ b/arch/powerpc/kernel/dma.c</span>
<span class="p_chunk">@@ -33,7 +33,7 @@</span> <span class="p_context"> static u64 __maybe_unused get_pfn_limit(struct device *dev)</span>
 	struct dev_archdata __maybe_unused *sd = &amp;dev-&gt;archdata;
 
 #ifdef CONFIG_SWIOTLB
<span class="p_del">-	if (sd-&gt;max_direct_dma_addr &amp;&amp; sd-&gt;dma_ops == &amp;swiotlb_dma_ops)</span>
<span class="p_add">+	if (sd-&gt;max_direct_dma_addr &amp;&amp; dev-&gt;dma_ops == &amp;swiotlb_dma_ops)</span>
 		pfn = min_t(u64, pfn, sd-&gt;max_direct_dma_addr &gt;&gt; PAGE_SHIFT);
 #endif
 
<span class="p_header">diff --git a/arch/powerpc/platforms/cell/iommu.c b/arch/powerpc/platforms/cell/iommu.c</span>
<span class="p_header">index e1413e69e5fe..71b995bbcae0 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/cell/iommu.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/cell/iommu.c</span>
<span class="p_chunk">@@ -692,7 +692,7 @@</span> <span class="p_context"> static int cell_of_bus_notify(struct notifier_block *nb, unsigned long action,</span>
 		return 0;
 
 	/* We use the PCI DMA ops */
<span class="p_del">-	dev-&gt;archdata.dma_ops = get_pci_dma_ops();</span>
<span class="p_add">+	dev-&gt;dma_ops = get_pci_dma_ops();</span>
 
 	cell_dma_dev_setup(dev);
 
<span class="p_header">diff --git a/arch/powerpc/platforms/pasemi/iommu.c b/arch/powerpc/platforms/pasemi/iommu.c</span>
<span class="p_header">index e74adc4e7fd8..7fec04de27fc 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/pasemi/iommu.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/pasemi/iommu.c</span>
<span class="p_chunk">@@ -186,7 +186,7 @@</span> <span class="p_context"> static void pci_dma_dev_setup_pasemi(struct pci_dev *dev)</span>
 	 */
 	if (dev-&gt;vendor == 0x1959 &amp;&amp; dev-&gt;device == 0xa007 &amp;&amp;
 	    !firmware_has_feature(FW_FEATURE_LPAR)) {
<span class="p_del">-		dev-&gt;dev.archdata.dma_ops = &amp;dma_direct_ops;</span>
<span class="p_add">+		dev-&gt;dev.dma_ops = &amp;dma_direct_ops;</span>
 		/*
 		 * Set the coherent DMA mask to prevent the iommu
 		 * being used unnecessarily
<span class="p_header">diff --git a/arch/powerpc/platforms/pasemi/setup.c b/arch/powerpc/platforms/pasemi/setup.c</span>
<span class="p_header">index 3182400cf48f..c4a3e93dc324 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/pasemi/setup.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/pasemi/setup.c</span>
<span class="p_chunk">@@ -363,7 +363,7 @@</span> <span class="p_context"> static int pcmcia_notify(struct notifier_block *nb, unsigned long action,</span>
 		return 0;
 
 	/* We use the direct ops for localbus */
<span class="p_del">-	dev-&gt;archdata.dma_ops = &amp;dma_direct_ops;</span>
<span class="p_add">+	dev-&gt;dma_ops = &amp;dma_direct_ops;</span>
 
 	return 0;
 }
<span class="p_header">diff --git a/arch/powerpc/platforms/ps3/system-bus.c b/arch/powerpc/platforms/ps3/system-bus.c</span>
<span class="p_header">index c81450d98794..2d2e5f80a3d3 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/ps3/system-bus.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/ps3/system-bus.c</span>
<span class="p_chunk">@@ -756,11 +756,11 @@</span> <span class="p_context"> int ps3_system_bus_device_register(struct ps3_system_bus_device *dev)</span>
 
 	switch (dev-&gt;dev_type) {
 	case PS3_DEVICE_TYPE_IOC0:
<span class="p_del">-		dev-&gt;core.archdata.dma_ops = &amp;ps3_ioc0_dma_ops;</span>
<span class="p_add">+		dev-&gt;core.dma_ops = &amp;ps3_ioc0_dma_ops;</span>
 		dev_set_name(&amp;dev-&gt;core, &quot;ioc0_%02x&quot;, ++dev_ioc0_count);
 		break;
 	case PS3_DEVICE_TYPE_SB:
<span class="p_del">-		dev-&gt;core.archdata.dma_ops = &amp;ps3_sb_dma_ops;</span>
<span class="p_add">+		dev-&gt;core.dma_ops = &amp;ps3_sb_dma_ops;</span>
 		dev_set_name(&amp;dev-&gt;core, &quot;sb_%02x&quot;, ++dev_sb_count);
 
 		break;
<span class="p_header">diff --git a/arch/powerpc/platforms/pseries/ibmebus.c b/arch/powerpc/platforms/pseries/ibmebus.c</span>
<span class="p_header">index 2e36a0b8944a..99a6bf7f3bcf 100644</span>
<span class="p_header">--- a/arch/powerpc/platforms/pseries/ibmebus.c</span>
<span class="p_header">+++ b/arch/powerpc/platforms/pseries/ibmebus.c</span>
<span class="p_chunk">@@ -169,7 +169,7 @@</span> <span class="p_context"> static int ibmebus_create_device(struct device_node *dn)</span>
 		return -ENOMEM;
 
 	dev-&gt;dev.bus = &amp;ibmebus_bus_type;
<span class="p_del">-	dev-&gt;dev.archdata.dma_ops = &amp;ibmebus_dma_ops;</span>
<span class="p_add">+	dev-&gt;dev.dma_ops = &amp;ibmebus_dma_ops;</span>
 
 	ret = of_device_add(dev);
 	if (ret)
<span class="p_header">diff --git a/arch/s390/include/asm/device.h b/arch/s390/include/asm/device.h</span>
<span class="p_header">index 7955a9799466..5203fc87f080 100644</span>
<span class="p_header">--- a/arch/s390/include/asm/device.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/device.h</span>
<span class="p_chunk">@@ -4,7 +4,6 @@</span> <span class="p_context"></span>
  * This file is released under the GPLv2
  */
 struct dev_archdata {
<span class="p_del">-	const struct dma_map_ops *dma_ops;</span>
 };
 
 struct pdev_archdata {
<span class="p_header">diff --git a/arch/s390/include/asm/dma-mapping.h b/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_header">index 2776d205b1ff..a872027d0c1b 100644</span>
<span class="p_header">--- a/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -14,8 +14,8 @@</span> <span class="p_context"> extern const struct dma_map_ops s390_pci_dma_ops;</span>
 
 static inline const struct dma_map_ops *get_dma_ops(struct device *dev)
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;archdata.dma_ops)</span>
<span class="p_del">-		return dev-&gt;archdata.dma_ops;</span>
<span class="p_add">+	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_add">+		return dev-&gt;dma_ops;</span>
 	return &amp;dma_noop_ops;
 }
 
<span class="p_header">diff --git a/arch/s390/pci/pci.c b/arch/s390/pci/pci.c</span>
<span class="p_header">index 38e17d4d9884..82abef8b8574 100644</span>
<span class="p_header">--- a/arch/s390/pci/pci.c</span>
<span class="p_header">+++ b/arch/s390/pci/pci.c</span>
<span class="p_chunk">@@ -641,7 +641,7 @@</span> <span class="p_context"> int pcibios_add_device(struct pci_dev *pdev)</span>
 	int i;
 
 	pdev-&gt;dev.groups = zpci_attr_groups;
<span class="p_del">-	pdev-&gt;dev.archdata.dma_ops = &amp;s390_pci_dma_ops;</span>
<span class="p_add">+	pdev-&gt;dev.dma_ops = &amp;s390_pci_dma_ops;</span>
 	zpci_map_resources(pdev);
 
 	for (i = 0; i &lt; PCI_BAR_COUNT; i++) {
<span class="p_header">diff --git a/arch/tile/include/asm/device.h b/arch/tile/include/asm/device.h</span>
<span class="p_header">index 25f23ac7d361..1cf45422a0df 100644</span>
<span class="p_header">--- a/arch/tile/include/asm/device.h</span>
<span class="p_header">+++ b/arch/tile/include/asm/device.h</span>
<span class="p_chunk">@@ -17,9 +17,6 @@</span> <span class="p_context"></span>
 #define _ASM_TILE_DEVICE_H
 
 struct dev_archdata {
<span class="p_del">-	/* DMA operations on that device */</span>
<span class="p_del">-        const struct dma_map_ops	*dma_ops;</span>
<span class="p_del">-</span>
 	/* Offset of the DMA address from the PA. */
 	dma_addr_t		dma_offset;
 
<span class="p_header">diff --git a/arch/tile/include/asm/dma-mapping.h b/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_header">index 4a06cc75b856..c0620697eaad 100644</span>
<span class="p_header">--- a/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -31,8 +31,8 @@</span> <span class="p_context"> extern const struct dma_map_ops *gx_hybrid_pci_dma_map_ops;</span>
 
 static inline const struct dma_map_ops *get_dma_ops(struct device *dev)
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;archdata.dma_ops)</span>
<span class="p_del">-		return dev-&gt;archdata.dma_ops;</span>
<span class="p_add">+	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_add">+		return dev-&gt;dma_ops;</span>
 	else
 		return tile_dma_map_ops;
 }
<span class="p_chunk">@@ -61,7 +61,7 @@</span> <span class="p_context"> static inline void dma_mark_clean(void *addr, size_t size) {}</span>
 
 static inline void set_dma_ops(struct device *dev, const struct dma_map_ops *ops)
 {
<span class="p_del">-	dev-&gt;archdata.dma_ops = ops;</span>
<span class="p_add">+	dev-&gt;dma_ops = ops;</span>
 }
 
 static inline bool dma_capable(struct device *dev, dma_addr_t addr, size_t size)
<span class="p_header">diff --git a/arch/x86/include/asm/device.h b/arch/x86/include/asm/device.h</span>
<span class="p_header">index b2d0b4ced7e3..1b3ef26e77df 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/device.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/device.h</span>
<span class="p_chunk">@@ -2,9 +2,6 @@</span> <span class="p_context"></span>
 #define _ASM_X86_DEVICE_H
 
 struct dev_archdata {
<span class="p_del">-#ifdef CONFIG_X86_DEV_DMA_OPS</span>
<span class="p_del">-	const struct dma_map_ops *dma_ops;</span>
<span class="p_del">-#endif</span>
 #if defined(CONFIG_INTEL_IOMMU) || defined(CONFIG_AMD_IOMMU)
 	void *iommu; /* hook for IOMMU specific extension */
 #endif
<span class="p_header">diff --git a/arch/x86/include/asm/dma-mapping.h b/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_header">index 5e4772886a1e..94b5b96966cb 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -32,10 +32,10 @@</span> <span class="p_context"> static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
 #ifndef CONFIG_X86_DEV_DMA_OPS
 	return dma_ops;
 #else
<span class="p_del">-	if (unlikely(!dev) || !dev-&gt;archdata.dma_ops)</span>
<span class="p_add">+	if (unlikely(!dev) || !dev-&gt;dma_ops)</span>
 		return dma_ops;
 	else
<span class="p_del">-		return dev-&gt;archdata.dma_ops;</span>
<span class="p_add">+		return dev-&gt;dma_ops;</span>
 #endif
 }
 
<span class="p_header">diff --git a/arch/x86/kernel/pci-calgary_64.c b/arch/x86/kernel/pci-calgary_64.c</span>
<span class="p_header">index 17f180148c80..5070320780c6 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-calgary_64.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-calgary_64.c</span>
<span class="p_chunk">@@ -1177,7 +1177,7 @@</span> <span class="p_context"> static int __init calgary_init(void)</span>
 		tbl = find_iommu_table(&amp;dev-&gt;dev);
 
 		if (translation_enabled(tbl))
<span class="p_del">-			dev-&gt;dev.archdata.dma_ops = &amp;calgary_dma_ops;</span>
<span class="p_add">+			dev-&gt;dev.dma_ops = &amp;calgary_dma_ops;</span>
 	}
 
 	return ret;
<span class="p_chunk">@@ -1201,7 +1201,7 @@</span> <span class="p_context"> static int __init calgary_init(void)</span>
 		calgary_disable_translation(dev);
 		calgary_free_bus(dev);
 		pci_dev_put(dev); /* Undo calgary_init_one()&#39;s pci_dev_get() */
<span class="p_del">-		dev-&gt;dev.archdata.dma_ops = NULL;</span>
<span class="p_add">+		dev-&gt;dev.dma_ops = NULL;</span>
 	} while (1);
 
 	return ret;
<span class="p_header">diff --git a/arch/x86/pci/common.c b/arch/x86/pci/common.c</span>
<span class="p_header">index a4fdfa7dcc1b..0cb52ae0a8f0 100644</span>
<span class="p_header">--- a/arch/x86/pci/common.c</span>
<span class="p_header">+++ b/arch/x86/pci/common.c</span>
<span class="p_chunk">@@ -667,7 +667,7 @@</span> <span class="p_context"> static void set_dma_domain_ops(struct pci_dev *pdev)</span>
 	spin_lock(&amp;dma_domain_list_lock);
 	list_for_each_entry(domain, &amp;dma_domain_list, node) {
 		if (pci_domain_nr(pdev-&gt;bus) == domain-&gt;domain_nr) {
<span class="p_del">-			pdev-&gt;dev.archdata.dma_ops = domain-&gt;dma_ops;</span>
<span class="p_add">+			pdev-&gt;dev.dma_ops = domain-&gt;dma_ops;</span>
 			break;
 		}
 	}
<span class="p_header">diff --git a/arch/x86/pci/sta2x11-fixup.c b/arch/x86/pci/sta2x11-fixup.c</span>
<span class="p_header">index aa3828823170..ec008e800b45 100644</span>
<span class="p_header">--- a/arch/x86/pci/sta2x11-fixup.c</span>
<span class="p_header">+++ b/arch/x86/pci/sta2x11-fixup.c</span>
<span class="p_chunk">@@ -203,7 +203,7 @@</span> <span class="p_context"> static void sta2x11_setup_pdev(struct pci_dev *pdev)</span>
 		return;
 	pci_set_consistent_dma_mask(pdev, STA2X11_AMBA_SIZE - 1);
 	pci_set_dma_mask(pdev, STA2X11_AMBA_SIZE - 1);
<span class="p_del">-	pdev-&gt;dev.archdata.dma_ops = &amp;sta2x11_dma_ops;</span>
<span class="p_add">+	pdev-&gt;dev.dma_ops = &amp;sta2x11_dma_ops;</span>
 
 	/* We must enable all devices as master, for audio DMA to work */
 	pci_set_master(pdev);
<span class="p_chunk">@@ -223,7 +223,7 @@</span> <span class="p_context"> bool dma_capable(struct device *dev, dma_addr_t addr, size_t size)</span>
 {
 	struct sta2x11_mapping *map;
 
<span class="p_del">-	if (dev-&gt;archdata.dma_ops != &amp;sta2x11_dma_ops) {</span>
<span class="p_add">+	if (dev-&gt;dma_ops != &amp;sta2x11_dma_ops) {</span>
 		if (!dev-&gt;dma_mask)
 			return false;
 		return addr + size - 1 &lt;= *dev-&gt;dma_mask;
<span class="p_chunk">@@ -247,7 +247,7 @@</span> <span class="p_context"> bool dma_capable(struct device *dev, dma_addr_t addr, size_t size)</span>
  */
 dma_addr_t phys_to_dma(struct device *dev, phys_addr_t paddr)
 {
<span class="p_del">-	if (dev-&gt;archdata.dma_ops != &amp;sta2x11_dma_ops)</span>
<span class="p_add">+	if (dev-&gt;dma_ops != &amp;sta2x11_dma_ops)</span>
 		return paddr;
 	return p2a(paddr, to_pci_dev(dev));
 }
<span class="p_chunk">@@ -259,7 +259,7 @@</span> <span class="p_context"> dma_addr_t phys_to_dma(struct device *dev, phys_addr_t paddr)</span>
  */
 phys_addr_t dma_to_phys(struct device *dev, dma_addr_t daddr)
 {
<span class="p_del">-	if (dev-&gt;archdata.dma_ops != &amp;sta2x11_dma_ops)</span>
<span class="p_add">+	if (dev-&gt;dma_ops != &amp;sta2x11_dma_ops)</span>
 		return daddr;
 	return a2p(daddr, to_pci_dev(dev));
 }
<span class="p_header">diff --git a/arch/xtensa/include/asm/device.h b/arch/xtensa/include/asm/device.h</span>
<span class="p_header">index a77d45d39f35..1deeb8ebbb1b 100644</span>
<span class="p_header">--- a/arch/xtensa/include/asm/device.h</span>
<span class="p_header">+++ b/arch/xtensa/include/asm/device.h</span>
<span class="p_chunk">@@ -6,11 +6,7 @@</span> <span class="p_context"></span>
 #ifndef _ASM_XTENSA_DEVICE_H
 #define _ASM_XTENSA_DEVICE_H
 
<span class="p_del">-struct dma_map_ops;</span>
<span class="p_del">-</span>
 struct dev_archdata {
<span class="p_del">-	/* DMA operations on that device */</span>
<span class="p_del">-	const struct dma_map_ops *dma_ops;</span>
 };
 
 struct pdev_archdata {
<span class="p_header">diff --git a/arch/xtensa/include/asm/dma-mapping.h b/arch/xtensa/include/asm/dma-mapping.h</span>
<span class="p_header">index 50d23106cce0..9eecfc3c5dc4 100644</span>
<span class="p_header">--- a/arch/xtensa/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/xtensa/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -22,8 +22,8 @@</span> <span class="p_context"> extern const struct dma_map_ops xtensa_dma_map_ops;</span>
 
 static inline const struct dma_map_ops *get_dma_ops(struct device *dev)
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;archdata.dma_ops)</span>
<span class="p_del">-		return dev-&gt;archdata.dma_ops;</span>
<span class="p_add">+	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_add">+		return dev-&gt;dma_ops;</span>
 	else
 		return &amp;xtensa_dma_map_ops;
 }
<span class="p_header">diff --git a/drivers/infiniband/ulp/srpt/ib_srpt.c b/drivers/infiniband/ulp/srpt/ib_srpt.c</span>
<span class="p_header">index 3fc3f8b5752b..7ff9de063c53 100644</span>
<span class="p_header">--- a/drivers/infiniband/ulp/srpt/ib_srpt.c</span>
<span class="p_header">+++ b/drivers/infiniband/ulp/srpt/ib_srpt.c</span>
<span class="p_chunk">@@ -2524,7 +2524,7 @@</span> <span class="p_context"> static void srpt_add_one(struct ib_device *device)</span>
 	int i;
 
 	pr_debug(&quot;device = %p, device-&gt;dma_ops = %p\n&quot;, device,
<span class="p_del">-		 device-&gt;dma_ops);</span>
<span class="p_add">+		 device-&gt;dma_device-&gt;dma_ops);</span>
 
 	sdev = kzalloc(sizeof(*sdev), GFP_KERNEL);
 	if (!sdev)
<span class="p_header">diff --git a/drivers/iommu/amd_iommu.c b/drivers/iommu/amd_iommu.c</span>
<span class="p_header">index 3703fb9db419..f7b86679bafe 100644</span>
<span class="p_header">--- a/drivers/iommu/amd_iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/amd_iommu.c</span>
<span class="p_chunk">@@ -515,7 +515,7 @@</span> <span class="p_context"> static void iommu_uninit_device(struct device *dev)</span>
 	iommu_group_remove_device(dev);
 
 	/* Remove dma-ops */
<span class="p_del">-	dev-&gt;archdata.dma_ops = NULL;</span>
<span class="p_add">+	dev-&gt;dma_ops = NULL;</span>
 
 	/*
 	 * We keep dev_data around for unplugged devices and reuse it when the
<span class="p_chunk">@@ -2164,7 +2164,7 @@</span> <span class="p_context"> static int amd_iommu_add_device(struct device *dev)</span>
 				dev_name(dev));
 
 		iommu_ignore_device(dev);
<span class="p_del">-		dev-&gt;archdata.dma_ops = &amp;nommu_dma_ops;</span>
<span class="p_add">+		dev-&gt;dma_ops = &amp;nommu_dma_ops;</span>
 		goto out;
 	}
 	init_iommu_group(dev);
<span class="p_chunk">@@ -2181,7 +2181,7 @@</span> <span class="p_context"> static int amd_iommu_add_device(struct device *dev)</span>
 	if (domain-&gt;type == IOMMU_DOMAIN_IDENTITY)
 		dev_data-&gt;passthrough = true;
 	else
<span class="p_del">-		dev-&gt;archdata.dma_ops = &amp;amd_iommu_dma_ops;</span>
<span class="p_add">+		dev-&gt;dma_ops = &amp;amd_iommu_dma_ops;</span>
 
 out:
 	iommu_completion_wait(iommu);
<span class="p_header">diff --git a/drivers/misc/mic/bus/mic_bus.c b/drivers/misc/mic/bus/mic_bus.c</span>
<span class="p_header">index c4b27a25662a..77b16ca66846 100644</span>
<span class="p_header">--- a/drivers/misc/mic/bus/mic_bus.c</span>
<span class="p_header">+++ b/drivers/misc/mic/bus/mic_bus.c</span>
<span class="p_chunk">@@ -158,7 +158,7 @@</span> <span class="p_context"> mbus_register_device(struct device *pdev, int id, const struct dma_map_ops *dma_</span>
 	mbdev-&gt;dev.parent = pdev;
 	mbdev-&gt;id.device = id;
 	mbdev-&gt;id.vendor = MBUS_DEV_ANY_ID;
<span class="p_del">-	mbdev-&gt;dev.archdata.dma_ops = dma_ops;</span>
<span class="p_add">+	mbdev-&gt;dev.dma_ops = dma_ops;</span>
 	mbdev-&gt;dev.dma_mask = &amp;mbdev-&gt;dev.coherent_dma_mask;
 	dma_set_mask(&amp;mbdev-&gt;dev, DMA_BIT_MASK(64));
 	mbdev-&gt;dev.release = mbus_release_dev;
<span class="p_header">diff --git a/drivers/misc/mic/bus/scif_bus.c b/drivers/misc/mic/bus/scif_bus.c</span>
<span class="p_header">index e5d377e97c86..a444db5f61fe 100644</span>
<span class="p_header">--- a/drivers/misc/mic/bus/scif_bus.c</span>
<span class="p_header">+++ b/drivers/misc/mic/bus/scif_bus.c</span>
<span class="p_chunk">@@ -154,7 +154,7 @@</span> <span class="p_context"> scif_register_device(struct device *pdev, int id, const struct dma_map_ops *dma_</span>
 	sdev-&gt;dev.parent = pdev;
 	sdev-&gt;id.device = id;
 	sdev-&gt;id.vendor = SCIF_DEV_ANY_ID;
<span class="p_del">-	sdev-&gt;dev.archdata.dma_ops = dma_ops;</span>
<span class="p_add">+	sdev-&gt;dev.dma_ops = dma_ops;</span>
 	sdev-&gt;dev.release = scif_release_dev;
 	sdev-&gt;hw_ops = hw_ops;
 	sdev-&gt;dnode = dnode;
<span class="p_header">diff --git a/drivers/misc/mic/bus/vop_bus.c b/drivers/misc/mic/bus/vop_bus.c</span>
<span class="p_header">index e3caa6c53922..fd7f2a6049f8 100644</span>
<span class="p_header">--- a/drivers/misc/mic/bus/vop_bus.c</span>
<span class="p_header">+++ b/drivers/misc/mic/bus/vop_bus.c</span>
<span class="p_chunk">@@ -154,7 +154,7 @@</span> <span class="p_context"> vop_register_device(struct device *pdev, int id,</span>
 	vdev-&gt;dev.parent = pdev;
 	vdev-&gt;id.device = id;
 	vdev-&gt;id.vendor = VOP_DEV_ANY_ID;
<span class="p_del">-	vdev-&gt;dev.archdata.dma_ops = dma_ops;</span>
<span class="p_add">+	vdev-&gt;dev.dma_ops = dma_ops;</span>
 	vdev-&gt;dev.dma_mask = &amp;vdev-&gt;dev.coherent_dma_mask;
 	dma_set_mask(&amp;vdev-&gt;dev, DMA_BIT_MASK(64));
 	vdev-&gt;dev.release = vop_release_dev;
<span class="p_header">diff --git a/include/linux/device.h b/include/linux/device.h</span>
<span class="p_header">index 491b4c0ca633..46a567261ccc 100644</span>
<span class="p_header">--- a/include/linux/device.h</span>
<span class="p_header">+++ b/include/linux/device.h</span>
<span class="p_chunk">@@ -921,6 +921,7 @@</span> <span class="p_context"> struct device {</span>
 #ifdef CONFIG_NUMA
 	int		numa_node;	/* NUMA node this device is close to */
 #endif
<span class="p_add">+	const struct dma_map_ops *dma_ops;</span>
 	u64		*dma_mask;	/* dma mask (if dma&#39;able device) */
 	u64		coherent_dma_mask;/* Like dma_mask, but for
 					     alloc_coherent mappings as

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



