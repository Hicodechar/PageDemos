
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/4] mm: mlock: avoid increase mm-&gt;locked_vm on mlock() when already mlock2(,MLOCK_ONFAULT) - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/4] mm: mlock: avoid increase mm-&gt;locked_vm on mlock() when already mlock2(,MLOCK_ONFAULT)</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=119301">simon</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 30, 2016, 10:59 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1472554781-9835-3-git-send-email-wei.guo.simon@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9305197/mbox/"
   >mbox</a>
|
   <a href="/patch/9305197/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9305197/">/patch/9305197/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	747CD60756 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 30 Aug 2016 11:01:24 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6572828B44
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 30 Aug 2016 11:01:24 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 5917928B86; Tue, 30 Aug 2016 11:01:24 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, FREEMAIL_FROM,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E7F3228B44
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 30 Aug 2016 11:01:23 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1758282AbcH3LBP (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 30 Aug 2016 07:01:15 -0400
Received: from mail-pa0-f67.google.com ([209.85.220.67]:36707 &quot;EHLO
	mail-pa0-f67.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751629AbcH3LAb (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 30 Aug 2016 07:00:31 -0400
Received: by mail-pa0-f67.google.com with SMTP id ez1so962124pab.3;
	Tue, 30 Aug 2016 04:00:31 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=9QAMrZ9RoO7gOhrwdtv7jzAWU3SrKW+xFAeKROWIbHQ=;
	b=ZX1rHcoPmxZ3MHX5nm79Dp8dnG5ROw50AF3Y/+xcr/R4rWMqRiSiKaIbrZacBw9hzI
	5cEk9u51y7cOKGOm3QTybCtYGn0dZywr9UkeU0cAyjnYD8mlm23W0WslRQLaG3r+Q/E7
	gtoPXEplTfL2woZ1CjYnSyOtYyQ8ECZNvW3AIJcqIxUkhiPymJmrtlMZAgbVPbhydzwo
	NVfJtIkI9H5kE7Ktp3bUmzTwvFRNSuz68R0bX8YrEQBPmAmVtfKgDfWZgN3JE+64yMwg
	l2C+NWdisQNa8IZnvkW2P2owjhktHKb4AW9TvnjW7Xyo/kJjPjiIgLxpJ+LAURsMtEmS
	5yaA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20130820;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=9QAMrZ9RoO7gOhrwdtv7jzAWU3SrKW+xFAeKROWIbHQ=;
	b=TSB3Vtg/KK8WvmY25zoPlP2WoYte7FngYV8odC82uGBy5lbEN2cWwVMqKvHP9bU7A9
	/HrJDi4tYlcgV1e74M2/yizGpSI2CwL/8wtBDgfNjNROO3G1uKS+0zI+JpcKl7Omkzva
	+/XptvaaS3SVhPSDToOVM/c5SMrbXBD7uHp7USczzOfWzdeG+st8NhdHTsFmviDx75bx
	C3q5P9d543bg68m8K2tECsrj58ptL+PRLwmizOSWXQHeXxrXdF75RjXjMmHD9pkJ1fuA
	tFc0627DloyDL4lvRbQpvWE/akEFPC1Tj8gr0pzBua8dPUBq+q/s+5TcwCvsKyJ2LfYV
	wy7g==
X-Gm-Message-State: AE9vXwN6EpJVk/axNlmUbp32cw1GT5TxKLUO6QuExQlo0qW/DxQrbqlyPgDEEjusZrd4qg==
X-Received: by 10.66.235.100 with SMTP id ul4mr5132555pac.50.1472554830359; 
	Tue, 30 Aug 2016 04:00:30 -0700 (PDT)
Received: from simonLocalRHEL7.cn.ibm.com ([106.38.0.83])
	by smtp.gmail.com with ESMTPSA id
	s12sm56178085pfj.73.2016.08.30.04.00.25
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Tue, 30 Aug 2016 04:00:29 -0700 (PDT)
From: wei.guo.simon@gmail.com
To: linux-mm@kvack.org
Cc: Alexey Klimov &lt;klimov.linux@gmail.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Eric B Munson &lt;emunson@akamai.com&gt;,
	Geert Uytterhoeven &lt;geert@linux-m68k.org&gt;,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	linux-kernel@vger.kernel.org, linux-kselftest@vger.kernel.org,
	Mel Gorman &lt;mgorman@techsingularity.net&gt;,
	Michal Hocko &lt;mhocko@suse.com&gt;, Shuah Khan &lt;shuah@kernel.org&gt;,
	Simon Guo &lt;wei.guo.simon@gmail.com&gt;, Thierry Reding &lt;treding@nvidia.com&gt;,
	Vlastimil Babka &lt;vbabka@suse.cz&gt;
Subject: [PATCH 2/4] mm: mlock: avoid increase mm-&gt;locked_vm on mlock() when
	already mlock2(, MLOCK_ONFAULT)
Date: Tue, 30 Aug 2016 18:59:39 +0800
Message-Id: &lt;1472554781-9835-3-git-send-email-wei.guo.simon@gmail.com&gt;
X-Mailer: git-send-email 1.8.3.1
In-Reply-To: &lt;1472554781-9835-1-git-send-email-wei.guo.simon@gmail.com&gt;
References: &lt;1472554781-9835-1-git-send-email-wei.guo.simon@gmail.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=119301">simon</a> - Aug. 30, 2016, 10:59 a.m.</div>
<pre class="content">
<span class="from">From: Simon Guo &lt;wei.guo.simon@gmail.com&gt;</span>

When one vma was with flag VM_LOCKED|VM_LOCKONFAULT (by invoking
mlock2(,MLOCK_ONFAULT)), it can again be populated with mlock() with
VM_LOCKED flag only.

There is a hole in mlock_fixup() which increase mm-&gt;locked_vm twice even
the two operations are on the same vma and both with VM_LOCKED flags.

The issue can be reproduced by following code:
mlock2(p, 1024 * 64, MLOCK_ONFAULT); //VM_LOCKED|VM_LOCKONFAULT
mlock(p, 1024 * 64);  //VM_LOCKED
Then check the increase VmLck field in /proc/pid/status(to 128k).

When vma is set with different vm_flags, and the new vm_flags is with
VM_LOCKED, it is not necessarily be a &quot;new locked&quot; vma.  This patch
corrects this bug by prevent mm-&gt;locked_vm from increment when old
vm_flags is already VM_LOCKED.
<span class="signed-off-by">
Signed-off-by: Simon Guo &lt;wei.guo.simon@gmail.com&gt;</span>
---
 mm/mlock.c | 3 +++
 1 file changed, 3 insertions(+)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=874">Kirill A. Shutemov</a> - Aug. 30, 2016, 11:36 a.m.</div>
<pre class="content">
On Tue, Aug 30, 2016 at 06:59:39PM +0800, wei.guo.simon@gmail.com wrote:
<span class="quote">&gt; From: Simon Guo &lt;wei.guo.simon@gmail.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; When one vma was with flag VM_LOCKED|VM_LOCKONFAULT (by invoking</span>
<span class="quote">&gt; mlock2(,MLOCK_ONFAULT)), it can again be populated with mlock() with</span>
<span class="quote">&gt; VM_LOCKED flag only.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; There is a hole in mlock_fixup() which increase mm-&gt;locked_vm twice even</span>
<span class="quote">&gt; the two operations are on the same vma and both with VM_LOCKED flags.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The issue can be reproduced by following code:</span>
<span class="quote">&gt; mlock2(p, 1024 * 64, MLOCK_ONFAULT); //VM_LOCKED|VM_LOCKONFAULT</span>
<span class="quote">&gt; mlock(p, 1024 * 64);  //VM_LOCKED</span>
<span class="quote">&gt; Then check the increase VmLck field in /proc/pid/status(to 128k).</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; When vma is set with different vm_flags, and the new vm_flags is with</span>
<span class="quote">&gt; VM_LOCKED, it is not necessarily be a &quot;new locked&quot; vma.  This patch</span>
<span class="quote">&gt; corrects this bug by prevent mm-&gt;locked_vm from increment when old</span>
<span class="quote">&gt; vm_flags is already VM_LOCKED.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Simon Guo &lt;wei.guo.simon@gmail.com&gt;</span>
<span class="acked-by">
Acked-by: Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt;</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/mlock.c b/mm/mlock.c</span>
<span class="p_header">index 9283187..df29aad 100644</span>
<span class="p_header">--- a/mm/mlock.c</span>
<span class="p_header">+++ b/mm/mlock.c</span>
<span class="p_chunk">@@ -516,6 +516,7 @@</span> <span class="p_context"> static int mlock_fixup(struct vm_area_struct *vma, struct vm_area_struct **prev,</span>
 	int nr_pages;
 	int ret = 0;
 	int lock = !!(newflags &amp; VM_LOCKED);
<span class="p_add">+	vm_flags_t old_flags = vma-&gt;vm_flags;</span>
 
 	if (newflags == vma-&gt;vm_flags || (vma-&gt;vm_flags &amp; VM_SPECIAL) ||
 	    is_vm_hugetlb_page(vma) || vma == get_gate_vma(current-&gt;mm))
<span class="p_chunk">@@ -550,6 +551,8 @@</span> <span class="p_context"> success:</span>
 	nr_pages = (end - start) &gt;&gt; PAGE_SHIFT;
 	if (!lock)
 		nr_pages = -nr_pages;
<span class="p_add">+	else if (old_flags &amp; VM_LOCKED)</span>
<span class="p_add">+		nr_pages = 0;</span>
 	mm-&gt;locked_vm += nr_pages;
 
 	/*

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



