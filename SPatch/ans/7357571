
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[3.2,067/107] pagemap: hide physical addresses from non-privileged users - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [3.2,067/107] pagemap: hide physical addresses from non-privileged users</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=131">Ben Hutchings</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 9, 2015, 12:12 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;lsq.1444349548.68292734@decadent.org.uk&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7357571/mbox/"
   >mbox</a>
|
   <a href="/patch/7357571/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7357571/">/patch/7357571/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 6DBB69F1B9
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  9 Oct 2015 00:24:54 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 6707920814
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  9 Oct 2015 00:24:53 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 58BB420819
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  9 Oct 2015 00:24:52 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1760111AbbJIAV3 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 8 Oct 2015 20:21:29 -0400
Received: from shadbolt.e.decadent.org.uk ([88.96.1.126]:35327 &quot;EHLO
	shadbolt.e.decadent.org.uk&quot; rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1758936AbbJIARb (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 8 Oct 2015 20:17:31 -0400
Received: from deadeye.wl.decadent.org.uk ([192.168.4.247] helo=deadeye)
	by shadbolt.decadent.org.uk with esmtps
	(TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128) (Exim 4.84)
	(envelope-from &lt;ben@decadent.org.uk&gt;)
	id 1ZkLNH-0004lI-M7; Fri, 09 Oct 2015 01:17:27 +0100
Received: from ben by deadeye with local (Exim 4.86)
	(envelope-from &lt;ben@decadent.org.uk&gt;)
	id 1ZkLNC-0007Cn-5T; Fri, 09 Oct 2015 01:17:22 +0100
Content-Type: text/plain; charset=&quot;UTF-8&quot;
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
MIME-Version: 1.0
From: Ben Hutchings &lt;ben@decadent.org.uk&gt;
To: linux-kernel@vger.kernel.org, stable@vger.kernel.org
CC: akpm@linux-foundation.org, &quot;Naoya Horiguchi&quot; &lt;n-horiguchi@ah.jp.nec.com&gt;,
	&quot;Linus Torvalds&quot; &lt;torvalds@linux-foundation.org&gt;,
	&quot;Mark Williamson&quot; &lt;mwilliamson@undo-software.com&gt;,
	&quot;Konstantin Khlebnikov&quot; &lt;khlebnikov@yandex-team.ru&gt;
Date: Fri, 09 Oct 2015 01:12:28 +0100
Message-ID: &lt;lsq.1444349548.68292734@decadent.org.uk&gt;
X-Mailer: LinuxStableQueue (scripts by bwh)
Subject: [PATCH 3.2 067/107] pagemap: hide physical addresses from
	non-privileged users
In-Reply-To: &lt;lsq.1444349547.316291576@decadent.org.uk&gt;
X-SA-Exim-Connect-IP: 192.168.4.247
X-SA-Exim-Mail-From: ben@decadent.org.uk
X-SA-Exim-Scanned: No (on shadbolt.decadent.org.uk);
	SAEximRunCond expanded to false
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=131">Ben Hutchings</a> - Oct. 9, 2015, 12:12 a.m.</div>
<pre class="content">
3.2.72-rc1 review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: Konstantin Khlebnikov &lt;khlebnikov@yandex-team.ru&gt;</span>

commit 1c90308e7a77af6742a97d1021cca923b23b7f0d upstream.

This patch makes pagemap readable for normal users and hides physical
addresses from them.  For some use-cases PFN isn&#39;t required at all.

See http://lkml.kernel.org/r/1425935472-17949-1-git-send-email-kirill@shutemov.name

Fixes: ab676b7d6fbf (&quot;pagemap: do not leak physical addresses to non-privileged userspace&quot;)
<span class="signed-off-by">Signed-off-by: Konstantin Khlebnikov &lt;khlebnikov@yandex-team.ru&gt;</span>
Cc: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;
<span class="reviewed-by">Reviewed-by: Mark Williamson &lt;mwilliamson@undo-software.com&gt;</span>
<span class="tested-by">Tested-by:  Mark Williamson &lt;mwilliamson@undo-software.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;</span>
<span class="signed-off-by">Signed-off-by: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;</span>
[bwh: Backported to 3.2:
 - Add the same check in the places where we look up a PFN
 - Add struct pagemapread * parameters where necessary
 - Open-code file_ns_capable()
 - Delete pagemap_open() entirely, as it would always return 0]
<span class="signed-off-by">Signed-off-by: Ben Hutchings &lt;ben@decadent.org.uk&gt;</span>
---
 fs/proc/task_mmu.c | 25 ++++++++++++++-----------
 1 file changed, 14 insertions(+), 11 deletions(-)


--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/fs/proc/task_mmu.c</span>
<span class="p_header">+++ b/fs/proc/task_mmu.c</span>
<span class="p_chunk">@@ -11,6 +11,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/rmap.h&gt;
 #include &lt;linux/swap.h&gt;
 #include &lt;linux/swapops.h&gt;
<span class="p_add">+#include &lt;linux/security.h&gt;</span>
 
 #include &lt;asm/elf.h&gt;
 #include &lt;asm/uaccess.h&gt;
<span class="p_chunk">@@ -606,6 +607,7 @@</span> <span class="p_context"> const struct file_operations proc_clear_</span>
 struct pagemapread {
 	int pos, len;		/* units: PM_ENTRY_BYTES, not bytes */
 	u64 *buffer;
<span class="p_add">+	bool show_pfn;</span>
 };
 
 #define PM_ENTRY_BYTES      sizeof(u64)
<span class="p_chunk">@@ -654,14 +656,14 @@</span> <span class="p_context"> static u64 swap_pte_to_pagemap_entry(pte</span>
 	return swp_type(e) | (swp_offset(e) &lt;&lt; MAX_SWAPFILES_SHIFT);
 }
 
<span class="p_del">-static u64 pte_to_pagemap_entry(pte_t pte)</span>
<span class="p_add">+static u64 pte_to_pagemap_entry(struct pagemapread *pm, pte_t pte)</span>
 {
 	u64 pme = 0;
 	if (is_swap_pte(pte))
 		pme = PM_PFRAME(swap_pte_to_pagemap_entry(pte))
 			| PM_PSHIFT(PAGE_SHIFT) | PM_SWAP;
 	else if (pte_present(pte))
<span class="p_del">-		pme = PM_PFRAME(pte_pfn(pte))</span>
<span class="p_add">+		pme = (pm-&gt;show_pfn ? PM_PFRAME(pte_pfn(pte)) : 0)</span>
 			| PM_PSHIFT(PAGE_SHIFT) | PM_PRESENT;
 	return pme;
 }
<span class="p_chunk">@@ -693,7 +695,7 @@</span> <span class="p_context"> static int pagemap_pte_range(pmd_t *pmd,</span>
 		if (vma &amp;&amp; (vma-&gt;vm_start &lt;= addr) &amp;&amp;
 		    !is_vm_hugetlb_page(vma)) {
 			pte = pte_offset_map(pmd, addr);
<span class="p_del">-			pfn = pte_to_pagemap_entry(*pte);</span>
<span class="p_add">+			pfn = pte_to_pagemap_entry(pm, *pte);</span>
 			/* unmap before userspace copy */
 			pte_unmap(pte);
 		}
<span class="p_chunk">@@ -708,11 +710,11 @@</span> <span class="p_context"> static int pagemap_pte_range(pmd_t *pmd,</span>
 }
 
 #ifdef CONFIG_HUGETLB_PAGE
<span class="p_del">-static u64 huge_pte_to_pagemap_entry(pte_t pte, int offset)</span>
<span class="p_add">+static u64 huge_pte_to_pagemap_entry(struct pagemapread *pm, pte_t pte, int offset)</span>
 {
 	u64 pme = 0;
 	if (pte_present(pte))
<span class="p_del">-		pme = PM_PFRAME(pte_pfn(pte) + offset)</span>
<span class="p_add">+		pme = (pm-&gt;show_pfn ? PM_PFRAME(pte_pfn(pte) + offset) : 0)</span>
 			| PM_PSHIFT(PAGE_SHIFT) | PM_PRESENT;
 	return pme;
 }
<span class="p_chunk">@@ -728,7 +730,7 @@</span> <span class="p_context"> static int pagemap_hugetlb_range(pte_t *</span>
 
 	for (; addr != end; addr += PAGE_SIZE) {
 		int offset = (addr &amp; ~hmask) &gt;&gt; PAGE_SHIFT;
<span class="p_del">-		pfn = huge_pte_to_pagemap_entry(*pte, offset);</span>
<span class="p_add">+		pfn = huge_pte_to_pagemap_entry(pm, *pte, offset);</span>
 		err = add_to_pagemap(addr, pfn, pm);
 		if (err)
 			return err;
<span class="p_chunk">@@ -792,6 +794,10 @@</span> <span class="p_context"> static ssize_t pagemap_read(struct file</span>
 	if (!count)
 		goto out_task;
 
<span class="p_add">+	/* do not disclose physical addresses: attack vector */</span>
<span class="p_add">+	pm.show_pfn = !security_capable(&amp;init_user_ns, file-&gt;f_cred, </span>
<span class="p_add">+					CAP_SYS_ADMIN);</span>
<span class="p_add">+</span>
 	pm.len = (PAGEMAP_WALK_SIZE &gt;&gt; PAGE_SHIFT);
 	pm.buffer = kmalloc(pm.len * PM_ENTRY_BYTES, GFP_TEMPORARY);
 	ret = -ENOMEM;
<span class="p_chunk">@@ -864,19 +870,9 @@</span> <span class="p_context"> out:</span>
 	return ret;
 }
 
<span class="p_del">-static int pagemap_open(struct inode *inode, struct file *file)</span>
<span class="p_del">-{</span>
<span class="p_del">-	/* do not disclose physical addresses to unprivileged</span>
<span class="p_del">-	   userspace (closes a rowhammer attack vector) */</span>
<span class="p_del">-	if (!capable(CAP_SYS_ADMIN))</span>
<span class="p_del">-		return -EPERM;</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 const struct file_operations proc_pagemap_operations = {
 	.llseek		= mem_lseek, /* borrow this */
 	.read		= pagemap_read,
<span class="p_del">-	.open		= pagemap_open,</span>
 };
 #endif /* CONFIG_PROC_PAGE_MONITOR */
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



