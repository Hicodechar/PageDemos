
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[tip:x86/mm] x86/power: Add 5-level paging support - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [tip:x86/mm] x86/power: Add 5-level paging support</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 14, 2017, 9:39 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;tip-06c830a48346643e195801460dfe16d96ba4dff5@git.kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9622779/mbox/"
   >mbox</a>
|
   <a href="/patch/9622779/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9622779/">/patch/9622779/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	0C78460492 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 14 Mar 2017 09:41:26 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 0B3202854A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 14 Mar 2017 09:41:26 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id F1B6C2854F; Tue, 14 Mar 2017 09:41:25 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 705EF2854A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 14 Mar 2017 09:41:25 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751126AbdCNJlR (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 14 Mar 2017 05:41:17 -0400
Received: from terminus.zytor.com ([65.50.211.136]:46326 &quot;EHLO
	terminus.zytor.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751071AbdCNJlO (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 14 Mar 2017 05:41:14 -0400
Received: from terminus.zytor.com (localhost [127.0.0.1])
	by terminus.zytor.com (8.15.2/8.15.2) with ESMTP id v2E9dxxV019736;
	Tue, 14 Mar 2017 02:39:59 -0700
Received: (from tipbot@localhost)
	by terminus.zytor.com (8.15.2/8.15.2/Submit) id v2E9dxCf019727;
	Tue, 14 Mar 2017 02:39:59 -0700
Date: Tue, 14 Mar 2017 02:39:59 -0700
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to
	tipbot@zytor.com using -f
From: &quot;tip-bot for Kirill A. Shutemov&quot; &lt;tipbot@zytor.com&gt;
Message-ID: &lt;tip-06c830a48346643e195801460dfe16d96ba4dff5@git.kernel.org&gt;
Cc: dvlasenk@redhat.com, torvalds@linux-foundation.org,
	akpm@linux-foundation.org, linux-kernel@vger.kernel.org,
	jpoimboe@redhat.com, peterz@infradead.org, luto@kernel.org,
	kirill.shutemov@linux.intel.com, bp@alien8.de, mhocko@suse.com,
	mingo@kernel.org, arnd@arndb.de, hpa@zytor.com, brgerst@gmail.com,
	tglx@linutronix.de, dave.hansen@intel.com
Reply-To: linux-kernel@vger.kernel.org, dvlasenk@redhat.com,
	akpm@linux-foundation.org, torvalds@linux-foundation.org,
	jpoimboe@redhat.com, luto@kernel.org, peterz@infradead.org,
	mingo@kernel.org, arnd@arndb.de, mhocko@suse.com,
	kirill.shutemov@linux.intel.com, bp@alien8.de,
	dave.hansen@intel.com, tglx@linutronix.de, hpa@zytor.com,
	brgerst@gmail.com
In-Reply-To: &lt;20170313143309.16020-7-kirill.shutemov@linux.intel.com&gt;
References: &lt;20170313143309.16020-7-kirill.shutemov@linux.intel.com&gt;
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/mm] x86/power: Add 5-level paging support
Git-Commit-ID: 06c830a48346643e195801460dfe16d96ba4dff5
X-Mailer: tip-git-log-daemon
Robot-ID: &lt;tip-bot.git.kernel.org&gt;
Robot-Unsubscribe: Contact &lt;mailto:hpa@kernel.org&gt; to get blacklisted from
	these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a> - March 14, 2017, 9:39 a.m.</div>
<pre class="content">
Commit-ID:  06c830a48346643e195801460dfe16d96ba4dff5
Gitweb:     http://git.kernel.org/tip/06c830a48346643e195801460dfe16d96ba4dff5
Author:     Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt;
AuthorDate: Mon, 13 Mar 2017 17:33:09 +0300
Committer:  Ingo Molnar &lt;mingo@kernel.org&gt;
CommitDate: Tue, 14 Mar 2017 08:45:09 +0100

x86/power: Add 5-level paging support

set_up_temporary_text_mapping() and relocate_restore_code() require
adjustments to handle additional page table level.
<span class="signed-off-by">
Signed-off-by: Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt;</span>
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Andy Lutomirski &lt;luto@kernel.org&gt;
Cc: Arnd Bergmann &lt;arnd@arndb.de&gt;
Cc: Borislav Petkov &lt;bp@alien8.de&gt;
Cc: Brian Gerst &lt;brgerst@gmail.com&gt;
Cc: Dave Hansen &lt;dave.hansen@intel.com&gt;
Cc: Denys Vlasenko &lt;dvlasenk@redhat.com&gt;
Cc: H. Peter Anvin &lt;hpa@zytor.com&gt;
Cc: Josh Poimboeuf &lt;jpoimboe@redhat.com&gt;
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Michal Hocko &lt;mhocko@suse.com&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Cc: linux-arch@vger.kernel.org
Cc: linux-mm@kvack.org
Link: http://lkml.kernel.org/r/20170313143309.16020-7-kirill.shutemov@linux.intel.com
[ Minor readability edits. ]
<span class="signed-off-by">Signed-off-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
---
 arch/x86/power/hibernate_64.c | 47 ++++++++++++++++++++++++++++++-------------
 1 file changed, 33 insertions(+), 14 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/power/hibernate_64.c b/arch/x86/power/hibernate_64.c</span>
<span class="p_header">index ded2e82..2a9f993 100644</span>
<span class="p_header">--- a/arch/x86/power/hibernate_64.c</span>
<span class="p_header">+++ b/arch/x86/power/hibernate_64.c</span>
<span class="p_chunk">@@ -49,6 +49,7 @@</span> <span class="p_context"> static int set_up_temporary_text_mapping(pgd_t *pgd)</span>
 {
 	pmd_t *pmd;
 	pud_t *pud;
<span class="p_add">+	p4d_t *p4d;</span>
 
 	/*
 	 * The new mapping only has to cover the page containing the image
<span class="p_chunk">@@ -63,6 +64,13 @@</span> <span class="p_context"> static int set_up_temporary_text_mapping(pgd_t *pgd)</span>
 	 * the virtual address space after switching over to the original page
 	 * tables used by the image kernel.
 	 */
<span class="p_add">+</span>
<span class="p_add">+	if (IS_ENABLED(CONFIG_X86_5LEVEL)) {</span>
<span class="p_add">+		p4d = (p4d_t *)get_safe_page(GFP_ATOMIC);</span>
<span class="p_add">+		if (!p4d)</span>
<span class="p_add">+			return -ENOMEM;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	pud = (pud_t *)get_safe_page(GFP_ATOMIC);
 	if (!pud)
 		return -ENOMEM;
<span class="p_chunk">@@ -75,8 +83,13 @@</span> <span class="p_context"> static int set_up_temporary_text_mapping(pgd_t *pgd)</span>
 		__pmd((jump_address_phys &amp; PMD_MASK) | __PAGE_KERNEL_LARGE_EXEC));
 	set_pud(pud + pud_index(restore_jump_address),
 		__pud(__pa(pmd) | _KERNPG_TABLE));
<span class="p_del">-	set_pgd(pgd + pgd_index(restore_jump_address),</span>
<span class="p_del">-		__pgd(__pa(pud) | _KERNPG_TABLE));</span>
<span class="p_add">+	if (IS_ENABLED(CONFIG_X86_5LEVEL)) {</span>
<span class="p_add">+		set_p4d(p4d + p4d_index(restore_jump_address), __p4d(__pa(pud) | _KERNPG_TABLE));</span>
<span class="p_add">+		set_pgd(pgd + pgd_index(restore_jump_address), __pgd(__pa(p4d) | _KERNPG_TABLE));</span>
<span class="p_add">+	} else {</span>
<span class="p_add">+		/* No p4d for 4-level paging: point the pgd to the pud page table */</span>
<span class="p_add">+		set_pgd(pgd + pgd_index(restore_jump_address), __pgd(__pa(pud) | _KERNPG_TABLE));</span>
<span class="p_add">+	}</span>
 
 	return 0;
 }
<span class="p_chunk">@@ -124,7 +137,10 @@</span> <span class="p_context"> static int set_up_temporary_mappings(void)</span>
 static int relocate_restore_code(void)
 {
 	pgd_t *pgd;
<span class="p_add">+	p4d_t *p4d;</span>
 	pud_t *pud;
<span class="p_add">+	pmd_t *pmd;</span>
<span class="p_add">+	pte_t *pte;</span>
 
 	relocated_restore_code = get_safe_page(GFP_ATOMIC);
 	if (!relocated_restore_code)
<span class="p_chunk">@@ -134,22 +150,25 @@</span> <span class="p_context"> static int relocate_restore_code(void)</span>
 
 	/* Make the page containing the relocated code executable */
 	pgd = (pgd_t *)__va(read_cr3()) + pgd_index(relocated_restore_code);
<span class="p_del">-	pud = pud_offset(pgd, relocated_restore_code);</span>
<span class="p_add">+	p4d = p4d_offset(pgd, relocated_restore_code);</span>
<span class="p_add">+	if (p4d_large(*p4d)) {</span>
<span class="p_add">+		set_p4d(p4d, __p4d(p4d_val(*p4d) &amp; ~_PAGE_NX));</span>
<span class="p_add">+		goto out;</span>
<span class="p_add">+	}</span>
<span class="p_add">+	pud = pud_offset(p4d, relocated_restore_code);</span>
 	if (pud_large(*pud)) {
 		set_pud(pud, __pud(pud_val(*pud) &amp; ~_PAGE_NX));
<span class="p_del">-	} else {</span>
<span class="p_del">-		pmd_t *pmd = pmd_offset(pud, relocated_restore_code);</span>
<span class="p_del">-</span>
<span class="p_del">-		if (pmd_large(*pmd)) {</span>
<span class="p_del">-			set_pmd(pmd, __pmd(pmd_val(*pmd) &amp; ~_PAGE_NX));</span>
<span class="p_del">-		} else {</span>
<span class="p_del">-			pte_t *pte = pte_offset_kernel(pmd, relocated_restore_code);</span>
<span class="p_del">-</span>
<span class="p_del">-			set_pte(pte, __pte(pte_val(*pte) &amp; ~_PAGE_NX));</span>
<span class="p_del">-		}</span>
<span class="p_add">+		goto out;</span>
<span class="p_add">+	}</span>
<span class="p_add">+	pmd = pmd_offset(pud, relocated_restore_code);</span>
<span class="p_add">+	if (pmd_large(*pmd)) {</span>
<span class="p_add">+		set_pmd(pmd, __pmd(pmd_val(*pmd) &amp; ~_PAGE_NX));</span>
<span class="p_add">+		goto out;</span>
 	}
<span class="p_add">+	pte = pte_offset_kernel(pmd, relocated_restore_code);</span>
<span class="p_add">+	set_pte(pte, __pte(pte_val(*pte) &amp; ~_PAGE_NX));</span>
<span class="p_add">+out:</span>
 	__flush_tlb_all();
<span class="p_del">-</span>
 	return 0;
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



