
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[04/10] hugetlbfs: hugetlb_vmtruncate_list() needs to take a range to delete - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [04/10] hugetlbfs: hugetlb_vmtruncate_list() needs to take a range to delete</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 2, 2015, 3:38 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1435851526-4200-5-git-send-email-mike.kravetz@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6711201/mbox/"
   >mbox</a>
|
   <a href="/patch/6711201/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6711201/">/patch/6711201/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 2BC759F54C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  2 Jul 2015 15:41:46 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 582242075F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  2 Jul 2015 15:41:45 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 60189206CC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  2 Jul 2015 15:41:44 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754056AbbGBPl2 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 2 Jul 2015 11:41:28 -0400
Received: from aserp1040.oracle.com ([141.146.126.69]:35111 &quot;EHLO
	aserp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753302AbbGBPji (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 2 Jul 2015 11:39:38 -0400
Received: from aserv0022.oracle.com (aserv0022.oracle.com [141.146.126.234])
	by aserp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2)
	with ESMTP id t62FdBNr015601
	(version=TLSv1 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Thu, 2 Jul 2015 15:39:11 GMT
Received: from userv0122.oracle.com (userv0122.oracle.com [156.151.31.75])
	by aserv0022.oracle.com (8.13.8/8.13.8) with ESMTP id t62FdAsV004593
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL); 
	Thu, 2 Jul 2015 15:39:11 GMT
Received: from abhmp0014.oracle.com (abhmp0014.oracle.com [141.146.116.20])
	by userv0122.oracle.com (8.13.8/8.13.8) with ESMTP id
	t62FdA8d030538; Thu, 2 Jul 2015 15:39:10 GMT
Received: from monkey.oracle.com (/50.53.81.168)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Thu, 02 Jul 2015 08:39:10 -0700
From: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
To: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
	linux-api@vger.kernel.org
Cc: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;,
	Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;,
	David Rientjes &lt;rientjes@google.com&gt;, Hugh Dickins &lt;hughd@google.com&gt;,
	Davidlohr Bueso &lt;dave@stgolabs.net&gt;,
	Aneesh Kumar &lt;aneesh.kumar@linux.vnet.ibm.com&gt;,
	Hillf Danton &lt;hillf.zj@alibaba-inc.com&gt;,
	Christoph Hellwig &lt;hch@infradead.org&gt;,
	Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
Subject: [PATCH 04/10] hugetlbfs: hugetlb_vmtruncate_list() needs to take a
	range to delete
Date: Thu,  2 Jul 2015 08:38:40 -0700
Message-Id: &lt;1435851526-4200-5-git-send-email-mike.kravetz@oracle.com&gt;
X-Mailer: git-send-email 2.1.0
In-Reply-To: &lt;1435851526-4200-1-git-send-email-mike.kravetz@oracle.com&gt;
References: &lt;1435851526-4200-1-git-send-email-mike.kravetz@oracle.com&gt;
X-Source-IP: aserv0022.oracle.com [141.146.126.234]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.5 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - July 2, 2015, 3:38 p.m.</div>
<pre class="content">
fallocate hole punch will want to unmap a specific range of pages.
Modify the existing hugetlb_vmtruncate_list() routine to take a
start/end range.  If end is 0, this indicates all pages after start
should be unmapped.  This is the same as the existing truncate
functionality.  Modify existing callers to add 0 as end of range.

Since the routine will be used in hole punch as well as truncate
operations, it is more appropriately renamed to hugetlb_vmdelete_list().
<span class="signed-off-by">
Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
---
 fs/hugetlbfs/inode.c | 25 ++++++++++++++++++-------
 1 file changed, 18 insertions(+), 7 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/fs/hugetlbfs/inode.c b/fs/hugetlbfs/inode.c</span>
<span class="p_header">index e5a93d8..e9d4c8d 100644</span>
<span class="p_header">--- a/fs/hugetlbfs/inode.c</span>
<span class="p_header">+++ b/fs/hugetlbfs/inode.c</span>
<span class="p_chunk">@@ -374,11 +374,15 @@</span> <span class="p_context"> static void hugetlbfs_evict_inode(struct inode *inode)</span>
 }
 
 static inline void
<span class="p_del">-hugetlb_vmtruncate_list(struct rb_root *root, pgoff_t pgoff)</span>
<span class="p_add">+hugetlb_vmdelete_list(struct rb_root *root, pgoff_t start, pgoff_t end)</span>
 {
 	struct vm_area_struct *vma;
 
<span class="p_del">-	vma_interval_tree_foreach(vma, root, pgoff, ULONG_MAX) {</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * end == 0 indicates that the entire range after</span>
<span class="p_add">+	 * start should be unmapped.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	vma_interval_tree_foreach(vma, root, start, end ? end : ULONG_MAX) {</span>
 		unsigned long v_offset;
 
 		/*
<span class="p_chunk">@@ -387,13 +391,20 @@</span> <span class="p_context"> hugetlb_vmtruncate_list(struct rb_root *root, pgoff_t pgoff)</span>
 		 * which overlap the truncated area starting at pgoff,
 		 * and no vma on a 32-bit arch can span beyond the 4GB.
 		 */
<span class="p_del">-		if (vma-&gt;vm_pgoff &lt; pgoff)</span>
<span class="p_del">-			v_offset = (pgoff - vma-&gt;vm_pgoff) &lt;&lt; PAGE_SHIFT;</span>
<span class="p_add">+		if (vma-&gt;vm_pgoff &lt; start)</span>
<span class="p_add">+			v_offset = (start - vma-&gt;vm_pgoff) &lt;&lt; PAGE_SHIFT;</span>
 		else
 			v_offset = 0;
 
<span class="p_del">-		unmap_hugepage_range(vma, vma-&gt;vm_start + v_offset,</span>
<span class="p_del">-				     vma-&gt;vm_end, NULL);</span>
<span class="p_add">+		if (end) {</span>
<span class="p_add">+			end = ((end - start) &lt;&lt; PAGE_SHIFT) +</span>
<span class="p_add">+			       vma-&gt;vm_start + v_offset;</span>
<span class="p_add">+			if (end &gt; vma-&gt;vm_end)</span>
<span class="p_add">+				end = vma-&gt;vm_end;</span>
<span class="p_add">+		} else</span>
<span class="p_add">+			end = vma-&gt;vm_end;</span>
<span class="p_add">+</span>
<span class="p_add">+		unmap_hugepage_range(vma, vma-&gt;vm_start + v_offset, end, NULL);</span>
 	}
 }
 
<span class="p_chunk">@@ -409,7 +420,7 @@</span> <span class="p_context"> static int hugetlb_vmtruncate(struct inode *inode, loff_t offset)</span>
 	i_size_write(inode, offset);
 	i_mmap_lock_write(mapping);
 	if (!RB_EMPTY_ROOT(&amp;mapping-&gt;i_mmap))
<span class="p_del">-		hugetlb_vmtruncate_list(&amp;mapping-&gt;i_mmap, pgoff);</span>
<span class="p_add">+		hugetlb_vmdelete_list(&amp;mapping-&gt;i_mmap, pgoff, 0);</span>
 	i_mmap_unlock_write(mapping);
 	truncate_hugepages(inode, offset);
 	return 0;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



