
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>SME/32-bit regression - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    SME/32-bit regression</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=7500">Borislav Petkov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 6, 2017, 9:45 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170906094504.6pp4xdsmcxaympth@pd.tnic&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9940219/mbox/"
   >mbox</a>
|
   <a href="/patch/9940219/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9940219/">/patch/9940219/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	DE0C060224 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  6 Sep 2017 09:45:33 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D791628B6E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  6 Sep 2017 09:45:33 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id CB1F828B73; Wed,  6 Sep 2017 09:45:33 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6960D28B6E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  6 Sep 2017 09:45:33 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752585AbdIFJpP (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 6 Sep 2017 05:45:15 -0400
Received: from mail.skyhub.de ([5.9.137.197]:55818 &quot;EHLO mail.skyhub.de&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752395AbdIFJpN (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 6 Sep 2017 05:45:13 -0400
X-Virus-Scanned: Nedap ESD1 at mail.skyhub.de
Received: from mail.skyhub.de ([127.0.0.1])
	by localhost (blast.alien8.de [127.0.0.1]) (amavisd-new, port 10026)
	with ESMTP id 02dLuEYsMYvy; Wed,  6 Sep 2017 11:45:12 +0200 (CEST)
Received: from pd.tnic (p2003008C2F295500EC10A8A0DE3082FC.dip0.t-ipconnect.de
	[IPv6:2003:8c:2f29:5500:ec10:a8a0:de30:82fc])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256
	bits)) (No client certificate requested)
	by mail.skyhub.de (SuperMail on ZX Spectrum 128k) with ESMTPSA id
	7DAB51EC021C; Wed,  6 Sep 2017 11:45:12 +0200 (CEST)
Date: Wed, 6 Sep 2017 11:45:04 +0200
From: Borislav Petkov &lt;bp@alien8.de&gt;
To: Tom Lendacky &lt;thomas.lendacky@amd.com&gt;
Cc: Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;,
	thomas.lendacky@amd.com, X86 ML &lt;x86@kernel.org&gt;,
	&quot;linux-kernel@vger.kernel.org&quot; &lt;linux-kernel@vger.kernel.org&gt;,
	Ingo Molnar &lt;mingo@redhat.com&gt;, &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;
Subject: Re: SME/32-bit regression
Message-ID: &lt;20170906094504.6pp4xdsmcxaympth@pd.tnic&gt;
References: &lt;4c07148a-5d97-0fc2-aa9b-1db31429736d@oracle.com&gt;
	&lt;20170906092618.fkvzrqx32z6iqf2t@pd.tnic&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: &lt;20170906092618.fkvzrqx32z6iqf2t@pd.tnic&gt;
User-Agent: NeoMutt/20170113 (1.7.2)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7500">Borislav Petkov</a> - Sept. 6, 2017, 9:45 a.m.</div>
<pre class="content">
Btw,

Tom, pls remind me again, why didn&#39;t we make sme_me_mask u64?

Because this is the most logical type for a memory encryption mask which
covers 64 bits... In any case, the below builds fine here.

---
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7500">Borislav Petkov</a> - Sept. 6, 2017, 4:44 p.m.</div>
<pre class="content">
On Wed, Sep 06, 2017 at 04:30:23PM +0000, Lendacky, Thomas wrote:
<span class="quote">&gt; Sorry for the top post, I&#39;m on holiday and don&#39;t have access to a good</span>
<span class="quote">&gt; email client... I went with unsigned long to match all the page table</span>
<span class="quote">&gt; related declarations. If changing to u64 doesn&#39;t generate any warnings</span>
<span class="quote">&gt; or other issues them I&#39;m good with that.</span>

Ok, no worries. Lemme run the smoke-tests on it and test it to see
everything else still works.

Thx.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=150921">Brijesh Singh</a> - Sept. 6, 2017, 6:06 p.m.</div>
<pre class="content">
On 09/06/2017 11:44 AM, Borislav Petkov wrote:
<span class="quote">&gt; On Wed, Sep 06, 2017 at 04:30:23PM +0000, Lendacky, Thomas wrote:</span>
<span class="quote">&gt;&gt; Sorry for the top post, I&#39;m on holiday and don&#39;t have access to a good</span>
<span class="quote">&gt;&gt; email client... I went with unsigned long to match all the page table</span>
<span class="quote">&gt;&gt; related declarations. If changing to u64 doesn&#39;t generate any warnings</span>
<span class="quote">&gt;&gt; or other issues them I&#39;m good with that.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Ok, no worries. Lemme run the smoke-tests on it and test it to see</span>
<span class="quote">&gt; everything else still works.</span>
<span class="quote">&gt; </span>

I did the following quick run with your patch and everything seems to be
working okay

64-bit build:
-------
1) Baremetal SME *enabled* - System boots fine
  a) 32-bit guest launch : successful (KVM HV)
  b) 64-bit guest launch : successful (KVM HV)
  c) 64-bit SEV guest launch : successful (KVM HV)

2) Baremetal SME *disabled* - System boots fine
  a) 32-bit guest launch : successful (KVM HV)
  b) 64-bit guest launch : successful (KVM HV)
  c) 64-bit SEV guest launch : successful (KVM HV)

32-bit build
----------
I am installing 32-bit distro to verify 32-bit baremetal boot and will
report my findings soon.

-Brijesh
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7500">Borislav Petkov</a> - Sept. 6, 2017, 6:19 p.m.</div>
<pre class="content">
On Wed, Sep 06, 2017 at 01:06:50PM -0500, Brijesh Singh wrote:
<span class="quote">&gt; I did the following quick run with your patch and everything seems to be</span>
<span class="quote">&gt; working okay</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; 64-bit build:</span>
<span class="quote">&gt; -------</span>
<span class="quote">&gt; 1) Baremetal SME *enabled* - System boots fine</span>
<span class="quote">&gt;  a) 32-bit guest launch : successful (KVM HV)</span>
<span class="quote">&gt;  b) 64-bit guest launch : successful (KVM HV)</span>
<span class="quote">&gt;  c) 64-bit SEV guest launch : successful (KVM HV)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; 2) Baremetal SME *disabled* - System boots fine</span>
<span class="quote">&gt;  a) 32-bit guest launch : successful (KVM HV)</span>
<span class="quote">&gt;  b) 64-bit guest launch : successful (KVM HV)</span>
<span class="quote">&gt;  c) 64-bit SEV guest launch : successful (KVM HV)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; 32-bit build</span>
<span class="quote">&gt; ----------</span>
<span class="quote">&gt; I am installing 32-bit distro to verify 32-bit baremetal boot and will</span>
<span class="quote">&gt; report my findings soon.</span>

Thanks Brijesh, that&#39;s awesome!

I&#39;ll add your Tested-by once you&#39;re done testing successfully.

:-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=60131">Boris Ostrovsky</a> - Sept. 6, 2017, 9:03 p.m.</div>
<pre class="content">
On 09/06/2017 02:19 PM, Borislav Petkov wrote:
<span class="quote">&gt; On Wed, Sep 06, 2017 at 01:06:50PM -0500, Brijesh Singh wrote:</span>
<span class="quote">&gt;&gt; I did the following quick run with your patch and everything seems to be</span>
<span class="quote">&gt;&gt; working okay</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; 64-bit build:</span>
<span class="quote">&gt;&gt; -------</span>
<span class="quote">&gt;&gt; 1) Baremetal SME *enabled* - System boots fine</span>
<span class="quote">&gt;&gt;  a) 32-bit guest launch : successful (KVM HV)</span>
<span class="quote">&gt;&gt;  b) 64-bit guest launch : successful (KVM HV)</span>
<span class="quote">&gt;&gt;  c) 64-bit SEV guest launch : successful (KVM HV)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; 2) Baremetal SME *disabled* - System boots fine</span>
<span class="quote">&gt;&gt;  a) 32-bit guest launch : successful (KVM HV)</span>
<span class="quote">&gt;&gt;  b) 64-bit guest launch : successful (KVM HV)</span>
<span class="quote">&gt;&gt;  c) 64-bit SEV guest launch : successful (KVM HV)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; 32-bit build</span>
<span class="quote">&gt;&gt; ----------</span>
<span class="quote">&gt;&gt; I am installing 32-bit distro to verify 32-bit baremetal boot and will</span>
<span class="quote">&gt;&gt; report my findings soon.</span>
<span class="quote">&gt; Thanks Brijesh, that&#39;s awesome!</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; I&#39;ll add your Tested-by once you&#39;re done testing successfully.</span>


You can have my Tested-by (mostly Xen but some baremetal too).

-boris
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=150921">Brijesh Singh</a> - Sept. 7, 2017, 12:26 a.m.</div>
<pre class="content">
On 09/06/2017 04:03 PM, Boris Ostrovsky wrote:
<span class="quote">&gt; On 09/06/2017 02:19 PM, Borislav Petkov wrote:</span>
<span class="quote">&gt;&gt; On Wed, Sep 06, 2017 at 01:06:50PM -0500, Brijesh Singh wrote:</span>
<span class="quote">&gt;&gt;&gt; I did the following quick run with your patch and everything seems to be</span>
<span class="quote">&gt;&gt;&gt; working okay</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; 64-bit build:</span>
<span class="quote">&gt;&gt;&gt; -------</span>
<span class="quote">&gt;&gt;&gt; 1) Baremetal SME *enabled* - System boots fine</span>
<span class="quote">&gt;&gt;&gt;   a) 32-bit guest launch : successful (KVM HV)</span>
<span class="quote">&gt;&gt;&gt;   b) 64-bit guest launch : successful (KVM HV)</span>
<span class="quote">&gt;&gt;&gt;   c) 64-bit SEV guest launch : successful (KVM HV)</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; 2) Baremetal SME *disabled* - System boots fine</span>
<span class="quote">&gt;&gt;&gt;   a) 32-bit guest launch : successful (KVM HV)</span>
<span class="quote">&gt;&gt;&gt;   b) 64-bit guest launch : successful (KVM HV)</span>
<span class="quote">&gt;&gt;&gt;   c) 64-bit SEV guest launch : successful (KVM HV)</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; 32-bit build</span>
<span class="quote">&gt;&gt;&gt; ----------</span>
<span class="quote">&gt;&gt;&gt; I am installing 32-bit distro to verify 32-bit baremetal boot and will</span>
<span class="quote">&gt;&gt;&gt; report my findings soon.</span>
<span class="quote">&gt;&gt; Thanks Brijesh, that&#39;s awesome!</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; I&#39;ll add your Tested-by once you&#39;re done testing successfully.</span>
<span class="quote">&gt; </span>

32-bit seems to be working well - thanks

-Brijesh
<span class="quote">
&gt; </span>
<span class="quote">&gt; You can have my Tested-by (mostly Xen but some baremetal too).</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -boris</span>
<span class="quote">&gt;</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/mem_encrypt.h b/arch/x86/include/asm/mem_encrypt.h</span>
<span class="p_header">index 8e618fcf1f7c..6a77c63540f7 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/mem_encrypt.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/mem_encrypt.h</span>
<span class="p_chunk">@@ -21,7 +21,7 @@</span> <span class="p_context"></span>
 
 #ifdef CONFIG_AMD_MEM_ENCRYPT
 
<span class="p_del">-extern unsigned long sme_me_mask;</span>
<span class="p_add">+extern u64 sme_me_mask;</span>
 
 void sme_encrypt_execute(unsigned long encrypted_kernel_vaddr,
 			 unsigned long decrypted_kernel_vaddr,
<span class="p_chunk">@@ -49,7 +49,7 @@</span> <span class="p_context"> void swiotlb_set_mem_attributes(void *vaddr, unsigned long size);</span>
 
 #else	/* !CONFIG_AMD_MEM_ENCRYPT */
 
<span class="p_del">-#define sme_me_mask	0UL</span>
<span class="p_add">+#define sme_me_mask	0ULL</span>
 
 static inline void __init sme_early_encrypt(resource_size_t paddr,
 					    unsigned long size) { }
<span class="p_header">diff --git a/arch/x86/mm/mem_encrypt.c b/arch/x86/mm/mem_encrypt.c</span>
<span class="p_header">index 0fbd09269757..3fcc8e01683b 100644</span>
<span class="p_header">--- a/arch/x86/mm/mem_encrypt.c</span>
<span class="p_header">+++ b/arch/x86/mm/mem_encrypt.c</span>
<span class="p_chunk">@@ -37,7 +37,7 @@</span> <span class="p_context"> static char sme_cmdline_off[] __initdata = &quot;off&quot;;</span>
  * reside in the .data section so as not to be zeroed out when the .bss
  * section is later cleared.
  */
<span class="p_del">-unsigned long sme_me_mask __section(.data) = 0;</span>
<span class="p_add">+u64 sme_me_mask __section(.data) = 0;</span>
 EXPORT_SYMBOL_GPL(sme_me_mask);
 
 /* Buffer used for early in-place encryption by BSP, no locking needed */
<span class="p_header">diff --git a/include/linux/mem_encrypt.h b/include/linux/mem_encrypt.h</span>
<span class="p_header">index 1255f09f5e42..265a9cd21cb4 100644</span>
<span class="p_header">--- a/include/linux/mem_encrypt.h</span>
<span class="p_header">+++ b/include/linux/mem_encrypt.h</span>
<span class="p_chunk">@@ -21,7 +21,7 @@</span> <span class="p_context"></span>
 
 #else	/* !CONFIG_ARCH_HAS_MEM_ENCRYPT */
 
<span class="p_del">-#define sme_me_mask	0UL</span>
<span class="p_add">+#define sme_me_mask	0ULL</span>
 
 #endif	/* CONFIG_ARCH_HAS_MEM_ENCRYPT */
 
<span class="p_chunk">@@ -30,18 +30,23 @@</span> <span class="p_context"> static inline bool sme_active(void)</span>
 	return !!sme_me_mask;
 }
 
<span class="p_del">-static inline unsigned long sme_get_me_mask(void)</span>
<span class="p_add">+static inline u64 sme_get_me_mask(void)</span>
 {
 	return sme_me_mask;
 }
 
<span class="p_add">+#ifdef CONFIG_AMD_MEM_ENCRYPT</span>
 /*
  * The __sme_set() and __sme_clr() macros are useful for adding or removing
  * the encryption mask from a value (e.g. when dealing with pagetable
  * entries).
  */
<span class="p_del">-#define __sme_set(x)		((unsigned long)(x) | sme_me_mask)</span>
<span class="p_del">-#define __sme_clr(x)		((unsigned long)(x) &amp; ~sme_me_mask)</span>
<span class="p_add">+#define __sme_set(x)		((x) | sme_me_mask)</span>
<span class="p_add">+#define __sme_clr(x)		((x) &amp; ~sme_me_mask)</span>
<span class="p_add">+#else</span>
<span class="p_add">+#define __sme_set(x)		(x)</span>
<span class="p_add">+#define __sme_clr(x)		(x)</span>
<span class="p_add">+#endif</span>
 
 #endif	/* __ASSEMBLY__ */
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



