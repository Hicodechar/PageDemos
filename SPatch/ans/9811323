
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,v4,09/17] powerpc: call the hash functions with the correct pkey value - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,v4,09/17] powerpc: call the hash functions with the correct pkey value</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=2448">Ram Pai</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 27, 2017, 10:11 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1498558319-32466-10-git-send-email-linuxram@us.ibm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9811323/mbox/"
   >mbox</a>
|
   <a href="/patch/9811323/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9811323/">/patch/9811323/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	06B3B603D7 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 27 Jun 2017 10:17:00 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id EDB65283DA
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 27 Jun 2017 10:16:59 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id E22E328409; Tue, 27 Jun 2017 10:16:59 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.3 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI, RCVD_IN_SORBS_SPAM,
	T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 84BA5283DA
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 27 Jun 2017 10:16:59 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752922AbdF0KQ5 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 27 Jun 2017 06:16:57 -0400
Received: from mail-qk0-f195.google.com ([209.85.220.195]:33414 &quot;EHLO
	mail-qk0-f195.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752755AbdF0KMe (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 27 Jun 2017 06:12:34 -0400
Received: by mail-qk0-f195.google.com with SMTP id p21so3259312qke.0;
	Tue, 27 Jun 2017 03:12:34 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=sender:from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=IX6wkICYaB3oBfSUcJfYJOfQ/y9R5yX0ahq1bG2huZA=;
	b=g6ofWW+9ZjidTWEpOowyNCb9ppXi377F0goHS3P2GGw+nE4Z72P5LWD40pvB4ZiJxC
	p3sXFy+tAXuLB1akJGmJifhi+8KiaWUeA+avrHDkfHZ/PLILKFGlX0s7Be0U+8ZILxxv
	dT4Ax/2SgD5i54Bk26m5yzpRtp6yTxgDUSnJ9AINv30DPxV+3th/+bczDLZNGq95j53M
	yETXAweZRW1tAA7QX5c/njOvdVrSSO5SRM4N55uEns2/uQZywNSWd9MpbBH/e3soOSkL
	oZJ7byV08kpERZ58RifhysuzaMQPcC1jLFJsM1QEIiJC0GbL5m3d3k4GNMN4wJ6iZDql
	l5UA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:sender:from:to:cc:subject:date:message-id
	:in-reply-to:references;
	bh=IX6wkICYaB3oBfSUcJfYJOfQ/y9R5yX0ahq1bG2huZA=;
	b=c5WR5n4ha5121jnfdJ2V2yhtOJSwFJVkcO+7LubWWgtrOX9LUOPwgXJNZhqEbQIh87
	cp0y+FwsFnSXwyK1lDpzoQh/e0+jjXrABMjgTcYAFDGBarI/Xl8dE+56CtqvR1UxhDog
	LGDbQkmtsmch141e/Q+8s65FsxkZsTHlgU7ZRAJILvIg7AMMJWhgY0mELqhDvDv+00o8
	IzujF3S53UlSw0Wbi6+sUJKtSNjLS2fwcbh4pR1B9PAdUxCUUrFk8i6n3LfNb/5svPv1
	EfKxxPb2eOgsAQtQoe0coggTqsYWhqGaWwtSBu2tl1a411Jc16aR+LnGOOi3523xqdUZ
	rVdg==
X-Gm-Message-State: AKS2vOxW8Q1kUxm/3EeIgDOyBb0AjRs25zOkJDfW1zfMVjYnvF8vk29V
	qCvslvdsTEcz1g==
X-Received: by 10.55.125.198 with SMTP id y189mr5004245qkc.156.1498558353644;
	Tue, 27 Jun 2017 03:12:33 -0700 (PDT)
Received: from localhost.localdomain (50-39-103-96.bvtn.or.frontiernet.net.
	[50.39.103.96]) by smtp.gmail.com with ESMTPSA id
	n3sm1897140qkd.21.2017.06.27.03.12.31
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Tue, 27 Jun 2017 03:12:33 -0700 (PDT)
From: Ram Pai &lt;linuxram@us.ibm.com&gt;
To: linuxppc-dev@lists.ozlabs.org, linux-kernel@vger.kernel.org,
	linux-arch@vger.kernel.org, linux-mm@kvack.org, x86@kernel.org,
	linux-doc@vger.kernel.org, linux-kselftest@vger.kernel.org
Cc: benh@kernel.crashing.org, paulus@samba.org, mpe@ellerman.id.au,
	khandual@linux.vnet.ibm.com, aneesh.kumar@linux.vnet.ibm.com,
	bsingharora@gmail.com, dave.hansen@intel.com, hbabu@us.ibm.com,
	linuxram@us.ibm.com, arnd@arndb.de, akpm@linux-foundation.org,
	corbet@lwn.net, mingo@redhat.com
Subject: [RFC v4 09/17] powerpc: call the hash functions with the correct
	pkey value
Date: Tue, 27 Jun 2017 03:11:51 -0700
Message-Id: &lt;1498558319-32466-10-git-send-email-linuxram@us.ibm.com&gt;
X-Mailer: git-send-email 1.7.1
In-Reply-To: &lt;1498558319-32466-1-git-send-email-linuxram@us.ibm.com&gt;
References: &lt;1498558319-32466-1-git-send-email-linuxram@us.ibm.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2448">Ram Pai</a> - June 27, 2017, 10:11 a.m.</div>
<pre class="content">
Pass the correct protection key value to the hash functions on
page fault.
<span class="signed-off-by">
Signed-off-by: Ram Pai &lt;linuxram@us.ibm.com&gt;</span>
---
 arch/powerpc/include/asm/pkeys.h | 11 +++++++++++
 arch/powerpc/mm/hash_utils_64.c  |  4 ++++
 arch/powerpc/mm/mem.c            |  6 ++++++
 3 files changed, 21 insertions(+)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1141">Aneesh Kumar K.V</a> - June 27, 2017, 3:24 p.m.</div>
<pre class="content">
On Tuesday 27 June 2017 03:41 PM, Ram Pai wrote:
<span class="quote">&gt; Pass the correct protection key value to the hash functions on</span>
<span class="quote">&gt; page fault.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Ram Pai &lt;linuxram@us.ibm.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;   arch/powerpc/include/asm/pkeys.h | 11 +++++++++++</span>
<span class="quote">&gt;   arch/powerpc/mm/hash_utils_64.c  |  4 ++++</span>
<span class="quote">&gt;   arch/powerpc/mm/mem.c            |  6 ++++++</span>
<span class="quote">&gt;   3 files changed, 21 insertions(+)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/arch/powerpc/include/asm/pkeys.h b/arch/powerpc/include/asm/pkeys.h</span>
<span class="quote">&gt; index ef1c601..1370b3f 100644</span>
<span class="quote">&gt; --- a/arch/powerpc/include/asm/pkeys.h</span>
<span class="quote">&gt; +++ b/arch/powerpc/include/asm/pkeys.h</span>
<span class="quote">&gt; @@ -74,6 +74,17 @@ static inline bool mm_pkey_is_allocated(struct mm_struct *mm, int pkey)</span>
<span class="quote">&gt;   }</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;   /*</span>
<span class="quote">&gt; + * return the protection key of the vma corresponding to the</span>
<span class="quote">&gt; + * given effective address @ea.</span>
<span class="quote">&gt; + */</span>
<span class="quote">&gt; +static inline int mm_pkey(struct mm_struct *mm, unsigned long ea)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	struct vm_area_struct *vma = find_vma(mm, ea);</span>
<span class="quote">&gt; +	int pkey = vma ? vma_pkey(vma) : 0;</span>
<span class="quote">&gt; +	return pkey;</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +/*</span>
<span class="quote">&gt;</span>

That is not going to work in hash fault path right ? We can&#39;t do a 
find_vma there without holding the mmap_sem

-aneesh
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2448">Ram Pai</a> - June 28, 2017, 7:12 a.m.</div>
<pre class="content">
On Tue, Jun 27, 2017 at 08:54:07PM +0530, Aneesh Kumar K.V wrote:
<span class="quote">&gt; </span>
<span class="quote">&gt; </span>
<span class="quote">&gt; On Tuesday 27 June 2017 03:41 PM, Ram Pai wrote:</span>
<span class="quote">&gt; &gt;Pass the correct protection key value to the hash functions on</span>
<span class="quote">&gt; &gt;page fault.</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt;Signed-off-by: Ram Pai &lt;linuxram@us.ibm.com&gt;</span>
<span class="quote">&gt; &gt;---</span>
<span class="quote">&gt; &gt;  arch/powerpc/include/asm/pkeys.h | 11 +++++++++++</span>
<span class="quote">&gt; &gt;  arch/powerpc/mm/hash_utils_64.c  |  4 ++++</span>
<span class="quote">&gt; &gt;  arch/powerpc/mm/mem.c            |  6 ++++++</span>
<span class="quote">&gt; &gt;  3 files changed, 21 insertions(+)</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt;diff --git a/arch/powerpc/include/asm/pkeys.h b/arch/powerpc/include/asm/pkeys.h</span>
<span class="quote">&gt; &gt;index ef1c601..1370b3f 100644</span>
<span class="quote">&gt; &gt;--- a/arch/powerpc/include/asm/pkeys.h</span>
<span class="quote">&gt; &gt;+++ b/arch/powerpc/include/asm/pkeys.h</span>
<span class="quote">&gt; &gt;@@ -74,6 +74,17 @@ static inline bool mm_pkey_is_allocated(struct mm_struct *mm, int pkey)</span>
<span class="quote">&gt; &gt;  }</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt;  /*</span>
<span class="quote">&gt; &gt;+ * return the protection key of the vma corresponding to the</span>
<span class="quote">&gt; &gt;+ * given effective address @ea.</span>
<span class="quote">&gt; &gt;+ */</span>
<span class="quote">&gt; &gt;+static inline int mm_pkey(struct mm_struct *mm, unsigned long ea)</span>
<span class="quote">&gt; &gt;+{</span>
<span class="quote">&gt; &gt;+	struct vm_area_struct *vma = find_vma(mm, ea);</span>
<span class="quote">&gt; &gt;+	int pkey = vma ? vma_pkey(vma) : 0;</span>
<span class="quote">&gt; &gt;+	return pkey;</span>
<span class="quote">&gt; &gt;+}</span>
<span class="quote">&gt; &gt;+</span>
<span class="quote">&gt; &gt;+/*</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; That is not going to work in hash fault path right ? We can&#39;t do a</span>
<span class="quote">&gt; find_vma there without holding the mmap_sem</span>

There is a fundamental problem with this new design. Looks like we can&#39;t
hold a lock in that path, without badly hurting the performance.

I am moving back to the old design. Cant by-pass the pte. The
keys will be programmed into the pte which will than be used
to program the hpte.

RP
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/powerpc/include/asm/pkeys.h b/arch/powerpc/include/asm/pkeys.h</span>
<span class="p_header">index ef1c601..1370b3f 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/pkeys.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/pkeys.h</span>
<span class="p_chunk">@@ -74,6 +74,17 @@</span> <span class="p_context"> static inline bool mm_pkey_is_allocated(struct mm_struct *mm, int pkey)</span>
 }
 
 /*
<span class="p_add">+ * return the protection key of the vma corresponding to the</span>
<span class="p_add">+ * given effective address @ea.</span>
<span class="p_add">+ */</span>
<span class="p_add">+static inline int mm_pkey(struct mm_struct *mm, unsigned long ea)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct vm_area_struct *vma = find_vma(mm, ea);</span>
<span class="p_add">+	int pkey = vma ? vma_pkey(vma) : 0;</span>
<span class="p_add">+	return pkey;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+/*</span>
  * Returns a positive, 5-bit key on success, or -1 on failure.
  */
 static inline int mm_pkey_alloc(struct mm_struct *mm)
<span class="p_header">diff --git a/arch/powerpc/mm/hash_utils_64.c b/arch/powerpc/mm/hash_utils_64.c</span>
<span class="p_header">index 7e67dea..403f75d 100644</span>
<span class="p_header">--- a/arch/powerpc/mm/hash_utils_64.c</span>
<span class="p_header">+++ b/arch/powerpc/mm/hash_utils_64.c</span>
<span class="p_chunk">@@ -1319,6 +1319,10 @@</span> <span class="p_context"> int hash_page_mm(struct mm_struct *mm, unsigned long ea,</span>
 		goto bail;
 	}
 
<span class="p_add">+#ifdef CONFIG_PPC64_MEMORY_PROTECTION_KEYS</span>
<span class="p_add">+	pkey = mm_pkey(mm, ea);</span>
<span class="p_add">+#endif /* CONFIG_PPC64_MEMORY_PROTECTION_KEYS */</span>
<span class="p_add">+</span>
 	if (hugeshift) {
 		if (is_thp)
 			rc = __hash_page_thp(ea, access, vsid, (pmd_t *)ptep,
<span class="p_header">diff --git a/arch/powerpc/mm/mem.c b/arch/powerpc/mm/mem.c</span>
<span class="p_header">index ec890d3..0fcaa48 100644</span>
<span class="p_header">--- a/arch/powerpc/mm/mem.c</span>
<span class="p_header">+++ b/arch/powerpc/mm/mem.c</span>
<span class="p_chunk">@@ -541,8 +541,14 @@</span> <span class="p_context"> void update_mmu_cache(struct vm_area_struct *vma, unsigned long address,</span>
 		return;
 	}
 
<span class="p_add">+#ifdef CONFIG_PPC64_MEMORY_PROTECTION_KEYS</span>
<span class="p_add">+	hash_preload_pkey(vma-&gt;vm_mm, address, access, trap, vma_pkey(vma));</span>
<span class="p_add">+#else</span>
 	hash_preload(vma-&gt;vm_mm, address, access, trap);
<span class="p_add">+#endif /* CONFIG_PPC64_MEMORY_PROTECTION_KEYS */</span>
<span class="p_add">+</span>
 #endif /* CONFIG_PPC_STD_MMU */
<span class="p_add">+</span>
 #if (defined(CONFIG_PPC_BOOK3E_64) || defined(CONFIG_PPC_FSL_BOOK3E)) \
 	&amp;&amp; defined(CONFIG_HUGETLB_PAGE)
 	if (is_vm_hugetlb_page(vma))

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



