
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.9,108/130] swiotlb: Add swiotlb=noforce debug option - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.9,108/130] swiotlb: Add swiotlb=noforce debug option</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 24, 2017, 7:55 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170124075539.342568439@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9534295/mbox/"
   >mbox</a>
|
   <a href="/patch/9534295/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9534295/">/patch/9534295/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	33BBD6042D for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 24 Jan 2017 08:03:59 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 238C520453
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 24 Jan 2017 08:03:59 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 183DB22701; Tue, 24 Jan 2017 08:03:59 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D4BFB20453
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 24 Jan 2017 08:03:57 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752316AbdAXIDz (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 24 Jan 2017 03:03:55 -0500
Received: from mail.linuxfoundation.org ([140.211.169.12]:44776 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752283AbdAXIDu (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 24 Jan 2017 03:03:50 -0500
Received: from localhost (unknown [78.192.101.3])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id C6533958;
	Tue, 24 Jan 2017 08:03:09 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;, stable@vger.kernel.org,
	Geert Uytterhoeven &lt;geert+renesas@glider.be&gt;,
	Konrad Rzeszutek Wilk &lt;konrad.wilk@oracle.com&gt;
Subject: [PATCH 4.9 108/130] swiotlb: Add swiotlb=noforce debug option
Date: Tue, 24 Jan 2017 08:55:48 +0100
Message-Id: &lt;20170124075539.342568439@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.11.0
In-Reply-To: &lt;20170124075534.905042535@linuxfoundation.org&gt;
References: &lt;20170124075534.905042535@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Jan. 24, 2017, 7:55 a.m.</div>
<pre class="content">
4.9-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: Geert Uytterhoeven &lt;geert+renesas@glider.be&gt;</span>

commit fff5d99225107f5f13fe4a9805adc2a1c4b5fb00 upstream.

On architectures like arm64, swiotlb is tied intimately to the core
architecture DMA support. In addition, ZONE_DMA cannot be disabled.

To aid debugging and catch devices not supporting DMA to memory outside
the 32-bit address space, add a kernel command line option
&quot;swiotlb=noforce&quot;, which disables the use of bounce buffers.
If specified, trying to map memory that cannot be used with DMA will
fail, and a rate-limited warning will be printed.

Note that io_tlb_nslabs is set to 1, which is the minimal supported
value.
<span class="signed-off-by">
Signed-off-by: Geert Uytterhoeven &lt;geert+renesas@glider.be&gt;</span>
<span class="signed-off-by">Signed-off-by: Konrad Rzeszutek Wilk &lt;konrad.wilk@oracle.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>

---
 Documentation/kernel-parameters.txt |    3 ++-
 include/linux/swiotlb.h             |    1 +
 include/trace/events/swiotlb.h      |    3 ++-
 lib/swiotlb.c                       |   18 ++++++++++++++++--
 4 files changed, 21 insertions(+), 4 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/Documentation/kernel-parameters.txt</span>
<span class="p_header">+++ b/Documentation/kernel-parameters.txt</span>
<span class="p_chunk">@@ -3998,10 +3998,11 @@</span> <span class="p_context"> bytes respectively. Such letter suffixes</span>
 			it if 0 is given (See Documentation/cgroup-v1/memory.txt)
 
 	swiotlb=	[ARM,IA-64,PPC,MIPS,X86]
<span class="p_del">-			Format: { &lt;int&gt; | force }</span>
<span class="p_add">+			Format: { &lt;int&gt; | force | noforce }</span>
 			&lt;int&gt; -- Number of I/O TLB slabs
 			force -- force using of bounce buffers even if they
 			         wouldn&#39;t be automatically used by the kernel
<span class="p_add">+			noforce -- Never use bounce buffers (for debugging)</span>
 
 	switches=	[HW,M68k]
 
<span class="p_header">--- a/include/linux/swiotlb.h</span>
<span class="p_header">+++ b/include/linux/swiotlb.h</span>
<span class="p_chunk">@@ -12,6 +12,7 @@</span> <span class="p_context"> struct scatterlist;</span>
 enum swiotlb_force {
 	SWIOTLB_NORMAL,		/* Default - depending on HW DMA mask etc. */
 	SWIOTLB_FORCE,		/* swiotlb=force */
<span class="p_add">+	SWIOTLB_NO_FORCE,	/* swiotlb=noforce */</span>
 };
 
 extern enum swiotlb_force swiotlb_force;
<span class="p_header">--- a/include/trace/events/swiotlb.h</span>
<span class="p_header">+++ b/include/trace/events/swiotlb.h</span>
<span class="p_chunk">@@ -39,7 +39,8 @@</span> <span class="p_context"> TRACE_EVENT(swiotlb_bounced,</span>
 		__entry-&gt;size,
 		__print_symbolic(__entry-&gt;swiotlb_force,
 			{ SWIOTLB_NORMAL,	&quot;NORMAL&quot; },
<span class="p_del">-			{ SWIOTLB_FORCE,	&quot;FORCE&quot; }))</span>
<span class="p_add">+			{ SWIOTLB_FORCE,	&quot;FORCE&quot; },</span>
<span class="p_add">+			{ SWIOTLB_NO_FORCE,	&quot;NO_FORCE&quot; }))</span>
 );
 
 #endif /*  _TRACE_SWIOTLB_H */
<span class="p_header">--- a/lib/swiotlb.c</span>
<span class="p_header">+++ b/lib/swiotlb.c</span>
<span class="p_chunk">@@ -106,8 +106,12 @@</span> <span class="p_context"> setup_io_tlb_npages(char *str)</span>
 	}
 	if (*str == &#39;,&#39;)
 		++str;
<span class="p_del">-	if (!strcmp(str, &quot;force&quot;))</span>
<span class="p_add">+	if (!strcmp(str, &quot;force&quot;)) {</span>
 		swiotlb_force = SWIOTLB_FORCE;
<span class="p_add">+	} else if (!strcmp(str, &quot;noforce&quot;)) {</span>
<span class="p_add">+		swiotlb_force = SWIOTLB_NO_FORCE;</span>
<span class="p_add">+		io_tlb_nslabs = 1;</span>
<span class="p_add">+	}</span>
 
 	return 0;
 }
<span class="p_chunk">@@ -541,8 +545,15 @@</span> <span class="p_context"> static phys_addr_t</span>
 map_single(struct device *hwdev, phys_addr_t phys, size_t size,
 	   enum dma_data_direction dir)
 {
<span class="p_del">-	dma_addr_t start_dma_addr = phys_to_dma(hwdev, io_tlb_start);</span>
<span class="p_add">+	dma_addr_t start_dma_addr;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (swiotlb_force == SWIOTLB_NO_FORCE) {</span>
<span class="p_add">+		dev_warn_ratelimited(hwdev, &quot;Cannot do DMA to address %pa\n&quot;,</span>
<span class="p_add">+				     &amp;phys);</span>
<span class="p_add">+		return SWIOTLB_MAP_ERROR;</span>
<span class="p_add">+	}</span>
 
<span class="p_add">+	start_dma_addr = phys_to_dma(hwdev, io_tlb_start);</span>
 	return swiotlb_tbl_map_single(hwdev, start_dma_addr, phys, size, dir);
 }
 
<span class="p_chunk">@@ -707,6 +718,9 @@</span> <span class="p_context"> static void</span>
 swiotlb_full(struct device *dev, size_t size, enum dma_data_direction dir,
 	     int do_panic)
 {
<span class="p_add">+	if (swiotlb_force == SWIOTLB_NO_FORCE)</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
 	/*
 	 * Ran out of IOMMU space for this operation. This is very bad.
 	 * Unfortunately the drivers cannot handle this operation properly.

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



