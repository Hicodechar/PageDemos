
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,09/20] randstruct: Mark various structs for randomization - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,09/20] randstruct: Mark various structs for randomization</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=38541">Kees Cook</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>May 26, 2017, 8:17 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1495829844-69341-10-git-send-email-keescook@chromium.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9751293/mbox/"
   >mbox</a>
|
   <a href="/patch/9751293/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9751293/">/patch/9751293/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	422F86032C for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 27 May 2017 01:11:54 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 339F42843C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 27 May 2017 01:11:54 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 282C72846C; Sat, 27 May 2017 01:11:54 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.5 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, RCVD_IN_DNSWL_HI,
	RCVD_IN_SORBS_SPAM autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D12AD2843C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 27 May 2017 01:11:52 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1756295AbdE0BLp (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 26 May 2017 21:11:45 -0400
Received: from mail-pf0-f169.google.com ([209.85.192.169]:33955 &quot;EHLO
	mail-pf0-f169.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S944873AbdEZUSV (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 26 May 2017 16:18:21 -0400
Received: by mail-pf0-f169.google.com with SMTP id 9so20623523pfj.1
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Fri, 26 May 2017 13:18:21 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=chromium.org; s=google;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=LDaev+0CK29hdYxZH4LRvuVjdOEtOiO5/dXDMUkBk8s=;
	b=HHywhz3lKRma9VV5kspvAfXY4f+U2ylsNYDcz3CCvxwkXp1brgbzNrTVR7jjQVPJG2
	gPjnIikcL4uj3bCNopeCkTXZzNvwxiHMtu0F3uFNAIOu6EGeqh3YrCPu7hfABz1VgQuw
	dMBpbQ/1w9lbqaYhsU0o909uyEYh2UVYfHxSw=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=LDaev+0CK29hdYxZH4LRvuVjdOEtOiO5/dXDMUkBk8s=;
	b=ScxY4NUiHrXQDaH6Vtqq2FTJwsOgio3+GUiPMHLIRz3xN+q77TGI/EL8uXw7EpHxYc
	AHob3htPGRjkYe4OejGSZMd+hl1r0ZrPbTG748TVYzWyCIar8uBC4gC8cgPsmy2Cu5j4
	BDLOpAEzHRBUr6FDPehIcvPhvkFQaMVws9fZTsNseCQLPXueNDRe+/jOeziSuxDLqtWr
	dDBgG50O/uJAliMpurb4CbIxfB/xugyHYoel/E0wxjcdWHcfgTfx3NHc+j1kE+n3EVst
	PITcJSn4M+UpH4wUjRFhelUhw9lsCV8ghrXS6Olll9ciqsYZWoeE+zRYjmSpISCc0Gx0
	RSXg==
X-Gm-Message-State: AODbwcAnh+xhbyM4AaXWpsVSYjYCbEJR8Fyiy1w4ApKsi5Qcnx+rfoUU
	07NovwDQDsIpfC86
X-Received: by 10.84.211.136 with SMTP id c8mr4385191pli.96.1495829900746;
	Fri, 26 May 2017 13:18:20 -0700 (PDT)
Received: from www.outflux.net
	(173-164-112-133-Oregon.hfc.comcastbusiness.net. [173.164.112.133])
	by smtp.gmail.com with ESMTPSA id
	15sm2977506pfj.59.2017.05.26.13.18.20
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Fri, 26 May 2017 13:18:20 -0700 (PDT)
From: Kees Cook &lt;keescook@chromium.org&gt;
To: kernel-hardening@lists.openwall.com
Cc: Kees Cook &lt;keescook@chromium.org&gt;,
	Laura Abbott &lt;labbott@redhat.com&gt;, x86@kernel.org,
	linux-kernel@vger.kernel.org
Subject: [PATCH v2 09/20] randstruct: Mark various structs for randomization
Date: Fri, 26 May 2017 13:17:13 -0700
Message-Id: &lt;1495829844-69341-10-git-send-email-keescook@chromium.org&gt;
X-Mailer: git-send-email 2.7.4
In-Reply-To: &lt;1495829844-69341-1-git-send-email-keescook@chromium.org&gt;
References: &lt;1495829844-69341-1-git-send-email-keescook@chromium.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=38541">Kees Cook</a> - May 26, 2017, 8:17 p.m.</div>
<pre class="content">
This marks many critical kernel structures for randomization. These are
structures that have been targeted in the past in security exploits, or
contain functions pointers, pointers to function pointer tables, lists,
workqueues, ref-counters, credentials, permissions, or are otherwise
sensitive. This initial list was extracted from grsecurity.

Left out of this list is task_struct, which requires special handling
and is covered in a subsequent patch.
<span class="signed-off-by">
Signed-off-by: Kees Cook &lt;keescook@chromium.org&gt;</span>
---
 arch/x86/include/asm/processor.h |  2 +-
 fs/mount.h                       |  4 ++--
 fs/namei.c                       |  2 +-
 fs/proc/internal.h               |  6 +++---
 include/linux/binfmts.h          |  4 ++--
 include/linux/cdev.h             |  2 +-
 include/linux/cred.h             |  4 ++--
 include/linux/dcache.h           |  2 +-
 include/linux/fs.h               | 17 +++++++++--------
 include/linux/fs_struct.h        |  2 +-
 include/linux/ipc.h              |  2 +-
 include/linux/ipc_namespace.h    |  2 +-
 include/linux/key-type.h         |  4 ++--
 include/linux/kmod.h             |  2 +-
 include/linux/kobject.h          |  2 +-
 include/linux/lsm_hooks.h        |  4 ++--
 include/linux/mm_types.h         |  4 ++--
 include/linux/module.h           |  4 ++--
 include/linux/mount.h            |  2 +-
 include/linux/msg.h              |  2 +-
 include/linux/path.h             |  2 +-
 include/linux/pid_namespace.h    |  2 +-
 include/linux/proc_ns.h          |  2 +-
 include/linux/sched.h            |  2 +-
 include/linux/sched/signal.h     |  2 +-
 include/linux/sem.h              |  2 +-
 include/linux/shm.h              |  2 +-
 include/linux/sysctl.h           |  2 +-
 include/linux/tty.h              |  2 +-
 include/linux/tty_driver.h       |  4 ++--
 include/linux/user_namespace.h   |  2 +-
 include/linux/utsname.h          |  2 +-
 include/net/af_unix.h            |  2 +-
 include/net/neighbour.h          |  2 +-
 include/net/net_namespace.h      |  2 +-
 include/net/sock.h               |  2 +-
 kernel/futex.c                   |  4 ++--
 security/keys/internal.h         |  2 +-
 38 files changed, 57 insertions(+), 56 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/processor.h b/arch/x86/include/asm/processor.h</span>
<span class="p_header">index 3cada998a402..e2335edb9fc5 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/processor.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/processor.h</span>
<span class="p_chunk">@@ -129,7 +129,7 @@</span> <span class="p_context"> struct cpuinfo_x86 {</span>
 	/* Index into per_cpu list: */
 	u16			cpu_index;
 	u32			microcode;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 struct cpuid_regs {
 	u32 eax, ebx, ecx, edx;
<span class="p_header">diff --git a/fs/mount.h b/fs/mount.h</span>
<span class="p_header">index de45d9e76748..6790767d1883 100644</span>
<span class="p_header">--- a/fs/mount.h</span>
<span class="p_header">+++ b/fs/mount.h</span>
<span class="p_chunk">@@ -16,7 +16,7 @@</span> <span class="p_context"> struct mnt_namespace {</span>
 	u64 event;
 	unsigned int		mounts; /* # of mounts in the namespace */
 	unsigned int		pending_mounts;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 struct mnt_pcp {
 	int mnt_count;
<span class="p_chunk">@@ -69,7 +69,7 @@</span> <span class="p_context"> struct mount {</span>
 	struct hlist_head mnt_pins;
 	struct fs_pin mnt_umount;
 	struct dentry *mnt_ex_mountpoint;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 #define MNT_NS_INTERNAL ERR_PTR(-EINVAL) /* distinct from any mnt_namespace */
 
<span class="p_header">diff --git a/fs/namei.c b/fs/namei.c</span>
<span class="p_header">index bbb9d01e70e7..9db9c5418d90 100644</span>
<span class="p_header">--- a/fs/namei.c</span>
<span class="p_header">+++ b/fs/namei.c</span>
<span class="p_chunk">@@ -524,7 +524,7 @@</span> <span class="p_context"> struct nameidata {</span>
 	struct inode	*link_inode;
 	unsigned	root_seq;
 	int		dfd;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 static void set_nameidata(struct nameidata *p, int dfd, struct filename *name)
 {
<span class="p_header">diff --git a/fs/proc/internal.h b/fs/proc/internal.h</span>
<span class="p_header">index c5ae09b6c726..07b16318223f 100644</span>
<span class="p_header">--- a/fs/proc/internal.h</span>
<span class="p_header">+++ b/fs/proc/internal.h</span>
<span class="p_chunk">@@ -51,7 +51,7 @@</span> <span class="p_context"> struct proc_dir_entry {</span>
 	spinlock_t pde_unload_lock; /* proc_fops checks and pde_users bumps */
 	u8 namelen;
 	char name[];
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 union proc_op {
 	int (*proc_get_link)(struct dentry *, struct path *);
<span class="p_chunk">@@ -70,7 +70,7 @@</span> <span class="p_context"> struct proc_inode {</span>
 	struct list_head sysctl_inodes;
 	const struct proc_ns_operations *ns_ops;
 	struct inode vfs_inode;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 /*
  * General functions
<span class="p_chunk">@@ -279,7 +279,7 @@</span> <span class="p_context"> struct proc_maps_private {</span>
 #ifdef CONFIG_NUMA
 	struct mempolicy *task_mempolicy;
 #endif
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 struct mm_struct *proc_mem_open(struct inode *inode, unsigned int mode);
 
<span class="p_header">diff --git a/include/linux/binfmts.h b/include/linux/binfmts.h</span>
<span class="p_header">index 05488da3aee9..3ae9013eeaaa 100644</span>
<span class="p_header">--- a/include/linux/binfmts.h</span>
<span class="p_header">+++ b/include/linux/binfmts.h</span>
<span class="p_chunk">@@ -46,7 +46,7 @@</span> <span class="p_context"> struct linux_binprm {</span>
 	unsigned interp_flags;
 	unsigned interp_data;
 	unsigned long loader, exec;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 #define BINPRM_FLAGS_ENFORCE_NONDUMP_BIT 0
 #define BINPRM_FLAGS_ENFORCE_NONDUMP (1 &lt;&lt; BINPRM_FLAGS_ENFORCE_NONDUMP_BIT)
<span class="p_chunk">@@ -81,7 +81,7 @@</span> <span class="p_context"> struct linux_binfmt {</span>
 	int (*load_shlib)(struct file *);
 	int (*core_dump)(struct coredump_params *cprm);
 	unsigned long min_coredump;	/* minimal dump size */
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 extern void __register_binfmt(struct linux_binfmt *fmt, int insert);
 
<span class="p_header">diff --git a/include/linux/cdev.h b/include/linux/cdev.h</span>
<span class="p_header">index 408bc09ce497..cb28eb21e3ca 100644</span>
<span class="p_header">--- a/include/linux/cdev.h</span>
<span class="p_header">+++ b/include/linux/cdev.h</span>
<span class="p_chunk">@@ -17,7 +17,7 @@</span> <span class="p_context"> struct cdev {</span>
 	struct list_head list;
 	dev_t dev;
 	unsigned int count;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 void cdev_init(struct cdev *, const struct file_operations *);
 
<span class="p_header">diff --git a/include/linux/cred.h b/include/linux/cred.h</span>
<span class="p_header">index c728d515e5e2..099058e1178b 100644</span>
<span class="p_header">--- a/include/linux/cred.h</span>
<span class="p_header">+++ b/include/linux/cred.h</span>
<span class="p_chunk">@@ -31,7 +31,7 @@</span> <span class="p_context"> struct group_info {</span>
 	atomic_t	usage;
 	int		ngroups;
 	kgid_t		gid[0];
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 /**
  * get_group_info - Get a reference to a group info structure
<span class="p_chunk">@@ -145,7 +145,7 @@</span> <span class="p_context"> struct cred {</span>
 	struct user_namespace *user_ns; /* user_ns the caps and keyrings are relative to. */
 	struct group_info *group_info;	/* supplementary groups for euid/fsgid */
 	struct rcu_head	rcu;		/* RCU deletion hook */
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 extern void __put_cred(struct cred *);
 extern void exit_creds(struct task_struct *);
<span class="p_header">diff --git a/include/linux/dcache.h b/include/linux/dcache.h</span>
<span class="p_header">index d2e38dc6172c..7eb262e13d3c 100644</span>
<span class="p_header">--- a/include/linux/dcache.h</span>
<span class="p_header">+++ b/include/linux/dcache.h</span>
<span class="p_chunk">@@ -113,7 +113,7 @@</span> <span class="p_context"> struct dentry {</span>
 		struct hlist_bl_node d_in_lookup_hash;	/* only for in-lookup ones */
 	 	struct rcu_head d_rcu;
 	} d_u;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 /*
  * dentry-&gt;d_lock spinlock nesting subclasses:
<span class="p_header">diff --git a/include/linux/fs.h b/include/linux/fs.h</span>
<span class="p_header">index aa4affb38c39..f1798a4c0cfc 100644</span>
<span class="p_header">--- a/include/linux/fs.h</span>
<span class="p_header">+++ b/include/linux/fs.h</span>
<span class="p_chunk">@@ -275,7 +275,7 @@</span> <span class="p_context"> struct kiocb {</span>
 	void (*ki_complete)(struct kiocb *iocb, long ret, long ret2);
 	void			*private;
 	int			ki_flags;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 static inline bool is_sync_kiocb(struct kiocb *kiocb)
 {
<span class="p_chunk">@@ -392,7 +392,7 @@</span> <span class="p_context"> struct address_space {</span>
 	gfp_t			gfp_mask;	/* implicit gfp mask for allocations */
 	struct list_head	private_list;	/* ditto */
 	void			*private_data;	/* ditto */
<span class="p_del">-} __attribute__((aligned(sizeof(long))));</span>
<span class="p_add">+} __attribute__((aligned(sizeof(long)))) __randomize_layout;</span>
 	/*
 	 * On most architectures that alignment is already the case; but
 	 * must be enforced here for CRIS, to let the least significant bit
<span class="p_chunk">@@ -435,7 +435,7 @@</span> <span class="p_context"> struct block_device {</span>
 	int			bd_fsfreeze_count;
 	/* Mutex for freeze */
 	struct mutex		bd_fsfreeze_mutex;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 /*
  * Radix-tree tags, for tagging dirty and writeback pages within the pagecache
<span class="p_chunk">@@ -653,7 +653,7 @@</span> <span class="p_context"> struct inode {</span>
 #endif
 
 	void			*i_private; /* fs or device private pointer */
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 static inline unsigned int i_blocksize(const struct inode *node)
 {
<span class="p_chunk">@@ -868,7 +868,8 @@</span> <span class="p_context"> struct file {</span>
 	struct list_head	f_tfile_llink;
 #endif /* #ifdef CONFIG_EPOLL */
 	struct address_space	*f_mapping;
<span class="p_del">-} __attribute__((aligned(4)));	/* lest something weird decides that 2 is OK */</span>
<span class="p_add">+} __randomize_layout</span>
<span class="p_add">+  __attribute__((aligned(4)));	/* lest something weird decides that 2 is OK */</span>
 
 struct file_handle {
 	__u32 handle_bytes;
<span class="p_chunk">@@ -1005,7 +1006,7 @@</span> <span class="p_context"> struct file_lock {</span>
 			int state;		/* state of grant or error if -ve */
 		} afs;
 	} fl_u;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 struct file_lock_context {
 	spinlock_t		flc_lock;
<span class="p_chunk">@@ -1404,7 +1405,7 @@</span> <span class="p_context"> struct super_block {</span>
 
 	spinlock_t		s_inode_wblist_lock;
 	struct list_head	s_inodes_wb;	/* writeback inodes */
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 /* Helper functions so that in most cases filesystems will
  * not need to deal directly with kuid_t and kgid_t and can
<span class="p_chunk">@@ -1690,7 +1691,7 @@</span> <span class="p_context"> struct file_operations {</span>
 			u64);
 	ssize_t (*dedupe_file_range)(struct file *, u64, u64, struct file *,
 			u64);
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 struct inode_operations {
 	struct dentry * (*lookup) (struct inode *,struct dentry *, unsigned int);
<span class="p_header">diff --git a/include/linux/fs_struct.h b/include/linux/fs_struct.h</span>
<span class="p_header">index 0efc3e62843a..7a026240cbb1 100644</span>
<span class="p_header">--- a/include/linux/fs_struct.h</span>
<span class="p_header">+++ b/include/linux/fs_struct.h</span>
<span class="p_chunk">@@ -12,7 +12,7 @@</span> <span class="p_context"> struct fs_struct {</span>
 	int umask;
 	int in_exec;
 	struct path root, pwd;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 extern struct kmem_cache *fs_cachep;
 
<span class="p_header">diff --git a/include/linux/ipc.h b/include/linux/ipc.h</span>
<span class="p_header">index 71fd92d81b26..ea0eb0b5f98c 100644</span>
<span class="p_header">--- a/include/linux/ipc.h</span>
<span class="p_header">+++ b/include/linux/ipc.h</span>
<span class="p_chunk">@@ -20,6 +20,6 @@</span> <span class="p_context"> struct kern_ipc_perm {</span>
 	umode_t		mode;
 	unsigned long	seq;
 	void		*security;
<span class="p_del">-} ____cacheline_aligned_in_smp;</span>
<span class="p_add">+} ____cacheline_aligned_in_smp __randomize_layout;</span>
 
 #endif /* _LINUX_IPC_H */
<span class="p_header">diff --git a/include/linux/ipc_namespace.h b/include/linux/ipc_namespace.h</span>
<span class="p_header">index 848e5796400e..65327ee0936b 100644</span>
<span class="p_header">--- a/include/linux/ipc_namespace.h</span>
<span class="p_header">+++ b/include/linux/ipc_namespace.h</span>
<span class="p_chunk">@@ -61,7 +61,7 @@</span> <span class="p_context"> struct ipc_namespace {</span>
 	struct ucounts *ucounts;
 
 	struct ns_common ns;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 extern struct ipc_namespace init_ipc_ns;
 extern spinlock_t mq_lock;
<span class="p_header">diff --git a/include/linux/key-type.h b/include/linux/key-type.h</span>
<span class="p_header">index 8496cf64575c..9520fc3c3b9a 100644</span>
<span class="p_header">--- a/include/linux/key-type.h</span>
<span class="p_header">+++ b/include/linux/key-type.h</span>
<span class="p_chunk">@@ -45,7 +45,7 @@</span> <span class="p_context"> struct key_preparsed_payload {</span>
 	size_t		datalen;	/* Raw datalen */
 	size_t		quotalen;	/* Quota length for proposed payload */
 	time_t		expiry;		/* Expiry time of key */
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 typedef int (*request_key_actor_t)(struct key_construction *key,
 				   const char *op, void *aux);
<span class="p_chunk">@@ -158,7 +158,7 @@</span> <span class="p_context"> struct key_type {</span>
 	/* internal fields */
 	struct list_head	link;		/* link in types list */
 	struct lock_class_key	lock_class;	/* key-&gt;sem lock class */
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 extern struct key_type key_type_keyring;
 
<span class="p_header">diff --git a/include/linux/kmod.h b/include/linux/kmod.h</span>
<span class="p_header">index c4e441e00db5..655082c88fd9 100644</span>
<span class="p_header">--- a/include/linux/kmod.h</span>
<span class="p_header">+++ b/include/linux/kmod.h</span>
<span class="p_chunk">@@ -64,7 +64,7 @@</span> <span class="p_context"> struct subprocess_info {</span>
 	int (*init)(struct subprocess_info *info, struct cred *new);
 	void (*cleanup)(struct subprocess_info *info);
 	void *data;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 extern int
 call_usermodehelper(const char *path, char **argv, char **envp, int wait);
<span class="p_header">diff --git a/include/linux/kobject.h b/include/linux/kobject.h</span>
<span class="p_header">index ca85cb80e99a..084513350317 100644</span>
<span class="p_header">--- a/include/linux/kobject.h</span>
<span class="p_header">+++ b/include/linux/kobject.h</span>
<span class="p_chunk">@@ -172,7 +172,7 @@</span> <span class="p_context"> struct kset {</span>
 	spinlock_t list_lock;
 	struct kobject kobj;
 	const struct kset_uevent_ops *uevent_ops;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 extern void kset_init(struct kset *kset);
 extern int __must_check kset_register(struct kset *kset);
<span class="p_header">diff --git a/include/linux/lsm_hooks.h b/include/linux/lsm_hooks.h</span>
<span class="p_header">index f7914d96e1d7..8c1182fcc6d2 100644</span>
<span class="p_header">--- a/include/linux/lsm_hooks.h</span>
<span class="p_header">+++ b/include/linux/lsm_hooks.h</span>
<span class="p_chunk">@@ -1910,7 +1910,7 @@</span> <span class="p_context"> struct security_hook_heads {</span>
 	struct list_head audit_rule_match;
 	struct list_head audit_rule_free;
 #endif /* CONFIG_AUDIT */
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 /*
  * Security module hook list structure.
<span class="p_chunk">@@ -1921,7 +1921,7 @@</span> <span class="p_context"> struct security_hook_list {</span>
 	struct list_head		*head;
 	union security_list_options	hook;
 	char				*lsm;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 /*
  * Initializing a security_hook_list structure takes
<span class="p_header">diff --git a/include/linux/mm_types.h b/include/linux/mm_types.h</span>
<span class="p_header">index 45cdb27791a3..ff151814a02d 100644</span>
<span class="p_header">--- a/include/linux/mm_types.h</span>
<span class="p_header">+++ b/include/linux/mm_types.h</span>
<span class="p_chunk">@@ -342,7 +342,7 @@</span> <span class="p_context"> struct vm_area_struct {</span>
 	struct mempolicy *vm_policy;	/* NUMA policy for the VMA */
 #endif
 	struct vm_userfaultfd_ctx vm_userfaultfd_ctx;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 struct core_thread {
 	struct task_struct *task;
<span class="p_chunk">@@ -500,7 +500,7 @@</span> <span class="p_context"> struct mm_struct {</span>
 	atomic_long_t hugetlb_usage;
 #endif
 	struct work_struct async_put_work;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 extern struct mm_struct init_mm;
 
<span class="p_header">diff --git a/include/linux/module.h b/include/linux/module.h</span>
<span class="p_header">index 21f56393602f..d93111d7def6 100644</span>
<span class="p_header">--- a/include/linux/module.h</span>
<span class="p_header">+++ b/include/linux/module.h</span>
<span class="p_chunk">@@ -45,7 +45,7 @@</span> <span class="p_context"> struct module_kobject {</span>
 	struct kobject *drivers_dir;
 	struct module_param_attrs *mp;
 	struct completion *kobj_completion;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 struct module_attribute {
 	struct attribute attr;
<span class="p_chunk">@@ -475,7 +475,7 @@</span> <span class="p_context"> struct module {</span>
 	ctor_fn_t *ctors;
 	unsigned int num_ctors;
 #endif
<span class="p_del">-} ____cacheline_aligned;</span>
<span class="p_add">+} ____cacheline_aligned __randomize_layout;</span>
 #ifndef MODULE_ARCH_INIT
 #define MODULE_ARCH_INIT {}
 #endif
<span class="p_header">diff --git a/include/linux/mount.h b/include/linux/mount.h</span>
<span class="p_header">index 8e0352af06b7..1ce85e6fd95f 100644</span>
<span class="p_header">--- a/include/linux/mount.h</span>
<span class="p_header">+++ b/include/linux/mount.h</span>
<span class="p_chunk">@@ -67,7 +67,7 @@</span> <span class="p_context"> struct vfsmount {</span>
 	struct dentry *mnt_root;	/* root of the mounted tree */
 	struct super_block *mnt_sb;	/* pointer to superblock */
 	int mnt_flags;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 struct file; /* forward dec */
 struct path;
<span class="p_header">diff --git a/include/linux/msg.h b/include/linux/msg.h</span>
<span class="p_header">index f3f302f9c197..a001305f5a79 100644</span>
<span class="p_header">--- a/include/linux/msg.h</span>
<span class="p_header">+++ b/include/linux/msg.h</span>
<span class="p_chunk">@@ -29,7 +29,7 @@</span> <span class="p_context"> struct msg_queue {</span>
 	struct list_head q_messages;
 	struct list_head q_receivers;
 	struct list_head q_senders;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 /* Helper routines for sys_msgsnd and sys_msgrcv */
 extern long do_msgsnd(int msqid, long mtype, void __user *mtext,
<span class="p_header">diff --git a/include/linux/path.h b/include/linux/path.h</span>
<span class="p_header">index d1372186f431..cde895cc4af4 100644</span>
<span class="p_header">--- a/include/linux/path.h</span>
<span class="p_header">+++ b/include/linux/path.h</span>
<span class="p_chunk">@@ -7,7 +7,7 @@</span> <span class="p_context"> struct vfsmount;</span>
 struct path {
 	struct vfsmount *mnt;
 	struct dentry *dentry;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 extern void path_get(const struct path *);
 extern void path_put(const struct path *);
<span class="p_header">diff --git a/include/linux/pid_namespace.h b/include/linux/pid_namespace.h</span>
<span class="p_header">index c2a989dee876..b09136f88cf4 100644</span>
<span class="p_header">--- a/include/linux/pid_namespace.h</span>
<span class="p_header">+++ b/include/linux/pid_namespace.h</span>
<span class="p_chunk">@@ -52,7 +52,7 @@</span> <span class="p_context"> struct pid_namespace {</span>
 	int hide_pid;
 	int reboot;	/* group exit code if this pidns was rebooted */
 	struct ns_common ns;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 extern struct pid_namespace init_pid_ns;
 
<span class="p_header">diff --git a/include/linux/proc_ns.h b/include/linux/proc_ns.h</span>
<span class="p_header">index 58ab28d81fc2..06844b54dfc1 100644</span>
<span class="p_header">--- a/include/linux/proc_ns.h</span>
<span class="p_header">+++ b/include/linux/proc_ns.h</span>
<span class="p_chunk">@@ -21,7 +21,7 @@</span> <span class="p_context"> struct proc_ns_operations {</span>
 	int (*install)(struct nsproxy *nsproxy, struct ns_common *ns);
 	struct user_namespace *(*owner)(struct ns_common *ns);
 	struct ns_common *(*get_parent)(struct ns_common *ns);
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 extern const struct proc_ns_operations netns_operations;
 extern const struct proc_ns_operations utsns_operations;
<span class="p_header">diff --git a/include/linux/sched.h b/include/linux/sched.h</span>
<span class="p_header">index c5338510628a..b1298ad4da63 100644</span>
<span class="p_header">--- a/include/linux/sched.h</span>
<span class="p_header">+++ b/include/linux/sched.h</span>
<span class="p_chunk">@@ -408,7 +408,7 @@</span> <span class="p_context"> struct sched_rt_entity {</span>
 	/* rq &quot;owned&quot; by this entity/group: */
 	struct rt_rq			*my_q;
 #endif
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 struct sched_dl_entity {
 	struct rb_node			rb_node;
<span class="p_header">diff --git a/include/linux/sched/signal.h b/include/linux/sched/signal.h</span>
<span class="p_header">index c06d63b3a583..2a0dd40b15db 100644</span>
<span class="p_header">--- a/include/linux/sched/signal.h</span>
<span class="p_header">+++ b/include/linux/sched/signal.h</span>
<span class="p_chunk">@@ -222,7 +222,7 @@</span> <span class="p_context"> struct signal_struct {</span>
 	struct mutex cred_guard_mutex;	/* guard against foreign influences on
 					 * credential calculations
 					 * (notably. ptrace) */
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 /*
  * Bits in flags field of signal_struct.
<span class="p_header">diff --git a/include/linux/sem.h b/include/linux/sem.h</span>
<span class="p_header">index fc7af8eaa527..a4dddb20a697 100644</span>
<span class="p_header">--- a/include/linux/sem.h</span>
<span class="p_header">+++ b/include/linux/sem.h</span>
<span class="p_chunk">@@ -41,7 +41,7 @@</span> <span class="p_context"> struct sem_array {</span>
 	unsigned int		use_global_lock;/* &gt;0: global lock required */
 
 	struct sem		sems[0];
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 #ifdef CONFIG_SYSVIPC
 
<span class="p_header">diff --git a/include/linux/shm.h b/include/linux/shm.h</span>
<span class="p_header">index 04e881829625..0fb7061ec54c 100644</span>
<span class="p_header">--- a/include/linux/shm.h</span>
<span class="p_header">+++ b/include/linux/shm.h</span>
<span class="p_chunk">@@ -22,7 +22,7 @@</span> <span class="p_context"> struct shmid_kernel /* private to the kernel */</span>
 	/* The task created the shm object.  NULL if the task is dead. */
 	struct task_struct	*shm_creator;
 	struct list_head	shm_clist;	/* list by creator */
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 /* shm_mode upper byte flags */
 #define	SHM_DEST	01000	/* segment will be destroyed on last detach */
<span class="p_header">diff --git a/include/linux/sysctl.h b/include/linux/sysctl.h</span>
<span class="p_header">index 80d07816def0..9ddeef2c03e2 100644</span>
<span class="p_header">--- a/include/linux/sysctl.h</span>
<span class="p_header">+++ b/include/linux/sysctl.h</span>
<span class="p_chunk">@@ -117,7 +117,7 @@</span> <span class="p_context"> struct ctl_table</span>
 	struct ctl_table_poll *poll;
 	void *extra1;
 	void *extra2;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 struct ctl_node {
 	struct rb_node node;
<span class="p_header">diff --git a/include/linux/tty.h b/include/linux/tty.h</span>
<span class="p_header">index 5c3f01f49b10..99ecb38bac04 100644</span>
<span class="p_header">--- a/include/linux/tty.h</span>
<span class="p_header">+++ b/include/linux/tty.h</span>
<span class="p_chunk">@@ -333,7 +333,7 @@</span> <span class="p_context"> struct tty_struct {</span>
 	/* If the tty has a pending do_SAK, queue it here - akpm */
 	struct work_struct SAK_work;
 	struct tty_port *port;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 /* Each of a tty&#39;s open files has private_data pointing to tty_file_private */
 struct tty_file_private {
<span class="p_header">diff --git a/include/linux/tty_driver.h b/include/linux/tty_driver.h</span>
<span class="p_header">index b742b5e47cc2..00b2213f6a35 100644</span>
<span class="p_header">--- a/include/linux/tty_driver.h</span>
<span class="p_header">+++ b/include/linux/tty_driver.h</span>
<span class="p_chunk">@@ -291,7 +291,7 @@</span> <span class="p_context"> struct tty_operations {</span>
 	void (*poll_put_char)(struct tty_driver *driver, int line, char ch);
 #endif
 	const struct file_operations *proc_fops;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 struct tty_driver {
 	int	magic;		/* magic number for this structure */
<span class="p_chunk">@@ -325,7 +325,7 @@</span> <span class="p_context"> struct tty_driver {</span>
 
 	const struct tty_operations *ops;
 	struct list_head tty_drivers;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 extern struct list_head tty_drivers;
 
<span class="p_header">diff --git a/include/linux/user_namespace.h b/include/linux/user_namespace.h</span>
<span class="p_header">index 32354b4b4b2b..b3575ce29148 100644</span>
<span class="p_header">--- a/include/linux/user_namespace.h</span>
<span class="p_header">+++ b/include/linux/user_namespace.h</span>
<span class="p_chunk">@@ -66,7 +66,7 @@</span> <span class="p_context"> struct user_namespace {</span>
 #endif
 	struct ucounts		*ucounts;
 	int ucount_max[UCOUNT_COUNTS];
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 struct ucounts {
 	struct hlist_node node;
<span class="p_header">diff --git a/include/linux/utsname.h b/include/linux/utsname.h</span>
<span class="p_header">index 60f0bb83b313..da826ed059cf 100644</span>
<span class="p_header">--- a/include/linux/utsname.h</span>
<span class="p_header">+++ b/include/linux/utsname.h</span>
<span class="p_chunk">@@ -26,7 +26,7 @@</span> <span class="p_context"> struct uts_namespace {</span>
 	struct user_namespace *user_ns;
 	struct ucounts *ucounts;
 	struct ns_common ns;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 extern struct uts_namespace init_uts_ns;
 
 #ifdef CONFIG_UTS_NS
<span class="p_header">diff --git a/include/net/af_unix.h b/include/net/af_unix.h</span>
<span class="p_header">index fd60eccb59a6..64e2a1e24a2c 100644</span>
<span class="p_header">--- a/include/net/af_unix.h</span>
<span class="p_header">+++ b/include/net/af_unix.h</span>
<span class="p_chunk">@@ -36,7 +36,7 @@</span> <span class="p_context"> struct unix_skb_parms {</span>
 	u32			secid;		/* Security ID		*/
 #endif
 	u32			consumed;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 #define UNIXCB(skb) 	(*(struct unix_skb_parms *)&amp;((skb)-&gt;cb))
 
<span class="p_header">diff --git a/include/net/neighbour.h b/include/net/neighbour.h</span>
<span class="p_header">index e4dd3a214034..a62959d2b3f7 100644</span>
<span class="p_header">--- a/include/net/neighbour.h</span>
<span class="p_header">+++ b/include/net/neighbour.h</span>
<span class="p_chunk">@@ -155,7 +155,7 @@</span> <span class="p_context"> struct neighbour {</span>
 	struct rcu_head		rcu;
 	struct net_device	*dev;
 	u8			primary_key[0];
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 struct neigh_ops {
 	int			family;
<span class="p_header">diff --git a/include/net/net_namespace.h b/include/net/net_namespace.h</span>
<span class="p_header">index fe80bb48ab1f..a224196d16ac 100644</span>
<span class="p_header">--- a/include/net/net_namespace.h</span>
<span class="p_header">+++ b/include/net/net_namespace.h</span>
<span class="p_chunk">@@ -147,7 +147,7 @@</span> <span class="p_context"> struct net {</span>
 #endif
 	struct sock		*diag_nlsk;
 	atomic_t		fnhe_genid;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 #include &lt;linux/seq_file_net.h&gt;
 
<span class="p_header">diff --git a/include/net/sock.h b/include/net/sock.h</span>
<span class="p_header">index 12b2912de420..1b035dbb95d9 100644</span>
<span class="p_header">--- a/include/net/sock.h</span>
<span class="p_header">+++ b/include/net/sock.h</span>
<span class="p_chunk">@@ -1120,7 +1120,7 @@</span> <span class="p_context"> struct proto {</span>
 	atomic_t		socks;
 #endif
 	int			(*diag_destroy)(struct sock *sk, int err);
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 int proto_register(struct proto *prot, int alloc_slab);
 void proto_unregister(struct proto *prot);
<span class="p_header">diff --git a/kernel/futex.c b/kernel/futex.c</span>
<span class="p_header">index b8ae87d227da..0a865bc119c6 100644</span>
<span class="p_header">--- a/kernel/futex.c</span>
<span class="p_header">+++ b/kernel/futex.c</span>
<span class="p_chunk">@@ -212,7 +212,7 @@</span> <span class="p_context"> struct futex_pi_state {</span>
 	atomic_t refcount;
 
 	union futex_key key;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 /**
  * struct futex_q - The hashed futex queue entry, one per waiting task
<span class="p_chunk">@@ -246,7 +246,7 @@</span> <span class="p_context"> struct futex_q {</span>
 	struct rt_mutex_waiter *rt_waiter;
 	union futex_key *requeue_pi_key;
 	u32 bitset;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 static const struct futex_q futex_q_init = {
 	/* list gets initialized in queue_me()*/
<span class="p_header">diff --git a/security/keys/internal.h b/security/keys/internal.h</span>
<span class="p_header">index c0f8682eba69..6494954e9980 100644</span>
<span class="p_header">--- a/security/keys/internal.h</span>
<span class="p_header">+++ b/security/keys/internal.h</span>
<span class="p_chunk">@@ -197,7 +197,7 @@</span> <span class="p_context"> struct request_key_auth {</span>
 	void			*callout_info;
 	size_t			callout_len;
 	pid_t			pid;
<span class="p_del">-};</span>
<span class="p_add">+} __randomize_layout;</span>
 
 extern struct key_type key_type_request_key_auth;
 extern struct key *request_key_auth_new(struct key *target,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



