
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.9,052/152] MIPS: Flush wrong invalid FTLB entry for huge page - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.9,052/152] MIPS: Flush wrong invalid FTLB entry for huge page</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>April 10, 2017, 4:41 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170410164202.749858091@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9673855/mbox/"
   >mbox</a>
|
   <a href="/patch/9673855/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9673855/">/patch/9673855/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	21F3A6020C for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 10 Apr 2017 17:41:52 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 087B127CAF
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 10 Apr 2017 17:41:52 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id F18C927D4D; Mon, 10 Apr 2017 17:41:51 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1656327D0E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 10 Apr 2017 17:41:51 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754007AbdDJQpr (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 10 Apr 2017 12:45:47 -0400
Received: from mail.linuxfoundation.org ([140.211.169.12]:34780 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751997AbdDJQpo (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 10 Apr 2017 12:45:44 -0400
Received: from localhost (084035110146.static.ipv4.infopact.nl
	[84.35.110.146])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id AB821B8F;
	Mon, 10 Apr 2017 16:45:38 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, Rui Wang &lt;wangr@lemote.com&gt;,
	Huacai Chen &lt;chenhc@lemote.com&gt;, John Crispin &lt;john@phrozen.org&gt;,
	&quot;Steven J . Hill&quot; &lt;Steven.Hill@caviumnetworks.com&gt;,
	Fuxin Zhang &lt;zhangfx@lemote.com&gt;,
	Zhangjin Wu &lt;wuzhangjin@gmail.com&gt;, linux-mips@linux-mips.org,
	Ralf Baechle &lt;ralf@linux-mips.org&gt;
Subject: [PATCH 4.9 052/152] MIPS: Flush wrong invalid FTLB entry for huge
	page
Date: Mon, 10 Apr 2017 18:41:44 +0200
Message-Id: &lt;20170410164202.749858091@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.12.2
In-Reply-To: &lt;20170410164159.934755016@linuxfoundation.org&gt;
References: &lt;20170410164159.934755016@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - April 10, 2017, 4:41 p.m.</div>
<pre class="content">
4.9-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: Huacai Chen &lt;chenhc@lemote.com&gt;</span>

commit 0115f6cbf26663c86496bc56eeea293f85b77897 upstream.

On VTLB+FTLB platforms (such as Loongson-3A R2), FTLB&#39;s pagesize is
usually configured the same as PAGE_SIZE. In such a case, Huge page
entry is not suitable to write in FTLB.

Unfortunately, when a huge page is created, its page table entries
haven&#39;t created immediately. Then the TLB refill handler will fetch an
invalid page table entry which has no &quot;HUGE&quot; bit, and this entry may be
written to FTLB. Since it is invalid, TLB load/store handler will then
use tlbwi to write the valid entry at the same place. However, the
valid entry is a huge page entry which isn&#39;t suitable for FTLB.

Our solution is to modify build_huge_handler_tail. Flush the invalid
old entry (whether it is in FTLB or VTLB, this is in order to reduce
branches) and use tlbwr to write the valid new entry.
<span class="signed-off-by">
Signed-off-by: Rui Wang &lt;wangr@lemote.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Huacai Chen &lt;chenhc@lemote.com&gt;</span>
Cc: John Crispin &lt;john@phrozen.org&gt;
Cc: Steven J . Hill &lt;Steven.Hill@caviumnetworks.com&gt;
Cc: Fuxin Zhang &lt;zhangfx@lemote.com&gt;
Cc: Zhangjin Wu &lt;wuzhangjin@gmail.com&gt;
Cc: Huacai Chen &lt;chenhc@lemote.com&gt;
Cc: linux-mips@linux-mips.org
Patchwork: https://patchwork.linux-mips.org/patch/15754/
<span class="signed-off-by">Signed-off-by: Ralf Baechle &lt;ralf@linux-mips.org&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>

---
 arch/mips/mm/tlbex.c |   25 +++++++++++++++++++++----
 1 file changed, 21 insertions(+), 4 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/mips/mm/tlbex.c</span>
<span class="p_header">+++ b/arch/mips/mm/tlbex.c</span>
<span class="p_chunk">@@ -762,7 +762,8 @@</span> <span class="p_context"> static void build_huge_update_entries(u3</span>
 static void build_huge_handler_tail(u32 **p, struct uasm_reloc **r,
 				    struct uasm_label **l,
 				    unsigned int pte,
<span class="p_del">-				    unsigned int ptr)</span>
<span class="p_add">+				    unsigned int ptr,</span>
<span class="p_add">+				    unsigned int flush)</span>
 {
 #ifdef CONFIG_SMP
 	UASM_i_SC(p, pte, 0, ptr);
<span class="p_chunk">@@ -771,6 +772,22 @@</span> <span class="p_context"> static void build_huge_handler_tail(u32</span>
 #else
 	UASM_i_SW(p, pte, 0, ptr);
 #endif
<span class="p_add">+	if (cpu_has_ftlb &amp;&amp; flush) {</span>
<span class="p_add">+		BUG_ON(!cpu_has_tlbinv);</span>
<span class="p_add">+</span>
<span class="p_add">+		UASM_i_MFC0(p, ptr, C0_ENTRYHI);</span>
<span class="p_add">+		uasm_i_ori(p, ptr, ptr, MIPS_ENTRYHI_EHINV);</span>
<span class="p_add">+		UASM_i_MTC0(p, ptr, C0_ENTRYHI);</span>
<span class="p_add">+		build_tlb_write_entry(p, l, r, tlb_indexed);</span>
<span class="p_add">+</span>
<span class="p_add">+		uasm_i_xori(p, ptr, ptr, MIPS_ENTRYHI_EHINV);</span>
<span class="p_add">+		UASM_i_MTC0(p, ptr, C0_ENTRYHI);</span>
<span class="p_add">+		build_huge_update_entries(p, pte, ptr);</span>
<span class="p_add">+		build_huge_tlb_write_entry(p, l, r, pte, tlb_random, 0);</span>
<span class="p_add">+</span>
<span class="p_add">+		return;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	build_huge_update_entries(p, pte, ptr);
 	build_huge_tlb_write_entry(p, l, r, pte, tlb_indexed, 0);
 }
<span class="p_chunk">@@ -2197,7 +2214,7 @@</span> <span class="p_context"> static void build_r4000_tlb_load_handler</span>
 		uasm_l_tlbl_goaround2(&amp;l, p);
 	}
 	uasm_i_ori(&amp;p, wr.r1, wr.r1, (_PAGE_ACCESSED | _PAGE_VALID));
<span class="p_del">-	build_huge_handler_tail(&amp;p, &amp;r, &amp;l, wr.r1, wr.r2);</span>
<span class="p_add">+	build_huge_handler_tail(&amp;p, &amp;r, &amp;l, wr.r1, wr.r2, 1);</span>
 #endif
 
 	uasm_l_nopage_tlbl(&amp;l, p);
<span class="p_chunk">@@ -2252,7 +2269,7 @@</span> <span class="p_context"> static void build_r4000_tlb_store_handle</span>
 	build_tlb_probe_entry(&amp;p);
 	uasm_i_ori(&amp;p, wr.r1, wr.r1,
 		   _PAGE_ACCESSED | _PAGE_MODIFIED | _PAGE_VALID | _PAGE_DIRTY);
<span class="p_del">-	build_huge_handler_tail(&amp;p, &amp;r, &amp;l, wr.r1, wr.r2);</span>
<span class="p_add">+	build_huge_handler_tail(&amp;p, &amp;r, &amp;l, wr.r1, wr.r2, 1);</span>
 #endif
 
 	uasm_l_nopage_tlbs(&amp;l, p);
<span class="p_chunk">@@ -2308,7 +2325,7 @@</span> <span class="p_context"> static void build_r4000_tlb_modify_handl</span>
 	build_tlb_probe_entry(&amp;p);
 	uasm_i_ori(&amp;p, wr.r1, wr.r1,
 		   _PAGE_ACCESSED | _PAGE_MODIFIED | _PAGE_VALID | _PAGE_DIRTY);
<span class="p_del">-	build_huge_handler_tail(&amp;p, &amp;r, &amp;l, wr.r1, wr.r2);</span>
<span class="p_add">+	build_huge_handler_tail(&amp;p, &amp;r, &amp;l, wr.r1, wr.r2, 0);</span>
 #endif
 
 	uasm_l_nopage_tlbm(&amp;l, p);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



