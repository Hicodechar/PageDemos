
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>mm: mmap: Simplify the failure return working flow - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    mm: mmap: Simplify the failure return working flow</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=124891">Chen Gang</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 18, 2015, 10:27 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;BLU436-SMTP37E3EE1A24E7A3EEEDBFA7B9780@phx.gbl&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7034111/mbox/"
   >mbox</a>
|
   <a href="/patch/7034111/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7034111/">/patch/7034111/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id AB286C05AC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 18 Aug 2015 22:26:22 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id D5BB320796
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 18 Aug 2015 22:26:21 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id E7A782079F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 18 Aug 2015 22:26:20 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753736AbbHRW0R (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 18 Aug 2015 18:26:17 -0400
Received: from blu004-omc1s16.hotmail.com ([65.55.116.27]:59506 &quot;EHLO
	BLU004-OMC1S16.hotmail.com&quot; rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1752048AbbHRW0O (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 18 Aug 2015 18:26:14 -0400
Received: from BLU436-SMTP37 ([65.55.116.8]) by BLU004-OMC1S16.hotmail.com
	over TLS secured channel with Microsoft SMTPSVC(7.5.7601.23008); 
	Tue, 18 Aug 2015 15:26:14 -0700
X-TMN: [K/F2gtVgy/6k8OQsTYEvIpthMff6z9Br]
X-Originating-Email: [xili_gchen_5257@hotmail.com]
Message-ID: &lt;BLU436-SMTP37E3EE1A24E7A3EEEDBFA7B9780@phx.gbl&gt;
Date: Wed, 19 Aug 2015 06:27:58 +0800
From: Chen Gang &lt;xili_gchen_5257@hotmail.com&gt;
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10;
	rv:31.0) Gecko/20100101 Thunderbird/31.7.0
MIME-Version: 1.0
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	riel@redhat.com, Michal Hocko &lt;mhocko@suse.cz&gt;, sasha.levin@oracle.com
CC: linux-mm@kvack.org,
	&quot;linux-kernel@vger.kernel.org&quot; &lt;linux-kernel@vger.kernel.org&gt;
Subject: [PATCH] mm: mmap: Simplify the failure return working flow
Content-Type: text/plain; charset=&quot;utf-8&quot;
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 18 Aug 2015 22:26:12.0603 (UTC)
	FILETIME=[E38B5CB0:01D0DA04]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.3 required=5.0 tests=BAYES_00,FREEMAIL_FROM,
	RCVD_IN_DNSWL_HI, RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124891">Chen Gang</a> - Aug. 18, 2015, 10:27 p.m.</div>
<pre class="content">
__split_vma() doesn&#39;t need out_err label, neither need initializing err.

copy_vma() can return NULL directly when kmem_cache_alloc() fails.
<span class="signed-off-by">
Signed-off-by: Chen Gang &lt;gang.chen.5i5j@gmail.com&gt;</span>
---
 mm/mmap.c | 39 +++++++++++++++++++--------------------
 1 file changed, 19 insertions(+), 20 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/mmap.c b/mm/mmap.c</span>
<span class="p_header">index 8e0366e..35a4376 100644</span>
<span class="p_header">--- a/mm/mmap.c</span>
<span class="p_header">+++ b/mm/mmap.c</span>
<span class="p_chunk">@@ -2461,7 +2461,7 @@</span> <span class="p_context"> static int __split_vma(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 	      unsigned long addr, int new_below)
 {
 	struct vm_area_struct *new;
<span class="p_del">-	int err = -ENOMEM;</span>
<span class="p_add">+	int err;</span>
 
 	if (is_vm_hugetlb_page(vma) &amp;&amp; (addr &amp;
 					~(huge_page_mask(hstate_vma(vma)))))
<span class="p_chunk">@@ -2469,7 +2469,7 @@</span> <span class="p_context"> static int __split_vma(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 
 	new = kmem_cache_alloc(vm_area_cachep, GFP_KERNEL);
 	if (!new)
<span class="p_del">-		goto out_err;</span>
<span class="p_add">+		return -ENOMEM;</span>
 
 	/* most fields are the same, copy all, and then fixup */
 	*new = *vma;
<span class="p_chunk">@@ -2517,7 +2517,6 @@</span> <span class="p_context"> static int __split_vma(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 	mpol_put(vma_policy(new));
  out_free_vma:
 	kmem_cache_free(vm_area_cachep, new);
<span class="p_del">- out_err:</span>
 	return err;
 }
 
<span class="p_chunk">@@ -2958,23 +2957,23 @@</span> <span class="p_context"> struct vm_area_struct *copy_vma(struct vm_area_struct **vmap,</span>
 		*need_rmap_locks = (new_vma-&gt;vm_pgoff &lt;= vma-&gt;vm_pgoff);
 	} else {
 		new_vma = kmem_cache_alloc(vm_area_cachep, GFP_KERNEL);
<span class="p_del">-		if (new_vma) {</span>
<span class="p_del">-			*new_vma = *vma;</span>
<span class="p_del">-			new_vma-&gt;vm_start = addr;</span>
<span class="p_del">-			new_vma-&gt;vm_end = addr + len;</span>
<span class="p_del">-			new_vma-&gt;vm_pgoff = pgoff;</span>
<span class="p_del">-			if (vma_dup_policy(vma, new_vma))</span>
<span class="p_del">-				goto out_free_vma;</span>
<span class="p_del">-			INIT_LIST_HEAD(&amp;new_vma-&gt;anon_vma_chain);</span>
<span class="p_del">-			if (anon_vma_clone(new_vma, vma))</span>
<span class="p_del">-				goto out_free_mempol;</span>
<span class="p_del">-			if (new_vma-&gt;vm_file)</span>
<span class="p_del">-				get_file(new_vma-&gt;vm_file);</span>
<span class="p_del">-			if (new_vma-&gt;vm_ops &amp;&amp; new_vma-&gt;vm_ops-&gt;open)</span>
<span class="p_del">-				new_vma-&gt;vm_ops-&gt;open(new_vma);</span>
<span class="p_del">-			vma_link(mm, new_vma, prev, rb_link, rb_parent);</span>
<span class="p_del">-			*need_rmap_locks = false;</span>
<span class="p_del">-		}</span>
<span class="p_add">+		if (!new_vma)</span>
<span class="p_add">+			return NULL;</span>
<span class="p_add">+		*new_vma = *vma;</span>
<span class="p_add">+		new_vma-&gt;vm_start = addr;</span>
<span class="p_add">+		new_vma-&gt;vm_end = addr + len;</span>
<span class="p_add">+		new_vma-&gt;vm_pgoff = pgoff;</span>
<span class="p_add">+		if (vma_dup_policy(vma, new_vma))</span>
<span class="p_add">+			goto out_free_vma;</span>
<span class="p_add">+		INIT_LIST_HEAD(&amp;new_vma-&gt;anon_vma_chain);</span>
<span class="p_add">+		if (anon_vma_clone(new_vma, vma))</span>
<span class="p_add">+			goto out_free_mempol;</span>
<span class="p_add">+		if (new_vma-&gt;vm_file)</span>
<span class="p_add">+			get_file(new_vma-&gt;vm_file);</span>
<span class="p_add">+		if (new_vma-&gt;vm_ops &amp;&amp; new_vma-&gt;vm_ops-&gt;open)</span>
<span class="p_add">+			new_vma-&gt;vm_ops-&gt;open(new_vma);</span>
<span class="p_add">+		vma_link(mm, new_vma, prev, rb_link, rb_parent);</span>
<span class="p_add">+		*need_rmap_locks = false;</span>
 	}
 	return new_vma;
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



