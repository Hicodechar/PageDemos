
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,3/4] mm, hugetlb: get rid of dequeue_huge_page_node - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,3/4] mm, hugetlb: get rid of dequeue_huge_page_node</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=137061">Michal Hocko</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 13, 2017, 9 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170613090039.14393-4-mhocko@kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9783369/mbox/"
   >mbox</a>
|
   <a href="/patch/9783369/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9783369/">/patch/9783369/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	737D160325 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 13 Jun 2017 09:01:02 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 679442867B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 13 Jun 2017 09:01:02 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 5C43E286E7; Tue, 13 Jun 2017 09:01:02 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3B76628683
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 13 Jun 2017 09:01:01 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752695AbdFMJA7 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 13 Jun 2017 05:00:59 -0400
Received: from mail-wr0-f193.google.com ([209.85.128.193]:35329 &quot;EHLO
	mail-wr0-f193.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752418AbdFMJAx (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 13 Jun 2017 05:00:53 -0400
Received: by mail-wr0-f193.google.com with SMTP id g76so27856449wrd.2
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Tue, 13 Jun 2017 02:00:53 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=Vo6a9xJoSF7ojNqI++NDapjy7H48Ow0tDMwNN51Nhlk=;
	b=NTiIfbB2KlnyqSY2GPcRE5l7CkSxLHn0X782EpPrMqVkXvWe0ord9GaqJBcEHL66By
	SDViR2zTVntlnnaUxME5LPZEG57y3isRj/nDOG38KLkf/rEkpf8yg3/ZBADyTKdHVntj
	rXPdf/DGtlsk9p5qRI2Lwba6oaaNlCYuqkRLwGOFLmNQKtaaHVTWFIOF63B87nqAtS2p
	SLiCZJYCdWmenM7dV31+hRFnCHJBrp+kbqYGZosksYIKDAF0AaxmMk4kxB4HeiZW+RrO
	TJcZY4uhlX15D/SbRH1+MtKX8V0H58iV7apdK/dKDj49J6hHhaBj+T1/yj8D5voJg1Ae
	8SaA==
X-Gm-Message-State: AKS2vOwIKxyWPq2e5JRgJVEkU5wUDkI+/VKey4LGkvg4HpQvGT4NqFWT
	HDPQsZHdk2cpLQ==
X-Received: by 10.223.164.23 with SMTP id d23mr2169636wra.54.1497344452044; 
	Tue, 13 Jun 2017 02:00:52 -0700 (PDT)
Received: from tiehlicka.suse.cz (prg-ext-pat.suse.com. [213.151.95.130])
	by smtp.gmail.com with ESMTPSA id
	c11sm6041078wrb.58.2017.06.13.02.00.50
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Tue, 13 Jun 2017 02:00:51 -0700 (PDT)
From: Michal Hocko &lt;mhocko@kernel.org&gt;
To: &lt;linux-mm@kvack.org&gt;
Cc: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;,
	Mike Kravetz &lt;mike.kravetz@oracle.com&gt;,
	Mel Gorman &lt;mgorman@suse.de&gt;, Vlastimil Babka &lt;vbabka@suse.cz&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	LKML &lt;linux-kernel@vger.kernel.org&gt;, Michal Hocko &lt;mhocko@suse.com&gt;
Subject: [RFC PATCH 3/4] mm, hugetlb: get rid of dequeue_huge_page_node
Date: Tue, 13 Jun 2017 11:00:38 +0200
Message-Id: &lt;20170613090039.14393-4-mhocko@kernel.org&gt;
X-Mailer: git-send-email 2.11.0
In-Reply-To: &lt;20170613090039.14393-1-mhocko@kernel.org&gt;
References: &lt;20170613090039.14393-1-mhocko@kernel.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137061">Michal Hocko</a> - June 13, 2017, 9 a.m.</div>
<pre class="content">
<span class="from">From: Michal Hocko &lt;mhocko@suse.com&gt;</span>

dequeue_huge_page_node has a single caller alloc_huge_page_node and we
already have to handle NUMA_NO_NODE specially there. So get rid of the
helper and use the same numa mask trick for hugetlb dequeue as we use
for the allocation.
<span class="signed-off-by">
Signed-off-by: Michal Hocko &lt;mhocko@suse.com&gt;</span>
---
 mm/hugetlb.c | 29 ++++++++++-------------------
 1 file changed, 10 insertions(+), 19 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 696de029f0fa..f58d6362c2c3 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -943,14 +943,6 @@</span> <span class="p_context"> static struct page *dequeue_huge_page_nodemask(struct hstate *h, int nid,</span>
 	return NULL;
 }
 
<span class="p_del">-static struct page *dequeue_huge_page_node(struct hstate *h, int nid)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (nid != NUMA_NO_NODE)</span>
<span class="p_del">-		return dequeue_huge_page_node_exact(h, nid);</span>
<span class="p_del">-</span>
<span class="p_del">-	return dequeue_huge_page_nodemask(h, nid, NULL);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static struct page *dequeue_huge_page_vma(struct hstate *h,
 				struct vm_area_struct *vma,
 				unsigned long address, int avoid_reserve,
<span class="p_chunk">@@ -1640,23 +1632,22 @@</span> <span class="p_context"> struct page *__alloc_buddy_huge_page_with_mpol(struct hstate *h,</span>
 struct page *alloc_huge_page_node(struct hstate *h, int nid)
 {
 	struct page *page = NULL;
<span class="p_add">+	nodemask_t nmask;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (nid != NUMA_NO_NODE) {</span>
<span class="p_add">+		nmask = NODE_MASK_NONE;</span>
<span class="p_add">+		node_set(nid, nmask);</span>
<span class="p_add">+	} else {</span>
<span class="p_add">+		nmask = node_states[N_MEMORY];</span>
<span class="p_add">+	}</span>
 
 	spin_lock(&amp;hugetlb_lock);
 	if (h-&gt;free_huge_pages - h-&gt;resv_huge_pages &gt; 0)
<span class="p_del">-		page = dequeue_huge_page_node(h, nid);</span>
<span class="p_add">+		page = dequeue_huge_page_nodemask(h, nid, &amp;nmask);</span>
 	spin_unlock(&amp;hugetlb_lock);
 
<span class="p_del">-	if (!page) {</span>
<span class="p_del">-		nodemask_t nmask;</span>
<span class="p_del">-</span>
<span class="p_del">-		if (nid != NUMA_NO_NODE) {</span>
<span class="p_del">-			nmask = NODE_MASK_NONE;</span>
<span class="p_del">-			node_set(nid, nmask);</span>
<span class="p_del">-		} else {</span>
<span class="p_del">-			nmask = node_states[N_MEMORY];</span>
<span class="p_del">-		}</span>
<span class="p_add">+	if (!page)</span>
 		page = __alloc_buddy_huge_page(h, nid, &amp;nmask);
<span class="p_del">-	}</span>
 
 	return page;
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



