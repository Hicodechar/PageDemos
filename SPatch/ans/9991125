
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,2/4] kmemcheck: stop using GFP_NOTRACK and SLAB_NOTRACK - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,2/4] kmemcheck: stop using GFP_NOTRACK and SLAB_NOTRACK</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=169497">Levin, Alexander</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 7, 2017, 3:02 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171007030159.22241-3-alexander.levin@verizon.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9991125/mbox/"
   >mbox</a>
|
   <a href="/patch/9991125/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9991125/">/patch/9991125/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	48B7660364 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat,  7 Oct 2017 03:03:46 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3AAD928CD6
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat,  7 Oct 2017 03:03:46 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 2F87D28D20; Sat,  7 Oct 2017 03:03:46 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id EA0B828CD6
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat,  7 Oct 2017 03:03:44 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753197AbdJGDDm (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 6 Oct 2017 23:03:42 -0400
Received: from omzsmtpe01.verizonbusiness.com ([199.249.25.210]:39385 &quot;EHLO
	omzsmtpe01.verizonbusiness.com&quot; rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1752278AbdJGDDA (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 6 Oct 2017 23:03:00 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=verizon.com; i=@verizon.com; q=dns/txt; s=corp;
	t=1507345380; x=1538881380;
	h=from:cc:to:subject:date:message-id:references:
	in-reply-to:content-transfer-encoding:mime-version;
	bh=VnZWv3gSoNSM4Yb7wEPS3XtdH4+3Sbuu6FaktKsbgjw=;
	b=gaEgUFbA4QR2dngNRTOD05JUizaDzpPRXNKM+TK39c2Q8sg/B0h4P7Fu
	X0oZNgZPJCUEmrFTxRIBJ+mW8e4mWlcoNtEyvmp/PfMDiv7FTV1zxmOyR
	XERSgUmQQR2Dk9X7H4fXXCxzbp+9xgo5RGHzmgExDKOpH1E9K/FARO8Wq U=;
Received: from unknown (HELO fldsmtpi02.verizon.com) ([166.68.71.144])
	by omzsmtpe01.verizonbusiness.com with ESMTP;
	07 Oct 2017 03:02:58 +0000
From: &quot;Levin, Alexander (Sasha Levin)&quot; &lt;alexander.levin@verizon.com&gt;
Cc: &quot;linux-kernel@vger.kernel.org&quot; &lt;linux-kernel@vger.kernel.org&gt;,
	&quot;rostedt@goodmis.org&quot; &lt;rostedt@goodmis.org&gt;,
	&quot;vegardno@ifi.uio.no&quot; &lt;vegardno@ifi.uio.no&gt;,
	&quot;penberg@kernel.org&quot; &lt;penberg@kernel.org&gt;,
	&quot;mhocko@kernel.org&quot; &lt;mhocko@kernel.org&gt;,
	&quot;ebiederm@xmission.com&quot; &lt;ebiederm@xmission.com&gt;,
	&quot;glider@google.com&quot; &lt;glider@google.com&gt;,
	&quot;devtimhansen@gmail.com&quot; &lt;devtimhansen@gmail.com&gt;,
	&quot;Levin, Alexander (Sasha Levin)&quot; &lt;alexander.levin@verizon.com&gt;
Received: from rogue-10-255-192-101.rogue.vzwcorp.com (HELO
	atlantis.verizonwireless.com) ([10.255.192.101])
	by fldsmtpi02.verizon.com with ESMTP/TLS/DHE-RSA-AES256-SHA;
	07 Oct 2017 03:02:18 +0000
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=verizon.com; i=@verizon.com; q=dns/txt; s=corp;
	t=1507345338; x=1538881338;
	h=from:to:cc:subject:date:message-id:references:
	in-reply-to:content-transfer-encoding:mime-version;
	bh=VnZWv3gSoNSM4Yb7wEPS3XtdH4+3Sbuu6FaktKsbgjw=;
	b=Qq+LxjLotiiofmmAiEM6yNxchyW2WdfFsVu7kK3h+1AraNMdNK8RXRdF
	WrajBCNoce//F6SN7yQphDtmItURSmEyh/328ecIHsw8G+Sa5NADraN8d
	X/AXIhj8Ggg6NaB+WKkN0N3j5aCPsoRBheF7ZFhY5MM7tNV8AXeciNwKF 0=;
Received: from pioneer.tdc.vzwcorp.com (HELO eris.verizonwireless.com)
	([10.254.88.34])
	by atlantis.verizonwireless.com with ESMTP/TLS/DHE-RSA-AES256-SHA;
	06 Oct 2017 23:02:17 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=verizon.com; i=@verizon.com; q=dns/txt; s=corp;
	t=1507345337; x=1538881337;
	h=from:to:cc:subject:date:message-id:references:
	in-reply-to:content-transfer-encoding:mime-version;
	bh=VnZWv3gSoNSM4Yb7wEPS3XtdH4+3Sbuu6FaktKsbgjw=;
	b=EkF0EAwj3eYKaCJ6/30UtLL0CWnRdpsLepVklLIxEqgBHFlXIKrd1YW3
	/ekC0PRuw9OVjpETZPNwEbae5Zi0LAKGZ7GpNJmrh3EDgi9GBFRY3Jw2F
	t3k+PqKibpnmygZWVtGJ22J49n/WNsAxdKa1+8QXUVHt6J6Yj/+OohIgj Y=;
X-Host: pioneer.tdc.vzwcorp.com
Received: from ohtwi1exh003.uswin.ad.vzwcorp.com ([10.144.218.45])
	by eris.verizonwireless.com with ESMTP/TLS/AES128-SHA256;
	07 Oct 2017 03:02:16 +0000
Received: from tbwexch10apd.uswin.ad.vzwcorp.com (153.114.162.34) by
	OHTWI1EXH003.uswin.ad.vzwcorp.com (10.144.218.45) with Microsoft SMTP
	Server (TLS) id 14.3.248.2; Fri, 6 Oct 2017 23:02:16 -0400
Received: from OMZP1LUMXCA16.uswin.ad.vzwcorp.com (144.8.22.194) by
	tbwexch10apd.uswin.ad.vzwcorp.com (153.114.162.34) with Microsoft
	SMTP Server (TLS) id 15.0.1263.5; Fri, 6 Oct 2017 23:02:15 -0400
Received: from OMZP1LUMXCA17.uswin.ad.vzwcorp.com (144.8.22.195) by
	OMZP1LUMXCA16.uswin.ad.vzwcorp.com (144.8.22.194) with Microsoft SMTP
	Server (TLS) id 15.0.1263.5; Fri, 6 Oct 2017 22:02:14 -0500
Received: from OMZP1LUMXCA17.uswin.ad.vzwcorp.com ([144.8.22.195]) by
	OMZP1LUMXCA17.uswin.ad.vzwcorp.com ([144.8.22.195]) with mapi id
	15.00.1263.000; Fri, 6 Oct 2017 22:02:14 -0500
To: &quot;akpm@linux-foundation.org&quot; &lt;akpm@linux-foundation.org&gt;
Subject: [PATCH v2 2/4] kmemcheck: stop using GFP_NOTRACK and SLAB_NOTRACK
Thread-Topic: [PATCH v2 2/4] kmemcheck: stop using GFP_NOTRACK and
	SLAB_NOTRACK
Thread-Index: AQHTPxitzQKkxWvRrU6ZnqeO4ZPehQ==
Date: Sat, 7 Oct 2017 03:02:14 +0000
Message-ID: &lt;20171007030159.22241-3-alexander.levin@verizon.com&gt;
References: &lt;20171007030159.22241-1-alexander.levin@verizon.com&gt;
In-Reply-To: &lt;20171007030159.22241-1-alexander.levin@verizon.com&gt;
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-ms-exchange-messagesentrepresentingtype: 1
x-ms-exchange-transport-fromentityheader: Hosted
x-originating-ip: [10.144.60.250]
Content-Type: text/plain; charset=&quot;iso-8859-1&quot;
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=169497">Levin, Alexander</a> - Oct. 7, 2017, 3:02 a.m.</div>
<pre class="content">
Convert all allocations that used a NOTRACK flag to stop using it.
<span class="signed-off-by">
Signed-off-by: Sasha Levin &lt;alexander.levin@verizon.com&gt;</span>
---
 arch/arm/include/asm/pgalloc.h       |  2 +-
 arch/arm64/include/asm/pgalloc.h     |  2 +-
 arch/powerpc/include/asm/pgalloc.h   |  2 +-
 arch/sh/kernel/dwarf.c               |  4 ++--
 arch/sh/kernel/process.c             |  2 +-
 arch/sparc/mm/init_64.c              |  4 ++--
 arch/unicore32/include/asm/pgalloc.h |  2 +-
 arch/x86/kernel/espfix_64.c          |  2 +-
 arch/x86/mm/init.c                   |  3 +--
 arch/x86/mm/init_64.c                |  2 +-
 arch/x86/mm/pageattr.c               | 10 +++++-----
 arch/x86/mm/pgtable.c                |  2 +-
 arch/x86/platform/efi/efi_64.c       |  2 +-
 crypto/xor.c                         |  7 +------
 include/linux/thread_info.h          |  5 ++---
 init/do_mounts.c                     |  3 +--
 kernel/fork.c                        | 12 ++++++------
 kernel/signal.c                      |  3 +--
 mm/kmemcheck.c                       |  2 +-
 mm/slab.c                            |  2 +-
 mm/slab.h                            |  5 ++---
 mm/slab_common.c                     |  2 +-
 mm/slub.c                            |  4 +---
 23 files changed, 36 insertions(+), 48 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm/include/asm/pgalloc.h b/arch/arm/include/asm/pgalloc.h</span>
<span class="p_header">index b2902a5cd780..2d7344f0e208 100644</span>
<span class="p_header">--- a/arch/arm/include/asm/pgalloc.h</span>
<span class="p_header">+++ b/arch/arm/include/asm/pgalloc.h</span>
<span class="p_chunk">@@ -57,7 +57,7 @@</span> <span class="p_context"> static inline void pud_populate(struct mm_struct *mm, pud_t *pud, pmd_t *pmd)</span>
 extern pgd_t *pgd_alloc(struct mm_struct *mm);
 extern void pgd_free(struct mm_struct *mm, pgd_t *pgd);
 
<span class="p_del">-#define PGALLOC_GFP	(GFP_KERNEL | __GFP_NOTRACK | __GFP_ZERO)</span>
<span class="p_add">+#define PGALLOC_GFP	(GFP_KERNEL | __GFP_ZERO)</span>
 
 static inline void clean_pte_table(pte_t *pte)
 {
<span class="p_header">diff --git a/arch/arm64/include/asm/pgalloc.h b/arch/arm64/include/asm/pgalloc.h</span>
<span class="p_header">index d25f4f137c2a..5ca6a573a701 100644</span>
<span class="p_header">--- a/arch/arm64/include/asm/pgalloc.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/pgalloc.h</span>
<span class="p_chunk">@@ -26,7 +26,7 @@</span> <span class="p_context"></span>
 
 #define check_pgt_cache()		do { } while (0)
 
<span class="p_del">-#define PGALLOC_GFP	(GFP_KERNEL | __GFP_NOTRACK | __GFP_ZERO)</span>
<span class="p_add">+#define PGALLOC_GFP	(GFP_KERNEL | __GFP_ZERO)</span>
 #define PGD_SIZE	(PTRS_PER_PGD * sizeof(pgd_t))
 
 #if CONFIG_PGTABLE_LEVELS &gt; 2
<span class="p_header">diff --git a/arch/powerpc/include/asm/pgalloc.h b/arch/powerpc/include/asm/pgalloc.h</span>
<span class="p_header">index 45ae1212ab8a..bb01297b617a 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/pgalloc.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/pgalloc.h</span>
<span class="p_chunk">@@ -17,7 +17,7 @@</span> <span class="p_context"> static inline gfp_t pgtable_gfp_flags(struct mm_struct *mm, gfp_t gfp)</span>
 }
 #endif /* MODULE */
 
<span class="p_del">-#define PGALLOC_GFP (GFP_KERNEL | __GFP_NOTRACK | __GFP_ZERO)</span>
<span class="p_add">+#define PGALLOC_GFP (GFP_KERNEL | __GFP_ZERO)</span>
 
 #ifdef CONFIG_PPC_BOOK3S
 #include &lt;asm/book3s/pgalloc.h&gt;
<span class="p_header">diff --git a/arch/sh/kernel/dwarf.c b/arch/sh/kernel/dwarf.c</span>
<span class="p_header">index e1d751ae2498..1a2526676a87 100644</span>
<span class="p_header">--- a/arch/sh/kernel/dwarf.c</span>
<span class="p_header">+++ b/arch/sh/kernel/dwarf.c</span>
<span class="p_chunk">@@ -1172,11 +1172,11 @@</span> <span class="p_context"> static int __init dwarf_unwinder_init(void)</span>
 
 	dwarf_frame_cachep = kmem_cache_create(&quot;dwarf_frames&quot;,
 			sizeof(struct dwarf_frame), 0,
<span class="p_del">-			SLAB_PANIC | SLAB_HWCACHE_ALIGN | SLAB_NOTRACK, NULL);</span>
<span class="p_add">+			SLAB_PANIC | SLAB_HWCACHE_ALIGN, NULL);</span>
 
 	dwarf_reg_cachep = kmem_cache_create(&quot;dwarf_regs&quot;,
 			sizeof(struct dwarf_reg), 0,
<span class="p_del">-			SLAB_PANIC | SLAB_HWCACHE_ALIGN | SLAB_NOTRACK, NULL);</span>
<span class="p_add">+			SLAB_PANIC | SLAB_HWCACHE_ALIGN, NULL);</span>
 
 	dwarf_frame_pool = mempool_create_slab_pool(DWARF_FRAME_MIN_REQ,
 						    dwarf_frame_cachep);
<span class="p_header">diff --git a/arch/sh/kernel/process.c b/arch/sh/kernel/process.c</span>
<span class="p_header">index f8a695a223dd..ded55e7461f8 100644</span>
<span class="p_header">--- a/arch/sh/kernel/process.c</span>
<span class="p_header">+++ b/arch/sh/kernel/process.c</span>
<span class="p_chunk">@@ -58,7 +58,7 @@</span> <span class="p_context"> void arch_task_cache_init(void)</span>
 
 	task_xstate_cachep = kmem_cache_create(&quot;task_xstate&quot;, xstate_size,
 					       __alignof__(union thread_xstate),
<span class="p_del">-					       SLAB_PANIC | SLAB_NOTRACK, NULL);</span>
<span class="p_add">+					       SLAB_PANIC, NULL);</span>
 }
 
 #ifdef CONFIG_SH_FPU_EMU
<span class="p_header">diff --git a/arch/sparc/mm/init_64.c b/arch/sparc/mm/init_64.c</span>
<span class="p_header">index b2ba410b26f4..78f79004be2c 100644</span>
<span class="p_header">--- a/arch/sparc/mm/init_64.c</span>
<span class="p_header">+++ b/arch/sparc/mm/init_64.c</span>
<span class="p_chunk">@@ -2926,7 +2926,7 @@</span> <span class="p_context"> void __flush_tlb_all(void)</span>
 pte_t *pte_alloc_one_kernel(struct mm_struct *mm,
 			    unsigned long address)
 {
<span class="p_del">-	struct page *page = alloc_page(GFP_KERNEL | __GFP_NOTRACK | __GFP_ZERO);</span>
<span class="p_add">+	struct page *page = alloc_page(GFP_KERNEL | __GFP_ZERO);</span>
 	pte_t *pte = NULL;
 
 	if (page)
<span class="p_chunk">@@ -2938,7 +2938,7 @@</span> <span class="p_context"> pte_t *pte_alloc_one_kernel(struct mm_struct *mm,</span>
 pgtable_t pte_alloc_one(struct mm_struct *mm,
 			unsigned long address)
 {
<span class="p_del">-	struct page *page = alloc_page(GFP_KERNEL | __GFP_NOTRACK | __GFP_ZERO);</span>
<span class="p_add">+	struct page *page = alloc_page(GFP_KERNEL | __GFP_ZERO);</span>
 	if (!page)
 		return NULL;
 	if (!pgtable_page_ctor(page)) {
<span class="p_header">diff --git a/arch/unicore32/include/asm/pgalloc.h b/arch/unicore32/include/asm/pgalloc.h</span>
<span class="p_header">index 26775793c204..f0fdb268f8f2 100644</span>
<span class="p_header">--- a/arch/unicore32/include/asm/pgalloc.h</span>
<span class="p_header">+++ b/arch/unicore32/include/asm/pgalloc.h</span>
<span class="p_chunk">@@ -28,7 +28,7 @@</span> <span class="p_context"> extern void free_pgd_slow(struct mm_struct *mm, pgd_t *pgd);</span>
 #define pgd_alloc(mm)			get_pgd_slow(mm)
 #define pgd_free(mm, pgd)		free_pgd_slow(mm, pgd)
 
<span class="p_del">-#define PGALLOC_GFP	(GFP_KERNEL | __GFP_NOTRACK | __GFP_ZERO)</span>
<span class="p_add">+#define PGALLOC_GFP	(GFP_KERNEL | __GFP_ZERO)</span>
 
 /*
  * Allocate one PTE table.
<span class="p_header">diff --git a/arch/x86/kernel/espfix_64.c b/arch/x86/kernel/espfix_64.c</span>
<span class="p_header">index 9c4e7ba6870c..cbded50ee601 100644</span>
<span class="p_header">--- a/arch/x86/kernel/espfix_64.c</span>
<span class="p_header">+++ b/arch/x86/kernel/espfix_64.c</span>
<span class="p_chunk">@@ -57,7 +57,7 @@</span> <span class="p_context"></span>
 # error &quot;Need more virtual address space for the ESPFIX hack&quot;
 #endif
 
<span class="p_del">-#define PGALLOC_GFP (GFP_KERNEL | __GFP_NOTRACK | __GFP_ZERO)</span>
<span class="p_add">+#define PGALLOC_GFP (GFP_KERNEL | __GFP_ZERO)</span>
 
 /* This contains the *bottom* address of the espfix stack */
 DEFINE_PER_CPU_READ_MOSTLY(unsigned long, espfix_stack);
<span class="p_header">diff --git a/arch/x86/mm/init.c b/arch/x86/mm/init.c</span>
<span class="p_header">index af5c1ed21d43..57add472356b 100644</span>
<span class="p_header">--- a/arch/x86/mm/init.c</span>
<span class="p_header">+++ b/arch/x86/mm/init.c</span>
<span class="p_chunk">@@ -92,8 +92,7 @@</span> <span class="p_context"> __ref void *alloc_low_pages(unsigned int num)</span>
 		unsigned int order;
 
 		order = get_order((unsigned long)num &lt;&lt; PAGE_SHIFT);
<span class="p_del">-		return (void *)__get_free_pages(GFP_ATOMIC | __GFP_NOTRACK |</span>
<span class="p_del">-						__GFP_ZERO, order);</span>
<span class="p_add">+		return (void *)__get_free_pages(GFP_ATOMIC | __GFP_ZERO, order);</span>
 	}
 
 	if ((pgt_buf_end + num) &gt; pgt_buf_top || !can_use_brk_pgt) {
<span class="p_header">diff --git a/arch/x86/mm/init_64.c b/arch/x86/mm/init_64.c</span>
<span class="p_header">index 048fbe8fc274..3f7ca42d1e22 100644</span>
<span class="p_header">--- a/arch/x86/mm/init_64.c</span>
<span class="p_header">+++ b/arch/x86/mm/init_64.c</span>
<span class="p_chunk">@@ -184,7 +184,7 @@</span> <span class="p_context"> static __ref void *spp_getpage(void)</span>
 	void *ptr;
 
 	if (after_bootmem)
<span class="p_del">-		ptr = (void *) get_zeroed_page(GFP_ATOMIC | __GFP_NOTRACK);</span>
<span class="p_add">+		ptr = (void *) get_zeroed_page(GFP_ATOMIC);</span>
 	else
 		ptr = alloc_bootmem_pages(PAGE_SIZE);
 
<span class="p_header">diff --git a/arch/x86/mm/pageattr.c b/arch/x86/mm/pageattr.c</span>
<span class="p_header">index dfb7d657cf43..3ed9a08885c5 100644</span>
<span class="p_header">--- a/arch/x86/mm/pageattr.c</span>
<span class="p_header">+++ b/arch/x86/mm/pageattr.c</span>
<span class="p_chunk">@@ -753,7 +753,7 @@</span> <span class="p_context"> static int split_large_page(struct cpa_data *cpa, pte_t *kpte,</span>
 
 	if (!debug_pagealloc_enabled())
 		spin_unlock(&amp;cpa_lock);
<span class="p_del">-	base = alloc_pages(GFP_KERNEL | __GFP_NOTRACK, 0);</span>
<span class="p_add">+	base = alloc_pages(GFP_KERNEL, 0);</span>
 	if (!debug_pagealloc_enabled())
 		spin_lock(&amp;cpa_lock);
 	if (!base)
<span class="p_chunk">@@ -904,7 +904,7 @@</span> <span class="p_context"> static void unmap_pud_range(p4d_t *p4d, unsigned long start, unsigned long end)</span>
 
 static int alloc_pte_page(pmd_t *pmd)
 {
<span class="p_del">-	pte_t *pte = (pte_t *)get_zeroed_page(GFP_KERNEL | __GFP_NOTRACK);</span>
<span class="p_add">+	pte_t *pte = (pte_t *)get_zeroed_page(GFP_KERNEL);</span>
 	if (!pte)
 		return -1;
 
<span class="p_chunk">@@ -914,7 +914,7 @@</span> <span class="p_context"> static int alloc_pte_page(pmd_t *pmd)</span>
 
 static int alloc_pmd_page(pud_t *pud)
 {
<span class="p_del">-	pmd_t *pmd = (pmd_t *)get_zeroed_page(GFP_KERNEL | __GFP_NOTRACK);</span>
<span class="p_add">+	pmd_t *pmd = (pmd_t *)get_zeroed_page(GFP_KERNEL);</span>
 	if (!pmd)
 		return -1;
 
<span class="p_chunk">@@ -1120,7 +1120,7 @@</span> <span class="p_context"> static int populate_pgd(struct cpa_data *cpa, unsigned long addr)</span>
 	pgd_entry = cpa-&gt;pgd + pgd_index(addr);
 
 	if (pgd_none(*pgd_entry)) {
<span class="p_del">-		p4d = (p4d_t *)get_zeroed_page(GFP_KERNEL | __GFP_NOTRACK);</span>
<span class="p_add">+		p4d = (p4d_t *)get_zeroed_page(GFP_KERNEL);</span>
 		if (!p4d)
 			return -1;
 
<span class="p_chunk">@@ -1132,7 +1132,7 @@</span> <span class="p_context"> static int populate_pgd(struct cpa_data *cpa, unsigned long addr)</span>
 	 */
 	p4d = p4d_offset(pgd_entry, addr);
 	if (p4d_none(*p4d)) {
<span class="p_del">-		pud = (pud_t *)get_zeroed_page(GFP_KERNEL | __GFP_NOTRACK);</span>
<span class="p_add">+		pud = (pud_t *)get_zeroed_page(GFP_KERNEL);</span>
 		if (!pud)
 			return -1;
 
<span class="p_header">diff --git a/arch/x86/mm/pgtable.c b/arch/x86/mm/pgtable.c</span>
<span class="p_header">index b372f3442bbf..dc686d2fc59a 100644</span>
<span class="p_header">--- a/arch/x86/mm/pgtable.c</span>
<span class="p_header">+++ b/arch/x86/mm/pgtable.c</span>
<span class="p_chunk">@@ -6,7 +6,7 @@</span> <span class="p_context"></span>
 #include &lt;asm/fixmap.h&gt;
 #include &lt;asm/mtrr.h&gt;
 
<span class="p_del">-#define PGALLOC_GFP (GFP_KERNEL_ACCOUNT | __GFP_NOTRACK | __GFP_ZERO)</span>
<span class="p_add">+#define PGALLOC_GFP (GFP_KERNEL_ACCOUNT | __GFP_ZERO)</span>
 
 #ifdef CONFIG_HIGHPTE
 #define PGALLOC_USER_GFP __GFP_HIGHMEM
<span class="p_header">diff --git a/arch/x86/platform/efi/efi_64.c b/arch/x86/platform/efi/efi_64.c</span>
<span class="p_header">index 12e83888e5b9..fe3aebb87468 100644</span>
<span class="p_header">--- a/arch/x86/platform/efi/efi_64.c</span>
<span class="p_header">+++ b/arch/x86/platform/efi/efi_64.c</span>
<span class="p_chunk">@@ -205,7 +205,7 @@</span> <span class="p_context"> int __init efi_alloc_page_tables(void)</span>
 	if (efi_enabled(EFI_OLD_MEMMAP))
 		return 0;
 
<span class="p_del">-	gfp_mask = GFP_KERNEL | __GFP_NOTRACK | __GFP_ZERO;</span>
<span class="p_add">+	gfp_mask = GFP_KERNEL | __GFP_ZERO;</span>
 	efi_pgd = (pgd_t *)__get_free_page(gfp_mask);
 	if (!efi_pgd)
 		return -ENOMEM;
<span class="p_header">diff --git a/crypto/xor.c b/crypto/xor.c</span>
<span class="p_header">index 263af9fb45ea..bce9fe7af40a 100644</span>
<span class="p_header">--- a/crypto/xor.c</span>
<span class="p_header">+++ b/crypto/xor.c</span>
<span class="p_chunk">@@ -122,12 +122,7 @@</span> <span class="p_context"> calibrate_xor_blocks(void)</span>
 		goto out;
 	}
 
<span class="p_del">-	/*</span>
<span class="p_del">-	 * Note: Since the memory is not actually used for _anything_ but to</span>
<span class="p_del">-	 * test the XOR speed, we don&#39;t really want kmemcheck to warn about</span>
<span class="p_del">-	 * reading uninitialized bytes here.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	b1 = (void *) __get_free_pages(GFP_KERNEL | __GFP_NOTRACK, 2);</span>
<span class="p_add">+	b1 = (void *) __get_free_pages(GFP_KERNEL, 2);</span>
 	if (!b1) {
 		printk(KERN_WARNING &quot;xor: Yikes!  No memory available.\n&quot;);
 		return -ENOMEM;
<span class="p_header">diff --git a/include/linux/thread_info.h b/include/linux/thread_info.h</span>
<span class="p_header">index 905d769d8ddc..c1deb611b5bb 100644</span>
<span class="p_header">--- a/include/linux/thread_info.h</span>
<span class="p_header">+++ b/include/linux/thread_info.h</span>
<span class="p_chunk">@@ -43,10 +43,9 @@</span> <span class="p_context"> enum {</span>
 #endif
 
 #ifdef CONFIG_DEBUG_STACK_USAGE
<span class="p_del">-# define THREADINFO_GFP		(GFP_KERNEL_ACCOUNT | __GFP_NOTRACK | \</span>
<span class="p_del">-				 __GFP_ZERO)</span>
<span class="p_add">+# define THREADINFO_GFP		(GFP_KERNEL_ACCOUNT | __GFP_ZERO)</span>
 #else
<span class="p_del">-# define THREADINFO_GFP		(GFP_KERNEL_ACCOUNT | __GFP_NOTRACK)</span>
<span class="p_add">+# define THREADINFO_GFP		(GFP_KERNEL_ACCOUNT)</span>
 #endif
 
 /*
<span class="p_header">diff --git a/init/do_mounts.c b/init/do_mounts.c</span>
<span class="p_header">index f6d4dd764a52..7cf4f6dafd5f 100644</span>
<span class="p_header">--- a/init/do_mounts.c</span>
<span class="p_header">+++ b/init/do_mounts.c</span>
<span class="p_chunk">@@ -380,8 +380,7 @@</span> <span class="p_context"> static int __init do_mount_root(char *name, char *fs, int flags, void *data)</span>
 
 void __init mount_block_root(char *name, int flags)
 {
<span class="p_del">-	struct page *page = alloc_page(GFP_KERNEL |</span>
<span class="p_del">-					__GFP_NOTRACK_FALSE_POSITIVE);</span>
<span class="p_add">+	struct page *page = alloc_page(GFP_KERNEL);</span>
 	char *fs_names = page_address(page);
 	char *p;
 #ifdef CONFIG_BLOCK
<span class="p_header">diff --git a/kernel/fork.c b/kernel/fork.c</span>
<span class="p_header">index e702cb9ffbd8..94aa58e12807 100644</span>
<span class="p_header">--- a/kernel/fork.c</span>
<span class="p_header">+++ b/kernel/fork.c</span>
<span class="p_chunk">@@ -465,7 +465,7 @@</span> <span class="p_context"> void __init fork_init(void)</span>
 	/* create a slab on which task_structs can be allocated */
 	task_struct_cachep = kmem_cache_create(&quot;task_struct&quot;,
 			arch_task_struct_size, align,
<span class="p_del">-			SLAB_PANIC|SLAB_NOTRACK|SLAB_ACCOUNT, NULL);</span>
<span class="p_add">+			SLAB_PANIC|SLAB_ACCOUNT, NULL);</span>
 #endif
 
 	/* do the arch specific task caches init */
<span class="p_chunk">@@ -2205,18 +2205,18 @@</span> <span class="p_context"> void __init proc_caches_init(void)</span>
 	sighand_cachep = kmem_cache_create(&quot;sighand_cache&quot;,
 			sizeof(struct sighand_struct), 0,
 			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_TYPESAFE_BY_RCU|
<span class="p_del">-			SLAB_NOTRACK|SLAB_ACCOUNT, sighand_ctor);</span>
<span class="p_add">+			SLAB_ACCOUNT, sighand_ctor);</span>
 	signal_cachep = kmem_cache_create(&quot;signal_cache&quot;,
 			sizeof(struct signal_struct), 0,
<span class="p_del">-			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_NOTRACK|SLAB_ACCOUNT,</span>
<span class="p_add">+			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_ACCOUNT,</span>
 			NULL);
 	files_cachep = kmem_cache_create(&quot;files_cache&quot;,
 			sizeof(struct files_struct), 0,
<span class="p_del">-			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_NOTRACK|SLAB_ACCOUNT,</span>
<span class="p_add">+			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_ACCOUNT,</span>
 			NULL);
 	fs_cachep = kmem_cache_create(&quot;fs_cache&quot;,
 			sizeof(struct fs_struct), 0,
<span class="p_del">-			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_NOTRACK|SLAB_ACCOUNT,</span>
<span class="p_add">+			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_ACCOUNT,</span>
 			NULL);
 	/*
 	 * FIXME! The &quot;sizeof(struct mm_struct)&quot; currently includes the
<span class="p_chunk">@@ -2227,7 +2227,7 @@</span> <span class="p_context"> void __init proc_caches_init(void)</span>
 	 */
 	mm_cachep = kmem_cache_create(&quot;mm_struct&quot;,
 			sizeof(struct mm_struct), ARCH_MIN_MMSTRUCT_ALIGN,
<span class="p_del">-			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_NOTRACK|SLAB_ACCOUNT,</span>
<span class="p_add">+			SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_ACCOUNT,</span>
 			NULL);
 	vm_area_cachep = KMEM_CACHE(vm_area_struct, SLAB_PANIC|SLAB_ACCOUNT);
 	mmap_init();
<span class="p_header">diff --git a/kernel/signal.c b/kernel/signal.c</span>
<span class="p_header">index 800a18f77732..8da9a7ff52fc 100644</span>
<span class="p_header">--- a/kernel/signal.c</span>
<span class="p_header">+++ b/kernel/signal.c</span>
<span class="p_chunk">@@ -1036,8 +1036,7 @@</span> <span class="p_context"> static int __send_signal(int sig, struct siginfo *info, struct task_struct *t,</span>
 	else
 		override_rlimit = 0;
 
<span class="p_del">-	q = __sigqueue_alloc(sig, t, GFP_ATOMIC | __GFP_NOTRACK_FALSE_POSITIVE,</span>
<span class="p_del">-		override_rlimit);</span>
<span class="p_add">+	q = __sigqueue_alloc(sig, t, GFP_ATOMIC, override_rlimit);</span>
 	if (q) {
 		list_add_tail(&amp;q-&gt;list, &amp;pending-&gt;list);
 		switch ((unsigned long) info) {
<span class="p_header">diff --git a/mm/kmemcheck.c b/mm/kmemcheck.c</span>
<span class="p_header">index 2d5959c5f7c5..2e2939171af3 100644</span>
<span class="p_header">--- a/mm/kmemcheck.c</span>
<span class="p_header">+++ b/mm/kmemcheck.c</span>
<span class="p_chunk">@@ -17,7 +17,7 @@</span> <span class="p_context"> void kmemcheck_alloc_shadow(struct page *page, int order, gfp_t flags, int node)</span>
 	 * With kmemcheck enabled, we need to allocate a memory area for the
 	 * shadow bits as well.
 	 */
<span class="p_del">-	shadow = alloc_pages_node(node, flags | __GFP_NOTRACK, order);</span>
<span class="p_add">+	shadow = alloc_pages_node(node, flags, order);</span>
 	if (!shadow) {
 		if (printk_ratelimit())
 			pr_err(&quot;kmemcheck: failed to allocate shadow bitmap\n&quot;);
<span class="p_header">diff --git a/mm/slab.c b/mm/slab.c</span>
<span class="p_header">index 726bf0a90073..5f91bd387e2e 100644</span>
<span class="p_header">--- a/mm/slab.c</span>
<span class="p_header">+++ b/mm/slab.c</span>
<span class="p_chunk">@@ -1411,7 +1411,7 @@</span> <span class="p_context"> static struct page *kmem_getpages(struct kmem_cache *cachep, gfp_t flags,</span>
 	if (cachep-&gt;flags &amp; SLAB_RECLAIM_ACCOUNT)
 		flags |= __GFP_RECLAIMABLE;
 
<span class="p_del">-	page = __alloc_pages_node(nodeid, flags | __GFP_NOTRACK, cachep-&gt;gfporder);</span>
<span class="p_add">+	page = __alloc_pages_node(nodeid, flags, cachep-&gt;gfporder);</span>
 	if (!page) {
 		slab_out_of_memory(cachep, flags, nodeid);
 		return NULL;
<span class="p_header">diff --git a/mm/slab.h b/mm/slab.h</span>
<span class="p_header">index fbd66e8b376b..8ff05e5b592a 100644</span>
<span class="p_header">--- a/mm/slab.h</span>
<span class="p_header">+++ b/mm/slab.h</span>
<span class="p_chunk">@@ -140,10 +140,10 @@</span> <span class="p_context"> static inline unsigned long kmem_cache_flags(unsigned long object_size,</span>
 #if defined(CONFIG_SLAB)
 #define SLAB_CACHE_FLAGS (SLAB_MEM_SPREAD | SLAB_NOLEAKTRACE | \
 			  SLAB_RECLAIM_ACCOUNT | SLAB_TEMPORARY | \
<span class="p_del">-			  SLAB_NOTRACK | SLAB_ACCOUNT)</span>
<span class="p_add">+			  SLAB_ACCOUNT)</span>
 #elif defined(CONFIG_SLUB)
 #define SLAB_CACHE_FLAGS (SLAB_NOLEAKTRACE | SLAB_RECLAIM_ACCOUNT | \
<span class="p_del">-			  SLAB_TEMPORARY | SLAB_NOTRACK | SLAB_ACCOUNT)</span>
<span class="p_add">+			  SLAB_TEMPORARY | SLAB_ACCOUNT)</span>
 #else
 #define SLAB_CACHE_FLAGS (0)
 #endif
<span class="p_chunk">@@ -162,7 +162,6 @@</span> <span class="p_context"> static inline unsigned long kmem_cache_flags(unsigned long object_size,</span>
 			      SLAB_NOLEAKTRACE | \
 			      SLAB_RECLAIM_ACCOUNT | \
 			      SLAB_TEMPORARY | \
<span class="p_del">-			      SLAB_NOTRACK | \</span>
 			      SLAB_ACCOUNT)
 
 int __kmem_cache_shutdown(struct kmem_cache *);
<span class="p_header">diff --git a/mm/slab_common.c b/mm/slab_common.c</span>
<span class="p_header">index 80164599ca5d..459ea5d262df 100644</span>
<span class="p_header">--- a/mm/slab_common.c</span>
<span class="p_header">+++ b/mm/slab_common.c</span>
<span class="p_chunk">@@ -43,7 +43,7 @@</span> <span class="p_context"> static DECLARE_WORK(slab_caches_to_rcu_destroy_work,</span>
 		SLAB_FAILSLAB | SLAB_KASAN)
 
 #define SLAB_MERGE_SAME (SLAB_RECLAIM_ACCOUNT | SLAB_CACHE_DMA | \
<span class="p_del">-			 SLAB_NOTRACK | SLAB_ACCOUNT)</span>
<span class="p_add">+			 SLAB_ACCOUNT)</span>
 
 /*
  * Merge control. If this is set then no merging of slab caches will occur.
<span class="p_header">diff --git a/mm/slub.c b/mm/slub.c</span>
<span class="p_header">index 3d56ade9c4e1..b2d158e4500f 100644</span>
<span class="p_header">--- a/mm/slub.c</span>
<span class="p_header">+++ b/mm/slub.c</span>
<span class="p_chunk">@@ -1433,8 +1433,6 @@</span> <span class="p_context"> static inline struct page *alloc_slab_page(struct kmem_cache *s,</span>
 	struct page *page;
 	int order = oo_order(oo);
 
<span class="p_del">-	flags |= __GFP_NOTRACK;</span>
<span class="p_del">-</span>
 	if (node == NUMA_NO_NODE)
 		page = alloc_pages(flags, order);
 	else
<span class="p_chunk">@@ -3771,7 +3769,7 @@</span> <span class="p_context"> static void *kmalloc_large_node(size_t size, gfp_t flags, int node)</span>
 	struct page *page;
 	void *ptr = NULL;
 
<span class="p_del">-	flags |= __GFP_COMP | __GFP_NOTRACK;</span>
<span class="p_add">+	flags |= __GFP_COMP;</span>
 	page = alloc_pages_node(node, flags, get_order(size));
 	if (page)
 		ptr = page_address(page);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



