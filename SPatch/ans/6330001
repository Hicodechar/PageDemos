
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/2] acpi, apei: use EFI memmap to map GHES memory - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/2] acpi, apei: use EFI memmap to map GHES memory</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=128921">Jonathan (Zhixiong) Zhang</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>May 4, 2015, 9:02 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1430773335-22897-3-git-send-email-zjzhang@codeaurora.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6330001/mbox/"
   >mbox</a>
|
   <a href="/patch/6330001/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6330001/">/patch/6330001/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 321049F373
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  4 May 2015 21:03:27 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 4171C2027D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  4 May 2015 21:03:26 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 5D09820274
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  4 May 2015 21:03:25 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752733AbbEDVDR (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 4 May 2015 17:03:17 -0400
Received: from smtp.codeaurora.org ([198.145.29.96]:51653 &quot;EHLO
	smtp.codeaurora.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752680AbbEDVDE (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 4 May 2015 17:03:04 -0400
Received: from smtp.codeaurora.org (localhost [127.0.0.1])
	by smtp.codeaurora.org (Postfix) with ESMTP id E7263140904;
	Mon,  4 May 2015 21:03:03 +0000 (UTC)
Received: by smtp.codeaurora.org (Postfix, from userid 486)
	id D2AF7140907; Mon,  4 May 2015 21:03:03 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
Received: from zjzhang-lab.qualcomm.com (i-global254.qualcomm.com
	[199.106.103.254])
	(using TLSv1.1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	(Authenticated sender: zjzhang@smtp.codeaurora.org)
	by smtp.codeaurora.org (Postfix) with ESMTPSA id 1E008140904;
	Mon,  4 May 2015 21:03:03 +0000 (UTC)
From: &quot;Jonathan (Zhixiong) Zhang&quot; &lt;zjzhang@codeaurora.org&gt;
To: rjw@rjwysocki.net, lenb@kernel.org, ying.huang@intel.com
Cc: &quot;Jonathan (Zhixiong) Zhang&quot; &lt;zjzhang@codeaurora.org&gt;,
	linux-acpi@vger.kernel.org, linux-kernel@vger.kernel.org,
	linux-arm-msm@vger.kernel.org, linaro-acpi@lists.linaro.org
Subject: [PATCH 2/2] acpi, apei: use EFI memmap to map GHES memory
Date: Mon,  4 May 2015 14:02:15 -0700
Message-Id: &lt;1430773335-22897-3-git-send-email-zjzhang@codeaurora.org&gt;
X-Mailer: git-send-email 1.8.2.1
In-Reply-To: &lt;1430773335-22897-1-git-send-email-zjzhang@codeaurora.org&gt;
References: &lt;1430773335-22897-1-git-send-email-zjzhang@codeaurora.org&gt;
X-Virus-Scanned: ClamAV using ClamSMTP
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=128921">Jonathan (Zhixiong) Zhang</a> - May 4, 2015, 9:02 p.m.</div>
<pre class="content">
<span class="from">From: &quot;Jonathan (Zhixiong) Zhang&quot; &lt;zjzhang@codeaurora.org&gt;</span>

With ACPI APEI firmware first handling, generic hardware error
record is updated by firmware in GHES memory region. After firmware
updated GHES memory region, Linux reads stale data from cache.

GHES memory region should be mapped with cache attributes defined 
by EFI memory map when applicable. If firmware updates DDR directly, 
EFI memory map would have GHES memory region defined as uncached; 
If firmware updates cache, EFI memory map would have GHES memory 
region defined as cached.

When EFI is configued, map IRQ page using efi_remap() provided by
EFI subsystem.
<span class="signed-off-by">
Signed-off-by: Jonathan (Zhixiong) Zhang &lt;zjzhang@codeaurora.org&gt;</span>
---
 drivers/acpi/apei/ghes.c | 13 +++++++++++++
 1 file changed, 13 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/acpi/apei/ghes.c b/drivers/acpi/apei/ghes.c</span>
<span class="p_header">index e82d0976a5d0..56875ca76aa7 100644</span>
<span class="p_header">--- a/drivers/acpi/apei/ghes.c</span>
<span class="p_header">+++ b/drivers/acpi/apei/ghes.c</span>
<span class="p_chunk">@@ -48,6 +48,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/pci.h&gt;
 #include &lt;linux/aer.h&gt;
 #include &lt;linux/nmi.h&gt;
<span class="p_add">+#include &lt;linux/efi.h&gt;</span>
 
 #include &lt;acpi/ghes.h&gt;
 #include &lt;acpi/apei.h&gt;
<span class="p_chunk">@@ -159,6 +160,7 @@</span> <span class="p_context"> static void __iomem *ghes_ioremap_pfn_nmi(u64 pfn)</span>
 	return (void __iomem *)vaddr;
 }
 
<span class="p_add">+#ifndef CONFIG_EFI</span>
 static void __iomem *ghes_ioremap_pfn_irq(u64 pfn)
 {
 	unsigned long vaddr;
<span class="p_chunk">@@ -169,6 +171,7 @@</span> <span class="p_context"> static void __iomem *ghes_ioremap_pfn_irq(u64 pfn)</span>
 
 	return (void __iomem *)vaddr;
 }
<span class="p_add">+#endif</span>
 
 static void ghes_iounmap_nmi(void __iomem *vaddr_ptr)
 {
<span class="p_chunk">@@ -180,6 +183,7 @@</span> <span class="p_context"> static void ghes_iounmap_nmi(void __iomem *vaddr_ptr)</span>
 	arch_apei_flush_tlb_one(vaddr);
 }
 
<span class="p_add">+#ifndef CONFIG_EFI</span>
 static void ghes_iounmap_irq(void __iomem *vaddr_ptr)
 {
 	unsigned long vaddr = (unsigned long __force)vaddr_ptr;
<span class="p_chunk">@@ -189,6 +193,7 @@</span> <span class="p_context"> static void ghes_iounmap_irq(void __iomem *vaddr_ptr)</span>
 	unmap_kernel_range_noflush(vaddr, PAGE_SIZE);
 	arch_apei_flush_tlb_one(vaddr);
 }
<span class="p_add">+#endif</span>
 
 static int ghes_estatus_pool_init(void)
 {
<span class="p_chunk">@@ -309,7 +314,11 @@</span> <span class="p_context"> static void ghes_copy_tofrom_phys(void *buffer, u64 paddr, u32 len,</span>
 			vaddr = ghes_ioremap_pfn_nmi(paddr &gt;&gt; PAGE_SHIFT);
 		} else {
 			spin_lock_irqsave(&amp;ghes_ioremap_lock_irq, flags);
<span class="p_add">+#ifdef CONFIG_EFI</span>
<span class="p_add">+			vaddr = efi_remap(paddr &amp; PAGE_MASK, PAGE_SIZE);</span>
<span class="p_add">+#else</span>
 			vaddr = ghes_ioremap_pfn_irq(paddr &gt;&gt; PAGE_SHIFT);
<span class="p_add">+#endif</span>
 		}
 		trunk = PAGE_SIZE - offset;
 		trunk = min(trunk, len);
<span class="p_chunk">@@ -324,7 +333,11 @@</span> <span class="p_context"> static void ghes_copy_tofrom_phys(void *buffer, u64 paddr, u32 len,</span>
 			ghes_iounmap_nmi(vaddr);
 			raw_spin_unlock(&amp;ghes_ioremap_lock_nmi);
 		} else {
<span class="p_add">+#ifdef CONFIG_EFI</span>
<span class="p_add">+			iounmap(vaddr);</span>
<span class="p_add">+#else</span>
 			ghes_iounmap_irq(vaddr);
<span class="p_add">+#endif</span>
 			spin_unlock_irqrestore(&amp;ghes_ioremap_lock_irq, flags);
 		}
 	}

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



