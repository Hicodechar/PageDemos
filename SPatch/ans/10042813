
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v9,28/51] mm: display pkey in smaps if arch_pkeys_enabled() is true - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v9,28/51] mm: display pkey in smaps if arch_pkeys_enabled() is true</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=2448">Ram Pai</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 6, 2017, 8:57 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1509958663-18737-29-git-send-email-linuxram@us.ibm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10042813/mbox/"
   >mbox</a>
|
   <a href="/patch/10042813/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10042813/">/patch/10042813/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	C40786032D for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  6 Nov 2017 08:59:44 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B5EEA28D17
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  6 Nov 2017 08:59:44 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id AAC4728D1C; Mon,  6 Nov 2017 08:59:44 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.3 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI, RCVD_IN_SORBS_SPAM,
	T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4EED028D17
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  6 Nov 2017 08:59:44 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752477AbdKFI7m (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 6 Nov 2017 03:59:42 -0500
Received: from mail-qt0-f194.google.com ([209.85.216.194]:45757 &quot;EHLO
	mail-qt0-f194.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752445AbdKFI7i (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 6 Nov 2017 03:59:38 -0500
Received: by mail-qt0-f194.google.com with SMTP id p1so10029461qtg.2;
	Mon, 06 Nov 2017 00:59:38 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=sender:from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=Jm/q+uEN/04eT1ckavpTGYcffBeNQFsi4QQU9Kcnmik=;
	b=Proags8zBsat+s+zJge+iMtDjji8PYzdX1hGCyAPHfspbpRQaN2Dw0uak7FzDdjT6q
	lnGx920avolqS0L2sSYJoXvb7ZjN3wL51KTjTmL1SIO68EICV1WgJdRLkkdIZbO2BGvz
	5eCV+UjKMF0ViZYgWwH0MHrpEEIS51p4V5rxsuSqsYDK+58WuvLOZGyZIaGftevXHsQo
	Cjethm+/iTlqeToMeDxzAYeSkE+YAtd3zV6p/mC+FKxV0XuWzLrdIx3znEHKSVcZr24Z
	tSoxcR4TYFfcCb6GUXPeK09s9r4Uz5xel+7vK5MTz6Hte2q2ONg6JyEgLmWM8XmoTSdx
	NUtA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:sender:from:to:cc:subject:date:message-id
	:in-reply-to:references;
	bh=Jm/q+uEN/04eT1ckavpTGYcffBeNQFsi4QQU9Kcnmik=;
	b=E7XSfSSlETJs0TvdUsBkMO58CGI7P+xVOVedlCbolrh+CFKf5xT78gsASdIdYEIV/p
	r7k3Ifgw0RbmvxHhKw2IadVxUjaKFOyE7/HxGkZra66PB39GGvttYdBGVB/BsFoNnTix
	BAkDrdoF6y7aHZ3R4VdfWO1xR9UqZB9/2xy0JPReCrG4pXO+LUL0iqgvwX+mkpzvu8S8
	y39F2Kpv0A8wy6mhAx/lS8aA+kcCD94g+V7rU1Kqw5HkWB8DORznEmGAyctzOnrLk0+k
	YiCPqmIGzKCqa/0jwDzmx1YP7sAP5M5yEMHy8nd/pj2EbLoFcYHo8M7ZOaWYfE9EOnIA
	hISA==
X-Gm-Message-State: AMCzsaUrMWiy2LqBAbGieJr5nQMJh/v05tZBOMkmO9NFGVIKD7Z9Yrad
	mbwF8mwpaKTxVOFAJpyuNVs=
X-Google-Smtp-Source: ABhQp+R4w9IgR44NcT1ROU9tbihC9C+D9D7Aj83LiUc74Qdm/rX5iJQ+bGfPMe9J7y5vSjL8KrknQw==
X-Received: by 10.237.60.154 with SMTP id d26mr20167117qtf.227.1509958777802;
	Mon, 06 Nov 2017 00:59:37 -0800 (PST)
Received: from localhost.localdomain (50-39-103-96.bvtn.or.frontiernet.net.
	[50.39.103.96]) by smtp.gmail.com with ESMTPSA id
	r26sm8001094qki.42.2017.11.06.00.59.35
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Mon, 06 Nov 2017 00:59:37 -0800 (PST)
From: Ram Pai &lt;linuxram@us.ibm.com&gt;
To: mpe@ellerman.id.au, mingo@redhat.com, akpm@linux-foundation.org,
	corbet@lwn.net, arnd@arndb.de
Cc: linuxppc-dev@lists.ozlabs.org, linux-mm@kvack.org, x86@kernel.org,
	linux-arch@vger.kernel.org, linux-doc@vger.kernel.org,
	linux-kselftest@vger.kernel.org, linux-kernel@vger.kernel.org,
	dave.hansen@intel.com, benh@kernel.crashing.org, paulus@samba.org,
	khandual@linux.vnet.ibm.com, aneesh.kumar@linux.vnet.ibm.com,
	bsingharora@gmail.com, hbabu@us.ibm.com, mhocko@kernel.org,
	bauerman@linux.vnet.ibm.com, ebiederm@xmission.com, linuxram@us.ibm.com
Subject: [PATCH v9 28/51] mm: display pkey in smaps if arch_pkeys_enabled()
	is true
Date: Mon,  6 Nov 2017 00:57:20 -0800
Message-Id: &lt;1509958663-18737-29-git-send-email-linuxram@us.ibm.com&gt;
X-Mailer: git-send-email 1.7.1
In-Reply-To: &lt;1509958663-18737-1-git-send-email-linuxram@us.ibm.com&gt;
References: &lt;1509958663-18737-1-git-send-email-linuxram@us.ibm.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2448">Ram Pai</a> - Nov. 6, 2017, 8:57 a.m.</div>
<pre class="content">
Currently the  architecture  specific code is expected to
display  the  protection  keys  in  smap  for a given vma.
This can lead to redundant code and possibly to divergent
formats in which the key gets displayed.

This  patch  changes  the implementation. It displays the
pkey only if the architecture support pkeys.

x86 arch_show_smap() function is not needed anymore.
Delete it.
<span class="signed-off-by">
Signed-off-by: Ram Pai &lt;linuxram@us.ibm.com&gt;</span>
---
 arch/x86/kernel/setup.c |    8 --------
 fs/proc/task_mmu.c      |   11 ++++++-----
 2 files changed, 6 insertions(+), 13 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/kernel/setup.c b/arch/x86/kernel/setup.c</span>
<span class="p_header">index 0957dd7..b8b8d0e 100644</span>
<span class="p_header">--- a/arch/x86/kernel/setup.c</span>
<span class="p_header">+++ b/arch/x86/kernel/setup.c</span>
<span class="p_chunk">@@ -1357,11 +1357,3 @@</span> <span class="p_context"> static int __init register_kernel_offset_dumper(void)</span>
 	return 0;
 }
 __initcall(register_kernel_offset_dumper);
<span class="p_del">-</span>
<span class="p_del">-void arch_show_smap(struct seq_file *m, struct vm_area_struct *vma)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (!boot_cpu_has(X86_FEATURE_OSPKE))</span>
<span class="p_del">-		return;</span>
<span class="p_del">-</span>
<span class="p_del">-	seq_printf(m, &quot;ProtectionKey:  %8u\n&quot;, vma_pkey(vma));</span>
<span class="p_del">-}</span>
<span class="p_header">diff --git a/fs/proc/task_mmu.c b/fs/proc/task_mmu.c</span>
<span class="p_header">index fad19a0..5ce3ec0 100644</span>
<span class="p_header">--- a/fs/proc/task_mmu.c</span>
<span class="p_header">+++ b/fs/proc/task_mmu.c</span>
<span class="p_chunk">@@ -18,6 +18,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/page_idle.h&gt;
 #include &lt;linux/shmem_fs.h&gt;
 #include &lt;linux/uaccess.h&gt;
<span class="p_add">+#include &lt;linux/pkeys.h&gt;</span>
 
 #include &lt;asm/elf.h&gt;
 #include &lt;asm/tlb.h&gt;
<span class="p_chunk">@@ -731,10 +732,6 @@</span> <span class="p_context"> static int smaps_hugetlb_range(pte_t *pte, unsigned long hmask,</span>
 }
 #endif /* HUGETLB_PAGE */
 
<span class="p_del">-void __weak arch_show_smap(struct seq_file *m, struct vm_area_struct *vma)</span>
<span class="p_del">-{</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static int show_smap(struct seq_file *m, void *v, int is_pid)
 {
 	struct proc_maps_private *priv = m-&gt;private;
<span class="p_chunk">@@ -854,9 +851,13 @@</span> <span class="p_context"> static int show_smap(struct seq_file *m, void *v, int is_pid)</span>
 			   (unsigned long)(mss-&gt;pss &gt;&gt; (10 + PSS_SHIFT)));
 
 	if (!rollup_mode) {
<span class="p_del">-		arch_show_smap(m, vma);</span>
<span class="p_add">+#ifdef CONFIG_ARCH_HAS_PKEYS</span>
<span class="p_add">+		if (arch_pkeys_enabled())</span>
<span class="p_add">+			seq_printf(m, &quot;ProtectionKey:  %8u\n&quot;, vma_pkey(vma));</span>
<span class="p_add">+#endif</span>
 		show_smap_vma_flags(m, vma);
 	}
<span class="p_add">+</span>
 	m_cache_vma(m, vma);
 	return ret;
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



