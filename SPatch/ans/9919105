
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[3/3] ARM: CMA: avoid double mapping to the CMA area if CONFIG_HIGHMEM = y - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [3/3] ARM: CMA: avoid double mapping to the CMA area if CONFIG_HIGHMEM = y</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=39721">Joonsoo Kim</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 24, 2017, 6:36 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1503556593-10720-4-git-send-email-iamjoonsoo.kim@lge.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9919105/mbox/"
   >mbox</a>
|
   <a href="/patch/9919105/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9919105/">/patch/9919105/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	D912560353 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 24 Aug 2017 06:37:06 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id CB34928B6F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 24 Aug 2017 06:37:06 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id BF9BC28B82; Thu, 24 Aug 2017 06:37:06 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.5 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, FREEMAIL_FROM, RCVD_IN_DNSWL_HI,
	RCVD_IN_SORBS_SPAM autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C0DBD28B6F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 24 Aug 2017 06:37:05 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751353AbdHXGhE (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 24 Aug 2017 02:37:04 -0400
Received: from mail-pg0-f68.google.com ([74.125.83.68]:33401 &quot;EHLO
	mail-pg0-f68.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751316AbdHXGg7 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 24 Aug 2017 02:36:59 -0400
Received: by mail-pg0-f68.google.com with SMTP id 189so2588708pgj.0
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Wed, 23 Aug 2017 23:36:59 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=r8NtJ0XwJbLIV0C2/qc8NRGNnzj5VfRMnQmrHV7ePzo=;
	b=JS9Tg39eeNjUHHySDjtvggk9V+FP2iboZz2EQIneSzZoWE9dQSmv7xmFjN6dIe+Of+
	gW3PpMafytgZ7kQxVN3GHzhb3LQc+XB7DFk5iOm0SfcVh3r0FyVb6JePx74BFUWh5d9b
	8gt0QJsuH2oeGxkWpAbD1DiRsGU/vypMuzcQEc4RF4YP3zM3IX+jErdcNZj4B0vMJvky
	nKjG6lQBhbofR0mze642oUMyo9EDPTl3hXQF8fNCpkldhs0F1UZRma1z8xeFeu2NVp71
	MqvHdkg4weNbuSqPDIWAR9kij48jJns2cOG9awkGJtqRM0Zo14RTpjK1zySJvM6UQp2z
	7yfg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=r8NtJ0XwJbLIV0C2/qc8NRGNnzj5VfRMnQmrHV7ePzo=;
	b=Ls/88i7tVuTu+LDgeHv5aSBdJykaITSe+ib2loAStlykufMY3u7d+jL2nSTRKU2HtW
	2KN6T3FB9/I5pbCIEeWs03TMwSCKUix0x0Kph1xHHWXxzlTJajXTnn0C0CFTENZmD8Hw
	7HxFu+L1oRw6lXgspzONc1pilcaIlypv3oH/8iqy+m/cd079yIzVmtr46PSB1G19Maok
	qHb0WMkRdCMOS8N9sduq/KympJhNgJvL5jg7miRsx7LPE0fVZpkPV3THbtf6std1BjtK
	ECtFY2R4asprmn42Bnd3+jtp85UEjSbHmmv3xQ1uPciVxbiI58oVnMUSyrQ8EqnwJFNd
	zCgA==
X-Gm-Message-State: AHYfb5i59qKyC1PJJc653ka8If40ExM4aQk0qtvI74Kv+NEQ064dhUyY
	iMkZ3dGetlHbEw==
X-Received: by 10.84.196.100 with SMTP id k91mr5820456pld.262.1503556618903; 
	Wed, 23 Aug 2017 23:36:58 -0700 (PDT)
Received: from localhost.localdomain ([124.56.155.17])
	by smtp.gmail.com with ESMTPSA id
	e88sm6220735pfd.183.2017.08.23.23.36.54
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Wed, 23 Aug 2017 23:36:57 -0700 (PDT)
From: js1304@gmail.com
X-Google-Original-From: iamjoonsoo.kim@lge.com
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Rik van Riel &lt;riel@redhat.com&gt;, Johannes Weiner &lt;hannes@cmpxchg.org&gt;,
	mgorman@techsingularity.net, Laura Abbott &lt;lauraa@codeaurora.org&gt;,
	Minchan Kim &lt;minchan@kernel.org&gt;,
	Marek Szyprowski &lt;m.szyprowski@samsung.com&gt;,
	Michal Nazarewicz &lt;mina86@mina86.com&gt;,
	&quot;Aneesh Kumar K . V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;,
	Vlastimil Babka &lt;vbabka@suse.cz&gt;, Russell King &lt;linux@armlinux.org.uk&gt;,
	Will Deacon &lt;will.deacon@arm.com&gt;, linux-mm@kvack.org,
	linux-kernel@vger.kernel.org, kernel-team@lge.com,
	Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;
Subject: [PATCH 3/3] ARM: CMA: avoid double mapping to the CMA area if
	CONFIG_HIGHMEM = y
Date: Thu, 24 Aug 2017 15:36:33 +0900
Message-Id: &lt;1503556593-10720-4-git-send-email-iamjoonsoo.kim@lge.com&gt;
X-Mailer: git-send-email 2.7.4
In-Reply-To: &lt;1503556593-10720-1-git-send-email-iamjoonsoo.kim@lge.com&gt;
References: &lt;1503556593-10720-1-git-send-email-iamjoonsoo.kim@lge.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=39721">Joonsoo Kim</a> - Aug. 24, 2017, 6:36 a.m.</div>
<pre class="content">
<span class="from">From: Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;</span>

CMA area is now managed by the separate zone, ZONE_MOVABLE,
to fix many MM related problems. In this implementation, if
CONFIG_HIGHMEM = y, then ZONE_MOVABLE is considered as HIGHMEM and
the memory of the CMA area is also considered as HIGHMEM.
That means that they are considered as the page without direct mapping.
However, CMA area could be in a lowmem and the memory could have
direct mapping.

In ARM, when establishing a new mapping for DMA, direct mapping should
be cleared since two mapping with different cache policy could cause
unknown problem. With this patch, PageHighmem() for the CMA memory
located in lowmem returns true so that the function for DMA mapping
cannot notice whether it needs to clear direct mapping or not, correctly.
To handle this situation, this patch always clears direct mapping
for such CMA memory.
<span class="signed-off-by">
Signed-off-by: Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;</span>
---
 arch/arm/mm/dma-mapping.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm/mm/dma-mapping.c b/arch/arm/mm/dma-mapping.c</span>
<span class="p_header">index fcf1473..38f0fde 100644</span>
<span class="p_header">--- a/arch/arm/mm/dma-mapping.c</span>
<span class="p_header">+++ b/arch/arm/mm/dma-mapping.c</span>
<span class="p_chunk">@@ -513,7 +513,13 @@</span> <span class="p_context"> void __init dma_contiguous_remap(void)</span>
 		flush_tlb_kernel_range(__phys_to_virt(start),
 				       __phys_to_virt(end));
 
<span class="p_del">-		iotable_init(&amp;map, 1);</span>
<span class="p_add">+		/*</span>
<span class="p_add">+		 * For highmem system, all the memory in CMA region will be</span>
<span class="p_add">+		 * considered as highmem even if it&#39;s physical address belong</span>
<span class="p_add">+		 * to lowmem. Therefore, re-mapping isn&#39;t required.</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		if (!IS_ENABLED(CONFIG_HIGHMEM))</span>
<span class="p_add">+			iotable_init(&amp;map, 1);</span>
 	}
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



