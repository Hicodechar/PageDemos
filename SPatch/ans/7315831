
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v4,3/4] mm, shmem: Add shmem resident memory accounting - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v4,3/4] mm, shmem: Add shmem resident memory accounting</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=72672">Vlastimil Babka</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 2, 2015, 1:35 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1443792951-13944-4-git-send-email-vbabka@suse.cz&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7315831/mbox/"
   >mbox</a>
|
   <a href="/patch/7315831/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7315831/">/patch/7315831/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 60C939F1B9
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  2 Oct 2015 13:36:41 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 381DB208A9
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  2 Oct 2015 13:36:40 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id E80B9208CE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  2 Oct 2015 13:36:38 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753780AbbJBNgT (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 2 Oct 2015 09:36:19 -0400
Received: from mx2.suse.de ([195.135.220.15]:40606 &quot;EHLO mx2.suse.de&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753085AbbJBNgG (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 2 Oct 2015 09:36:06 -0400
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (charybdis-ext.suse.de [195.135.220.254])
	by mx2.suse.de (Postfix) with ESMTP id 884BCACB8;
	Fri,  2 Oct 2015 13:36:03 +0000 (UTC)
From: Vlastimil Babka &lt;vbabka@suse.cz&gt;
To: linux-mm@kvack.org, Jerome Marchand &lt;jmarchan@redhat.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Hugh Dickins &lt;hughd@google.com&gt;
Cc: linux-kernel@vger.kernel.org, linux-doc@vger.kernel.org,
	Michal Hocko &lt;mhocko@suse.cz&gt;,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Cyrill Gorcunov &lt;gorcunov@openvz.org&gt;,
	Randy Dunlap &lt;rdunlap@infradead.org&gt;, linux-s390@vger.kernel.org,
	Martin Schwidefsky &lt;schwidefsky@de.ibm.com&gt;,
	Heiko Carstens &lt;heiko.carstens@de.ibm.com&gt;,
	Peter Zijlstra &lt;peterz@infradead.org&gt;, Paul Mackerras &lt;paulus@samba.org&gt;,
	Arnaldo Carvalho de Melo &lt;acme@kernel.org&gt;,
	Oleg Nesterov &lt;oleg@redhat.com&gt;, Linux API &lt;linux-api@vger.kernel.org&gt;,
	Konstantin Khlebnikov &lt;khlebnikov@yandex-team.ru&gt;,
	Vlastimil Babka &lt;vbabka@suse.cz&gt;
Subject: [PATCH v4 3/4] mm, shmem: Add shmem resident memory accounting
Date: Fri,  2 Oct 2015 15:35:50 +0200
Message-Id: &lt;1443792951-13944-4-git-send-email-vbabka@suse.cz&gt;
X-Mailer: git-send-email 2.5.2
In-Reply-To: &lt;1443792951-13944-1-git-send-email-vbabka@suse.cz&gt;
References: &lt;1443792951-13944-1-git-send-email-vbabka@suse.cz&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72672">Vlastimil Babka</a> - Oct. 2, 2015, 1:35 p.m.</div>
<pre class="content">
<span class="from">From: Jerome Marchand &lt;jmarchan@redhat.com&gt;</span>

Currently looking at /proc/&lt;pid&gt;/status or statm, there is no way to
distinguish shmem pages from pages mapped to a regular file (shmem
pages are mapped to /dev/zero), even though their implication in
actual memory use is quite different.
This patch adds MM_SHMEMPAGES counter to mm_rss_stat to account for
shmem pages instead of MM_FILEPAGES.
<span class="signed-off-by">
Signed-off-by: Jerome Marchand &lt;jmarchan@redhat.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Vlastimil Babka &lt;vbabka@suse.cz&gt;</span>
<span class="acked-by">Acked-by: Konstantin Khlebnikov &lt;khlebnikov@yandex-team.ru&gt;</span>
<span class="acked-by">Acked-by: Michal Hocko &lt;mhocko@suse.com&gt;</span>
---
 arch/s390/mm/pgtable.c   |  5 +----
 fs/proc/task_mmu.c       |  3 ++-
 include/linux/mm.h       | 18 +++++++++++++++++-
 include/linux/mm_types.h |  7 ++++---
 kernel/events/uprobes.c  |  2 +-
 mm/memory.c              | 30 ++++++++++--------------------
 mm/oom_kill.c            |  5 +++--
 mm/rmap.c                | 12 +++---------
 8 files changed, 41 insertions(+), 41 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41">Andrew Morton</a> - Oct. 2, 2015, 10:37 p.m.</div>
<pre class="content">
On Fri,  2 Oct 2015 15:35:50 +0200 Vlastimil Babka &lt;vbabka@suse.cz&gt; wrote:
<span class="quote">
&gt; From: Jerome Marchand &lt;jmarchan@redhat.com&gt;</span>

Changelog is a bit weird.
<span class="quote">
&gt; Currently looking at /proc/&lt;pid&gt;/status or statm, there is no way to</span>
<span class="quote">&gt; distinguish shmem pages from pages mapped to a regular file (shmem</span>
<span class="quote">&gt; pages are mapped to /dev/zero), even though their implication in</span>
<span class="quote">&gt; actual memory use is quite different.</span>

OK, that&#39;s a bunch of stuff about the user interface.
<span class="quote">
&gt; This patch adds MM_SHMEMPAGES counter to mm_rss_stat to account for</span>
<span class="quote">&gt; shmem pages instead of MM_FILEPAGES.</span>

And that has nothing to do with the user interface.

So now this little reader is all confused.  The patch doesn&#39;t actually
address the described problem at all, does it?  It&#39;s preparatory stuff
only?  No changes to the kernel&#39;s user interface?


--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7851">Hugh Dickins</a> - Oct. 5, 2015, 4:28 a.m.</div>
<pre class="content">
On Fri, 2 Oct 2015, Vlastimil Babka wrote:
<span class="quote">
&gt; From: Jerome Marchand &lt;jmarchan@redhat.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Currently looking at /proc/&lt;pid&gt;/status or statm, there is no way to</span>
<span class="quote">&gt; distinguish shmem pages from pages mapped to a regular file (shmem</span>
<span class="quote">&gt; pages are mapped to /dev/zero), even though their implication in</span>
<span class="quote">&gt; actual memory use is quite different.</span>
<span class="quote">&gt; This patch adds MM_SHMEMPAGES counter to mm_rss_stat to account for</span>
<span class="quote">&gt; shmem pages instead of MM_FILEPAGES.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Jerome Marchand &lt;jmarchan@redhat.com&gt;</span>
<span class="quote">&gt; Signed-off-by: Vlastimil Babka &lt;vbabka@suse.cz&gt;</span>
<span class="quote">&gt; Acked-by: Konstantin Khlebnikov &lt;khlebnikov@yandex-team.ru&gt;</span>
<span class="quote">&gt; Acked-by: Michal Hocko &lt;mhocko@suse.com&gt;</span>
<span class="acked-by">
Acked-by: Hugh Dickins &lt;hughd@google.com&gt;</span>

Good, this one long overdue, I&#39;ve grown tired for writing those if/elses.
I&#39;d have probably have done without mm_counter_file(), but it&#39;s okay.
<span class="quote">
&gt; ---</span>
<span class="quote">&gt;  arch/s390/mm/pgtable.c   |  5 +----</span>
<span class="quote">&gt;  fs/proc/task_mmu.c       |  3 ++-</span>
<span class="quote">&gt;  include/linux/mm.h       | 18 +++++++++++++++++-</span>
<span class="quote">&gt;  include/linux/mm_types.h |  7 ++++---</span>
<span class="quote">&gt;  kernel/events/uprobes.c  |  2 +-</span>
<span class="quote">&gt;  mm/memory.c              | 30 ++++++++++--------------------</span>
<span class="quote">&gt;  mm/oom_kill.c            |  5 +++--</span>
<span class="quote">&gt;  mm/rmap.c                | 12 +++---------</span>
<span class="quote">&gt;  8 files changed, 41 insertions(+), 41 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/arch/s390/mm/pgtable.c b/arch/s390/mm/pgtable.c</span>
<span class="quote">&gt; index 54ef3bc..9816f25 100644</span>
<span class="quote">&gt; --- a/arch/s390/mm/pgtable.c</span>
<span class="quote">&gt; +++ b/arch/s390/mm/pgtable.c</span>
<span class="quote">&gt; @@ -603,10 +603,7 @@ static void gmap_zap_swap_entry(swp_entry_t entry, struct mm_struct *mm)</span>
<span class="quote">&gt;  	else if (is_migration_entry(entry)) {</span>
<span class="quote">&gt;  		struct page *page = migration_entry_to_page(entry);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -		if (PageAnon(page))</span>
<span class="quote">&gt; -			dec_mm_counter(mm, MM_ANONPAGES);</span>
<span class="quote">&gt; -		else</span>
<span class="quote">&gt; -			dec_mm_counter(mm, MM_FILEPAGES);</span>
<span class="quote">&gt; +		dec_mm_counter(mm, mm_counter(page));</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt;  	free_swap_and_cache(entry);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; diff --git a/fs/proc/task_mmu.c b/fs/proc/task_mmu.c</span>
<span class="quote">&gt; index 103457c..9b9708e 100644</span>
<span class="quote">&gt; --- a/fs/proc/task_mmu.c</span>
<span class="quote">&gt; +++ b/fs/proc/task_mmu.c</span>
<span class="quote">&gt; @@ -83,7 +83,8 @@ unsigned long task_statm(struct mm_struct *mm,</span>
<span class="quote">&gt;  			 unsigned long *shared, unsigned long *text,</span>
<span class="quote">&gt;  			 unsigned long *data, unsigned long *resident)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -	*shared = get_mm_counter(mm, MM_FILEPAGES);</span>
<span class="quote">&gt; +	*shared = get_mm_counter(mm, MM_FILEPAGES) +</span>
<span class="quote">&gt; +			get_mm_counter(mm, MM_SHMEMPAGES);</span>
<span class="quote">&gt;  	*text = (PAGE_ALIGN(mm-&gt;end_code) - (mm-&gt;start_code &amp; PAGE_MASK))</span>
<span class="quote">&gt;  								&gt;&gt; PAGE_SHIFT;</span>
<span class="quote">&gt;  	*data = mm-&gt;total_vm - mm-&gt;shared_vm;</span>
<span class="quote">&gt; diff --git a/include/linux/mm.h b/include/linux/mm.h</span>
<span class="quote">&gt; index d30eea3..8be4efc 100644</span>
<span class="quote">&gt; --- a/include/linux/mm.h</span>
<span class="quote">&gt; +++ b/include/linux/mm.h</span>
<span class="quote">&gt; @@ -1361,10 +1361,26 @@ static inline void dec_mm_counter(struct mm_struct *mm, int member)</span>
<span class="quote">&gt;  	atomic_long_dec(&amp;mm-&gt;rss_stat.count[member]);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +/* Optimized variant when page is already known not to be PageAnon */</span>
<span class="quote">&gt; +static inline int mm_counter_file(struct page *page)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	if (PageSwapBacked(page))</span>
<span class="quote">&gt; +		return MM_SHMEMPAGES;</span>
<span class="quote">&gt; +	return MM_FILEPAGES;</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +static inline int mm_counter(struct page *page)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	if (PageAnon(page))</span>
<span class="quote">&gt; +		return MM_ANONPAGES;</span>
<span class="quote">&gt; +	return mm_counter_file(page);</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  static inline unsigned long get_mm_rss(struct mm_struct *mm)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	return get_mm_counter(mm, MM_FILEPAGES) +</span>
<span class="quote">&gt; -		get_mm_counter(mm, MM_ANONPAGES);</span>
<span class="quote">&gt; +		get_mm_counter(mm, MM_ANONPAGES) +</span>
<span class="quote">&gt; +		get_mm_counter(mm, MM_SHMEMPAGES);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  static inline unsigned long get_mm_hiwater_rss(struct mm_struct *mm)</span>
<span class="quote">&gt; diff --git a/include/linux/mm_types.h b/include/linux/mm_types.h</span>
<span class="quote">&gt; index f8d1492..207890b 100644</span>
<span class="quote">&gt; --- a/include/linux/mm_types.h</span>
<span class="quote">&gt; +++ b/include/linux/mm_types.h</span>
<span class="quote">&gt; @@ -369,9 +369,10 @@ struct core_state {</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  enum {</span>
<span class="quote">&gt; -	MM_FILEPAGES,</span>
<span class="quote">&gt; -	MM_ANONPAGES,</span>
<span class="quote">&gt; -	MM_SWAPENTS,</span>
<span class="quote">&gt; +	MM_FILEPAGES,	/* Resident file mapping pages */</span>
<span class="quote">&gt; +	MM_ANONPAGES,	/* Resident anonymous pages */</span>
<span class="quote">&gt; +	MM_SWAPENTS,	/* Anonymous swap entries */</span>
<span class="quote">&gt; +	MM_SHMEMPAGES,	/* Resident shared memory pages */</span>
<span class="quote">&gt;  	NR_MM_COUNTERS</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; diff --git a/kernel/events/uprobes.c b/kernel/events/uprobes.c</span>
<span class="quote">&gt; index 4e5e979..6288606 100644</span>
<span class="quote">&gt; --- a/kernel/events/uprobes.c</span>
<span class="quote">&gt; +++ b/kernel/events/uprobes.c</span>
<span class="quote">&gt; @@ -180,7 +180,7 @@ static int __replace_page(struct vm_area_struct *vma, unsigned long addr,</span>
<span class="quote">&gt;  	lru_cache_add_active_or_unevictable(kpage, vma);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	if (!PageAnon(page)) {</span>
<span class="quote">&gt; -		dec_mm_counter(mm, MM_FILEPAGES);</span>
<span class="quote">&gt; +		dec_mm_counter(mm, mm_counter_file(page));</span>
<span class="quote">&gt;  		inc_mm_counter(mm, MM_ANONPAGES);</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; diff --git a/mm/memory.c b/mm/memory.c</span>
<span class="quote">&gt; index 3bd465a..f10d458 100644</span>
<span class="quote">&gt; --- a/mm/memory.c</span>
<span class="quote">&gt; +++ b/mm/memory.c</span>
<span class="quote">&gt; @@ -832,10 +832,7 @@ copy_one_pte(struct mm_struct *dst_mm, struct mm_struct *src_mm,</span>
<span class="quote">&gt;  		} else if (is_migration_entry(entry)) {</span>
<span class="quote">&gt;  			page = migration_entry_to_page(entry);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -			if (PageAnon(page))</span>
<span class="quote">&gt; -				rss[MM_ANONPAGES]++;</span>
<span class="quote">&gt; -			else</span>
<span class="quote">&gt; -				rss[MM_FILEPAGES]++;</span>
<span class="quote">&gt; +			rss[mm_counter(page)]++;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  			if (is_write_migration_entry(entry) &amp;&amp;</span>
<span class="quote">&gt;  					is_cow_mapping(vm_flags)) {</span>
<span class="quote">&gt; @@ -874,10 +871,7 @@ copy_one_pte(struct mm_struct *dst_mm, struct mm_struct *src_mm,</span>
<span class="quote">&gt;  	if (page) {</span>
<span class="quote">&gt;  		get_page(page);</span>
<span class="quote">&gt;  		page_dup_rmap(page);</span>
<span class="quote">&gt; -		if (PageAnon(page))</span>
<span class="quote">&gt; -			rss[MM_ANONPAGES]++;</span>
<span class="quote">&gt; -		else</span>
<span class="quote">&gt; -			rss[MM_FILEPAGES]++;</span>
<span class="quote">&gt; +		rss[mm_counter(page)]++;</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  out_set_pte:</span>
<span class="quote">&gt; @@ -1113,9 +1107,8 @@ static unsigned long zap_pte_range(struct mmu_gather *tlb,</span>
<span class="quote">&gt;  			tlb_remove_tlb_entry(tlb, pte, addr);</span>
<span class="quote">&gt;  			if (unlikely(!page))</span>
<span class="quote">&gt;  				continue;</span>
<span class="quote">&gt; -			if (PageAnon(page))</span>
<span class="quote">&gt; -				rss[MM_ANONPAGES]--;</span>
<span class="quote">&gt; -			else {</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +			if (!PageAnon(page)) {</span>
<span class="quote">&gt;  				if (pte_dirty(ptent)) {</span>
<span class="quote">&gt;  					force_flush = 1;</span>
<span class="quote">&gt;  					set_page_dirty(page);</span>
<span class="quote">&gt; @@ -1123,8 +1116,8 @@ static unsigned long zap_pte_range(struct mmu_gather *tlb,</span>
<span class="quote">&gt;  				if (pte_young(ptent) &amp;&amp;</span>
<span class="quote">&gt;  				    likely(!(vma-&gt;vm_flags &amp; VM_SEQ_READ)))</span>
<span class="quote">&gt;  					mark_page_accessed(page);</span>
<span class="quote">&gt; -				rss[MM_FILEPAGES]--;</span>
<span class="quote">&gt;  			}</span>
<span class="quote">&gt; +			rss[mm_counter(page)]--;</span>
<span class="quote">&gt;  			page_remove_rmap(page);</span>
<span class="quote">&gt;  			if (unlikely(page_mapcount(page) &lt; 0))</span>
<span class="quote">&gt;  				print_bad_pte(vma, addr, ptent, page);</span>
<span class="quote">&gt; @@ -1146,11 +1139,7 @@ static unsigned long zap_pte_range(struct mmu_gather *tlb,</span>
<span class="quote">&gt;  			struct page *page;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  			page = migration_entry_to_page(entry);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -			if (PageAnon(page))</span>
<span class="quote">&gt; -				rss[MM_ANONPAGES]--;</span>
<span class="quote">&gt; -			else</span>
<span class="quote">&gt; -				rss[MM_FILEPAGES]--;</span>
<span class="quote">&gt; +			rss[mm_counter(page)]--;</span>
<span class="quote">&gt;  		}</span>
<span class="quote">&gt;  		if (unlikely(!free_swap_and_cache(entry)))</span>
<span class="quote">&gt;  			print_bad_pte(vma, addr, ptent, NULL);</span>
<span class="quote">&gt; @@ -1460,7 +1449,7 @@ static int insert_page(struct vm_area_struct *vma, unsigned long addr,</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	/* Ok, finally just insert the thing.. */</span>
<span class="quote">&gt;  	get_page(page);</span>
<span class="quote">&gt; -	inc_mm_counter_fast(mm, MM_FILEPAGES);</span>
<span class="quote">&gt; +	inc_mm_counter_fast(mm, mm_counter_file(page));</span>
<span class="quote">&gt;  	page_add_file_rmap(page);</span>
<span class="quote">&gt;  	set_pte_at(mm, addr, pte, mk_pte(page, prot));</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; @@ -2097,7 +2086,8 @@ static int wp_page_copy(struct mm_struct *mm, struct vm_area_struct *vma,</span>
<span class="quote">&gt;  	if (likely(pte_same(*page_table, orig_pte))) {</span>
<span class="quote">&gt;  		if (old_page) {</span>
<span class="quote">&gt;  			if (!PageAnon(old_page)) {</span>
<span class="quote">&gt; -				dec_mm_counter_fast(mm, MM_FILEPAGES);</span>
<span class="quote">&gt; +				dec_mm_counter_fast(mm,</span>
<span class="quote">&gt; +						mm_counter_file(old_page));</span>
<span class="quote">&gt;  				inc_mm_counter_fast(mm, MM_ANONPAGES);</span>
<span class="quote">&gt;  			}</span>
<span class="quote">&gt;  		} else {</span>
<span class="quote">&gt; @@ -2818,7 +2808,7 @@ void do_set_pte(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt;  		inc_mm_counter_fast(vma-&gt;vm_mm, MM_ANONPAGES);</span>
<span class="quote">&gt;  		page_add_new_anon_rmap(page, vma, address);</span>
<span class="quote">&gt;  	} else {</span>
<span class="quote">&gt; -		inc_mm_counter_fast(vma-&gt;vm_mm, MM_FILEPAGES);</span>
<span class="quote">&gt; +		inc_mm_counter_fast(vma-&gt;vm_mm, mm_counter_file(page));</span>
<span class="quote">&gt;  		page_add_file_rmap(page);</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt;  	set_pte_at(vma-&gt;vm_mm, address, pte, entry);</span>
<span class="quote">&gt; diff --git a/mm/oom_kill.c b/mm/oom_kill.c</span>
<span class="quote">&gt; index 4766e25..127e2d6 100644</span>
<span class="quote">&gt; --- a/mm/oom_kill.c</span>
<span class="quote">&gt; +++ b/mm/oom_kill.c</span>
<span class="quote">&gt; @@ -567,10 +567,11 @@ void oom_kill_process(struct oom_control *oc, struct task_struct *p,</span>
<span class="quote">&gt;  	 */</span>
<span class="quote">&gt;  	do_send_sig_info(SIGKILL, SEND_SIG_FORCED, victim, true);</span>
<span class="quote">&gt;  	mark_oom_victim(victim);</span>
<span class="quote">&gt; -	pr_err(&quot;Killed process %d (%s) total-vm:%lukB, anon-rss:%lukB, file-rss:%lukB\n&quot;,</span>
<span class="quote">&gt; +	pr_err(&quot;Killed process %d (%s) total-vm:%lukB, anon-rss:%lukB, file-rss:%lukB, shmem-rss:%lukB\n&quot;,</span>
<span class="quote">&gt;  		task_pid_nr(victim), victim-&gt;comm, K(victim-&gt;mm-&gt;total_vm),</span>
<span class="quote">&gt;  		K(get_mm_counter(victim-&gt;mm, MM_ANONPAGES)),</span>
<span class="quote">&gt; -		K(get_mm_counter(victim-&gt;mm, MM_FILEPAGES)));</span>
<span class="quote">&gt; +		K(get_mm_counter(victim-&gt;mm, MM_FILEPAGES)),</span>
<span class="quote">&gt; +		K(get_mm_counter(victim-&gt;mm, MM_SHMEMPAGES)));</span>
<span class="quote">&gt;  	task_unlock(victim);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	/*</span>
<span class="quote">&gt; diff --git a/mm/rmap.c b/mm/rmap.c</span>
<span class="quote">&gt; index 0ce371a..6c89356 100644</span>
<span class="quote">&gt; --- a/mm/rmap.c</span>
<span class="quote">&gt; +++ b/mm/rmap.c</span>
<span class="quote">&gt; @@ -1383,10 +1383,7 @@ static int try_to_unmap_one(struct page *page, struct vm_area_struct *vma,</span>
<span class="quote">&gt;  		if (PageHuge(page)) {</span>
<span class="quote">&gt;  			hugetlb_count_sub(1 &lt;&lt; compound_order(page), mm);</span>
<span class="quote">&gt;  		} else {</span>
<span class="quote">&gt; -			if (PageAnon(page))</span>
<span class="quote">&gt; -				dec_mm_counter(mm, MM_ANONPAGES);</span>
<span class="quote">&gt; -			else</span>
<span class="quote">&gt; -				dec_mm_counter(mm, MM_FILEPAGES);</span>
<span class="quote">&gt; +			dec_mm_counter(mm, mm_counter(page));</span>
<span class="quote">&gt;  		}</span>
<span class="quote">&gt;  		set_pte_at(mm, address, pte,</span>
<span class="quote">&gt;  			   swp_entry_to_pte(make_hwpoison_entry(page)));</span>
<span class="quote">&gt; @@ -1396,10 +1393,7 @@ static int try_to_unmap_one(struct page *page, struct vm_area_struct *vma,</span>
<span class="quote">&gt;  		 * interest anymore. Simply discard the pte, vmscan</span>
<span class="quote">&gt;  		 * will take care of the rest.</span>
<span class="quote">&gt;  		 */</span>
<span class="quote">&gt; -		if (PageAnon(page))</span>
<span class="quote">&gt; -			dec_mm_counter(mm, MM_ANONPAGES);</span>
<span class="quote">&gt; -		else</span>
<span class="quote">&gt; -			dec_mm_counter(mm, MM_FILEPAGES);</span>
<span class="quote">&gt; +		dec_mm_counter(mm, mm_counter(page));</span>
<span class="quote">&gt;  	} else if (PageAnon(page)) {</span>
<span class="quote">&gt;  		swp_entry_t entry = { .val = page_private(page) };</span>
<span class="quote">&gt;  		pte_t swp_pte;</span>
<span class="quote">&gt; @@ -1455,7 +1449,7 @@ static int try_to_unmap_one(struct page *page, struct vm_area_struct *vma,</span>
<span class="quote">&gt;  		entry = make_migration_entry(page, pte_write(pteval));</span>
<span class="quote">&gt;  		set_pte_at(mm, address, pte, swp_entry_to_pte(entry));</span>
<span class="quote">&gt;  	} else</span>
<span class="quote">&gt; -		dec_mm_counter(mm, MM_FILEPAGES);</span>
<span class="quote">&gt; +		dec_mm_counter(mm, mm_counter_file(page));</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  discard:</span>
<span class="quote">&gt;  	page_remove_rmap(page);</span>
<span class="quote">&gt; -- </span>
<span class="quote">&gt; 2.5.2</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; </span>
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/s390/mm/pgtable.c b/arch/s390/mm/pgtable.c</span>
<span class="p_header">index 54ef3bc..9816f25 100644</span>
<span class="p_header">--- a/arch/s390/mm/pgtable.c</span>
<span class="p_header">+++ b/arch/s390/mm/pgtable.c</span>
<span class="p_chunk">@@ -603,10 +603,7 @@</span> <span class="p_context"> static void gmap_zap_swap_entry(swp_entry_t entry, struct mm_struct *mm)</span>
 	else if (is_migration_entry(entry)) {
 		struct page *page = migration_entry_to_page(entry);
 
<span class="p_del">-		if (PageAnon(page))</span>
<span class="p_del">-			dec_mm_counter(mm, MM_ANONPAGES);</span>
<span class="p_del">-		else</span>
<span class="p_del">-			dec_mm_counter(mm, MM_FILEPAGES);</span>
<span class="p_add">+		dec_mm_counter(mm, mm_counter(page));</span>
 	}
 	free_swap_and_cache(entry);
 }
<span class="p_header">diff --git a/fs/proc/task_mmu.c b/fs/proc/task_mmu.c</span>
<span class="p_header">index 103457c..9b9708e 100644</span>
<span class="p_header">--- a/fs/proc/task_mmu.c</span>
<span class="p_header">+++ b/fs/proc/task_mmu.c</span>
<span class="p_chunk">@@ -83,7 +83,8 @@</span> <span class="p_context"> unsigned long task_statm(struct mm_struct *mm,</span>
 			 unsigned long *shared, unsigned long *text,
 			 unsigned long *data, unsigned long *resident)
 {
<span class="p_del">-	*shared = get_mm_counter(mm, MM_FILEPAGES);</span>
<span class="p_add">+	*shared = get_mm_counter(mm, MM_FILEPAGES) +</span>
<span class="p_add">+			get_mm_counter(mm, MM_SHMEMPAGES);</span>
 	*text = (PAGE_ALIGN(mm-&gt;end_code) - (mm-&gt;start_code &amp; PAGE_MASK))
 								&gt;&gt; PAGE_SHIFT;
 	*data = mm-&gt;total_vm - mm-&gt;shared_vm;
<span class="p_header">diff --git a/include/linux/mm.h b/include/linux/mm.h</span>
<span class="p_header">index d30eea3..8be4efc 100644</span>
<span class="p_header">--- a/include/linux/mm.h</span>
<span class="p_header">+++ b/include/linux/mm.h</span>
<span class="p_chunk">@@ -1361,10 +1361,26 @@</span> <span class="p_context"> static inline void dec_mm_counter(struct mm_struct *mm, int member)</span>
 	atomic_long_dec(&amp;mm-&gt;rss_stat.count[member]);
 }
 
<span class="p_add">+/* Optimized variant when page is already known not to be PageAnon */</span>
<span class="p_add">+static inline int mm_counter_file(struct page *page)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if (PageSwapBacked(page))</span>
<span class="p_add">+		return MM_SHMEMPAGES;</span>
<span class="p_add">+	return MM_FILEPAGES;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline int mm_counter(struct page *page)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if (PageAnon(page))</span>
<span class="p_add">+		return MM_ANONPAGES;</span>
<span class="p_add">+	return mm_counter_file(page);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static inline unsigned long get_mm_rss(struct mm_struct *mm)
 {
 	return get_mm_counter(mm, MM_FILEPAGES) +
<span class="p_del">-		get_mm_counter(mm, MM_ANONPAGES);</span>
<span class="p_add">+		get_mm_counter(mm, MM_ANONPAGES) +</span>
<span class="p_add">+		get_mm_counter(mm, MM_SHMEMPAGES);</span>
 }
 
 static inline unsigned long get_mm_hiwater_rss(struct mm_struct *mm)
<span class="p_header">diff --git a/include/linux/mm_types.h b/include/linux/mm_types.h</span>
<span class="p_header">index f8d1492..207890b 100644</span>
<span class="p_header">--- a/include/linux/mm_types.h</span>
<span class="p_header">+++ b/include/linux/mm_types.h</span>
<span class="p_chunk">@@ -369,9 +369,10 @@</span> <span class="p_context"> struct core_state {</span>
 };
 
 enum {
<span class="p_del">-	MM_FILEPAGES,</span>
<span class="p_del">-	MM_ANONPAGES,</span>
<span class="p_del">-	MM_SWAPENTS,</span>
<span class="p_add">+	MM_FILEPAGES,	/* Resident file mapping pages */</span>
<span class="p_add">+	MM_ANONPAGES,	/* Resident anonymous pages */</span>
<span class="p_add">+	MM_SWAPENTS,	/* Anonymous swap entries */</span>
<span class="p_add">+	MM_SHMEMPAGES,	/* Resident shared memory pages */</span>
 	NR_MM_COUNTERS
 };
 
<span class="p_header">diff --git a/kernel/events/uprobes.c b/kernel/events/uprobes.c</span>
<span class="p_header">index 4e5e979..6288606 100644</span>
<span class="p_header">--- a/kernel/events/uprobes.c</span>
<span class="p_header">+++ b/kernel/events/uprobes.c</span>
<span class="p_chunk">@@ -180,7 +180,7 @@</span> <span class="p_context"> static int __replace_page(struct vm_area_struct *vma, unsigned long addr,</span>
 	lru_cache_add_active_or_unevictable(kpage, vma);
 
 	if (!PageAnon(page)) {
<span class="p_del">-		dec_mm_counter(mm, MM_FILEPAGES);</span>
<span class="p_add">+		dec_mm_counter(mm, mm_counter_file(page));</span>
 		inc_mm_counter(mm, MM_ANONPAGES);
 	}
 
<span class="p_header">diff --git a/mm/memory.c b/mm/memory.c</span>
<span class="p_header">index 3bd465a..f10d458 100644</span>
<span class="p_header">--- a/mm/memory.c</span>
<span class="p_header">+++ b/mm/memory.c</span>
<span class="p_chunk">@@ -832,10 +832,7 @@</span> <span class="p_context"> copy_one_pte(struct mm_struct *dst_mm, struct mm_struct *src_mm,</span>
 		} else if (is_migration_entry(entry)) {
 			page = migration_entry_to_page(entry);
 
<span class="p_del">-			if (PageAnon(page))</span>
<span class="p_del">-				rss[MM_ANONPAGES]++;</span>
<span class="p_del">-			else</span>
<span class="p_del">-				rss[MM_FILEPAGES]++;</span>
<span class="p_add">+			rss[mm_counter(page)]++;</span>
 
 			if (is_write_migration_entry(entry) &amp;&amp;
 					is_cow_mapping(vm_flags)) {
<span class="p_chunk">@@ -874,10 +871,7 @@</span> <span class="p_context"> copy_one_pte(struct mm_struct *dst_mm, struct mm_struct *src_mm,</span>
 	if (page) {
 		get_page(page);
 		page_dup_rmap(page);
<span class="p_del">-		if (PageAnon(page))</span>
<span class="p_del">-			rss[MM_ANONPAGES]++;</span>
<span class="p_del">-		else</span>
<span class="p_del">-			rss[MM_FILEPAGES]++;</span>
<span class="p_add">+		rss[mm_counter(page)]++;</span>
 	}
 
 out_set_pte:
<span class="p_chunk">@@ -1113,9 +1107,8 @@</span> <span class="p_context"> static unsigned long zap_pte_range(struct mmu_gather *tlb,</span>
 			tlb_remove_tlb_entry(tlb, pte, addr);
 			if (unlikely(!page))
 				continue;
<span class="p_del">-			if (PageAnon(page))</span>
<span class="p_del">-				rss[MM_ANONPAGES]--;</span>
<span class="p_del">-			else {</span>
<span class="p_add">+</span>
<span class="p_add">+			if (!PageAnon(page)) {</span>
 				if (pte_dirty(ptent)) {
 					force_flush = 1;
 					set_page_dirty(page);
<span class="p_chunk">@@ -1123,8 +1116,8 @@</span> <span class="p_context"> static unsigned long zap_pte_range(struct mmu_gather *tlb,</span>
 				if (pte_young(ptent) &amp;&amp;
 				    likely(!(vma-&gt;vm_flags &amp; VM_SEQ_READ)))
 					mark_page_accessed(page);
<span class="p_del">-				rss[MM_FILEPAGES]--;</span>
 			}
<span class="p_add">+			rss[mm_counter(page)]--;</span>
 			page_remove_rmap(page);
 			if (unlikely(page_mapcount(page) &lt; 0))
 				print_bad_pte(vma, addr, ptent, page);
<span class="p_chunk">@@ -1146,11 +1139,7 @@</span> <span class="p_context"> static unsigned long zap_pte_range(struct mmu_gather *tlb,</span>
 			struct page *page;
 
 			page = migration_entry_to_page(entry);
<span class="p_del">-</span>
<span class="p_del">-			if (PageAnon(page))</span>
<span class="p_del">-				rss[MM_ANONPAGES]--;</span>
<span class="p_del">-			else</span>
<span class="p_del">-				rss[MM_FILEPAGES]--;</span>
<span class="p_add">+			rss[mm_counter(page)]--;</span>
 		}
 		if (unlikely(!free_swap_and_cache(entry)))
 			print_bad_pte(vma, addr, ptent, NULL);
<span class="p_chunk">@@ -1460,7 +1449,7 @@</span> <span class="p_context"> static int insert_page(struct vm_area_struct *vma, unsigned long addr,</span>
 
 	/* Ok, finally just insert the thing.. */
 	get_page(page);
<span class="p_del">-	inc_mm_counter_fast(mm, MM_FILEPAGES);</span>
<span class="p_add">+	inc_mm_counter_fast(mm, mm_counter_file(page));</span>
 	page_add_file_rmap(page);
 	set_pte_at(mm, addr, pte, mk_pte(page, prot));
 
<span class="p_chunk">@@ -2097,7 +2086,8 @@</span> <span class="p_context"> static int wp_page_copy(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 	if (likely(pte_same(*page_table, orig_pte))) {
 		if (old_page) {
 			if (!PageAnon(old_page)) {
<span class="p_del">-				dec_mm_counter_fast(mm, MM_FILEPAGES);</span>
<span class="p_add">+				dec_mm_counter_fast(mm,</span>
<span class="p_add">+						mm_counter_file(old_page));</span>
 				inc_mm_counter_fast(mm, MM_ANONPAGES);
 			}
 		} else {
<span class="p_chunk">@@ -2818,7 +2808,7 @@</span> <span class="p_context"> void do_set_pte(struct vm_area_struct *vma, unsigned long address,</span>
 		inc_mm_counter_fast(vma-&gt;vm_mm, MM_ANONPAGES);
 		page_add_new_anon_rmap(page, vma, address);
 	} else {
<span class="p_del">-		inc_mm_counter_fast(vma-&gt;vm_mm, MM_FILEPAGES);</span>
<span class="p_add">+		inc_mm_counter_fast(vma-&gt;vm_mm, mm_counter_file(page));</span>
 		page_add_file_rmap(page);
 	}
 	set_pte_at(vma-&gt;vm_mm, address, pte, entry);
<span class="p_header">diff --git a/mm/oom_kill.c b/mm/oom_kill.c</span>
<span class="p_header">index 4766e25..127e2d6 100644</span>
<span class="p_header">--- a/mm/oom_kill.c</span>
<span class="p_header">+++ b/mm/oom_kill.c</span>
<span class="p_chunk">@@ -567,10 +567,11 @@</span> <span class="p_context"> void oom_kill_process(struct oom_control *oc, struct task_struct *p,</span>
 	 */
 	do_send_sig_info(SIGKILL, SEND_SIG_FORCED, victim, true);
 	mark_oom_victim(victim);
<span class="p_del">-	pr_err(&quot;Killed process %d (%s) total-vm:%lukB, anon-rss:%lukB, file-rss:%lukB\n&quot;,</span>
<span class="p_add">+	pr_err(&quot;Killed process %d (%s) total-vm:%lukB, anon-rss:%lukB, file-rss:%lukB, shmem-rss:%lukB\n&quot;,</span>
 		task_pid_nr(victim), victim-&gt;comm, K(victim-&gt;mm-&gt;total_vm),
 		K(get_mm_counter(victim-&gt;mm, MM_ANONPAGES)),
<span class="p_del">-		K(get_mm_counter(victim-&gt;mm, MM_FILEPAGES)));</span>
<span class="p_add">+		K(get_mm_counter(victim-&gt;mm, MM_FILEPAGES)),</span>
<span class="p_add">+		K(get_mm_counter(victim-&gt;mm, MM_SHMEMPAGES)));</span>
 	task_unlock(victim);
 
 	/*
<span class="p_header">diff --git a/mm/rmap.c b/mm/rmap.c</span>
<span class="p_header">index 0ce371a..6c89356 100644</span>
<span class="p_header">--- a/mm/rmap.c</span>
<span class="p_header">+++ b/mm/rmap.c</span>
<span class="p_chunk">@@ -1383,10 +1383,7 @@</span> <span class="p_context"> static int try_to_unmap_one(struct page *page, struct vm_area_struct *vma,</span>
 		if (PageHuge(page)) {
 			hugetlb_count_sub(1 &lt;&lt; compound_order(page), mm);
 		} else {
<span class="p_del">-			if (PageAnon(page))</span>
<span class="p_del">-				dec_mm_counter(mm, MM_ANONPAGES);</span>
<span class="p_del">-			else</span>
<span class="p_del">-				dec_mm_counter(mm, MM_FILEPAGES);</span>
<span class="p_add">+			dec_mm_counter(mm, mm_counter(page));</span>
 		}
 		set_pte_at(mm, address, pte,
 			   swp_entry_to_pte(make_hwpoison_entry(page)));
<span class="p_chunk">@@ -1396,10 +1393,7 @@</span> <span class="p_context"> static int try_to_unmap_one(struct page *page, struct vm_area_struct *vma,</span>
 		 * interest anymore. Simply discard the pte, vmscan
 		 * will take care of the rest.
 		 */
<span class="p_del">-		if (PageAnon(page))</span>
<span class="p_del">-			dec_mm_counter(mm, MM_ANONPAGES);</span>
<span class="p_del">-		else</span>
<span class="p_del">-			dec_mm_counter(mm, MM_FILEPAGES);</span>
<span class="p_add">+		dec_mm_counter(mm, mm_counter(page));</span>
 	} else if (PageAnon(page)) {
 		swp_entry_t entry = { .val = page_private(page) };
 		pte_t swp_pte;
<span class="p_chunk">@@ -1455,7 +1449,7 @@</span> <span class="p_context"> static int try_to_unmap_one(struct page *page, struct vm_area_struct *vma,</span>
 		entry = make_migration_entry(page, pte_write(pteval));
 		set_pte_at(mm, address, pte, swp_entry_to_pte(entry));
 	} else
<span class="p_del">-		dec_mm_counter(mm, MM_FILEPAGES);</span>
<span class="p_add">+		dec_mm_counter(mm, mm_counter_file(page));</span>
 
 discard:
 	page_remove_rmap(page);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



