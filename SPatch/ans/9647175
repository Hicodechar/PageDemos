
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[5/8] x86/mm: Add basic defines/helpers for CONFIG_X86_5LEVEL - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [5/8] x86/mm: Add basic defines/helpers for CONFIG_X86_5LEVEL</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=40781">Kirill A. Shutemov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 27, 2017, 4:29 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170327162925.16092-6-kirill.shutemov@linux.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9647175/mbox/"
   >mbox</a>
|
   <a href="/patch/9647175/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9647175/">/patch/9647175/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	3626460328 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 27 Mar 2017 16:32:04 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 241DF282E8
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 27 Mar 2017 16:32:04 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 1879228395; Mon, 27 Mar 2017 16:32:04 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 92B052836D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 27 Mar 2017 16:32:03 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751658AbdC0Qbu (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 27 Mar 2017 12:31:50 -0400
Received: from mga14.intel.com ([192.55.52.115]:37568 &quot;EHLO mga14.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751611AbdC0Qaf (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 27 Mar 2017 12:30:35 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple;
	d=intel.com; i=@intel.com; q=dns/txt; s=intel;
	t=1490632235; x=1522168235;
	h=from:to:cc:subject:date:message-id:in-reply-to: references;
	bh=aLENAOUELPe/KiqBRaUI/CH98Vw3tFTWNPf2fTJhQMw=;
	b=bZ39dUxv172Rremd7lm2ThUiyKrzlIZ2yoL7+4pWMkCgPObok6tkAjOn
	8QWfMemxLe20Lhlx26+7B0hlYkDYxQ==;
Received: from fmsmga004.fm.intel.com ([10.253.24.48])
	by fmsmga103.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
	27 Mar 2017 09:29:41 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.36,232,1486454400&quot;; d=&quot;scan&#39;208&quot;;a=&quot;240794665&quot;
Received: from black.fi.intel.com ([10.237.72.28])
	by fmsmga004.fm.intel.com with ESMTP; 27 Mar 2017 09:29:38 -0700
Received: by black.fi.intel.com (Postfix, from userid 1000)
	id 5A547316; Mon, 27 Mar 2017 19:29:33 +0300 (EEST)
From: &quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
To: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;, x86@kernel.org,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;
Cc: Andi Kleen &lt;ak@linux.intel.com&gt;, Dave Hansen &lt;dave.hansen@intel.com&gt;,
	Andy Lutomirski &lt;luto@amacapital.net&gt;,
	linux-arch@vger.kernel.org, linux-mm@kvack.org,
	linux-kernel@vger.kernel.org,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
Subject: [PATCH 5/8] x86/mm: Add basic defines/helpers for CONFIG_X86_5LEVEL
Date: Mon, 27 Mar 2017 19:29:22 +0300
Message-Id: &lt;20170327162925.16092-6-kirill.shutemov@linux.intel.com&gt;
X-Mailer: git-send-email 2.11.0
In-Reply-To: &lt;20170327162925.16092-1-kirill.shutemov@linux.intel.com&gt;
References: &lt;20170327162925.16092-1-kirill.shutemov@linux.intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=40781">Kirill A. Shutemov</a> - March 27, 2017, 4:29 p.m.</div>
<pre class="content">
Extends pagetable headers to support new paging mode.
<span class="signed-off-by">
Signed-off-by: Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt;</span>
---
 arch/x86/include/asm/pgtable_64.h       | 11 +++++++++++
 arch/x86/include/asm/pgtable_64_types.h | 20 +++++++++++++++++++
 arch/x86/include/asm/pgtable_types.h    | 10 +++++++++-
 arch/x86/mm/pgtable.c                   | 34 ++++++++++++++++++++++++++++++++-
 4 files changed, 73 insertions(+), 2 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a> - March 28, 2017, 6:11 a.m.</div>
<pre class="content">
* Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt; wrote:
<span class="quote">
&gt; +#ifdef CONFIG_X86_5LEVEL</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +/*</span>
<span class="quote">&gt; + * PGDIR_SHIFT determines what a top-level page table entry can map</span>
<span class="quote">&gt; + */</span>
<span class="quote">&gt; +#define PGDIR_SHIFT	48</span>
<span class="quote">&gt; +#define PTRS_PER_PGD	512</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +/*</span>
<span class="quote">&gt; + * 4rd level page in 5-level paging case</span>

4th.
<span class="quote">
&gt; + */</span>
<span class="quote">&gt; +#define P4D_SHIFT	39</span>
<span class="quote">&gt; +#define PTRS_PER_P4D	512</span>
<span class="quote">&gt; +#define P4D_SIZE	(_AC(1, UL) &lt;&lt; P4D_SHIFT)</span>
<span class="quote">&gt; +#define P4D_MASK	(~(P4D_SIZE - 1))</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +#else  /* CONFIG_X86_5LEVEL */</span>

Single space suffices before teh comment.
<span class="quote">
&gt; +</span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * PGDIR_SHIFT determines what a top-level page table entry can map</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt;  #define PGDIR_SHIFT	39</span>
<span class="quote">&gt;  #define PTRS_PER_PGD	512</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +#endif  /* CONFIG_X86_5LEVEL */</span>

Ditto.
<span class="quote">
&gt; +#ifdef CONFIG_X86_5LEVEL</span>
<span class="quote">&gt; +/**</span>
<span class="quote">&gt; + * p4d_set_huge - setup kernel P4D mapping</span>
<span class="quote">&gt; + *</span>
<span class="quote">&gt; + * No 512GB pages yet -- always return 0</span>
<span class="quote">&gt; + *</span>
<span class="quote">&gt; + * Returns 1 on success and 0 on failure.</span>
<span class="quote">&gt; + */</span>
<span class="quote">&gt; +int p4d_set_huge(p4d_t *p4d, phys_addr_t addr, pgprot_t prot)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	return 0;</span>
<span class="quote">&gt; +}</span>

The last comment line can be deleted I suppose.

Thanks,

	Ingo
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/pgtable_64.h b/arch/x86/include/asm/pgtable_64.h</span>
<span class="p_header">index 0593a1ae7573..12ea31274eb6 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/pgtable_64.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/pgtable_64.h</span>
<span class="p_chunk">@@ -35,6 +35,13 @@</span> <span class="p_context"> extern void paging_init(void);</span>
 #define pud_ERROR(e)					\
 	pr_err(&quot;%s:%d: bad pud %p(%016lx)\n&quot;,		\
 	       __FILE__, __LINE__, &amp;(e), pud_val(e))
<span class="p_add">+</span>
<span class="p_add">+#if CONFIG_PGTABLE_LEVELS &gt;= 5</span>
<span class="p_add">+#define p4d_ERROR(e)					\</span>
<span class="p_add">+	pr_err(&quot;%s:%d: bad p4d %p(%016lx)\n&quot;,		\</span>
<span class="p_add">+	       __FILE__, __LINE__, &amp;(e), p4d_val(e))</span>
<span class="p_add">+#endif</span>
<span class="p_add">+</span>
 #define pgd_ERROR(e)					\
 	pr_err(&quot;%s:%d: bad pgd %p(%016lx)\n&quot;,		\
 	       __FILE__, __LINE__, &amp;(e), pgd_val(e))
<span class="p_chunk">@@ -128,7 +135,11 @@</span> <span class="p_context"> static inline void native_set_p4d(p4d_t *p4dp, p4d_t p4d)</span>
 
 static inline void native_p4d_clear(p4d_t *p4d)
 {
<span class="p_add">+#ifdef CONFIG_X86_5LEVEL</span>
<span class="p_add">+	native_set_p4d(p4d, native_make_p4d(0));</span>
<span class="p_add">+#else</span>
 	native_set_p4d(p4d, (p4d_t) { .pgd = native_make_pgd(0)});
<span class="p_add">+#endif</span>
 }
 
 static inline void native_set_pgd(pgd_t *pgdp, pgd_t pgd)
<span class="p_header">diff --git a/arch/x86/include/asm/pgtable_64_types.h b/arch/x86/include/asm/pgtable_64_types.h</span>
<span class="p_header">index 4edc97917382..d3df6dc05d19 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/pgtable_64_types.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/pgtable_64_types.h</span>
<span class="p_chunk">@@ -23,12 +23,32 @@</span> <span class="p_context"> typedef struct { pteval_t pte; } pte_t;</span>
 
 #define SHARED_KERNEL_PMD	0
 
<span class="p_add">+#ifdef CONFIG_X86_5LEVEL</span>
<span class="p_add">+</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * PGDIR_SHIFT determines what a top-level page table entry can map</span>
<span class="p_add">+ */</span>
<span class="p_add">+#define PGDIR_SHIFT	48</span>
<span class="p_add">+#define PTRS_PER_PGD	512</span>
<span class="p_add">+</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * 4rd level page in 5-level paging case</span>
<span class="p_add">+ */</span>
<span class="p_add">+#define P4D_SHIFT	39</span>
<span class="p_add">+#define PTRS_PER_P4D	512</span>
<span class="p_add">+#define P4D_SIZE	(_AC(1, UL) &lt;&lt; P4D_SHIFT)</span>
<span class="p_add">+#define P4D_MASK	(~(P4D_SIZE - 1))</span>
<span class="p_add">+</span>
<span class="p_add">+#else  /* CONFIG_X86_5LEVEL */</span>
<span class="p_add">+</span>
 /*
  * PGDIR_SHIFT determines what a top-level page table entry can map
  */
 #define PGDIR_SHIFT	39
 #define PTRS_PER_PGD	512
 
<span class="p_add">+#endif  /* CONFIG_X86_5LEVEL */</span>
<span class="p_add">+</span>
 /*
  * 3rd level page
  */
<span class="p_header">diff --git a/arch/x86/include/asm/pgtable_types.h b/arch/x86/include/asm/pgtable_types.h</span>
<span class="p_header">index 4930afe9df0a..bf9638e1ee42 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/pgtable_types.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/pgtable_types.h</span>
<span class="p_chunk">@@ -273,9 +273,17 @@</span> <span class="p_context"> static inline pgdval_t pgd_flags(pgd_t pgd)</span>
 }
 
 #if CONFIG_PGTABLE_LEVELS &gt; 4
<span class="p_add">+typedef struct { p4dval_t p4d; } p4d_t;</span>
 
<span class="p_del">-#error FIXME</span>
<span class="p_add">+static inline p4d_t native_make_p4d(pudval_t val)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return (p4d_t) { val };</span>
<span class="p_add">+}</span>
 
<span class="p_add">+static inline p4dval_t native_p4d_val(p4d_t p4d)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return p4d.p4d;</span>
<span class="p_add">+}</span>
 #else
 #include &lt;asm-generic/pgtable-nop4d.h&gt;
 
<span class="p_header">diff --git a/arch/x86/mm/pgtable.c b/arch/x86/mm/pgtable.c</span>
<span class="p_header">index 38b6daf72deb..d26b066944a5 100644</span>
<span class="p_header">--- a/arch/x86/mm/pgtable.c</span>
<span class="p_header">+++ b/arch/x86/mm/pgtable.c</span>
<span class="p_chunk">@@ -81,6 +81,14 @@</span> <span class="p_context"> void ___pud_free_tlb(struct mmu_gather *tlb, pud_t *pud)</span>
 	paravirt_release_pud(__pa(pud) &gt;&gt; PAGE_SHIFT);
 	tlb_remove_page(tlb, virt_to_page(pud));
 }
<span class="p_add">+</span>
<span class="p_add">+#if CONFIG_PGTABLE_LEVELS &gt; 4</span>
<span class="p_add">+void ___p4d_free_tlb(struct mmu_gather *tlb, p4d_t *p4d)</span>
<span class="p_add">+{</span>
<span class="p_add">+	paravirt_release_p4d(__pa(p4d) &gt;&gt; PAGE_SHIFT);</span>
<span class="p_add">+	tlb_remove_page(tlb, virt_to_page(p4d));</span>
<span class="p_add">+}</span>
<span class="p_add">+#endif	/* CONFIG_PGTABLE_LEVELS &gt; 4 */</span>
 #endif	/* CONFIG_PGTABLE_LEVELS &gt; 3 */
 #endif	/* CONFIG_PGTABLE_LEVELS &gt; 2 */
 
<span class="p_chunk">@@ -120,7 +128,7 @@</span> <span class="p_context"> static void pgd_ctor(struct mm_struct *mm, pgd_t *pgd)</span>
 	   references from swapper_pg_dir. */
 	if (CONFIG_PGTABLE_LEVELS == 2 ||
 	    (CONFIG_PGTABLE_LEVELS == 3 &amp;&amp; SHARED_KERNEL_PMD) ||
<span class="p_del">-	    CONFIG_PGTABLE_LEVELS == 4) {</span>
<span class="p_add">+	    CONFIG_PGTABLE_LEVELS &gt;= 4) {</span>
 		clone_pgd_range(pgd + KERNEL_PGD_BOUNDARY,
 				swapper_pg_dir + KERNEL_PGD_BOUNDARY,
 				KERNEL_PGD_PTRS);
<span class="p_chunk">@@ -582,6 +590,30 @@</span> <span class="p_context"> void native_set_fixmap(enum fixed_addresses idx, phys_addr_t phys,</span>
 }
 
 #ifdef CONFIG_HAVE_ARCH_HUGE_VMAP
<span class="p_add">+#ifdef CONFIG_X86_5LEVEL</span>
<span class="p_add">+/**</span>
<span class="p_add">+ * p4d_set_huge - setup kernel P4D mapping</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * No 512GB pages yet -- always return 0</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * Returns 1 on success and 0 on failure.</span>
<span class="p_add">+ */</span>
<span class="p_add">+int p4d_set_huge(p4d_t *p4d, phys_addr_t addr, pgprot_t prot)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+/**</span>
<span class="p_add">+ * p4d_clear_huge - clear kernel P4D mapping when it is set</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * No 512GB pages yet -- always return 0</span>
<span class="p_add">+ */</span>
<span class="p_add">+int p4d_clear_huge(p4d_t *p4d)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+#endif</span>
<span class="p_add">+</span>
 /**
  * pud_set_huge - setup kernel PUD mapping
  *

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



