
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[3/3] mm:shm: Use new hugetlb size encoding definitions - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [3/3] mm:shm: Use new hugetlb size encoding definitions</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 31, 2017, 6:56 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1501527386-10736-4-git-send-email-mike.kravetz@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9873021/mbox/"
   >mbox</a>
|
   <a href="/patch/9873021/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9873021/">/patch/9873021/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	47E4F60365 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 31 Jul 2017 18:58:16 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 31A882846D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 31 Jul 2017 18:58:16 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 251F02851A; Mon, 31 Jul 2017 18:58:16 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	UNPARSEABLE_RELAY autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 922102846D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 31 Jul 2017 18:58:15 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751891AbdGaS6K (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 31 Jul 2017 14:58:10 -0400
Received: from userp1040.oracle.com ([156.151.31.81]:47426 &quot;EHLO
	userp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751673AbdGaS50 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 31 Jul 2017 14:57:26 -0400
Received: from userv0022.oracle.com (userv0022.oracle.com [156.151.31.74])
	by userp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2) with
	ESMTP id v6VIun2L008325
	(version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Mon, 31 Jul 2017 18:56:49 GMT
Received: from userv0121.oracle.com (userv0121.oracle.com [156.151.31.72])
	by userv0022.oracle.com (8.14.4/8.14.4) with ESMTP id v6VIumwe027276
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Mon, 31 Jul 2017 18:56:48 GMT
Received: from abhmp0010.oracle.com (abhmp0010.oracle.com [141.146.116.16])
	by userv0121.oracle.com (8.14.4/8.13.8) with ESMTP id
	v6VIulmp019384; Mon, 31 Jul 2017 18:56:48 GMT
Received: from monkey.oracle.com (/50.188.161.229)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Mon, 31 Jul 2017 11:56:47 -0700
From: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
To: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
	linux-arch@vger.kernel.org
Cc: Matthew Wilcox &lt;willy@infradead.org&gt;,
	Michal Hocko &lt;mhocko@kernel.org&gt;, akpm@linux-foundation.org,
	ak@linux.intel.com, mtk.manpages@gmail.com,
	Davidlohr Bueso &lt;dbueso@suse.de&gt;, khandual@linux.vnet.ibm.com,
	aneesh.kumar@linux.vnet.ibm.com, aarcange@redhat.com,
	Arnd Bergmann &lt;arnd@arndb.de&gt;, Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
Subject: [PATCH 3/3] mm:shm: Use new hugetlb size encoding definitions
Date: Mon, 31 Jul 2017 11:56:26 -0700
Message-Id: &lt;1501527386-10736-4-git-send-email-mike.kravetz@oracle.com&gt;
X-Mailer: git-send-email 2.7.5
In-Reply-To: &lt;1501527386-10736-1-git-send-email-mike.kravetz@oracle.com&gt;
References: &lt;1501527386-10736-1-git-send-email-mike.kravetz@oracle.com&gt;
X-Source-IP: userv0022.oracle.com [156.151.31.74]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - July 31, 2017, 6:56 p.m.</div>
<pre class="content">
Use the common definitions from hugetlb_encode.h header file for
encoding hugetlb size definitions in shmget system call flags.

In addition, move these definitions from the internal (kernel) to
user (uapi) header file.

Suggested-by: Matthew Wilcox &lt;willy@infradead.org&gt;
<span class="signed-off-by">Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
---
 include/linux/shm.h      | 17 -----------------
 include/uapi/linux/shm.h | 31 +++++++++++++++++++++++++++++--
 2 files changed, 29 insertions(+), 19 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137061">Michal Hocko</a> - Aug. 1, 2017, 9:01 a.m.</div>
<pre class="content">
On Mon 31-07-17 11:56:26, Mike Kravetz wrote:
<span class="quote">&gt; Use the common definitions from hugetlb_encode.h header file for</span>
<span class="quote">&gt; encoding hugetlb size definitions in shmget system call flags.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; In addition, move these definitions from the internal (kernel) to</span>
<span class="quote">&gt; user (uapi) header file.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Suggested-by: Matthew Wilcox &lt;willy@infradead.org&gt;</span>
<span class="quote">&gt; Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="acked-by">
Acked-by: Michal Hocko &lt;mhocko@suse.com&gt;</span>
<span class="quote">
&gt; ---</span>
<span class="quote">&gt;  include/linux/shm.h      | 17 -----------------</span>
<span class="quote">&gt;  include/uapi/linux/shm.h | 31 +++++++++++++++++++++++++++++--</span>
<span class="quote">&gt;  2 files changed, 29 insertions(+), 19 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/include/linux/shm.h b/include/linux/shm.h</span>
<span class="quote">&gt; index 04e8818..d56285a 100644</span>
<span class="quote">&gt; --- a/include/linux/shm.h</span>
<span class="quote">&gt; +++ b/include/linux/shm.h</span>
<span class="quote">&gt; @@ -27,23 +27,6 @@ struct shmid_kernel /* private to the kernel */</span>
<span class="quote">&gt;  /* shm_mode upper byte flags */</span>
<span class="quote">&gt;  #define	SHM_DEST	01000	/* segment will be destroyed on last detach */</span>
<span class="quote">&gt;  #define SHM_LOCKED      02000   /* segment will not be swapped */</span>
<span class="quote">&gt; -#define SHM_HUGETLB     04000   /* segment will use huge TLB pages */</span>
<span class="quote">&gt; -#define SHM_NORESERVE   010000  /* don&#39;t check for reservations */</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -/* Bits [26:31] are reserved */</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -/*</span>
<span class="quote">&gt; - * When SHM_HUGETLB is set bits [26:31] encode the log2 of the huge page size.</span>
<span class="quote">&gt; - * This gives us 6 bits, which is enough until someone invents 128 bit address</span>
<span class="quote">&gt; - * spaces.</span>
<span class="quote">&gt; - *</span>
<span class="quote">&gt; - * Assume these are all power of twos.</span>
<span class="quote">&gt; - * When 0 use the default page size.</span>
<span class="quote">&gt; - */</span>
<span class="quote">&gt; -#define SHM_HUGE_SHIFT  26</span>
<span class="quote">&gt; -#define SHM_HUGE_MASK   0x3f</span>
<span class="quote">&gt; -#define SHM_HUGE_2MB    (21 &lt;&lt; SHM_HUGE_SHIFT)</span>
<span class="quote">&gt; -#define SHM_HUGE_1GB    (30 &lt;&lt; SHM_HUGE_SHIFT)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #ifdef CONFIG_SYSVIPC</span>
<span class="quote">&gt;  struct sysv_shm {</span>
<span class="quote">&gt; diff --git a/include/uapi/linux/shm.h b/include/uapi/linux/shm.h</span>
<span class="quote">&gt; index 1fbf24e..cf23c87 100644</span>
<span class="quote">&gt; --- a/include/uapi/linux/shm.h</span>
<span class="quote">&gt; +++ b/include/uapi/linux/shm.h</span>
<span class="quote">&gt; @@ -3,6 +3,7 @@</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #include &lt;linux/ipc.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/errno.h&gt;</span>
<span class="quote">&gt; +#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
<span class="quote">&gt;  #ifndef __KERNEL__</span>
<span class="quote">&gt;  #include &lt;unistd.h&gt;</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt; @@ -40,11 +41,37 @@ struct shmid_ds {</span>
<span class="quote">&gt;  /* Include the definition of shmid64_ds and shminfo64 */</span>
<span class="quote">&gt;  #include &lt;asm/shmbuf.h&gt;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -/* permission flag for shmget */</span>
<span class="quote">&gt; +/*</span>
<span class="quote">&gt; + * shmget() shmflg values.</span>
<span class="quote">&gt; + */</span>
<span class="quote">&gt; +/* The bottom nine bits are the same as open(2) mode flags */</span>
<span class="quote">&gt;  #define SHM_R		0400	/* or S_IRUGO from &lt;linux/stat.h&gt; */</span>
<span class="quote">&gt;  #define SHM_W		0200	/* or S_IWUGO from &lt;linux/stat.h&gt; */</span>
<span class="quote">&gt; +/* Bits 9 &amp; 10 are IPC_CREAT and IPC_EXCL */</span>
<span class="quote">&gt; +#define SHM_HUGETLB	04000	/* segment will use huge TLB pages */</span>
<span class="quote">&gt; +#define SHM_NORESERVE	010000	/* don&#39;t check for reservations */</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +/*</span>
<span class="quote">&gt; + * Huge page size encoding when SHM_HUGETLB is specified, and a huge page</span>
<span class="quote">&gt; + * size other than the default is desired.  See hugetlb_encode.h</span>
<span class="quote">&gt; + */</span>
<span class="quote">&gt; +#define SHM_HUGE_SHIFT	HUGETLB_FLAG_ENCODE_SHIFT</span>
<span class="quote">&gt; +#define SHM_HUGE_MASK	HUGETLB_FLAG_ENCODE_MASK</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +#define SHM_HUGE_64KB	HUGETLB_FLAG_ENCODE_64KB</span>
<span class="quote">&gt; +#define SHM_HUGE_512KB	HUGETLB_FLAG_ENCODE_512KB</span>
<span class="quote">&gt; +#define SHM_HUGE_1MB	HUGETLB_FLAG_ENCODE_1MB</span>
<span class="quote">&gt; +#define SHM_HUGE_2MB	HUGETLB_FLAG_ENCODE_2MB</span>
<span class="quote">&gt; +#define SHM_HUGE_8MB	HUGETLB_FLAG_ENCODE_8MB</span>
<span class="quote">&gt; +#define SHM_HUGE_16MB	HUGETLB_FLAG_ENCODE_16MB</span>
<span class="quote">&gt; +#define SHM_HUGE_256MB	HUGETLB_FLAG_ENCODE_256MB</span>
<span class="quote">&gt; +#define SHM_HUGE_1GB	HUGETLB_FLAG_ENCODE_1GB</span>
<span class="quote">&gt; +#define SHM_HUGE_2GB	HUGETLB_FLAG_ENCODE_2GB</span>
<span class="quote">&gt; +#define SHM_HUGE_16GB	HUGETLB_FLAG_ENCODE_16GB</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -/* mode for attach */</span>
<span class="quote">&gt; +/*</span>
<span class="quote">&gt; + * shmat() shmflg values</span>
<span class="quote">&gt; + */</span>
<span class="quote">&gt;  #define	SHM_RDONLY	010000	/* read-only access */</span>
<span class="quote">&gt;  #define	SHM_RND		020000	/* round attach address to SHMLBA boundary */</span>
<span class="quote">&gt;  #define	SHM_REMAP	040000	/* take-over region on attach */</span>
<span class="quote">&gt; -- </span>
<span class="quote">&gt; 2.7.5</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/linux/shm.h b/include/linux/shm.h</span>
<span class="p_header">index 04e8818..d56285a 100644</span>
<span class="p_header">--- a/include/linux/shm.h</span>
<span class="p_header">+++ b/include/linux/shm.h</span>
<span class="p_chunk">@@ -27,23 +27,6 @@</span> <span class="p_context"> struct shmid_kernel /* private to the kernel */</span>
 /* shm_mode upper byte flags */
 #define	SHM_DEST	01000	/* segment will be destroyed on last detach */
 #define SHM_LOCKED      02000   /* segment will not be swapped */
<span class="p_del">-#define SHM_HUGETLB     04000   /* segment will use huge TLB pages */</span>
<span class="p_del">-#define SHM_NORESERVE   010000  /* don&#39;t check for reservations */</span>
<span class="p_del">-</span>
<span class="p_del">-/* Bits [26:31] are reserved */</span>
<span class="p_del">-</span>
<span class="p_del">-/*</span>
<span class="p_del">- * When SHM_HUGETLB is set bits [26:31] encode the log2 of the huge page size.</span>
<span class="p_del">- * This gives us 6 bits, which is enough until someone invents 128 bit address</span>
<span class="p_del">- * spaces.</span>
<span class="p_del">- *</span>
<span class="p_del">- * Assume these are all power of twos.</span>
<span class="p_del">- * When 0 use the default page size.</span>
<span class="p_del">- */</span>
<span class="p_del">-#define SHM_HUGE_SHIFT  26</span>
<span class="p_del">-#define SHM_HUGE_MASK   0x3f</span>
<span class="p_del">-#define SHM_HUGE_2MB    (21 &lt;&lt; SHM_HUGE_SHIFT)</span>
<span class="p_del">-#define SHM_HUGE_1GB    (30 &lt;&lt; SHM_HUGE_SHIFT)</span>
 
 #ifdef CONFIG_SYSVIPC
 struct sysv_shm {
<span class="p_header">diff --git a/include/uapi/linux/shm.h b/include/uapi/linux/shm.h</span>
<span class="p_header">index 1fbf24e..cf23c87 100644</span>
<span class="p_header">--- a/include/uapi/linux/shm.h</span>
<span class="p_header">+++ b/include/uapi/linux/shm.h</span>
<span class="p_chunk">@@ -3,6 +3,7 @@</span> <span class="p_context"></span>
 
 #include &lt;linux/ipc.h&gt;
 #include &lt;linux/errno.h&gt;
<span class="p_add">+#include &lt;asm-generic/hugetlb_encode.h&gt;</span>
 #ifndef __KERNEL__
 #include &lt;unistd.h&gt;
 #endif
<span class="p_chunk">@@ -40,11 +41,37 @@</span> <span class="p_context"> struct shmid_ds {</span>
 /* Include the definition of shmid64_ds and shminfo64 */
 #include &lt;asm/shmbuf.h&gt;
 
<span class="p_del">-/* permission flag for shmget */</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * shmget() shmflg values.</span>
<span class="p_add">+ */</span>
<span class="p_add">+/* The bottom nine bits are the same as open(2) mode flags */</span>
 #define SHM_R		0400	/* or S_IRUGO from &lt;linux/stat.h&gt; */
 #define SHM_W		0200	/* or S_IWUGO from &lt;linux/stat.h&gt; */
<span class="p_add">+/* Bits 9 &amp; 10 are IPC_CREAT and IPC_EXCL */</span>
<span class="p_add">+#define SHM_HUGETLB	04000	/* segment will use huge TLB pages */</span>
<span class="p_add">+#define SHM_NORESERVE	010000	/* don&#39;t check for reservations */</span>
<span class="p_add">+</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Huge page size encoding when SHM_HUGETLB is specified, and a huge page</span>
<span class="p_add">+ * size other than the default is desired.  See hugetlb_encode.h</span>
<span class="p_add">+ */</span>
<span class="p_add">+#define SHM_HUGE_SHIFT	HUGETLB_FLAG_ENCODE_SHIFT</span>
<span class="p_add">+#define SHM_HUGE_MASK	HUGETLB_FLAG_ENCODE_MASK</span>
<span class="p_add">+</span>
<span class="p_add">+#define SHM_HUGE_64KB	HUGETLB_FLAG_ENCODE_64KB</span>
<span class="p_add">+#define SHM_HUGE_512KB	HUGETLB_FLAG_ENCODE_512KB</span>
<span class="p_add">+#define SHM_HUGE_1MB	HUGETLB_FLAG_ENCODE_1MB</span>
<span class="p_add">+#define SHM_HUGE_2MB	HUGETLB_FLAG_ENCODE_2MB</span>
<span class="p_add">+#define SHM_HUGE_8MB	HUGETLB_FLAG_ENCODE_8MB</span>
<span class="p_add">+#define SHM_HUGE_16MB	HUGETLB_FLAG_ENCODE_16MB</span>
<span class="p_add">+#define SHM_HUGE_256MB	HUGETLB_FLAG_ENCODE_256MB</span>
<span class="p_add">+#define SHM_HUGE_1GB	HUGETLB_FLAG_ENCODE_1GB</span>
<span class="p_add">+#define SHM_HUGE_2GB	HUGETLB_FLAG_ENCODE_2GB</span>
<span class="p_add">+#define SHM_HUGE_16GB	HUGETLB_FLAG_ENCODE_16GB</span>
 
<span class="p_del">-/* mode for attach */</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * shmat() shmflg values</span>
<span class="p_add">+ */</span>
 #define	SHM_RDONLY	010000	/* read-only access */
 #define	SHM_RND		020000	/* round attach address to SHMLBA boundary */
 #define	SHM_REMAP	040000	/* take-over region on attach */

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



