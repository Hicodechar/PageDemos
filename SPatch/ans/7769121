
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,8/8] treewide: Remove newlines inside DEFINE_PER_CPU() macros - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,8/8] treewide: Remove newlines inside DEFINE_PER_CPU() macros</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=86381">Michal Marek</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 4, 2015, 3:26 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1449242787-16598-9-git-send-email-mmarek@suse.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7769121/mbox/"
   >mbox</a>
|
   <a href="/patch/7769121/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7769121/">/patch/7769121/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id A5F95BEEE1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  4 Dec 2015 15:27:50 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 99F17205D1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  4 Dec 2015 15:27:49 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 59F15205C6
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  4 Dec 2015 15:27:48 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754353AbbLDP1l (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 4 Dec 2015 10:27:41 -0500
Received: from mx2.suse.de ([195.135.220.15]:53882 &quot;EHLO mx2.suse.de&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753308AbbLDP0t (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 4 Dec 2015 10:26:49 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (charybdis-ext.suse.de [195.135.220.254])
	by mx2.suse.de (Postfix) with ESMTP id E9537AD92;
	Fri,  4 Dec 2015 15:26:45 +0000 (UTC)
Received: by sepie.suse.cz (Postfix, from userid 10020)
	id 6EE8840770; Fri,  4 Dec 2015 16:26:45 +0100 (CET)
From: Michal Marek &lt;mmarek@suse.com&gt;
To: linux-kbuild@vger.kernel.org
Cc: linux-kernel@vger.kernel.org, linux-ia64@vger.kernel.org,
	xen-devel@lists.xenproject.org, linux-acpi@vger.kernel.org,
	rds-devel@oss.oracle.com, netdev@vger.kernel.org
Subject: [PATCH v2 8/8] treewide: Remove newlines inside DEFINE_PER_CPU()
	macros
Date: Fri,  4 Dec 2015 16:26:27 +0100
Message-Id: &lt;1449242787-16598-9-git-send-email-mmarek@suse.com&gt;
X-Mailer: git-send-email 2.1.4
In-Reply-To: &lt;1449242787-16598-1-git-send-email-mmarek@suse.com&gt;
References: &lt;1449242787-16598-1-git-send-email-mmarek@suse.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=86381">Michal Marek</a> - Dec. 4, 2015, 3:26 p.m.</div>
<pre class="content">
Otherwise make tags can&#39;t parse them:

ctags: Warning: arch/ia64/kernel/smp.c:60: null expansion of name pattern &quot;\1&quot;
ctags: Warning: drivers/xen/events/events_2l.c:41: null expansion of name pattern &quot;\1&quot;
ctags: Warning: drivers/acpi/processor_idle.c:64: null expansion of name pattern &quot;\1&quot;
ctags: Warning: kernel/locking/lockdep.c:153: null expansion of name pattern &quot;\1&quot;
ctags: Warning: kernel/workqueue.c:305: null expansion of name pattern &quot;\1&quot;
ctags: Warning: kernel/rcu/rcutorture.c:133: null expansion of name pattern &quot;\1&quot;
ctags: Warning: kernel/rcu/rcutorture.c:135: null expansion of name pattern &quot;\1&quot;
ctags: Warning: net/rds/page.c:45: null expansion of name pattern &quot;\1&quot;
ctags: Warning: net/ipv4/syncookies.c:53: null expansion of name pattern &quot;\1&quot;
ctags: Warning: net/ipv6/syncookies.c:44: null expansion of name pattern &quot;\1&quot;

Cc: linux-ia64@vger.kernel.org
Cc: xen-devel@lists.xenproject.org
Cc: linux-acpi@vger.kernel.org
Cc: rds-devel@oss.oracle.com
Cc: netdev@vger.kernel.org
<span class="signed-off-by">Signed-off-by: Michal Marek &lt;mmarek@suse.com&gt;</span>
---
v2: No change

 arch/ia64/kernel/smp.c         | 3 +--
 drivers/acpi/processor_idle.c  | 3 +--
 drivers/xen/events/events_2l.c | 3 +--
 kernel/locking/lockdep.c       | 3 +--
 kernel/rcu/rcutorture.c        | 6 ++----
 kernel/workqueue.c             | 3 +--
 net/ipv4/syncookies.c          | 3 +--
 net/ipv6/syncookies.c          | 3 +--
 net/rds/page.c                 | 3 +--
 9 files changed, 10 insertions(+), 20 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=21121">David Laight</a> - Dec. 7, 2015, 4:33 p.m.</div>
<pre class="content">
<span class="from">From: Michal Marek</span>
<span class="quote">&gt; Sent: 04 December 2015 15:26</span>
<span class="quote">&gt; Otherwise make tags can&#39;t parse them:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; ctags: Warning: arch/ia64/kernel/smp.c:60: null expansion of name pattern &quot;\1&quot;</span>
...

Seems to me you need to fix ctags.

	David
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=86381">Michal Marek</a> - Dec. 7, 2015, 4:53 p.m.</div>
<pre class="content">
On 2015-12-07 17:33, David Laight wrote:
<span class="quote">&gt; From: Michal Marek</span>
<span class="quote">&gt;&gt; Sent: 04 December 2015 15:26</span>
<span class="quote">&gt;&gt; Otherwise make tags can&#39;t parse them:</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; ctags: Warning: arch/ia64/kernel/smp.c:60: null expansion of name pattern &quot;\1&quot;</span>
<span class="quote">&gt; ...</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Seems to me you need to fix ctags.</span>

I&#39;m sure the maintainers of ctags and etags would accept patches to
describe a custom context-free grammar via commandline options, but
until then, let&#39;s continue using the regular expressions in tags.sh and
remove newlines in macros that tags.sh is trying to expand.

Michal
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=325">Joe Perches</a> - Dec. 7, 2015, 5:04 p.m.</div>
<pre class="content">
On Mon, 2015-12-07 at 17:53 +0100, Michal Marek wrote:
<span class="quote">&gt; On 2015-12-07 17:33, David Laight wrote:</span>
<span class="quote">&gt; &gt; From: Michal Marek</span>
<span class="quote">&gt; &gt; &gt; Sent: 04 December 2015 15:26</span>
<span class="quote">&gt; &gt; &gt; Otherwise make tags can&#39;t parse them:</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; ctags: Warning: arch/ia64/kernel/smp.c:60: null expansion of name pattern &quot;\1&quot;</span>
<span class="quote">&gt; &gt; ...</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Seems to me you need to fix ctags.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I&#39;m sure the maintainers of ctags and etags would accept patches to</span>
<span class="quote">&gt; describe a custom context-free grammar via commandline options, but</span>
<span class="quote">&gt; until then, let&#39;s continue using the regular expressions in tags.sh and</span>
<span class="quote">&gt; remove newlines in macros that tags.sh is trying to expand.</span>
<span class="quote">&gt; </span>

Do you have a list of the most common macros?

Perhaps it&#39;d be good to add exceptions to checkpatch
80 column line rules for them.
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=86381">Michal Marek</a> - Dec. 7, 2015, 5:19 p.m.</div>
<pre class="content">
On 2015-12-07 18:04, Joe Perches wrote:
<span class="quote">&gt; On Mon, 2015-12-07 at 17:53 +0100, Michal Marek wrote:</span>
<span class="quote">&gt;&gt; On 2015-12-07 17:33, David Laight wrote:</span>
<span class="quote">&gt;&gt;&gt; From: Michal Marek</span>
<span class="quote">&gt;&gt;&gt;&gt; Sent: 04 December 2015 15:26</span>
<span class="quote">&gt;&gt;&gt;&gt; Otherwise make tags can&#39;t parse them:</span>
<span class="quote">&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt; ctags: Warning: arch/ia64/kernel/smp.c:60: null expansion of name pattern &quot;\1&quot;</span>
<span class="quote">&gt;&gt;&gt; ...</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; Seems to me you need to fix ctags.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; I&#39;m sure the maintainers of ctags and etags would accept patches to</span>
<span class="quote">&gt;&gt; describe a custom context-free grammar via commandline options, but</span>
<span class="quote">&gt;&gt; until then, let&#39;s continue using the regular expressions in tags.sh and</span>
<span class="quote">&gt;&gt; remove newlines in macros that tags.sh is trying to expand.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Do you have a list of the most common macros?</span>

In practice, it&#39;s only DEFINE_PER_CPU and its sibling
DEFINE_PER_CPU_SHARED_ALIGNED, where we try to pick the second argument
to the macro and the first argument can be lengthy.
<span class="quote">

&gt; Perhaps it&#39;d be good to add exceptions to checkpatch</span>
<span class="quote">&gt; 80 column line rules for them.</span>

Your call. But this is a fairly rare occurrence -- 10 cases so far.

Michal
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/ia64/kernel/smp.c b/arch/ia64/kernel/smp.c</span>
<span class="p_header">index 7f706d4f84f7..1dcfe29d8a42 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/smp.c</span>
<span class="p_header">+++ b/arch/ia64/kernel/smp.c</span>
<span class="p_chunk">@@ -57,8 +57,7 @@</span> <span class="p_context"> static struct local_tlb_flush_counts {</span>
 	unsigned int count;
 } __attribute__((__aligned__(32))) local_tlb_flush_counts[NR_CPUS];
 
<span class="p_del">-static DEFINE_PER_CPU_SHARED_ALIGNED(unsigned short [NR_CPUS],</span>
<span class="p_del">-				     shadow_flush_counts);</span>
<span class="p_add">+static DEFINE_PER_CPU_SHARED_ALIGNED(unsigned short [NR_CPUS], shadow_flush_counts);</span>
 
 #define IPI_CALL_FUNC		0
 #define IPI_CPU_STOP		1
<span class="p_header">diff --git a/drivers/acpi/processor_idle.c b/drivers/acpi/processor_idle.c</span>
<span class="p_header">index 175c86bee3a9..16ca18547370 100644</span>
<span class="p_header">--- a/drivers/acpi/processor_idle.c</span>
<span class="p_header">+++ b/drivers/acpi/processor_idle.c</span>
<span class="p_chunk">@@ -61,8 +61,7 @@</span> <span class="p_context"> module_param(latency_factor, uint, 0644);</span>
 
 static DEFINE_PER_CPU(struct cpuidle_device *, acpi_cpuidle_device);
 
<span class="p_del">-static DEFINE_PER_CPU(struct acpi_processor_cx * [CPUIDLE_STATE_MAX],</span>
<span class="p_del">-								acpi_cstate);</span>
<span class="p_add">+static DEFINE_PER_CPU(struct acpi_processor_cx * [CPUIDLE_STATE_MAX], acpi_cstate);</span>
 
 static int disabled_by_idle_boot_param(void)
 {
<span class="p_header">diff --git a/drivers/xen/events/events_2l.c b/drivers/xen/events/events_2l.c</span>
<span class="p_header">index 7dd46312c180..7ffed4c62434 100644</span>
<span class="p_header">--- a/drivers/xen/events/events_2l.c</span>
<span class="p_header">+++ b/drivers/xen/events/events_2l.c</span>
<span class="p_chunk">@@ -38,8 +38,7 @@</span> <span class="p_context"></span>
 /* Find the first set bit in a evtchn mask */
 #define EVTCHN_FIRST_BIT(w) find_first_bit(BM(&amp;(w)), BITS_PER_EVTCHN_WORD)
 
<span class="p_del">-static DEFINE_PER_CPU(xen_ulong_t [EVTCHN_2L_NR_CHANNELS/BITS_PER_EVTCHN_WORD],</span>
<span class="p_del">-		      cpu_evtchn_mask);</span>
<span class="p_add">+static DEFINE_PER_CPU(xen_ulong_t [EVTCHN_2L_NR_CHANNELS/BITS_PER_EVTCHN_WORD], cpu_evtchn_mask);</span>
 
 static unsigned evtchn_2l_max_channels(void)
 {
<span class="p_header">diff --git a/kernel/locking/lockdep.c b/kernel/locking/lockdep.c</span>
<span class="p_header">index 60ace56618f6..96e5300fdf4b 100644</span>
<span class="p_header">--- a/kernel/locking/lockdep.c</span>
<span class="p_header">+++ b/kernel/locking/lockdep.c</span>
<span class="p_chunk">@@ -150,8 +150,7 @@</span> <span class="p_context"> static inline struct lock_class *hlock_class(struct held_lock *hlock)</span>
 }
 
 #ifdef CONFIG_LOCK_STAT
<span class="p_del">-static DEFINE_PER_CPU(struct lock_class_stats[MAX_LOCKDEP_KEYS],</span>
<span class="p_del">-		      cpu_lock_stats);</span>
<span class="p_add">+static DEFINE_PER_CPU(struct lock_class_stats[MAX_LOCKDEP_KEYS], cpu_lock_stats);</span>
 
 static inline u64 lockstat_clock(void)
 {
<span class="p_header">diff --git a/kernel/rcu/rcutorture.c b/kernel/rcu/rcutorture.c</span>
<span class="p_header">index adbb194e2b5d..3504c6e5b641 100644</span>
<span class="p_header">--- a/kernel/rcu/rcutorture.c</span>
<span class="p_header">+++ b/kernel/rcu/rcutorture.c</span>
<span class="p_chunk">@@ -130,10 +130,8 @@</span> <span class="p_context"> static struct rcu_torture __rcu *rcu_torture_current;</span>
 static unsigned long rcu_torture_current_version;
 static struct rcu_torture rcu_tortures[10 * RCU_TORTURE_PIPE_LEN];
 static DEFINE_SPINLOCK(rcu_torture_lock);
<span class="p_del">-static DEFINE_PER_CPU(long [RCU_TORTURE_PIPE_LEN + 1],</span>
<span class="p_del">-		      rcu_torture_count) = { 0 };</span>
<span class="p_del">-static DEFINE_PER_CPU(long [RCU_TORTURE_PIPE_LEN + 1],</span>
<span class="p_del">-		      rcu_torture_batch) = { 0 };</span>
<span class="p_add">+static DEFINE_PER_CPU(long [RCU_TORTURE_PIPE_LEN + 1], rcu_torture_count) = { 0 };</span>
<span class="p_add">+static DEFINE_PER_CPU(long [RCU_TORTURE_PIPE_LEN + 1], rcu_torture_batch) = { 0 };</span>
 static atomic_t rcu_torture_wcount[RCU_TORTURE_PIPE_LEN + 1];
 static atomic_t n_rcu_torture_alloc;
 static atomic_t n_rcu_torture_alloc_fail;
<span class="p_header">diff --git a/kernel/workqueue.c b/kernel/workqueue.c</span>
<span class="p_header">index c579dbab2e36..4111c5b9ba0c 100644</span>
<span class="p_header">--- a/kernel/workqueue.c</span>
<span class="p_header">+++ b/kernel/workqueue.c</span>
<span class="p_chunk">@@ -302,8 +302,7 @@</span> <span class="p_context"> static bool workqueue_freezing;		/* PL: have wqs started freezing? */</span>
 static cpumask_var_t wq_unbound_cpumask; /* PL: low level cpumask for all unbound wqs */
 
 /* the per-cpu worker pools */
<span class="p_del">-static DEFINE_PER_CPU_SHARED_ALIGNED(struct worker_pool [NR_STD_WORKER_POOLS],</span>
<span class="p_del">-				     cpu_worker_pools);</span>
<span class="p_add">+static DEFINE_PER_CPU_SHARED_ALIGNED(struct worker_pool [NR_STD_WORKER_POOLS], cpu_worker_pools);</span>
 
 static DEFINE_IDR(worker_pool_idr);	/* PR: idr of all pools */
 
<span class="p_header">diff --git a/net/ipv4/syncookies.c b/net/ipv4/syncookies.c</span>
<span class="p_header">index 4cbe9f0a4281..45f0ef03c388 100644</span>
<span class="p_header">--- a/net/ipv4/syncookies.c</span>
<span class="p_header">+++ b/net/ipv4/syncookies.c</span>
<span class="p_chunk">@@ -50,8 +50,7 @@</span> <span class="p_context"> static u32 syncookie_secret[2][16-4+SHA_DIGEST_WORDS] __read_mostly;</span>
 #define TSBITS	6
 #define TSMASK	(((__u32)1 &lt;&lt; TSBITS) - 1)
 
<span class="p_del">-static DEFINE_PER_CPU(__u32 [16 + 5 + SHA_WORKSPACE_WORDS],</span>
<span class="p_del">-		      ipv4_cookie_scratch);</span>
<span class="p_add">+static DEFINE_PER_CPU(__u32 [16 + 5 + SHA_WORKSPACE_WORDS], ipv4_cookie_scratch);</span>
 
 static u32 cookie_hash(__be32 saddr, __be32 daddr, __be16 sport, __be16 dport,
 		       u32 count, int c)
<span class="p_header">diff --git a/net/ipv6/syncookies.c b/net/ipv6/syncookies.c</span>
<span class="p_header">index bb8f2fa1c7fb..68591b8d301e 100644</span>
<span class="p_header">--- a/net/ipv6/syncookies.c</span>
<span class="p_header">+++ b/net/ipv6/syncookies.c</span>
<span class="p_chunk">@@ -41,8 +41,7 @@</span> <span class="p_context"> static __u16 const msstab[] = {</span>
 	9000 - 60,
 };
 
<span class="p_del">-static DEFINE_PER_CPU(__u32 [16 + 5 + SHA_WORKSPACE_WORDS],</span>
<span class="p_del">-		      ipv6_cookie_scratch);</span>
<span class="p_add">+static DEFINE_PER_CPU(__u32 [16 + 5 + SHA_WORKSPACE_WORDS], ipv6_cookie_scratch);</span>
 
 static u32 cookie_hash(const struct in6_addr *saddr, const struct in6_addr *daddr,
 		       __be16 sport, __be16 dport, u32 count, int c)
<span class="p_header">diff --git a/net/rds/page.c b/net/rds/page.c</span>
<span class="p_header">index 9005a2c920ee..6bfb9a59ea55 100644</span>
<span class="p_header">--- a/net/rds/page.c</span>
<span class="p_header">+++ b/net/rds/page.c</span>
<span class="p_chunk">@@ -42,8 +42,7 @@</span> <span class="p_context"> struct rds_page_remainder {</span>
 	unsigned long	r_offset;
 };
 
<span class="p_del">-static DEFINE_PER_CPU_SHARED_ALIGNED(struct rds_page_remainder,</span>
<span class="p_del">-				     rds_page_remainders);</span>
<span class="p_add">+static DEFINE_PER_CPU_SHARED_ALIGNED(struct rds_page_remainder, rds_page_remainders);</span>
 
 /*
  * returns 0 on success or -errno on failure.

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



