
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v9,3/3] iommu/arm-smmu-v3: Add workaround for Cavium ThunderX2 erratum #126 - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v9,3/3] iommu/arm-smmu-v3: Add workaround for Cavium ThunderX2 erratum #126</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=170805">Geetha sowjanya</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 22, 2017, 12:05 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1498133138-20244-4-git-send-email-gakula@caviumnetworks.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9804189/mbox/"
   >mbox</a>
|
   <a href="/patch/9804189/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9804189/">/patch/9804189/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	AFDF460386 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 22 Jun 2017 12:26:28 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9CA5D223B2
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 22 Jun 2017 12:26:28 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 9063E26538; Thu, 22 Jun 2017 12:26:28 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_HI autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C087D26861
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 22 Jun 2017 12:26:27 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753286AbdFVM0Y (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 22 Jun 2017 08:26:24 -0400
Received: from mail-co1nam03on0089.outbound.protection.outlook.com
	([104.47.40.89]:39239
	&quot;EHLO NAM03-CO1-obe.outbound.protection.outlook.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1753256AbdFVM0U (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 22 Jun 2017 08:26:20 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=CAVIUMNETWORKS.onmicrosoft.com; s=selector1-cavium-com;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version;
	bh=UyIddDIzq5Q86aRLx9GmkFXdZGPXLFujnwXwjGhLnns=;
	b=SdSBYZOrBKKWDxC1HeZF6t2Qj2IIeYwdgHyvg/1TgSWZkCTAv+sKxGt3hWK2mAJadH39tZVBOPM2DeyD+RT0+caNBNv+ejZeqntZdy3YWZXv3BKHCwLBM3O73xMTO3hGQtCdg/eMDgxfMn2V9YlDHB0hWZX5VHJ2k0qu/KrEQFM=
Authentication-Results: arm.com; dkim=none (message not signed)
	header.d=none; arm.com;
	dmarc=none action=none header.from=caviumnetworks.com; 
Received: from localhost.localdomain (14.140.2.178) by
	CY1PR0701MB2026.namprd07.prod.outlook.com (10.163.142.13) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256_P256) id
	15.1.1178.14; Thu, 22 Jun 2017 12:25:55 +0000
From: Geetha sowjanya &lt;gakula@caviumnetworks.com&gt;
To: will.deacon@arm.com, robin.murphy@arm.com,
	lorenzo.pieralisi@arm.com, hanjun.guo@linaro.org,
	sudeep.holla@arm.com, iommu@lists.linux-foundation.org
Cc: robert.moore@intel.com, lv.zheng@intel.com, rjw@rjwysocki.net,
	jcm@redhat.com, linux-kernel@vger.kernel.org,
	robert.richter@cavium.com, catalin.marinas@arm.com,
	sgoutham@cavium.com, linux-arm-kernel@lists.infradead.org,
	linux-acpi@vger.kernel.org, geethasowjanya.akula@gmail.com,
	devel@acpica.org, linu.cherian@cavium.com,
	Charles.Garcia-Tobin@arm.com, robh@kernel.org,
	Geetha Sowjanya &lt;geethasowjanya.akula@cavium.com&gt;,
	Geetha sowjanya &lt;gakula@caviumnetworks.com&gt;
Subject: [PATCH v9 3/3] iommu/arm-smmu-v3: Add workaround for Cavium
	ThunderX2 erratum #126
Date: Thu, 22 Jun 2017 17:35:38 +0530
Message-Id: &lt;1498133138-20244-4-git-send-email-gakula@caviumnetworks.com&gt;
X-Mailer: git-send-email 1.7.1
In-Reply-To: &lt;1498133138-20244-1-git-send-email-gakula@caviumnetworks.com&gt;
References: &lt;1498133138-20244-1-git-send-email-gakula@caviumnetworks.com&gt;
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [14.140.2.178]
X-ClientProxiedBy: BM1PR01CA0116.INDPRD01.PROD.OUTLOOK.COM (10.174.208.32) To
	CY1PR0701MB2026.namprd07.prod.outlook.com (10.163.142.13)
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: c57820a4-4ca1-4815-4705-08d4b969d8e3
X-Microsoft-Antispam: UriScan:; BCL:0; PCL:0;
	RULEID:(22001)(201703131423075)(201703031133081);
	SRVR:CY1PR0701MB2026; 
X-Microsoft-Exchange-Diagnostics: 1; CY1PR0701MB2026;
	3:VA4HKMpoHXdFcEjvAm9RpQEtPpnj2xqpZJI4P3FsBd+EtCVNqu6N4r8Wpj9Ekuzhv3oezgzez56nlYJiVXOhJfG3yvWIHDkl0Hf1upMBE60flUo/ZHIBK0F3yJP31pPhCmFoVtBefHZ89lYwConh+sDl7y54TGPP+uRFWbfDMzxITWvLYLSx5Ug1r51CGsoZMq/RO/zHnhUpwJrPUREAfYbZLTqRvsGBxq/pFyZGlEiXb2heswAFr0ngMxbULG35BtfnUMSVWYryBykaGivsBaHTkWig+W79/a/SsrhD0He1OTq2YqMLoHeWx8o9GndMiER23RNGkce6A6KTXyvMKA==
X-MS-TrafficTypeDiagnostic: CY1PR0701MB2026:
X-Microsoft-Exchange-Diagnostics: 1; CY1PR0701MB2026;
	25:km3kmcXIsfSUE/epSpme9QJY6Fo+FPAltC5M1R3hPgkN3L+MUItL1RKxSJaF7ul8MskvKu6rp3dJYtJJqm2mI5w+Y1SlrLRCQrWff+Q7cObnK1ugNAa42rQd6A4c/wfLxaJlu2lFXrMqcBUT6jETfx5Fkf7umHN9maOjoTyKWWAXahEvndD6ImuVB1H6rFteGMBjYQ9fnKlyr6y4Vql0E5sctXsnSxZiPQMTrhqc+MAAtEXr2LkHmkPdgp5MYT5z/V7j/OW/j4lMTVWCUiALJvKVSdCTClaH25ssmc2FlrBtQ2wst0PzkDr4eyBPY3WRKP29Q65flQewHi30B2Z8Wp9aKiwvp7A+CHkfi/iGcvFIRR+AUM/IYmf1XE88X7bX9SwjtJVr58YUyACL2+ud9NXGnzZqyO1dSG5VdpkcHhbafC8Gk7/ZE1lzdxmqYUDoeNoUKapaWo1YKJn1YbEDA5mqowuEiRzTdqG4hHT3HogsfqwwkqRwBNsdDMazqh+ITbaoiVxmiTEdRfsULXpc5TpfxWBqyS7wRqI6zZnCsgQ3uqnbsPKoTY04rBglGZYpx56eKeMPecKcDl0xJPF/VSbl3tkjmngEcfkttKz+2xoEzdQp+Y+/7rA1nUU8PSICnCAh9hh9FIqGRHPnSf2uJDZZ7lW6sb2eVrWQOfbQlye/ISx1POUVrcf2B4Fm0hZwTa+NhGVPmn35EeIQoU6Zrj8u2Ku0BJ2SHRhULM6fSTDa/gy/NwOwNJNKcdI8TSrV1QIZLbmwmPPVZ5yUoVhELC/7cZdVs31DEtWJDri5h3ciql+Fs/8CAo/JQ+EwP6/wDsMkwE7bWPJ2EyB79VMrW0F6LvjriLXTPZ7I85ACHBnh2ys2lQS32wFsiouOMjLncGFB672DlixiPE8GPVKH2hu992zfEY40+4KaQYI
	xpFE=
X-Microsoft-Exchange-Diagnostics: 1; CY1PR0701MB2026;
	31:qsJEXipM8UdKN504iv+aZkhau9BNrK9sO/CYcqCp+cupIb7zhUNdUOl77WQja+ygpjxtcKpmZxyoJhLeFmuCWQnITlBmxPP98nZQy+mCOkT36nP2XcSbQWm4wC0SMy5AmUBEukzg+iXjoi3ySy4AJaS40zByYMfUNqcXQPFur6BEfXyps7lYG8+IEIvNcTYVDjgPHWpa3LwgUWx3+ooj2T+bVLc83RjjSBSLE4plZ3wdY2RxMULgkd/Dw4wDoGDBLBCZv6TJwYMRnvTvh78N8pJwDCT/pTioVTDLPsVnma5ATj88C7D8L1MxJnKf2DLWZiYkOI565RWF8T3PJSEeHdia5profL7wveGtpaMacPSl1xtEMXoMyX1zcIPwHBdn0ftvQ49l5pEcFaFr40Xg7uG4t+MKPbHJT21TOQGa8KuT+YhltudU3AkL54nkZkXLDMYOIARxt165INALthH+vu1u+Ro7Fxurv22fSxgdFK8GF+Q0fRrM3bem61Gdl7o2k5/QvFgMWnBeW0MLS+4iNT7qGXsvmoUGYsLqwzHDGHXEkMKpodte/pbW1AA9ZDvAWr1c6BxbX3SoWQ56HD20CIXyYVP6ojTsNSRcUyW+H6LcubumJu4jwl8pvbZgY93atkEx/A1UMbQQmdCIVvekvVRNsz8ox35Xg7LobpOf0GU=
X-Microsoft-Exchange-Diagnostics: 1; CY1PR0701MB2026;
	20:AnX19vhFbnQJfTvxeoTNQBWAXll01UqDGZ6nIwF0gspATeap9ByLHJtQ6LFDw4pLugVKOVPsdSexPgo31UZG3MqCoc16En4aa6aCHFT4IWRf23JgIE6kVNNop/AxwTRSDgWW/ulVlsC0C6u0PHhxYO5NONLDy3zoF0PqAys+0aJa15nWUMKzkTDIoFSLHZvhBvdGE5CeSol0gRgVs+ooQ7eGbPnmgzqBrPRdMUL0ddATip7sKK0iaEPwG3dFjv3zbVyjmtZc/uDSLvkQRRBZxPWoTnkwIR+Pb70OxBoKJWgM3nBb9oR4ECrfxWRm8XJ1ybNYXHXJ5Bh/j1oREgUJ2FjyLAUaaKDqGYyE04QRc2XhS2CcgMEHDrqGz7uo2sCXvImYPDIIftiwpm9Ee7LpG0xTrECFtgQGDn5GWln74Jj2YPWTMtzHuOPIbgVT8zN19PFw/8D5iQamb7fFKbFvzTeubwcK7T4QLWhorCEN0CjTdMgaL6YwlOXTPR8ekJtdfnmbxDq4DEl8Qzrdh+cduakMI/LLaEsvbWsBDUtfHBqfn0ya/skCJXCW3680x4rmutsssdTLBZSsPV6hKDae2XU2XPJBXoGXCI2il/1gzR8=
X-Microsoft-Antispam-PRVS: &lt;CY1PR0701MB20263B2B256446315BB110BBE0DB0@CY1PR0701MB2026.namprd07.prod.outlook.com&gt;
X-Exchange-Antispam-Report-Test: UriScan:;
X-Exchange-Antispam-Report-CFA-Test: BCL:0; PCL:0;
	RULEID:(100000700101)(100105000095)(100000701101)(100105300095)(100000702101)(100105100095)(6040450)(601004)(2401047)(5005006)(8121501046)(3002001)(93006095)(100000703101)(100105400095)(10201501046)(6041248)(20161123558100)(201703131423075)(201702281528075)(201703061421075)(201703061406153)(20161123560025)(20161123562025)(20161123555025)(20161123564025)(6072148)(100000704101)(100105200095)(100000705101)(100105500095);
	SRVR:CY1PR0701MB2026; BCL:0; PCL:0;
	RULEID:(100000800101)(100110000095)(100000801101)(100110300095)(100000802101)(100110100095)(100000803101)(100110400095)(100000804101)(100110200095)(100000805101)(100110500095);
	SRVR:CY1PR0701MB2026; 
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1; CY1PR0701MB2026;
	4:7hBvsMAmf+DfWUMsEZp0jE4dF2nuqUxlmDhZWNVD?=
	=?us-ascii?Q?0EHCbK7mm1dif23Q6Ob//cud66vGYKOTrbXF/P4SLkkYu9BoayeflnEt9eoV?=
	=?us-ascii?Q?R907+cJFAOR1j+mh1DJfHe8G1XSoTtQ7URyViLU1n36YkegJsLpGsCwQ8GkK?=
	=?us-ascii?Q?0a868cdmRagt18vQEAs6Ep1lcjpFGlkdGZG2AOGmZHZnD0aqL5UrdQelu2Ri?=
	=?us-ascii?Q?ouOa/KxHEz1YUXm/DTAsad26xmVLcssJL/MR26vCedqgmlxvEysN22x9A9eh?=
	=?us-ascii?Q?RtB8zuz4msKvjBhu8DGBAfZbxkk3DqAErPVvyQNO1A6NeHNo+ZPS1Z4egIU/?=
	=?us-ascii?Q?YMnwraH6TDl/rRYDo8OjUnOlrfysemtlPGZAs45mC1MRlP8Y6uOYo8fEUex0?=
	=?us-ascii?Q?03N8V33nUCKnEP2dDHOnDveK3tzLaLNs9tvebwHaXlm2GloYCR43u7djJ3Wn?=
	=?us-ascii?Q?07WMUwb//5EC9jxD+GOmr5jFHy1ZenLiR31OoB0xVcnT94Vyv4qteJK/yBIG?=
	=?us-ascii?Q?NAvVRQY3GTOhluflO5XNPXn3mpag4apSH7ID9dRHV4SZqZi5NUEQc9tQp7dH?=
	=?us-ascii?Q?7ucB+UTeUXj85RW2Y5MqoFBh37pTJ0N7zTbRVzyUwiiVethFmHSs5v1jTQ0c?=
	=?us-ascii?Q?8Rj79dTdaZugC3/5UykR7mNiQTJnIwRyaU1Db0o9xZIwSR4dIGs5L4eztdkP?=
	=?us-ascii?Q?as5VqSOMM3hH0iAk0QuLm7aHZSPSCKZ5XCzcUUloCq4dfqdvy0WkjICzhE2/?=
	=?us-ascii?Q?s9PGvROG5CWL8r+i/k08kvwDNKCNnkJ47Eys9k7mApN7J0QawqXVW6AN0zcX?=
	=?us-ascii?Q?+sxTbuCTvRHOehom9Phydd+mh+cieoyM56tbtcS6YMT6JPvT2vjxbITS6Pql?=
	=?us-ascii?Q?88vpQQQ3LLvUhhDaCavnqQVgSJRJwvP0JZdvGx8NnsaMImed5OLSNaCRUMZy?=
	=?us-ascii?Q?yJ/3dFlmR1ReQPSf53suTWMAlCDuhmpXSAtrQU2phLKUf78Zv51gNZj3yvoF?=
	=?us-ascii?Q?mcFOF9wWfosAKGdr9Io37bA2jAXH+rajIdQ1LZZiEQ4eN+q9HKOUi6fKab0a?=
	=?us-ascii?Q?81krY5cbCkmNKiqmTAsu/ojFrFeCw6P9d1xGwC0WhlnYvXJ5LfTSOMCIvU41?=
	=?us-ascii?Q?d7wg6LHEAI8=3D?=
X-Forefront-PRVS: 03468CBA43
X-Forefront-Antispam-Report: SFV:NSPM;
	SFS:(10009020)(4630300001)(6009001)(39410400002)(39850400002)(39400400002)(39450400003)(39840400002)(54906002)(6506006)(66066001)(36756003)(47776003)(72206003)(110136004)(7736002)(189998001)(6512007)(3846002)(50226002)(81166006)(5009440100003)(8676002)(38730400002)(53936002)(6116002)(6486002)(6666003)(48376002)(42882006)(76176999)(50986999)(50466002)(33646002)(2950100002)(5003940100001)(2906002)(230783001)(7416002)(4326008)(305945005)(25786009)(5660300001)(478600001)(42186005)(110426004)(42262002);
	DIR:OUT; SFP:1101; SCL:1; SRVR:CY1PR0701MB2026;
	H:localhost.localdomain; FPR:; SPF:None; MLV:sfv; LANG:en; 
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1; CY1PR0701MB2026;
	23:KbkO5AqzUM6s6/FfdJuBSueI1aJP/CbY57CuA9A?=
	=?us-ascii?Q?KgAdWE3nqEBd5PlpjXZt7YUbuAgpW/CbU1drzgF7iSyN8ew960Gk2Tqwk2NH?=
	=?us-ascii?Q?Ii5h5tbXdd5GD6LANfpY6ZTjncmnkead9BURuoKnO/ZUZhVRfeM1cGnrvPjm?=
	=?us-ascii?Q?ri0oUhXVq8AGUawEmRJ8SsN84qfkovEYFNp6KLifGBzHxyv3YYp4ytSXBf/l?=
	=?us-ascii?Q?FR8lvw2owzeXdMNwrAglOrR27L+WQ9xM3iU2VGjrxVcHmjc/FmBwc98Ib059?=
	=?us-ascii?Q?TpYoVhd0HM5afI/0kZoWjEYcdHdRzUVTL/vs9mytugcNoceZ/0PzEJRVHs0w?=
	=?us-ascii?Q?hFjypUKIfKIwcT0GedT20xNwmgqJ04lblHdPSixQnAqbdCBQ7+Vu75zTG5Qa?=
	=?us-ascii?Q?qSR5o9JhpdGiUm0uAKHHWGw62qCxHtfX9g9QEOrSWQx97kMhmK17GaY60G4i?=
	=?us-ascii?Q?q9UAvBRkj4UoIL1f1nnwdVimTrHXFhdORrJZbLE9ZdNLxCwwTaPBPCegPZo+?=
	=?us-ascii?Q?rjMzun+Tnsk2mGPQR0LdonSL0OQjcgGwQS4155JScR4wrokHxiksqqFJUsFJ?=
	=?us-ascii?Q?R4cXCFmBgR7WVt16f1cx4NoP+IGa526i2hcnQZTHS5KhB/sPqDt3UFxwkY2k?=
	=?us-ascii?Q?2Wtmvjb2y8S22k/CBYwBB8H/AkqpL0RDrrYQ3aLA4OTZ0rdv9bOuXchJOLar?=
	=?us-ascii?Q?ou90lbXm3n4jsV06n85K4AsAL7ZVPaleXz0RZ2wHg51MKjOYoRA2avJrRXr8?=
	=?us-ascii?Q?nQny2k8HAc7bUo0cjD9d8fhVBw9prAt6JtAHHPkhp4Qm3atkonQ+AAgSM0wX?=
	=?us-ascii?Q?VMwRNI9R+Kr5gu/fqj4uCtjCDZkwlm8VjP/K2y8TJmJKi9V5pbY4IOMVUwZ4?=
	=?us-ascii?Q?t+dlaa1Sr2gia2B0+DaCSgePAJ5TSy5VIvprGDmq/RDM4GE1Ch7SAunVjbYo?=
	=?us-ascii?Q?pAC4FkRgg3jPHeJbpmhOTUXol4EDUTTKHh+iz8N5bh7/4Fcko+FsbAHOcsT4?=
	=?us-ascii?Q?Z4FZPdRtQDJtBZKgbDFthrBIRc+uFroYCmNkpSJ+Tt20kUprU5ZMm5BHqaAy?=
	=?us-ascii?Q?8gZ8ChLfVHQxMId+vTnDY49pBaMujG/7cFvLsuWioNNqCLWx2Z/B8aCb0s/w?=
	=?us-ascii?Q?hKJNcstH1Wf9sYX7EKzdTAddbJ9yVrfBlbK8z0boGtkgO01gFEYqljw=3D?=
	=?us-ascii?Q?=3D?=
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1; CY1PR0701MB2026;
	6:yCdXWk1Oct8/vuY5Zr1U3qWxC5wfQwH8aslsZz+C?=
	=?us-ascii?Q?cub+ioHq5IZaZLE68A6GBPKaE6i1c48JziGN6GnGbAImRqJqak8Bi/ywdb7O?=
	=?us-ascii?Q?PyIANp0Pc+jAfGUFKOx9u0ASeR3FBtNTeqEajW4l10UpxQHEbI6jZADw21Iy?=
	=?us-ascii?Q?IdBU2Ux6+xPlZrIcBbcLfysbDaRGAz4Ao7GF+cpe2aKbxRnRUJXiCr7+jXLh?=
	=?us-ascii?Q?GGRd26RakIr5MJMNOAKiZtlwnFRDxasF+lXQ1ZZUacT4pAiqMIzjkKHblHnx?=
	=?us-ascii?Q?hxQaG3LVPN5KS3dnch4uE2r1ul94c6TJh1d1/l9K0hVmOGO0JTDWUaP0XpOQ?=
	=?us-ascii?Q?LovO9BOTt8DvYV6437NZ0oC7zP6HQn2JkChY69mkgp/utIQcXg9Sa5a89zde?=
	=?us-ascii?Q?+MQkzXUVUSVU7DshT35HArifQjqUW/VJWo2x6j9i2wUEBQ+Z9oVGnMkRY83p?=
	=?us-ascii?Q?JR/6fDsSmzd6zUkCwWPDsxtnIAuvo5hkyPFd33yXDQvqVfgpSPUGQ4DPQ8Gs?=
	=?us-ascii?Q?z6nvapubwX8kppRM/hES8ogu0y9T0OhG2T7qBRNvZjbuB6SYxDtyk6G5JxA8?=
	=?us-ascii?Q?0ecTCpLD4rxsWHWDihIbkQIUOo7Jt+IpZQhPHqtAxShLVMAdk1ccOuDzcwnM?=
	=?us-ascii?Q?744cKulQWTHZTLwtrFbUiiMsM5eAHDyfOeiM8tu8xnujL9/ByfmhIkAl5rgZ?=
	=?us-ascii?Q?sPWONzeNtDRNrfzPW0E3a5IXMUpAJSdYyDfBx2hbQA/sJb/8rXuKEHk+A+f0?=
	=?us-ascii?Q?VfHOgjuli33myBNmEIq0fneqmnnMc0eUL8d51YCMV1n60COgyfywfG9Ieu4/?=
	=?us-ascii?Q?SQ2r5PQ2eX/I8htuDnDKYYL6A9FddiMGwafww+cV/W5fpFTVpsUROM1FEif9?=
	=?us-ascii?Q?U2YAilmB23XrZJG0DwsEfg85KbEFmNEE5mSb6KXHI4KPtx7fdSNI719Pom3V?=
	=?us-ascii?Q?WsIb2xAeRRXfdNECFWu1Q7soh6SfABdCCHd3sB2JaT1aezcvfWQhC90yBA3I?=
	=?us-ascii?Q?U6w=3D?=
X-Microsoft-Exchange-Diagnostics: 1; CY1PR0701MB2026;
	5:l8VsTkFK6O3IBVj9hrEx7xEWvpAHSzvb87FEzVdkmR+p+2QtUx109W0ctyyVzj9S/JBrt59v2EM0bWDK+2Frj7+4NvIqtFqiyJeblcTt8bKxFGiE2mdkDprH6gSpFXeEseM1YaUdUqPKguU9ju5h2BSmc0s05dvdDQX/hXPLODYn2DetXRkB7p3oFf1XWel4RCe2DKMs61dytXLyFt9H6nJFxq4/9+pnKevRshiEQEQzykGpPQZMoxB0v50HG5BZmm2GXNW6GBeT2zceQNF2W6glahrRUBaWmADGaC26SKttz2XqlbCbFyAc0RutDRcGOPRl/ueCXN1dcTIni6Sz2hTl+qqgIcTIF03fIYZaGic4stMgO/JBG6Ub/WDluXOfbpwI0oeniPefoqzcJ4fHLsEsZfDiZquf4JEph+HuRNLk4i1eDOeLWXgStF/LDKQU0iwofPvLs0cjS5HHQFKmTvzCq8UmE4O2fl/Cy2vE5J0RgMvkjQ8/Fz0ZKQ6f5KxH;
	24:uQMMUc6Bs5CZ6MEN7z4+ZAuFuFCS6iVH2oLYRiTexlly8zE4BEWW7KY4zTd9qMKpm7Ns6qsJOR7QifN9Aa8oPVVAT9kpX6V67Xz9JK0xe2Q=
SpamDiagnosticOutput: 1:99
SpamDiagnosticMetadata: NSPM
X-Microsoft-Exchange-Diagnostics: 1; CY1PR0701MB2026;
	7:MFA9HXnXAnn4tDPocpD8I6nR9GFp2zAe4q7e8MRPRLaxHS2TzTE7OVvno52+w8ox8Mvppx7iU7WPnCJEbw3A2R6xLikZiQgfOHgLf+PxmtrBPaiG0UqXL1UYQw1SSO8ZrmCl0Ru3ku/df2cT0AmLSnE62T5PyuNEkegANL2TnGsfGehZoBb/FdmAfUeDSAChC5g16OZjPyjfGSnB+lKe4332TSomvh8hS/zLOxccZH0vGvspeVfVdmoqZ5zpJd6zqLQk5fEfa/SrBJOllk2BoPmMya2nw90amET89tYBAlJHJgOD6gUv56FN5afN7T4JmuJatXfqlDxFqjvGhfEGdvowx3jIdw1n/GaHPUMOice5vQjwCTcIZZb3ho1AqBewFZG7r4NIrm+wYdbaoTPjXBCFKuDI3KU+xa8z2k0iIVqzSieAtreUvr495hupGsNtlTRvpHGkHK7PL5Av8Y91IEowVQlw7hO5r+xTI5oO09AjvbU2wUfYGSmR27Bxw63cAL7svABfiPqPI4nhitGLgUnK5xVJTg1w+i/KwX62bUQW+HrlbSMGKMGJZFp8/c8/CX2YX1H9Sz7fsx/dUfVQ/FKZTlBfg+jKUIYp3z+d8yNucWM28drmhQHLjbc0Rx4NVC2ZaC4z3+z0VyKBgBRkBUuS41twjYPmMMdR9fjZC3PdhynvuC+sBoR0eTNMCZ+3+TQnVcotB0AL6aAiGQpsL+VItQMLu2H0mz3pLOde7npl7OUHoEIAe3uu91UGtCbpbECRkNbjqEbSoc7If2LXYYUVWUMrxinRksAsHD5MDQw=
X-OriginatorOrg: caviumnetworks.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 22 Jun 2017 12:25:55.7557
	(UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CY1PR0701MB2026
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=170805">Geetha sowjanya</a> - June 22, 2017, 12:05 p.m.</div>
<pre class="content">
<span class="from">From: Geetha Sowjanya &lt;geethasowjanya.akula@cavium.com&gt;</span>

Cavium ThunderX2 SMMU doesn&#39;t support MSI and also doesn&#39;t have unique irq
lines for gerror, eventq and cmdq-sync.

New named irq &quot;combined&quot; is set as a errata workaround, which allows to
share the irq line by register single irq handler for all the interrupts.
<span class="signed-off-by">
Signed-off-by: Geetha sowjanya &lt;gakula@caviumnetworks.com&gt;</span>
---
 Documentation/arm64/silicon-errata.txt             |    1 +
 .../devicetree/bindings/iommu/arm,smmu-v3.txt      |    1 +
 drivers/acpi/arm64/iort.c                          |   54 +++++++----
 drivers/iommu/arm-smmu-v3.c                        |  105 +++++++++++++++-----
 4 files changed, 116 insertions(+), 45 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7096">Will Deacon</a> - June 22, 2017, 6:22 p.m.</div>
<pre class="content">
Hi Geetha,

On Thu, Jun 22, 2017 at 05:35:38PM +0530, Geetha sowjanya wrote:
<span class="quote">&gt; From: Geetha Sowjanya &lt;geethasowjanya.akula@cavium.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Cavium ThunderX2 SMMU doesn&#39;t support MSI and also doesn&#39;t have unique irq</span>
<span class="quote">&gt; lines for gerror, eventq and cmdq-sync.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; New named irq &quot;combined&quot; is set as a errata workaround, which allows to</span>
<span class="quote">&gt; share the irq line by register single irq handler for all the interrupts.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Geetha sowjanya &lt;gakula@caviumnetworks.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  Documentation/arm64/silicon-errata.txt             |    1 +</span>
<span class="quote">&gt;  .../devicetree/bindings/iommu/arm,smmu-v3.txt      |    1 +</span>
<span class="quote">&gt;  drivers/acpi/arm64/iort.c                          |   54 +++++++----</span>
<span class="quote">&gt;  drivers/iommu/arm-smmu-v3.c                        |  105 +++++++++++++++-----</span>
<span class="quote">&gt;  4 files changed, 116 insertions(+), 45 deletions(-)</span>

Thanks, this looks much better. Two things to change below, and I&#39;d like to
see Lorenzo ack the iort changes.
<span class="quote">
&gt; diff --git a/Documentation/arm64/silicon-errata.txt b/Documentation/arm64/silicon-errata.txt</span>
<span class="quote">&gt; index 4693a32..42422f6 100644</span>
<span class="quote">&gt; --- a/Documentation/arm64/silicon-errata.txt</span>
<span class="quote">&gt; +++ b/Documentation/arm64/silicon-errata.txt</span>
<span class="quote">&gt; @@ -63,6 +63,7 @@ stable kernels.</span>
<span class="quote">&gt;  | Cavium         | ThunderX Core   | #27456          | CAVIUM_ERRATUM_27456        |</span>
<span class="quote">&gt;  | Cavium         | ThunderX SMMUv2 | #27704          | N/A                         |</span>
<span class="quote">&gt;  | Cavium         | ThunderX2 SMMUv3| #74             | N/A                         |</span>
<span class="quote">&gt; +| Cavium         | ThunderX2 SMMUv3| #126            | N/A                         |</span>
<span class="quote">&gt;  |                |                 |                 |                             |</span>
<span class="quote">&gt;  | Freescale/NXP  | LS2080A/LS1043A | A-008585        | FSL_ERRATUM_A008585         |</span>
<span class="quote">&gt;  |                |                 |                 |                             |</span>
<span class="quote">&gt; diff --git a/Documentation/devicetree/bindings/iommu/arm,smmu-v3.txt b/Documentation/devicetree/bindings/iommu/arm,smmu-v3.txt</span>
<span class="quote">&gt; index 6ecc48c..a5a1ca4 100644</span>
<span class="quote">&gt; --- a/Documentation/devicetree/bindings/iommu/arm,smmu-v3.txt</span>
<span class="quote">&gt; +++ b/Documentation/devicetree/bindings/iommu/arm,smmu-v3.txt</span>
<span class="quote">&gt; @@ -26,6 +26,7 @@ the PCIe specification.</span>
<span class="quote">&gt;                        * &quot;priq&quot;      - PRI Queue not empty</span>
<span class="quote">&gt;                        * &quot;cmdq-sync&quot; - CMD_SYNC complete</span>
<span class="quote">&gt;                        * &quot;gerror&quot;    - Global Error activated</span>
<span class="quote">&gt; +                      * &quot;combined&quot;  - Handles above all 4 interrupts.</span>

Please make it clear that:

  * The combined interrupt is optional, and should only be provided if
    the hardware supports just a single, combined interrupt line.

  * If provided, then the combined interrupt will be used in preference
    to any others.
<span class="quote">
&gt;  - #iommu-cells      : See the generic IOMMU binding described in</span>
<span class="quote">&gt;                          devicetree/bindings/pci/pci-iommu.txt</span>
<span class="quote">&gt; diff --git a/drivers/acpi/arm64/iort.c b/drivers/acpi/arm64/iort.c</span>
<span class="quote">&gt; index c166f3e..43e1f13 100644</span>
<span class="quote">&gt; --- a/drivers/acpi/arm64/iort.c</span>
<span class="quote">&gt; +++ b/drivers/acpi/arm64/iort.c</span>
<span class="quote">&gt; @@ -828,6 +828,18 @@ static int __init arm_smmu_v3_count_resources(struct acpi_iort_node *node)</span>
<span class="quote">&gt;  	return num_res;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +static bool arm_smmu_v3_is_combined_irq(struct acpi_iort_smmu_v3 *smmu)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	/*</span>
<span class="quote">&gt; +	 * Cavium ThunderX2 implementation doesn&#39;t not support unique</span>
<span class="quote">&gt; +	 * irq line. Use single irq line for all the SMMUv3 interrupts.</span>
<span class="quote">&gt; +	 */</span>
<span class="quote">&gt; +	if (smmu-&gt;model == ACPI_IORT_SMMU_V3_CAVIUM_CN99XX)</span>
<span class="quote">&gt; +		return true;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	return false;</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  static unsigned long arm_smmu_v3_resource_size(struct acpi_iort_smmu_v3 *smmu)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	/*</span>
<span class="quote">&gt; @@ -855,26 +867,32 @@ static void __init arm_smmu_v3_init_resources(struct resource *res,</span>
<span class="quote">&gt;  	res[num_res].flags = IORESOURCE_MEM;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	num_res++;</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	if (smmu-&gt;event_gsiv)</span>
<span class="quote">&gt; -		acpi_iort_register_irq(smmu-&gt;event_gsiv, &quot;eventq&quot;,</span>
<span class="quote">&gt; -				       ACPI_EDGE_SENSITIVE,</span>
<span class="quote">&gt; -				       &amp;res[num_res++]);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	if (smmu-&gt;pri_gsiv)</span>
<span class="quote">&gt; -		acpi_iort_register_irq(smmu-&gt;pri_gsiv, &quot;priq&quot;,</span>
<span class="quote">&gt; -				       ACPI_EDGE_SENSITIVE,</span>
<span class="quote">&gt; -				       &amp;res[num_res++]);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	if (smmu-&gt;gerr_gsiv)</span>
<span class="quote">&gt; -		acpi_iort_register_irq(smmu-&gt;gerr_gsiv, &quot;gerror&quot;,</span>
<span class="quote">&gt; -				       ACPI_EDGE_SENSITIVE,</span>
<span class="quote">&gt; -				       &amp;res[num_res++]);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	if (smmu-&gt;sync_gsiv)</span>
<span class="quote">&gt; -		acpi_iort_register_irq(smmu-&gt;sync_gsiv, &quot;cmdq-sync&quot;,</span>
<span class="quote">&gt; +	if (arm_smmu_v3_is_combined_irq(smmu))</span>
<span class="quote">&gt; +		acpi_iort_register_irq(smmu-&gt;event_gsiv, &quot;combined&quot;,</span>
<span class="quote">&gt;  				       ACPI_EDGE_SENSITIVE,</span>
<span class="quote">&gt;  				       &amp;res[num_res++]);</span>
<span class="quote">&gt; +	else {</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +		if (smmu-&gt;event_gsiv)</span>
<span class="quote">&gt; +			acpi_iort_register_irq(smmu-&gt;event_gsiv, &quot;eventq&quot;,</span>
<span class="quote">&gt; +					       ACPI_EDGE_SENSITIVE,</span>
<span class="quote">&gt; +					       &amp;res[num_res++]);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +		if (smmu-&gt;pri_gsiv)</span>
<span class="quote">&gt; +			acpi_iort_register_irq(smmu-&gt;pri_gsiv, &quot;priq&quot;,</span>
<span class="quote">&gt; +					       ACPI_EDGE_SENSITIVE,</span>
<span class="quote">&gt; +					       &amp;res[num_res++]);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +		if (smmu-&gt;gerr_gsiv)</span>
<span class="quote">&gt; +			acpi_iort_register_irq(smmu-&gt;gerr_gsiv, &quot;gerror&quot;,</span>
<span class="quote">&gt; +					       ACPI_EDGE_SENSITIVE,</span>
<span class="quote">&gt; +					       &amp;res[num_res++]);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +		if (smmu-&gt;sync_gsiv)</span>
<span class="quote">&gt; +			acpi_iort_register_irq(smmu-&gt;sync_gsiv, &quot;cmdq-sync&quot;,</span>
<span class="quote">&gt; +					       ACPI_EDGE_SENSITIVE,</span>
<span class="quote">&gt; +					       &amp;res[num_res++]);</span>
<span class="quote">&gt; +	}</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  static bool __init arm_smmu_v3_is_coherent(struct acpi_iort_node *node)</span>
<span class="quote">&gt; diff --git a/drivers/iommu/arm-smmu-v3.c b/drivers/iommu/arm-smmu-v3.c</span>
<span class="quote">&gt; index 2dea4a9..0f83f7d 100644</span>
<span class="quote">&gt; --- a/drivers/iommu/arm-smmu-v3.c</span>
<span class="quote">&gt; +++ b/drivers/iommu/arm-smmu-v3.c</span>
<span class="quote">&gt; @@ -605,6 +605,7 @@ struct arm_smmu_device {</span>
<span class="quote">&gt;  	struct arm_smmu_priq		priq;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	int				gerr_irq;</span>
<span class="quote">&gt; +	int				combined_irq;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	unsigned long			ias; /* IPA */</span>
<span class="quote">&gt;  	unsigned long			oas; /* PA */</span>
<span class="quote">&gt; @@ -1314,6 +1315,29 @@ static irqreturn_t arm_smmu_gerror_handler(int irq, void *dev)</span>
<span class="quote">&gt;  	return IRQ_HANDLED;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +static irqreturn_t arm_smmu_combined_irq_thread(int irq, void *dev)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	struct arm_smmu_device *smmu = dev;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	arm_smmu_evtq_thread(irq, dev);</span>
<span class="quote">&gt; +	if (smmu-&gt;features &amp; ARM_SMMU_FEAT_PRI)</span>
<span class="quote">&gt; +		arm_smmu_priq_thread(irq, dev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	return IRQ_HANDLED;</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +static irqreturn_t arm_smmu_combined_irq_handler(int irq, void *dev)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	irqreturn_t ret;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	ret = arm_smmu_gerror_handler(irq, dev);</span>
<span class="quote">&gt; +	if (ret == IRQ_NONE) {</span>

I don&#39;t think you can play that trick if the irq is an edge-triggered
interrupt, since you could lose an interrupt that fired whilst we were
in the handler.

The easiest thing is to always run the gerror and cmdq_sync handlers, and
then always return IRQ_WAKE_THREAD.

Will
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=174071">Geetha Akula</a> - June 23, 2017, 6:21 a.m.</div>
<pre class="content">
On Thu, Jun 22, 2017 at 11:52 PM, Will Deacon &lt;will.deacon@arm.com&gt; wrote:
<span class="quote">&gt; Hi Geetha,</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; On Thu, Jun 22, 2017 at 05:35:38PM +0530, Geetha sowjanya wrote:</span>
<span class="quote">&gt;&gt; From: Geetha Sowjanya &lt;geethasowjanya.akula@cavium.com&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Cavium ThunderX2 SMMU doesn&#39;t support MSI and also doesn&#39;t have unique irq</span>
<span class="quote">&gt;&gt; lines for gerror, eventq and cmdq-sync.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; New named irq &quot;combined&quot; is set as a errata workaround, which allows to</span>
<span class="quote">&gt;&gt; share the irq line by register single irq handler for all the interrupts.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Geetha sowjanya &lt;gakula@caviumnetworks.com&gt;</span>
<span class="quote">&gt;&gt; ---</span>
<span class="quote">&gt;&gt;  Documentation/arm64/silicon-errata.txt             |    1 +</span>
<span class="quote">&gt;&gt;  .../devicetree/bindings/iommu/arm,smmu-v3.txt      |    1 +</span>
<span class="quote">&gt;&gt;  drivers/acpi/arm64/iort.c                          |   54 +++++++----</span>
<span class="quote">&gt;&gt;  drivers/iommu/arm-smmu-v3.c                        |  105 +++++++++++++++-----</span>
<span class="quote">&gt;&gt;  4 files changed, 116 insertions(+), 45 deletions(-)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Thanks, this looks much better. Two things to change below, and I&#39;d like to</span>
<span class="quote">&gt; see Lorenzo ack the iort changes.</span>

Thanks Will. I have resend the patch with suggested changes.


Geetha.
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; diff --git a/Documentation/arm64/silicon-errata.txt b/Documentation/arm64/silicon-errata.txt</span>
<span class="quote">&gt;&gt; index 4693a32..42422f6 100644</span>
<span class="quote">&gt;&gt; --- a/Documentation/arm64/silicon-errata.txt</span>
<span class="quote">&gt;&gt; +++ b/Documentation/arm64/silicon-errata.txt</span>
<span class="quote">&gt;&gt; @@ -63,6 +63,7 @@ stable kernels.</span>
<span class="quote">&gt;&gt;  | Cavium         | ThunderX Core   | #27456          | CAVIUM_ERRATUM_27456        |</span>
<span class="quote">&gt;&gt;  | Cavium         | ThunderX SMMUv2 | #27704          | N/A                         |</span>
<span class="quote">&gt;&gt;  | Cavium         | ThunderX2 SMMUv3| #74             | N/A                         |</span>
<span class="quote">&gt;&gt; +| Cavium         | ThunderX2 SMMUv3| #126            | N/A                         |</span>
<span class="quote">&gt;&gt;  |                |                 |                 |                             |</span>
<span class="quote">&gt;&gt;  | Freescale/NXP  | LS2080A/LS1043A | A-008585        | FSL_ERRATUM_A008585         |</span>
<span class="quote">&gt;&gt;  |                |                 |                 |                             |</span>
<span class="quote">&gt;&gt; diff --git a/Documentation/devicetree/bindings/iommu/arm,smmu-v3.txt b/Documentation/devicetree/bindings/iommu/arm,smmu-v3.txt</span>
<span class="quote">&gt;&gt; index 6ecc48c..a5a1ca4 100644</span>
<span class="quote">&gt;&gt; --- a/Documentation/devicetree/bindings/iommu/arm,smmu-v3.txt</span>
<span class="quote">&gt;&gt; +++ b/Documentation/devicetree/bindings/iommu/arm,smmu-v3.txt</span>
<span class="quote">&gt;&gt; @@ -26,6 +26,7 @@ the PCIe specification.</span>
<span class="quote">&gt;&gt;                        * &quot;priq&quot;      - PRI Queue not empty</span>
<span class="quote">&gt;&gt;                        * &quot;cmdq-sync&quot; - CMD_SYNC complete</span>
<span class="quote">&gt;&gt;                        * &quot;gerror&quot;    - Global Error activated</span>
<span class="quote">&gt;&gt; +                      * &quot;combined&quot;  - Handles above all 4 interrupts.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Please make it clear that:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   * The combined interrupt is optional, and should only be provided if</span>
<span class="quote">&gt;     the hardware supports just a single, combined interrupt line.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   * If provided, then the combined interrupt will be used in preference</span>
<span class="quote">&gt;     to any others.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt;  - #iommu-cells      : See the generic IOMMU binding described in</span>
<span class="quote">&gt;&gt;                          devicetree/bindings/pci/pci-iommu.txt</span>
<span class="quote">&gt;&gt; diff --git a/drivers/acpi/arm64/iort.c b/drivers/acpi/arm64/iort.c</span>
<span class="quote">&gt;&gt; index c166f3e..43e1f13 100644</span>
<span class="quote">&gt;&gt; --- a/drivers/acpi/arm64/iort.c</span>
<span class="quote">&gt;&gt; +++ b/drivers/acpi/arm64/iort.c</span>
<span class="quote">&gt;&gt; @@ -828,6 +828,18 @@ static int __init arm_smmu_v3_count_resources(struct acpi_iort_node *node)</span>
<span class="quote">&gt;&gt;       return num_res;</span>
<span class="quote">&gt;&gt;  }</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; +static bool arm_smmu_v3_is_combined_irq(struct acpi_iort_smmu_v3 *smmu)</span>
<span class="quote">&gt;&gt; +{</span>
<span class="quote">&gt;&gt; +     /*</span>
<span class="quote">&gt;&gt; +      * Cavium ThunderX2 implementation doesn&#39;t not support unique</span>
<span class="quote">&gt;&gt; +      * irq line. Use single irq line for all the SMMUv3 interrupts.</span>
<span class="quote">&gt;&gt; +      */</span>
<span class="quote">&gt;&gt; +     if (smmu-&gt;model == ACPI_IORT_SMMU_V3_CAVIUM_CN99XX)</span>
<span class="quote">&gt;&gt; +             return true;</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +     return false;</span>
<span class="quote">&gt;&gt; +}</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt;  static unsigned long arm_smmu_v3_resource_size(struct acpi_iort_smmu_v3 *smmu)</span>
<span class="quote">&gt;&gt;  {</span>
<span class="quote">&gt;&gt;       /*</span>
<span class="quote">&gt;&gt; @@ -855,26 +867,32 @@ static void __init arm_smmu_v3_init_resources(struct resource *res,</span>
<span class="quote">&gt;&gt;       res[num_res].flags = IORESOURCE_MEM;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;       num_res++;</span>
<span class="quote">&gt;&gt; -</span>
<span class="quote">&gt;&gt; -     if (smmu-&gt;event_gsiv)</span>
<span class="quote">&gt;&gt; -             acpi_iort_register_irq(smmu-&gt;event_gsiv, &quot;eventq&quot;,</span>
<span class="quote">&gt;&gt; -                                    ACPI_EDGE_SENSITIVE,</span>
<span class="quote">&gt;&gt; -                                    &amp;res[num_res++]);</span>
<span class="quote">&gt;&gt; -</span>
<span class="quote">&gt;&gt; -     if (smmu-&gt;pri_gsiv)</span>
<span class="quote">&gt;&gt; -             acpi_iort_register_irq(smmu-&gt;pri_gsiv, &quot;priq&quot;,</span>
<span class="quote">&gt;&gt; -                                    ACPI_EDGE_SENSITIVE,</span>
<span class="quote">&gt;&gt; -                                    &amp;res[num_res++]);</span>
<span class="quote">&gt;&gt; -</span>
<span class="quote">&gt;&gt; -     if (smmu-&gt;gerr_gsiv)</span>
<span class="quote">&gt;&gt; -             acpi_iort_register_irq(smmu-&gt;gerr_gsiv, &quot;gerror&quot;,</span>
<span class="quote">&gt;&gt; -                                    ACPI_EDGE_SENSITIVE,</span>
<span class="quote">&gt;&gt; -                                    &amp;res[num_res++]);</span>
<span class="quote">&gt;&gt; -</span>
<span class="quote">&gt;&gt; -     if (smmu-&gt;sync_gsiv)</span>
<span class="quote">&gt;&gt; -             acpi_iort_register_irq(smmu-&gt;sync_gsiv, &quot;cmdq-sync&quot;,</span>
<span class="quote">&gt;&gt; +     if (arm_smmu_v3_is_combined_irq(smmu))</span>
<span class="quote">&gt;&gt; +             acpi_iort_register_irq(smmu-&gt;event_gsiv, &quot;combined&quot;,</span>
<span class="quote">&gt;&gt;                                      ACPI_EDGE_SENSITIVE,</span>
<span class="quote">&gt;&gt;                                      &amp;res[num_res++]);</span>
<span class="quote">&gt;&gt; +     else {</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +             if (smmu-&gt;event_gsiv)</span>
<span class="quote">&gt;&gt; +                     acpi_iort_register_irq(smmu-&gt;event_gsiv, &quot;eventq&quot;,</span>
<span class="quote">&gt;&gt; +                                            ACPI_EDGE_SENSITIVE,</span>
<span class="quote">&gt;&gt; +                                            &amp;res[num_res++]);</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +             if (smmu-&gt;pri_gsiv)</span>
<span class="quote">&gt;&gt; +                     acpi_iort_register_irq(smmu-&gt;pri_gsiv, &quot;priq&quot;,</span>
<span class="quote">&gt;&gt; +                                            ACPI_EDGE_SENSITIVE,</span>
<span class="quote">&gt;&gt; +                                            &amp;res[num_res++]);</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +             if (smmu-&gt;gerr_gsiv)</span>
<span class="quote">&gt;&gt; +                     acpi_iort_register_irq(smmu-&gt;gerr_gsiv, &quot;gerror&quot;,</span>
<span class="quote">&gt;&gt; +                                            ACPI_EDGE_SENSITIVE,</span>
<span class="quote">&gt;&gt; +                                            &amp;res[num_res++]);</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +             if (smmu-&gt;sync_gsiv)</span>
<span class="quote">&gt;&gt; +                     acpi_iort_register_irq(smmu-&gt;sync_gsiv, &quot;cmdq-sync&quot;,</span>
<span class="quote">&gt;&gt; +                                            ACPI_EDGE_SENSITIVE,</span>
<span class="quote">&gt;&gt; +                                            &amp;res[num_res++]);</span>
<span class="quote">&gt;&gt; +     }</span>
<span class="quote">&gt;&gt;  }</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;  static bool __init arm_smmu_v3_is_coherent(struct acpi_iort_node *node)</span>
<span class="quote">&gt;&gt; diff --git a/drivers/iommu/arm-smmu-v3.c b/drivers/iommu/arm-smmu-v3.c</span>
<span class="quote">&gt;&gt; index 2dea4a9..0f83f7d 100644</span>
<span class="quote">&gt;&gt; --- a/drivers/iommu/arm-smmu-v3.c</span>
<span class="quote">&gt;&gt; +++ b/drivers/iommu/arm-smmu-v3.c</span>
<span class="quote">&gt;&gt; @@ -605,6 +605,7 @@ struct arm_smmu_device {</span>
<span class="quote">&gt;&gt;       struct arm_smmu_priq            priq;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;       int                             gerr_irq;</span>
<span class="quote">&gt;&gt; +     int                             combined_irq;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;       unsigned long                   ias; /* IPA */</span>
<span class="quote">&gt;&gt;       unsigned long                   oas; /* PA */</span>
<span class="quote">&gt;&gt; @@ -1314,6 +1315,29 @@ static irqreturn_t arm_smmu_gerror_handler(int irq, void *dev)</span>
<span class="quote">&gt;&gt;       return IRQ_HANDLED;</span>
<span class="quote">&gt;&gt;  }</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; +static irqreturn_t arm_smmu_combined_irq_thread(int irq, void *dev)</span>
<span class="quote">&gt;&gt; +{</span>
<span class="quote">&gt;&gt; +     struct arm_smmu_device *smmu = dev;</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +     arm_smmu_evtq_thread(irq, dev);</span>
<span class="quote">&gt;&gt; +     if (smmu-&gt;features &amp; ARM_SMMU_FEAT_PRI)</span>
<span class="quote">&gt;&gt; +             arm_smmu_priq_thread(irq, dev);</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +     return IRQ_HANDLED;</span>
<span class="quote">&gt;&gt; +}</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +static irqreturn_t arm_smmu_combined_irq_handler(int irq, void *dev)</span>
<span class="quote">&gt;&gt; +{</span>
<span class="quote">&gt;&gt; +     irqreturn_t ret;</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +     ret = arm_smmu_gerror_handler(irq, dev);</span>
<span class="quote">&gt;&gt; +     if (ret == IRQ_NONE) {</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; I don&#39;t think you can play that trick if the irq is an edge-triggered</span>
<span class="quote">&gt; interrupt, since you could lose an interrupt that fired whilst we were</span>
<span class="quote">&gt; in the handler.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; The easiest thing is to always run the gerror and cmdq_sync handlers, and</span>
<span class="quote">&gt; then always return IRQ_WAKE_THREAD.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Will</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/Documentation/arm64/silicon-errata.txt b/Documentation/arm64/silicon-errata.txt</span>
<span class="p_header">index 4693a32..42422f6 100644</span>
<span class="p_header">--- a/Documentation/arm64/silicon-errata.txt</span>
<span class="p_header">+++ b/Documentation/arm64/silicon-errata.txt</span>
<span class="p_chunk">@@ -63,6 +63,7 @@</span> <span class="p_context"> stable kernels.</span>
 | Cavium         | ThunderX Core   | #27456          | CAVIUM_ERRATUM_27456        |
 | Cavium         | ThunderX SMMUv2 | #27704          | N/A                         |
 | Cavium         | ThunderX2 SMMUv3| #74             | N/A                         |
<span class="p_add">+| Cavium         | ThunderX2 SMMUv3| #126            | N/A                         |</span>
 |                |                 |                 |                             |
 | Freescale/NXP  | LS2080A/LS1043A | A-008585        | FSL_ERRATUM_A008585         |
 |                |                 |                 |                             |
<span class="p_header">diff --git a/Documentation/devicetree/bindings/iommu/arm,smmu-v3.txt b/Documentation/devicetree/bindings/iommu/arm,smmu-v3.txt</span>
<span class="p_header">index 6ecc48c..a5a1ca4 100644</span>
<span class="p_header">--- a/Documentation/devicetree/bindings/iommu/arm,smmu-v3.txt</span>
<span class="p_header">+++ b/Documentation/devicetree/bindings/iommu/arm,smmu-v3.txt</span>
<span class="p_chunk">@@ -26,6 +26,7 @@</span> <span class="p_context"> the PCIe specification.</span>
                       * &quot;priq&quot;      - PRI Queue not empty
                       * &quot;cmdq-sync&quot; - CMD_SYNC complete
                       * &quot;gerror&quot;    - Global Error activated
<span class="p_add">+                      * &quot;combined&quot;  - Handles above all 4 interrupts.</span>
 
 - #iommu-cells      : See the generic IOMMU binding described in
                         devicetree/bindings/pci/pci-iommu.txt
<span class="p_header">diff --git a/drivers/acpi/arm64/iort.c b/drivers/acpi/arm64/iort.c</span>
<span class="p_header">index c166f3e..43e1f13 100644</span>
<span class="p_header">--- a/drivers/acpi/arm64/iort.c</span>
<span class="p_header">+++ b/drivers/acpi/arm64/iort.c</span>
<span class="p_chunk">@@ -828,6 +828,18 @@</span> <span class="p_context"> static int __init arm_smmu_v3_count_resources(struct acpi_iort_node *node)</span>
 	return num_res;
 }
 
<span class="p_add">+static bool arm_smmu_v3_is_combined_irq(struct acpi_iort_smmu_v3 *smmu)</span>
<span class="p_add">+{</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Cavium ThunderX2 implementation doesn&#39;t not support unique</span>
<span class="p_add">+	 * irq line. Use single irq line for all the SMMUv3 interrupts.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	if (smmu-&gt;model == ACPI_IORT_SMMU_V3_CAVIUM_CN99XX)</span>
<span class="p_add">+		return true;</span>
<span class="p_add">+</span>
<span class="p_add">+	return false;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static unsigned long arm_smmu_v3_resource_size(struct acpi_iort_smmu_v3 *smmu)
 {
 	/*
<span class="p_chunk">@@ -855,26 +867,32 @@</span> <span class="p_context"> static void __init arm_smmu_v3_init_resources(struct resource *res,</span>
 	res[num_res].flags = IORESOURCE_MEM;
 
 	num_res++;
<span class="p_del">-</span>
<span class="p_del">-	if (smmu-&gt;event_gsiv)</span>
<span class="p_del">-		acpi_iort_register_irq(smmu-&gt;event_gsiv, &quot;eventq&quot;,</span>
<span class="p_del">-				       ACPI_EDGE_SENSITIVE,</span>
<span class="p_del">-				       &amp;res[num_res++]);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (smmu-&gt;pri_gsiv)</span>
<span class="p_del">-		acpi_iort_register_irq(smmu-&gt;pri_gsiv, &quot;priq&quot;,</span>
<span class="p_del">-				       ACPI_EDGE_SENSITIVE,</span>
<span class="p_del">-				       &amp;res[num_res++]);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (smmu-&gt;gerr_gsiv)</span>
<span class="p_del">-		acpi_iort_register_irq(smmu-&gt;gerr_gsiv, &quot;gerror&quot;,</span>
<span class="p_del">-				       ACPI_EDGE_SENSITIVE,</span>
<span class="p_del">-				       &amp;res[num_res++]);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (smmu-&gt;sync_gsiv)</span>
<span class="p_del">-		acpi_iort_register_irq(smmu-&gt;sync_gsiv, &quot;cmdq-sync&quot;,</span>
<span class="p_add">+	if (arm_smmu_v3_is_combined_irq(smmu))</span>
<span class="p_add">+		acpi_iort_register_irq(smmu-&gt;event_gsiv, &quot;combined&quot;,</span>
 				       ACPI_EDGE_SENSITIVE,
 				       &amp;res[num_res++]);
<span class="p_add">+	else {</span>
<span class="p_add">+</span>
<span class="p_add">+		if (smmu-&gt;event_gsiv)</span>
<span class="p_add">+			acpi_iort_register_irq(smmu-&gt;event_gsiv, &quot;eventq&quot;,</span>
<span class="p_add">+					       ACPI_EDGE_SENSITIVE,</span>
<span class="p_add">+					       &amp;res[num_res++]);</span>
<span class="p_add">+</span>
<span class="p_add">+		if (smmu-&gt;pri_gsiv)</span>
<span class="p_add">+			acpi_iort_register_irq(smmu-&gt;pri_gsiv, &quot;priq&quot;,</span>
<span class="p_add">+					       ACPI_EDGE_SENSITIVE,</span>
<span class="p_add">+					       &amp;res[num_res++]);</span>
<span class="p_add">+</span>
<span class="p_add">+		if (smmu-&gt;gerr_gsiv)</span>
<span class="p_add">+			acpi_iort_register_irq(smmu-&gt;gerr_gsiv, &quot;gerror&quot;,</span>
<span class="p_add">+					       ACPI_EDGE_SENSITIVE,</span>
<span class="p_add">+					       &amp;res[num_res++]);</span>
<span class="p_add">+</span>
<span class="p_add">+		if (smmu-&gt;sync_gsiv)</span>
<span class="p_add">+			acpi_iort_register_irq(smmu-&gt;sync_gsiv, &quot;cmdq-sync&quot;,</span>
<span class="p_add">+					       ACPI_EDGE_SENSITIVE,</span>
<span class="p_add">+					       &amp;res[num_res++]);</span>
<span class="p_add">+	}</span>
 }
 
 static bool __init arm_smmu_v3_is_coherent(struct acpi_iort_node *node)
<span class="p_header">diff --git a/drivers/iommu/arm-smmu-v3.c b/drivers/iommu/arm-smmu-v3.c</span>
<span class="p_header">index 2dea4a9..0f83f7d 100644</span>
<span class="p_header">--- a/drivers/iommu/arm-smmu-v3.c</span>
<span class="p_header">+++ b/drivers/iommu/arm-smmu-v3.c</span>
<span class="p_chunk">@@ -605,6 +605,7 @@</span> <span class="p_context"> struct arm_smmu_device {</span>
 	struct arm_smmu_priq		priq;
 
 	int				gerr_irq;
<span class="p_add">+	int				combined_irq;</span>
 
 	unsigned long			ias; /* IPA */
 	unsigned long			oas; /* PA */
<span class="p_chunk">@@ -1314,6 +1315,29 @@</span> <span class="p_context"> static irqreturn_t arm_smmu_gerror_handler(int irq, void *dev)</span>
 	return IRQ_HANDLED;
 }
 
<span class="p_add">+static irqreturn_t arm_smmu_combined_irq_thread(int irq, void *dev)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct arm_smmu_device *smmu = dev;</span>
<span class="p_add">+</span>
<span class="p_add">+	arm_smmu_evtq_thread(irq, dev);</span>
<span class="p_add">+	if (smmu-&gt;features &amp; ARM_SMMU_FEAT_PRI)</span>
<span class="p_add">+		arm_smmu_priq_thread(irq, dev);</span>
<span class="p_add">+</span>
<span class="p_add">+	return IRQ_HANDLED;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static irqreturn_t arm_smmu_combined_irq_handler(int irq, void *dev)</span>
<span class="p_add">+{</span>
<span class="p_add">+	irqreturn_t ret;</span>
<span class="p_add">+</span>
<span class="p_add">+	ret = arm_smmu_gerror_handler(irq, dev);</span>
<span class="p_add">+	if (ret == IRQ_NONE) {</span>
<span class="p_add">+		arm_smmu_cmdq_sync_handler(irq, dev);</span>
<span class="p_add">+		return IRQ_WAKE_THREAD;</span>
<span class="p_add">+	}</span>
<span class="p_add">+	return ret;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 /* IO_PGTABLE API */
 static void __arm_smmu_tlb_sync(struct arm_smmu_device *smmu)
 {
<span class="p_chunk">@@ -2230,18 +2254,9 @@</span> <span class="p_context"> static void arm_smmu_setup_msis(struct arm_smmu_device *smmu)</span>
 	devm_add_action(dev, arm_smmu_free_msis, dev);
 }
 
<span class="p_del">-static int arm_smmu_setup_irqs(struct arm_smmu_device *smmu)</span>
<span class="p_add">+static void arm_smmu_setup_unique_irqs(struct arm_smmu_device *smmu)</span>
 {
<span class="p_del">-	int ret, irq;</span>
<span class="p_del">-	u32 irqen_flags = IRQ_CTRL_EVTQ_IRQEN | IRQ_CTRL_GERROR_IRQEN;</span>
<span class="p_del">-</span>
<span class="p_del">-	/* Disable IRQs first */</span>
<span class="p_del">-	ret = arm_smmu_write_reg_sync(smmu, 0, ARM_SMMU_IRQ_CTRL,</span>
<span class="p_del">-				      ARM_SMMU_IRQ_CTRLACK);</span>
<span class="p_del">-	if (ret) {</span>
<span class="p_del">-		dev_err(smmu-&gt;dev, &quot;failed to disable irqs\n&quot;);</span>
<span class="p_del">-		return ret;</span>
<span class="p_del">-	}</span>
<span class="p_add">+	int irq, ret;</span>
 
 	arm_smmu_setup_msis(smmu);
 
<span class="p_chunk">@@ -2284,10 +2299,41 @@</span> <span class="p_context"> static int arm_smmu_setup_irqs(struct arm_smmu_device *smmu)</span>
 			if (ret &lt; 0)
 				dev_warn(smmu-&gt;dev,
 					 &quot;failed to enable priq irq\n&quot;);
<span class="p_del">-			else</span>
<span class="p_del">-				irqen_flags |= IRQ_CTRL_PRIQ_IRQEN;</span>
 		}
 	}
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static int arm_smmu_setup_irqs(struct arm_smmu_device *smmu)</span>
<span class="p_add">+{</span>
<span class="p_add">+	int ret, irq;</span>
<span class="p_add">+	u32 irqen_flags = IRQ_CTRL_EVTQ_IRQEN | IRQ_CTRL_GERROR_IRQEN;</span>
<span class="p_add">+</span>
<span class="p_add">+	/* Disable IRQs first */</span>
<span class="p_add">+	ret = arm_smmu_write_reg_sync(smmu, 0, ARM_SMMU_IRQ_CTRL,</span>
<span class="p_add">+				      ARM_SMMU_IRQ_CTRLACK);</span>
<span class="p_add">+	if (ret) {</span>
<span class="p_add">+		dev_err(smmu-&gt;dev, &quot;failed to disable irqs\n&quot;);</span>
<span class="p_add">+		return ret;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	irq = smmu-&gt;combined_irq;</span>
<span class="p_add">+	if (irq) {</span>
<span class="p_add">+		/*</span>
<span class="p_add">+		 * Cavium ThunderX2 implementation doesn&#39;t not support unique</span>
<span class="p_add">+		 * irq lines. Use single irq line for all the SMMUv3 interrupts.</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		ret = devm_request_threaded_irq(smmu-&gt;dev, irq,</span>
<span class="p_add">+					arm_smmu_combined_irq_handler,</span>
<span class="p_add">+					arm_smmu_combined_irq_thread,</span>
<span class="p_add">+					IRQF_ONESHOT,</span>
<span class="p_add">+					&quot;arm-smmu-v3-combined-irq&quot;, smmu);</span>
<span class="p_add">+		if (ret &lt; 0)</span>
<span class="p_add">+			dev_warn(smmu-&gt;dev, &quot;failed to enable combined irq\n&quot;);</span>
<span class="p_add">+	} else</span>
<span class="p_add">+		arm_smmu_setup_unique_irqs(smmu);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (smmu-&gt;features &amp; ARM_SMMU_FEAT_PRI)</span>
<span class="p_add">+		irqen_flags |= IRQ_CTRL_PRIQ_IRQEN;</span>
 
 	/* Enable interrupt generation on the SMMU */
 	ret = arm_smmu_write_reg_sync(smmu, irqen_flags,
<span class="p_chunk">@@ -2724,22 +2770,27 @@</span> <span class="p_context"> static int arm_smmu_device_probe(struct platform_device *pdev)</span>
 		return PTR_ERR(smmu-&gt;base);
 
 	/* Interrupt lines */
<span class="p_del">-	irq = platform_get_irq_byname(pdev, &quot;eventq&quot;);</span>
<span class="p_del">-	if (irq &gt; 0)</span>
<span class="p_del">-		smmu-&gt;evtq.q.irq = irq;</span>
 
<span class="p_del">-	irq = platform_get_irq_byname(pdev, &quot;priq&quot;);</span>
<span class="p_add">+	irq = platform_get_irq_byname(pdev, &quot;combined&quot;);</span>
 	if (irq &gt; 0)
<span class="p_del">-		smmu-&gt;priq.q.irq = irq;</span>
<span class="p_add">+		smmu-&gt;combined_irq = irq;</span>
<span class="p_add">+	else {</span>
<span class="p_add">+		irq = platform_get_irq_byname(pdev, &quot;eventq&quot;);</span>
<span class="p_add">+		if (irq &gt; 0)</span>
<span class="p_add">+			smmu-&gt;evtq.q.irq = irq;</span>
 
<span class="p_del">-	irq = platform_get_irq_byname(pdev, &quot;cmdq-sync&quot;);</span>
<span class="p_del">-	if (irq &gt; 0)</span>
<span class="p_del">-		smmu-&gt;cmdq.q.irq = irq;</span>
<span class="p_add">+		irq = platform_get_irq_byname(pdev, &quot;priq&quot;);</span>
<span class="p_add">+		if (irq &gt; 0)</span>
<span class="p_add">+			smmu-&gt;priq.q.irq = irq;</span>
 
<span class="p_del">-	irq = platform_get_irq_byname(pdev, &quot;gerror&quot;);</span>
<span class="p_del">-	if (irq &gt; 0)</span>
<span class="p_del">-		smmu-&gt;gerr_irq = irq;</span>
<span class="p_add">+		irq = platform_get_irq_byname(pdev, &quot;cmdq-sync&quot;);</span>
<span class="p_add">+		if (irq &gt; 0)</span>
<span class="p_add">+			smmu-&gt;cmdq.q.irq = irq;</span>
 
<span class="p_add">+		irq = platform_get_irq_byname(pdev, &quot;gerror&quot;);</span>
<span class="p_add">+		if (irq &gt; 0)</span>
<span class="p_add">+			smmu-&gt;gerr_irq = irq;</span>
<span class="p_add">+	}</span>
 	/* Probe the h/w */
 	ret = arm_smmu_device_hw_probe(smmu);
 	if (ret)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



