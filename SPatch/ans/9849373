
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>mm/hugetlb: __get_user_pages ignores certain follow_hugetlb_page errors - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    mm/hugetlb: __get_user_pages ignores certain follow_hugetlb_page errors</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=175391">daniel.m.jordan@oracle.com</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 18, 2017, 7:39 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1500406795-58462-1-git-send-email-daniel.m.jordan@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9849373/mbox/"
   >mbox</a>
|
   <a href="/patch/9849373/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9849373/">/patch/9849373/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	E017E60392 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 18 Jul 2017 19:41:11 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E4BF51FF1D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 18 Jul 2017 19:41:11 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D98CA285E7; Tue, 18 Jul 2017 19:41:11 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	UNPARSEABLE_RELAY autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 206A61FF1D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 18 Jul 2017 19:41:08 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751589AbdGRTlG (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 18 Jul 2017 15:41:06 -0400
Received: from aserp1040.oracle.com ([141.146.126.69]:23221 &quot;EHLO
	aserp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751402AbdGRTlE (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 18 Jul 2017 15:41:04 -0400
Received: from aserv0021.oracle.com (aserv0021.oracle.com [141.146.126.233])
	by aserp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2)
	with ESMTP id v6IJduvp005097
	(version=TLSv1 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Tue, 18 Jul 2017 19:39:56 GMT
Received: from userv0121.oracle.com (userv0121.oracle.com [156.151.31.72])
	by aserv0021.oracle.com (8.13.8/8.14.4) with ESMTP id v6IJdtaR022198
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Tue, 18 Jul 2017 19:39:56 GMT
Received: from abhmp0005.oracle.com (abhmp0005.oracle.com [141.146.116.11])
	by userv0121.oracle.com (8.14.4/8.13.8) with ESMTP id
	v6IJdpd8021084; Tue, 18 Jul 2017 19:39:52 GMT
Received: from ca-dev90.us.oracle.com (/10.211.8.201)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Tue, 18 Jul 2017 12:39:51 -0700
From: daniel.m.jordan@oracle.com
To: linux-mm@kvack.org
Cc: aarcange@redhat.com, akpm@linux-foundation.org,
	aneesh.kumar@linux.vnet.ibm.com, gerald.schaefer@de.ibm.com,
	james.morse@arm.com, kirill.shutemov@linux.intel.com,
	mhocko@suse.com, mike.kravetz@oracle.com,
	n-horiguchi@ah.jp.nec.com, punit.agrawal@arm.com,
	zhongjiang@huawei.com, linux-kernel@vger.kernel.org
Subject: [PATCH] mm/hugetlb: __get_user_pages ignores certain
	follow_hugetlb_page errors
Date: Tue, 18 Jul 2017 12:39:55 -0700
Message-Id: &lt;1500406795-58462-1-git-send-email-daniel.m.jordan@oracle.com&gt;
X-Mailer: git-send-email 1.8.3.1
X-Source-IP: aserv0021.oracle.com [141.146.126.233]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=175391">daniel.m.jordan@oracle.com</a> - July 18, 2017, 7:39 p.m.</div>
<pre class="content">
Commit 9a291a7c9428 (&quot;mm/hugetlb: report -EHWPOISON not -EFAULT when
FOLL_HWPOISON is specified&quot;) causes __get_user_pages to ignore certain
errors from follow_hugetlb_page.  After such error, __get_user_pages
subsequently calls faultin_page on the same VMA and start address that
follow_hugetlb_page failed on instead of returning the error immediately
as it should.

In follow_hugetlb_page, when hugetlb_fault returns a value covered under
VM_FAULT_ERROR, follow_hugetlb_page returns it without setting nr_pages
to 0 as __get_user_pages expects in this case, which causes the
following to happen in __get_user_pages: the &quot;while (nr_pages)&quot; check
succeeds, we skip the &quot;if (!vma...&quot; check because we got a VMA the last
time around, we find no page with follow_page_mask, and we call
faultin_page, which calls hugetlb_fault for the second time.

This issue also slightly changes how __get_user_pages works.  Before, it
only returned error if it had made no progress (i = 0).  But now,
follow_hugetlb_page can clobber &quot;i&quot; with an error code since its new
return path doesn&#39;t check for progress.  So if &quot;i&quot; is nonzero before a
failing call to follow_hugetlb_page, that indication of progress is lost
and __get_user_pages can return error even if some pages were
successfully pinned.

To fix this, change follow_hugetlb_page so that it updates nr_pages,
allowing __get_user_pages to fail immediately and restoring the &quot;error
only if no progress&quot; behavior to __get_user_pages.

Tested that __get_user_pages returns when expected on error from
hugetlb_fault in follow_hugetlb_page.

Fixes: 9a291a7c9428 (&quot;mm/hugetlb: report -EHWPOISON not -EFAULT when FOLL_HWPOISON is specified&quot;)
<span class="signed-off-by">Signed-off-by: Daniel Jordan &lt;daniel.m.jordan@oracle.com&gt;</span>
Cc: Andrea Arcangeli &lt;aarcange@redhat.com&gt;
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: &quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;
Cc: Gerald Schaefer &lt;gerald.schaefer@de.ibm.com&gt;
Cc: James Morse &lt;james.morse@arm.com&gt;
Cc: &quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
Cc: Michal Hocko &lt;mhocko@suse.com&gt;
Cc: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
Cc: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;
Cc: Punit Agrawal &lt;punit.agrawal@arm.com&gt;
Cc: zhong jiang &lt;zhongjiang@huawei.com&gt;
---
 mm/hugetlb.c | 9 +++------
 1 file changed, 3 insertions(+), 6 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=58591">Punit Agrawal</a> - July 21, 2017, 9:20 a.m.</div>
<pre class="content">
Hi Daniel,

daniel.m.jordan@oracle.com writes:
<span class="quote">
&gt; Commit 9a291a7c9428 (&quot;mm/hugetlb: report -EHWPOISON not -EFAULT when</span>
<span class="quote">&gt; FOLL_HWPOISON is specified&quot;) causes __get_user_pages to ignore certain</span>
<span class="quote">&gt; errors from follow_hugetlb_page.  After such error, __get_user_pages</span>
<span class="quote">&gt; subsequently calls faultin_page on the same VMA and start address that</span>
<span class="quote">&gt; follow_hugetlb_page failed on instead of returning the error immediately</span>
<span class="quote">&gt; as it should.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; In follow_hugetlb_page, when hugetlb_fault returns a value covered under</span>
<span class="quote">&gt; VM_FAULT_ERROR, follow_hugetlb_page returns it without setting nr_pages</span>
<span class="quote">&gt; to 0 as __get_user_pages expects in this case, which causes the</span>
<span class="quote">&gt; following to happen in __get_user_pages: the &quot;while (nr_pages)&quot; check</span>
<span class="quote">&gt; succeeds, we skip the &quot;if (!vma...&quot; check because we got a VMA the last</span>
<span class="quote">&gt; time around, we find no page with follow_page_mask, and we call</span>
<span class="quote">&gt; faultin_page, which calls hugetlb_fault for the second time.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; This issue also slightly changes how __get_user_pages works.  Before, it</span>
<span class="quote">&gt; only returned error if it had made no progress (i = 0).  But now,</span>
<span class="quote">&gt; follow_hugetlb_page can clobber &quot;i&quot; with an error code since its new</span>
<span class="quote">&gt; return path doesn&#39;t check for progress.  So if &quot;i&quot; is nonzero before a</span>
<span class="quote">&gt; failing call to follow_hugetlb_page, that indication of progress is lost</span>
<span class="quote">&gt; and __get_user_pages can return error even if some pages were</span>
<span class="quote">&gt; successfully pinned.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; To fix this, change follow_hugetlb_page so that it updates nr_pages,</span>
<span class="quote">&gt; allowing __get_user_pages to fail immediately and restoring the &quot;error</span>
<span class="quote">&gt; only if no progress&quot; behavior to __get_user_pages.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Tested that __get_user_pages returns when expected on error from</span>
<span class="quote">&gt; hugetlb_fault in follow_hugetlb_page.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Fixes: 9a291a7c9428 (&quot;mm/hugetlb: report -EHWPOISON not -EFAULT when FOLL_HWPOISON is specified&quot;)</span>
<span class="quote">&gt; Signed-off-by: Daniel Jordan &lt;daniel.m.jordan@oracle.com&gt;</span>
<span class="quote">&gt; Cc: Andrea Arcangeli &lt;aarcange@redhat.com&gt;</span>
<span class="quote">&gt; Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;</span>
<span class="quote">&gt; Cc: &quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;</span>
<span class="quote">&gt; Cc: Gerald Schaefer &lt;gerald.schaefer@de.ibm.com&gt;</span>
<span class="quote">&gt; Cc: James Morse &lt;james.morse@arm.com&gt;</span>
<span class="quote">&gt; Cc: &quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;</span>
<span class="quote">&gt; Cc: Michal Hocko &lt;mhocko@suse.com&gt;</span>
<span class="quote">&gt; Cc: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="quote">&gt; Cc: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>
<span class="quote">&gt; Cc: Punit Agrawal &lt;punit.agrawal@arm.com&gt;</span>
<span class="quote">&gt; Cc: zhong jiang &lt;zhongjiang@huawei.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  mm/hugetlb.c | 9 +++------</span>
<span class="quote">&gt;  1 file changed, 3 insertions(+), 6 deletions(-)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="quote">&gt; index 3eedb18..cc28993 100644</span>
<span class="quote">&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt; @@ -4095,6 +4095,7 @@ long follow_hugetlb_page(struct mm_struct *mm, struct vm_area_struct *vma,</span>
<span class="quote">&gt;  	unsigned long vaddr = *position;</span>
<span class="quote">&gt;  	unsigned long remainder = *nr_pages;</span>
<span class="quote">&gt;  	struct hstate *h = hstate_vma(vma);</span>
<span class="quote">&gt; +	int err = -EFAULT;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	while (vaddr &lt; vma-&gt;vm_end &amp;&amp; remainder) {</span>
<span class="quote">&gt;  		pte_t *pte;</span>
<span class="quote">&gt; @@ -4170,11 +4171,7 @@ long follow_hugetlb_page(struct mm_struct *mm, struct vm_area_struct *vma,</span>
<span class="quote">&gt;  			}</span>
<span class="quote">&gt;  			ret = hugetlb_fault(mm, vma, vaddr, fault_flags);</span>
<span class="quote">&gt;  			if (ret &amp; VM_FAULT_ERROR) {</span>
<span class="quote">&gt; -				int err = vm_fault_to_errno(ret, flags);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -				if (err)</span>
<span class="quote">&gt; -					return err;</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; +				err = vm_fault_to_errno(ret, flags);</span>
<span class="quote">&gt;  				remainder = 0;</span>
<span class="quote">&gt;  				break;</span>
<span class="quote">&gt;  			}</span>
<span class="quote">&gt; @@ -4229,7 +4226,7 @@ long follow_hugetlb_page(struct mm_struct *mm, struct vm_area_struct *vma,</span>
<span class="quote">&gt;  	 */</span>
<span class="quote">&gt;  	*position = vaddr;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -	return i ? i : -EFAULT;</span>
<span class="quote">&gt; +	return i ? i : err;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #ifndef __HAVE_ARCH_FLUSH_HUGETLB_TLB_RANGE</span>

The change makes sense.

FWIW,
<span class="acked-by">
Acked-by: Punit Agrawal &lt;punit.agrawal@arm.com&gt;</span>

I was wondering how you hit the issue. Is there a test case that could
have spotted this earlier?

Thanks,
Punit
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=175391">daniel.m.jordan@oracle.com</a> - July 22, 2017, 12:05 a.m.</div>
<pre class="content">
Hi Punit,

On 07/21/2017 05:20 AM, Punit Agrawal wrote:
<span class="quote">&gt; The change makes sense.</span>
<span class="quote">&gt; FWIW,</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Acked-by: Punit Agrawal &lt;punit.agrawal@arm.com&gt;</span>

Thanks, I appreciate that.
<span class="quote">
&gt; I was wondering how you hit the issue. Is there a test case that could</span>
<span class="quote">&gt; have spotted this earlier?</span>

This was actually just by inspection.

I checked selftests/vm, but there&#39;s nothing in there that would have 
come close to spotting this, so unfortunately there&#39;s no existing test case.

Thanks,
Daniel
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 3eedb18..cc28993 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -4095,6 +4095,7 @@</span> <span class="p_context"> long follow_hugetlb_page(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 	unsigned long vaddr = *position;
 	unsigned long remainder = *nr_pages;
 	struct hstate *h = hstate_vma(vma);
<span class="p_add">+	int err = -EFAULT;</span>
 
 	while (vaddr &lt; vma-&gt;vm_end &amp;&amp; remainder) {
 		pte_t *pte;
<span class="p_chunk">@@ -4170,11 +4171,7 @@</span> <span class="p_context"> long follow_hugetlb_page(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 			}
 			ret = hugetlb_fault(mm, vma, vaddr, fault_flags);
 			if (ret &amp; VM_FAULT_ERROR) {
<span class="p_del">-				int err = vm_fault_to_errno(ret, flags);</span>
<span class="p_del">-</span>
<span class="p_del">-				if (err)</span>
<span class="p_del">-					return err;</span>
<span class="p_del">-</span>
<span class="p_add">+				err = vm_fault_to_errno(ret, flags);</span>
 				remainder = 0;
 				break;
 			}
<span class="p_chunk">@@ -4229,7 +4226,7 @@</span> <span class="p_context"> long follow_hugetlb_page(struct mm_struct *mm, struct vm_area_struct *vma,</span>
 	 */
 	*position = vaddr;
 
<span class="p_del">-	return i ? i : -EFAULT;</span>
<span class="p_add">+	return i ? i : err;</span>
 }
 
 #ifndef __HAVE_ARCH_FLUSH_HUGETLB_TLB_RANGE

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



