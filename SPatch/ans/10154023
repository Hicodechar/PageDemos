
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>iommu/vt-d: use domain instead of cache fetching - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    iommu/vt-d: use domain instead of cache fetching</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=155161">Peter Xu</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 10, 2018, 5:51 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180110055137.5711-1-peterx@redhat.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10154023/mbox/"
   >mbox</a>
|
   <a href="/patch/10154023/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10154023/">/patch/10154023/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	8465660231 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Jan 2018 05:51:57 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 74CF327FA8
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Jan 2018 05:51:57 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 683F727FB0; Wed, 10 Jan 2018 05:51:57 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id CE07B27FA8
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Jan 2018 05:51:56 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S933289AbeAJFvz (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 10 Jan 2018 00:51:55 -0500
Received: from mx1.redhat.com ([209.132.183.28]:58210 &quot;EHLO mx1.redhat.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S933068AbeAJFvx (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 10 Jan 2018 00:51:53 -0500
Received: from smtp.corp.redhat.com
	(int-mx03.intmail.prod.int.phx2.redhat.com [10.5.11.13])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 29FDA2577F;
	Wed, 10 Jan 2018 05:51:48 +0000 (UTC)
Received: from xz-mi.nay.redhat.com (dhcp-14-131.nay.redhat.com
	[10.66.14.131])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 6F3698CCF6;
	Wed, 10 Jan 2018 05:51:38 +0000 (UTC)
From: Peter Xu &lt;peterx@redhat.com&gt;
To: iommu@lists.linux-foundation.org
Cc: Alex Williamson &lt;alex.williamson@redhat.com&gt;, joro@8bytes.org,
	dwmw2@infradead.org, linux-kernel@vger.kernel.org, peterx@redhat.com
Subject: [PATCH] iommu/vt-d: use domain instead of cache fetching
Date: Wed, 10 Jan 2018 13:51:37 +0800
Message-Id: &lt;20180110055137.5711-1-peterx@redhat.com&gt;
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.13
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.39]);
	Wed, 10 Jan 2018 05:51:48 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=155161">Peter Xu</a> - Jan. 10, 2018, 5:51 a.m.</div>
<pre class="content">
after commit a1ddcbe93010 (&quot;iommu/vt-d: Pass dmar_domain directly into
iommu_flush_iotlb_psi&quot;, 2015-08-12), we have domain pointer as parameter
to iommu_flush_iotlb_psi(), so no need to fetch it from cache again.

More importantly, a NULL reference pointer bug is reported on RHEL7 (and
it can be reproduced on some old upstream kernels too, e.g., v4.13) by
unplugging an 40g nic from a VM (hard to test unplug on real host, but
it should be the same):

https://bugzilla.redhat.com/show_bug.cgi?id=1531367

[   24.391863] pciehp 0000:00:03.0:pcie004: Slot(0): Attention button pressed
[   24.393442] pciehp 0000:00:03.0:pcie004: Slot(0): Powering off due to button press
[   29.721068] i40evf 0000:01:00.0: Unable to send opcode 2 to PF, err I40E_ERR_QUEUE_EMPTY, aq_err OK
[   29.783557] iommu: Removing device 0000:01:00.0 from group 3
[   29.784662] BUG: unable to handle kernel NULL pointer dereference at 0000000000000304
[   29.785817] IP: iommu_flush_iotlb_psi+0xcf/0x120
[   29.786486] PGD 0
[   29.786487] P4D 0
[   29.786812]
[   29.787390] Oops: 0000 [#1] SMP
[   29.787876] Modules linked in: ip6t_rpfilter ip6t_REJECT nf_reject_ipv6 xt_conntrack ip_set nfnetlink ebtable_nat ebtable_broute bridge stp llc ip6table_ng
[   29.795371] CPU: 0 PID: 156 Comm: kworker/0:2 Not tainted 4.13.0 #14
[   29.796366] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.11.0-1.el7 04/01/2014
[   29.797593] Workqueue: pciehp-0 pciehp_power_thread
[   29.798328] task: ffff94f5745b4a00 task.stack: ffffb326805ac000
[   29.799178] RIP: 0010:iommu_flush_iotlb_psi+0xcf/0x120
[   29.799919] RSP: 0018:ffffb326805afbd0 EFLAGS: 00010086
[   29.800666] RAX: ffff94f5bc56e800 RBX: 0000000000000000 RCX: 0000000200000025
[   29.801667] RDX: ffff94f5bc56e000 RSI: 0000000000000082 RDI: 0000000000000000
[   29.802755] RBP: ffffb326805afbf8 R08: 0000000000000000 R09: ffff94f5bc86bbf0
[   29.803772] R10: ffffb326805afba8 R11: 00000000000ffdc4 R12: ffff94f5bc86a400
[   29.804789] R13: 0000000000000000 R14: 00000000ffdc4000 R15: 0000000000000000
[   29.805792] FS:  0000000000000000(0000) GS:ffff94f5bfc00000(0000) knlGS:0000000000000000
[   29.806923] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[   29.807736] CR2: 0000000000000304 CR3: 000000003499d000 CR4: 00000000000006f0
[   29.808747] Call Trace:
[   29.809156]  flush_unmaps_timeout+0x126/0x1c0
[   29.809800]  domain_exit+0xd6/0x100
[   29.810322]  device_notifier+0x6b/0x70
[   29.810902]  notifier_call_chain+0x4a/0x70
[   29.812822]  __blocking_notifier_call_chain+0x47/0x60
[   29.814499]  blocking_notifier_call_chain+0x16/0x20
[   29.816137]  device_del+0x233/0x320
[   29.817588]  pci_remove_bus_device+0x6f/0x110
[   29.819133]  pci_stop_and_remove_bus_device+0x1a/0x20
[   29.820817]  pciehp_unconfigure_device+0x7a/0x1d0
[   29.822434]  pciehp_disable_slot+0x52/0xe0
[   29.823931]  pciehp_power_thread+0x8a/0xa0
[   29.825411]  process_one_work+0x18c/0x3a0
[   29.826875]  worker_thread+0x4e/0x3b0
[   29.828263]  kthread+0x109/0x140
[   29.829564]  ? process_one_work+0x3a0/0x3a0
[   29.831081]  ? kthread_park+0x60/0x60
[   29.832464]  ret_from_fork+0x25/0x30
[   29.833794] Code: 85 ed 74 0b 5b 41 5c 41 5d 41 5e 41 5f 5d c3 49 8b 54 24 60 44 89 f8 0f b6 c4 48 8b 04 c2 48 85 c0 74 49 45 0f b6 ff 4a 8b 3c f8 &lt;80&gt; bf
[   29.838514] RIP: iommu_flush_iotlb_psi+0xcf/0x120 RSP: ffffb326805afbd0
[   29.840362] CR2: 0000000000000304
[   29.841716] ---[ end trace b10ec0d6900868d3 ]---

This patch fixes that problem if applied to v4.13 kernel.

The bug does not exist on latest upstream kernel since it&#39;s fixed as a
side effect of commit 13cf01744608 (&quot;iommu/vt-d: Make use of iova
deferred flushing&quot;, 2017-08-15).  But IMHO it&#39;s still good to have this
patch upstream.

CC: Alex Williamson &lt;alex.williamson@redhat.com&gt;
<span class="signed-off-by">Signed-off-by: Peter Xu &lt;peterx@redhat.com&gt;</span>
---
 drivers/iommu/intel-iommu.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7781">Alex Williamson</a> - Jan. 10, 2018, 11:50 p.m.</div>
<pre class="content">
On Wed, 10 Jan 2018 13:51:37 +0800
Peter Xu &lt;peterx@redhat.com&gt; wrote:
<span class="quote">
&gt; after commit a1ddcbe93010 (&quot;iommu/vt-d: Pass dmar_domain directly into</span>
<span class="quote">&gt; iommu_flush_iotlb_psi&quot;, 2015-08-12), we have domain pointer as parameter</span>
<span class="quote">&gt; to iommu_flush_iotlb_psi(), so no need to fetch it from cache again.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; More importantly, a NULL reference pointer bug is reported on RHEL7 (and</span>
<span class="quote">&gt; it can be reproduced on some old upstream kernels too, e.g., v4.13) by</span>
<span class="quote">&gt; unplugging an 40g nic from a VM (hard to test unplug on real host, but</span>
<span class="quote">&gt; it should be the same):</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; https://bugzilla.redhat.com/show_bug.cgi?id=1531367</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; [   24.391863] pciehp 0000:00:03.0:pcie004: Slot(0): Attention button pressed</span>
<span class="quote">&gt; [   24.393442] pciehp 0000:00:03.0:pcie004: Slot(0): Powering off due to button press</span>
<span class="quote">&gt; [   29.721068] i40evf 0000:01:00.0: Unable to send opcode 2 to PF, err I40E_ERR_QUEUE_EMPTY, aq_err OK</span>
<span class="quote">&gt; [   29.783557] iommu: Removing device 0000:01:00.0 from group 3</span>
<span class="quote">&gt; [   29.784662] BUG: unable to handle kernel NULL pointer dereference at 0000000000000304</span>
<span class="quote">&gt; [   29.785817] IP: iommu_flush_iotlb_psi+0xcf/0x120</span>
<span class="quote">&gt; [   29.786486] PGD 0</span>
<span class="quote">&gt; [   29.786487] P4D 0</span>
<span class="quote">&gt; [   29.786812]</span>
<span class="quote">&gt; [   29.787390] Oops: 0000 [#1] SMP</span>
<span class="quote">&gt; [   29.787876] Modules linked in: ip6t_rpfilter ip6t_REJECT nf_reject_ipv6 xt_conntrack ip_set nfnetlink ebtable_nat ebtable_broute bridge stp llc ip6table_ng</span>
<span class="quote">&gt; [   29.795371] CPU: 0 PID: 156 Comm: kworker/0:2 Not tainted 4.13.0 #14</span>
<span class="quote">&gt; [   29.796366] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.11.0-1.el7 04/01/2014</span>
<span class="quote">&gt; [   29.797593] Workqueue: pciehp-0 pciehp_power_thread</span>
<span class="quote">&gt; [   29.798328] task: ffff94f5745b4a00 task.stack: ffffb326805ac000</span>
<span class="quote">&gt; [   29.799178] RIP: 0010:iommu_flush_iotlb_psi+0xcf/0x120</span>
<span class="quote">&gt; [   29.799919] RSP: 0018:ffffb326805afbd0 EFLAGS: 00010086</span>
<span class="quote">&gt; [   29.800666] RAX: ffff94f5bc56e800 RBX: 0000000000000000 RCX: 0000000200000025</span>
<span class="quote">&gt; [   29.801667] RDX: ffff94f5bc56e000 RSI: 0000000000000082 RDI: 0000000000000000</span>
<span class="quote">&gt; [   29.802755] RBP: ffffb326805afbf8 R08: 0000000000000000 R09: ffff94f5bc86bbf0</span>
<span class="quote">&gt; [   29.803772] R10: ffffb326805afba8 R11: 00000000000ffdc4 R12: ffff94f5bc86a400</span>
<span class="quote">&gt; [   29.804789] R13: 0000000000000000 R14: 00000000ffdc4000 R15: 0000000000000000</span>
<span class="quote">&gt; [   29.805792] FS:  0000000000000000(0000) GS:ffff94f5bfc00000(0000) knlGS:0000000000000000</span>
<span class="quote">&gt; [   29.806923] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033</span>
<span class="quote">&gt; [   29.807736] CR2: 0000000000000304 CR3: 000000003499d000 CR4: 00000000000006f0</span>
<span class="quote">&gt; [   29.808747] Call Trace:</span>
<span class="quote">&gt; [   29.809156]  flush_unmaps_timeout+0x126/0x1c0</span>
<span class="quote">&gt; [   29.809800]  domain_exit+0xd6/0x100</span>
<span class="quote">&gt; [   29.810322]  device_notifier+0x6b/0x70</span>
<span class="quote">&gt; [   29.810902]  notifier_call_chain+0x4a/0x70</span>
<span class="quote">&gt; [   29.812822]  __blocking_notifier_call_chain+0x47/0x60</span>
<span class="quote">&gt; [   29.814499]  blocking_notifier_call_chain+0x16/0x20</span>
<span class="quote">&gt; [   29.816137]  device_del+0x233/0x320</span>
<span class="quote">&gt; [   29.817588]  pci_remove_bus_device+0x6f/0x110</span>
<span class="quote">&gt; [   29.819133]  pci_stop_and_remove_bus_device+0x1a/0x20</span>
<span class="quote">&gt; [   29.820817]  pciehp_unconfigure_device+0x7a/0x1d0</span>
<span class="quote">&gt; [   29.822434]  pciehp_disable_slot+0x52/0xe0</span>
<span class="quote">&gt; [   29.823931]  pciehp_power_thread+0x8a/0xa0</span>
<span class="quote">&gt; [   29.825411]  process_one_work+0x18c/0x3a0</span>
<span class="quote">&gt; [   29.826875]  worker_thread+0x4e/0x3b0</span>
<span class="quote">&gt; [   29.828263]  kthread+0x109/0x140</span>
<span class="quote">&gt; [   29.829564]  ? process_one_work+0x3a0/0x3a0</span>
<span class="quote">&gt; [   29.831081]  ? kthread_park+0x60/0x60</span>
<span class="quote">&gt; [   29.832464]  ret_from_fork+0x25/0x30</span>
<span class="quote">&gt; [   29.833794] Code: 85 ed 74 0b 5b 41 5c 41 5d 41 5e 41 5f 5d c3 49 8b 54 24 60 44 89 f8 0f b6 c4 48 8b 04 c2 48 85 c0 74 49 45 0f b6 ff 4a 8b 3c f8 &lt;80&gt; bf</span>
<span class="quote">&gt; [   29.838514] RIP: iommu_flush_iotlb_psi+0xcf/0x120 RSP: ffffb326805afbd0</span>
<span class="quote">&gt; [   29.840362] CR2: 0000000000000304</span>
<span class="quote">&gt; [   29.841716] ---[ end trace b10ec0d6900868d3 ]---</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This patch fixes that problem if applied to v4.13 kernel.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The bug does not exist on latest upstream kernel since it&#39;s fixed as a</span>
<span class="quote">&gt; side effect of commit 13cf01744608 (&quot;iommu/vt-d: Make use of iova</span>
<span class="quote">&gt; deferred flushing&quot;, 2017-08-15).  But IMHO it&#39;s still good to have this</span>
<span class="quote">&gt; patch upstream.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; CC: Alex Williamson &lt;alex.williamson@redhat.com&gt;</span>
<span class="quote">&gt; Signed-off-by: Peter Xu &lt;peterx@redhat.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  drivers/iommu/intel-iommu.c | 3 +--</span>
<span class="quote">&gt;  1 file changed, 1 insertion(+), 2 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c</span>
<span class="quote">&gt; index 4a2de34895ec..869f37d1f3b7 100644</span>
<span class="quote">&gt; --- a/drivers/iommu/intel-iommu.c</span>
<span class="quote">&gt; +++ b/drivers/iommu/intel-iommu.c</span>
<span class="quote">&gt; @@ -1601,8 +1601,7 @@ static void iommu_flush_iotlb_psi(struct intel_iommu *iommu,</span>
<span class="quote">&gt;  	 * flush. However, device IOTLB doesn&#39;t need to be flushed in this case.</span>
<span class="quote">&gt;  	 */</span>
<span class="quote">&gt;  	if (!cap_caching_mode(iommu-&gt;cap) || !map)</span>
<span class="quote">&gt; -		iommu_flush_dev_iotlb(get_iommu_domain(iommu, did),</span>
<span class="quote">&gt; -				      addr, mask);</span>
<span class="quote">&gt; +		iommu_flush_dev_iotlb(domain, addr, mask);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  static void iommu_flush_iova(struct iova_domain *iovad)</span>

Seems like an oversight of a1ddcbe93010 to leave this redundant lookup,
so it&#39;s certainly still relevant to current mainline kernels even if
it&#39;s just an efficiency improvement rather than a bug fix.  Perhaps we
should include a Fixes tag to link it back to where it&#39;s easily fixed.

Fixes: a1ddcbe93010 (&quot;iommu/vt-d: Pass dmar_domain directly into iommu_flush_iotlb_psi&quot;)
<span class="reviewed-by">Reviewed-by: Alex Williamson &lt;alex.williamson@redhat.com&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=317">Joerg Roedel</a> - Jan. 17, 2018, 1:46 p.m.</div>
<pre class="content">
On Wed, Jan 10, 2018 at 01:51:37PM +0800, Peter Xu wrote:
<span class="quote">&gt; after commit a1ddcbe93010 (&quot;iommu/vt-d: Pass dmar_domain directly into</span>
<span class="quote">&gt; iommu_flush_iotlb_psi&quot;, 2015-08-12), we have domain pointer as parameter</span>
<span class="quote">&gt; to iommu_flush_iotlb_psi(), so no need to fetch it from cache again.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; More importantly, a NULL reference pointer bug is reported on RHEL7 (and</span>
<span class="quote">&gt; it can be reproduced on some old upstream kernels too, e.g., v4.13) by</span>
<span class="quote">&gt; unplugging an 40g nic from a VM (hard to test unplug on real host, but</span>
<span class="quote">&gt; it should be the same):</span>
<span class="quote">&gt; </span>
[...]
<span class="quote">&gt; </span>
<span class="quote">&gt; CC: Alex Williamson &lt;alex.williamson@redhat.com&gt;</span>
<span class="quote">&gt; Signed-off-by: Peter Xu &lt;peterx@redhat.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  drivers/iommu/intel-iommu.c | 3 +--</span>
<span class="quote">&gt;  1 file changed, 1 insertion(+), 2 deletions(-)</span>

Applied, thanks.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c</span>
<span class="p_header">index 4a2de34895ec..869f37d1f3b7 100644</span>
<span class="p_header">--- a/drivers/iommu/intel-iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/intel-iommu.c</span>
<span class="p_chunk">@@ -1601,8 +1601,7 @@</span> <span class="p_context"> static void iommu_flush_iotlb_psi(struct intel_iommu *iommu,</span>
 	 * flush. However, device IOTLB doesn&#39;t need to be flushed in this case.
 	 */
 	if (!cap_caching_mode(iommu-&gt;cap) || !map)
<span class="p_del">-		iommu_flush_dev_iotlb(get_iommu_domain(iommu, did),</span>
<span class="p_del">-				      addr, mask);</span>
<span class="p_add">+		iommu_flush_dev_iotlb(domain, addr, mask);</span>
 }
 
 static void iommu_flush_iova(struct iova_domain *iovad)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



