
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFCv2,4/5] mm/compaction: compaction calls generic migration - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFCv2,4/5] mm/compaction: compaction calls generic migration</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=72386">???</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 26, 2015, 9:58 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1435312710-15108-5-git-send-email-gioh.kim@lge.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6679741/mbox/"
   >mbox</a>
|
   <a href="/patch/6679741/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6679741/">/patch/6679741/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 74C2C9F1C1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 26 Jun 2015 09:58:27 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 9046F2069D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 26 Jun 2015 09:58:26 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 4B8102069E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 26 Jun 2015 09:58:25 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752653AbbFZJ6S (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 26 Jun 2015 05:58:18 -0400
Received: from lgeamrelo01.lge.com ([156.147.1.125]:60910 &quot;EHLO
	lgeamrelo01.lge.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751849AbbFZJ5q (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 26 Jun 2015 05:57:46 -0400
Received: from unknown (HELO swc-osl.156.147.1.1) (165.186.175.39)
	by 156.147.1.125 with ESMTP; 26 Jun 2015 18:57:45 +0900
X-Original-SENDERIP: 165.186.175.39
X-Original-MAILFROM: gioh.kim@lge.com
From: Gioh Kim &lt;gioh.kim@lge.com&gt;
To: jlayton@poochiereds.net, bfields@fieldses.org, vbabka@suse.cz,
	iamjoonsoo.kim@lge.com, viro@zeniv.linux.org.uk, mst@redhat.com,
	koct9i@gmail.com, minchan@kernel.org, aquini@redhat.com,
	linux-fsdevel@vger.kernel.org, virtualization@lists.linux-foundation.org,
	linux-kernel@vger.kernel.org, linux-api@vger.kernel.org,
	linux-mm@kvack.org
Cc: akpm@linux-foundation.org, Gioh Kim &lt;gioh.kim@lge.com&gt;
Subject: [RFCv2 4/5] mm/compaction: compaction calls generic migration
Date: Fri, 26 Jun 2015 18:58:29 +0900
Message-Id: &lt;1435312710-15108-5-git-send-email-gioh.kim@lge.com&gt;
X-Mailer: git-send-email 1.7.9.5
In-Reply-To: &lt;1435312710-15108-1-git-send-email-gioh.kim@lge.com&gt;
References: &lt;1435312710-15108-1-git-send-email-gioh.kim@lge.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-8.3 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72386">???</a> - June 26, 2015, 9:58 a.m.</div>
<pre class="content">
Compaction calls interfaces of driver page migration
instead of calling balloon migration directly.
<span class="signed-off-by">
Signed-off-by: Gioh Kim &lt;gioh.kim@lge.com&gt;</span>
---
 drivers/virtio/virtio_balloon.c |  1 +
 mm/compaction.c                 |  9 +++++----
 mm/migrate.c                    | 21 ++++++++++++---------
 3 files changed, 18 insertions(+), 13 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=80221">Konstantin Khlebnikov</a> - July 4, 2015, 6:13 p.m.</div>
<pre class="content">
On Fri, Jun 26, 2015 at 12:58 PM, Gioh Kim &lt;gioh.kim@lge.com&gt; wrote:
<span class="quote">&gt; Compaction calls interfaces of driver page migration</span>
<span class="quote">&gt; instead of calling balloon migration directly.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Signed-off-by: Gioh Kim &lt;gioh.kim@lge.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  drivers/virtio/virtio_balloon.c |  1 +</span>
<span class="quote">&gt;  mm/compaction.c                 |  9 +++++----</span>
<span class="quote">&gt;  mm/migrate.c                    | 21 ++++++++++++---------</span>
<span class="quote">&gt;  3 files changed, 18 insertions(+), 13 deletions(-)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; diff --git a/drivers/virtio/virtio_balloon.c b/drivers/virtio/virtio_balloon.c</span>
<span class="quote">&gt; index c49b553..5e5cbea 100644</span>
<span class="quote">&gt; --- a/drivers/virtio/virtio_balloon.c</span>
<span class="quote">&gt; +++ b/drivers/virtio/virtio_balloon.c</span>
<span class="quote">&gt; @@ -30,6 +30,7 @@</span>
<span class="quote">&gt;  #include &lt;linux/balloon_compaction.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/oom.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/wait.h&gt;</span>
<span class="quote">&gt; +#include &lt;linux/anon_inodes.h&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * Balloon device works in 4K page units.  So each page is pointed to by</span>
<span class="quote">&gt; diff --git a/mm/compaction.c b/mm/compaction.c</span>
<span class="quote">&gt; index 16e1b57..cc5ec81 100644</span>
<span class="quote">&gt; --- a/mm/compaction.c</span>
<span class="quote">&gt; +++ b/mm/compaction.c</span>
<span class="quote">&gt; @@ -14,7 +14,7 @@</span>
<span class="quote">&gt;  #include &lt;linux/backing-dev.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/sysctl.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/sysfs.h&gt;</span>
<span class="quote">&gt; -#include &lt;linux/balloon_compaction.h&gt;</span>
<span class="quote">&gt; +#include &lt;linux/compaction.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/page-isolation.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/kasan.h&gt;</span>
<span class="quote">&gt;  #include &quot;internal.h&quot;</span>
<span class="quote">&gt; @@ -714,12 +714,13 @@ isolate_migratepages_block(struct compact_control *cc, unsigned long low_pfn,</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;                 /*</span>
<span class="quote">&gt;                  * Check may be lockless but that&#39;s ok as we recheck later.</span>
<span class="quote">&gt; -                * It&#39;s possible to migrate LRU pages and balloon pages</span>
<span class="quote">&gt; +                * It&#39;s possible to migrate LRU pages and driver pages</span>
<span class="quote">&gt;                  * Skip any other type of page</span>
<span class="quote">&gt;                  */</span>
<span class="quote">&gt;                 if (!PageLRU(page)) {</span>
<span class="quote">&gt; -                       if (unlikely(balloon_page_movable(page))) {</span>
<span class="quote">&gt; -                               if (balloon_page_isolate(page)) {</span>
<span class="quote">&gt; +                       if (unlikely(driver_page_migratable(page))) {</span>
<span class="quote">&gt; +                               if (page-&gt;mapping-&gt;a_ops-&gt;isolatepage(page,</span>
<span class="quote">&gt; +                                                               isolate_mode)) {</span>

Dereferencing page-&gt;mapping isn&#39;t safe here.
Page could be &quot;truncated&quot; from mapping at any time.

As you can see  balloon_page_isolate() calls get_page_unless_zero,
trylock_page and only after that checks balloon_page_movable again.

Existing code already does similar unsafe dereference in
__isolate_lru_page(): page-&gt;mapping-&gt;a_ops-&gt;migratepage
<span class="quote">
&gt;                                         /* Successfully isolated */</span>
<span class="quote">&gt;                                         goto isolate_success;</span>
<span class="quote">&gt;                                 }</span>
<span class="quote">&gt; diff --git a/mm/migrate.c b/mm/migrate.c</span>
<span class="quote">&gt; index 236ee25..a0bc1e4 100644</span>
<span class="quote">&gt; --- a/mm/migrate.c</span>
<span class="quote">&gt; +++ b/mm/migrate.c</span>
<span class="quote">&gt; @@ -35,7 +35,7 @@</span>
<span class="quote">&gt;  #include &lt;linux/hugetlb.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/hugetlb_cgroup.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/gfp.h&gt;</span>
<span class="quote">&gt; -#include &lt;linux/balloon_compaction.h&gt;</span>
<span class="quote">&gt; +#include &lt;linux/compaction.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/mmu_notifier.h&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;  #include &lt;asm/tlbflush.h&gt;</span>
<span class="quote">&gt; @@ -76,7 +76,7 @@ int migrate_prep_local(void)</span>
<span class="quote">&gt;   * from where they were once taken off for compaction/migration.</span>
<span class="quote">&gt;   *</span>
<span class="quote">&gt;   * This function shall be used whenever the isolated pageset has been</span>
<span class="quote">&gt; - * built from lru, balloon, hugetlbfs page. See isolate_migratepages_range()</span>
<span class="quote">&gt; + * built from lru, driver, hugetlbfs page. See isolate_migratepages_range()</span>
<span class="quote">&gt;   * and isolate_huge_page().</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt;  void putback_movable_pages(struct list_head *l)</span>
<span class="quote">&gt; @@ -92,8 +92,8 @@ void putback_movable_pages(struct list_head *l)</span>
<span class="quote">&gt;                 list_del(&amp;page-&gt;lru);</span>
<span class="quote">&gt;                 dec_zone_page_state(page, NR_ISOLATED_ANON +</span>
<span class="quote">&gt;                                 page_is_file_cache(page));</span>
<span class="quote">&gt; -               if (unlikely(isolated_balloon_page(page)))</span>
<span class="quote">&gt; -                       balloon_page_putback(page);</span>
<span class="quote">&gt; +               if (unlikely(driver_page_migratable(page)))</span>
<span class="quote">&gt; +                       page-&gt;mapping-&gt;a_ops-&gt;putbackpage(page);</span>
<span class="quote">&gt;                 else</span>
<span class="quote">&gt;                         putback_lru_page(page);</span>
<span class="quote">&gt;         }</span>
<span class="quote">&gt; @@ -844,15 +844,18 @@ static int __unmap_and_move(struct page *page, struct page *newpage,</span>
<span class="quote">&gt;                 }</span>
<span class="quote">&gt;         }</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; -       if (unlikely(isolated_balloon_page(page))) {</span>
<span class="quote">&gt; +       if (unlikely(driver_page_migratable(page))) {</span>
<span class="quote">&gt;                 /*</span>
<span class="quote">&gt; -                * A ballooned page does not need any special attention from</span>
<span class="quote">&gt; +                * A driver page does not need any special attention from</span>
<span class="quote">&gt;                  * physical to virtual reverse mapping procedures.</span>
<span class="quote">&gt;                  * Skip any attempt to unmap PTEs or to remap swap cache,</span>
<span class="quote">&gt;                  * in order to avoid burning cycles at rmap level, and perform</span>
<span class="quote">&gt;                  * the page migration right away (proteced by page lock).</span>
<span class="quote">&gt;                  */</span>
<span class="quote">&gt; -               rc = balloon_page_migrate(newpage, page, mode);</span>
<span class="quote">&gt; +               rc = page-&gt;mapping-&gt;a_ops-&gt;migratepage(page-&gt;mapping,</span>
<span class="quote">&gt; +                                                      newpage,</span>
<span class="quote">&gt; +                                                      page,</span>
<span class="quote">&gt; +                                                      mode);</span>
<span class="quote">&gt;                 goto out_unlock;</span>
<span class="quote">&gt;         }</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; @@ -962,8 +965,8 @@ out:</span>
<span class="quote">&gt;         if (rc != MIGRATEPAGE_SUCCESS &amp;&amp; put_new_page) {</span>
<span class="quote">&gt;                 ClearPageSwapBacked(newpage);</span>
<span class="quote">&gt;                 put_new_page(newpage, private);</span>
<span class="quote">&gt; -       } else if (unlikely(__is_movable_balloon_page(newpage))) {</span>
<span class="quote">&gt; -               /* drop our reference, page already in the balloon */</span>
<span class="quote">&gt; +       } else if (unlikely(driver_page_migratable(newpage))) {</span>
<span class="quote">&gt; +               /* drop our reference */</span>
<span class="quote">&gt;                 put_page(newpage);</span>
<span class="quote">&gt;         } else</span>
<span class="quote">&gt;                 putback_lru_page(newpage);</span>
<span class="quote">&gt; --</span>
<span class="quote">&gt; 1.9.1</span>
<span class="quote">&gt;</span>
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=80221">Konstantin Khlebnikov</a> - July 4, 2015, 7 p.m.</div>
<pre class="content">
On Sat, Jul 4, 2015 at 9:13 PM, Konstantin Khlebnikov &lt;koct9i@gmail.com&gt; wrote:
<span class="quote">&gt; On Fri, Jun 26, 2015 at 12:58 PM, Gioh Kim &lt;gioh.kim@lge.com&gt; wrote:</span>
<span class="quote">&gt;&gt; Compaction calls interfaces of driver page migration</span>
<span class="quote">&gt;&gt; instead of calling balloon migration directly.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Gioh Kim &lt;gioh.kim@lge.com&gt;</span>
<span class="quote">&gt;&gt; ---</span>
<span class="quote">&gt;&gt;  drivers/virtio/virtio_balloon.c |  1 +</span>
<span class="quote">&gt;&gt;  mm/compaction.c                 |  9 +++++----</span>
<span class="quote">&gt;&gt;  mm/migrate.c                    | 21 ++++++++++++---------</span>
<span class="quote">&gt;&gt;  3 files changed, 18 insertions(+), 13 deletions(-)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; diff --git a/drivers/virtio/virtio_balloon.c b/drivers/virtio/virtio_balloon.c</span>
<span class="quote">&gt;&gt; index c49b553..5e5cbea 100644</span>
<span class="quote">&gt;&gt; --- a/drivers/virtio/virtio_balloon.c</span>
<span class="quote">&gt;&gt; +++ b/drivers/virtio/virtio_balloon.c</span>
<span class="quote">&gt;&gt; @@ -30,6 +30,7 @@</span>
<span class="quote">&gt;&gt;  #include &lt;linux/balloon_compaction.h&gt;</span>
<span class="quote">&gt;&gt;  #include &lt;linux/oom.h&gt;</span>
<span class="quote">&gt;&gt;  #include &lt;linux/wait.h&gt;</span>
<span class="quote">&gt;&gt; +#include &lt;linux/anon_inodes.h&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;  /*</span>
<span class="quote">&gt;&gt;   * Balloon device works in 4K page units.  So each page is pointed to by</span>
<span class="quote">&gt;&gt; diff --git a/mm/compaction.c b/mm/compaction.c</span>
<span class="quote">&gt;&gt; index 16e1b57..cc5ec81 100644</span>
<span class="quote">&gt;&gt; --- a/mm/compaction.c</span>
<span class="quote">&gt;&gt; +++ b/mm/compaction.c</span>
<span class="quote">&gt;&gt; @@ -14,7 +14,7 @@</span>
<span class="quote">&gt;&gt;  #include &lt;linux/backing-dev.h&gt;</span>
<span class="quote">&gt;&gt;  #include &lt;linux/sysctl.h&gt;</span>
<span class="quote">&gt;&gt;  #include &lt;linux/sysfs.h&gt;</span>
<span class="quote">&gt;&gt; -#include &lt;linux/balloon_compaction.h&gt;</span>
<span class="quote">&gt;&gt; +#include &lt;linux/compaction.h&gt;</span>
<span class="quote">&gt;&gt;  #include &lt;linux/page-isolation.h&gt;</span>
<span class="quote">&gt;&gt;  #include &lt;linux/kasan.h&gt;</span>
<span class="quote">&gt;&gt;  #include &quot;internal.h&quot;</span>
<span class="quote">&gt;&gt; @@ -714,12 +714,13 @@ isolate_migratepages_block(struct compact_control *cc, unsigned long low_pfn,</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;                 /*</span>
<span class="quote">&gt;&gt;                  * Check may be lockless but that&#39;s ok as we recheck later.</span>
<span class="quote">&gt;&gt; -                * It&#39;s possible to migrate LRU pages and balloon pages</span>
<span class="quote">&gt;&gt; +                * It&#39;s possible to migrate LRU pages and driver pages</span>
<span class="quote">&gt;&gt;                  * Skip any other type of page</span>
<span class="quote">&gt;&gt;                  */</span>
<span class="quote">&gt;&gt;                 if (!PageLRU(page)) {</span>
<span class="quote">&gt;&gt; -                       if (unlikely(balloon_page_movable(page))) {</span>
<span class="quote">&gt;&gt; -                               if (balloon_page_isolate(page)) {</span>
<span class="quote">&gt;&gt; +                       if (unlikely(driver_page_migratable(page))) {</span>
<span class="quote">&gt;&gt; +                               if (page-&gt;mapping-&gt;a_ops-&gt;isolatepage(page,</span>
<span class="quote">&gt;&gt; +                                                               isolate_mode)) {</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Dereferencing page-&gt;mapping isn&#39;t safe here.</span>
<span class="quote">&gt; Page could be &quot;truncated&quot; from mapping at any time.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; As you can see  balloon_page_isolate() calls get_page_unless_zero,</span>
<span class="quote">&gt; trylock_page and only after that checks balloon_page_movable again.</span>

Page must be getted and locked before calling aops method, somethin like this:

If (!PageLRU(page)) {
   if (PageBalloon(page) || PageMobile(page))
       if (get_page_unless_zero(page))
           if (try_lock(page))
              if (page-&gt;mapping &amp;&amp; page-&gt;mapping-&gt;a_ops-&gt;isolatepage)
                  page-&gt;mapping-&gt;a_ops-&gt;isolate_page(page, ...)
....
<span class="quote">
&gt;</span>
<span class="quote">&gt; Existing code already does similar unsafe dereference in</span>
<span class="quote">&gt; __isolate_lru_page(): page-&gt;mapping-&gt;a_ops-&gt;migratepage</span>
<span class="quote">
&gt;</span>
<span class="quote">&gt;&gt;                                         /* Successfully isolated */</span>
<span class="quote">&gt;&gt;                                         goto isolate_success;</span>
<span class="quote">&gt;&gt;                                 }</span>
<span class="quote">&gt;&gt; diff --git a/mm/migrate.c b/mm/migrate.c</span>
<span class="quote">&gt;&gt; index 236ee25..a0bc1e4 100644</span>
<span class="quote">&gt;&gt; --- a/mm/migrate.c</span>
<span class="quote">&gt;&gt; +++ b/mm/migrate.c</span>
<span class="quote">&gt;&gt; @@ -35,7 +35,7 @@</span>
<span class="quote">&gt;&gt;  #include &lt;linux/hugetlb.h&gt;</span>
<span class="quote">&gt;&gt;  #include &lt;linux/hugetlb_cgroup.h&gt;</span>
<span class="quote">&gt;&gt;  #include &lt;linux/gfp.h&gt;</span>
<span class="quote">&gt;&gt; -#include &lt;linux/balloon_compaction.h&gt;</span>
<span class="quote">&gt;&gt; +#include &lt;linux/compaction.h&gt;</span>
<span class="quote">&gt;&gt;  #include &lt;linux/mmu_notifier.h&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;  #include &lt;asm/tlbflush.h&gt;</span>
<span class="quote">&gt;&gt; @@ -76,7 +76,7 @@ int migrate_prep_local(void)</span>
<span class="quote">&gt;&gt;   * from where they were once taken off for compaction/migration.</span>
<span class="quote">&gt;&gt;   *</span>
<span class="quote">&gt;&gt;   * This function shall be used whenever the isolated pageset has been</span>
<span class="quote">&gt;&gt; - * built from lru, balloon, hugetlbfs page. See isolate_migratepages_range()</span>
<span class="quote">&gt;&gt; + * built from lru, driver, hugetlbfs page. See isolate_migratepages_range()</span>
<span class="quote">&gt;&gt;   * and isolate_huge_page().</span>
<span class="quote">&gt;&gt;   */</span>
<span class="quote">&gt;&gt;  void putback_movable_pages(struct list_head *l)</span>
<span class="quote">&gt;&gt; @@ -92,8 +92,8 @@ void putback_movable_pages(struct list_head *l)</span>
<span class="quote">&gt;&gt;                 list_del(&amp;page-&gt;lru);</span>
<span class="quote">&gt;&gt;                 dec_zone_page_state(page, NR_ISOLATED_ANON +</span>
<span class="quote">&gt;&gt;                                 page_is_file_cache(page));</span>
<span class="quote">&gt;&gt; -               if (unlikely(isolated_balloon_page(page)))</span>
<span class="quote">&gt;&gt; -                       balloon_page_putback(page);</span>
<span class="quote">&gt;&gt; +               if (unlikely(driver_page_migratable(page)))</span>
<span class="quote">&gt;&gt; +                       page-&gt;mapping-&gt;a_ops-&gt;putbackpage(page);</span>
<span class="quote">&gt;&gt;                 else</span>
<span class="quote">&gt;&gt;                         putback_lru_page(page);</span>
<span class="quote">&gt;&gt;         }</span>
<span class="quote">&gt;&gt; @@ -844,15 +844,18 @@ static int __unmap_and_move(struct page *page, struct page *newpage,</span>
<span class="quote">&gt;&gt;                 }</span>
<span class="quote">&gt;&gt;         }</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; -       if (unlikely(isolated_balloon_page(page))) {</span>
<span class="quote">&gt;&gt; +       if (unlikely(driver_page_migratable(page))) {</span>
<span class="quote">&gt;&gt;                 /*</span>
<span class="quote">&gt;&gt; -                * A ballooned page does not need any special attention from</span>
<span class="quote">&gt;&gt; +                * A driver page does not need any special attention from</span>
<span class="quote">&gt;&gt;                  * physical to virtual reverse mapping procedures.</span>
<span class="quote">&gt;&gt;                  * Skip any attempt to unmap PTEs or to remap swap cache,</span>
<span class="quote">&gt;&gt;                  * in order to avoid burning cycles at rmap level, and perform</span>
<span class="quote">&gt;&gt;                  * the page migration right away (proteced by page lock).</span>
<span class="quote">&gt;&gt;                  */</span>
<span class="quote">&gt;&gt; -               rc = balloon_page_migrate(newpage, page, mode);</span>
<span class="quote">&gt;&gt; +               rc = page-&gt;mapping-&gt;a_ops-&gt;migratepage(page-&gt;mapping,</span>
<span class="quote">&gt;&gt; +                                                      newpage,</span>
<span class="quote">&gt;&gt; +                                                      page,</span>
<span class="quote">&gt;&gt; +                                                      mode);</span>
<span class="quote">&gt;&gt;                 goto out_unlock;</span>
<span class="quote">&gt;&gt;         }</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; @@ -962,8 +965,8 @@ out:</span>
<span class="quote">&gt;&gt;         if (rc != MIGRATEPAGE_SUCCESS &amp;&amp; put_new_page) {</span>
<span class="quote">&gt;&gt;                 ClearPageSwapBacked(newpage);</span>
<span class="quote">&gt;&gt;                 put_new_page(newpage, private);</span>
<span class="quote">&gt;&gt; -       } else if (unlikely(__is_movable_balloon_page(newpage))) {</span>
<span class="quote">&gt;&gt; -               /* drop our reference, page already in the balloon */</span>
<span class="quote">&gt;&gt; +       } else if (unlikely(driver_page_migratable(newpage))) {</span>
<span class="quote">&gt;&gt; +               /* drop our reference */</span>
<span class="quote">&gt;&gt;                 put_page(newpage);</span>
<span class="quote">&gt;&gt;         } else</span>
<span class="quote">&gt;&gt;                 putback_lru_page(newpage);</span>
<span class="quote">&gt;&gt; --</span>
<span class="quote">&gt;&gt; 1.9.1</span>
<span class="quote">&gt;&gt;</span>
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/virtio/virtio_balloon.c b/drivers/virtio/virtio_balloon.c</span>
<span class="p_header">index c49b553..5e5cbea 100644</span>
<span class="p_header">--- a/drivers/virtio/virtio_balloon.c</span>
<span class="p_header">+++ b/drivers/virtio/virtio_balloon.c</span>
<span class="p_chunk">@@ -30,6 +30,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/balloon_compaction.h&gt;
 #include &lt;linux/oom.h&gt;
 #include &lt;linux/wait.h&gt;
<span class="p_add">+#include &lt;linux/anon_inodes.h&gt;</span>
 
 /*
  * Balloon device works in 4K page units.  So each page is pointed to by
<span class="p_header">diff --git a/mm/compaction.c b/mm/compaction.c</span>
<span class="p_header">index 16e1b57..cc5ec81 100644</span>
<span class="p_header">--- a/mm/compaction.c</span>
<span class="p_header">+++ b/mm/compaction.c</span>
<span class="p_chunk">@@ -14,7 +14,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/backing-dev.h&gt;
 #include &lt;linux/sysctl.h&gt;
 #include &lt;linux/sysfs.h&gt;
<span class="p_del">-#include &lt;linux/balloon_compaction.h&gt;</span>
<span class="p_add">+#include &lt;linux/compaction.h&gt;</span>
 #include &lt;linux/page-isolation.h&gt;
 #include &lt;linux/kasan.h&gt;
 #include &quot;internal.h&quot;
<span class="p_chunk">@@ -714,12 +714,13 @@</span> <span class="p_context"> isolate_migratepages_block(struct compact_control *cc, unsigned long low_pfn,</span>
 
 		/*
 		 * Check may be lockless but that&#39;s ok as we recheck later.
<span class="p_del">-		 * It&#39;s possible to migrate LRU pages and balloon pages</span>
<span class="p_add">+		 * It&#39;s possible to migrate LRU pages and driver pages</span>
 		 * Skip any other type of page
 		 */
 		if (!PageLRU(page)) {
<span class="p_del">-			if (unlikely(balloon_page_movable(page))) {</span>
<span class="p_del">-				if (balloon_page_isolate(page)) {</span>
<span class="p_add">+			if (unlikely(driver_page_migratable(page))) {</span>
<span class="p_add">+				if (page-&gt;mapping-&gt;a_ops-&gt;isolatepage(page,</span>
<span class="p_add">+								isolate_mode)) {</span>
 					/* Successfully isolated */
 					goto isolate_success;
 				}
<span class="p_header">diff --git a/mm/migrate.c b/mm/migrate.c</span>
<span class="p_header">index 236ee25..a0bc1e4 100644</span>
<span class="p_header">--- a/mm/migrate.c</span>
<span class="p_header">+++ b/mm/migrate.c</span>
<span class="p_chunk">@@ -35,7 +35,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/hugetlb.h&gt;
 #include &lt;linux/hugetlb_cgroup.h&gt;
 #include &lt;linux/gfp.h&gt;
<span class="p_del">-#include &lt;linux/balloon_compaction.h&gt;</span>
<span class="p_add">+#include &lt;linux/compaction.h&gt;</span>
 #include &lt;linux/mmu_notifier.h&gt;
 
 #include &lt;asm/tlbflush.h&gt;
<span class="p_chunk">@@ -76,7 +76,7 @@</span> <span class="p_context"> int migrate_prep_local(void)</span>
  * from where they were once taken off for compaction/migration.
  *
  * This function shall be used whenever the isolated pageset has been
<span class="p_del">- * built from lru, balloon, hugetlbfs page. See isolate_migratepages_range()</span>
<span class="p_add">+ * built from lru, driver, hugetlbfs page. See isolate_migratepages_range()</span>
  * and isolate_huge_page().
  */
 void putback_movable_pages(struct list_head *l)
<span class="p_chunk">@@ -92,8 +92,8 @@</span> <span class="p_context"> void putback_movable_pages(struct list_head *l)</span>
 		list_del(&amp;page-&gt;lru);
 		dec_zone_page_state(page, NR_ISOLATED_ANON +
 				page_is_file_cache(page));
<span class="p_del">-		if (unlikely(isolated_balloon_page(page)))</span>
<span class="p_del">-			balloon_page_putback(page);</span>
<span class="p_add">+		if (unlikely(driver_page_migratable(page)))</span>
<span class="p_add">+			page-&gt;mapping-&gt;a_ops-&gt;putbackpage(page);</span>
 		else
 			putback_lru_page(page);
 	}
<span class="p_chunk">@@ -844,15 +844,18 @@</span> <span class="p_context"> static int __unmap_and_move(struct page *page, struct page *newpage,</span>
 		}
 	}
 
<span class="p_del">-	if (unlikely(isolated_balloon_page(page))) {</span>
<span class="p_add">+	if (unlikely(driver_page_migratable(page))) {</span>
 		/*
<span class="p_del">-		 * A ballooned page does not need any special attention from</span>
<span class="p_add">+		 * A driver page does not need any special attention from</span>
 		 * physical to virtual reverse mapping procedures.
 		 * Skip any attempt to unmap PTEs or to remap swap cache,
 		 * in order to avoid burning cycles at rmap level, and perform
 		 * the page migration right away (proteced by page lock).
 		 */
<span class="p_del">-		rc = balloon_page_migrate(newpage, page, mode);</span>
<span class="p_add">+		rc = page-&gt;mapping-&gt;a_ops-&gt;migratepage(page-&gt;mapping,</span>
<span class="p_add">+						       newpage,</span>
<span class="p_add">+						       page,</span>
<span class="p_add">+						       mode);</span>
 		goto out_unlock;
 	}
 
<span class="p_chunk">@@ -962,8 +965,8 @@</span> <span class="p_context"> out:</span>
 	if (rc != MIGRATEPAGE_SUCCESS &amp;&amp; put_new_page) {
 		ClearPageSwapBacked(newpage);
 		put_new_page(newpage, private);
<span class="p_del">-	} else if (unlikely(__is_movable_balloon_page(newpage))) {</span>
<span class="p_del">-		/* drop our reference, page already in the balloon */</span>
<span class="p_add">+	} else if (unlikely(driver_page_migratable(newpage))) {</span>
<span class="p_add">+		/* drop our reference */</span>
 		put_page(newpage);
 	} else
 		putback_lru_page(newpage);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



