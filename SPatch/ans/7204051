
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v6,1/2] mm: hugetlb: proc: add hugetlb-related fields to /proc/PID/smaps - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v6,1/2] mm: hugetlb: proc: add hugetlb-related fields to /proc/PID/smaps</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=4407">Naoya Horiguchi</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 17, 2015, 9:09 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1442480955-7297-2-git-send-email-n-horiguchi@ah.jp.nec.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7204051/mbox/"
   >mbox</a>
|
   <a href="/patch/7204051/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7204051/">/patch/7204051/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id D46B7BEEC1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 17 Sep 2015 09:11:55 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 2EE2820809
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 17 Sep 2015 09:11:55 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 665CD20797
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 17 Sep 2015 09:11:54 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754720AbbIQJLu (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 17 Sep 2015 05:11:50 -0400
Received: from TYO202.gate.nec.co.jp ([210.143.35.52]:65462 &quot;EHLO
	tyo202.gate.nec.co.jp&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754295AbbIQJLF (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 17 Sep 2015 05:11:05 -0400
Received: from mailgate3.nec.co.jp ([10.7.69.195])
	by tyo202.gate.nec.co.jp (8.13.8/8.13.4) with ESMTP id t8H9Ai1H027919;
	Thu, 17 Sep 2015 18:10:44 +0900 (JST)
Received: from mailsv3.nec.co.jp (imss63.nec.co.jp [10.7.69.158]) by
	mailgate3.nec.co.jp (8.11.7/3.7W-MAILGATE-NEC) with ESMTP
	id t8H9Aie15855; Thu, 17 Sep 2015 18:10:44 +0900 (JST)
Received: from mail02.kamome.nec.co.jp (mail02.kamome.nec.co.jp [10.25.43.5])
	by mailsv3.nec.co.jp (8.13.8/8.13.4) with ESMTP id t8H9Aia2015093;
	Thu, 17 Sep 2015 18:10:44 +0900 (JST)
Received: from bpxc99gp.gisp.nec.co.jp ([10.38.151.148] [10.38.151.148]) by
	mail02.kamome.nec.co.jp with ESMTP id BT-MMP-2057316;
	Thu, 17 Sep 2015 18:09:33 +0900
Received: from BPXM23GP.gisp.nec.co.jp ([169.254.2.176]) by
	BPXC20GP.gisp.nec.co.jp ([10.38.151.148]) with mapi id 14.03.0224.002;
	Thu, 17 Sep 2015 18:09:32 +0900
From: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
CC: Michal Hocko &lt;mhocko@suse.cz&gt;, Vlastimil Babka &lt;vbabka@suse.cz&gt;,
	=?utf-8?B?UMOhZHJhaWcgQnJhZHk=?= &lt;P@draigBrady.com&gt;,
	David Rientjes &lt;rientjes@google.com&gt;,
	=?utf-8?B?SsO2cm4gRW5nZWw=?= &lt;joern@purestorage.com&gt;,
	Mike Kravetz &lt;mike.kravetz@oracle.com&gt;,
	&quot;linux-mm@kvack.org&quot; &lt;linux-mm@kvack.org&gt;,
	&quot;linux-kernel@vger.kernel.org&quot; &lt;linux-kernel@vger.kernel.org&gt;,
	Naoya Horiguchi &lt;nao.horiguchi@gmail.com&gt;,
	Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;
Subject: [PATCH v6 1/2] mm: hugetlb: proc: add hugetlb-related fields to
	/proc/PID/smaps
Thread-Topic: [PATCH v6 1/2] mm: hugetlb: proc: add hugetlb-related fields
	to /proc/PID/smaps
Thread-Index: AQHQ8SiQeVj9jQkBw0i+v0CVgbqlvw==
Date: Thu, 17 Sep 2015 09:09:31 +0000
Message-ID: &lt;1442480955-7297-2-git-send-email-n-horiguchi@ah.jp.nec.com&gt;
References: &lt;1442480955-7297-1-git-send-email-n-horiguchi@ah.jp.nec.com&gt;
In-Reply-To: &lt;1442480955-7297-1-git-send-email-n-horiguchi@ah.jp.nec.com&gt;
Accept-Language: ja-JP, en-US
Content-Language: ja-JP
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [10.128.101.27]
Content-Type: text/plain; charset=&quot;utf-8&quot;
Content-ID: &lt;6539326B5D45F54692FFD04515B30BF0@gisp.nec.co.jp&gt;
Content-Transfer-Encoding: base64
MIME-Version: 1.0
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=4407">Naoya Horiguchi</a> - Sept. 17, 2015, 9:09 a.m.</div>
<pre class="content">
Currently /proc/PID/smaps provides no usage info for vma(VM_HUGETLB), which
is inconvenient when we want to know per-task or per-vma base hugetlb usage.
To solve this, this patch adds new fields for hugetlb usage like below:

  Size:              20480 kB
  Rss:                   0 kB
  Pss:                   0 kB
  Shared_Clean:          0 kB
  Shared_Dirty:          0 kB
  Private_Clean:         0 kB
  Private_Dirty:         0 kB
  Referenced:            0 kB
  Anonymous:             0 kB
  AnonHugePages:         0 kB
  Shared_Hugetlb:    18432 kB
  Private_Hugetlb:     2048 kB
  Swap:                  0 kB
  KernelPageSize:     2048 kB
  MMUPageSize:        2048 kB
  Locked:                0 kB
  VmFlags: rd wr mr mw me de ht
<span class="signed-off-by">
Signed-off-by: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>
<span class="acked-by">Acked-by: Joern Engel &lt;joern@logfs.org&gt;</span>
<span class="acked-by">Acked-by: David Rientjes &lt;rientjes@google.com&gt;</span>
<span class="acked-by">Acked-by: Michal Hocko &lt;mhocko@suse.cz&gt;</span>
---
v5 -&gt; v6:
- add comment more to refer to no inclusion in RSS/PSS field
- separate field into {Shared,Private}_Hugetlb (thanks to PÃ¡draig Brady)

v3 -&gt; v4:
- suspend Acked-by tag because v3-&gt;v4 change is not trivial
- I stated in previous discussion that HugetlbPages line can contain page
  size info, but that&#39;s not necessary because we already have KernelPageSize
  info.
- merged documentation update, where the current documentation doesn&#39;t mention
  AnonHugePages, so it&#39;s also added.
---
 Documentation/filesystems/proc.txt |  8 ++++++++
 fs/proc/task_mmu.c                 | 38 ++++++++++++++++++++++++++++++++++++++
 2 files changed, 46 insertions(+)

-- 
2.4.3
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git v4.3-rc1/Documentation/filesystems/proc.txt v4.3-rc1_patched/Documentation/filesystems/proc.txt</span>
<span class="p_header">index d411ca63c8b6..b9467d91052a 100644</span>
<span class="p_header">--- v4.3-rc1/Documentation/filesystems/proc.txt</span>
<span class="p_header">+++ v4.3-rc1_patched/Documentation/filesystems/proc.txt</span>
<span class="p_chunk">@@ -423,6 +423,9 @@</span> <span class="p_context"> Private_Clean:         0 kB</span>
 Private_Dirty:         0 kB
 Referenced:          892 kB
 Anonymous:             0 kB
<span class="p_add">+AnonHugePages:         0 kB</span>
<span class="p_add">+Shared_Hugetlb:        0 kB</span>
<span class="p_add">+Private_Hugetlb:        0 kB</span>
 Swap:                  0 kB
 SwapPss:               0 kB
 KernelPageSize:        4 kB
<span class="p_chunk">@@ -451,6 +454,11 @@</span> <span class="p_context"> and a page is modified, the file page is replaced by a private anonymous copy.</span>
 &quot;Swap&quot; shows how much would-be-anonymous memory is also used, but out on
 swap.
 &quot;SwapPss&quot; shows proportional swap share of this mapping.
<span class="p_add">+&quot;AnonHugePages&quot; shows the ammount of memory backed by transparent hugepage.</span>
<span class="p_add">+&quot;Shared_Hugetlb&quot; and &quot;Private_Hugetlb&quot; show the ammounts of memory backed by</span>
<span class="p_add">+hugetlbfs page which is *not* counted in &quot;RSS&quot; or &quot;PSS&quot; field for historical</span>
<span class="p_add">+reasons. And these are not included in {Shared,Private}_{Clean,Dirty} field.</span>
<span class="p_add">+</span>
 &quot;VmFlags&quot; field deserves a separate description. This member represents the kernel
 flags associated with the particular virtual memory area in two letter encoded
 manner. The codes are the following:
<span class="p_header">diff --git v4.3-rc1/fs/proc/task_mmu.c v4.3-rc1_patched/fs/proc/task_mmu.c</span>
<span class="p_header">index e2d46adb54b4..22c02917f265 100644</span>
<span class="p_header">--- v4.3-rc1/fs/proc/task_mmu.c</span>
<span class="p_header">+++ v4.3-rc1_patched/fs/proc/task_mmu.c</span>
<span class="p_chunk">@@ -446,6 +446,8 @@</span> <span class="p_context"> struct mem_size_stats {</span>
 	unsigned long anonymous;
 	unsigned long anonymous_thp;
 	unsigned long swap;
<span class="p_add">+	unsigned long shared_hugetlb;</span>
<span class="p_add">+	unsigned long private_hugetlb;</span>
 	u64 pss;
 	u64 swap_pss;
 };
<span class="p_chunk">@@ -625,12 +627,44 @@</span> <span class="p_context"> static void show_smap_vma_flags(struct seq_file *m, struct vm_area_struct *vma)</span>
 	seq_putc(m, &#39;\n&#39;);
 }
 
<span class="p_add">+#ifdef CONFIG_HUGETLB_PAGE</span>
<span class="p_add">+static int smaps_hugetlb_range(pte_t *pte, unsigned long hmask,</span>
<span class="p_add">+				 unsigned long addr, unsigned long end,</span>
<span class="p_add">+				 struct mm_walk *walk)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct mem_size_stats *mss = walk-&gt;private;</span>
<span class="p_add">+	struct vm_area_struct *vma = walk-&gt;vma;</span>
<span class="p_add">+	struct page *page = NULL;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (pte_present(*pte)) {</span>
<span class="p_add">+		page = vm_normal_page(vma, addr, *pte);</span>
<span class="p_add">+	} else if (is_swap_pte(*pte)) {</span>
<span class="p_add">+		swp_entry_t swpent = pte_to_swp_entry(*pte);</span>
<span class="p_add">+</span>
<span class="p_add">+		if (is_migration_entry(swpent))</span>
<span class="p_add">+			page = migration_entry_to_page(swpent);</span>
<span class="p_add">+	}</span>
<span class="p_add">+	if (page) {</span>
<span class="p_add">+		int mapcount = page_mapcount(page);</span>
<span class="p_add">+</span>
<span class="p_add">+		if (mapcount &gt;= 2)</span>
<span class="p_add">+			mss-&gt;shared_hugetlb += huge_page_size(hstate_vma(vma));</span>
<span class="p_add">+		else</span>
<span class="p_add">+			mss-&gt;private_hugetlb += huge_page_size(hstate_vma(vma));</span>
<span class="p_add">+	}</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+#endif /* HUGETLB_PAGE */</span>
<span class="p_add">+</span>
 static int show_smap(struct seq_file *m, void *v, int is_pid)
 {
 	struct vm_area_struct *vma = v;
 	struct mem_size_stats mss;
 	struct mm_walk smaps_walk = {
 		.pmd_entry = smaps_pte_range,
<span class="p_add">+#ifdef CONFIG_HUGETLB_PAGE</span>
<span class="p_add">+		.hugetlb_entry = smaps_hugetlb_range,</span>
<span class="p_add">+#endif</span>
 		.mm = vma-&gt;vm_mm,
 		.private = &amp;mss,
 	};
<span class="p_chunk">@@ -652,6 +686,8 @@</span> <span class="p_context"> static int show_smap(struct seq_file *m, void *v, int is_pid)</span>
 		   &quot;Referenced:     %8lu kB\n&quot;
 		   &quot;Anonymous:      %8lu kB\n&quot;
 		   &quot;AnonHugePages:  %8lu kB\n&quot;
<span class="p_add">+		   &quot;Shared_Hugetlb: %8lu kB\n&quot;</span>
<span class="p_add">+		   &quot;Private_Hugetlb: %8lu kB\n&quot;</span>
 		   &quot;Swap:           %8lu kB\n&quot;
 		   &quot;SwapPss:        %8lu kB\n&quot;
 		   &quot;KernelPageSize: %8lu kB\n&quot;
<span class="p_chunk">@@ -667,6 +703,8 @@</span> <span class="p_context"> static int show_smap(struct seq_file *m, void *v, int is_pid)</span>
 		   mss.referenced &gt;&gt; 10,
 		   mss.anonymous &gt;&gt; 10,
 		   mss.anonymous_thp &gt;&gt; 10,
<span class="p_add">+		   mss.shared_hugetlb &gt;&gt; 10,</span>
<span class="p_add">+		   mss.private_hugetlb &gt;&gt; 10,</span>
 		   mss.swap &gt;&gt; 10,
 		   (unsigned long)(mss.swap_pss &gt;&gt; (10 + PSS_SHIFT)),
 		   vma_kernel_pagesize(vma) &gt;&gt; 10,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



