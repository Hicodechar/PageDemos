
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[6/9] x86/microcode: Dont abuse the tlbflush interface - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [6/9] x86/microcode: Dont abuse the tlbflush interface</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 5, 2017, 12:34 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171205123820.185021296@infradead.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10092841/mbox/"
   >mbox</a>
|
   <a href="/patch/10092841/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10092841/">/patch/10092841/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	88B1F6035E for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  5 Dec 2017 12:41:55 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 83F4C288FD
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  5 Dec 2017 12:41:55 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 787B929576; Tue,  5 Dec 2017 12:41:55 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C16B5288FD
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  5 Dec 2017 12:41:54 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752938AbdLEMlx (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 5 Dec 2017 07:41:53 -0500
Received: from merlin.infradead.org ([205.233.59.134]:60720 &quot;EHLO
	merlin.infradead.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752812AbdLEMlu (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 5 Dec 2017 07:41:50 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=infradead.org; s=merlin.20170209;
	h=Content-Type:MIME-Version:References:
	Subject:Cc:To:From:Date:Message-Id:Sender:Reply-To:Content-Transfer-Encoding:
	Content-ID:Content-Description:Resent-Date:Resent-From:Resent-Sender:
	Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:List-Id:List-Help:
	List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
	bh=Q4jgpyFi8GBuIGF1yBxXZCK2OknevYUpNGDlzgInoh8=;
	b=wPG2dwotBT+Kd/p9/1srlWuDV+
	l1FXN0csh5efQ5/TQPMvsB4bjGShWh4HoD0NpFy2681ewFU1MfH01fjE9AsgAyaEENqmQx6nwjIzy
	cS5drIxqOxTe+wgQi+WaHW5bpPnaq+tMW0zBhiMYxUbIiZ8Y1i1WBEOFKiFiS7mc9ru3Rfjo4j7da
	1dybEYG8ukVL+xtXbZX0MrkWj3SHGIvfYXDKhN8lN7HLJA20R7meYGjgmcwd4V+yGmqDoVwd6OecE
	DrUBcemP+Z6Ldb7voeWqr9ShzqZo/oI6AgqoJD1gMT0+pkXfH7qjGyGwfbbYmcNCnVgGPQUmbxddg
	RTynuW4A==;
Received: from j217100.upc-j.chello.nl ([24.132.217.100]
	helo=hirez.programming.kicks-ass.net)
	by merlin.infradead.org with esmtpsa (Exim 4.87 #1 (Red Hat Linux))
	id 1eMCX1-0005S7-UW; Tue, 05 Dec 2017 12:41:04 +0000
Received: by hirez.programming.kicks-ass.net (Postfix, from userid 0)
	id 7D4E6200D49C3; Tue,  5 Dec 2017 13:41:00 +0100 (CET)
Message-Id: &lt;20171205123820.185021296@infradead.org&gt;
User-Agent: quilt/0.63-1
Date: Tue, 05 Dec 2017 13:34:51 +0100
From: Peter Zijlstra &lt;peterz@infradead.org&gt;
To: linux-kernel@vger.kernel.org
Cc: x86@kernel.org, Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Andy Lutomirsky &lt;luto@kernel.org&gt;, Peter Zijlstra &lt;peterz@infradead.org&gt;,
	Dave Hansen &lt;dave.hansen@intel.com&gt;, Borislav Petkov &lt;bpetkov@suse.de&gt;,
	Greg KH &lt;gregkh@linuxfoundation.org&gt;, keescook@google.com,
	hughd@google.com, Brian Gerst &lt;brgerst@gmail.com&gt;,
	Josh Poimboeuf &lt;jpoimboe@redhat.com&gt;,
	Denys Vlasenko &lt;dvlasenk@redhat.com&gt;, Rik van Riel &lt;riel@redhat.com&gt;,
	Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;,
	Juergen Gross &lt;jgross@suse.com&gt;, David Laight &lt;David.Laight@aculab.com&gt;,
	Eduardo Valentin &lt;eduval@amazon.com&gt;, aliguori@amazon.com,
	Will Deacon &lt;will.deacon@arm.com&gt;, daniel.gruss@iaik.tugraz.at,
	Dave Hansen &lt;dave.hansen@linux.intel.com&gt;,
	Ingo Molnar &lt;mingo@kernel.org&gt;, moritz.lipp@iaik.tugraz.at,
	linux-mm@kvack.org, Borislav Petkov &lt;bp@alien8.de&gt;,
	michael.schwarz@iaik.tugraz.at, richard.fellner@student.tugraz.at,
	hpa@zytor.com, fenghua.yu@intel.com
Subject: [PATCH 6/9] x86/microcode: Dont abuse the tlbflush interface
References: &lt;20171205123444.990868007@infradead.org&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline; filename=peterz-tlb-cleanup.patch
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a> - Dec. 5, 2017, 12:34 p.m.</div>
<pre class="content">
Commit ec400ddeff20 (&quot;x86/microcode_intel_early.c: Early update ucode
on Intel&#39;s CPU&quot;) grubbed into tlbflush internals without coherent
explanation.

Since it says its precaution and the SDM doesn&#39;t mention anything like
this, take it out back.

Cc: hpa@zytor.com
Cc: fenghua.yu@intel.com
Cc: bp@alien8.de
<span class="signed-off-by">Signed-off-by: Peter Zijlstra (Intel) &lt;peterz@infradead.org&gt;</span>
---
 arch/x86/include/asm/tlbflush.h       |   19 ++++++-------------
 arch/x86/kernel/cpu/microcode/intel.c |   13 -------------
 2 files changed, 6 insertions(+), 26 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_chunk">@@ -394,20 +394,9 @@</span> <span class="p_context"> static inline void __native_flush_tlb(vo</span>
 	preempt_enable();
 }
 
<span class="p_del">-static inline void __native_flush_tlb_global_irq_disabled(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	unsigned long cr4;</span>
<span class="p_del">-</span>
<span class="p_del">-	cr4 = this_cpu_read(cpu_tlbstate.cr4);</span>
<span class="p_del">-	/* clear PGE */</span>
<span class="p_del">-	native_write_cr4(cr4 &amp; ~X86_CR4_PGE);</span>
<span class="p_del">-	/* write old PGE again and flush TLBs */</span>
<span class="p_del">-	native_write_cr4(cr4);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline void __native_flush_tlb_global(void)
 {
<span class="p_del">-	unsigned long flags;</span>
<span class="p_add">+	unsigned long cr4, flags;</span>
 
 	if (static_cpu_has(X86_FEATURE_INVPCID)) {
 		/*
<span class="p_chunk">@@ -427,7 +416,11 @@</span> <span class="p_context"> static inline void __native_flush_tlb_gl</span>
 	 */
 	raw_local_irq_save(flags);
 
<span class="p_del">-	__native_flush_tlb_global_irq_disabled();</span>
<span class="p_add">+	cr4 = this_cpu_read(cpu_tlbstate.cr4);</span>
<span class="p_add">+	/* toggle PGE */</span>
<span class="p_add">+	native_write_cr4(cr4 ^ X86_CR4_PGE);</span>
<span class="p_add">+	/* write old PGE again and flush TLBs */</span>
<span class="p_add">+	native_write_cr4(cr4);</span>
 
 	raw_local_irq_restore(flags);
 }
<span class="p_header">--- a/arch/x86/kernel/cpu/microcode/intel.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/microcode/intel.c</span>
<span class="p_chunk">@@ -565,15 +565,6 @@</span> <span class="p_context"> static void print_ucode(struct ucode_cpu</span>
 }
 #else
 
<span class="p_del">-/*</span>
<span class="p_del">- * Flush global tlb. We only do this in x86_64 where paging has been enabled</span>
<span class="p_del">- * already and PGE should be enabled as well.</span>
<span class="p_del">- */</span>
<span class="p_del">-static inline void flush_tlb_early(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	__native_flush_tlb_global_irq_disabled();</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline void print_ucode(struct ucode_cpu_info *uci)
 {
 	struct microcode_intel *mc;
<span class="p_chunk">@@ -602,10 +593,6 @@</span> <span class="p_context"> static int apply_microcode_early(struct</span>
 	if (rev != mc-&gt;hdr.rev)
 		return -1;
 
<span class="p_del">-#ifdef CONFIG_X86_64</span>
<span class="p_del">-	/* Flush global tlb. This is precaution. */</span>
<span class="p_del">-	flush_tlb_early();</span>
<span class="p_del">-#endif</span>
 	uci-&gt;cpu_sig.rev = rev;
 
 	if (early)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



