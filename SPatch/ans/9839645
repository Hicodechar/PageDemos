
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>mm/mremap: Fail map duplication attempts for private mappings - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    mm/mremap: Fail map duplication attempts for private mappings</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 13, 2017, 10:33 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;415625d2-1be9-71f0-ca11-a014cef98a3f@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9839645/mbox/"
   >mbox</a>
|
   <a href="/patch/9839645/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9839645/">/patch/9839645/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	A4610602D8 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 13 Jul 2017 22:34:26 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B270E27EE2
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 13 Jul 2017 22:34:26 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A703A27F8F; Thu, 13 Jul 2017 22:34:26 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id F246327EE2
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 13 Jul 2017 22:34:25 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753095AbdGMWeO (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 13 Jul 2017 18:34:14 -0400
Received: from aserp1040.oracle.com ([141.146.126.69]:44318 &quot;EHLO
	aserp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752919AbdGMWeM (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 13 Jul 2017 18:34:12 -0400
Received: from userv0022.oracle.com (userv0022.oracle.com [156.151.31.74])
	by aserp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2) with
	ESMTP id v6DMXrYj027455
	(version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Thu, 13 Jul 2017 22:33:54 GMT
Received: from aserv0121.oracle.com (aserv0121.oracle.com [141.146.126.235])
	by userv0022.oracle.com (8.14.4/8.14.4) with ESMTP id
	v6DMXqIY010532
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Thu, 13 Jul 2017 22:33:53 GMT
Received: from abhmp0002.oracle.com (abhmp0002.oracle.com [141.146.116.8])
	by aserv0121.oracle.com (8.13.8/8.13.8) with ESMTP id v6DMXngs029920; 
	Thu, 13 Jul 2017 22:33:50 GMT
Received: from [192.168.1.164] (/50.188.161.229)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Thu, 13 Jul 2017 15:33:48 -0700
Subject: Re: [PATCH] mm/mremap: Fail map duplication attempts for private
	mappings
To: Vlastimil Babka &lt;vbabka@suse.cz&gt;, linux-mm@kvack.org,
	linux-kernel@vger.kernel.org
References: &lt;1499961495-8063-1-git-send-email-mike.kravetz@oracle.com&gt;
	&lt;4e921eb5-8741-3337-9a7d-5ec9473412da@suse.cz&gt;
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Andrea Arcangeli &lt;aarcange@redhat.com&gt;,
	Michal Hocko &lt;mhocko@suse.com&gt;, Aaron Lu &lt;aaron.lu@intel.com&gt;,
	&quot;Kirill A . Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Anshuman Khandual &lt;khandual@linux.vnet.ibm.com&gt;,
	Linux API &lt;linux-api@vger.kernel.org&gt;
From: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
Message-ID: &lt;415625d2-1be9-71f0-ca11-a014cef98a3f@oracle.com&gt;
Date: Thu, 13 Jul 2017 15:33:47 -0700
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101
	Thunderbird/45.8.0
MIME-Version: 1.0
In-Reply-To: &lt;4e921eb5-8741-3337-9a7d-5ec9473412da@suse.cz&gt;
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit
X-Source-IP: userv0022.oracle.com [156.151.31.74]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - July 13, 2017, 10:33 p.m.</div>
<pre class="content">
On 07/13/2017 12:11 PM, Vlastimil Babka wrote:
<span class="quote">&gt; [+CC linux-api]</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; On 07/13/2017 05:58 PM, Mike Kravetz wrote:</span>
<span class="quote">&gt;&gt; mremap will create a &#39;duplicate&#39; mapping if old_size == 0 is</span>
<span class="quote">&gt;&gt; specified.  Such duplicate mappings make no sense for private</span>
<span class="quote">&gt;&gt; mappings.  If duplication is attempted for a private mapping,</span>
<span class="quote">&gt;&gt; mremap creates a separate private mapping unrelated to the</span>
<span class="quote">&gt;&gt; original mapping and makes no modifications to the original.</span>
<span class="quote">&gt;&gt; This is contrary to the purpose of mremap which should return</span>
<span class="quote">&gt;&gt; a mapping which is in some way related to the original.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Therefore, return EINVAL in the case where if an attempt is</span>
<span class="quote">&gt;&gt; made to duplicate a private mapping.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Acked-by: Vlastimil Babka &lt;vbabka@suse.cz&gt;</span>
<span class="quote">&gt; </span>

In another e-mail thread, Andrea makes the case that mremap(old_size == 0)
of private file backed mappings could possibly be used for something useful.
For example to create a private COW mapping.  Of course, a better way to do
this would be simply using the fd to create a private mapping.

If returning EINVAL for all private mappings is too general, the following
patch adds a check to only return EINVAL for private anon mappings.

mm/mremap: Fail map duplication attempts for private anon mappings

mremap will create a &#39;duplicate&#39; mapping if old_size == 0 is
specified.  Such duplicate mappings make no sense for private
anonymous mappings.  If duplication is attempted for a private
anon mapping, mremap creates a separate private mapping unrelated
to the original mapping and makes no modifications to the original.
This is contrary to the purpose of mremap which should return a
mapping which is in some way related to the original.

Therefore, return EINVAL in the case where an attempt is made to
duplicate a private anon mapping.
<span class="signed-off-by">
Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
---
 mm/mremap.c | 8 ++++++++
 1 file changed, 8 insertions(+)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=36302">Anshuman Khandual</a> - July 14, 2017, 4:51 a.m.</div>
<pre class="content">
On 07/14/2017 04:03 AM, Mike Kravetz wrote:
<span class="quote">&gt; On 07/13/2017 12:11 PM, Vlastimil Babka wrote:</span>
<span class="quote">&gt;&gt; [+CC linux-api]</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; On 07/13/2017 05:58 PM, Mike Kravetz wrote:</span>
<span class="quote">&gt;&gt;&gt; mremap will create a &#39;duplicate&#39; mapping if old_size == 0 is</span>
<span class="quote">&gt;&gt;&gt; specified.  Such duplicate mappings make no sense for private</span>
<span class="quote">&gt;&gt;&gt; mappings.  If duplication is attempted for a private mapping,</span>
<span class="quote">&gt;&gt;&gt; mremap creates a separate private mapping unrelated to the</span>
<span class="quote">&gt;&gt;&gt; original mapping and makes no modifications to the original.</span>
<span class="quote">&gt;&gt;&gt; This is contrary to the purpose of mremap which should return</span>
<span class="quote">&gt;&gt;&gt; a mapping which is in some way related to the original.</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; Therefore, return EINVAL in the case where if an attempt is</span>
<span class="quote">&gt;&gt;&gt; made to duplicate a private mapping.</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="quote">&gt;&gt; Acked-by: Vlastimil Babka &lt;vbabka@suse.cz&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt; In another e-mail thread, Andrea makes the case that mremap(old_size == 0)</span>
<span class="quote">&gt; of private file backed mappings could possibly be used for something useful.</span>
<span class="quote">&gt; For example to create a private COW mapping.  Of course, a better way to do</span>
<span class="quote">&gt; this would be simply using the fd to create a private mapping.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; If returning EINVAL for all private mappings is too general, the following</span>
<span class="quote">&gt; patch adds a check to only return EINVAL for private anon mappings.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; mm/mremap: Fail map duplication attempts for private anon mappings</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; mremap will create a &#39;duplicate&#39; mapping if old_size == 0 is</span>
<span class="quote">&gt; specified.  Such duplicate mappings make no sense for private</span>
<span class="quote">&gt; anonymous mappings.  If duplication is attempted for a private</span>
<span class="quote">&gt; anon mapping, mremap creates a separate private mapping unrelated</span>
<span class="quote">&gt; to the original mapping and makes no modifications to the original.</span>
<span class="quote">&gt; This is contrary to the purpose of mremap which should return a</span>
<span class="quote">&gt; mapping which is in some way related to the original.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Therefore, return EINVAL in the case where an attempt is made to</span>
<span class="quote">&gt; duplicate a private anon mapping.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  mm/mremap.c | 8 ++++++++</span>
<span class="quote">&gt;  1 file changed, 8 insertions(+)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/mm/mremap.c b/mm/mremap.c</span>
<span class="quote">&gt; index cd8a1b1..586ea3d 100644</span>
<span class="quote">&gt; --- a/mm/mremap.c</span>
<span class="quote">&gt; +++ b/mm/mremap.c</span>
<span class="quote">&gt; @@ -383,6 +383,14 @@ static struct vm_area_struct *vma_to_resize(unsigned long addr,</span>
<span class="quote">&gt;  	if (!vma || vma-&gt;vm_start &gt; addr)</span>
<span class="quote">&gt;  		return ERR_PTR(-EFAULT);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +	/*</span>
<span class="quote">&gt; +	 * !old_len  is a special case where a mapping is &#39;duplicated&#39;.</span>
<span class="quote">&gt; +	 * Do not allow this for private anon mappings.</span>
<span class="quote">&gt; +	 */</span>
<span class="quote">&gt; +	if (!old_len &amp;&amp; vma_is_anonymous(vma) &amp;&amp;</span>
<span class="quote">&gt; +	    !(vma-&gt;vm_flags &amp; (VM_SHARED | VM_MAYSHARE)))</span>
<span class="quote">&gt; +		return ERR_PTR(-EINVAL);</span>

Sounds better compared to rejecting everything private.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137061">Michal Hocko</a> - July 14, 2017, 8:26 a.m.</div>
<pre class="content">
On Thu 13-07-17 15:33:47, Mike Kravetz wrote:
<span class="quote">&gt; On 07/13/2017 12:11 PM, Vlastimil Babka wrote:</span>
<span class="quote">&gt; &gt; [+CC linux-api]</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; On 07/13/2017 05:58 PM, Mike Kravetz wrote:</span>
<span class="quote">&gt; &gt;&gt; mremap will create a &#39;duplicate&#39; mapping if old_size == 0 is</span>
<span class="quote">&gt; &gt;&gt; specified.  Such duplicate mappings make no sense for private</span>
<span class="quote">&gt; &gt;&gt; mappings.  If duplication is attempted for a private mapping,</span>
<span class="quote">&gt; &gt;&gt; mremap creates a separate private mapping unrelated to the</span>
<span class="quote">&gt; &gt;&gt; original mapping and makes no modifications to the original.</span>
<span class="quote">&gt; &gt;&gt; This is contrary to the purpose of mremap which should return</span>
<span class="quote">&gt; &gt;&gt; a mapping which is in some way related to the original.</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; Therefore, return EINVAL in the case where if an attempt is</span>
<span class="quote">&gt; &gt;&gt; made to duplicate a private mapping.</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Acked-by: Vlastimil Babka &lt;vbabka@suse.cz&gt;</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; </span>
<span class="quote">&gt; In another e-mail thread, Andrea makes the case that mremap(old_size == 0)</span>
<span class="quote">&gt; of private file backed mappings could possibly be used for something useful.</span>
<span class="quote">&gt; For example to create a private COW mapping.</span>

What does this mean exactly? I do not see it would force CoW so again
the new mapping could fail with the basic invariant that the content
of the new mapping should match the old one (e.g. old mapping already
CoWed some pages the new mapping would still contain the origin content
unless I am missing something).

[...]
<span class="quote">&gt; +	/*</span>
<span class="quote">&gt; +	 * !old_len  is a special case where a mapping is &#39;duplicated&#39;.</span>
<span class="quote">&gt; +	 * Do not allow this for private anon mappings.</span>
<span class="quote">&gt; +	 */</span>
<span class="quote">&gt; +	if (!old_len &amp;&amp; vma_is_anonymous(vma) &amp;&amp;</span>
<span class="quote">&gt; +	    !(vma-&gt;vm_flags &amp; (VM_SHARED | VM_MAYSHARE)))</span>
<span class="quote">&gt; +		return ERR_PTR(-EINVAL);</span>

Why is vma_is_anonymous() without VM_*SHARE* check insufficient?
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - July 14, 2017, 5:29 p.m.</div>
<pre class="content">
On 07/14/2017 01:26 AM, Michal Hocko wrote:
<span class="quote">&gt; On Thu 13-07-17 15:33:47, Mike Kravetz wrote:</span>
<span class="quote">&gt;&gt; On 07/13/2017 12:11 PM, Vlastimil Babka wrote:</span>
<span class="quote">&gt;&gt;&gt; [+CC linux-api]</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; On 07/13/2017 05:58 PM, Mike Kravetz wrote:</span>
<span class="quote">&gt;&gt;&gt;&gt; mremap will create a &#39;duplicate&#39; mapping if old_size == 0 is</span>
<span class="quote">&gt;&gt;&gt;&gt; specified.  Such duplicate mappings make no sense for private</span>
<span class="quote">&gt;&gt;&gt;&gt; mappings.  If duplication is attempted for a private mapping,</span>
<span class="quote">&gt;&gt;&gt;&gt; mremap creates a separate private mapping unrelated to the</span>
<span class="quote">&gt;&gt;&gt;&gt; original mapping and makes no modifications to the original.</span>
<span class="quote">&gt;&gt;&gt;&gt; This is contrary to the purpose of mremap which should return</span>
<span class="quote">&gt;&gt;&gt;&gt; a mapping which is in some way related to the original.</span>
<span class="quote">&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt; Therefore, return EINVAL in the case where if an attempt is</span>
<span class="quote">&gt;&gt;&gt;&gt; made to duplicate a private mapping.</span>
<span class="quote">&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt; Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; Acked-by: Vlastimil Babka &lt;vbabka@suse.cz&gt;</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; In another e-mail thread, Andrea makes the case that mremap(old_size == 0)</span>
<span class="quote">&gt;&gt; of private file backed mappings could possibly be used for something useful.</span>
<span class="quote">&gt;&gt; For example to create a private COW mapping.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; What does this mean exactly? I do not see it would force CoW so again</span>
<span class="quote">&gt; the new mapping could fail with the basic invariant that the content</span>
<span class="quote">&gt; of the new mapping should match the old one (e.g. old mapping already</span>
<span class="quote">&gt; CoWed some pages the new mapping would still contain the origin content</span>
<span class="quote">&gt; unless I am missing something).</span>

I do not think you are missing anything.  You are correct in saying that
the new mapping would be COW of the original file contents.  It is NOT
based on any private pages of the old private mapping.  Sorry, my wording
above was not quite clear.

As previously discussed, the more straight forward to way to accomplish
the same thing would be a simple call to mmap with the fd.

After thinking about this some more, perhaps the original patch to return
EINVAL for all private mappings makes more sense.  Even in the case of a
file backed private mapping, the new mapping will be based on the file and
not the old mapping.  The purpose of mremap is to create a new mapping
based on the old mapping.  So, this is not strictly in line with the purpose
of mremap.

Actually, the more I think about this, the more I wish there was some way
to deprecate and eventually eliminate the old_size == 0 behavior.
<span class="quote">
&gt; [...]</span>
<span class="quote">&gt;&gt; +	/*</span>
<span class="quote">&gt;&gt; +	 * !old_len  is a special case where a mapping is &#39;duplicated&#39;.</span>
<span class="quote">&gt;&gt; +	 * Do not allow this for private anon mappings.</span>
<span class="quote">&gt;&gt; +	 */</span>
<span class="quote">&gt;&gt; +	if (!old_len &amp;&amp; vma_is_anonymous(vma) &amp;&amp;</span>
<span class="quote">&gt;&gt; +	    !(vma-&gt;vm_flags &amp; (VM_SHARED | VM_MAYSHARE)))</span>
<span class="quote">&gt;&gt; +		return ERR_PTR(-EINVAL);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Why is vma_is_anonymous() without VM_*SHARE* check insufficient?</span>

Are you asking,
why is if (!old_len &amp;&amp; vma_is_anonymous(vma)) insufficient?

If so, you are correct that the additional check for VM_*SHARE* is not
necessary.  Shared mappings are technically not anonymous as they must
contain a common backing object.

The !(vma-&gt;vm_flags &amp; (VM_SHARED | VM_MAYSHARE) check was there in the first
patch to catch all private mappings.  When adding vma_is_anonymous(vma), I
missed the fact that it was redundant.  But, based on your comments above
I think the first patch is more correct.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137061">Michal Hocko</a> - July 17, 2017, 6:44 a.m.</div>
<pre class="content">
On Fri 14-07-17 10:29:01, Mike Kravetz wrote:
<span class="quote">&gt; On 07/14/2017 01:26 AM, Michal Hocko wrote:</span>
<span class="quote">&gt; &gt; On Thu 13-07-17 15:33:47, Mike Kravetz wrote:</span>
<span class="quote">&gt; &gt;&gt; On 07/13/2017 12:11 PM, Vlastimil Babka wrote:</span>
<span class="quote">&gt; &gt;&gt;&gt; [+CC linux-api]</span>
<span class="quote">&gt; &gt;&gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;&gt; On 07/13/2017 05:58 PM, Mike Kravetz wrote:</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt; mremap will create a &#39;duplicate&#39; mapping if old_size == 0 is</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt; specified.  Such duplicate mappings make no sense for private</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt; mappings.  If duplication is attempted for a private mapping,</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt; mremap creates a separate private mapping unrelated to the</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt; original mapping and makes no modifications to the original.</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt; This is contrary to the purpose of mremap which should return</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt; a mapping which is in some way related to the original.</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt; Therefore, return EINVAL in the case where if an attempt is</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt; made to duplicate a private mapping.</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;&gt;&gt; Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
<span class="quote">&gt; &gt;&gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;&gt; Acked-by: Vlastimil Babka &lt;vbabka@suse.cz&gt;</span>
<span class="quote">&gt; &gt;&gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; In another e-mail thread, Andrea makes the case that mremap(old_size == 0)</span>
<span class="quote">&gt; &gt;&gt; of private file backed mappings could possibly be used for something useful.</span>
<span class="quote">&gt; &gt;&gt; For example to create a private COW mapping.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; What does this mean exactly? I do not see it would force CoW so again</span>
<span class="quote">&gt; &gt; the new mapping could fail with the basic invariant that the content</span>
<span class="quote">&gt; &gt; of the new mapping should match the old one (e.g. old mapping already</span>
<span class="quote">&gt; &gt; CoWed some pages the new mapping would still contain the origin content</span>
<span class="quote">&gt; &gt; unless I am missing something).</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I do not think you are missing anything.  You are correct in saying that</span>
<span class="quote">&gt; the new mapping would be COW of the original file contents.  It is NOT</span>
<span class="quote">&gt; based on any private pages of the old private mapping.  Sorry, my wording</span>
<span class="quote">&gt; above was not quite clear.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; As previously discussed, the more straight forward to way to accomplish</span>
<span class="quote">&gt; the same thing would be a simple call to mmap with the fd.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; After thinking about this some more, perhaps the original patch to return</span>
<span class="quote">&gt; EINVAL for all private mappings makes more sense.  Even in the case of a</span>
<span class="quote">&gt; file backed private mapping, the new mapping will be based on the file and</span>
<span class="quote">&gt; not the old mapping.  The purpose of mremap is to create a new mapping</span>
<span class="quote">&gt; based on the old mapping.  So, this is not strictly in line with the purpose</span>
<span class="quote">&gt; of mremap.</span>

Yes that is exactly my point. One would expect that the new mapping has
the same content as the previous mapping at the time when it was created
and the copy will be &quot;atomic&quot; (wrt. page faults). Otherwise you could
simply implement it in the userspace.

That being said, I do not think we should try to pretend this is a
correct behavior and the !old_len should be supported only for the
shared mappings which have at least reasonable semantic.
<span class="quote">
&gt; Actually, the more I think about this, the more I wish there was some way</span>
<span class="quote">&gt; to deprecate and eventually eliminate the old_size == 0 behavior.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; [...]</span>
<span class="quote">&gt; &gt;&gt; +	/*</span>
<span class="quote">&gt; &gt;&gt; +	 * !old_len  is a special case where a mapping is &#39;duplicated&#39;.</span>
<span class="quote">&gt; &gt;&gt; +	 * Do not allow this for private anon mappings.</span>
<span class="quote">&gt; &gt;&gt; +	 */</span>
<span class="quote">&gt; &gt;&gt; +	if (!old_len &amp;&amp; vma_is_anonymous(vma) &amp;&amp;</span>
<span class="quote">&gt; &gt;&gt; +	    !(vma-&gt;vm_flags &amp; (VM_SHARED | VM_MAYSHARE)))</span>
<span class="quote">&gt; &gt;&gt; +		return ERR_PTR(-EINVAL);</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Why is vma_is_anonymous() without VM_*SHARE* check insufficient?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Are you asking,</span>
<span class="quote">&gt; why is if (!old_len &amp;&amp; vma_is_anonymous(vma)) insufficient?</span>

yes
<span class="quote">
&gt; If so, you are correct that the additional check for VM_*SHARE* is not</span>
<span class="quote">&gt; necessary.  Shared mappings are technically not anonymous as they must</span>
<span class="quote">&gt; contain a common backing object.</span>

that is my understanding as well. But maybe there are some weird
mappings which do not have vm_ops and populate the whole range inside
the mmap callback. I remember we had a CVE for those but forgot all
details of course. Failing on those doesn&#39;t seem like a tragedy to me
and maybe it is even correct.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/mremap.c b/mm/mremap.c</span>
<span class="p_header">index cd8a1b1..586ea3d 100644</span>
<span class="p_header">--- a/mm/mremap.c</span>
<span class="p_header">+++ b/mm/mremap.c</span>
<span class="p_chunk">@@ -383,6 +383,14 @@</span> <span class="p_context"> static struct vm_area_struct *vma_to_resize(unsigned long addr,</span>
 	if (!vma || vma-&gt;vm_start &gt; addr)
 		return ERR_PTR(-EFAULT);
 
<span class="p_add">+	/*</span>
<span class="p_add">+	 * !old_len  is a special case where a mapping is &#39;duplicated&#39;.</span>
<span class="p_add">+	 * Do not allow this for private anon mappings.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	if (!old_len &amp;&amp; vma_is_anonymous(vma) &amp;&amp;</span>
<span class="p_add">+	    !(vma-&gt;vm_flags &amp; (VM_SHARED | VM_MAYSHARE)))</span>
<span class="p_add">+		return ERR_PTR(-EINVAL);</span>
<span class="p_add">+</span>
 	if (is_vm_hugetlb_page(vma))
 		return ERR_PTR(-EINVAL);
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



