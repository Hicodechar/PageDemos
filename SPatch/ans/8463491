
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>usbhid: Fix lockdep unannotated irqs-off warning - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    usbhid: Fix lockdep unannotated irqs-off warning</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=41441">Sedat Dilek</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 1, 2016, 10:05 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;CA+icZUUCNAUDVqg1D-brJtZ2_QRxW_2s+jv0T5MPpCE9Y-auvg@mail.gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8463491/mbox/"
   >mbox</a>
|
   <a href="/patch/8463491/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8463491/">/patch/8463491/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 90C59C0553
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  1 Mar 2016 10:06:19 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id A37E920306
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  1 Mar 2016 10:06:08 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 2FC2A202EC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  1 Mar 2016 10:06:02 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752966AbcCAKF5 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 1 Mar 2016 05:05:57 -0500
Received: from mail-vk0-f50.google.com ([209.85.213.50]:36167 &quot;EHLO
	mail-vk0-f50.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752306AbcCAKFo (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 1 Mar 2016 05:05:44 -0500
Received: by mail-vk0-f50.google.com with SMTP id c3so162274469vkb.3;
	Tue, 01 Mar 2016 02:05:43 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=mime-version:reply-to:in-reply-to:references:date:message-id
	:subject:from:to:cc;
	bh=SOusHMM080IXGAnpaq/poUY3NrxCN9VKQWspaySXkAo=;
	b=QLpVdy3UEmVdt7D5O0lQPc0NEJlYRruF0iC16118fzEEUMcR/Hxh5gm3V5uDc7VfCS
	246ZMwjoj4Cbjp718lcCgL3YZE69/DNWnZVcYGNl+sVaiWOe43ad4tTcgY1A0AY8IR4q
	Tx6tXm159Tagpx/2ETRIlYE8O75SvXayTejNzqrsBkP5ysROpFf5hf3BfA02dD79xV4q
	L46J2SfMqn9maWp5oPnnFv8gTBiB4gRgVjjOGTBI0gr/Q8YnF7I42LdJIFHkE5FbEobD
	K44Vj6vEPj/eefhz++Tp9+yiQwaMJPx+YRHocUnQcgt7jTNTK3iT0HEj4vWLfgcxmkmO
	wX6Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20130820;
	h=x-gm-message-state:mime-version:reply-to:in-reply-to:references
	:date:message-id:subject:from:to:cc;
	bh=SOusHMM080IXGAnpaq/poUY3NrxCN9VKQWspaySXkAo=;
	b=dNgEOn6WVzlvewRNhwNn1+MkXq8qnvelznZjyaFaMcjYpNfLNt2Un0hGCGqhnZY93a
	1E73ZeaOlatiSbir102orhBiJhhyqmANj+IYUlqtHDHiemUXkVrlQpTnvx1iM49CSK7T
	SawBeErKr26DDVMRYYU/CMdCU5Sw3l8CNXLqJU4Jb9DnrxUOlYMCGTL2i68wYce5aBuw
	H4CBuorXZXZwpyUbULXhpbfox+y8sL7dC5M0o2glSDScFYs3rpa/f549JI+oO4xAdKMc
	0A0i26sgfahlQ426zdTrV/0fEi9HXtnuH7t4mprsvH653s7CYsBGf8z7z7J1xPXBO6yd
	4qwg==
X-Gm-Message-State: AD7BkJLEQBGbkya52xgDmisClCmzZIIOp3YsB9s6WMNT+Jf9vbNwPXz+8yQ8rAuU+W8W5UUphU90NXsHK+8o+Q==
MIME-Version: 1.0
X-Received: by 10.31.159.136 with SMTP id
	i130mr15080527vke.144.1456826742565; 
	Tue, 01 Mar 2016 02:05:42 -0800 (PST)
Received: by 10.103.82.133 with HTTP; Tue, 1 Mar 2016 02:05:42 -0800 (PST)
Reply-To: sedat.dilek@gmail.com
In-Reply-To: &lt;20151012205755.7ad86f4c@grimm.local.home&gt;
References: &lt;1443427804-2957-1-git-send-email-sedat.dilek@gmail.com&gt;
	&lt;alpine.LNX.2.00.1509281329261.30132@pobox.suse.cz&gt;
	&lt;CA+icZUWXcNue2kx0nLzAmJeaYVgcpqT3Zz8cuRkQDcT93n4U+w@mail.gmail.com&gt;
	&lt;alpine.LNX.2.00.1509291117280.30132@pobox.suse.cz&gt;
	&lt;CA+icZUWH2vR_vpYu4hCS578U3ssmoiF0pLYUfM-Xo-57e8uN=g@mail.gmail.com&gt;
	&lt;alpine.LNX.2.00.1509300918090.30132@pobox.suse.cz&gt;
	&lt;20150930045655.1c52eecd@gandalf.local.home&gt;
	&lt;CA+icZUUnoD8_=Wm+OM2pN0ZS-rwqjLHtTw5xCWe5epNqSTZSiQ@mail.gmail.com&gt;
	&lt;20150930061351.06f06abd@gandalf.local.home&gt;
	&lt;CA+icZUXSzScTmMgLZwPQq9RMH9cUsD5_iDxKTVuG0rrGqH-8Cw@mail.gmail.com&gt;
	&lt;20150930220153.7a75c4fc@grimm.local.home&gt;
	&lt;CA+icZUV7pxXoApuLdc7Z=kMHiKG=diHNqsnR5-MHpER=XkjQVQ@mail.gmail.com&gt;
	&lt;CA+icZUUyaHqHP2v52juhGhoTNS9xX7LT2YxkOppLz6f9Z+FBEA@mail.gmail.com&gt;
	&lt;CA+icZUWagGMVNs5gBPRBhYO0LsY2A1hK3KSLabp9ZpDVOTmtig@mail.gmail.com&gt;
	&lt;20151012205755.7ad86f4c@grimm.local.home&gt;
Date: Tue, 1 Mar 2016 11:05:42 +0100
Message-ID: &lt;CA+icZUUCNAUDVqg1D-brJtZ2_QRxW_2s+jv0T5MPpCE9Y-auvg@mail.gmail.com&gt;
Subject: Re: [PATCH] usbhid: Fix lockdep unannotated irqs-off warning
From: Sedat Dilek &lt;sedat.dilek@gmail.com&gt;
To: Steven Rostedt &lt;rostedt@goodmis.org&gt;,
	Jiri Kosina &lt;jikos@kernel.org&gt;, Tejun Heo &lt;tj@kernel.org&gt;
Cc: Lai Jiangshan &lt;jiangshanlai@gmail.com&gt;,
	Benjamin Tissoires &lt;benjamin.tissoires@redhat.com&gt;,
	Paul McKenney &lt;paulmck@linux.vnet.ibm.com&gt;,
	Andy Lutomirski &lt;luto@kernel.org&gt;,
	LKML &lt;linux-kernel@vger.kernel.org&gt;, linux-usb@vger.kernel.org,
	Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	Alan Stern &lt;stern@rowland.harvard.edu&gt;, Felipe Balbi &lt;balbi@ti.com&gt;,
	Peter Zijlstra &lt;peterz@infradead.org&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;
Content-Type: multipart/mixed; boundary=001a1142ed967d9433052cf9e85d
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.0 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, FREEMAIL_FROM, RCVD_IN_DNSWL_HI,
	RP_MATCHES_RCVD, 
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41441">Sedat Dilek</a> - March 1, 2016, 10:05 a.m.</div>
<pre class="content">
On Tue, Oct 13, 2015 at 2:57 AM, Steven Rostedt &lt;rostedt@goodmis.org&gt; wrote:
<span class="quote">&gt; On Sat, 3 Oct 2015 12:05:42 +0200</span>
<span class="quote">&gt; Sedat Dilek &lt;sedat.dilek@gmail.com&gt; wrote:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; So, at the beginning... dunno WTF is causing the problems - no</span>
<span class="quote">&gt;&gt; workaround for CLANG.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Probably need to compile with gcc and with clang and look at the binary</span>
<span class="quote">&gt; differences. Or at least what objdump shows.</span>
<span class="quote">&gt;</span>

[ Hope to address this issue to the correct people - CCed some people
I taped on their nerves ]

Not sure if I should open a new thread?
Please, some clear statements on this.
Thanks.

The issue is still visible and alive.

I switched over to Linux v4.4.y LTS and CLANG v3.8 (currently &quot;rc3&quot;).
My GCC is still v4.9.2.
CONFIG_PARAVIRT=n as suggested by Steven is the only difference when
using CLANG.

I have seen those bug-lines first with Linux v4.2.y.
BTW, my recent testing was done with Linux v4.5-rc6 and my llvmlinux
patchset (see file attachments).

Plugging my Logitech mouse to a USB 2.0 or 3.0 port does not matter.

[ FACT #1: LOG-FILES  ]

The simple fact, the bug-lines/outputs are only visible with
CLANG-compiled Linux-kernel but not GCC-compiled ones.
Folks tend to speculate on a compiler-bug - I am not sure, really.

[ FACT #2: TEST-CASE #1 ]

Doing wild cut-n-paste in Firefox crashed all my Linux v4.4.3 kernels
- CLANG and GCC (!) compiled.
Means restarting my X/desktop and landing in LightDM login-manager
here on Ubuntu/precise AMD64.

[ FACT #3: TEST-CASE #2 ]

The most reliable test-case is to simply unplug my external Logitech
USB mouse - saw this by accident.
YES, it was so simple.

--- dmesg_4.5.0-rc6-2-llvmlinux-amd64.txt       2016-02-29
21:23:56.399691975 +0100
+++ dmesg_4.5.0-rc6-2-llvmlinux-amd64_usbmouse-unplugged.txt
2016-02-29 21:28:14.401832240 +0100
@@ -832,3 +832,75 @@
 [   66.529779] PPP BSD Compression module registered
 [   66.563013] PPP Deflate Compression module registered
 [   66.978977] usb 2-1.5: USB disconnect, device number 4
+[  321.937369] usb 2-1.4: USB disconnect, device number 3
+[  321.950810] BUG: sleeping function called from invalid context at
kernel/workqueue.c:2785
+[  321.950816] in_atomic(): 0, irqs_disabled(): 1, pid: 44, name: kworker/2:1
+[  321.950819] 9 locks held by kworker/2:1/44:
+[  321.950820]  #0:  (&quot;usb_hub_wq&quot;){.+.+.+}, at: [&lt;ffffffff810a7c5f&gt;]
process_one_work+0x30f/0x8d0
+[  321.950830]  #1:  ((&amp;hub-&gt;events)){+.+.+.}, at:
[&lt;ffffffff810a7c8c&gt;] process_one_work+0x33c/0x8d0
+[  321.950836]  #2:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816fb0e0&gt;]
hub_event+0x50/0x15b0
+[  321.950844]  #3:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816f686f&gt;]
usb_disconnect+0x5f/0x2c0
+[  321.950849]  #4:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816245a2&gt;]
device_release_driver+0x22/0x40
+[  321.950856]  #5:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816245a2&gt;]
device_release_driver+0x22/0x40
+[  321.950862]  #6:  (input_mutex){+.+.+.}, at: [&lt;ffffffff8175171a&gt;]
__input_unregister_device+0x9a/0x190
+[  321.950869]  #7:  (&amp;dev-&gt;mutex#2){+.+...}, at:
[&lt;ffffffff8174fe27&gt;] input_close_device+0x27/0x70
+[  321.950875]  #8:  (hid_open_mut){+.+...}, at: [&lt;ffffffffa0057388&gt;]
usbhid_close+0x28/0xb0 [usbhid]
+[  321.950883] irq event stamp: 47770
+[  321.950885] hardirqs last  enabled at (47769):
[&lt;ffffffff819426a2&gt;] _raw_spin_unlock_irq+0x32/0x60
+[  321.950889] hardirqs last disabled at (47770):
[&lt;ffffffff81115bdc&gt;] del_timer_sync+0x3c/0x110
+[  321.950894] softirqs last  enabled at (47112):
[&lt;ffffffff810871a2&gt;] __do_softirq+0x5a2/0x610
+[  321.950898] softirqs last disabled at (47097):
[&lt;ffffffff8108747c&gt;] irq_exit+0x9c/0x120
+[  321.950903] CPU: 2 PID: 44 Comm: kworker/2:1 Not tainted
4.5.0-rc6-2-llvmlinux-amd64 #1
+[  321.950905] Hardware name: SAMSUNG ELECTRONICS CO., LTD.
530U3BI/530U4BI/530U4BH/530U3BI/530U4BI/530U4BH, BIOS 13XK 03/28/2013
+[  321.950908] Workqueue: usb_hub_wq hub_event
+[  321.950911]  ffff8800d3326948 0000000000000092 0000000000000000
ffff8800d4347568
+[  321.950915]  ffffffff814ba7d4 ffff8800d43474f8 ffff8800d4340cc0
ffff8800d4347568
+[  321.950919]  ffffffff810e28fd 0000000000000092 0000000000000096
ffff8800d43475a8
+[  321.950923] Call Trace:
+[  321.950927]  [&lt;ffffffff814ba7d4&gt;] dump_stack+0xa4/0xf0
+[  321.950931]  [&lt;ffffffff810e28fd&gt;] ? print_irqtrace_events+0xcd/0xe0
+[  321.950936]  [&lt;ffffffff810bf495&gt;] ___might_sleep+0x295/0x2b0
+[  321.950939]  [&lt;ffffffff810bf18f&gt;] __might_sleep+0x4f/0xc0
+[  321.950943]  [&lt;ffffffff810a12ef&gt;] start_flush_work+0x2f/0x2a0
+[  321.950946]  [&lt;ffffffff810a129c&gt;] flush_work+0x5c/0x80
+[  321.950949]  [&lt;ffffffff810a125a&gt;] ? flush_work+0x1a/0x80
+[  321.950953]  [&lt;ffffffff810e247d&gt;] ? trace_hardirqs_off+0xd/0x10
+[  321.950956]  [&lt;ffffffff810a032a&gt;] ? try_to_grab_pending+0x4a/0x260
+[  321.950960]  [&lt;ffffffff810a1717&gt;] __cancel_work_timer+0x197/0x290
+[  321.950963]  [&lt;ffffffff81115b8d&gt;] ? try_to_del_timer_sync+0xad/0xc0
+[  321.950966]  [&lt;ffffffff810a1578&gt;] cancel_work_sync+0x18/0x20
+[  321.950970]  [&lt;ffffffffa00573d5&gt;] usbhid_close+0x75/0xb0 [usbhid]
+[  321.950977]  [&lt;ffffffffa003a481&gt;] hidinput_close+0x31/0x40 [hid]
+[  321.950982]  [&lt;ffffffffa003a450&gt;] ? hidinput_open+0x40/0x40 [hid]
+[  321.950985]  [&lt;ffffffff8174fe48&gt;] input_close_device+0x48/0x70
+[  321.950988]  [&lt;ffffffff81757f85&gt;] evdev_cleanup+0xd5/0xe0
+[  321.950990]  [&lt;ffffffff81757b0c&gt;] evdev_disconnect+0x2c/0x60
+[  321.950993]  [&lt;ffffffff8175173e&gt;] __input_unregister_device+0xbe/0x190
+[  321.950996]  [&lt;ffffffff8175164a&gt;] input_unregister_device+0x4a/0x80
+[  321.951001]  [&lt;ffffffffa003a29f&gt;] hidinput_disconnect+0x8f/0xc0 [hid]
+[  321.951007]  [&lt;ffffffffa0034a30&gt;] hid_device_remove+0xb0/0x130 [hid]
+[  321.951010]  [&lt;ffffffff816246bd&gt;] __device_release_driver+0xfd/0x190
+[  321.951014]  [&lt;ffffffff816245aa&gt;] device_release_driver+0x2a/0x40
+[  321.951017]  [&lt;ffffffff816224a3&gt;] bus_remove_device+0x153/0x190
+[  321.951020]  [&lt;ffffffff8161f5fb&gt;] device_del+0x1db/0x2b0
+[  321.951025]  [&lt;ffffffffa0033c1c&gt;] hid_destroy_device+0x2c/0x60 [hid]
+[  321.951029]  [&lt;ffffffffa0058537&gt;] usbhid_disconnect+0x67/0x90 [usbhid]
+[  321.951033]  [&lt;ffffffff81706ebf&gt;] usb_unbind_interface+0xbf/0x2b0
+[  321.951037]  [&lt;ffffffff816246bd&gt;] __device_release_driver+0xfd/0x190
+[  321.951040]  [&lt;ffffffff816245aa&gt;] device_release_driver+0x2a/0x40
+[  321.951043]  [&lt;ffffffff816224a3&gt;] bus_remove_device+0x153/0x190
+[  321.951046]  [&lt;ffffffff8161f5fb&gt;] device_del+0x1db/0x2b0
+[  321.951048]  [&lt;ffffffff8161f6fc&gt;] ? device_unregister+0x2c/0x40
+[  321.951051]  [&lt;ffffffff81704f6b&gt;] usb_disable_device+0x10b/0x3b0
+[  321.951054]  [&lt;ffffffff816f6904&gt;] usb_disconnect+0xf4/0x2c0
+[  321.951057]  [&lt;ffffffff816fbc3d&gt;] hub_event+0xbad/0x15b0
+[  321.951060]  [&lt;ffffffff819426a2&gt;] ? _raw_spin_unlock_irq+0x32/0x60
+[  321.951063]  [&lt;ffffffff810a7e0e&gt;] process_one_work+0x4be/0x8d0
+[  321.951065]  [&lt;ffffffff810a7c8c&gt;] ? process_one_work+0x33c/0x8d0
+[  321.951068]  [&lt;ffffffff810a757b&gt;] worker_thread+0x5cb/0x750
+[  321.951071]  [&lt;ffffffff810a6fb0&gt;] ? destroy_worker+0x110/0x110
+[  321.951074]  [&lt;ffffffff810ae1c5&gt;] kthread+0x115/0x120
+[  321.951077]  [&lt;ffffffff810e248d&gt;] ? trace_hardirqs_on+0xd/0x10
+[  321.951080]  [&lt;ffffffff810ae0b0&gt;] ? flush_kthread_worker+0x80/0x80
+[  321.951084]  [&lt;ffffffff819435ff&gt;] ret_from_fork+0x3f/0x70
+[  321.951087]  [&lt;ffffffff810ae0b0&gt;] ? flush_kthread_worker+0x80/0x80

As this touches workqueue and usb_hub_wq...

[ drivers/usb/core/hub.c ]

5214:    hub_wq = alloc_workqueue(&quot;usb_hub_wq&quot;, WQ_FREEZABLE, 0);

...see...

+[  321.950908] Workqueue: usb_hub_wq hub_event

...I have CCed USB core maintainers ans folks I know they can help.

Here some Linux kernel-config I have enabled to investigate the issue...

[ LINUX-CONFIG ]

$ egrep &#39;CONFIG_TRACING=|TRACE_IRQFLAGS|IRQSOFF_TRACER|CONTEXT_TRACKING|LOCKDEP=|PROVE_LOCKING&#39;
/tmp/config-4.5.0-rc6-2-llvmlinux-amd64
CONFIG_CONTEXT_TRACKING=y
# CONFIG_CONTEXT_TRACKING_FORCE is not set
CONFIG_HAVE_CONTEXT_TRACKING=y
CONFIG_TRACE_IRQFLAGS_SUPPORT=y
CONFIG_PROVE_LOCKING=y
CONFIG_LOCKDEP=y
CONFIG_DEBUG_LOCKDEP=y
CONFIG_TRACE_IRQFLAGS=y
CONFIG_TRACING=y
CONFIG_IRQSOFF_TRACER=y

For more details please, see attached files!

Sorry, this is far beyond a cool bug-report, but I could do it like
this for the moment.

Hope this helps to get some interesting and new ideas.

- Sedat -
[    0.000000] Linux version 4.5.0-rc6-2-llvmlinux-amd64 (sedat.dilek@gmail.com@fambox) (clang version 3.8.0 ) #1 SMP Mon Feb 29 20:58:39 CET 2016
[    0.000000] Command line: BOOT_IMAGE=/boot/vmlinuz-4.5.0-rc6-2-llvmlinux-amd64 root=UUID=001AADA61AAD9964 loop=/ubuntu/disks/root.disk ro
[    0.000000] KERNEL supported cpus:
[    0.000000]   Intel GenuineIntel
[    0.000000]   AMD AuthenticAMD
[    0.000000]   Centaur CentaurHauls
[    0.000000] Disabled fast string operations
[    0.000000] x86/fpu: xstate_offset[2]:  576, xstate_sizes[2]:  256
[    0.000000] x86/fpu: Supporting XSAVE feature 0x01: &#39;x87 floating point registers&#39;
[    0.000000] x86/fpu: Supporting XSAVE feature 0x02: &#39;SSE registers&#39;
[    0.000000] x86/fpu: Supporting XSAVE feature 0x04: &#39;AVX registers&#39;
[    0.000000] x86/fpu: Enabled xstate features 0x7, context size is 832 bytes, using &#39;standard&#39; format.
[    0.000000] x86/fpu: Using &#39;eager&#39; FPU context switches.
[    0.000000] e820: BIOS-provided physical RAM map:
[    0.000000] BIOS-e820: [mem 0x0000000000000000-0x000000000009d7ff] usable
[    0.000000] BIOS-e820: [mem 0x000000000009d800-0x000000000009ffff] reserved
[    0.000000] BIOS-e820: [mem 0x00000000000e0000-0x00000000000fffff] reserved
[    0.000000] BIOS-e820: [mem 0x0000000000100000-0x000000001fffffff] usable
[    0.000000] BIOS-e820: [mem 0x0000000020000000-0x00000000201fffff] reserved
[    0.000000] BIOS-e820: [mem 0x0000000020200000-0x000000003fffffff] usable
[    0.000000] BIOS-e820: [mem 0x0000000040000000-0x00000000401fffff] reserved
[    0.000000] BIOS-e820: [mem 0x0000000040200000-0x00000000d9c9efff] usable
[    0.000000] BIOS-e820: [mem 0x00000000d9c9f000-0x00000000dae7efff] reserved
[    0.000000] BIOS-e820: [mem 0x00000000dae7f000-0x00000000daf9efff] ACPI NVS
[    0.000000] BIOS-e820: [mem 0x00000000daf9f000-0x00000000daffefff] ACPI data
[    0.000000] BIOS-e820: [mem 0x00000000dafff000-0x00000000daffffff] usable
[    0.000000] BIOS-e820: [mem 0x00000000db000000-0x00000000df9fffff] reserved
[    0.000000] BIOS-e820: [mem 0x00000000f8000000-0x00000000fbffffff] reserved
[    0.000000] BIOS-e820: [mem 0x00000000fec00000-0x00000000fec00fff] reserved
[    0.000000] BIOS-e820: [mem 0x00000000fed08000-0x00000000fed08fff] reserved
[    0.000000] BIOS-e820: [mem 0x00000000fed10000-0x00000000fed19fff] reserved
[    0.000000] BIOS-e820: [mem 0x00000000fed1c000-0x00000000fed1ffff] reserved
[    0.000000] BIOS-e820: [mem 0x00000000fee00000-0x00000000fee00fff] reserved
[    0.000000] BIOS-e820: [mem 0x00000000ffd80000-0x00000000ffffffff] reserved
[    0.000000] BIOS-e820: [mem 0x0000000100000000-0x000000011fdfffff] usable
[    0.000000] NX (Execute Disable) protection: active
[    0.000000] SMBIOS 2.6 present.
[    0.000000] DMI: SAMSUNG ELECTRONICS CO., LTD. 530U3BI/530U4BI/530U4BH/530U3BI/530U4BI/530U4BH, BIOS 13XK 03/28/2013
[    0.000000] e820: update [mem 0x00000000-0x00000fff] usable ==&gt; reserved
[    0.000000] e820: remove [mem 0x000a0000-0x000fffff] usable
[    0.000000] e820: last_pfn = 0x11fe00 max_arch_pfn = 0x400000000
[    0.000000] MTRR default type: uncachable
[    0.000000] MTRR fixed ranges enabled:
[    0.000000]   00000-9FFFF write-back
[    0.000000]   A0000-BFFFF uncachable
[    0.000000]   C0000-FFFFF write-protect
[    0.000000] MTRR variable ranges enabled:
[    0.000000]   0 base 000000000 mask F80000000 write-back
[    0.000000]   1 base 080000000 mask FC0000000 write-back
[    0.000000]   2 base 0C0000000 mask FE0000000 write-back
[    0.000000]   3 base 0DC000000 mask FFC000000 uncachable
[    0.000000]   4 base 0DB000000 mask FFF000000 uncachable
[    0.000000]   5 base 100000000 mask FE0000000 write-back
[    0.000000]   6 base 11FE00000 mask FFFE00000 uncachable
[    0.000000]   7 base 0FFC00000 mask FFFC00000 write-protect
[    0.000000]   8 disabled
[    0.000000]   9 disabled
[    0.000000] x86/PAT: Configuration [0-7]: WB  WC  UC- UC  WB  WC  UC- WT  
[    0.000000] e820: last_pfn = 0xdb000 max_arch_pfn = 0x400000000
[    0.000000] found SMP MP-table at [mem 0x000f00e0-0x000f00ef] mapped at [ffff8800000f00e0]
[    0.000000] Scanning 1 areas for low memory corruption
[    0.000000] Base memory trampoline at [ffff880000096000] 96000 size 28672
[    0.000000] reserving inaccessible SNB gfx pages
[    0.000000] BRK [0x02fd0000, 0x02fd0fff] PGTABLE
[    0.000000] BRK [0x02fd1000, 0x02fd1fff] PGTABLE
[    0.000000] BRK [0x02fd2000, 0x02fd2fff] PGTABLE
[    0.000000] BRK [0x02fd3000, 0x02fd3fff] PGTABLE
[    0.000000] BRK [0x02fd4000, 0x02fd4fff] PGTABLE
[    0.000000] BRK [0x02fd5000, 0x02fd5fff] PGTABLE
[    0.000000] RAMDISK: [mem 0x37868000-0x37c2bfff]
[    0.000000] ACPI: Early table checksum verification disabled
[    0.000000] ACPI: RSDP 0x00000000000F0100 000024 (v02 SECCSD)
[    0.000000] ACPI: XSDT 0x00000000DAFFE170 00008C (v01 SECCSD LH43STAR 00000002 PTEC 00000002)
[    0.000000] ACPI: FACP 0x00000000DAFEF000 00010C (v05 SECCSD LH43STAR 00000002 PTL  00000002)
[    0.000000] ACPI: DSDT 0x00000000DAFF2000 0083AC (v02 SECCSD SNB-CPT  00000000 INTL 20061109)
[    0.000000] ACPI: FACS 0x00000000DAF47000 000040
[    0.000000] ACPI: SLIC 0x00000000DAFFD000 000176 (v01 SECCSD LH43STAR 00000002 PTEC 00000001)
[    0.000000] ACPI: SSDT 0x00000000DAFFB000 001068 (v01 SECCSD PtidDevc 00001000 INTL 20061109)
[    0.000000] ACPI: ASF! 0x00000000DAFF1000 0000A5 (v32 SECCSD LH43STAR 00000002 PTL  00000002)
[    0.000000] ACPI: HPET 0x00000000DAFEE000 000038 (v01 SECCSD LH43STAR 00000002 PTL  00000002)
[    0.000000] ACPI: APIC 0x00000000DAFED000 000098 (v03 SECCSD LH43STAR 00000002 PTL  00000002)
[    0.000000] ACPI: MCFG 0x00000000DAFEC000 00003C (v01 SECCSD LH43STAR 00000002 PTL  00000002)
[    0.000000] ACPI: SSDT 0x00000000DAFEB000 000804 (v01 PmRef  Cpu0Ist  00003000 INTL 20061109)
[    0.000000] ACPI: SSDT 0x00000000DAFEA000 000996 (v01 PmRef  CpuPm    00003000 INTL 20061109)
[    0.000000] ACPI: UEFI 0x00000000DAFE9000 00003E (v01 SECCSD LH43STAR 00000002 PTL  00000002)
[    0.000000] ACPI: UEFI 0x00000000DAFE8000 000042 (v01 PTL    COMBUF   00000001 PTL  00000001)
[    0.000000] ACPI: UEFI 0x00000000DAFE7000 00026A (v01 SECCSD LH43STAR 00000002 PTL  00000002)
[    0.000000] ACPI: SSDT 0x00000000DAFE6000 0000D0 (v01 Iffs   IffsAsl  00003000 INTL 20061109)
[    0.000000] ACPI: Local APIC address 0xfee00000
[    0.000000] No NUMA configuration found
[    0.000000] Faking a node at [mem 0x0000000000000000-0x000000011fdfffff]
[    0.000000] NODE_DATA(0) allocated [mem 0x11fdf8000-0x11fdfcfff]
[    0.000000] Zone ranges:
[    0.000000]   DMA      [mem 0x0000000000001000-0x0000000000ffffff]
[    0.000000]   DMA32    [mem 0x0000000001000000-0x00000000ffffffff]
[    0.000000]   Normal   [mem 0x0000000100000000-0x000000011fdfffff]
[    0.000000] Movable zone start for each node
[    0.000000] Early memory node ranges
[    0.000000]   node   0: [mem 0x0000000000001000-0x000000000009cfff]
[    0.000000]   node   0: [mem 0x0000000000100000-0x000000001fffffff]
[    0.000000]   node   0: [mem 0x0000000020200000-0x000000003fffffff]
[    0.000000]   node   0: [mem 0x0000000040200000-0x00000000d9c9efff]
[    0.000000]   node   0: [mem 0x00000000dafff000-0x00000000daffffff]
[    0.000000]   node   0: [mem 0x0000000100000000-0x000000011fdfffff]
[    0.000000] Initmem setup node 0 [mem 0x0000000000001000-0x000000011fdfffff]
[    0.000000] On node 0 totalpages: 1021500
[    0.000000]   DMA zone: 64 pages used for memmap
[    0.000000]   DMA zone: 156 pages reserved
[    0.000000]   DMA zone: 3996 pages, LIFO batch:0
[    0.000000]   DMA32 zone: 13859 pages used for memmap
[    0.000000]   DMA32 zone: 886944 pages, LIFO batch:31
[    0.000000]   Normal zone: 2040 pages used for memmap
[    0.000000]   Normal zone: 130560 pages, LIFO batch:31
[    0.000000] Reserving Intel graphics stolen memory at 0xdba00000-0xdf9fffff
[    0.000000] ACPI: PM-Timer IO Port: 0x408
[    0.000000] ACPI: Local APIC address 0xfee00000
[    0.000000] ACPI: LAPIC_NMI (acpi_id[0x00] high edge lint[0x1])
[    0.000000] ACPI: LAPIC_NMI (acpi_id[0x01] high edge lint[0x1])
[    0.000000] IOAPIC[0]: apic_id 14, version 32, address 0xfec00000, GSI 0-23
[    0.000000] ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
[    0.000000] ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
[    0.000000] ACPI: IRQ0 used by override.
[    0.000000] ACPI: IRQ9 used by override.
[    0.000000] Using ACPI (MADT) for SMP configuration information
[    0.000000] ACPI: HPET id: 0x8086a301 base: 0xfed00000
[    0.000000] smpboot: Allowing 8 CPUs, 4 hotplug CPUs
[    0.000000] PM: Registered nosave memory: [mem 0x00000000-0x00000fff]
[    0.000000] PM: Registered nosave memory: [mem 0x0009d000-0x0009dfff]
[    0.000000] PM: Registered nosave memory: [mem 0x0009e000-0x0009ffff]
[    0.000000] PM: Registered nosave memory: [mem 0x000a0000-0x000dffff]
[    0.000000] PM: Registered nosave memory: [mem 0x000e0000-0x000fffff]
[    0.000000] PM: Registered nosave memory: [mem 0x20000000-0x201fffff]
[    0.000000] PM: Registered nosave memory: [mem 0x40000000-0x401fffff]
[    0.000000] PM: Registered nosave memory: [mem 0xd9c9f000-0xdae7efff]
[    0.000000] PM: Registered nosave memory: [mem 0xdae7f000-0xdaf9efff]
[    0.000000] PM: Registered nosave memory: [mem 0xdaf9f000-0xdaffefff]
[    0.000000] PM: Registered nosave memory: [mem 0xdb000000-0xdf9fffff]
[    0.000000] PM: Registered nosave memory: [mem 0xdfa00000-0xf7ffffff]
[    0.000000] PM: Registered nosave memory: [mem 0xf8000000-0xfbffffff]
[    0.000000] PM: Registered nosave memory: [mem 0xfc000000-0xfebfffff]
[    0.000000] PM: Registered nosave memory: [mem 0xfec00000-0xfec00fff]
[    0.000000] PM: Registered nosave memory: [mem 0xfec01000-0xfed07fff]
[    0.000000] PM: Registered nosave memory: [mem 0xfed08000-0xfed08fff]
[    0.000000] PM: Registered nosave memory: [mem 0xfed09000-0xfed0ffff]
[    0.000000] PM: Registered nosave memory: [mem 0xfed10000-0xfed19fff]
[    0.000000] PM: Registered nosave memory: [mem 0xfed1a000-0xfed1bfff]
[    0.000000] PM: Registered nosave memory: [mem 0xfed1c000-0xfed1ffff]
[    0.000000] PM: Registered nosave memory: [mem 0xfed20000-0xfedfffff]
[    0.000000] PM: Registered nosave memory: [mem 0xfee00000-0xfee00fff]
[    0.000000] PM: Registered nosave memory: [mem 0xfee01000-0xffd7ffff]
[    0.000000] PM: Registered nosave memory: [mem 0xffd80000-0xffffffff]
[    0.000000] e820: [mem 0xdfa00000-0xf7ffffff] available for PCI devices
[    0.000000] clocksource: refined-jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 7645519600211568 ns
[    0.000000] setup_percpu: NR_CPUS:256 nr_cpumask_bits:256 nr_cpu_ids:8 nr_node_ids:1
[    0.000000] PERCPU: Embedded 33 pages/cpu @ffff88011fa00000 s94600 r8192 d32376 u262144
[    0.000000] pcpu-alloc: s94600 r8192 d32376 u262144 alloc=1*2097152
[    0.000000] pcpu-alloc: [0] 0 1 2 3 4 5 6 7 
[    0.000000] Built 1 zonelists in Node order, mobility grouping on.  Total pages: 1005381
[    0.000000] Policy zone: Normal
[    0.000000] Kernel command line: BOOT_IMAGE=/boot/vmlinuz-4.5.0-rc6-2-llvmlinux-amd64 root=UUID=001AADA61AAD9964 loop=/ubuntu/disks/root.disk ro
[    0.000000] PID hash table entries: 4096 (order: 3, 32768 bytes)
[    0.000000] Calgary: detecting Calgary via BIOS EBDA area
[    0.000000] Calgary: Unable to locate Rio Grande table in EBDA - bailing!
[    0.000000] Memory: 3915416K/4086000K available (9504K kernel code, 1171K rwdata, 3396K rodata, 3008K init, 14020K bss, 170584K reserved, 0K cma-reserved)
[    0.000000] Running RCU self tests
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	RCU lockdep checking is enabled.
[    0.000000] 	Build-time adjustment of leaf fanout to 64.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=256 to nr_cpu_ids=8.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=64, nr_cpu_ids=8
[    0.000000] NR_IRQS:16640 nr_irqs:488 16
[    0.000000] Console: colour dummy device 80x25
[    0.000000] console [tty0] enabled
[    0.000000] Lock dependency validator: Copyright (c) 2006 Red Hat, Inc., Ingo Molnar
[    0.000000] ... MAX_LOCKDEP_SUBCLASSES:  8
[    0.000000] ... MAX_LOCK_DEPTH:          48
[    0.000000] ... MAX_LOCKDEP_KEYS:        8191
[    0.000000] ... CLASSHASH_SIZE:          4096
[    0.000000] ... MAX_LOCKDEP_ENTRIES:     32768
[    0.000000] ... MAX_LOCKDEP_CHAINS:      65536
[    0.000000] ... CHAINHASH_SIZE:          32768
[    0.000000]  memory used by lock dependency info: 8159 kB
[    0.000000]  per task-struct memory footprint: 1920 bytes
[    0.000000] clocksource: hpet: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 133484882848 ns
[    0.000000] hpet clockevent registered
[    0.000000] tsc: Fast TSC calibration using PIT
[    0.000000] tsc: Detected 1596.475 MHz processor
[    0.000004] Calibrating delay loop (skipped), value calculated using timer frequency.. 3192.95 BogoMIPS (lpj=6385900)
[    0.000021] pid_max: default: 32768 minimum: 301
[    0.000072] ACPI: Core revision 20160108
[    0.025884] ACPI: 5 ACPI AML tables successfully acquired and loaded
[    0.025897] 
[    0.026152] Security Framework initialized
[    0.026160] Yama: becoming mindful.
[    0.026208] AppArmor: AppArmor initialized
[    0.026983] Dentry cache hash table entries: 524288 (order: 10, 4194304 bytes)
[    0.028149] Inode-cache hash table entries: 262144 (order: 9, 2097152 bytes)
[    0.028669] Mount-cache hash table entries: 8192 (order: 4, 65536 bytes)
[    0.028691] Mountpoint-cache hash table entries: 8192 (order: 4, 65536 bytes)
[    0.030502] Disabled fast string operations
[    0.030513] CPU: Physical Processor ID: 0
[    0.030519] CPU: Processor Core ID: 0
[    0.030530] ENERGY_PERF_BIAS: Set to &#39;normal&#39;, was &#39;performance&#39;
[    0.030538] ENERGY_PERF_BIAS: View and update with x86_energy_perf_policy(8)
[    0.030549] mce: CPU supports 7 MCE banks
[    0.030596] CPU0: Thermal monitoring enabled (TM1)
[    0.030621] process: using mwait in idle threads
[    0.030631] Last level iTLB entries: 4KB 512, 2MB 8, 4MB 8
[    0.030640] Last level dTLB entries: 4KB 512, 2MB 32, 4MB 32, 1GB 0
[    0.031285] Freeing SMP alternatives memory: 28K (ffffffff82216000 - ffffffff8221d000)
[    0.051115] ftrace: allocating 226324 entries in 885 pages
[    0.161190] x2apic: IRQ remapping doesn&#39;t support X2APIC mode
[    0.161849] ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
[    0.201548] TSC deadline timer enabled
[    0.201554] smpboot: CPU0: Intel(R) Core(TM) i5-2467M CPU @ 1.60GHz (family: 0x6, model: 0x2a, stepping: 0x7)
[    0.201610] Performance Events: PEBS fmt1+, 16-deep LBR, SandyBridge events, full-width counters, Intel PMU driver.
[    0.201656] ... version:                3
[    0.201661] ... bit width:              48
[    0.201666] ... generic registers:      4
[    0.201671] ... value mask:             0000ffffffffffff
[    0.201677] ... max period:             0000ffffffffffff
[    0.201682] ... fixed-purpose events:   3
[    0.201687] ... event mask:             000000070000000f
[    0.203881] x86: Booting SMP configuration:
[    0.203889] .... node  #0, CPUs:      #1
[    0.204230] Disabled fast string operations
[    0.206845] NMI watchdog: enabled on all CPUs, permanently consumes one hw-PMU counter.
[    0.207436]  #2
[    0.207743] Disabled fast string operations
[    0.210394]  #3&lt;6&gt;[    0.210705] Disabled fast string operations
[    0.212851] x86: Booted up 1 node, 4 CPUs
[    0.212865] smpboot: Total of 4 processors activated (12771.80 BogoMIPS)
[    0.217727] devtmpfs: initialized
[    0.224403] evm: security.selinux
[    0.224410] evm: security.SMACK64
[    0.224415] evm: security.capability
[    0.224641] PM: Registering ACPI NVS region [mem 0xdae7f000-0xdaf9efff] (1179648 bytes)
[    0.225060] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 7645041785100000 ns
[    0.226714] NET: Registered protocol family 16
[    0.236627] cpuidle: using governor ladder
[    0.248543] cpuidle: using governor menu
[    0.248747] ACPI: bus type PCI registered
[    0.249087] PCI: MMCONFIG for domain 0000 [bus 00-3f] at [mem 0xf8000000-0xfbffffff] (base 0xf8000000)
[    0.249100] PCI: MMCONFIG at [mem 0xf8000000-0xfbffffff] reserved in E820
[    0.249116] PCI: Using configuration type 1 for base access
[    0.249883] perf_event_intel: PMU erratum BJ122, BV98, HSD29 worked around, HT is on
[    0.268979] HugeTLB registered 2 MB page size, pre-allocated 0 pages
[    0.270413] ACPI: Added _OSI(Module Device)
[    0.270421] ACPI: Added _OSI(Processor Device)
[    0.270427] ACPI: Added _OSI(3.0 _SCP Extensions)
[    0.270433] ACPI: Added _OSI(Processor Aggregator Device)
[    0.278018] ACPI: Executed 1 blocks of module-level executable AML code
[    0.288311] [Firmware Bug]: ACPI: BIOS _OSI(Linux) query ignored
[    0.290366] ACPI: Dynamic OEM Table Load:
[    0.290396] ACPI: SSDT 0xFFFF88011A731000 000688 (v01 PmRef  Cpu0Cst  00003001 INTL 20061109)
[    0.292983] ACPI: Dynamic OEM Table Load:
[    0.293012] ACPI: SSDT 0xFFFF88011A7E4400 000303 (v01 PmRef  ApIst    00003000 INTL 20061109)
[    0.295386] ACPI: Dynamic OEM Table Load:
[    0.295413] ACPI: SSDT 0xFFFF88011A7D4A00 000119 (v01 PmRef  ApCst    00003000 INTL 20061109)
[    0.299389] ACPI : EC: EC started
[    0.300801] ACPI: Interpreter enabled
[    0.300877] ACPI: (supports S0 S1 S3 S4 S5)
[    0.300884] ACPI: Using IOAPIC for interrupt routing
[    0.300975] PCI: Using host bridge windows from ACPI; if necessary, use &quot;pci=nocrs&quot; and report a bug
[    0.325663] ACPI: Power Resource [FN00] (off)
[    0.326170] ACPI: Power Resource [FN01] (off)
[    0.326562] ACPI: Power Resource [FN02] (off)
[    0.326946] ACPI: Power Resource [FN03] (off)
[    0.327331] ACPI: Power Resource [FN04] (off)
[    0.330117] ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-3e])
[    0.330132] acpi PNP0A08:00: _OSC: OS supports [ExtendedConfig ASPM ClockPM Segments MSI]
[    0.330880] \_SB_.PCI0 (33DB4D5B-1FF7-401C-9657-7441C03DD766): _OSC invalid UUID
[    0.330882] _OSC request data: 1 1f 0
[    0.330889] acpi PNP0A08:00: _OSC failed (AE_ERROR); disabling ASPM
[    0.331926] PCI host bridge to bus 0000:00
[    0.331935] pci_bus 0000:00: root bus resource [io  0x0000-0x0cf7 window]
[    0.331943] pci_bus 0000:00: root bus resource [io  0x0d00-0xffff window]
[    0.331951] pci_bus 0000:00: root bus resource [mem 0x000a0000-0x000bffff window]
[    0.331961] pci_bus 0000:00: root bus resource [mem 0xdfa00000-0xfeafffff window]
[    0.331970] pci_bus 0000:00: root bus resource [mem 0xfed40000-0xfed44fff window]
[    0.331980] pci_bus 0000:00: root bus resource [bus 00-3e]
[    0.332078] pci 0000:00:00.0: [8086:0104] type 00 class 0x060000
[    0.332543] pci 0000:00:02.0: [8086:0116] type 00 class 0x030000
[    0.332564] pci 0000:00:02.0: reg 0x10: [mem 0xf0000000-0xf03fffff 64bit]
[    0.332577] pci 0000:00:02.0: reg 0x18: [mem 0xe0000000-0xefffffff 64bit pref]
[    0.332587] pci 0000:00:02.0: reg 0x20: [io  0x3000-0x303f]
[    0.333095] pci 0000:00:16.0: [8086:1c3a] type 00 class 0x078000
[    0.333137] pci 0000:00:16.0: reg 0x10: [mem 0xf0705000-0xf070500f 64bit]
[    0.333292] pci 0000:00:16.0: PME# supported from D0 D3hot D3cold
[    0.333693] pci 0000:00:1a.0: [8086:1c2d] type 00 class 0x0c0320
[    0.333728] pci 0000:00:1a.0: reg 0x10: [mem 0xf070a000-0xf070a3ff]
[    0.333905] pci 0000:00:1a.0: PME# supported from D0 D3hot D3cold
[    0.334258] pci 0000:00:1b.0: [8086:1c20] type 00 class 0x040300
[    0.334297] pci 0000:00:1b.0: reg 0x10: [mem 0xf0700000-0xf0703fff 64bit]
[    0.334479] pci 0000:00:1b.0: PME# supported from D0 D3hot D3cold
[    0.334694] pci 0000:00:1b.0: System wakeup disabled by ACPI
[    0.334881] pci 0000:00:1c.0: [8086:1c10] type 01 class 0x060400
[    0.335052] pci 0000:00:1c.0: PME# supported from D0 D3hot D3cold
[    0.335238] pci 0000:00:1c.0: System wakeup disabled by ACPI
[    0.335426] pci 0000:00:1c.3: [8086:1c16] type 01 class 0x060400
[    0.335598] pci 0000:00:1c.3: PME# supported from D0 D3hot D3cold
[    0.335782] pci 0000:00:1c.3: System wakeup disabled by ACPI
[    0.335968] pci 0000:00:1c.4: [8086:1c18] type 01 class 0x060400
[    0.336144] pci 0000:00:1c.4: PME# supported from D0 D3hot D3cold
[    0.336517] pci 0000:00:1d.0: [8086:1c26] type 00 class 0x0c0320
[    0.336552] pci 0000:00:1d.0: reg 0x10: [mem 0xf0709000-0xf07093ff]
[    0.336737] pci 0000:00:1d.0: PME# supported from D0 D3hot D3cold
[    0.337081] pci 0000:00:1f.0: [8086:1c49] type 00 class 0x060100
[    0.337587] pci 0000:00:1f.2: [8086:1c03] type 00 class 0x010601
[    0.337624] pci 0000:00:1f.2: reg 0x10: [io  0x3088-0x308f]
[    0.337642] pci 0000:00:1f.2: reg 0x14: [io  0x3094-0x3097]
[    0.337660] pci 0000:00:1f.2: reg 0x18: [io  0x3080-0x3087]
[    0.337679] pci 0000:00:1f.2: reg 0x1c: [io  0x3090-0x3093]
[    0.337697] pci 0000:00:1f.2: reg 0x20: [io  0x3060-0x307f]
[    0.337715] pci 0000:00:1f.2: reg 0x24: [mem 0xf0708000-0xf07087ff]
[    0.337824] pci 0000:00:1f.2: PME# supported from D3hot
[    0.338164] pci 0000:00:1f.3: [8086:1c22] type 00 class 0x0c0500
[    0.338199] pci 0000:00:1f.3: reg 0x10: [mem 0xf0704000-0xf07040ff 64bit]
[    0.338249] pci 0000:00:1f.3: reg 0x20: [io  0xefa0-0xefbf]
[    0.338981] pci 0000:01:00.0: [8086:0091] type 00 class 0x028000
[    0.339373] pci 0000:01:00.0: reg 0x10: [mem 0xf0600000-0xf0601fff 64bit]
[    0.341156] pci 0000:01:00.0: PME# supported from D0 D3hot D3cold
[    0.341619] pci 0000:01:00.0: System wakeup disabled by ACPI
[    0.352971] pci 0000:00:1c.0: PCI bridge to [bus 01]
[    0.352989] pci 0000:00:1c.0:   bridge window [mem 0xf0600000-0xf06fffff]
[    0.353219] pci 0000:02:00.0: [10ec:8168] type 00 class 0x020000
[    0.353313] pci 0000:02:00.0: reg 0x10: [io  0x2000-0x20ff]
[    0.353453] pci 0000:02:00.0: reg 0x18: [mem 0xf0404000-0xf0404fff 64bit pref]
[    0.353540] pci 0000:02:00.0: reg 0x20: [mem 0xf0400000-0xf0403fff 64bit pref]
[    0.354012] pci 0000:02:00.0: supports D1 D2
[    0.354015] pci 0000:02:00.0: PME# supported from D0 D1 D2 D3hot D3cold
[    0.354220] pci 0000:02:00.0: System wakeup disabled by ACPI
[    0.364900] pci 0000:00:1c.3: PCI bridge to [bus 02]
[    0.364913] pci 0000:00:1c.3:   bridge window [io  0x2000-0x2fff]
[    0.364929] pci 0000:00:1c.3:   bridge window [mem 0xf0400000-0xf04fffff 64bit pref]
[    0.365129] pci 0000:03:00.0: [1b21:1042] type 00 class 0x0c0330
[    0.365180] pci 0000:03:00.0: reg 0x10: [mem 0xf0500000-0xf0507fff 64bit]
[    0.365460] pci 0000:03:00.0: PME# supported from D3hot D3cold
[    0.365778] pci 0000:00:1c.4: PCI bridge to [bus 03]
[    0.365795] pci 0000:00:1c.4:   bridge window [mem 0xf0500000-0xf05fffff]
[    0.368154] ACPI: PCI Interrupt Link [LNKA] (IRQs 1 3 4 5 6 10 *11 12 14 15)
[    0.368369] ACPI: PCI Interrupt Link [LNKB] (IRQs 1 3 4 5 6 10 11 12 14 15) *0, disabled.
[    0.368583] ACPI: PCI Interrupt Link [LNKC] (IRQs 1 3 4 5 6 *10 11 12 14 15)
[    0.368805] ACPI: PCI Interrupt Link [LNKD] (IRQs 1 3 4 5 6 *10 11 12 14 15)
[    0.369029] ACPI: PCI Interrupt Link [LNKE] (IRQs 1 3 4 5 6 10 11 12 14 15) *9
[    0.369239] ACPI: PCI Interrupt Link [LNKF] (IRQs 1 3 4 5 6 10 11 12 14 15) *0, disabled.
[    0.369451] ACPI: PCI Interrupt Link [LNKG] (IRQs 1 3 4 5 6 10 *11 12 14 15)
[    0.369661] ACPI: PCI Interrupt Link [LNKH] (IRQs 1 3 4 5 6 10 11 12 14 15) *9
[    0.371173] ACPI: Enabled 4 GPEs in block 00 to 3F
[    0.371348] ACPI : EC: GPE = 0x17, I/O: command/status = 0x66, data = 0x62
[    0.371678] ACPI : EC: 0 stale EC events cleared
[    0.372460] vgaarb: setting as boot device: PCI:0000:00:02.0
[    0.372468] vgaarb: device added: PCI:0000:00:02.0,decodes=io+mem,owns=io+mem,locks=none
[    0.372486] vgaarb: loaded
[    0.372491] vgaarb: bridge control possible 0000:00:02.0
[    0.373317] SCSI subsystem initialized
[    0.373504] libata version 3.00 loaded.
[    0.373613] ACPI: bus type USB registered
[    0.373707] usbcore: registered new interface driver usbfs
[    0.373753] usbcore: registered new interface driver hub
[    0.373845] usbcore: registered new device driver usb
[    0.374368] PCI: Using ACPI for IRQ routing
[    0.378099] PCI: pci_cache_line_size set to 64 bytes
[    0.378233] e820: reserve RAM buffer [mem 0x0009d800-0x0009ffff]
[    0.378243] e820: reserve RAM buffer [mem 0xd9c9f000-0xdbffffff]
[    0.378246] e820: reserve RAM buffer [mem 0xdb000000-0xdbffffff]
[    0.378249] e820: reserve RAM buffer [mem 0x11fe00000-0x11fffffff]
[    0.379106] NetLabel: Initializing
[    0.379112] NetLabel:  domain hash size = 128
[    0.379117] NetLabel:  protocols = UNLABELED CIPSOv4
[    0.379182] NetLabel:  unlabeled traffic allowed by default
[    0.379411] hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0, 0, 0, 0, 0, 0
[    0.379428] hpet0: 8 comparators, 64-bit 14.318180 MHz counter
[    0.382549] clocksource: Switched to clocksource hpet
[    0.430817] VFS: Disk quotas dquot_6.6.0
[    0.430876] VFS: Dquot-cache hash table entries: 512 (order 0, 4096 bytes)
[    0.431534] AppArmor: AppArmor Filesystem Enabled
[    0.431814] pnp: PnP ACPI init
[    0.432535] system 00:00: [io  0x0680-0x069f] has been reserved
[    0.432546] system 00:00: [io  0x1000-0x100f] has been reserved
[    0.432554] system 00:00: [io  0x5000-0x5003] has been reserved
[    0.432563] system 00:00: [io  0xffff] has been reserved
[    0.432572] system 00:00: [io  0x0400-0x0453] could not be reserved
[    0.432580] system 00:00: [io  0x0458-0x047f] has been reserved
[    0.432589] system 00:00: [io  0x0500-0x057f] has been reserved
[    0.432597] system 00:00: [io  0x0a00-0x0a0f] has been reserved
[    0.432605] system 00:00: [io  0x164e-0x164f] has been reserved
[    0.432614] system 00:00: [io  0x5000-0x500f] could not be reserved
[    0.432659] system 00:00: Plug and Play ACPI device, IDs PNP0c02 (active)
[    0.432767] pnp 00:01: Plug and Play ACPI device, IDs PNP0b00 (active)
[    0.432963] system 00:02: [io  0x0454-0x0457] has been reserved
[    0.432977] system 00:02: Plug and Play ACPI device, IDs INT3f0d PNP0c02 (active)
[    0.433095] pnp 00:03: Plug and Play ACPI device, IDs PNP0303 (active)
[    0.433243] pnp 00:04: Plug and Play ACPI device, IDs ETD0b00 SYN0002 PNP0f13 (active)
[    0.433769] system 00:05: [mem 0xfed1c000-0xfed1ffff] has been reserved
[    0.433780] system 00:05: [mem 0xfed10000-0xfed17fff] has been reserved
[    0.433789] system 00:05: [mem 0xfed18000-0xfed18fff] has been reserved
[    0.433798] system 00:05: [mem 0xfed19000-0xfed19fff] has been reserved
[    0.433809] system 00:05: [mem 0xf8000000-0xfbffffff] has been reserved
[    0.433818] system 00:05: [mem 0xfed20000-0xfed3ffff] has been reserved
[    0.433827] system 00:05: [mem 0xfed90000-0xfed93fff] has been reserved
[    0.433837] system 00:05: [mem 0xfed45000-0xfed8ffff] has been reserved
[    0.433847] system 00:05: [mem 0xff000000-0xffffffff] could not be reserved
[    0.433856] system 00:05: [mem 0xfee00000-0xfeefffff] could not be reserved
[    0.433870] system 00:05: Plug and Play ACPI device, IDs PNP0c02 (active)
[    0.434864] system 00:06: Plug and Play ACPI device, IDs PNP0c01 (active)
[    0.434929] pnp: PnP ACPI: found 7 devices
[    0.447369] clocksource: acpi_pm: mask: 0xffffff max_cycles: 0xffffff, max_idle_ns: 2085701024 ns
[    0.447436] pci 0000:00:1c.0: PCI bridge to [bus 01]
[    0.447451] pci 0000:00:1c.0:   bridge window [mem 0xf0600000-0xf06fffff]
[    0.447472] pci 0000:00:1c.3: PCI bridge to [bus 02]
[    0.447481] pci 0000:00:1c.3:   bridge window [io  0x2000-0x2fff]
[    0.447499] pci 0000:00:1c.3:   bridge window [mem 0xf0400000-0xf04fffff 64bit pref]
[    0.447518] pci 0000:00:1c.4: PCI bridge to [bus 03]
[    0.447530] pci 0000:00:1c.4:   bridge window [mem 0xf0500000-0xf05fffff]
[    0.447553] pci_bus 0000:00: resource 4 [io  0x0000-0x0cf7 window]
[    0.447555] pci_bus 0000:00: resource 5 [io  0x0d00-0xffff window]
[    0.447557] pci_bus 0000:00: resource 6 [mem 0x000a0000-0x000bffff window]
[    0.447560] pci_bus 0000:00: resource 7 [mem 0xdfa00000-0xfeafffff window]
[    0.447562] pci_bus 0000:00: resource 8 [mem 0xfed40000-0xfed44fff window]
[    0.447564] pci_bus 0000:01: resource 1 [mem 0xf0600000-0xf06fffff]
[    0.447567] pci_bus 0000:02: resource 0 [io  0x2000-0x2fff]
[    0.447569] pci_bus 0000:02: resource 2 [mem 0xf0400000-0xf04fffff 64bit pref]
[    0.447571] pci_bus 0000:03: resource 1 [mem 0xf0500000-0xf05fffff]
[    0.447741] NET: Registered protocol family 2
[    0.448387] TCP established hash table entries: 32768 (order: 6, 262144 bytes)
[    0.448723] TCP bind hash table entries: 32768 (order: 9, 2097152 bytes)
[    0.451248] TCP: Hash tables configured (established 32768 bind 32768)
[    0.451404] UDP hash table entries: 2048 (order: 6, 327680 bytes)
[    0.451774] UDP-Lite hash table entries: 2048 (order: 6, 327680 bytes)
[    0.452394] NET: Registered protocol family 1
[    0.452436] pci 0000:00:02.0: Video device with shadowed ROM
[    0.454348] PCI: CLS 64 bytes, default 64
[    0.454724] Trying to unpack rootfs image as initramfs...
[    0.557229] Freeing initrd memory: 3856K (ffff880037868000 - ffff880037c2c000)
[    0.557253] PCI-DMA: Using software bounce buffering for IO (SWIOTLB)
[    0.557261] software IO TLB [mem 0xd5c9f000-0xd9c9f000] (64MB) mapped at [ffff8800d5c9f000-ffff8800d9c9efff]
[    0.557464] RAPL PMU detected, API unit is 2^-32 Joules, 3 fixed counters 163840 ms ovfl timer
[    0.557474] hw unit of domain pp0-core 2^-16 Joules
[    0.557480] hw unit of domain package 2^-16 Joules
[    0.557485] hw unit of domain pp1-gpu 2^-16 Joules
[    0.557797] Scanning for low memory corruption every 60 seconds
[    0.559549] futex hash table entries: 2048 (order: 6, 262144 bytes)
[    0.559762] audit: initializing netlink subsys (disabled)
[    0.559851] audit: type=2000 audit(1456780906.500:1): initialized
[    0.560979] Initialise system trusted keyring
[    0.562936] fuse init (API version 7.24)
[    0.565662] Key type asymmetric registered
[    0.565691] Asymmetric key parser &#39;x509&#39; registered
[    0.565758] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 251)
[    0.565953] io scheduler noop registered
[    0.565964] io scheduler deadline registered (default)
[    0.566031] io scheduler cfq registered
[    0.566041] start plist test
[    0.567613] end plist test
[    0.568901] pci_hotplug: PCI Hot Plug PCI Core version: 0.5
[    0.568931] pciehp: PCI Express Hot Plug Controller Driver version: 0.4
[    0.569200] intel_idle: MWAIT substates: 0x21120
[    0.569203] intel_idle: v0.4 model 0x2A
[    0.569204] intel_idle: lapic_timer_reliable_states 0xffffffff
[    0.570862] ACPI: AC Adapter [ADP1] (on-line)
[    0.571327] input: Lid Switch as /devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0D:00/input/input0
[    0.571412] ACPI: Lid Switch [LID0]
[    0.571678] input: Power Button as /devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0C:00/input/input1
[    0.571772] ACPI: Power Button [PWRB]
[    0.572043] input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input2
[    0.572063] ACPI: Power Button [PWRF]
[    0.577262] thermal LNXTHERM:00: registered as thermal_zone0
[    0.577272] ACPI: Thermal Zone [TZ00] (66 C)
[    0.578199] thermal LNXTHERM:01: registered as thermal_zone1
[    0.578208] ACPI: Thermal Zone [TZ01] (30 C)
[    0.578348] GHES: HEST is not enabled!
[    0.578678] Serial: 8250/16550 driver, 32 ports, IRQ sharing enabled
[    0.586605] ACPI: Battery Slot [BAT1] (battery present)
[    0.587409] Linux agpgart interface v0.103
[    0.600543] brd: module loaded
[    0.607395] loop: module loaded
[    0.613096] ahci 0000:00:1f.2: version 3.0
[    0.613561] ahci 0000:00:1f.2: SSS flag set, parallel bus scan disabled
[    0.623774] ahci 0000:00:1f.2: AHCI 0001.0300 32 slots 6 ports 6 Gbps 0x1b impl SATA mode
[    0.623797] ahci 0000:00:1f.2: flags: 64bit ncq sntf ilck stag pm led clo pio slum part ems sxs apst 
[    0.649400] scsi host0: ahci
[    0.650094] scsi host1: ahci
[    0.650680] scsi host2: ahci
[    0.651212] scsi host3: ahci
[    0.651666] scsi host4: ahci
[    0.652091] scsi host5: ahci
[    0.652345] ata1: SATA max UDMA/133 abar m2048@0xf0708000 port 0xf0708100 irq 25
[    0.652357] ata2: SATA max UDMA/133 abar m2048@0xf0708000 port 0xf0708180 irq 25
[    0.652365] ata3: DUMMY
[    0.652371] ata4: SATA max UDMA/133 abar m2048@0xf0708000 port 0xf0708280 irq 25
[    0.652381] ata5: SATA max UDMA/133 abar m2048@0xf0708000 port 0xf0708300 irq 25
[    0.652389] ata6: DUMMY
[    0.654389] libphy: Fixed MDIO Bus: probed
[    0.654896] tun: Universal TUN/TAP device driver, 1.6
[    0.654902] tun: (C) 1999-2004 Max Krasnyansky &lt;maxk@qualcomm.com&gt;
[    0.655135] PPP generic driver version 2.4.2
[    0.655326] ehci_hcd: USB 2.0 &#39;Enhanced&#39; Host Controller (EHCI) Driver
[    0.655337] ehci-pci: EHCI PCI platform driver
[    0.655828] ehci-pci 0000:00:1a.0: EHCI Host Controller
[    0.656042] ehci-pci 0000:00:1a.0: new USB bus registered, assigned bus number 1
[    0.656132] ehci-pci 0000:00:1a.0: debug port 2
[    0.660133] ehci-pci 0000:00:1a.0: cache line size of 64 is not supported
[    0.660211] ehci-pci 0000:00:1a.0: irq 16, io mem 0xf070a000
[    0.670713] ehci-pci 0000:00:1a.0: USB 2.0 started, EHCI 1.00
[    0.671141] usb usb1: New USB device found, idVendor=1d6b, idProduct=0002
[    0.671149] usb usb1: New USB device strings: Mfr=3, Product=2, SerialNumber=1
[    0.671157] usb usb1: Product: EHCI Host Controller
[    0.671163] usb usb1: Manufacturer: Linux 4.5.0-rc6-2-llvmlinux-amd64 ehci_hcd
[    0.671170] usb usb1: SerialNumber: 0000:00:1a.0
[    0.672283] hub 1-0:1.0: USB hub found
[    0.672342] hub 1-0:1.0: 2 ports detected
[    0.673800] ehci-pci 0000:00:1d.0: EHCI Host Controller
[    0.673835] ehci-pci 0000:00:1d.0: new USB bus registered, assigned bus number 2
[    0.673873] ehci-pci 0000:00:1d.0: debug port 2
[    0.677799] ehci-pci 0000:00:1d.0: cache line size of 64 is not supported
[    0.677837] ehci-pci 0000:00:1d.0: irq 23, io mem 0xf0709000
[    0.686697] ehci-pci 0000:00:1d.0: USB 2.0 started, EHCI 1.00
[    0.686883] usb usb2: New USB device found, idVendor=1d6b, idProduct=0002
[    0.686891] usb usb2: New USB device strings: Mfr=3, Product=2, SerialNumber=1
[    0.686899] usb usb2: Product: EHCI Host Controller
[    0.686905] usb usb2: Manufacturer: Linux 4.5.0-rc6-2-llvmlinux-amd64 ehci_hcd
[    0.686912] usb usb2: SerialNumber: 0000:00:1d.0
[    0.687577] hub 2-0:1.0: USB hub found
[    0.687607] hub 2-0:1.0: 2 ports detected
[    0.688097] ehci-platform: EHCI generic platform driver
[    0.688154] ohci_hcd: USB 1.1 &#39;Open&#39; Host Controller (OHCI) Driver
[    0.688176] ohci-pci: OHCI PCI platform driver
[    0.688220] ohci-platform: OHCI generic platform driver
[    0.688254] uhci_hcd: USB Universal Host Controller Interface driver
[    0.688516] xhci_hcd 0000:03:00.0: xHCI Host Controller
[    0.688545] xhci_hcd 0000:03:00.0: new USB bus registered, assigned bus number 3
[    0.693034] xhci_hcd 0000:03:00.0: hcc params 0x0200f180 hci version 0x96 quirks 0x00080000
[    0.693560] usb usb3: New USB device found, idVendor=1d6b, idProduct=0002
[    0.693568] usb usb3: New USB device strings: Mfr=3, Product=2, SerialNumber=1
[    0.693575] usb usb3: Product: xHCI Host Controller
[    0.693581] usb usb3: Manufacturer: Linux 4.5.0-rc6-2-llvmlinux-amd64 xhci-hcd
[    0.693588] usb usb3: SerialNumber: 0000:03:00.0
[    0.694176] hub 3-0:1.0: USB hub found
[    0.694271] hub 3-0:1.0: 2 ports detected
[    0.694781] xhci_hcd 0000:03:00.0: xHCI Host Controller
[    0.694799] xhci_hcd 0000:03:00.0: new USB bus registered, assigned bus number 4
[    0.694907] usb usb4: We don&#39;t know the algorithms for LPM for this host, disabling LPM.
[    0.695009] usb usb4: New USB device found, idVendor=1d6b, idProduct=0003
[    0.695016] usb usb4: New USB device strings: Mfr=3, Product=2, SerialNumber=1
[    0.695024] usb usb4: Product: xHCI Host Controller
[    0.695029] usb usb4: Manufacturer: Linux 4.5.0-rc6-2-llvmlinux-amd64 xhci-hcd
[    0.695037] usb usb4: SerialNumber: 0000:03:00.0
[    0.695681] hub 4-0:1.0: USB hub found
[    0.695732] hub 4-0:1.0: 2 ports detected
[    0.696358] i8042: PNP: PS/2 Controller [PNP0303:PS2K,PNP0f13:EPAD] at 0x60,0x64 irq 1,12
[    0.702540] serio: i8042 KBD port at 0x60,0x64 irq 1
[    0.702605] serio: i8042 AUX port at 0x60,0x64 irq 12
[    0.703549] mousedev: PS/2 mouse device common for all mice
[    0.705132] rtc_cmos 00:01: rtc core: registered rtc_cmos as rtc0
[    0.705180] rtc_cmos 00:01: alarms up to one month, y3k, 242 bytes nvram, hpet irqs
[    0.705333] device-mapper: uevent: version 1.0.3
[    0.705580] device-mapper: ioctl: 4.34.0-ioctl (2015-10-28) initialised: dm-devel@redhat.com
[    0.705622] Intel P-state driver initializing.
[    0.706982] ledtrig-cpu: registered to indicate activity on CPUs
[    0.707973] NET: Registered protocol family 10
[    0.710251] NET: Registered protocol family 17
[    0.710346] Key type dns_resolver registered
[    0.711807] input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input3
[    0.712976] microcode: CPU0 sig=0x206a7, pf=0x10, revision=0x28
[    0.713006] microcode: CPU1 sig=0x206a7, pf=0x10, revision=0x28
[    0.713030] microcode: CPU2 sig=0x206a7, pf=0x10, revision=0x28
[    0.713062] microcode: CPU3 sig=0x206a7, pf=0x10, revision=0x28
[    0.713241] microcode: Microcode Update Driver: v2.01 &lt;tigran@aivazian.fsnet.co.uk&gt;, Peter Oruba
[    0.713867] registered taskstats version 1
[    0.713884] Loading compiled-in X.509 certificates
[    0.714852] Loaded X.509 cert &#39;Build time autogenerated kernel key: d861534734a1854c045ffb7a95ace7fffd94d654&#39;
[    0.720835] Key type trusted registered
[    0.729519] Key type encrypted registered
[    0.729543] AppArmor: AppArmor sha1 policy hashing enabled
[    0.729554] evm: HMAC attrs: 0x1
[    0.730617] rtc_cmos 00:01: setting system clock to 2016-02-29 21:21:47 UTC (1456780907)
[    0.730843] BIOS EDD facility v0.16 2004-Jun-25, 0 devices found
[    0.730851] EDD information not available.
[    0.958730] ata1: SATA link up 3.0 Gbps (SStatus 123 SControl 300)
[    0.960069] ata1.00: ATA-8: Hitachi HTS545050A7E380, GG2OA6C0, max UDMA/133
[    0.960099] ata1.00: 976773168 sectors, multi 16: LBA48 NCQ (depth 31/32), AA
[    0.961524] ata1.00: configured for UDMA/133
[    0.962792] scsi 0:0:0:0: Direct-Access     ATA      Hitachi HTS54505 A6C0 PQ: 0 ANSI: 5
[    0.982708] usb 1-1: new high-speed USB device number 2 using ehci-pci
[    0.987852] sd 0:0:0:0: [sda] 976773168 512-byte logical blocks: (500 GB/466 GiB)
[    0.987867] sd 0:0:0:0: [sda] 4096-byte physical blocks
[    0.988164] sd 0:0:0:0: [sda] Write Protect is off
[    0.988176] sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
[    0.988281] sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn&#39;t support DPO or FUA
[    0.988316] sd 0:0:0:0: Attached scsi generic sg0 type 0
[    0.998558] usb 2-1: new high-speed USB device number 2 using ehci-pci
[    1.030118]  sda: sda1 sda2 sda3
[    1.031755] sd 0:0:0:0: [sda] Attached SCSI disk
[    1.115305] usb 1-1: New USB device found, idVendor=8087, idProduct=0024
[    1.115336] usb 1-1: New USB device strings: Mfr=0, Product=0, SerialNumber=0
[    1.116331] hub 1-1:1.0: USB hub found
[    1.116604] hub 1-1:1.0: 6 ports detected
[    1.131311] usb 2-1: New USB device found, idVendor=8087, idProduct=0024
[    1.131321] usb 2-1: New USB device strings: Mfr=0, Product=0, SerialNumber=0
[    1.132028] hub 2-1:1.0: USB hub found
[    1.132264] hub 2-1:1.0: 6 ports detected
[    1.298688] ata2: SATA link up 3.0 Gbps (SStatus 123 SControl 300)
[    1.299550] ata2.00: ATA-8: SanDisk iSSD P4 16GB, SSD 9.14, max UDMA/133
[    1.299561] ata2.00: 31277232 sectors, multi 1: LBA48 
[    1.300489] ata2.00: configured for UDMA/133
[    1.301089] scsi 1:0:0:0: Direct-Access     ATA      SanDisk iSSD P4  9.14 PQ: 0 ANSI: 5
[    1.327322] sd 1:0:0:0: [sdb] 31277232 512-byte logical blocks: (16.0 GB/14.9 GiB)
[    1.327542] sd 1:0:0:0: Attached scsi generic sg1 type 0
[    1.327557] sd 1:0:0:0: [sdb] Write Protect is off
[    1.327567] sd 1:0:0:0: [sdb] Mode Sense: 00 3a 00 00
[    1.327618] sd 1:0:0:0: [sdb] Write cache: enabled, read cache: enabled, doesn&#39;t support DPO or FUA
[    1.328809]  sdb: sdb1 sdb2
[    1.329687] sd 1:0:0:0: [sdb] Attached SCSI disk
[    1.390661] usb 1-1.4: new high-speed USB device number 3 using ehci-pci
[    1.406658] usb 2-1.4: new low-speed USB device number 3 using ehci-pci
[    1.505551] usb 2-1.4: New USB device found, idVendor=046d, idProduct=c00e
[    1.505564] usb 2-1.4: New USB device strings: Mfr=1, Product=2, SerialNumber=0
[    1.505572] usb 2-1.4: Product: USB-PS/2 Optical Mouse
[    1.505578] usb 2-1.4: Manufacturer: Logitech
[    1.554739] tsc: Refined TSC clocksource calibration: 1596.374 MHz
[    1.554751] clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x1702c3a922f, max_idle_ns: 440795242034 ns
[    1.578620] usb 2-1.5: new full-speed USB device number 4 using ehci-pci
[    1.634808] ata4: SATA link down (SStatus 0 SControl 300)
[    1.647163] usb 1-1.4: New USB device found, idVendor=2232, idProduct=1018
[    1.647175] usb 1-1.4: New USB device strings: Mfr=1, Product=2, SerialNumber=0
[    1.647184] usb 1-1.4: Product: WebCam SC-13HDL11431N
[    1.647189] usb 1-1.4: Manufacturer: 123
[    1.676178] usb 2-1.5: New USB device found, idVendor=8086, idProduct=0189
[    1.676190] usb 2-1.5: New USB device strings: Mfr=0, Product=0, SerialNumber=0
[    1.943089] ata5: SATA link down (SStatus 0 SControl 300)
[    1.945352] Freeing unused kernel memory: 3008K (ffffffff81f26000 - ffffffff82216000)
[    1.945366] Write protecting the kernel read-only data: 14336k
[    1.946312] Freeing unused kernel memory: 724K (ffff88000194b000 - ffff880001a00000)
[    1.949107] Freeing unused kernel memory: 700K (ffff880001d51000 - ffff880001e00000)
[    1.988913] udevd[159]: starting version 175
[    2.303135] r8169 Gigabit Ethernet driver 2.3LK-NAPI loaded
[    2.303174] r8169 0000:02:00.0: can&#39;t disable ASPM; OS doesn&#39;t have ASPM control
[    2.309732] r8169 0000:02:00.0 eth0: RTL8168evl/8111evl at 0xffffc900009e4000, e8:03:9a:36:17:a9, XID 0c900800 IRQ 31
[    2.309758] r8169 0000:02:00.0 eth0: jumbo features [frames: 9200 bytes, tx checksumming: ko]
[    2.360055] usbcore: registered new interface driver usbhid
[    2.360071] usbhid: USB HID core driver
[    2.433667] input: Logitech USB-PS/2 Optical Mouse as /devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.4/2-1.4:1.0/0003:046D:C00E.0001/input/input5
[    2.434207] hid-generic 0003:046D:C00E.0001: input: USB HID v1.10 Mouse [Logitech USB-PS/2 Optical Mouse] on usb-0000:00:1d.0-1.4/input0
[    2.554872] clocksource: Switched to clocksource tsc
[    3.135441] EXT4-fs (loop0): INFO: recovery required on readonly filesystem
[    3.135452] EXT4-fs (loop0): write access will be enabled during recovery
[    3.972253] EXT4-fs (loop0): recovery complete
[    4.013851] EXT4-fs (loop0): mounted filesystem with ordered data mode. Opts: (null)
[    4.135576] random: nonblocking pool is initialized
[    4.202399] usb 1-1.2: new high-speed USB device number 4 using ehci-pci
[    4.297477] usb 1-1.2: New USB device found, idVendor=12d1, idProduct=1446
[    4.297508] usb 1-1.2: New USB device strings: Mfr=3, Product=2, SerialNumber=0
[    4.297538] usb 1-1.2: Product: HUAWEI Mobile
[    4.297543] usb 1-1.2: Manufacturer: HUAWEI Technology
[    5.813391] init: ureadahead main process (447) terminated with status 5
[   10.284608] Adding 262140k swap on /host/ubuntu/disks/swap.disk.  Priority:-1 extents:1 across:262140k FS
[   10.559842] EXT4-fs (loop0): re-mounted. Opts: errors=remount-ro
[   10.758626] udevd[676]: starting version 175
[   12.367896] lp: driver loaded but no devices found
[   14.077291] ACPI Warning: SystemIO range 0x0000000000000428-0x000000000000042F conflicts with OpRegion 0x0000000000000400-0x000000000000047F (\PMIO) (20160108/utaddress-246)
[   14.077305] ACPI: If an ACPI driver is available for this device, you should use it instead of the native driver
[   14.077314] ACPI Warning: SystemIO range 0x0000000000000540-0x000000000000054F conflicts with OpRegion 0x0000000000000500-0x0000000000000563 (\GPIO) (20160108/utaddress-246)
[   14.077323] ACPI: If an ACPI driver is available for this device, you should use it instead of the native driver
[   14.077328] ACPI Warning: SystemIO range 0x0000000000000530-0x000000000000053F conflicts with OpRegion 0x0000000000000500-0x0000000000000563 (\GPIO) (20160108/utaddress-246)
[   14.077337] ACPI: If an ACPI driver is available for this device, you should use it instead of the native driver
[   14.077341] ACPI Warning: SystemIO range 0x0000000000000500-0x000000000000052F conflicts with OpRegion 0x0000000000000500-0x0000000000000563 (\GPIO) (20160108/utaddress-246)
[   14.077349] ACPI: If an ACPI driver is available for this device, you should use it instead of the native driver
[   14.077352] lpc_ich: Resource conflict(s) found affecting gpio_ich
[   14.176767] wmi: Mapper loaded
[   14.552612] samsung_laptop: detected SABI interface: SwSmi@
[   15.014539] [drm] Initialized drm 1.1.0 20060810
[   15.116192] ppdev: user-space parallel port driver
[   15.832083] Bluetooth: Core ver 2.21
[   15.832157] NET: Registered protocol family 31
[   15.832161] Bluetooth: HCI device and connection manager initialized
[   15.832261] Bluetooth: HCI socket layer initialized
[   15.832271] Bluetooth: L2CAP socket layer initialized
[   15.832384] Bluetooth: SCO socket layer initialized
[   16.059343] psmouse serio1: elantech: assuming hardware version 3 (with firmware version 0x450f00)
[   16.074171] psmouse serio1: elantech: Synaptics capabilities query result 0x08, 0x17, 0x0c.
[   16.089270] psmouse serio1: elantech: Elan sample query result 03, 3f, 86
[   16.168796] input: ETPS/2 Elantech Touchpad as /devices/platform/i8042/serio1/input/input6
[   16.404173] usb-storage 1-1.2:1.0: USB Mass Storage device detected
[   16.405839] scsi host6: usb-storage 1-1.2:1.0
[   16.406477] usb-storage 1-1.2:1.1: USB Mass Storage device detected
[   16.406805] scsi host7: usb-storage 1-1.2:1.1
[   16.407703] usbcore: registered new interface driver usb-storage
[   16.413127] Linux video capture interface: v2.00
[   16.453009] Intel(R) Wireless WiFi driver for Linux
[   16.453015] Copyright(c) 2003- 2015 Intel Corporation
[   16.453496] iwlwifi 0000:01:00.0: can&#39;t disable ASPM; OS doesn&#39;t have ASPM control
[   16.548452] usbcore: registered new interface driver btusb
[   17.207804] iwlwifi 0000:01:00.0: loaded firmware version 18.168.6.1 op_mode iwldvm
[   17.285135] Bluetooth: RFCOMM TTY layer initialized
[   17.285166] Bluetooth: RFCOMM socket layer initialized
[   17.285189] Bluetooth: RFCOMM ver 1.11
[   17.402717] uvcvideo: Found UVC 1.00 device WebCam SC-13HDL11431N (2232:1018)
[   17.408441] scsi 6:0:0:0: CD-ROM            HUAWEI   Mass Storage     2.31 PQ: 0 ANSI: 2
[   17.408508] scsi 7:0:0:0: Direct-Access     HUAWEI   SD Storage       2.31 PQ: 0 ANSI: 2
[   17.413621] sr 6:0:0:0: [sr0] scsi-1 drive
[   17.413628] cdrom: Uniform CD-ROM driver Revision: 3.20
[   17.415399] sr 6:0:0:0: Attached scsi CD-ROM sr0
[   17.416351] sr 6:0:0:0: Attached scsi generic sg2 type 5
[   17.418454] sd 7:0:0:0: Attached scsi generic sg3 type 0
[   17.423049] input: WebCam SC-13HDL11431N as /devices/pci0000:00/0000:00:1a.0/usb1/1-1/1-1.4/1-1.4:1.0/input/input7
[   17.423902] usbcore: registered new interface driver uvcvideo
[   17.423907] USB Video Class driver (1.1.1)
[   17.424342] sd 7:0:0:0: [sdc] Attached SCSI removable disk
[   17.590115] snd_hda_codec_realtek hdaudioC0D0: autoconfig for ALC269VC: line_outs=1 (0x14/0x0/0x0/0x0/0x0) type:speaker
[   17.590124] snd_hda_codec_realtek hdaudioC0D0:    speaker_outs=0 (0x0/0x0/0x0/0x0/0x0)
[   17.590129] snd_hda_codec_realtek hdaudioC0D0:    hp_outs=1 (0x15/0x0/0x0/0x0/0x0)
[   17.590133] snd_hda_codec_realtek hdaudioC0D0:    mono: mono_out=0x0
[   17.590135] snd_hda_codec_realtek hdaudioC0D0:    inputs:
[   17.590139] snd_hda_codec_realtek hdaudioC0D0:      Internal Mic=0x19
[   17.590143] snd_hda_codec_realtek hdaudioC0D0:      Mic=0x18
[   17.630835] Bluetooth: BNEP (Ethernet Emulation) ver 1.3
[   17.630842] Bluetooth: BNEP filters: protocol multicast
[   17.630855] Bluetooth: BNEP socket layer initialized
[   18.029036] [drm] Memory usable by graphics device = 2048M
[   18.029111] [drm] Replacing VGA console driver
[   18.051471] [drm] Supports vblank timestamp caching Rev 2 (21.10.2013).
[   18.051476] [drm] Driver supports precise vblank timestamp query.
[   18.054514] vgaarb: device changed decodes: PCI:0000:00:02.0,olddecodes=io+mem,decodes=io+mem:owns=io+mem
[   18.212561] ACPI: Video Device [GFX0] (multi-head: yes  rom: no  post: no)
[   18.212638] fbcon: inteldrmfb (fb0) is primary device
[   18.214287] input: Video Bus as /devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A08:00/LNXVIDEO:00/input/input10
[   18.341487] audit: type=1400 audit(1456777325.109:2): apparmor=&quot;STATUS&quot; operation=&quot;profile_load&quot; name=&quot;/sbin/dhclient&quot; pid=1092 comm=&quot;apparmor_parser&quot;
[   18.341495] audit: type=1400 audit(1456777325.109:3): apparmor=&quot;STATUS&quot; operation=&quot;profile_load&quot; name=&quot;/usr/lib/NetworkManager/nm-dhcp-client.action&quot; pid=1092 comm=&quot;apparmor_parser&quot;
[   18.341500] audit: type=1400 audit(1456777325.109:4): apparmor=&quot;STATUS&quot; operation=&quot;profile_load&quot; name=&quot;/usr/lib/connman/scripts/dhclient-script&quot; pid=1092 comm=&quot;apparmor_parser&quot;
[   18.341541] audit: type=1400 audit(1456777325.109:5): apparmor=&quot;STATUS&quot; operation=&quot;profile_replace&quot; name=&quot;/sbin/dhclient&quot; pid=1088 comm=&quot;apparmor_parser&quot;
[   18.341552] audit: type=1400 audit(1456777325.109:6): apparmor=&quot;STATUS&quot; operation=&quot;profile_replace&quot; name=&quot;/usr/lib/NetworkManager/nm-dhcp-client.action&quot; pid=1088 comm=&quot;apparmor_parser&quot;
[   18.341562] audit: type=1400 audit(1456777325.109:7): apparmor=&quot;STATUS&quot; operation=&quot;profile_replace&quot; name=&quot;/usr/lib/connman/scripts/dhclient-script&quot; pid=1088 comm=&quot;apparmor_parser&quot;
[   18.342403] audit: type=1400 audit(1456777325.109:8): apparmor=&quot;STATUS&quot; operation=&quot;profile_replace&quot; name=&quot;/usr/lib/NetworkManager/nm-dhcp-client.action&quot; pid=1092 comm=&quot;apparmor_parser&quot;
[   18.342415] audit: type=1400 audit(1456777325.109:9): apparmor=&quot;STATUS&quot; operation=&quot;profile_replace&quot; name=&quot;/usr/lib/connman/scripts/dhclient-script&quot; pid=1092 comm=&quot;apparmor_parser&quot;
[   18.342466] audit: type=1400 audit(1456777325.109:10): apparmor=&quot;STATUS&quot; operation=&quot;profile_replace&quot; name=&quot;/usr/lib/NetworkManager/nm-dhcp-client.action&quot; pid=1088 comm=&quot;apparmor_parser&quot;
[   18.342476] audit: type=1400 audit(1456777325.109:11): apparmor=&quot;STATUS&quot; operation=&quot;profile_replace&quot; name=&quot;/usr/lib/connman/scripts/dhclient-script&quot; pid=1088 comm=&quot;apparmor_parser&quot;
[   18.386391] iwlwifi 0000:01:00.0: CONFIG_IWLWIFI_DEBUG disabled
[   18.386394] iwlwifi 0000:01:00.0: CONFIG_IWLWIFI_DEBUGFS enabled
[   18.386396] iwlwifi 0000:01:00.0: CONFIG_IWLWIFI_DEVICE_TRACING enabled
[   18.386399] iwlwifi 0000:01:00.0: Detected Intel(R) Centrino(R) Advanced-N 6230 AGN, REV=0xB0
[   18.386944] iwlwifi 0000:01:00.0: L1 Enabled - LTR Disabled
[   18.441562] ieee80211 phy0: Selected rate control algorithm &#39;iwl-agn-rs&#39;
[   19.092277] usb 1-1.2: USB disconnect, device number 4
[   19.413733] snd_hda_intel 0000:00:1b.0: bound 0000:00:02.0 (ops i915_audio_component_bind_ops [i915])
[   19.413742] Console: switching 
[   19.413742] [drm] Initialized i915 1.6.0 20151218 for 0000:00:02.0 on minor 0
[   19.413744] to colour frame buffer device 170x48
[   19.419047] i915 0000:00:02.0: fb0: inteldrmfb frame buffer device
[   19.453269] input: HDA Intel PCH Mic as /devices/pci0000:00/0000:00:1b.0/sound/card0/input8
[   19.457383] input: HDA Intel PCH Headphone as /devices/pci0000:00/0000:00:1b.0/sound/card0/input9
[   19.458284] input: HDA Intel PCH HDMI/DP,pcm=3 as /devices/pci0000:00/0000:00:1b.0/sound/card0/input11
[   19.608022] init: failsafe main process (1187) killed by TERM signal
[   23.129147] usb 1-1.2: new high-speed USB device number 5 using ehci-pci
[   23.223689] usb 1-1.2: New USB device found, idVendor=12d1, idProduct=1436
[   23.223696] usb 1-1.2: New USB device strings: Mfr=4, Product=3, SerialNumber=0
[   23.223700] usb 1-1.2: Product: HUAWEI Mobile
[   23.223703] usb 1-1.2: Manufacturer: HUAWEI Technology
[   23.227382] usb-storage 1-1.2:1.0: USB Mass Storage device detected
[   23.228951] usb-storage 1-1.2:1.1: USB Mass Storage device detected
[   23.229739] usb-storage 1-1.2:1.2: USB Mass Storage device detected
[   23.230629] usb-storage 1-1.2:1.3: USB Mass Storage device detected
[   23.231401] usb-storage 1-1.2:1.4: USB Mass Storage device detected
[   23.232167] usb-storage 1-1.2:1.5: USB Mass Storage device detected
[   23.232998] scsi host13: usb-storage 1-1.2:1.5
[   23.234201] usb-storage 1-1.2:1.6: USB Mass Storage device detected
[   23.234883] scsi host14: usb-storage 1-1.2:1.6
[   23.422974] usbcore: registered new interface driver usbserial
[   23.469776] cdc_ether 1-1.2:1.1 wwan0: register &#39;cdc_ether&#39; at usb-0000:00:1a.0-1.2, Mobile Broadband Network Device, 02:50:f3:00:00:00
[   23.470068] usbcore: registered new interface driver cdc_ether
[   23.531645] usbcore: registered new interface driver option
[   23.533314] usbserial: USB Serial support registered for GSM modem (1-port)
[   23.533627] option 1-1.2:1.0: GSM modem (1-port) converter detected
[   23.534725] usb 1-1.2: GSM modem (1-port) converter now attached to ttyUSB0
[   23.535059] option 1-1.2:1.3: GSM modem (1-port) converter detected
[   23.535450] usb 1-1.2: GSM modem (1-port) converter now attached to ttyUSB1
[   23.535533] option 1-1.2:1.4: GSM modem (1-port) converter detected
[   23.535846] usb 1-1.2: GSM modem (1-port) converter now attached to ttyUSB2
[   23.837231] BUG: sleeping function called from invalid context at kernel/workqueue.c:2785
[   23.837301] in_atomic(): 0, irqs_disabled(): 1, pid: 1431, name: acpid
[   23.837352] 3 locks held by acpid/1431:
[   23.837354]  #0:  (&amp;evdev-&gt;mutex){+.+...}, at: [&lt;ffffffff817588ad&gt;] evdev_release+0x1dd/0x210
[   23.837364]  #1:  (&amp;dev-&gt;mutex#2){+.+...}, at: [&lt;ffffffff8174fe27&gt;] input_close_device+0x27/0x70
[   23.837372]  #2:  (hid_open_mut){+.+...}, at: [&lt;ffffffffa0057388&gt;] usbhid_close+0x28/0xb0 [usbhid]
[   23.837380] irq event stamp: 2986
[   23.837381] hardirqs last  enabled at (2985): [&lt;ffffffff819426a2&gt;] _raw_spin_unlock_irq+0x32/0x60
[   23.837386] hardirqs last disabled at (2986): [&lt;ffffffff81115bdc&gt;] del_timer_sync+0x3c/0x110
[   23.837391] softirqs last  enabled at (2406): [&lt;ffffffff818c7839&gt;] local_bh_enable+0x9/0x20
[   23.837395] softirqs last disabled at (2404): [&lt;ffffffff818c7819&gt;] local_bh_disable+0x9/0x20
[   23.837400] CPU: 0 PID: 1431 Comm: acpid Not tainted 4.5.0-rc6-2-llvmlinux-amd64 #1
[   23.837402] Hardware name: SAMSUNG ELECTRONICS CO., LTD. 530U3BI/530U4BI/530U4BH/530U3BI/530U4BI/530U4BH, BIOS 13XK 03/28/2013
[   23.837404]  ffff8800d3326948 0000000000000092 0000000000000000 ffff8800b556fad8
[   23.837409]  ffffffff814ba7d4 ffff8800b556fa68 ffff8800c2c40040 ffff8800b556fad8
[   23.837412]  ffffffff810e28fd 0000000000000092 0000000000000096 ffff8800b556fb18
[   23.837416] Call Trace:
[   23.837421]  [&lt;ffffffff814ba7d4&gt;] dump_stack+0xa4/0xf0
[   23.837425]  [&lt;ffffffff810e28fd&gt;] ? print_irqtrace_events+0xcd/0xe0
[   23.837429]  [&lt;ffffffff810bf495&gt;] ___might_sleep+0x295/0x2b0
[   23.837433]  [&lt;ffffffff810bf18f&gt;] __might_sleep+0x4f/0xc0
[   23.837437]  [&lt;ffffffff810a12ef&gt;] start_flush_work+0x2f/0x2a0
[   23.837440]  [&lt;ffffffff810a129c&gt;] flush_work+0x5c/0x80
[   23.837443]  [&lt;ffffffff810a125a&gt;] ? flush_work+0x1a/0x80
[   23.837446]  [&lt;ffffffff810e247d&gt;] ? trace_hardirqs_off+0xd/0x10
[   23.837449]  [&lt;ffffffff810a032a&gt;] ? try_to_grab_pending+0x4a/0x260
[   23.837453]  [&lt;ffffffff810a1717&gt;] __cancel_work_timer+0x197/0x290
[   23.837456]  [&lt;ffffffff81115b8d&gt;] ? try_to_del_timer_sync+0xad/0xc0
[   23.837460]  [&lt;ffffffff810a1578&gt;] cancel_work_sync+0x18/0x20
[   23.837464]  [&lt;ffffffffa00573d5&gt;] usbhid_close+0x75/0xb0 [usbhid]
[   23.837470]  [&lt;ffffffffa003a481&gt;] hidinput_close+0x31/0x40 [hid]
[   23.837475]  [&lt;ffffffffa003a450&gt;] ? hidinput_open+0x40/0x40 [hid]
[   23.837478]  [&lt;ffffffff8174fe48&gt;] input_close_device+0x48/0x70
[   23.837480]  [&lt;ffffffff817588c8&gt;] evdev_release+0x1f8/0x210
[   23.837483]  [&lt;ffffffff817586d0&gt;] ? evdev_flush+0x70/0x70
[   23.837487]  [&lt;ffffffff8127dd6f&gt;] __fput+0x10f/0x240
[   23.837490]  [&lt;ffffffff8127dbf6&gt;] ____fput+0x16/0x20
[   23.837493]  [&lt;ffffffff810ab1ec&gt;] task_work_run+0x7c/0xe0
[   23.837496]  [&lt;ffffffff81002b02&gt;] prepare_exit_to_usermode+0xb2/0x190
[   23.837498]  [&lt;ffffffff81002cb5&gt;] syscall_return_slowpath+0xd5/0x340
[   23.837501]  [&lt;ffffffff8127986a&gt;] ? filp_close+0x6a/0x90
[   23.837504]  [&lt;ffffffff810e2929&gt;] ? trace_hardirqs_on_caller+0x19/0x290
[   23.837507]  [&lt;ffffffff81002017&gt;] ? trace_hardirqs_on_thunk+0x17/0x19
[   23.837510]  [&lt;ffffffff819433b9&gt;] int_ret_from_sys_call+0x25/0x9f
[   24.236544] scsi 14:0:0:0: Direct-Access     HUAWEI   SD Storage       2.31 PQ: 0 ANSI: 2
[   24.237081] scsi 13:0:0:0: CD-ROM            HUAWEI   Mass Storage     2.31 PQ: 0 ANSI: 2
[   24.317374] sd 14:0:0:0: Attached scsi generic sg2 type 0
[   24.323177] sr 13:0:0:0: [sr0] scsi-1 drive
[   24.323228] r8169 0000:02:00.0 eth0: link down
[   24.323394] IPv6: ADDRCONF(NETDEV_UP): eth0: link is not ready
[   24.324439] sd 14:0:0:0: [sdc] Attached SCSI removable disk
[   24.330344] sr 13:0:0:0: Attached scsi CD-ROM sr0
[   24.330904] sr 13:0:0:0: Attached scsi generic sg3 type 5
[   66.529779] PPP BSD Compression module registered
[   66.563013] PPP Deflate Compression module registered
[   66.978977] usb 2-1.5: USB disconnect, device number 4
[  321.937369] usb 2-1.4: USB disconnect, device number 3
[  321.950810] BUG: sleeping function called from invalid context at kernel/workqueue.c:2785
[  321.950816] in_atomic(): 0, irqs_disabled(): 1, pid: 44, name: kworker/2:1
[  321.950819] 9 locks held by kworker/2:1/44:
[  321.950820]  #0:  (&quot;usb_hub_wq&quot;){.+.+.+}, at: [&lt;ffffffff810a7c5f&gt;] process_one_work+0x30f/0x8d0
[  321.950830]  #1:  ((&amp;hub-&gt;events)){+.+.+.}, at: [&lt;ffffffff810a7c8c&gt;] process_one_work+0x33c/0x8d0
[  321.950836]  #2:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816fb0e0&gt;] hub_event+0x50/0x15b0
[  321.950844]  #3:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816f686f&gt;] usb_disconnect+0x5f/0x2c0
[  321.950849]  #4:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816245a2&gt;] device_release_driver+0x22/0x40
[  321.950856]  #5:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816245a2&gt;] device_release_driver+0x22/0x40
[  321.950862]  #6:  (input_mutex){+.+.+.}, at: [&lt;ffffffff8175171a&gt;] __input_unregister_device+0x9a/0x190
[  321.950869]  #7:  (&amp;dev-&gt;mutex#2){+.+...}, at: [&lt;ffffffff8174fe27&gt;] input_close_device+0x27/0x70
[  321.950875]  #8:  (hid_open_mut){+.+...}, at: [&lt;ffffffffa0057388&gt;] usbhid_close+0x28/0xb0 [usbhid]
[  321.950883] irq event stamp: 47770
[  321.950885] hardirqs last  enabled at (47769): [&lt;ffffffff819426a2&gt;] _raw_spin_unlock_irq+0x32/0x60
[  321.950889] hardirqs last disabled at (47770): [&lt;ffffffff81115bdc&gt;] del_timer_sync+0x3c/0x110
[  321.950894] softirqs last  enabled at (47112): [&lt;ffffffff810871a2&gt;] __do_softirq+0x5a2/0x610
[  321.950898] softirqs last disabled at (47097): [&lt;ffffffff8108747c&gt;] irq_exit+0x9c/0x120
[  321.950903] CPU: 2 PID: 44 Comm: kworker/2:1 Not tainted 4.5.0-rc6-2-llvmlinux-amd64 #1
[  321.950905] Hardware name: SAMSUNG ELECTRONICS CO., LTD. 530U3BI/530U4BI/530U4BH/530U3BI/530U4BI/530U4BH, BIOS 13XK 03/28/2013
[  321.950908] Workqueue: usb_hub_wq hub_event
[  321.950911]  ffff8800d3326948 0000000000000092 0000000000000000 ffff8800d4347568
[  321.950915]  ffffffff814ba7d4 ffff8800d43474f8 ffff8800d4340cc0 ffff8800d4347568
[  321.950919]  ffffffff810e28fd 0000000000000092 0000000000000096 ffff8800d43475a8
[  321.950923] Call Trace:
[  321.950927]  [&lt;ffffffff814ba7d4&gt;] dump_stack+0xa4/0xf0
[  321.950931]  [&lt;ffffffff810e28fd&gt;] ? print_irqtrace_events+0xcd/0xe0
[  321.950936]  [&lt;ffffffff810bf495&gt;] ___might_sleep+0x295/0x2b0
[  321.950939]  [&lt;ffffffff810bf18f&gt;] __might_sleep+0x4f/0xc0
[  321.950943]  [&lt;ffffffff810a12ef&gt;] start_flush_work+0x2f/0x2a0
[  321.950946]  [&lt;ffffffff810a129c&gt;] flush_work+0x5c/0x80
[  321.950949]  [&lt;ffffffff810a125a&gt;] ? flush_work+0x1a/0x80
[  321.950953]  [&lt;ffffffff810e247d&gt;] ? trace_hardirqs_off+0xd/0x10
[  321.950956]  [&lt;ffffffff810a032a&gt;] ? try_to_grab_pending+0x4a/0x260
[  321.950960]  [&lt;ffffffff810a1717&gt;] __cancel_work_timer+0x197/0x290
[  321.950963]  [&lt;ffffffff81115b8d&gt;] ? try_to_del_timer_sync+0xad/0xc0
[  321.950966]  [&lt;ffffffff810a1578&gt;] cancel_work_sync+0x18/0x20
[  321.950970]  [&lt;ffffffffa00573d5&gt;] usbhid_close+0x75/0xb0 [usbhid]
[  321.950977]  [&lt;ffffffffa003a481&gt;] hidinput_close+0x31/0x40 [hid]
[  321.950982]  [&lt;ffffffffa003a450&gt;] ? hidinput_open+0x40/0x40 [hid]
[  321.950985]  [&lt;ffffffff8174fe48&gt;] input_close_device+0x48/0x70
[  321.950988]  [&lt;ffffffff81757f85&gt;] evdev_cleanup+0xd5/0xe0
[  321.950990]  [&lt;ffffffff81757b0c&gt;] evdev_disconnect+0x2c/0x60
[  321.950993]  [&lt;ffffffff8175173e&gt;] __input_unregister_device+0xbe/0x190
[  321.950996]  [&lt;ffffffff8175164a&gt;] input_unregister_device+0x4a/0x80
[  321.951001]  [&lt;ffffffffa003a29f&gt;] hidinput_disconnect+0x8f/0xc0 [hid]
[  321.951007]  [&lt;ffffffffa0034a30&gt;] hid_device_remove+0xb0/0x130 [hid]
[  321.951010]  [&lt;ffffffff816246bd&gt;] __device_release_driver+0xfd/0x190
[  321.951014]  [&lt;ffffffff816245aa&gt;] device_release_driver+0x2a/0x40
[  321.951017]  [&lt;ffffffff816224a3&gt;] bus_remove_device+0x153/0x190
[  321.951020]  [&lt;ffffffff8161f5fb&gt;] device_del+0x1db/0x2b0
[  321.951025]  [&lt;ffffffffa0033c1c&gt;] hid_destroy_device+0x2c/0x60 [hid]
[  321.951029]  [&lt;ffffffffa0058537&gt;] usbhid_disconnect+0x67/0x90 [usbhid]
[  321.951033]  [&lt;ffffffff81706ebf&gt;] usb_unbind_interface+0xbf/0x2b0
[  321.951037]  [&lt;ffffffff816246bd&gt;] __device_release_driver+0xfd/0x190
[  321.951040]  [&lt;ffffffff816245aa&gt;] device_release_driver+0x2a/0x40
[  321.951043]  [&lt;ffffffff816224a3&gt;] bus_remove_device+0x153/0x190
[  321.951046]  [&lt;ffffffff8161f5fb&gt;] device_del+0x1db/0x2b0
[  321.951048]  [&lt;ffffffff8161f6fc&gt;] ? device_unregister+0x2c/0x40
[  321.951051]  [&lt;ffffffff81704f6b&gt;] usb_disable_device+0x10b/0x3b0
[  321.951054]  [&lt;ffffffff816f6904&gt;] usb_disconnect+0xf4/0x2c0
[  321.951057]  [&lt;ffffffff816fbc3d&gt;] hub_event+0xbad/0x15b0
[  321.951060]  [&lt;ffffffff819426a2&gt;] ? _raw_spin_unlock_irq+0x32/0x60
[  321.951063]  [&lt;ffffffff810a7e0e&gt;] process_one_work+0x4be/0x8d0
[  321.951065]  [&lt;ffffffff810a7c8c&gt;] ? process_one_work+0x33c/0x8d0
[  321.951068]  [&lt;ffffffff810a757b&gt;] worker_thread+0x5cb/0x750
[  321.951071]  [&lt;ffffffff810a6fb0&gt;] ? destroy_worker+0x110/0x110
[  321.951074]  [&lt;ffffffff810ae1c5&gt;] kthread+0x115/0x120
[  321.951077]  [&lt;ffffffff810e248d&gt;] ? trace_hardirqs_on+0xd/0x10
[  321.951080]  [&lt;ffffffff810ae0b0&gt;] ? flush_kthread_worker+0x80/0x80
[  321.951084]  [&lt;ffffffff819435ff&gt;] ret_from_fork+0x3f/0x70
[  321.951087]  [&lt;ffffffff810ae0b0&gt;] ? flush_kthread_worker+0x80/0x80
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=310">Steven Rostedt</a> - March 1, 2016, 3:07 p.m.</div>
<pre class="content">
On Tue, 1 Mar 2016 11:05:42 +0100
Sedat Dilek &lt;sedat.dilek@gmail.com&gt; wrote:
<span class="quote">

&gt; [ FACT #3: TEST-CASE #2 ]</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The most reliable test-case is to simply unplug my external Logitech</span>
<span class="quote">&gt; USB mouse - saw this by accident.</span>
<span class="quote">&gt; YES, it was so simple.</span>

Just to clarify, this happens on gcc and clang?
<span class="quote">

&gt; </span>
<span class="quote">&gt; --- dmesg_4.5.0-rc6-2-llvmlinux-amd64.txt       2016-02-29</span>
<span class="quote">&gt; 21:23:56.399691975 +0100</span>
<span class="quote">&gt; +++ dmesg_4.5.0-rc6-2-llvmlinux-amd64_usbmouse-unplugged.txt</span>
<span class="quote">&gt; 2016-02-29 21:28:14.401832240 +0100</span>
<span class="quote">&gt; @@ -832,3 +832,75 @@</span>
<span class="quote">&gt;  [   66.529779] PPP BSD Compression module registered</span>
<span class="quote">&gt;  [   66.563013] PPP Deflate Compression module registered</span>
<span class="quote">&gt;  [   66.978977] usb 2-1.5: USB disconnect, device number 4</span>
<span class="quote">&gt; +[  321.937369] usb 2-1.4: USB disconnect, device number 3</span>
<span class="quote">&gt; +[  321.950810] BUG: sleeping function called from invalid context at</span>
<span class="quote">&gt; kernel/workqueue.c:2785</span>
<span class="quote">&gt; +[  321.950816] in_atomic(): 0, irqs_disabled(): 1, pid: 44, name: kworker/2:1</span>
<span class="quote">&gt; +[  321.950819] 9 locks held by kworker/2:1/44:</span>
<span class="quote">&gt; +[  321.950820]  #0:  (&quot;usb_hub_wq&quot;){.+.+.+}, at: [&lt;ffffffff810a7c5f&gt;]</span>
<span class="quote">&gt; process_one_work+0x30f/0x8d0</span>
<span class="quote">&gt; +[  321.950830]  #1:  ((&amp;hub-&gt;events)){+.+.+.}, at:</span>
<span class="quote">&gt; [&lt;ffffffff810a7c8c&gt;] process_one_work+0x33c/0x8d0</span>
<span class="quote">&gt; +[  321.950836]  #2:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816fb0e0&gt;]</span>
<span class="quote">&gt; hub_event+0x50/0x15b0</span>
<span class="quote">&gt; +[  321.950844]  #3:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816f686f&gt;]</span>
<span class="quote">&gt; usb_disconnect+0x5f/0x2c0</span>
<span class="quote">&gt; +[  321.950849]  #4:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816245a2&gt;]</span>
<span class="quote">&gt; device_release_driver+0x22/0x40</span>
<span class="quote">&gt; +[  321.950856]  #5:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816245a2&gt;]</span>
<span class="quote">&gt; device_release_driver+0x22/0x40</span>
<span class="quote">&gt; +[  321.950862]  #6:  (input_mutex){+.+.+.}, at: [&lt;ffffffff8175171a&gt;]</span>
<span class="quote">&gt; __input_unregister_device+0x9a/0x190</span>
<span class="quote">&gt; +[  321.950869]  #7:  (&amp;dev-&gt;mutex#2){+.+...}, at:</span>
<span class="quote">&gt; [&lt;ffffffff8174fe27&gt;] input_close_device+0x27/0x70</span>
<span class="quote">&gt; +[  321.950875]  #8:  (hid_open_mut){+.+...}, at: [&lt;ffffffffa0057388&gt;]</span>
<span class="quote">&gt; usbhid_close+0x28/0xb0 [usbhid]</span>
<span class="quote">&gt; +[  321.950883] irq event stamp: 47770</span>
<span class="quote">&gt; +[  321.950885] hardirqs last  enabled at (47769):</span>
<span class="quote">&gt; [&lt;ffffffff819426a2&gt;] _raw_spin_unlock_irq+0x32/0x60</span>
<span class="quote">&gt; +[  321.950889] hardirqs last disabled at (47770):</span>
<span class="quote">&gt; [&lt;ffffffff81115bdc&gt;] del_timer_sync+0x3c/0x110</span>

According to lockdep, interrupts were last disabled in del_timer_sync,
and they were never enabled. The numbers in parenthesis show the order
of events. _raw_spin_unlock_irq() at 47769, then del_timer_sync at
47770.

But why did they not get enabled again? We have:

	local_irq_save(flags);
	lock_map_acquire(&amp;timer-&gt;lockdep_map);
	lock_map_release(&amp;timer-&gt;lockdep_map);
	local_irq_restore(flags);

If this caused an issue, then you would have a lockdep splat. But
perhaps something corrupted &quot;flags&quot;, and interrupts were not re-enabled?
<span class="quote">
&gt; +[  321.950894] softirqs last  enabled at (47112):</span>
<span class="quote">&gt; [&lt;ffffffff810871a2&gt;] __do_softirq+0x5a2/0x610</span>
<span class="quote">&gt; +[  321.950898] softirqs last disabled at (47097):</span>
<span class="quote">&gt; [&lt;ffffffff8108747c&gt;] irq_exit+0x9c/0x120</span>
<span class="quote">&gt; +[  321.950903] CPU: 2 PID: 44 Comm: kworker/2:1 Not tainted</span>
<span class="quote">&gt; 4.5.0-rc6-2-llvmlinux-amd64 #1</span>
<span class="quote">&gt; +[  321.950905] Hardware name: SAMSUNG ELECTRONICS CO., LTD.</span>
<span class="quote">&gt; 530U3BI/530U4BI/530U4BH/530U3BI/530U4BI/530U4BH, BIOS 13XK 03/28/2013</span>
<span class="quote">&gt; +[  321.950908] Workqueue: usb_hub_wq hub_event</span>
<span class="quote">&gt; +[  321.950911]  ffff8800d3326948 0000000000000092 0000000000000000</span>
<span class="quote">&gt; ffff8800d4347568</span>
<span class="quote">&gt; +[  321.950915]  ffffffff814ba7d4 ffff8800d43474f8 ffff8800d4340cc0</span>
<span class="quote">&gt; ffff8800d4347568</span>
<span class="quote">&gt; +[  321.950919]  ffffffff810e28fd 0000000000000092 0000000000000096</span>
<span class="quote">&gt; ffff8800d43475a8</span>
<span class="quote">&gt; +[  321.950923] Call Trace:</span>
<span class="quote">&gt; +[  321.950927]  [&lt;ffffffff814ba7d4&gt;] dump_stack+0xa4/0xf0</span>
<span class="quote">&gt; +[  321.950931]  [&lt;ffffffff810e28fd&gt;] ? print_irqtrace_events+0xcd/0xe0</span>
<span class="quote">&gt; +[  321.950936]  [&lt;ffffffff810bf495&gt;] ___might_sleep+0x295/0x2b0</span>
<span class="quote">&gt; +[  321.950939]  [&lt;ffffffff810bf18f&gt;] __might_sleep+0x4f/0xc0</span>

This triggered on the might_sleep() in start_flush_work() because
something left interrupts enable.

Just strange.

-- Steve
<span class="quote">

&gt; +[  321.950943]  [&lt;ffffffff810a12ef&gt;] start_flush_work+0x2f/0x2a0</span>
<span class="quote">&gt; +[  321.950946]  [&lt;ffffffff810a129c&gt;] flush_work+0x5c/0x80</span>
<span class="quote">&gt; +[  321.950949]  [&lt;ffffffff810a125a&gt;] ? flush_work+0x1a/0x80</span>
<span class="quote">&gt; +[  321.950953]  [&lt;ffffffff810e247d&gt;] ? trace_hardirqs_off+0xd/0x10</span>
<span class="quote">&gt; +[  321.950956]  [&lt;ffffffff810a032a&gt;] ? try_to_grab_pending+0x4a/0x260</span>
<span class="quote">&gt; +[  321.950960]  [&lt;ffffffff810a1717&gt;] __cancel_work_timer+0x197/0x290</span>
<span class="quote">&gt; +[  321.950963]  [&lt;ffffffff81115b8d&gt;] ? try_to_del_timer_sync+0xad/0xc0</span>
<span class="quote">&gt; +[  321.950966]  [&lt;ffffffff810a1578&gt;] cancel_work_sync+0x18/0x20</span>
<span class="quote">&gt; +[  321.950970]  [&lt;ffffffffa00573d5&gt;] usbhid_close+0x75/0xb0 [usbhid]</span>
<span class="quote">&gt; +[  321.950977]  [&lt;ffffffffa003a481&gt;] hidinput_close+0x31/0x40 [hid]</span>
<span class="quote">&gt; +[  321.950982]  [&lt;ffffffffa003a450&gt;] ? hidinput_open+0x40/0x40 [hid]</span>
<span class="quote">&gt; +[  321.950985]  [&lt;ffffffff8174fe48&gt;] input_close_device+0x48/0x70</span>
<span class="quote">&gt; +[  321.950988]  [&lt;ffffffff81757f85&gt;] evdev_cleanup+0xd5/0xe0</span>
<span class="quote">&gt; +[  321.950990]  [&lt;ffffffff81757b0c&gt;] evdev_disconnect+0x2c/0x60</span>
<span class="quote">&gt; +[  321.950993]  [&lt;ffffffff8175173e&gt;] __input_unregister_device+0xbe/0x190</span>
<span class="quote">&gt; +[  321.950996]  [&lt;ffffffff8175164a&gt;] input_unregister_device+0x4a/0x80</span>
<span class="quote">&gt; +[  321.951001]  [&lt;ffffffffa003a29f&gt;] hidinput_disconnect+0x8f/0xc0 [hid]</span>
<span class="quote">&gt; +[  321.951007]  [&lt;ffffffffa0034a30&gt;] hid_device_remove+0xb0/0x130 [hid]</span>
<span class="quote">&gt; +[  321.951010]  [&lt;ffffffff816246bd&gt;] __device_release_driver+0xfd/0x190</span>
<span class="quote">&gt; +[  321.951014]  [&lt;ffffffff816245aa&gt;] device_release_driver+0x2a/0x40</span>
<span class="quote">&gt; +[  321.951017]  [&lt;ffffffff816224a3&gt;] bus_remove_device+0x153/0x190</span>
<span class="quote">&gt; +[  321.951020]  [&lt;ffffffff8161f5fb&gt;] device_del+0x1db/0x2b0</span>
<span class="quote">&gt; +[  321.951025]  [&lt;ffffffffa0033c1c&gt;] hid_destroy_device+0x2c/0x60 [hid]</span>
<span class="quote">&gt; +[  321.951029]  [&lt;ffffffffa0058537&gt;] usbhid_disconnect+0x67/0x90 [usbhid]</span>
<span class="quote">&gt; +[  321.951033]  [&lt;ffffffff81706ebf&gt;] usb_unbind_interface+0xbf/0x2b0</span>
<span class="quote">&gt; +[  321.951037]  [&lt;ffffffff816246bd&gt;] __device_release_driver+0xfd/0x190</span>
<span class="quote">&gt; +[  321.951040]  [&lt;ffffffff816245aa&gt;] device_release_driver+0x2a/0x40</span>
<span class="quote">&gt; +[  321.951043]  [&lt;ffffffff816224a3&gt;] bus_remove_device+0x153/0x190</span>
<span class="quote">&gt; +[  321.951046]  [&lt;ffffffff8161f5fb&gt;] device_del+0x1db/0x2b0</span>
<span class="quote">&gt; +[  321.951048]  [&lt;ffffffff8161f6fc&gt;] ? device_unregister+0x2c/0x40</span>
<span class="quote">&gt; +[  321.951051]  [&lt;ffffffff81704f6b&gt;] usb_disable_device+0x10b/0x3b0</span>
<span class="quote">&gt; +[  321.951054]  [&lt;ffffffff816f6904&gt;] usb_disconnect+0xf4/0x2c0</span>
<span class="quote">&gt; +[  321.951057]  [&lt;ffffffff816fbc3d&gt;] hub_event+0xbad/0x15b0</span>
<span class="quote">&gt; +[  321.951060]  [&lt;ffffffff819426a2&gt;] ? _raw_spin_unlock_irq+0x32/0x60</span>
<span class="quote">&gt; +[  321.951063]  [&lt;ffffffff810a7e0e&gt;] process_one_work+0x4be/0x8d0</span>
<span class="quote">&gt; +[  321.951065]  [&lt;ffffffff810a7c8c&gt;] ? process_one_work+0x33c/0x8d0</span>
<span class="quote">&gt; +[  321.951068]  [&lt;ffffffff810a757b&gt;] worker_thread+0x5cb/0x750</span>
<span class="quote">&gt; +[  321.951071]  [&lt;ffffffff810a6fb0&gt;] ? destroy_worker+0x110/0x110</span>
<span class="quote">&gt; +[  321.951074]  [&lt;ffffffff810ae1c5&gt;] kthread+0x115/0x120</span>
<span class="quote">&gt; +[  321.951077]  [&lt;ffffffff810e248d&gt;] ? trace_hardirqs_on+0xd/0x10</span>
<span class="quote">&gt; +[  321.951080]  [&lt;ffffffff810ae0b0&gt;] ? flush_kthread_worker+0x80/0x80</span>
<span class="quote">&gt; +[  321.951084]  [&lt;ffffffff819435ff&gt;] ret_from_fork+0x3f/0x70</span>
<span class="quote">&gt; +[  321.951087]  [&lt;ffffffff810ae0b0&gt;] ? flush_kthread_worker+0x80/0x80</span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a> - March 1, 2016, 3:17 p.m.</div>
<pre class="content">
On Tue, Mar 01, 2016 at 10:07:40AM -0500, Steven Rostedt wrote:
<span class="quote">&gt; On Tue, 1 Mar 2016 11:05:42 +0100</span>
<span class="quote">&gt; Sedat Dilek &lt;sedat.dilek@gmail.com&gt; wrote:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; [ FACT #3: TEST-CASE #2 ]</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; The most reliable test-case is to simply unplug my external Logitech</span>
<span class="quote">&gt; &gt; USB mouse - saw this by accident.</span>
<span class="quote">&gt; &gt; YES, it was so simple.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Just to clarify, this happens on gcc and clang?</span>

Just clang from what I gather.
<span class="quote">
&gt; &gt; --- dmesg_4.5.0-rc6-2-llvmlinux-amd64.txt       2016-02-29</span>
<span class="quote">&gt; &gt; 21:23:56.399691975 +0100</span>
<span class="quote">&gt; &gt; +++ dmesg_4.5.0-rc6-2-llvmlinux-amd64_usbmouse-unplugged.txt</span>
<span class="quote">&gt; &gt; 2016-02-29 21:28:14.401832240 +0100</span>
<span class="quote">&gt; &gt; @@ -832,3 +832,75 @@</span>
<span class="quote">&gt; &gt;  [   66.529779] PPP BSD Compression module registered</span>
<span class="quote">&gt; &gt;  [   66.563013] PPP Deflate Compression module registered</span>
<span class="quote">&gt; &gt;  [   66.978977] usb 2-1.5: USB disconnect, device number 4</span>
<span class="quote">&gt; &gt; +[  321.937369] usb 2-1.4: USB disconnect, device number 3</span>
<span class="quote">&gt; &gt; +[  321.950810] BUG: sleeping function called from invalid context at</span>
<span class="quote">&gt; &gt; kernel/workqueue.c:2785</span>
<span class="quote">&gt; &gt; +[  321.950816] in_atomic(): 0, irqs_disabled(): 1, pid: 44, name: kworker/2:1</span>
<span class="quote">&gt; &gt; +[  321.950819] 9 locks held by kworker/2:1/44:</span>
<span class="quote">&gt; &gt; +[  321.950820]  #0:  (&quot;usb_hub_wq&quot;){.+.+.+}, at: [&lt;ffffffff810a7c5f&gt;]</span>
<span class="quote">&gt; &gt; process_one_work+0x30f/0x8d0</span>
<span class="quote">&gt; &gt; +[  321.950830]  #1:  ((&amp;hub-&gt;events)){+.+.+.}, at:</span>
<span class="quote">&gt; &gt; [&lt;ffffffff810a7c8c&gt;] process_one_work+0x33c/0x8d0</span>
<span class="quote">&gt; &gt; +[  321.950836]  #2:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816fb0e0&gt;]</span>
<span class="quote">&gt; &gt; hub_event+0x50/0x15b0</span>
<span class="quote">&gt; &gt; +[  321.950844]  #3:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816f686f&gt;]</span>
<span class="quote">&gt; &gt; usb_disconnect+0x5f/0x2c0</span>
<span class="quote">&gt; &gt; +[  321.950849]  #4:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816245a2&gt;]</span>
<span class="quote">&gt; &gt; device_release_driver+0x22/0x40</span>
<span class="quote">&gt; &gt; +[  321.950856]  #5:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816245a2&gt;]</span>
<span class="quote">&gt; &gt; device_release_driver+0x22/0x40</span>
<span class="quote">&gt; &gt; +[  321.950862]  #6:  (input_mutex){+.+.+.}, at: [&lt;ffffffff8175171a&gt;]</span>
<span class="quote">&gt; &gt; __input_unregister_device+0x9a/0x190</span>
<span class="quote">&gt; &gt; +[  321.950869]  #7:  (&amp;dev-&gt;mutex#2){+.+...}, at:</span>
<span class="quote">&gt; &gt; [&lt;ffffffff8174fe27&gt;] input_close_device+0x27/0x70</span>
<span class="quote">&gt; &gt; +[  321.950875]  #8:  (hid_open_mut){+.+...}, at: [&lt;ffffffffa0057388&gt;]</span>
<span class="quote">&gt; &gt; usbhid_close+0x28/0xb0 [usbhid]</span>
<span class="quote">&gt; &gt; +[  321.950883] irq event stamp: 47770</span>
<span class="quote">&gt; &gt; +[  321.950885] hardirqs last  enabled at (47769):</span>
<span class="quote">&gt; &gt; [&lt;ffffffff819426a2&gt;] _raw_spin_unlock_irq+0x32/0x60</span>
<span class="quote">&gt; &gt; +[  321.950889] hardirqs last disabled at (47770):</span>
<span class="quote">&gt; &gt; [&lt;ffffffff81115bdc&gt;] del_timer_sync+0x3c/0x110</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; According to lockdep, interrupts were last disabled in del_timer_sync,</span>
<span class="quote">&gt; and they were never enabled. The numbers in parenthesis show the order</span>
<span class="quote">&gt; of events. _raw_spin_unlock_irq() at 47769, then del_timer_sync at</span>
<span class="quote">&gt; 47770.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; But why did they not get enabled again? We have:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; 	local_irq_save(flags);</span>
<span class="quote">&gt; 	lock_map_acquire(&amp;timer-&gt;lockdep_map);</span>
<span class="quote">&gt; 	lock_map_release(&amp;timer-&gt;lockdep_map);</span>
<span class="quote">&gt; 	local_irq_restore(flags);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; If this caused an issue, then you would have a lockdep splat. But</span>
<span class="quote">&gt; perhaps something corrupted &quot;flags&quot;, and interrupts were not re-enabled?</span>

Right, most odd. Sedat, could you provide objdump -D of the relevant
sections of vmlinux ?
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41441">Sedat Dilek</a> - March 2, 2016, 3 p.m.</div>
<pre class="content">
On 3/1/16, Peter Zijlstra &lt;peterz@infradead.org&gt; wrote:
<span class="quote">&gt; On Tue, Mar 01, 2016 at 10:07:40AM -0500, Steven Rostedt wrote:</span>
<span class="quote">&gt;&gt; On Tue, 1 Mar 2016 11:05:42 +0100</span>
<span class="quote">&gt;&gt; Sedat Dilek &lt;sedat.dilek@gmail.com&gt; wrote:</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; &gt; [ FACT #3: TEST-CASE #2 ]</span>
<span class="quote">&gt;&gt; &gt;</span>
<span class="quote">&gt;&gt; &gt; The most reliable test-case is to simply unplug my external Logitech</span>
<span class="quote">&gt;&gt; &gt; USB mouse - saw this by accident.</span>
<span class="quote">&gt;&gt; &gt; YES, it was so simple.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Just to clarify, this happens on gcc and clang?</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Just clang from what I gather.</span>
<span class="quote">&gt;</span>

YES, gcc, but I can crash my Xorg, but do not see a pile of nothing in
my dmesg-log.
<span class="quote">
&gt;&gt; &gt; --- dmesg_4.5.0-rc6-2-llvmlinux-amd64.txt       2016-02-29</span>
<span class="quote">&gt;&gt; &gt; 21:23:56.399691975 +0100</span>
<span class="quote">&gt;&gt; &gt; +++ dmesg_4.5.0-rc6-2-llvmlinux-amd64_usbmouse-unplugged.txt</span>
<span class="quote">&gt;&gt; &gt; 2016-02-29 21:28:14.401832240 +0100</span>
<span class="quote">&gt;&gt; &gt; @@ -832,3 +832,75 @@</span>
<span class="quote">&gt;&gt; &gt;  [   66.529779] PPP BSD Compression module registered</span>
<span class="quote">&gt;&gt; &gt;  [   66.563013] PPP Deflate Compression module registered</span>
<span class="quote">&gt;&gt; &gt;  [   66.978977] usb 2-1.5: USB disconnect, device number 4</span>
<span class="quote">&gt;&gt; &gt; +[  321.937369] usb 2-1.4: USB disconnect, device number 3</span>
<span class="quote">&gt;&gt; &gt; +[  321.950810] BUG: sleeping function called from invalid context at</span>
<span class="quote">&gt;&gt; &gt; kernel/workqueue.c:2785</span>
<span class="quote">&gt;&gt; &gt; +[  321.950816] in_atomic(): 0, irqs_disabled(): 1, pid: 44, name:</span>
<span class="quote">&gt;&gt; &gt; kworker/2:1</span>
<span class="quote">&gt;&gt; &gt; +[  321.950819] 9 locks held by kworker/2:1/44:</span>
<span class="quote">&gt;&gt; &gt; +[  321.950820]  #0:  (&quot;usb_hub_wq&quot;){.+.+.+}, at: [&lt;ffffffff810a7c5f&gt;]</span>
<span class="quote">&gt;&gt; &gt; process_one_work+0x30f/0x8d0</span>
<span class="quote">&gt;&gt; &gt; +[  321.950830]  #1:  ((&amp;hub-&gt;events)){+.+.+.}, at:</span>
<span class="quote">&gt;&gt; &gt; [&lt;ffffffff810a7c8c&gt;] process_one_work+0x33c/0x8d0</span>
<span class="quote">&gt;&gt; &gt; +[  321.950836]  #2:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816fb0e0&gt;]</span>
<span class="quote">&gt;&gt; &gt; hub_event+0x50/0x15b0</span>
<span class="quote">&gt;&gt; &gt; +[  321.950844]  #3:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816f686f&gt;]</span>
<span class="quote">&gt;&gt; &gt; usb_disconnect+0x5f/0x2c0</span>
<span class="quote">&gt;&gt; &gt; +[  321.950849]  #4:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816245a2&gt;]</span>
<span class="quote">&gt;&gt; &gt; device_release_driver+0x22/0x40</span>
<span class="quote">&gt;&gt; &gt; +[  321.950856]  #5:  (&amp;dev-&gt;mutex){......}, at: [&lt;ffffffff816245a2&gt;]</span>
<span class="quote">&gt;&gt; &gt; device_release_driver+0x22/0x40</span>
<span class="quote">&gt;&gt; &gt; +[  321.950862]  #6:  (input_mutex){+.+.+.}, at: [&lt;ffffffff8175171a&gt;]</span>
<span class="quote">&gt;&gt; &gt; __input_unregister_device+0x9a/0x190</span>
<span class="quote">&gt;&gt; &gt; +[  321.950869]  #7:  (&amp;dev-&gt;mutex#2){+.+...}, at:</span>
<span class="quote">&gt;&gt; &gt; [&lt;ffffffff8174fe27&gt;] input_close_device+0x27/0x70</span>
<span class="quote">&gt;&gt; &gt; +[  321.950875]  #8:  (hid_open_mut){+.+...}, at: [&lt;ffffffffa0057388&gt;]</span>
<span class="quote">&gt;&gt; &gt; usbhid_close+0x28/0xb0 [usbhid]</span>
<span class="quote">&gt;&gt; &gt; +[  321.950883] irq event stamp: 47770</span>
<span class="quote">&gt;&gt; &gt; +[  321.950885] hardirqs last  enabled at (47769):</span>
<span class="quote">&gt;&gt; &gt; [&lt;ffffffff819426a2&gt;] _raw_spin_unlock_irq+0x32/0x60</span>
<span class="quote">&gt;&gt; &gt; +[  321.950889] hardirqs last disabled at (47770):</span>
<span class="quote">&gt;&gt; &gt; [&lt;ffffffff81115bdc&gt;] del_timer_sync+0x3c/0x110</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; According to lockdep, interrupts were last disabled in del_timer_sync,</span>
<span class="quote">&gt;&gt; and they were never enabled. The numbers in parenthesis show the order</span>
<span class="quote">&gt;&gt; of events. _raw_spin_unlock_irq() at 47769, then del_timer_sync at</span>
<span class="quote">&gt;&gt; 47770.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; But why did they not get enabled again? We have:</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; 	local_irq_save(flags);</span>
<span class="quote">&gt;&gt; 	lock_map_acquire(&amp;timer-&gt;lockdep_map);</span>
<span class="quote">&gt;&gt; 	lock_map_release(&amp;timer-&gt;lockdep_map);</span>
<span class="quote">&gt;&gt; 	local_irq_restore(flags);</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; If this caused an issue, then you would have a lockdep splat. But</span>
<span class="quote">&gt;&gt; perhaps something corrupted &quot;flags&quot;, and interrupts were not re-enabled?</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Right, most odd. Sedat, could you provide objdump -D of the relevant</span>
<span class="quote">&gt; sections of vmlinux ?</span>
<span class="quote">&gt;</span>

Can you give some clear instructions - for what shall I look for in special?

I can send you a 300MiB mail-bomb if you like :-).

$ cd linux-git
$ objdump -D vmlinux &gt; ../objdump-D_vmlinux.txt
$ du -m ../objdump-D_vmlinux.txt
294     ../objdump-D_vmlinux.txt

I have now built with the same kernel-config for gcc and clang and
archived the most interesting stuff.
Before sending the stuff out, I would like to have some clear instructions.

Thanks.

- Sedat -
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a> - March 2, 2016, 3:17 p.m.</div>
<pre class="content">
On Wed, Mar 02, 2016 at 04:00:49PM +0100, Sedat Dilek wrote:
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; Right, most odd. Sedat, could you provide objdump -D of the relevant</span>
<span class="quote">&gt; &gt; sections of vmlinux ?</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Can you give some clear instructions - for what shall I look for in special?</span>

objdump -D vmlinux | awk &#39;/&lt;[^&gt;]*&gt;:$/ { p=0; } /&lt;del_timer_sync&gt;:/ { p=1; } { if (p) print $0; }&#39;

might be a good start, esp. if the output differs between the LLVM and
GCC cases (+- address muck).
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41441">Sedat Dilek</a> - March 2, 2016, 3:34 p.m.</div>
<pre class="content">
On 3/2/16, Peter Zijlstra &lt;peterz@infradead.org&gt; wrote:
<span class="quote">&gt; On Wed, Mar 02, 2016 at 04:00:49PM +0100, Sedat Dilek wrote:</span>
<span class="quote">&gt;&gt; &gt;</span>
<span class="quote">&gt;&gt; &gt; Right, most odd. Sedat, could you provide objdump -D of the relevant</span>
<span class="quote">&gt;&gt; &gt; sections of vmlinux ?</span>
<span class="quote">&gt;&gt; &gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Can you give some clear instructions - for what shall I look for in</span>
<span class="quote">&gt;&gt; special?</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; objdump -D vmlinux | awk &#39;/&lt;[^&gt;]*&gt;:$/ { p=0; } /&lt;del_timer_sync&gt;:/ { p=1; }</span>
<span class="quote">&gt; { if (p) print $0; }&#39;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; might be a good start, esp. if the output differs between the LLVM and</span>
<span class="quote">&gt; GCC cases (+- address muck).</span>
<span class="quote">&gt;</span>

Done as you instructed (small-sized attachment)

Plus some oldschool-grep-ing in the 2nd attached file...

$ grep &#39;&gt;:&#39; objdump-D_vmlinux_peterz.txt
180585-ffffffff8109a320 &lt;mod_delayed_work_on&gt;:
180643:ffffffff8109a3d0 &lt;try_to_grab_pending&gt;:
180873-ffffffff8109a760 &lt;flush_workqueue&gt;:
181267-ffffffff8109ae80 &lt;flush_workqueue_prep_pwqs&gt;:
181423-ffffffff8109b0e0 &lt;drain_workqueue&gt;:
181554-ffffffff8109b2c0 &lt;flush_work&gt;:
181593-ffffffff8109b340 &lt;start_flush_work&gt;:
181756-ffffffff8109b5d0 &lt;cancel_work_sync&gt;:
181772-ffffffff8109b5f0 &lt;__cancel_work_timer&gt;:
181932-ffffffff8109b870 &lt;flush_delayed_work&gt;:
181963-ffffffff8109b8d0 &lt;cancel_delayed_work&gt;:
182027-ffffffff8109b9a0 &lt;set_work_pool_and_clear_pending&gt;:
182062-ffffffff8109ba10 &lt;cancel_delayed_work_sync&gt;:
310375:ffffffff8110f3f0 &lt;del_timer&gt;:
310433-ffffffff8110f4b0 &lt;try_to_del_timer_sync&gt;:
310490-ffffffff8110f570 &lt;del_timer_sync&gt;:

Hope this helps.

- Sedat -
ffffffff8110f570 &lt;del_timer_sync&gt;:
ffffffff8110f570:	55                   	push   %rbp
ffffffff8110f571:	48 89 e5             	mov    %rsp,%rbp
ffffffff8110f574:	41 57                	push   %r15
ffffffff8110f576:	41 56                	push   %r14
ffffffff8110f578:	53                   	push   %rbx
ffffffff8110f579:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8110f57d:	48 89 fb             	mov    %rdi,%rbx
ffffffff8110f580:	e8 6b 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f585:	e8 66 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f58a:	e8 61 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f58f:	e8 5c 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f594:	9c                   	pushfq 
ffffffff8110f595:	8f 45 e0             	popq   -0x20(%rbp)
ffffffff8110f598:	4c 8b 7d e0          	mov    -0x20(%rbp),%r15
ffffffff8110f59c:	e8 4f 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f5a1:	e8 4a 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f5a6:	fa                   	cli    
ffffffff8110f5a7:	e8 84 cb fc ff       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
ffffffff8110f5ac:	4c 8d 73 50          	lea    0x50(%rbx),%r14
ffffffff8110f5b0:	48 c7 04 24 b0 f5 10 	movq   $0xffffffff8110f5b0,(%rsp)
ffffffff8110f5b7:	81 
ffffffff8110f5b8:	31 f6                	xor    %esi,%esi
ffffffff8110f5ba:	31 d2                	xor    %edx,%edx
ffffffff8110f5bc:	31 c9                	xor    %ecx,%ecx
ffffffff8110f5be:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff8110f5c4:	45 31 c9             	xor    %r9d,%r9d
ffffffff8110f5c7:	4c 89 f7             	mov    %r14,%rdi
ffffffff8110f5ca:	e8 c1 e5 fc ff       	callq  ffffffff810ddb90 &lt;lock_acquire&gt;
ffffffff8110f5cf:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8110f5d4:	48 c7 c2 cf f5 10 81 	mov    $0xffffffff8110f5cf,%rdx
ffffffff8110f5db:	4c 89 f7             	mov    %r14,%rdi
ffffffff8110f5de:	e8 8d 08 fd ff       	callq  ffffffff810dfe70 &lt;lock_release&gt;
ffffffff8110f5e3:	e8 08 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f5e8:	4c 89 f8             	mov    %r15,%rax
ffffffff8110f5eb:	49 89 c6             	mov    %rax,%r14
ffffffff8110f5ee:	f6 c4 02             	test   $0x2,%ah
ffffffff8110f5f1:	75 19                	jne    ffffffff8110f60c &lt;del_timer_sync+0x9c&gt;
ffffffff8110f5f3:	e8 f8 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f5f8:	e8 f3 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f5fd:	4c 89 75 d0          	mov    %r14,-0x30(%rbp)
ffffffff8110f601:	ff 75 d0             	pushq  -0x30(%rbp)
ffffffff8110f604:	9d                   	popfq  
ffffffff8110f605:	e8 26 cb fc ff       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
ffffffff8110f60a:	eb 17                	jmp    ffffffff8110f623 &lt;del_timer_sync+0xb3&gt;
ffffffff8110f60c:	e8 2f cb fc ff       	callq  ffffffff810dc140 &lt;trace_hardirqs_on&gt;
ffffffff8110f611:	e8 da 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f616:	e8 d5 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f61b:	4c 89 75 d8          	mov    %r14,-0x28(%rbp)
ffffffff8110f61f:	ff 75 d8             	pushq  -0x28(%rbp)
ffffffff8110f622:	9d                   	popfq  
ffffffff8110f623:	e8 c8 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f628:	65 8b 04 25 d4 ae 00 	mov    %gs:0xaed4,%eax
ffffffff8110f62f:	00 
ffffffff8110f630:	a9 00 00 0f 00       	test   $0xf0000,%eax
ffffffff8110f635:	74 25                	je     ffffffff8110f65c &lt;del_timer_sync+0xec&gt;
ffffffff8110f637:	f6 43 2a 20          	testb  $0x20,0x2a(%rbx)
ffffffff8110f63b:	75 1f                	jne    ffffffff8110f65c &lt;del_timer_sync+0xec&gt;
ffffffff8110f63d:	48 c7 c7 04 54 c5 81 	mov    $0xffffffff81c55404,%rdi
ffffffff8110f644:	be 61 04 00 00       	mov    $0x461,%esi
ffffffff8110f649:	e8 12 c4 f6 ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
ffffffff8110f64e:	eb 0c                	jmp    ffffffff8110f65c &lt;del_timer_sync+0xec&gt;
ffffffff8110f650:	e8 9b 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f655:	e8 96 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f65a:	f3 90                	pause  
ffffffff8110f65c:	48 89 df             	mov    %rbx,%rdi
ffffffff8110f65f:	e8 4c fe ff ff       	callq  ffffffff8110f4b0 &lt;try_to_del_timer_sync&gt;
ffffffff8110f664:	85 c0                	test   %eax,%eax
ffffffff8110f666:	78 e8                	js     ffffffff8110f650 &lt;del_timer_sync+0xe0&gt;
ffffffff8110f668:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8110f66c:	5b                   	pop    %rbx
ffffffff8110f66d:	41 5e                	pop    %r14
ffffffff8110f66f:	41 5f                	pop    %r15
ffffffff8110f671:	5d                   	pop    %rbp
ffffffff8110f672:	c3                   	retq   
ffffffff8110f673:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
ffffffff8110f67a:	84 00 00 00 00 00
180585-ffffffff8109a320 &lt;mod_delayed_work_on&gt;:
180586-ffffffff8109a320:	55                   	push   %rbp
180587-ffffffff8109a321:	48 89 e5             	mov    %rsp,%rbp
180588-ffffffff8109a324:	41 57                	push   %r15
180589-ffffffff8109a326:	41 56                	push   %r14
180590-ffffffff8109a328:	41 55                	push   %r13
180591-ffffffff8109a32a:	41 54                	push   %r12
180592-ffffffff8109a32c:	53                   	push   %rbx
180593-ffffffff8109a32d:	48 83 ec 18          	sub    $0x18,%rsp
180594-ffffffff8109a331:	49 89 ce             	mov    %rcx,%r14
180595-ffffffff8109a334:	49 89 d7             	mov    %rdx,%r15
180596-ffffffff8109a337:	48 89 f3             	mov    %rsi,%rbx
180597-ffffffff8109a33a:	41 89 fd             	mov    %edi,%r13d
180598-ffffffff8109a33d:	e8 ae c0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180599-ffffffff8109a342:	be 01 00 00 00       	mov    $0x1,%esi
180600-ffffffff8109a347:	4c 89 ff             	mov    %r15,%rdi
180601-ffffffff8109a34a:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
180602-ffffffff8109a34e:	e8 7d 00 00 00       	callq  ffffffff8109a3d0 &lt;try_to_grab_pending&gt;
180603-ffffffff8109a353:	41 89 c4             	mov    %eax,%r12d
180604-ffffffff8109a356:	41 83 fc f5          	cmp    $0xfffffff5,%r12d
180605-ffffffff8109a35a:	74 e6                	je     ffffffff8109a342 &lt;mod_delayed_work_on+0x22&gt;
180606-ffffffff8109a35c:	45 85 e4             	test   %r12d,%r12d
180607-ffffffff8109a35f:	78 4f                	js     ffffffff8109a3b0 &lt;mod_delayed_work_on+0x90&gt;
180608-ffffffff8109a361:	44 89 ef             	mov    %r13d,%edi
180609-ffffffff8109a364:	48 89 de             	mov    %rbx,%rsi
180610-ffffffff8109a367:	4c 89 fa             	mov    %r15,%rdx
180611-ffffffff8109a36a:	4c 89 f1             	mov    %r14,%rcx
180612-ffffffff8109a36d:	e8 3e fe ff ff       	callq  ffffffff8109a1b0 &lt;__queue_delayed_work&gt;
180613-ffffffff8109a372:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
180614-ffffffff8109a376:	e8 75 c0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180615-ffffffff8109a37b:	f6 c7 02             	test   $0x2,%bh
180616-ffffffff8109a37e:	75 19                	jne    ffffffff8109a399 &lt;mod_delayed_work_on+0x79&gt;
180617-ffffffff8109a380:	e8 6b c0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180618-ffffffff8109a385:	e8 66 c0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180619-ffffffff8109a38a:	48 89 5d c0          	mov    %rbx,-0x40(%rbp)
180620-ffffffff8109a38e:	ff 75 c0             	pushq  -0x40(%rbp)
180621-ffffffff8109a391:	9d                   	popfq  
180622-ffffffff8109a392:	e8 99 1d 04 00       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
180623-ffffffff8109a397:	eb 17                	jmp    ffffffff8109a3b0 &lt;mod_delayed_work_on+0x90&gt;
180624-ffffffff8109a399:	e8 a2 1d 04 00       	callq  ffffffff810dc140 &lt;trace_hardirqs_on&gt;
180625-ffffffff8109a39e:	e8 4d c0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180626-ffffffff8109a3a3:	e8 48 c0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180627-ffffffff8109a3a8:	48 89 5d c8          	mov    %rbx,-0x38(%rbp)
180628-ffffffff8109a3ac:	ff 75 c8             	pushq  -0x38(%rbp)
180629-ffffffff8109a3af:	9d                   	popfq  
180630-ffffffff8109a3b0:	45 85 e4             	test   %r12d,%r12d
180631-ffffffff8109a3b3:	0f 95 c0             	setne  %al
180632-ffffffff8109a3b6:	48 83 c4 18          	add    $0x18,%rsp
180633-ffffffff8109a3ba:	5b                   	pop    %rbx
180634-ffffffff8109a3bb:	41 5c                	pop    %r12
180635-ffffffff8109a3bd:	41 5d                	pop    %r13
180636-ffffffff8109a3bf:	41 5e                	pop    %r14
180637-ffffffff8109a3c1:	41 5f                	pop    %r15
180638-ffffffff8109a3c3:	5d                   	pop    %rbp
180639-ffffffff8109a3c4:	c3                   	retq   
180640-ffffffff8109a3c5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
180641-ffffffff8109a3cc:	00 00 00 00 
180642-
180643:ffffffff8109a3d0 &lt;try_to_grab_pending&gt;:
180644-ffffffff8109a3d0:	55                   	push   %rbp
180645-ffffffff8109a3d1:	48 89 e5             	mov    %rsp,%rbp
180646-ffffffff8109a3d4:	41 57                	push   %r15
180647-ffffffff8109a3d6:	41 56                	push   %r14
180648-ffffffff8109a3d8:	41 55                	push   %r13
180649-ffffffff8109a3da:	41 54                	push   %r12
180650-ffffffff8109a3dc:	53                   	push   %rbx
180651-ffffffff8109a3dd:	48 83 ec 48          	sub    $0x48,%rsp
180652-ffffffff8109a3e1:	49 89 d5             	mov    %rdx,%r13
180653-ffffffff8109a3e4:	41 89 f6             	mov    %esi,%r14d
180654-ffffffff8109a3e7:	49 89 fc             	mov    %rdi,%r12
180655-ffffffff8109a3ea:	e8 01 c0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180656-ffffffff8109a3ef:	e8 fc bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180657-ffffffff8109a3f4:	e8 f7 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180658-ffffffff8109a3f9:	e8 f2 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180659-ffffffff8109a3fe:	9c                   	pushfq 
180660-ffffffff8109a3ff:	8f 45 d0             	popq   -0x30(%rbp)
180661-ffffffff8109a402:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
180662-ffffffff8109a406:	e8 e5 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180663-ffffffff8109a40b:	e8 e0 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180664-ffffffff8109a410:	fa                   	cli    
180665-ffffffff8109a411:	49 89 5d 00          	mov    %rbx,0x0(%r13)
180666-ffffffff8109a415:	e8 16 1d 04 00       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
180667-ffffffff8109a41a:	45 84 f6             	test   %r14b,%r14b
180668-ffffffff8109a41d:	74 1e                	je     ffffffff8109a43d &lt;try_to_grab_pending+0x6d&gt;
180669-ffffffff8109a41f:	e8 cc bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180670-ffffffff8109a424:	49 8d 7c 24 40       	lea    0x40(%r12),%rdi
180671-ffffffff8109a429:	e8 c2 4f 07 00       	callq  ffffffff8110f3f0 &lt;del_timer&gt;
180672-ffffffff8109a42e:	89 c1                	mov    %eax,%ecx
180673-ffffffff8109a430:	b8 01 00 00 00       	mov    $0x1,%eax
180674-ffffffff8109a435:	85 c9                	test   %ecx,%ecx
180675-ffffffff8109a437:	0f 85 e6 02 00 00    	jne    ffffffff8109a723 &lt;try_to_grab_pending+0x353&gt;
180676-ffffffff8109a43d:	e8 ae bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180677-ffffffff8109a442:	f0 41 0f ba 2c 24 00 	lock btsl $0x0,(%r12)
180678-ffffffff8109a449:	0f 92 45 d0          	setb   -0x30(%rbp)
180679-ffffffff8109a44d:	31 c0                	xor    %eax,%eax
180680-ffffffff8109a44f:	80 7d d0 00          	cmpb   $0x0,-0x30(%rbp)
180681-ffffffff8109a453:	0f 84 ca 02 00 00    	je     ffffffff8109a723 &lt;try_to_grab_pending+0x353&gt;
180682-ffffffff8109a459:	4c 89 e7             	mov    %r12,%rdi
180683-ffffffff8109a45c:	e8 ef 32 00 00       	callq  ffffffff8109d750 &lt;get_work_pool&gt;
180684-ffffffff8109a461:	48 89 c3             	mov    %rax,%rbx
180685-ffffffff8109a464:	48 85 db             	test   %rbx,%rbx
180686-ffffffff8109a467:	74 47                	je     ffffffff8109a4b0 &lt;try_to_grab_pending+0xe0&gt;
180687-ffffffff8109a469:	e8 82 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180688-ffffffff8109a46e:	48 89 df             	mov    %rbx,%rdi
180689-ffffffff8109a471:	e8 fa 8b 87 00       	callq  ffffffff81913070 &lt;_raw_spin_lock&gt;
180690-ffffffff8109a476:	e8 75 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180691-ffffffff8109a47b:	e8 70 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180692-ffffffff8109a480:	e8 6b bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180693-ffffffff8109a485:	e8 66 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180694-ffffffff8109a48a:	49 8b 04 24          	mov    (%r12),%rax
180695-ffffffff8109a48e:	a8 04                	test   $0x4,%al
180696-ffffffff8109a490:	74 11                	je     ffffffff8109a4a3 &lt;try_to_grab_pending+0xd3&gt;
180697-ffffffff8109a492:	48 25 00 ff ff ff    	and    $0xffffffffffffff00,%rax
180698-ffffffff8109a498:	74 09                	je     ffffffff8109a4a3 &lt;try_to_grab_pending+0xd3&gt;
180699-ffffffff8109a49a:	48 39 18             	cmp    %rbx,(%rax)
180700-ffffffff8109a49d:	0f 84 93 00 00 00    	je     ffffffff8109a536 &lt;try_to_grab_pending+0x166&gt;
180701-ffffffff8109a4a3:	e8 48 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180702-ffffffff8109a4a8:	48 89 df             	mov    %rbx,%rdi
180703-ffffffff8109a4ab:	e8 60 8d 87 00       	callq  ffffffff81913210 &lt;_raw_spin_unlock&gt;
180704-ffffffff8109a4b0:	41 8b 5d 00          	mov    0x0(%r13),%ebx
180705-ffffffff8109a4b4:	e8 37 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180706-ffffffff8109a4b9:	f6 c7 02             	test   $0x2,%bh
180707-ffffffff8109a4bc:	75 1d                	jne    ffffffff8109a4db &lt;try_to_grab_pending+0x10b&gt;
180708-ffffffff8109a4be:	49 8b 5d 00          	mov    0x0(%r13),%rbx
180709-ffffffff8109a4c2:	e8 29 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180710-ffffffff8109a4c7:	e8 24 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180711-ffffffff8109a4cc:	48 89 5d c0          	mov    %rbx,-0x40(%rbp)
180712-ffffffff8109a4d0:	ff 75 c0             	pushq  -0x40(%rbp)
180713-ffffffff8109a4d3:	9d                   	popfq  
180714-ffffffff8109a4d4:	e8 57 1c 04 00       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
180715-ffffffff8109a4d9:	eb 1b                	jmp    ffffffff8109a4f6 &lt;try_to_grab_pending+0x126&gt;
180716-ffffffff8109a4db:	e8 60 1c 04 00       	callq  ffffffff810dc140 &lt;trace_hardirqs_on&gt;
180717-ffffffff8109a4e0:	49 8b 5d 00          	mov    0x0(%r13),%rbx
180718-ffffffff8109a4e4:	e8 07 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180719-ffffffff8109a4e9:	e8 02 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180720-ffffffff8109a4ee:	48 89 5d c8          	mov    %rbx,-0x38(%rbp)
180721-ffffffff8109a4f2:	ff 75 c8             	pushq  -0x38(%rbp)
180722-ffffffff8109a4f5:	9d                   	popfq  
180723-ffffffff8109a4f6:	e8 f5 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180724-ffffffff8109a4fb:	e8 f0 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180725-ffffffff8109a500:	e8 eb be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180726-ffffffff8109a505:	e8 e6 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180727-ffffffff8109a50a:	49 8b 0c 24          	mov    (%r12),%rcx
180728-ffffffff8109a50e:	83 e1 14             	and    $0x14,%ecx
180729-ffffffff8109a511:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
180730-ffffffff8109a516:	48 83 f9 10          	cmp    $0x10,%rcx
180731-ffffffff8109a51a:	0f 84 03 02 00 00    	je     ffffffff8109a723 &lt;try_to_grab_pending+0x353&gt;
180732-ffffffff8109a520:	e8 cb be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180733-ffffffff8109a525:	e8 c6 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180734-ffffffff8109a52a:	f3 90                	pause  
180735-ffffffff8109a52c:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
180736-ffffffff8109a531:	e9 ed 01 00 00       	jmpq   ffffffff8109a723 &lt;try_to_grab_pending+0x353&gt;
180737-ffffffff8109a536:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
180738-ffffffff8109a53a:	e8 b1 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180739-ffffffff8109a53f:	41 f6 04 24 02       	testb  $0x2,(%r12)
180740-ffffffff8109a544:	75 0a                	jne    ffffffff8109a550 &lt;try_to_grab_pending+0x180&gt;
180741-ffffffff8109a546:	4d 8d 6c 24 08       	lea    0x8(%r12),%r13
180742-ffffffff8109a54b:	e9 3a 01 00 00       	jmpq   ffffffff8109a68a &lt;try_to_grab_pending+0x2ba&gt;
180743-ffffffff8109a550:	48 89 5d a0          	mov    %rbx,-0x60(%rbp)
180744-ffffffff8109a554:	e8 97 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180745-ffffffff8109a559:	e8 92 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180746-ffffffff8109a55e:	e8 8d be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180747-ffffffff8109a563:	e8 88 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180748-ffffffff8109a568:	e8 83 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180749-ffffffff8109a56d:	49 8b 04 24          	mov    (%r12),%rax
180750-ffffffff8109a571:	48 89 c3             	mov    %rax,%rbx
180751-ffffffff8109a574:	48 c1 e3 3d          	shl    $0x3d,%rbx
180752-ffffffff8109a578:	48 c1 fb 3f          	sar    $0x3f,%rbx
180753-ffffffff8109a57c:	48 21 c3             	and    %rax,%rbx
180754-ffffffff8109a57f:	48 81 e3 00 ff ff ff 	and    $0xffffffffffffff00,%rbx
180755-ffffffff8109a586:	48 89 5d 98          	mov    %rbx,-0x68(%rbp)
180756-ffffffff8109a58a:	4c 89 e7             	mov    %r12,%rdi
180757-ffffffff8109a58d:	e8 ee 48 00 00       	callq  ffffffff8109ee80 &lt;trace_workqueue_activate_work&gt;
180758-ffffffff8109a592:	4c 8b 2b             	mov    (%rbx),%r13
180759-ffffffff8109a595:	49 8d 45 48          	lea    0x48(%r13),%rax
180760-ffffffff8109a599:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
180761-ffffffff8109a59d:	e8 4e be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180762-ffffffff8109a5a2:	49 8d 44 24 08       	lea    0x8(%r12),%rax
180763-ffffffff8109a5a7:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
180764-ffffffff8109a5ab:	49 8b 5c 24 08       	mov    0x8(%r12),%rbx
180765-ffffffff8109a5b0:	e8 3b be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180766-ffffffff8109a5b5:	e8 36 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180767-ffffffff8109a5ba:	4d 8b 7c 24 08       	mov    0x8(%r12),%r15
180768-ffffffff8109a5bf:	4d 8b 74 24 10       	mov    0x10(%r12),%r14
180769-ffffffff8109a5c4:	e8 27 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180770-ffffffff8109a5c9:	4d 89 77 08          	mov    %r14,0x8(%r15)
180771-ffffffff8109a5cd:	e8 1e be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180772-ffffffff8109a5d2:	4d 89 3e             	mov    %r15,(%r14)
180773-ffffffff8109a5d5:	e8 16 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180774-ffffffff8109a5da:	4d 8b 75 50          	mov    0x50(%r13),%r14
180775-ffffffff8109a5de:	e8 0d be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180776-ffffffff8109a5e3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
180777-ffffffff8109a5e7:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
180778-ffffffff8109a5eb:	49 89 4d 50          	mov    %rcx,0x50(%r13)
180779-ffffffff8109a5ef:	49 89 44 24 08       	mov    %rax,0x8(%r12)
180780-ffffffff8109a5f4:	4d 89 74 24 10       	mov    %r14,0x10(%r12)
180781-ffffffff8109a5f9:	49 89 0e             	mov    %rcx,(%r14)
180782-ffffffff8109a5fc:	41 f6 04 24 08       	testb  $0x8,(%r12)
180783-ffffffff8109a601:	4c 89 65 90          	mov    %r12,-0x70(%rbp)
180784-ffffffff8109a605:	74 65                	je     ffffffff8109a66c &lt;try_to_grab_pending+0x29c&gt;
180785-ffffffff8109a607:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
180786-ffffffff8109a60e:	00 00 
180787-ffffffff8109a610:	48 8b 0b             	mov    (%rbx),%rcx
180788-ffffffff8109a613:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
180789-ffffffff8109a617:	49 89 c6             	mov    %rax,%r14
180790-ffffffff8109a61a:	e8 d1 bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180791-ffffffff8109a61f:	e8 cc bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180792-ffffffff8109a624:	4c 8b 3b             	mov    (%rbx),%r15
180793-ffffffff8109a627:	4d 89 ec             	mov    %r13,%r12
180794-ffffffff8109a62a:	4c 8b 6b 08          	mov    0x8(%rbx),%r13
180795-ffffffff8109a62e:	e8 bd bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180796-ffffffff8109a633:	4d 89 6f 08          	mov    %r13,0x8(%r15)
180797-ffffffff8109a637:	e8 b4 bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180798-ffffffff8109a63c:	4d 89 7d 00          	mov    %r15,0x0(%r13)
180799-ffffffff8109a640:	4d 89 e5             	mov    %r12,%r13
180800-ffffffff8109a643:	e8 a8 bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180801-ffffffff8109a648:	4d 8b 7d 50          	mov    0x50(%r13),%r15
180802-ffffffff8109a64c:	e8 9f bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180803-ffffffff8109a651:	4c 89 f0             	mov    %r14,%rax
180804-ffffffff8109a654:	49 89 5d 50          	mov    %rbx,0x50(%r13)
180805-ffffffff8109a658:	48 89 03             	mov    %rax,(%rbx)
180806-ffffffff8109a65b:	4c 89 7b 08          	mov    %r15,0x8(%rbx)
180807-ffffffff8109a65f:	49 89 1f             	mov    %rbx,(%r15)
180808-ffffffff8109a662:	f6 43 f8 08          	testb  $0x8,-0x8(%rbx)
180809-ffffffff8109a666:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
180810-ffffffff8109a66a:	75 a4                	jne    ffffffff8109a610 &lt;try_to_grab_pending+0x240&gt;
180811-ffffffff8109a66c:	e8 7f bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180812-ffffffff8109a671:	4c 8b 65 90          	mov    -0x70(%rbp),%r12
180813-ffffffff8109a675:	41 0f ba 34 24 01    	btrl   $0x1,(%r12)
180814-ffffffff8109a67b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
180815-ffffffff8109a67f:	ff 40 58             	incl   0x58(%rax)
180816-ffffffff8109a682:	48 8b 5d a0          	mov    -0x60(%rbp),%rbx
180817-ffffffff8109a686:	4c 8b 6d a8          	mov    -0x58(%rbp),%r13
180818-ffffffff8109a68a:	e8 61 bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180819-ffffffff8109a68f:	e8 5c bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180820-ffffffff8109a694:	4d 8b 74 24 08       	mov    0x8(%r12),%r14
180821-ffffffff8109a699:	4d 8b 7c 24 10       	mov    0x10(%r12),%r15
180822-ffffffff8109a69e:	e8 4d bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180823-ffffffff8109a6a3:	4d 89 7e 08          	mov    %r15,0x8(%r14)
180824-ffffffff8109a6a7:	e8 44 bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180825-ffffffff8109a6ac:	4d 89 37             	mov    %r14,(%r15)
180826-ffffffff8109a6af:	e8 3c bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180827-ffffffff8109a6b4:	4d 89 6c 24 08       	mov    %r13,0x8(%r12)
180828-ffffffff8109a6b9:	4d 89 6c 24 10       	mov    %r13,0x10(%r12)
180829-ffffffff8109a6be:	e8 2d bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180830-ffffffff8109a6c3:	41 8b 34 24          	mov    (%r12),%esi
180831-ffffffff8109a6c7:	c1 ee 04             	shr    $0x4,%esi
180832-ffffffff8109a6ca:	83 e6 0f             	and    $0xf,%esi
180833-ffffffff8109a6cd:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
180834-ffffffff8109a6d1:	e8 ba 4a 00 00       	callq  ffffffff8109f190 &lt;pwq_dec_nr_in_flight&gt;
180835-ffffffff8109a6d6:	4c 63 73 40          	movslq 0x40(%rbx),%r14
180836-ffffffff8109a6da:	e8 11 bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180837-ffffffff8109a6df:	49 c1 e6 05          	shl    $0x5,%r14
180838-ffffffff8109a6e3:	e8 08 bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180839-ffffffff8109a6e8:	e8 03 bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180840-ffffffff8109a6ed:	49 8b 04 24          	mov    (%r12),%rax
180841-ffffffff8109a6f1:	a8 01                	test   $0x1,%al
180842-ffffffff8109a6f3:	74 3d                	je     ffffffff8109a732 &lt;try_to_grab_pending+0x362&gt;
180843-ffffffff8109a6f5:	e8 f6 bc 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180844-ffffffff8109a6fa:	49 83 ce 01          	or     $0x1,%r14
180845-ffffffff8109a6fe:	e8 ed bc 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180846-ffffffff8109a703:	e8 e8 bc 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180847-ffffffff8109a708:	e8 e3 bc 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180848-ffffffff8109a70d:	4d 89 34 24          	mov    %r14,(%r12)
180849-ffffffff8109a711:	e8 da bc 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180850-ffffffff8109a716:	48 89 df             	mov    %rbx,%rdi
180851-ffffffff8109a719:	e8 f2 8a 87 00       	callq  ffffffff81913210 &lt;_raw_spin_unlock&gt;
180852-ffffffff8109a71e:	b8 01 00 00 00       	mov    $0x1,%eax
180853-ffffffff8109a723:	48 83 c4 48          	add    $0x48,%rsp
180854-ffffffff8109a727:	5b                   	pop    %rbx
180855-ffffffff8109a728:	41 5c                	pop    %r12
180856-ffffffff8109a72a:	41 5d                	pop    %r13
180857-ffffffff8109a72c:	41 5e                	pop    %r14
180858-ffffffff8109a72e:	41 5f                	pop    %r15
180859-ffffffff8109a730:	5d                   	pop    %rbp
180860-ffffffff8109a731:	c3                   	retq   
180861-ffffffff8109a732:	8a 04 25 47 d6 23 82 	mov    0xffffffff8223d647,%al
180862-ffffffff8109a739:	24 01                	and    $0x1,%al
180863-ffffffff8109a73b:	75 b8                	jne    ffffffff8109a6f5 &lt;try_to_grab_pending+0x325&gt;
180864-ffffffff8109a73d:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
180865-ffffffff8109a744:	be 65 02 00 00       	mov    $0x265,%esi
180866-ffffffff8109a749:	e8 12 13 fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
180867-ffffffff8109a74e:	c6 04 25 47 d6 23 82 	movb   $0x1,0xffffffff8223d647
180868-ffffffff8109a755:	01 
180869-ffffffff8109a756:	eb 9d                	jmp    ffffffff8109a6f5 &lt;try_to_grab_pending+0x325&gt;
180870-ffffffff8109a758:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
180871-ffffffff8109a75f:	00 
180872-
180873-ffffffff8109a760 &lt;flush_workqueue&gt;:
180874-ffffffff8109a760:	55                   	push   %rbp
180875-ffffffff8109a761:	48 89 e5             	mov    %rsp,%rbp
180876-ffffffff8109a764:	41 57                	push   %r15
180877-ffffffff8109a766:	41 56                	push   %r14
180878-ffffffff8109a768:	41 55                	push   %r13
180879-ffffffff8109a76a:	41 54                	push   %r12
180880-ffffffff8109a76c:	53                   	push   %rbx
180881-ffffffff8109a76d:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
180882-ffffffff8109a774:	49 89 ff             	mov    %rdi,%r15
180883-ffffffff8109a777:	e8 74 bc 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180884-ffffffff8109a77c:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
180885-ffffffff8109a783:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
180886-ffffffff8109a78a:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
180887-ffffffff8109a791:	c7 45 80 ff ff ff ff 	movl   $0xffffffff,-0x80(%rbp)
180888-ffffffff8109a798:	e8 53 bc 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180889-ffffffff8109a79d:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%rbp)
180890-ffffffff8109a7a4:	48 8d 7d 90          	lea    -0x70(%rbp),%rdi
180891-ffffffff8109a7a8:	48 c7 c6 2f 56 c4 81 	mov    $0xffffffff81c4562f,%rsi
180892-ffffffff8109a7af:	48 c7 c2 4d d6 23 82 	mov    $0xffffffff8223d64d,%rdx
180893-ffffffff8109a7b6:	e8 75 8a 03 00       	callq  ffffffff810d3230 &lt;__init_waitqueue_head&gt;
180894-ffffffff8109a7bb:	49 8d 9f 10 01 00 00 	lea    0x110(%r15),%rbx
180895-ffffffff8109a7c2:	48 c7 04 24 c2 a7 09 	movq   $0xffffffff8109a7c2,(%rsp)
180896-ffffffff8109a7c9:	81 
180897-ffffffff8109a7ca:	31 f6                	xor    %esi,%esi
180898-ffffffff8109a7cc:	31 d2                	xor    %edx,%edx
180899-ffffffff8109a7ce:	31 c9                	xor    %ecx,%ecx
180900-ffffffff8109a7d0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
180901-ffffffff8109a7d6:	45 31 c9             	xor    %r9d,%r9d
180902-ffffffff8109a7d9:	48 89 df             	mov    %rbx,%rdi
180903-ffffffff8109a7dc:	e8 af 33 04 00       	callq  ffffffff810ddb90 &lt;lock_acquire&gt;
180904-ffffffff8109a7e1:	be 01 00 00 00       	mov    $0x1,%esi
180905-ffffffff8109a7e6:	48 c7 c2 e1 a7 09 81 	mov    $0xffffffff8109a7e1,%rdx
180906-ffffffff8109a7ed:	48 89 df             	mov    %rbx,%rdi
180907-ffffffff8109a7f0:	e8 7b 56 04 00       	callq  ffffffff810dfe70 &lt;lock_release&gt;
180908-ffffffff8109a7f5:	49 8d 7f 20          	lea    0x20(%r15),%rdi
180909-ffffffff8109a7f9:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
180910-ffffffff8109a800:	31 f6                	xor    %esi,%esi
180911-ffffffff8109a802:	e8 09 56 87 00       	callq  ffffffff8190fe10 &lt;mutex_lock_nested&gt;
180912-ffffffff8109a807:	41 8b 9f a0 00 00 00 	mov    0xa0(%r15),%ebx
180913-ffffffff8109a80e:	e8 dd bb 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180914-ffffffff8109a813:	8d 43 01             	lea    0x1(%rbx),%eax
180915-ffffffff8109a816:	48 98                	cltq   
180916-ffffffff8109a818:	48 69 c0 89 88 88 88 	imul   $0xffffffff88888889,%rax,%rax
180917-ffffffff8109a81f:	48 c1 e8 20          	shr    $0x20,%rax
180918-ffffffff8109a823:	8d 44 18 01          	lea    0x1(%rax,%rbx,1),%eax
180919-ffffffff8109a827:	89 c1                	mov    %eax,%ecx
180920-ffffffff8109a829:	c1 e9 1f             	shr    $0x1f,%ecx
180921-ffffffff8109a82c:	c1 f8 03             	sar    $0x3,%eax
180922-ffffffff8109a82f:	01 c8                	add    %ecx,%eax
180923-ffffffff8109a831:	8d 04 80             	lea    (%rax,%rax,4),%eax
180924-ffffffff8109a834:	8d 04 40             	lea    (%rax,%rax,2),%eax
180925-ffffffff8109a837:	f7 d8                	neg    %eax
180926-ffffffff8109a839:	44 8d 74 03 01       	lea    0x1(%rbx,%rax,1),%r14d
180927-ffffffff8109a83e:	41 8b 9f a4 00 00 00 	mov    0xa4(%r15),%ebx
180928-ffffffff8109a845:	4d 8d a7 c8 00 00 00 	lea    0xc8(%r15),%r12
180929-ffffffff8109a84c:	e8 9f bb 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180930-ffffffff8109a851:	41 39 de             	cmp    %ebx,%r14d
180931-ffffffff8109a854:	75 3e                	jne    ffffffff8109a894 &lt;flush_workqueue+0x134&gt;
180932-ffffffff8109a856:	49 8b 9f d0 00 00 00 	mov    0xd0(%r15),%rbx
180933-ffffffff8109a85d:	e8 8e bb 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180934-ffffffff8109a862:	4c 8d ad 70 ff ff ff 	lea    -0x90(%rbp),%r13
180935-ffffffff8109a869:	4d 89 af d0 00 00 00 	mov    %r13,0xd0(%r15)
180936-ffffffff8109a870:	4c 89 a5 70 ff ff ff 	mov    %r12,-0x90(%rbp)
180937-ffffffff8109a877:	4c 89 a5 50 ff ff ff 	mov    %r12,-0xb0(%rbp)
180938-ffffffff8109a87e:	48 89 9d 78 ff ff ff 	mov    %rbx,-0x88(%rbp)
180939-ffffffff8109a885:	4c 89 2b             	mov    %r13,(%rbx)
180940-ffffffff8109a888:	4d 8d a7 b0 00 00 00 	lea    0xb0(%r15),%r12
180941-ffffffff8109a88f:	e9 d4 00 00 00       	jmpq   ffffffff8109a968 &lt;flush_workqueue+0x208&gt;
180942-ffffffff8109a894:	4d 39 24 24          	cmp    %r12,(%r12)
180943-ffffffff8109a898:	0f 85 b2 04 00 00    	jne    ffffffff8109ad50 &lt;flush_workqueue+0x5f0&gt;
180944-ffffffff8109a89e:	49 8b b7 a0 00 00 00 	mov    0xa0(%r15),%rsi
180945-ffffffff8109a8a5:	89 75 80             	mov    %esi,-0x80(%rbp)
180946-ffffffff8109a8a8:	45 89 b7 a0 00 00 00 	mov    %r14d,0xa0(%r15)
180947-ffffffff8109a8af:	49 8d 87 b0 00 00 00 	lea    0xb0(%r15),%rax
180948-ffffffff8109a8b6:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
180949-ffffffff8109a8bd:	48 89 f0             	mov    %rsi,%rax
180950-ffffffff8109a8c0:	48 c1 e8 20          	shr    $0x20,%rax
180951-ffffffff8109a8c4:	49 83 bf b0 00 00 00 	cmpq   $0x0,0xb0(%r15)
180952-ffffffff8109a8cb:	00 
180953-ffffffff8109a8cc:	74 63                	je     ffffffff8109a931 &lt;flush_workqueue+0x1d1&gt;
180954-ffffffff8109a8ce:	4c 89 a5 50 ff ff ff 	mov    %r12,-0xb0(%rbp)
180955-ffffffff8109a8d5:	39 f0                	cmp    %esi,%eax
180956-ffffffff8109a8d7:	0f 84 a0 04 00 00    	je     ffffffff8109ad7d &lt;flush_workqueue+0x61d&gt;
180957-ffffffff8109a8dd:	4d 8d a7 b8 00 00 00 	lea    0xb8(%r15),%r12
180958-ffffffff8109a8e4:	e8 07 bb 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180959-ffffffff8109a8e9:	49 8b 9f c0 00 00 00 	mov    0xc0(%r15),%rbx
180960-ffffffff8109a8f0:	e8 fb ba 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180961-ffffffff8109a8f5:	4c 8d ad 70 ff ff ff 	lea    -0x90(%rbp),%r13
180962-ffffffff8109a8fc:	4d 89 af c0 00 00 00 	mov    %r13,0xc0(%r15)
180963-ffffffff8109a903:	4c 89 a5 70 ff ff ff 	mov    %r12,-0x90(%rbp)
180964-ffffffff8109a90a:	48 89 9d 78 ff ff ff 	mov    %rbx,-0x88(%rbp)
180965-ffffffff8109a911:	4c 89 2b             	mov    %r13,(%rbx)
180966-ffffffff8109a914:	41 8b 97 a0 00 00 00 	mov    0xa0(%r15),%edx
180967-ffffffff8109a91b:	be ff ff ff ff       	mov    $0xffffffff,%esi
180968-ffffffff8109a920:	4c 89 ff             	mov    %r15,%rdi
180969-ffffffff8109a923:	e8 58 05 00 00       	callq  ffffffff8109ae80 &lt;flush_workqueue_prep_pwqs&gt;
180970-ffffffff8109a928:	4c 8b a5 58 ff ff ff 	mov    -0xa8(%rbp),%r12
180971-ffffffff8109a92f:	eb 37                	jmp    ffffffff8109a968 &lt;flush_workqueue+0x208&gt;
180972-ffffffff8109a931:	4c 89 a5 50 ff ff ff 	mov    %r12,-0xb0(%rbp)
180973-ffffffff8109a938:	39 f0                	cmp    %esi,%eax
180974-ffffffff8109a93a:	44 89 f2             	mov    %r14d,%edx
180975-ffffffff8109a93d:	0f 85 67 04 00 00    	jne    ffffffff8109adaa &lt;flush_workqueue+0x64a&gt;
180976-ffffffff8109a943:	4c 8d ad 70 ff ff ff 	lea    -0x90(%rbp),%r13
180977-ffffffff8109a94a:	4d 89 af b0 00 00 00 	mov    %r13,0xb0(%r15)
180978-ffffffff8109a951:	4c 89 ff             	mov    %r15,%rdi
180979-ffffffff8109a954:	e8 27 05 00 00       	callq  ffffffff8109ae80 &lt;flush_workqueue_prep_pwqs&gt;
180980-ffffffff8109a959:	84 c0                	test   %al,%al
180981-ffffffff8109a95b:	4c 8b a5 58 ff ff ff 	mov    -0xa8(%rbp),%r12
180982-ffffffff8109a962:	0f 84 ae 03 00 00    	je     ffffffff8109ad16 &lt;flush_workqueue+0x5b6&gt;
180983-ffffffff8109a968:	48 8b 9d 48 ff ff ff 	mov    -0xb8(%rbp),%rbx
180984-ffffffff8109a96f:	48 89 df             	mov    %rbx,%rdi
180985-ffffffff8109a972:	e8 19 52 87 00       	callq  ffffffff8190fb90 &lt;mutex_unlock&gt;
180986-ffffffff8109a977:	48 8d 7d 88          	lea    -0x78(%rbp),%rdi
180987-ffffffff8109a97b:	e8 20 4c 87 00       	callq  ffffffff8190f5a0 &lt;wait_for_completion&gt;
180988-ffffffff8109a980:	4d 39 2c 24          	cmp    %r13,(%r12)
180989-ffffffff8109a984:	0f 85 b4 03 00 00    	jne    ffffffff8109ad3e &lt;flush_workqueue+0x5de&gt;
180990-ffffffff8109a98a:	31 f6                	xor    %esi,%esi
180991-ffffffff8109a98c:	48 89 df             	mov    %rbx,%rdi
180992-ffffffff8109a98f:	e8 7c 54 87 00       	callq  ffffffff8190fe10 &lt;mutex_lock_nested&gt;
180993-ffffffff8109a994:	4d 39 2c 24          	cmp    %r13,(%r12)
180994-ffffffff8109a998:	0f 85 94 03 00 00    	jne    ffffffff8109ad32 &lt;flush_workqueue+0x5d2&gt;
180995-ffffffff8109a99e:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
180996-ffffffff8109a9a5:	00 
180997-ffffffff8109a9a6:	e8 45 ba 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
180998-ffffffff8109a9ab:	4c 39 ad 70 ff ff ff 	cmp    %r13,-0x90(%rbp)
180999-ffffffff8109a9b2:	0f 85 33 04 00 00    	jne    ffffffff8109adeb &lt;flush_workqueue+0x68b&gt;
181000-ffffffff8109a9b8:	4c 89 a5 58 ff ff ff 	mov    %r12,-0xa8(%rbp)
181001-ffffffff8109a9bf:	41 8b 87 a4 00 00 00 	mov    0xa4(%r15),%eax
181002-ffffffff8109a9c6:	3b 45 80             	cmp    -0x80(%rbp),%eax
181003-ffffffff8109a9c9:	0f 85 49 04 00 00    	jne    ffffffff8109ae18 &lt;flush_workqueue+0x6b8&gt;
181004-ffffffff8109a9cf:	49 8d 87 b8 00 00 00 	lea    0xb8(%r15),%rax
181005-ffffffff8109a9d6:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
181006-ffffffff8109a9dd:	eb 08                	jmp    ffffffff8109a9e7 &lt;flush_workqueue+0x287&gt;
181007-ffffffff8109a9df:	90                   	nop
181008-ffffffff8109a9e0:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
181009-ffffffff8109a9e7:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
181010-ffffffff8109a9ee:	4c 8b 20             	mov    (%rax),%r12
181011-ffffffff8109a9f1:	49 39 c4             	cmp    %rax,%r12
181012-ffffffff8109a9f4:	74 7d                	je     ffffffff8109aa73 &lt;flush_workqueue+0x313&gt;
181013-ffffffff8109a9f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
181014-ffffffff8109a9fd:	00 00 00 
181015-ffffffff8109aa00:	41 8b 44 24 10       	mov    0x10(%r12),%eax
181016-ffffffff8109aa05:	41 3b 87 a4 00 00 00 	cmp    0xa4(%r15),%eax
181017-ffffffff8109aa0c:	75 62                	jne    ffffffff8109aa70 &lt;flush_workqueue+0x310&gt;
181018-ffffffff8109aa0e:	49 8b 1c 24          	mov    (%r12),%rbx
181019-ffffffff8109aa12:	e8 d9 b9 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181020-ffffffff8109aa17:	e8 d4 b9 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181021-ffffffff8109aa1c:	4d 8b 2c 24          	mov    (%r12),%r13
181022-ffffffff8109aa20:	4d 8b 74 24 08       	mov    0x8(%r12),%r14
181023-ffffffff8109aa25:	e8 c6 b9 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181024-ffffffff8109aa2a:	4d 89 75 08          	mov    %r14,0x8(%r13)
181025-ffffffff8109aa2e:	e8 bd b9 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181026-ffffffff8109aa33:	4d 89 2e             	mov    %r13,(%r14)
181027-ffffffff8109aa36:	e8 b5 b9 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181028-ffffffff8109aa3b:	4d 89 24 24          	mov    %r12,(%r12)
181029-ffffffff8109aa3f:	4d 89 64 24 08       	mov    %r12,0x8(%r12)
181030-ffffffff8109aa44:	49 83 c4 18          	add    $0x18,%r12
181031-ffffffff8109aa48:	4c 89 e7             	mov    %r12,%rdi
181032-ffffffff8109aa4b:	e8 d0 97 03 00       	callq  ffffffff810d4220 &lt;complete&gt;
181033-ffffffff8109aa50:	48 3b 9d 68 ff ff ff 	cmp    -0x98(%rbp),%rbx
181034-ffffffff8109aa57:	49 89 dc             	mov    %rbx,%r12
181035-ffffffff8109aa5a:	75 a4                	jne    ffffffff8109aa00 &lt;flush_workqueue+0x2a0&gt;
181036-ffffffff8109aa5c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
181037-ffffffff8109aa63:	49 89 dc             	mov    %rbx,%r12
181038-ffffffff8109aa66:	eb 0b                	jmp    ffffffff8109aa73 &lt;flush_workqueue+0x313&gt;
181039-ffffffff8109aa68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
181040-ffffffff8109aa6f:	00 
181041-ffffffff8109aa70:	4c 89 e0             	mov    %r12,%rax
181042-ffffffff8109aa73:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
181043-ffffffff8109aa7a:	e8 71 b9 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181044-ffffffff8109aa7f:	4c 8b ad 50 ff ff ff 	mov    -0xb0(%rbp),%r13
181045-ffffffff8109aa86:	4d 39 6d 00          	cmp    %r13,0x0(%r13)
181046-ffffffff8109aa8a:	74 46                	je     ffffffff8109aad2 &lt;flush_workqueue+0x372&gt;
181047-ffffffff8109aa8c:	41 8b 9f a0 00 00 00 	mov    0xa0(%r15),%ebx
181048-ffffffff8109aa93:	45 8b b7 a4 00 00 00 	mov    0xa4(%r15),%r14d
181049-ffffffff8109aa9a:	e8 51 b9 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181050-ffffffff8109aa9f:	8d 43 01             	lea    0x1(%rbx),%eax
181051-ffffffff8109aaa2:	48 98                	cltq   
181052-ffffffff8109aaa4:	48 69 c0 89 88 88 88 	imul   $0xffffffff88888889,%rax,%rax
181053-ffffffff8109aaab:	48 c1 e8 20          	shr    $0x20,%rax
181054-ffffffff8109aaaf:	8d 44 18 01          	lea    0x1(%rax,%rbx,1),%eax
181055-ffffffff8109aab3:	89 c1                	mov    %eax,%ecx
181056-ffffffff8109aab5:	c1 e9 1f             	shr    $0x1f,%ecx
181057-ffffffff8109aab8:	c1 f8 03             	sar    $0x3,%eax
181058-ffffffff8109aabb:	01 c8                	add    %ecx,%eax
181059-ffffffff8109aabd:	8d 04 80             	lea    (%rax,%rax,4),%eax
181060-ffffffff8109aac0:	8d 04 40             	lea    (%rax,%rax,2),%eax
181061-ffffffff8109aac3:	f7 d8                	neg    %eax
181062-ffffffff8109aac5:	8d 44 03 01          	lea    0x1(%rbx,%rax,1),%eax
181063-ffffffff8109aac9:	41 39 c6             	cmp    %eax,%r14d
181064-ffffffff8109aacc:	0f 85 17 02 00 00    	jne    ffffffff8109ace9 &lt;flush_workqueue+0x589&gt;
181065-ffffffff8109aad2:	41 8b 9f a4 00 00 00 	mov    0xa4(%r15),%ebx
181066-ffffffff8109aad9:	e8 12 b9 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181067-ffffffff8109aade:	8d 43 01             	lea    0x1(%rbx),%eax
181068-ffffffff8109aae1:	48 98                	cltq   
181069-ffffffff8109aae3:	48 69 c0 89 88 88 88 	imul   $0xffffffff88888889,%rax,%rax
181070-ffffffff8109aaea:	48 c1 e8 20          	shr    $0x20,%rax
181071-ffffffff8109aaee:	8d 44 18 01          	lea    0x1(%rax,%rbx,1),%eax
181072-ffffffff8109aaf2:	89 c1                	mov    %eax,%ecx
181073-ffffffff8109aaf4:	c1 e9 1f             	shr    $0x1f,%ecx
181074-ffffffff8109aaf7:	c1 f8 03             	sar    $0x3,%eax
181075-ffffffff8109aafa:	01 c8                	add    %ecx,%eax
181076-ffffffff8109aafc:	8d 04 80             	lea    (%rax,%rax,4),%eax
181077-ffffffff8109aaff:	8d 04 40             	lea    (%rax,%rax,2),%eax
181078-ffffffff8109ab02:	f7 d8                	neg    %eax
181079-ffffffff8109ab04:	8d 44 03 01          	lea    0x1(%rbx,%rax,1),%eax
181080-ffffffff8109ab08:	41 89 87 a4 00 00 00 	mov    %eax,0xa4(%r15)
181081-ffffffff8109ab0f:	e8 dc b8 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181082-ffffffff8109ab14:	49 8b 87 c8 00 00 00 	mov    0xc8(%r15),%rax
181083-ffffffff8109ab1b:	4c 39 e8             	cmp    %r13,%rax
181084-ffffffff8109ab1e:	0f 84 bc 00 00 00    	je     ffffffff8109abe0 &lt;flush_workqueue+0x480&gt;
181085-ffffffff8109ab24:	41 8b 9f a0 00 00 00 	mov    0xa0(%r15),%ebx
181086-ffffffff8109ab2b:	74 15                	je     ffffffff8109ab42 &lt;flush_workqueue+0x3e2&gt;
181087-ffffffff8109ab2d:	0f 1f 00             	nopl   (%rax)
181088-ffffffff8109ab30:	89 58 10             	mov    %ebx,0x10(%rax)
181089-ffffffff8109ab33:	48 8b 00             	mov    (%rax),%rax
181090-ffffffff8109ab36:	41 8b 9f a0 00 00 00 	mov    0xa0(%r15),%ebx
181091-ffffffff8109ab3d:	4c 39 e8             	cmp    %r13,%rax
181092-ffffffff8109ab40:	75 ee                	jne    ffffffff8109ab30 &lt;flush_workqueue+0x3d0&gt;
181093-ffffffff8109ab42:	e8 a9 b8 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181094-ffffffff8109ab47:	8d 43 01             	lea    0x1(%rbx),%eax
181095-ffffffff8109ab4a:	48 98                	cltq   
181096-ffffffff8109ab4c:	48 69 c8 89 88 88 88 	imul   $0xffffffff88888889,%rax,%rcx
181097-ffffffff8109ab53:	48 c1 e9 20          	shr    $0x20,%rcx
181098-ffffffff8109ab57:	8d 4c 19 01          	lea    0x1(%rcx,%rbx,1),%ecx
181099-ffffffff8109ab5b:	89 ca                	mov    %ecx,%edx
181100-ffffffff8109ab5d:	c1 ea 1f             	shr    $0x1f,%edx
181101-ffffffff8109ab60:	c1 f9 03             	sar    $0x3,%ecx
181102-ffffffff8109ab63:	01 d1                	add    %edx,%ecx
181103-ffffffff8109ab65:	8d 0c 89             	lea    (%rcx,%rcx,4),%ecx
181104-ffffffff8109ab68:	8d 0c 49             	lea    (%rcx,%rcx,2),%ecx
181105-ffffffff8109ab6b:	29 c8                	sub    %ecx,%eax
181106-ffffffff8109ab6d:	41 89 87 a0 00 00 00 	mov    %eax,0xa0(%r15)
181107-ffffffff8109ab74:	e8 77 b8 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181108-ffffffff8109ab79:	e8 72 b8 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181109-ffffffff8109ab7e:	4d 39 af c8 00 00 00 	cmp    %r13,0xc8(%r15)
181110-ffffffff8109ab85:	74 45                	je     ffffffff8109abcc &lt;flush_workqueue+0x46c&gt;
181111-ffffffff8109ab87:	49 8b 9f c0 00 00 00 	mov    0xc0(%r15),%rbx
181112-ffffffff8109ab8e:	e8 5d b8 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181113-ffffffff8109ab93:	49 8b 87 c8 00 00 00 	mov    0xc8(%r15),%rax
181114-ffffffff8109ab9a:	49 8b 8f d0 00 00 00 	mov    0xd0(%r15),%rcx
181115-ffffffff8109aba1:	48 89 58 08          	mov    %rbx,0x8(%rax)
181116-ffffffff8109aba5:	48 89 03             	mov    %rax,(%rbx)
181117-ffffffff8109aba8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
181118-ffffffff8109abaf:	48 89 01             	mov    %rax,(%rcx)
181119-ffffffff8109abb2:	49 89 8f c0 00 00 00 	mov    %rcx,0xc0(%r15)
181120-ffffffff8109abb9:	e8 32 b8 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181121-ffffffff8109abbe:	4d 89 af c8 00 00 00 	mov    %r13,0xc8(%r15)
181122-ffffffff8109abc5:	4d 89 af d0 00 00 00 	mov    %r13,0xd0(%r15)
181123-ffffffff8109abcc:	41 8b 97 a0 00 00 00 	mov    0xa0(%r15),%edx
181124-ffffffff8109abd3:	be ff ff ff ff       	mov    $0xffffffff,%esi
181125-ffffffff8109abd8:	4c 89 ff             	mov    %r15,%rdi
181126-ffffffff8109abdb:	e8 a0 02 00 00       	callq  ffffffff8109ae80 &lt;flush_workqueue_prep_pwqs&gt;
181127-ffffffff8109abe0:	e8 0b b8 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181128-ffffffff8109abe5:	41 8b 8f a4 00 00 00 	mov    0xa4(%r15),%ecx
181129-ffffffff8109abec:	49 8b 97 a0 00 00 00 	mov    0xa0(%r15),%rdx
181130-ffffffff8109abf3:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
181131-ffffffff8109abfa:	49 39 87 b8 00 00 00 	cmp    %rax,0xb8(%r15)
181132-ffffffff8109ac01:	0f 84 23 01 00 00    	je     ffffffff8109ad2a &lt;flush_workqueue+0x5ca&gt;
181133-ffffffff8109ac07:	48 89 d0             	mov    %rdx,%rax
181134-ffffffff8109ac0a:	48 c1 e8 20          	shr    $0x20,%rax
181135-ffffffff8109ac0e:	39 d1                	cmp    %edx,%ecx
181136-ffffffff8109ac10:	74 72                	je     ffffffff8109ac84 &lt;flush_workqueue+0x524&gt;
181137-ffffffff8109ac12:	4c 8b ad 60 ff ff ff 	mov    -0xa0(%rbp),%r13
181138-ffffffff8109ac19:	41 3b 44 24 10       	cmp    0x10(%r12),%eax
181139-ffffffff8109ac1e:	0f 85 98 00 00 00    	jne    ffffffff8109acbc &lt;flush_workqueue+0x55c&gt;
181140-ffffffff8109ac24:	e8 c7 b7 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181141-ffffffff8109ac29:	e8 c2 b7 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181142-ffffffff8109ac2e:	4d 8b 34 24          	mov    (%r12),%r14
181143-ffffffff8109ac32:	49 8b 5c 24 08       	mov    0x8(%r12),%rbx
181144-ffffffff8109ac37:	e8 b4 b7 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181145-ffffffff8109ac3c:	49 89 5e 08          	mov    %rbx,0x8(%r14)
181146-ffffffff8109ac40:	e8 ab b7 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181147-ffffffff8109ac45:	4c 89 33             	mov    %r14,(%rbx)
181148-ffffffff8109ac48:	e8 a3 b7 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181149-ffffffff8109ac4d:	4d 89 2c 24          	mov    %r13,(%r12)
181150-ffffffff8109ac51:	4d 89 6c 24 08       	mov    %r13,0x8(%r12)
181151-ffffffff8109ac56:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
181152-ffffffff8109ac5d:	4c 89 20             	mov    %r12,(%rax)
181153-ffffffff8109ac60:	48 89 c3             	mov    %rax,%rbx
181154-ffffffff8109ac63:	41 8b b7 a4 00 00 00 	mov    0xa4(%r15),%esi
181155-ffffffff8109ac6a:	ba ff ff ff ff       	mov    $0xffffffff,%edx
181156-ffffffff8109ac6f:	4c 89 ff             	mov    %r15,%rdi
181157-ffffffff8109ac72:	e8 09 02 00 00       	callq  ffffffff8109ae80 &lt;flush_workqueue_prep_pwqs&gt;
181158-ffffffff8109ac77:	84 c0                	test   %al,%al
181159-ffffffff8109ac79:	0f 84 61 fd ff ff    	je     ffffffff8109a9e0 &lt;flush_workqueue+0x280&gt;
181160-ffffffff8109ac7f:	e9 ae 00 00 00       	jmpq   ffffffff8109ad32 &lt;flush_workqueue+0x5d2&gt;
181161-ffffffff8109ac84:	8a 0c 25 eb d5 23 82 	mov    0xffffffff8223d5eb,%cl
181162-ffffffff8109ac8b:	80 e1 01             	and    $0x1,%cl
181163-ffffffff8109ac8e:	4c 8b ad 60 ff ff ff 	mov    -0xa0(%rbp),%r13
181164-ffffffff8109ac95:	75 82                	jne    ffffffff8109ac19 &lt;flush_workqueue+0x4b9&gt;
181165-ffffffff8109ac97:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181166-ffffffff8109ac9e:	be 24 0a 00 00       	mov    $0xa24,%esi
181167-ffffffff8109aca3:	e8 b8 0d fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
181168-ffffffff8109aca8:	c6 04 25 eb d5 23 82 	movb   $0x1,0xffffffff8223d5eb
181169-ffffffff8109acaf:	01 
181170-ffffffff8109acb0:	41 8b 87 a4 00 00 00 	mov    0xa4(%r15),%eax
181171-ffffffff8109acb7:	e9 5d ff ff ff       	jmpq   ffffffff8109ac19 &lt;flush_workqueue+0x4b9&gt;
181172-ffffffff8109acbc:	8a 04 25 ec d5 23 82 	mov    0xffffffff8223d5ec,%al
181173-ffffffff8109acc3:	24 01                	and    $0x1,%al
181174-ffffffff8109acc5:	0f 85 59 ff ff ff    	jne    ffffffff8109ac24 &lt;flush_workqueue+0x4c4&gt;
181175-ffffffff8109accb:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181176-ffffffff8109acd2:	be 25 0a 00 00       	mov    $0xa25,%esi
181177-ffffffff8109acd7:	e8 84 0d fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
181178-ffffffff8109acdc:	c6 04 25 ec d5 23 82 	movb   $0x1,0xffffffff8223d5ec
181179-ffffffff8109ace3:	01 
181180-ffffffff8109ace4:	e9 3b ff ff ff       	jmpq   ffffffff8109ac24 &lt;flush_workqueue+0x4c4&gt;
181181-ffffffff8109ace9:	8a 04 25 e9 d5 23 82 	mov    0xffffffff8223d5e9,%al
181182-ffffffff8109acf0:	24 01                	and    $0x1,%al
181183-ffffffff8109acf2:	0f 85 da fd ff ff    	jne    ffffffff8109aad2 &lt;flush_workqueue+0x372&gt;
181184-ffffffff8109acf8:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181185-ffffffff8109acff:	be 04 0a 00 00       	mov    $0xa04,%esi
181186-ffffffff8109ad04:	e8 57 0d fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
181187-ffffffff8109ad09:	c6 04 25 e9 d5 23 82 	movb   $0x1,0xffffffff8223d5e9
181188-ffffffff8109ad10:	01 
181189-ffffffff8109ad11:	e9 bc fd ff ff       	jmpq   ffffffff8109aad2 &lt;flush_workqueue+0x372&gt;
181190-ffffffff8109ad16:	45 89 b7 a4 00 00 00 	mov    %r14d,0xa4(%r15)
181191-ffffffff8109ad1d:	49 c7 87 b0 00 00 00 	movq   $0x0,0xb0(%r15)
181192-ffffffff8109ad24:	00 00 00 00 
181193-ffffffff8109ad28:	eb 08                	jmp    ffffffff8109ad32 &lt;flush_workqueue+0x5d2&gt;
181194-ffffffff8109ad2a:	39 d1                	cmp    %edx,%ecx
181195-ffffffff8109ad2c:	0f 85 13 01 00 00    	jne    ffffffff8109ae45 &lt;flush_workqueue+0x6e5&gt;
181196-ffffffff8109ad32:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
181197-ffffffff8109ad39:	e8 52 4e 87 00       	callq  ffffffff8190fb90 &lt;mutex_unlock&gt;
181198-ffffffff8109ad3e:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
181199-ffffffff8109ad45:	5b                   	pop    %rbx
181200-ffffffff8109ad46:	41 5c                	pop    %r12
181201-ffffffff8109ad48:	41 5d                	pop    %r13
181202-ffffffff8109ad4a:	41 5e                	pop    %r14
181203-ffffffff8109ad4c:	41 5f                	pop    %r15
181204-ffffffff8109ad4e:	5d                   	pop    %rbp
181205-ffffffff8109ad4f:	c3                   	retq   
181206-ffffffff8109ad50:	8a 04 25 e4 d5 23 82 	mov    0xffffffff8223d5e4,%al
181207-ffffffff8109ad57:	24 01                	and    $0x1,%al
181208-ffffffff8109ad59:	0f 85 3f fb ff ff    	jne    ffffffff8109a89e &lt;flush_workqueue+0x13e&gt;
181209-ffffffff8109ad5f:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181210-ffffffff8109ad66:	be c0 09 00 00       	mov    $0x9c0,%esi
181211-ffffffff8109ad6b:	e8 f0 0c fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
181212-ffffffff8109ad70:	c6 04 25 e4 d5 23 82 	movb   $0x1,0xffffffff8223d5e4
181213-ffffffff8109ad77:	01 
181214-ffffffff8109ad78:	e9 21 fb ff ff       	jmpq   ffffffff8109a89e &lt;flush_workqueue+0x13e&gt;
181215-ffffffff8109ad7d:	8a 04 25 e6 d5 23 82 	mov    0xffffffff8223d5e6,%al
181216-ffffffff8109ad84:	24 01                	and    $0x1,%al
181217-ffffffff8109ad86:	0f 85 51 fb ff ff    	jne    ffffffff8109a8dd &lt;flush_workqueue+0x17d&gt;
181218-ffffffff8109ad8c:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181219-ffffffff8109ad93:	be d3 09 00 00       	mov    $0x9d3,%esi
181220-ffffffff8109ad98:	e8 c3 0c fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
181221-ffffffff8109ad9d:	c6 04 25 e6 d5 23 82 	movb   $0x1,0xffffffff8223d5e6
181222-ffffffff8109ada4:	01 
181223-ffffffff8109ada5:	e9 33 fb ff ff       	jmpq   ffffffff8109a8dd &lt;flush_workqueue+0x17d&gt;
181224-ffffffff8109adaa:	8a 0c 25 e5 d5 23 82 	mov    0xffffffff8223d5e5,%cl
181225-ffffffff8109adb1:	80 e1 01             	and    $0x1,%cl
181226-ffffffff8109adb4:	44 89 f2             	mov    %r14d,%edx
181227-ffffffff8109adb7:	89 c6                	mov    %eax,%esi
181228-ffffffff8109adb9:	0f 85 84 fb ff ff    	jne    ffffffff8109a943 &lt;flush_workqueue+0x1e3&gt;
181229-ffffffff8109adbf:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181230-ffffffff8109adc6:	be c6 09 00 00       	mov    $0x9c6,%esi
181231-ffffffff8109adcb:	e8 90 0c fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
181232-ffffffff8109add0:	c6 04 25 e5 d5 23 82 	movb   $0x1,0xffffffff8223d5e5
181233-ffffffff8109add7:	01 
181234-ffffffff8109add8:	41 8b 97 a0 00 00 00 	mov    0xa0(%r15),%edx
181235-ffffffff8109addf:	41 8b b7 a4 00 00 00 	mov    0xa4(%r15),%esi
181236-ffffffff8109ade6:	e9 58 fb ff ff       	jmpq   ffffffff8109a943 &lt;flush_workqueue+0x1e3&gt;
181237-ffffffff8109adeb:	8a 04 25 e7 d5 23 82 	mov    0xffffffff8223d5e7,%al
181238-ffffffff8109adf2:	24 01                	and    $0x1,%al
181239-ffffffff8109adf4:	0f 85 be fb ff ff    	jne    ffffffff8109a9b8 &lt;flush_workqueue+0x258&gt;
181240-ffffffff8109adfa:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181241-ffffffff8109ae01:	be f5 09 00 00       	mov    $0x9f5,%esi
181242-ffffffff8109ae06:	e8 55 0c fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
181243-ffffffff8109ae0b:	c6 04 25 e7 d5 23 82 	movb   $0x1,0xffffffff8223d5e7
181244-ffffffff8109ae12:	01 
181245-ffffffff8109ae13:	e9 a0 fb ff ff       	jmpq   ffffffff8109a9b8 &lt;flush_workqueue+0x258&gt;
181246-ffffffff8109ae18:	8a 04 25 e8 d5 23 82 	mov    0xffffffff8223d5e8,%al
181247-ffffffff8109ae1f:	24 01                	and    $0x1,%al
181248-ffffffff8109ae21:	0f 85 a8 fb ff ff    	jne    ffffffff8109a9cf &lt;flush_workqueue+0x26f&gt;
181249-ffffffff8109ae27:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181250-ffffffff8109ae2e:	be f6 09 00 00       	mov    $0x9f6,%esi
181251-ffffffff8109ae33:	e8 28 0c fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
181252-ffffffff8109ae38:	c6 04 25 e8 d5 23 82 	movb   $0x1,0xffffffff8223d5e8
181253-ffffffff8109ae3f:	01 
181254-ffffffff8109ae40:	e9 8a fb ff ff       	jmpq   ffffffff8109a9cf &lt;flush_workqueue+0x26f&gt;
181255-ffffffff8109ae45:	8a 04 25 ea d5 23 82 	mov    0xffffffff8223d5ea,%al
181256-ffffffff8109ae4c:	24 01                	and    $0x1,%al
181257-ffffffff8109ae4e:	0f 85 de fe ff ff    	jne    ffffffff8109ad32 &lt;flush_workqueue+0x5d2&gt;
181258-ffffffff8109ae54:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181259-ffffffff8109ae5b:	be 1c 0a 00 00       	mov    $0xa1c,%esi
181260-ffffffff8109ae60:	e8 fb 0b fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
181261-ffffffff8109ae65:	c6 04 25 ea d5 23 82 	movb   $0x1,0xffffffff8223d5ea
181262-ffffffff8109ae6c:	01 
181263-ffffffff8109ae6d:	e9 c0 fe ff ff       	jmpq   ffffffff8109ad32 &lt;flush_workqueue+0x5d2&gt;
181264-ffffffff8109ae72:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
181265-ffffffff8109ae79:	1f 84 00 00 00 00 00 
181266-
181267-ffffffff8109ae80 &lt;flush_workqueue_prep_pwqs&gt;:
181268-ffffffff8109ae80:	55                   	push   %rbp
181269-ffffffff8109ae81:	48 89 e5             	mov    %rsp,%rbp
181270-ffffffff8109ae84:	41 57                	push   %r15
181271-ffffffff8109ae86:	41 56                	push   %r14
181272-ffffffff8109ae88:	41 55                	push   %r13
181273-ffffffff8109ae8a:	41 54                	push   %r12
181274-ffffffff8109ae8c:	53                   	push   %rbx
181275-ffffffff8109ae8d:	48 83 ec 28          	sub    $0x28,%rsp
181276-ffffffff8109ae91:	89 d3                	mov    %edx,%ebx
181277-ffffffff8109ae93:	41 89 f6             	mov    %esi,%r14d
181278-ffffffff8109ae96:	49 89 ff             	mov    %rdi,%r15
181279-ffffffff8109ae99:	4c 89 7d c8          	mov    %r15,-0x38(%rbp)
181280-ffffffff8109ae9d:	e8 4e b5 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181281-ffffffff8109aea2:	45 85 f6             	test   %r14d,%r14d
181282-ffffffff8109aea5:	78 2d                	js     ffffffff8109aed4 &lt;flush_workqueue_prep_pwqs+0x54&gt;
181283-ffffffff8109aea7:	e8 44 b5 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181284-ffffffff8109aeac:	e8 3f b5 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181285-ffffffff8109aeb1:	41 83 bf a8 00 00 00 	cmpl   $0x0,0xa8(%r15)
181286-ffffffff8109aeb8:	00 
181287-ffffffff8109aeb9:	0f 85 f1 01 00 00    	jne    ffffffff8109b0b0 &lt;flush_workqueue_prep_pwqs+0x230&gt;
181288-ffffffff8109aebf:	e8 2c b5 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181289-ffffffff8109aec4:	e8 27 b5 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181290-ffffffff8109aec9:	41 c7 87 a8 00 00 00 	movl   $0x1,0xa8(%r15)
181291-ffffffff8109aed0:	01 00 00 00 
181292-ffffffff8109aed4:	e8 17 b5 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181293-ffffffff8109aed9:	4d 8b 27             	mov    (%r15),%r12
181294-ffffffff8109aedc:	4d 39 fc             	cmp    %r15,%r12
181295-ffffffff8109aedf:	0f 84 84 01 00 00    	je     ffffffff8109b069 &lt;flush_workqueue_prep_pwqs+0x1e9&gt;
181296-ffffffff8109aee5:	49 63 c6             	movslq %r14d,%rax
181297-ffffffff8109aee8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
181298-ffffffff8109aeec:	4c 89 f8             	mov    %r15,%rax
181299-ffffffff8109aeef:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
181300-ffffffff8109aef3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
181301-ffffffff8109aef7:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
181302-ffffffff8109aefe:	eb 60                	jmp    ffffffff8109af60 &lt;flush_workqueue_prep_pwqs+0xe0&gt;
181303-ffffffff8109af00:	8a 04 25 57 d6 23 82 	mov    0xffffffff8223d657,%al
181304-ffffffff8109af07:	24 01                	and    $0x1,%al
181305-ffffffff8109af09:	0f 85 c4 00 00 00    	jne    ffffffff8109afd3 &lt;flush_workqueue_prep_pwqs+0x153&gt;
181306-ffffffff8109af0f:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181307-ffffffff8109af16:	be 89 09 00 00       	mov    $0x989,%esi
181308-ffffffff8109af1b:	e8 40 0b fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
181309-ffffffff8109af20:	c6 04 25 57 d6 23 82 	movb   $0x1,0xffffffff8223d657
181310-ffffffff8109af27:	01 
181311-ffffffff8109af28:	e9 a6 00 00 00       	jmpq   ffffffff8109afd3 &lt;flush_workqueue_prep_pwqs+0x153&gt;
181312-ffffffff8109af2d:	8a 04 25 58 d6 23 82 	mov    0xffffffff8223d658,%al
181313-ffffffff8109af34:	24 01                	and    $0x1,%al
181314-ffffffff8109af36:	0f 85 00 01 00 00    	jne    ffffffff8109b03c &lt;flush_workqueue_prep_pwqs+0x1bc&gt;
181315-ffffffff8109af3c:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181316-ffffffff8109af43:	be 93 09 00 00       	mov    $0x993,%esi
181317-ffffffff8109af48:	e8 13 0b fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
181318-ffffffff8109af4d:	c6 04 25 58 d6 23 82 	movb   $0x1,0xffffffff8223d658
181319-ffffffff8109af54:	01 
181320-ffffffff8109af55:	e9 e2 00 00 00       	jmpq   ffffffff8109b03c &lt;flush_workqueue_prep_pwqs+0x1bc&gt;
181321-ffffffff8109af5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
181322-ffffffff8109af60:	e8 eb 89 06 00       	callq  ffffffff81103950 &lt;debug_lockdep_rcu_enabled&gt;
181323-ffffffff8109af65:	85 c0                	test   %eax,%eax
181324-ffffffff8109af67:	74 47                	je     ffffffff8109afb0 &lt;flush_workqueue_prep_pwqs+0x130&gt;
181325-ffffffff8109af69:	8a 04 25 56 d6 23 82 	mov    0xffffffff8223d656,%al
181326-ffffffff8109af70:	24 01                	and    $0x1,%al
181327-ffffffff8109af72:	75 3c                	jne    ffffffff8109afb0 &lt;flush_workqueue_prep_pwqs+0x130&gt;
181328-ffffffff8109af74:	e8 17 89 06 00       	callq  ffffffff81103890 &lt;rcu_read_lock_sched_held&gt;
181329-ffffffff8109af79:	85 c0                	test   %eax,%eax
181330-ffffffff8109af7b:	75 33                	jne    ffffffff8109afb0 &lt;flush_workqueue_prep_pwqs+0x130&gt;
181331-ffffffff8109af7d:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
181332-ffffffff8109af81:	e8 ca 52 04 00       	callq  ffffffff810e0250 &lt;lock_is_held&gt;
181333-ffffffff8109af86:	85 c0                	test   %eax,%eax
181334-ffffffff8109af88:	75 26                	jne    ffffffff8109afb0 &lt;flush_workqueue_prep_pwqs+0x130&gt;
181335-ffffffff8109af8a:	c6 04 25 56 d6 23 82 	movb   $0x1,0xffffffff8223d656
181336-ffffffff8109af91:	01 
181337-ffffffff8109af92:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181338-ffffffff8109af99:	be 83 09 00 00       	mov    $0x983,%esi
181339-ffffffff8109af9e:	48 c7 c2 a4 d7 c4 81 	mov    $0xffffffff81c4d7a4,%rdx
181340-ffffffff8109afa5:	e8 e6 67 04 00       	callq  ffffffff810e1790 &lt;lockdep_rcu_suspicious&gt;
181341-ffffffff8109afaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
181342-ffffffff8109afb0:	4d 8b 6c 24 90       	mov    -0x70(%r12),%r13
181343-ffffffff8109afb5:	e8 36 b4 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181344-ffffffff8109afba:	4c 89 ef             	mov    %r13,%rdi
181345-ffffffff8109afbd:	e8 8e 81 87 00       	callq  ffffffff81913150 &lt;_raw_spin_lock_irq&gt;
181346-ffffffff8109afc2:	45 85 f6             	test   %r14d,%r14d
181347-ffffffff8109afc5:	78 2f                	js     ffffffff8109aff6 &lt;flush_workqueue_prep_pwqs+0x176&gt;
181348-ffffffff8109afc7:	41 83 7c 24 a4 ff    	cmpl   $0xffffffff,-0x5c(%r12)
181349-ffffffff8109afcd:	0f 85 2d ff ff ff    	jne    ffffffff8109af00 &lt;flush_workqueue_prep_pwqs+0x80&gt;
181350-ffffffff8109afd3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
181351-ffffffff8109afd7:	41 83 7c 84 ac 00    	cmpl   $0x0,-0x54(%r12,%rax,4)
181352-ffffffff8109afdd:	74 17                	je     ffffffff8109aff6 &lt;flush_workqueue_prep_pwqs+0x176&gt;
181353-ffffffff8109afdf:	45 89 74 24 a4       	mov    %r14d,-0x5c(%r12)
181354-ffffffff8109afe4:	e8 07 b4 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181355-ffffffff8109afe9:	f0 41 ff 87 a8 00 00 	lock incl 0xa8(%r15)
181356-ffffffff8109aff0:	00 
181357-ffffffff8109aff1:	b0 01                	mov    $0x1,%al
181358-ffffffff8109aff3:	89 45 bc             	mov    %eax,-0x44(%rbp)
181359-ffffffff8109aff6:	85 db                	test   %ebx,%ebx
181360-ffffffff8109aff8:	78 4e                	js     ffffffff8109b048 &lt;flush_workqueue_prep_pwqs+0x1c8&gt;
181361-ffffffff8109affa:	45 89 f7             	mov    %r14d,%r15d
181362-ffffffff8109affd:	45 8b 74 24 a0       	mov    -0x60(%r12),%r14d
181363-ffffffff8109b002:	e8 e9 b3 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181364-ffffffff8109b007:	41 8d 46 01          	lea    0x1(%r14),%eax
181365-ffffffff8109b00b:	48 98                	cltq   
181366-ffffffff8109b00d:	48 69 c0 89 88 88 88 	imul   $0xffffffff88888889,%rax,%rax
181367-ffffffff8109b014:	48 c1 e8 20          	shr    $0x20,%rax
181368-ffffffff8109b018:	42 8d 44 30 01       	lea    0x1(%rax,%r14,1),%eax
181369-ffffffff8109b01d:	89 c1                	mov    %eax,%ecx
181370-ffffffff8109b01f:	c1 e9 1f             	shr    $0x1f,%ecx
181371-ffffffff8109b022:	c1 f8 03             	sar    $0x3,%eax
181372-ffffffff8109b025:	01 c8                	add    %ecx,%eax
181373-ffffffff8109b027:	8d 04 80             	lea    (%rax,%rax,4),%eax
181374-ffffffff8109b02a:	8d 04 40             	lea    (%rax,%rax,2),%eax
181375-ffffffff8109b02d:	f7 d8                	neg    %eax
181376-ffffffff8109b02f:	41 8d 44 06 01       	lea    0x1(%r14,%rax,1),%eax
181377-ffffffff8109b034:	39 d8                	cmp    %ebx,%eax
181378-ffffffff8109b036:	0f 85 f1 fe ff ff    	jne    ffffffff8109af2d &lt;flush_workqueue_prep_pwqs+0xad&gt;
181379-ffffffff8109b03c:	41 89 5c 24 a0       	mov    %ebx,-0x60(%r12)
181380-ffffffff8109b041:	45 89 fe             	mov    %r15d,%r14d
181381-ffffffff8109b044:	4c 8b 7d c8          	mov    -0x38(%rbp),%r15
181382-ffffffff8109b048:	e8 a3 b3 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181383-ffffffff8109b04d:	4c 89 ef             	mov    %r13,%rdi
181384-ffffffff8109b050:	e8 9b 82 87 00       	callq  ffffffff819132f0 &lt;_raw_spin_unlock_irq&gt;
181385-ffffffff8109b055:	e8 96 b3 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181386-ffffffff8109b05a:	4d 8b 24 24          	mov    (%r12),%r12
181387-ffffffff8109b05e:	4d 39 fc             	cmp    %r15,%r12
181388-ffffffff8109b061:	0f 85 f9 fe ff ff    	jne    ffffffff8109af60 &lt;flush_workqueue_prep_pwqs+0xe0&gt;
181389-ffffffff8109b067:	eb 07                	jmp    ffffffff8109b070 &lt;flush_workqueue_prep_pwqs+0x1f0&gt;
181390-ffffffff8109b069:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
181391-ffffffff8109b070:	45 85 f6             	test   %r14d,%r14d
181392-ffffffff8109b073:	78 27                	js     ffffffff8109b09c &lt;flush_workqueue_prep_pwqs+0x21c&gt;
181393-ffffffff8109b075:	e8 76 b3 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181394-ffffffff8109b07a:	f0 41 ff 8f a8 00 00 	lock decl 0xa8(%r15)
181395-ffffffff8109b081:	00 
181396-ffffffff8109b082:	0f 94 45 d7          	sete   -0x29(%rbp)
181397-ffffffff8109b086:	80 7d d7 00          	cmpb   $0x0,-0x29(%rbp)
181398-ffffffff8109b08a:	74 10                	je     ffffffff8109b09c &lt;flush_workqueue_prep_pwqs+0x21c&gt;
181399-ffffffff8109b08c:	49 8b bf b0 00 00 00 	mov    0xb0(%r15),%rdi
181400-ffffffff8109b093:	48 83 c7 18          	add    $0x18,%rdi
181401-ffffffff8109b097:	e8 84 91 03 00       	callq  ffffffff810d4220 &lt;complete&gt;
181402-ffffffff8109b09c:	8b 45 bc             	mov    -0x44(%rbp),%eax
181403-ffffffff8109b09f:	24 01                	and    $0x1,%al
181404-ffffffff8109b0a1:	48 83 c4 28          	add    $0x28,%rsp
181405-ffffffff8109b0a5:	5b                   	pop    %rbx
181406-ffffffff8109b0a6:	41 5c                	pop    %r12
181407-ffffffff8109b0a8:	41 5d                	pop    %r13
181408-ffffffff8109b0aa:	41 5e                	pop    %r14
181409-ffffffff8109b0ac:	41 5f                	pop    %r15
181410-ffffffff8109b0ae:	5d                   	pop    %rbp
181411-ffffffff8109b0af:	c3                   	retq   
181412-ffffffff8109b0b0:	8a 04 25 55 d6 23 82 	mov    0xffffffff8223d655,%al
181413-ffffffff8109b0b7:	24 01                	and    $0x1,%al
181414-ffffffff8109b0b9:	0f 85 00 fe ff ff    	jne    ffffffff8109aebf &lt;flush_workqueue_prep_pwqs+0x3f&gt;
181415-ffffffff8109b0bf:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181416-ffffffff8109b0c6:	be 7f 09 00 00       	mov    $0x97f,%esi
181417-ffffffff8109b0cb:	e8 90 09 fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
181418-ffffffff8109b0d0:	c6 04 25 55 d6 23 82 	movb   $0x1,0xffffffff8223d655
181419-ffffffff8109b0d7:	01 
181420-ffffffff8109b0d8:	e9 e2 fd ff ff       	jmpq   ffffffff8109aebf &lt;flush_workqueue_prep_pwqs+0x3f&gt;
181421-ffffffff8109b0dd:	0f 1f 00             	nopl   (%rax)
181422-
181423-ffffffff8109b0e0 &lt;drain_workqueue&gt;:
181424-ffffffff8109b0e0:	55                   	push   %rbp
181425-ffffffff8109b0e1:	48 89 e5             	mov    %rsp,%rbp
181426-ffffffff8109b0e4:	41 57                	push   %r15
181427-ffffffff8109b0e6:	41 56                	push   %r14
181428-ffffffff8109b0e8:	41 55                	push   %r13
181429-ffffffff8109b0ea:	41 54                	push   %r12
181430-ffffffff8109b0ec:	53                   	push   %rbx
181431-ffffffff8109b0ed:	48 83 ec 28          	sub    $0x28,%rsp
181432-ffffffff8109b0f1:	49 89 ff             	mov    %rdi,%r15
181433-ffffffff8109b0f4:	e8 f7 b2 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181434-ffffffff8109b0f9:	49 8d 5f 20          	lea    0x20(%r15),%rbx
181435-ffffffff8109b0fd:	31 f6                	xor    %esi,%esi
181436-ffffffff8109b0ff:	48 89 df             	mov    %rbx,%rdi
181437-ffffffff8109b102:	e8 09 4d 87 00       	callq  ffffffff8190fe10 &lt;mutex_lock_nested&gt;
181438-ffffffff8109b107:	41 8b 87 f0 00 00 00 	mov    0xf0(%r15),%eax
181439-ffffffff8109b10e:	8d 48 01             	lea    0x1(%rax),%ecx
181440-ffffffff8109b111:	41 89 8f f0 00 00 00 	mov    %ecx,0xf0(%r15)
181441-ffffffff8109b118:	85 c0                	test   %eax,%eax
181442-ffffffff8109b11a:	75 08                	jne    ffffffff8109b124 &lt;drain_workqueue+0x44&gt;
181443-ffffffff8109b11c:	41 80 8f 82 01 00 00 	orb    $0x1,0x182(%r15)
181444-ffffffff8109b123:	01 
181445-ffffffff8109b124:	48 89 df             	mov    %rbx,%rdi
181446-ffffffff8109b127:	e8 64 4a 87 00       	callq  ffffffff8190fb90 &lt;mutex_unlock&gt;
181447-ffffffff8109b12c:	4c 89 ff             	mov    %r15,%rdi
181448-ffffffff8109b12f:	e8 2c f6 ff ff       	callq  ffffffff8109a760 &lt;flush_workqueue&gt;
181449-ffffffff8109b134:	31 f6                	xor    %esi,%esi
181450-ffffffff8109b136:	48 89 df             	mov    %rbx,%rdi
181451-ffffffff8109b139:	48 89 5d d0          	mov    %rbx,-0x30(%rbp)
181452-ffffffff8109b13d:	e8 ce 4c 87 00       	callq  ffffffff8190fe10 &lt;mutex_lock_nested&gt;
181453-ffffffff8109b142:	e8 a9 b2 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181454-ffffffff8109b147:	4d 8b 37             	mov    (%r15),%r14
181455-ffffffff8109b14a:	4d 39 fe             	cmp    %r15,%r14
181456-ffffffff8109b14d:	0f 84 41 01 00 00    	je     ffffffff8109b294 &lt;drain_workqueue+0x1b4&gt;
181457-ffffffff8109b153:	4c 89 f8             	mov    %r15,%rax
181458-ffffffff8109b156:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
181459-ffffffff8109b15a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
181460-ffffffff8109b15e:	49 8d 87 30 01 00 00 	lea    0x130(%r15),%rax
181461-ffffffff8109b165:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
181462-ffffffff8109b169:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
181463-ffffffff8109b170:	eb 7e                	jmp    ffffffff8109b1f0 &lt;drain_workqueue+0x110&gt;
181464-ffffffff8109b172:	49 8b 5e 90          	mov    -0x70(%r14),%rbx
181465-ffffffff8109b176:	e8 75 b2 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181466-ffffffff8109b17b:	48 89 df             	mov    %rbx,%rdi
181467-ffffffff8109b17e:	e8 6d 81 87 00       	callq  ffffffff819132f0 &lt;_raw_spin_unlock_irq&gt;
181468-ffffffff8109b183:	8b 5d cc             	mov    -0x34(%rbp),%ebx
181469-ffffffff8109b186:	ff c3                	inc    %ebx
181470-ffffffff8109b188:	83 fb 0a             	cmp    $0xa,%ebx
181471-ffffffff8109b18b:	74 1e                	je     ffffffff8109b1ab &lt;drain_workqueue+0xcb&gt;
181472-ffffffff8109b18d:	89 d8                	mov    %ebx,%eax
181473-ffffffff8109b18f:	81 fb e8 03 00 00    	cmp    $0x3e8,%ebx
181474-ffffffff8109b195:	77 28                	ja     ffffffff8109b1bf &lt;drain_workqueue+0xdf&gt;
181475-ffffffff8109b197:	48 69 c0 1f 85 eb 51 	imul   $0x51eb851f,%rax,%rax
181476-ffffffff8109b19e:	48 c1 e8 25          	shr    $0x25,%rax
181477-ffffffff8109b1a2:	6b c0 64             	imul   $0x64,%eax,%eax
181478-ffffffff8109b1a5:	89 d9                	mov    %ebx,%ecx
181479-ffffffff8109b1a7:	29 c1                	sub    %eax,%ecx
181480-ffffffff8109b1a9:	75 14                	jne    ffffffff8109b1bf &lt;drain_workqueue+0xdf&gt;
181481-ffffffff8109b1ab:	48 c7 c7 ca d7 c4 81 	mov    $0xffffffff81c4d7ca,%rdi
181482-ffffffff8109b1b2:	31 c0                	xor    %eax,%eax
181483-ffffffff8109b1b4:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
181484-ffffffff8109b1b8:	89 da                	mov    %ebx,%edx
181485-ffffffff8109b1ba:	e8 01 a5 05 00       	callq  ffffffff810f56c0 &lt;printk&gt;
181486-ffffffff8109b1bf:	89 5d cc             	mov    %ebx,-0x34(%rbp)
181487-ffffffff8109b1c2:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
181488-ffffffff8109b1c6:	48 89 df             	mov    %rbx,%rdi
181489-ffffffff8109b1c9:	e8 c2 49 87 00       	callq  ffffffff8190fb90 &lt;mutex_unlock&gt;
181490-ffffffff8109b1ce:	4c 89 ff             	mov    %r15,%rdi
181491-ffffffff8109b1d1:	e8 8a f5 ff ff       	callq  ffffffff8109a760 &lt;flush_workqueue&gt;
181492-ffffffff8109b1d6:	31 f6                	xor    %esi,%esi
181493-ffffffff8109b1d8:	48 89 df             	mov    %rbx,%rdi
181494-ffffffff8109b1db:	e8 30 4c 87 00       	callq  ffffffff8190fe10 &lt;mutex_lock_nested&gt;
181495-ffffffff8109b1e0:	e8 0b b2 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181496-ffffffff8109b1e5:	4d 8b 37             	mov    (%r15),%r14
181497-ffffffff8109b1e8:	e9 9e 00 00 00       	jmpq   ffffffff8109b28b &lt;drain_workqueue+0x1ab&gt;
181498-ffffffff8109b1ed:	0f 1f 00             	nopl   (%rax)
181499-ffffffff8109b1f0:	e8 5b 87 06 00       	callq  ffffffff81103950 &lt;debug_lockdep_rcu_enabled&gt;
181500-ffffffff8109b1f5:	85 c0                	test   %eax,%eax
181501-ffffffff8109b1f7:	74 47                	je     ffffffff8109b240 &lt;drain_workqueue+0x160&gt;
181502-ffffffff8109b1f9:	8a 04 25 ed d5 23 82 	mov    0xffffffff8223d5ed,%al
181503-ffffffff8109b200:	24 01                	and    $0x1,%al
181504-ffffffff8109b202:	75 3c                	jne    ffffffff8109b240 &lt;drain_workqueue+0x160&gt;
181505-ffffffff8109b204:	e8 87 86 06 00       	callq  ffffffff81103890 &lt;rcu_read_lock_sched_held&gt;
181506-ffffffff8109b209:	85 c0                	test   %eax,%eax
181507-ffffffff8109b20b:	75 33                	jne    ffffffff8109b240 &lt;drain_workqueue+0x160&gt;
181508-ffffffff8109b20d:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
181509-ffffffff8109b211:	e8 3a 50 04 00       	callq  ffffffff810e0250 &lt;lock_is_held&gt;
181510-ffffffff8109b216:	85 c0                	test   %eax,%eax
181511-ffffffff8109b218:	75 26                	jne    ffffffff8109b240 &lt;drain_workqueue+0x160&gt;
181512-ffffffff8109b21a:	c6 04 25 ed d5 23 82 	movb   $0x1,0xffffffff8223d5ed
181513-ffffffff8109b221:	01 
181514-ffffffff8109b222:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181515-ffffffff8109b229:	be 57 0a 00 00       	mov    $0xa57,%esi
181516-ffffffff8109b22e:	48 c7 c2 a4 d7 c4 81 	mov    $0xffffffff81c4d7a4,%rdx
181517-ffffffff8109b235:	e8 56 65 04 00       	callq  ffffffff810e1790 &lt;lockdep_rcu_suspicious&gt;
181518-ffffffff8109b23a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
181519-ffffffff8109b240:	4d 8b 66 90          	mov    -0x70(%r14),%r12
181520-ffffffff8109b244:	e8 a7 b1 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181521-ffffffff8109b249:	4c 89 e7             	mov    %r12,%rdi
181522-ffffffff8109b24c:	e8 ff 7e 87 00       	callq  ffffffff81913150 &lt;_raw_spin_lock_irq&gt;
181523-ffffffff8109b251:	41 83 7e e8 00       	cmpl   $0x0,-0x18(%r14)
181524-ffffffff8109b256:	0f 85 16 ff ff ff    	jne    ffffffff8109b172 &lt;drain_workqueue+0x92&gt;
181525-ffffffff8109b25c:	4d 8d 66 f0          	lea    -0x10(%r14),%r12
181526-ffffffff8109b260:	e8 8b b1 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181527-ffffffff8109b265:	49 8b 5e 90          	mov    -0x70(%r14),%rbx
181528-ffffffff8109b269:	4d 8b 6e f0          	mov    -0x10(%r14),%r13
181529-ffffffff8109b26d:	e8 7e b1 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181530-ffffffff8109b272:	48 89 df             	mov    %rbx,%rdi
181531-ffffffff8109b275:	e8 76 80 87 00       	callq  ffffffff819132f0 &lt;_raw_spin_unlock_irq&gt;
181532-ffffffff8109b27a:	4d 39 e5             	cmp    %r12,%r13
181533-ffffffff8109b27d:	0f 85 00 ff ff ff    	jne    ffffffff8109b183 &lt;drain_workqueue+0xa3&gt;
181534-ffffffff8109b283:	e8 68 b1 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181535-ffffffff8109b288:	4d 8b 36             	mov    (%r14),%r14
181536-ffffffff8109b28b:	4d 39 fe             	cmp    %r15,%r14
181537-ffffffff8109b28e:	0f 85 5c ff ff ff    	jne    ffffffff8109b1f0 &lt;drain_workqueue+0x110&gt;
181538-ffffffff8109b294:	41 ff 8f f0 00 00 00 	decl   0xf0(%r15)
181539-ffffffff8109b29b:	75 08                	jne    ffffffff8109b2a5 &lt;drain_workqueue+0x1c5&gt;
181540-ffffffff8109b29d:	41 80 a7 82 01 00 00 	andb   $0xfe,0x182(%r15)
181541-ffffffff8109b2a4:	fe 
181542-ffffffff8109b2a5:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
181543-ffffffff8109b2a9:	e8 e2 48 87 00       	callq  ffffffff8190fb90 &lt;mutex_unlock&gt;
181544-ffffffff8109b2ae:	48 83 c4 28          	add    $0x28,%rsp
181545-ffffffff8109b2b2:	5b                   	pop    %rbx
181546-ffffffff8109b2b3:	41 5c                	pop    %r12
181547-ffffffff8109b2b5:	41 5d                	pop    %r13
181548-ffffffff8109b2b7:	41 5e                	pop    %r14
181549-ffffffff8109b2b9:	41 5f                	pop    %r15
181550-ffffffff8109b2bb:	5d                   	pop    %rbp
181551-ffffffff8109b2bc:	c3                   	retq   
181552-ffffffff8109b2bd:	0f 1f 00             	nopl   (%rax)
181553-
181554-ffffffff8109b2c0 &lt;flush_work&gt;:
181555-ffffffff8109b2c0:	55                   	push   %rbp
181556-ffffffff8109b2c1:	48 89 e5             	mov    %rsp,%rbp
181557-ffffffff8109b2c4:	41 56                	push   %r14
181558-ffffffff8109b2c6:	53                   	push   %rbx
181559-ffffffff8109b2c7:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
181560-ffffffff8109b2ce:	49 89 fe             	mov    %rdi,%r14
181561-ffffffff8109b2d1:	e8 1a b1 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181562-ffffffff8109b2d6:	49 8d 5e 20          	lea    0x20(%r14),%rbx
181563-ffffffff8109b2da:	48 c7 04 24 da b2 09 	movq   $0xffffffff8109b2da,(%rsp)
181564-ffffffff8109b2e1:	81 
181565-ffffffff8109b2e2:	31 f6                	xor    %esi,%esi
181566-ffffffff8109b2e4:	31 d2                	xor    %edx,%edx
181567-ffffffff8109b2e6:	31 c9                	xor    %ecx,%ecx
181568-ffffffff8109b2e8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
181569-ffffffff8109b2ee:	45 31 c9             	xor    %r9d,%r9d
181570-ffffffff8109b2f1:	48 89 df             	mov    %rbx,%rdi
181571-ffffffff8109b2f4:	e8 97 28 04 00       	callq  ffffffff810ddb90 &lt;lock_acquire&gt;
181572-ffffffff8109b2f9:	be 01 00 00 00       	mov    $0x1,%esi
181573-ffffffff8109b2fe:	48 c7 c2 f9 b2 09 81 	mov    $0xffffffff8109b2f9,%rdx
181574-ffffffff8109b305:	48 89 df             	mov    %rbx,%rdi
181575-ffffffff8109b308:	e8 63 4b 04 00       	callq  ffffffff810dfe70 &lt;lock_release&gt;
181576-ffffffff8109b30d:	48 8d b5 58 ff ff ff 	lea    -0xa8(%rbp),%rsi
181577-ffffffff8109b314:	4c 89 f7             	mov    %r14,%rdi
181578-ffffffff8109b317:	e8 24 00 00 00       	callq  ffffffff8109b340 &lt;start_flush_work&gt;
181579-ffffffff8109b31c:	84 c0                	test   %al,%al
181580-ffffffff8109b31e:	74 12                	je     ffffffff8109b332 &lt;flush_work+0x72&gt;
181581-ffffffff8109b320:	48 8d 7d 98          	lea    -0x68(%rbp),%rdi
181582-ffffffff8109b324:	e8 77 42 87 00       	callq  ffffffff8190f5a0 &lt;wait_for_completion&gt;
181583-ffffffff8109b329:	e8 c2 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181584-ffffffff8109b32e:	b0 01                	mov    $0x1,%al
181585-ffffffff8109b330:	eb 02                	jmp    ffffffff8109b334 &lt;flush_work+0x74&gt;
181586-ffffffff8109b332:	31 c0                	xor    %eax,%eax
181587-ffffffff8109b334:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
181588-ffffffff8109b33b:	5b                   	pop    %rbx
181589-ffffffff8109b33c:	41 5e                	pop    %r14
181590-ffffffff8109b33e:	5d                   	pop    %rbp
181591-ffffffff8109b33f:	c3                   	retq   
181592-
181593-ffffffff8109b340 &lt;start_flush_work&gt;:
181594-ffffffff8109b340:	55                   	push   %rbp
181595-ffffffff8109b341:	48 89 e5             	mov    %rsp,%rbp
181596-ffffffff8109b344:	41 57                	push   %r15
181597-ffffffff8109b346:	41 56                	push   %r14
181598-ffffffff8109b348:	41 55                	push   %r13
181599-ffffffff8109b34a:	41 54                	push   %r12
181600-ffffffff8109b34c:	53                   	push   %rbx
181601-ffffffff8109b34d:	48 83 ec 18          	sub    $0x18,%rsp
181602-ffffffff8109b351:	49 89 f7             	mov    %rsi,%r15
181603-ffffffff8109b354:	49 89 fe             	mov    %rdi,%r14
181604-ffffffff8109b357:	e8 94 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181605-ffffffff8109b35c:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181606-ffffffff8109b363:	be 76 0a 00 00       	mov    $0xa76,%esi
181607-ffffffff8109b368:	31 d2                	xor    %edx,%edx
181608-ffffffff8109b36a:	e8 41 dc 01 00       	callq  ffffffff810b8fb0 &lt;__might_sleep&gt;
181609-ffffffff8109b36f:	e8 3c 33 87 00       	callq  ffffffff8190e6b0 &lt;_cond_resched&gt;
181610-ffffffff8109b374:	e8 77 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181611-ffffffff8109b379:	e8 72 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181612-ffffffff8109b37e:	fa                   	cli    
181613-ffffffff8109b37f:	e8 ac 0d 04 00       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
181614-ffffffff8109b384:	4c 89 f7             	mov    %r14,%rdi
181615-ffffffff8109b387:	e8 c4 23 00 00       	callq  ffffffff8109d750 &lt;get_work_pool&gt;
181616-ffffffff8109b38c:	49 89 c5             	mov    %rax,%r13
181617-ffffffff8109b38f:	4d 85 ed             	test   %r13,%r13
181618-ffffffff8109b392:	0f 84 f3 00 00 00    	je     ffffffff8109b48b &lt;start_flush_work+0x14b&gt;
181619-ffffffff8109b398:	e8 53 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181620-ffffffff8109b39d:	4c 89 ef             	mov    %r13,%rdi
181621-ffffffff8109b3a0:	e8 cb 7c 87 00       	callq  ffffffff81913070 &lt;_raw_spin_lock&gt;
181622-ffffffff8109b3a5:	e8 46 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181623-ffffffff8109b3aa:	e8 41 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181624-ffffffff8109b3af:	e8 3c b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181625-ffffffff8109b3b4:	e8 37 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181626-ffffffff8109b3b9:	49 8b 06             	mov    (%r14),%rax
181627-ffffffff8109b3bc:	49 89 c4             	mov    %rax,%r12
181628-ffffffff8109b3bf:	49 c1 e4 3d          	shl    $0x3d,%r12
181629-ffffffff8109b3c3:	49 c1 fc 3f          	sar    $0x3f,%r12
181630-ffffffff8109b3c7:	49 21 c4             	and    %rax,%r12
181631-ffffffff8109b3ca:	49 81 e4 00 ff ff ff 	and    $0xffffffffffffff00,%r12
181632-ffffffff8109b3d1:	0f 84 cb 00 00 00    	je     ffffffff8109b4a2 &lt;start_flush_work+0x162&gt;
181633-ffffffff8109b3d7:	31 db                	xor    %ebx,%ebx
181634-ffffffff8109b3d9:	4d 39 2c 24          	cmp    %r13,(%r12)
181635-ffffffff8109b3dd:	0f 85 0e 01 00 00    	jne    ffffffff8109b4f1 &lt;start_flush_work+0x1b1&gt;
181636-ffffffff8109b3e3:	4c 89 6d d0          	mov    %r13,-0x30(%rbp)
181637-ffffffff8109b3e7:	e8 04 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181638-ffffffff8109b3ec:	e8 ff af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181639-ffffffff8109b3f1:	48 b8 e0 ff ff ff 0f 	movabs $0xfffffffe0,%rax
181640-ffffffff8109b3f8:	00 00 00 
181641-ffffffff8109b3fb:	49 89 07             	mov    %rax,(%r15)
181642-ffffffff8109b3fe:	49 8d 7f 20          	lea    0x20(%r15),%rdi
181643-ffffffff8109b402:	48 c7 c6 b4 d9 c4 81 	mov    $0xffffffff81c4d9b4,%rsi
181644-ffffffff8109b409:	48 c7 c2 59 d6 23 82 	mov    $0xffffffff8223d659,%rdx
181645-ffffffff8109b410:	31 c9                	xor    %ecx,%ecx
181646-ffffffff8109b412:	e8 d9 1b 04 00       	callq  ffffffff810dcff0 &lt;lockdep_init_map&gt;
181647-ffffffff8109b417:	4d 8d 6f 08          	lea    0x8(%r15),%r13
181648-ffffffff8109b41b:	e8 d0 af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181649-ffffffff8109b420:	4d 89 6f 08          	mov    %r13,0x8(%r15)
181650-ffffffff8109b424:	4d 89 6f 10          	mov    %r13,0x10(%r15)
181651-ffffffff8109b428:	49 c7 47 18 40 f4 09 	movq   $0xffffffff8109f440,0x18(%r15)
181652-ffffffff8109b42f:	81 
181653-ffffffff8109b430:	e8 bb af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181654-ffffffff8109b435:	41 0f ba 2f 00       	btsl   $0x0,(%r15)
181655-ffffffff8109b43a:	e8 b1 af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181656-ffffffff8109b43f:	41 c7 47 40 00 00 00 	movl   $0x0,0x40(%r15)
181657-ffffffff8109b446:	00 
181658-ffffffff8109b447:	49 8d 7f 48          	lea    0x48(%r15),%rdi
181659-ffffffff8109b44b:	48 c7 c6 2f 56 c4 81 	mov    $0xffffffff81c4562f,%rsi
181660-ffffffff8109b452:	48 c7 c2 4d d6 23 82 	mov    $0xffffffff8223d64d,%rdx
181661-ffffffff8109b459:	e8 d2 7d 03 00       	callq  ffffffff810d3230 &lt;__init_waitqueue_head&gt;
181662-ffffffff8109b45e:	e8 8d af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181663-ffffffff8109b463:	65 48 8b 04 25 c0 ae 	mov    %gs:0xaec0,%rax
181664-ffffffff8109b46a:	00 00 
181665-ffffffff8109b46c:	49 89 87 90 00 00 00 	mov    %rax,0x90(%r15)
181666-ffffffff8109b473:	48 85 db             	test   %rbx,%rbx
181667-ffffffff8109b476:	0f 84 89 00 00 00    	je     ffffffff8109b505 &lt;start_flush_work+0x1c5&gt;
181668-ffffffff8109b47c:	48 8b 5b 30          	mov    0x30(%rbx),%rbx
181669-ffffffff8109b480:	41 bd f0 00 00 00    	mov    $0xf0,%r13d
181670-ffffffff8109b486:	e9 96 00 00 00       	jmpq   ffffffff8109b521 &lt;start_flush_work+0x1e1&gt;
181671-ffffffff8109b48b:	e8 b0 0c 04 00       	callq  ffffffff810dc140 &lt;trace_hardirqs_on&gt;
181672-ffffffff8109b490:	e8 5b af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181673-ffffffff8109b495:	e8 56 af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181674-ffffffff8109b49a:	fb                   	sti    
181675-ffffffff8109b49b:	31 c0                	xor    %eax,%eax
181676-ffffffff8109b49d:	e9 1f 01 00 00       	jmpq   ffffffff8109b5c1 &lt;start_flush_work+0x281&gt;
181677-ffffffff8109b4a2:	e8 49 af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181678-ffffffff8109b4a7:	e8 44 af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181679-ffffffff8109b4ac:	48 b8 01 00 fc ff ff 	movabs $0x9e37fffffffc0001,%rax
181680-ffffffff8109b4b3:	ff 37 9e 
181681-ffffffff8109b4b6:	49 0f af c6          	imul   %r14,%rax
181682-ffffffff8109b4ba:	48 c1 e8 3a          	shr    $0x3a,%rax
181683-ffffffff8109b4be:	49 8b 9c c5 50 01 00 	mov    0x150(%r13,%rax,8),%rbx
181684-ffffffff8109b4c5:	00 
181685-ffffffff8109b4c6:	eb 0b                	jmp    ffffffff8109b4d3 &lt;start_flush_work+0x193&gt;
181686-ffffffff8109b4c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
181687-ffffffff8109b4cf:	00 
181688-ffffffff8109b4d0:	48 8b 1b             	mov    (%rbx),%rbx
181689-ffffffff8109b4d3:	48 85 db             	test   %rbx,%rbx
181690-ffffffff8109b4d6:	74 19                	je     ffffffff8109b4f1 &lt;start_flush_work+0x1b1&gt;
181691-ffffffff8109b4d8:	4c 39 73 10          	cmp    %r14,0x10(%rbx)
181692-ffffffff8109b4dc:	75 f2                	jne    ffffffff8109b4d0 &lt;start_flush_work+0x190&gt;
181693-ffffffff8109b4de:	48 8b 43 18          	mov    0x18(%rbx),%rax
181694-ffffffff8109b4e2:	49 3b 46 18          	cmp    0x18(%r14),%rax
181695-ffffffff8109b4e6:	75 e8                	jne    ffffffff8109b4d0 &lt;start_flush_work+0x190&gt;
181696-ffffffff8109b4e8:	4c 8b 63 20          	mov    0x20(%rbx),%r12
181697-ffffffff8109b4ec:	e9 f2 fe ff ff       	jmpq   ffffffff8109b3e3 &lt;start_flush_work+0xa3&gt;
181698-ffffffff8109b4f1:	e8 fa ae 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181699-ffffffff8109b4f6:	4c 89 ef             	mov    %r13,%rdi
181700-ffffffff8109b4f9:	e8 f2 7d 87 00       	callq  ffffffff819132f0 &lt;_raw_spin_unlock_irq&gt;
181701-ffffffff8109b4fe:	31 c0                	xor    %eax,%eax
181702-ffffffff8109b500:	e9 bc 00 00 00       	jmpq   ffffffff8109b5c1 &lt;start_flush_work+0x281&gt;
181703-ffffffff8109b505:	49 8b 5e 08          	mov    0x8(%r14),%rbx
181704-ffffffff8109b509:	45 8b 2e             	mov    (%r14),%r13d
181705-ffffffff8109b50c:	41 83 e5 08          	and    $0x8,%r13d
181706-ffffffff8109b510:	e8 db ae 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181707-ffffffff8109b515:	41 0f ba 2e 03       	btsl   $0x3,(%r14)
181708-ffffffff8109b51a:	41 81 cd f0 00 00 00 	or     $0xf0,%r13d
181709-ffffffff8109b521:	e8 ca ae 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181710-ffffffff8109b526:	e8 c5 ae 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181711-ffffffff8109b52b:	4c 89 e7             	mov    %r12,%rdi
181712-ffffffff8109b52e:	4c 89 fe             	mov    %r15,%rsi
181713-ffffffff8109b531:	48 89 da             	mov    %rbx,%rdx
181714-ffffffff8109b534:	44 89 e9             	mov    %r13d,%ecx
181715-ffffffff8109b537:	e8 c4 3a 00 00       	callq  ffffffff8109f000 &lt;insert_work&gt;
181716-ffffffff8109b53c:	e8 af ae 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181717-ffffffff8109b541:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
181718-ffffffff8109b545:	e8 a6 7d 87 00       	callq  ffffffff819132f0 &lt;_raw_spin_unlock_irq&gt;
181719-ffffffff8109b54a:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
181720-ffffffff8109b54f:	83 bf f4 00 00 00 01 	cmpl   $0x1,0xf4(%rdi)
181721-ffffffff8109b556:	74 0a                	je     ffffffff8109b562 &lt;start_flush_work+0x222&gt;
181722-ffffffff8109b558:	48 83 bf e8 00 00 00 	cmpq   $0x0,0xe8(%rdi)
181723-ffffffff8109b55f:	00 
181724-ffffffff8109b560:	74 17                	je     ffffffff8109b579 &lt;start_flush_work+0x239&gt;
181725-ffffffff8109b562:	48 81 c7 10 01 00 00 	add    $0x110,%rdi
181726-ffffffff8109b569:	48 c7 04 24 62 b5 09 	movq   $0xffffffff8109b562,(%rsp)
181727-ffffffff8109b570:	81 
181728-ffffffff8109b571:	31 f6                	xor    %esi,%esi
181729-ffffffff8109b573:	31 d2                	xor    %edx,%edx
181730-ffffffff8109b575:	31 c9                	xor    %ecx,%ecx
181731-ffffffff8109b577:	eb 1b                	jmp    ffffffff8109b594 &lt;start_flush_work+0x254&gt;
181732-ffffffff8109b579:	48 81 c7 10 01 00 00 	add    $0x110,%rdi
181733-ffffffff8109b580:	48 c7 04 24 79 b5 09 	movq   $0xffffffff8109b579,(%rsp)
181734-ffffffff8109b587:	81 
181735-ffffffff8109b588:	be 00 00 00 00       	mov    $0x0,%esi
181736-ffffffff8109b58d:	31 d2                	xor    %edx,%edx
181737-ffffffff8109b58f:	b9 02 00 00 00       	mov    $0x2,%ecx
181738-ffffffff8109b594:	41 b8 01 00 00 00    	mov    $0x1,%r8d
181739-ffffffff8109b59a:	45 31 c9             	xor    %r9d,%r9d
181740-ffffffff8109b59d:	e8 ee 25 04 00       	callq  ffffffff810ddb90 &lt;lock_acquire&gt;
181741-ffffffff8109b5a2:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
181742-ffffffff8109b5a7:	48 81 c7 10 01 00 00 	add    $0x110,%rdi
181743-ffffffff8109b5ae:	be 01 00 00 00       	mov    $0x1,%esi
181744-ffffffff8109b5b3:	48 c7 c2 a2 b5 09 81 	mov    $0xffffffff8109b5a2,%rdx
181745-ffffffff8109b5ba:	e8 b1 48 04 00       	callq  ffffffff810dfe70 &lt;lock_release&gt;
181746-ffffffff8109b5bf:	b0 01                	mov    $0x1,%al
181747-ffffffff8109b5c1:	48 83 c4 18          	add    $0x18,%rsp
181748-ffffffff8109b5c5:	5b                   	pop    %rbx
181749-ffffffff8109b5c6:	41 5c                	pop    %r12
181750-ffffffff8109b5c8:	41 5d                	pop    %r13
181751-ffffffff8109b5ca:	41 5e                	pop    %r14
181752-ffffffff8109b5cc:	41 5f                	pop    %r15
181753-ffffffff8109b5ce:	5d                   	pop    %rbp
181754-ffffffff8109b5cf:	c3                   	retq   
181755-
181756-ffffffff8109b5d0 &lt;cancel_work_sync&gt;:
181757-ffffffff8109b5d0:	55                   	push   %rbp
181758-ffffffff8109b5d1:	48 89 e5             	mov    %rsp,%rbp
181759-ffffffff8109b5d4:	53                   	push   %rbx
181760-ffffffff8109b5d5:	50                   	push   %rax
181761-ffffffff8109b5d6:	48 89 fb             	mov    %rdi,%rbx
181762-ffffffff8109b5d9:	e8 12 ae 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181763-ffffffff8109b5de:	31 f6                	xor    %esi,%esi
181764-ffffffff8109b5e0:	48 89 df             	mov    %rbx,%rdi
181765-ffffffff8109b5e3:	e8 08 00 00 00       	callq  ffffffff8109b5f0 &lt;__cancel_work_timer&gt;
181766-ffffffff8109b5e8:	48 83 c4 08          	add    $0x8,%rsp
181767-ffffffff8109b5ec:	5b                   	pop    %rbx
181768-ffffffff8109b5ed:	5d                   	pop    %rbp
181769-ffffffff8109b5ee:	c3                   	retq   
181770-ffffffff8109b5ef:	90                   	nop
181771-
181772-ffffffff8109b5f0 &lt;__cancel_work_timer&gt;:
181773-ffffffff8109b5f0:	55                   	push   %rbp
181774-ffffffff8109b5f1:	48 89 e5             	mov    %rsp,%rbp
181775-ffffffff8109b5f4:	41 57                	push   %r15
181776-ffffffff8109b5f6:	41 56                	push   %r14
181777-ffffffff8109b5f8:	41 55                	push   %r13
181778-ffffffff8109b5fa:	41 54                	push   %r12
181779-ffffffff8109b5fc:	53                   	push   %rbx
181780-ffffffff8109b5fd:	48 83 ec 48          	sub    $0x48,%rsp
181781-ffffffff8109b601:	89 f3                	mov    %esi,%ebx
181782-ffffffff8109b603:	49 89 fd             	mov    %rdi,%r13
181783-ffffffff8109b606:	e8 e5 ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181784-ffffffff8109b60b:	4c 8d 65 b8          	lea    -0x48(%rbp),%r12
181785-ffffffff8109b60f:	44 0f b6 fb          	movzbl %bl,%r15d
181786-ffffffff8109b613:	48 8d 5d a0          	lea    -0x60(%rbp),%rbx
181787-ffffffff8109b617:	eb 17                	jmp    ffffffff8109b630 &lt;__cancel_work_timer+0x40&gt;
181788-ffffffff8109b619:	48 c7 c7 a0 42 e4 81 	mov    $0xffffffff81e442a0,%rdi
181789-ffffffff8109b620:	48 89 de             	mov    %rbx,%rsi
181790-ffffffff8109b623:	e8 28 84 03 00       	callq  ffffffff810d3a50 &lt;finish_wait&gt;
181791-ffffffff8109b628:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
181792-ffffffff8109b62f:	00 
181793-ffffffff8109b630:	4c 89 ef             	mov    %r13,%rdi
181794-ffffffff8109b633:	44 89 fe             	mov    %r15d,%esi
181795-ffffffff8109b636:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
181796-ffffffff8109b63a:	e8 91 ed ff ff       	callq  ffffffff8109a3d0 &lt;try_to_grab_pending&gt;
181797-ffffffff8109b63f:	41 89 c6             	mov    %eax,%r14d
181798-ffffffff8109b642:	41 83 fe fe          	cmp    $0xfffffffe,%r14d
181799-ffffffff8109b646:	74 07                	je     ffffffff8109b64f &lt;__cancel_work_timer+0x5f&gt;
181800-ffffffff8109b648:	45 85 f6             	test   %r14d,%r14d
181801-ffffffff8109b64b:	79 7f                	jns    ffffffff8109b6cc &lt;__cancel_work_timer+0xdc&gt;
181802-ffffffff8109b64d:	eb e1                	jmp    ffffffff8109b630 &lt;__cancel_work_timer+0x40&gt;
181803-ffffffff8109b64f:	e8 9c ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181804-ffffffff8109b654:	65 48 8b 04 25 c0 ae 	mov    %gs:0xaec0,%rax
181805-ffffffff8109b65b:	00 00 
181806-ffffffff8109b65d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
181807-ffffffff8109b661:	48 c7 45 b0 d0 39 0d 	movq   $0xffffffff810d39d0,-0x50(%rbp)
181808-ffffffff8109b668:	81 
181809-ffffffff8109b669:	e8 82 ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181810-ffffffff8109b66e:	4c 89 65 b8          	mov    %r12,-0x48(%rbp)
181811-ffffffff8109b672:	4c 89 65 c0          	mov    %r12,-0x40(%rbp)
181812-ffffffff8109b676:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
181813-ffffffff8109b67d:	48 c7 45 b0 70 f4 09 	movq   $0xffffffff8109f470,-0x50(%rbp)
181814-ffffffff8109b684:	81 
181815-ffffffff8109b685:	4c 89 6d c8          	mov    %r13,-0x38(%rbp)
181816-ffffffff8109b689:	48 c7 c7 a0 42 e4 81 	mov    $0xffffffff81e442a0,%rdi
181817-ffffffff8109b690:	ba 02 00 00 00       	mov    $0x2,%edx
181818-ffffffff8109b695:	48 89 de             	mov    %rbx,%rsi
181819-ffffffff8109b698:	e8 e3 80 03 00       	callq  ffffffff810d3780 &lt;prepare_to_wait_exclusive&gt;
181820-ffffffff8109b69d:	e8 4e ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181821-ffffffff8109b6a2:	e8 49 ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181822-ffffffff8109b6a7:	e8 44 ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181823-ffffffff8109b6ac:	e8 3f ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181824-ffffffff8109b6b1:	49 8b 45 00          	mov    0x0(%r13),%rax
181825-ffffffff8109b6b5:	83 e0 14             	and    $0x14,%eax
181826-ffffffff8109b6b8:	48 83 f8 10          	cmp    $0x10,%rax
181827-ffffffff8109b6bc:	0f 85 57 ff ff ff    	jne    ffffffff8109b619 &lt;__cancel_work_timer+0x29&gt;
181828-ffffffff8109b6c2:	e8 39 25 87 00       	callq  ffffffff8190dc00 &lt;schedule&gt;
181829-ffffffff8109b6c7:	e9 4d ff ff ff       	jmpq   ffffffff8109b619 &lt;__cancel_work_timer+0x29&gt;
181830-ffffffff8109b6cc:	e8 1f ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181831-ffffffff8109b6d1:	e8 1a ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181832-ffffffff8109b6d6:	e8 15 ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181833-ffffffff8109b6db:	e8 10 ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181834-ffffffff8109b6e0:	e8 0b ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181835-ffffffff8109b6e5:	49 8b 45 00          	mov    0x0(%r13),%rax
181836-ffffffff8109b6e9:	a8 04                	test   $0x4,%al
181837-ffffffff8109b6eb:	75 06                	jne    ffffffff8109b6f3 &lt;__cancel_work_timer+0x103&gt;
181838-ffffffff8109b6ed:	48 c1 e8 05          	shr    $0x5,%rax
181839-ffffffff8109b6f1:	eb 0c                	jmp    ffffffff8109b6ff &lt;__cancel_work_timer+0x10f&gt;
181840-ffffffff8109b6f3:	48 25 00 ff ff ff    	and    $0xffffffffffffff00,%rax
181841-ffffffff8109b6f9:	48 8b 00             	mov    (%rax),%rax
181842-ffffffff8109b6fc:	8b 40 40             	mov    0x40(%rax),%eax
181843-ffffffff8109b6ff:	48 63 d8             	movslq %eax,%rbx
181844-ffffffff8109b702:	48 c1 e3 05          	shl    $0x5,%rbx
181845-ffffffff8109b706:	e8 e5 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181846-ffffffff8109b70b:	e8 e0 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181847-ffffffff8109b710:	49 8b 45 00          	mov    0x0(%r13),%rax
181848-ffffffff8109b714:	a8 01                	test   $0x1,%al
181849-ffffffff8109b716:	0f 84 eb 00 00 00    	je     ffffffff8109b807 &lt;__cancel_work_timer+0x217&gt;
181850-ffffffff8109b71c:	e8 cf ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181851-ffffffff8109b721:	48 83 cb 11          	or     $0x11,%rbx
181852-ffffffff8109b725:	e8 c6 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181853-ffffffff8109b72a:	e8 c1 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181854-ffffffff8109b72f:	e8 bc ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181855-ffffffff8109b734:	49 89 5d 00          	mov    %rbx,0x0(%r13)
181856-ffffffff8109b738:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
181857-ffffffff8109b73c:	e8 af ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181858-ffffffff8109b741:	f6 c7 02             	test   $0x2,%bh
181859-ffffffff8109b744:	75 19                	jne    ffffffff8109b75f &lt;__cancel_work_timer+0x16f&gt;
181860-ffffffff8109b746:	e8 a5 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181861-ffffffff8109b74b:	e8 a0 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181862-ffffffff8109b750:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
181863-ffffffff8109b754:	ff 75 90             	pushq  -0x70(%rbp)
181864-ffffffff8109b757:	9d                   	popfq  
181865-ffffffff8109b758:	e8 d3 09 04 00       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
181866-ffffffff8109b75d:	eb 17                	jmp    ffffffff8109b776 &lt;__cancel_work_timer+0x186&gt;
181867-ffffffff8109b75f:	e8 dc 09 04 00       	callq  ffffffff810dc140 &lt;trace_hardirqs_on&gt;
181868-ffffffff8109b764:	e8 87 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181869-ffffffff8109b769:	e8 82 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181870-ffffffff8109b76e:	48 89 5d 98          	mov    %rbx,-0x68(%rbp)
181871-ffffffff8109b772:	ff 75 98             	pushq  -0x68(%rbp)
181872-ffffffff8109b775:	9d                   	popfq  
181873-ffffffff8109b776:	4c 89 ef             	mov    %r13,%rdi
181874-ffffffff8109b779:	e8 42 fb ff ff       	callq  ffffffff8109b2c0 &lt;flush_work&gt;
181875-ffffffff8109b77e:	e8 6d ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181876-ffffffff8109b783:	e8 68 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181877-ffffffff8109b788:	e8 63 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181878-ffffffff8109b78d:	49 8b 45 00          	mov    0x0(%r13),%rax
181879-ffffffff8109b791:	a8 01                	test   $0x1,%al
181880-ffffffff8109b793:	0f 84 9b 00 00 00    	je     ffffffff8109b834 &lt;__cancel_work_timer+0x244&gt;
181881-ffffffff8109b799:	e8 52 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181882-ffffffff8109b79e:	e8 4d ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181883-ffffffff8109b7a3:	e8 48 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181884-ffffffff8109b7a8:	e8 43 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181885-ffffffff8109b7ad:	48 b8 e0 ff ff ff 0f 	movabs $0xfffffffe0,%rax
181886-ffffffff8109b7b4:	00 00 00 
181887-ffffffff8109b7b7:	49 89 45 00          	mov    %rax,0x0(%r13)
181888-ffffffff8109b7bb:	0f ae f0             	mfence 
181889-ffffffff8109b7be:	e8 2d ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181890-ffffffff8109b7c3:	e8 28 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181891-ffffffff8109b7c8:	48 c7 c0 d8 42 e4 81 	mov    $0xffffffff81e442d8,%rax
181892-ffffffff8109b7cf:	48 39 04 25 d8 42 e4 	cmp    %rax,0xffffffff81e442d8
181893-ffffffff8109b7d6:	81 
181894-ffffffff8109b7d7:	74 19                	je     ffffffff8109b7f2 &lt;__cancel_work_timer+0x202&gt;
181895-ffffffff8109b7d9:	48 c7 c7 a0 42 e4 81 	mov    $0xffffffff81e442a0,%rdi
181896-ffffffff8109b7e0:	be 03 00 00 00       	mov    $0x3,%esi
181897-ffffffff8109b7e5:	ba 01 00 00 00       	mov    $0x1,%edx
181898-ffffffff8109b7ea:	4c 89 e9             	mov    %r13,%rcx
181899-ffffffff8109b7ed:	e8 2e 7c 03 00       	callq  ffffffff810d3420 &lt;__wake_up&gt;
181900-ffffffff8109b7f2:	45 85 f6             	test   %r14d,%r14d
181901-ffffffff8109b7f5:	0f 95 c0             	setne  %al
181902-ffffffff8109b7f8:	48 83 c4 48          	add    $0x48,%rsp
181903-ffffffff8109b7fc:	5b                   	pop    %rbx
181904-ffffffff8109b7fd:	41 5c                	pop    %r12
181905-ffffffff8109b7ff:	41 5d                	pop    %r13
181906-ffffffff8109b801:	41 5e                	pop    %r14
181907-ffffffff8109b803:	41 5f                	pop    %r15
181908-ffffffff8109b805:	5d                   	pop    %rbp
181909-ffffffff8109b806:	c3                   	retq   
181910-ffffffff8109b807:	8a 04 25 47 d6 23 82 	mov    0xffffffff8223d647,%al
181911-ffffffff8109b80e:	24 01                	and    $0x1,%al
181912-ffffffff8109b810:	0f 85 06 ff ff ff    	jne    ffffffff8109b71c &lt;__cancel_work_timer+0x12c&gt;
181913-ffffffff8109b816:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181914-ffffffff8109b81d:	be 65 02 00 00       	mov    $0x265,%esi
181915-ffffffff8109b822:	e8 39 02 fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
181916-ffffffff8109b827:	c6 04 25 47 d6 23 82 	movb   $0x1,0xffffffff8223d647
181917-ffffffff8109b82e:	01 
181918-ffffffff8109b82f:	e9 e8 fe ff ff       	jmpq   ffffffff8109b71c &lt;__cancel_work_timer+0x12c&gt;
181919-ffffffff8109b834:	8a 04 25 47 d6 23 82 	mov    0xffffffff8223d647,%al
181920-ffffffff8109b83b:	24 01                	and    $0x1,%al
181921-ffffffff8109b83d:	0f 85 56 ff ff ff    	jne    ffffffff8109b799 &lt;__cancel_work_timer+0x1a9&gt;
181922-ffffffff8109b843:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
181923-ffffffff8109b84a:	be 65 02 00 00       	mov    $0x265,%esi
181924-ffffffff8109b84f:	e8 0c 02 fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
181925-ffffffff8109b854:	c6 04 25 47 d6 23 82 	movb   $0x1,0xffffffff8223d647
181926-ffffffff8109b85b:	01 
181927-ffffffff8109b85c:	e9 38 ff ff ff       	jmpq   ffffffff8109b799 &lt;__cancel_work_timer+0x1a9&gt;
181928-ffffffff8109b861:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
181929-ffffffff8109b868:	0f 1f 84 00 00 00 00 
181930-ffffffff8109b86f:	00 
181931-
181932-ffffffff8109b870 &lt;flush_delayed_work&gt;:
181933-ffffffff8109b870:	55                   	push   %rbp
181934-ffffffff8109b871:	48 89 e5             	mov    %rsp,%rbp
181935-ffffffff8109b874:	53                   	push   %rbx
181936-ffffffff8109b875:	50                   	push   %rax
181937-ffffffff8109b876:	48 89 fb             	mov    %rdi,%rbx
181938-ffffffff8109b879:	e8 72 ab 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181939-ffffffff8109b87e:	e8 6d ab 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181940-ffffffff8109b883:	e8 68 ab 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181941-ffffffff8109b888:	fa                   	cli    
181942-ffffffff8109b889:	e8 a2 08 04 00       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
181943-ffffffff8109b88e:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
181944-ffffffff8109b892:	e8 d9 3c 07 00       	callq  ffffffff8110f570 &lt;del_timer_sync&gt;
181945-ffffffff8109b897:	85 c0                	test   %eax,%eax
181946-ffffffff8109b899:	74 15                	je     ffffffff8109b8b0 &lt;flush_delayed_work+0x40&gt;
181947-ffffffff8109b89b:	8b bb b8 00 00 00    	mov    0xb8(%rbx),%edi
181948-ffffffff8109b8a1:	48 8b b3 b0 00 00 00 	mov    0xb0(%rbx),%rsi
181949-ffffffff8109b8a8:	48 89 da             	mov    %rbx,%rdx
181950-ffffffff8109b8ab:	e8 70 e3 ff ff       	callq  ffffffff81099c20 &lt;__queue_work&gt;
181951-ffffffff8109b8b0:	e8 8b 08 04 00       	callq  ffffffff810dc140 &lt;trace_hardirqs_on&gt;
181952-ffffffff8109b8b5:	e8 36 ab 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181953-ffffffff8109b8ba:	e8 31 ab 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181954-ffffffff8109b8bf:	fb                   	sti    
181955-ffffffff8109b8c0:	48 89 df             	mov    %rbx,%rdi
181956-ffffffff8109b8c3:	e8 f8 f9 ff ff       	callq  ffffffff8109b2c0 &lt;flush_work&gt;
181957-ffffffff8109b8c8:	48 83 c4 08          	add    $0x8,%rsp
181958-ffffffff8109b8cc:	5b                   	pop    %rbx
181959-ffffffff8109b8cd:	5d                   	pop    %rbp
181960-ffffffff8109b8ce:	c3                   	retq   
181961-ffffffff8109b8cf:	90                   	nop
181962-
181963-ffffffff8109b8d0 &lt;cancel_delayed_work&gt;:
181964-ffffffff8109b8d0:	55                   	push   %rbp
181965-ffffffff8109b8d1:	48 89 e5             	mov    %rsp,%rbp
181966-ffffffff8109b8d4:	41 57                	push   %r15
181967-ffffffff8109b8d6:	41 56                	push   %r14
181968-ffffffff8109b8d8:	41 54                	push   %r12
181969-ffffffff8109b8da:	53                   	push   %rbx
181970-ffffffff8109b8db:	48 83 ec 20          	sub    $0x20,%rsp
181971-ffffffff8109b8df:	49 89 fe             	mov    %rdi,%r14
181972-ffffffff8109b8e2:	e8 09 ab 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181973-ffffffff8109b8e7:	4c 8d 7d d8          	lea    -0x28(%rbp),%r15
181974-ffffffff8109b8eb:	be 01 00 00 00       	mov    $0x1,%esi
181975-ffffffff8109b8f0:	4c 89 f7             	mov    %r14,%rdi
181976-ffffffff8109b8f3:	4c 89 fa             	mov    %r15,%rdx
181977-ffffffff8109b8f6:	e8 d5 ea ff ff       	callq  ffffffff8109a3d0 &lt;try_to_grab_pending&gt;
181978-ffffffff8109b8fb:	41 89 c4             	mov    %eax,%r12d
181979-ffffffff8109b8fe:	41 83 fc f5          	cmp    $0xfffffff5,%r12d
181980-ffffffff8109b902:	74 e7                	je     ffffffff8109b8eb &lt;cancel_delayed_work+0x1b&gt;
181981-ffffffff8109b904:	45 85 e4             	test   %r12d,%r12d
181982-ffffffff8109b907:	0f 88 89 00 00 00    	js     ffffffff8109b996 &lt;cancel_delayed_work+0xc6&gt;
181983-ffffffff8109b90d:	e8 de aa 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181984-ffffffff8109b912:	e8 d9 aa 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181985-ffffffff8109b917:	e8 d4 aa 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181986-ffffffff8109b91c:	e8 cf aa 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181987-ffffffff8109b921:	49 8b 36             	mov    (%r14),%rsi
181988-ffffffff8109b924:	40 f6 c6 04          	test   $0x4,%sil
181989-ffffffff8109b928:	75 06                	jne    ffffffff8109b930 &lt;cancel_delayed_work+0x60&gt;
181990-ffffffff8109b92a:	48 c1 ee 05          	shr    $0x5,%rsi
181991-ffffffff8109b92e:	eb 0d                	jmp    ffffffff8109b93d &lt;cancel_delayed_work+0x6d&gt;
181992-ffffffff8109b930:	48 81 e6 00 ff ff ff 	and    $0xffffffffffffff00,%rsi
181993-ffffffff8109b937:	48 8b 06             	mov    (%rsi),%rax
181994-ffffffff8109b93a:	8b 70 40             	mov    0x40(%rax),%esi
181995-ffffffff8109b93d:	4c 89 f7             	mov    %r14,%rdi
181996-ffffffff8109b940:	e8 5b 00 00 00       	callq  ffffffff8109b9a0 &lt;set_work_pool_and_clear_pending&gt;
181997-ffffffff8109b945:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
181998-ffffffff8109b949:	e8 a2 aa 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
181999-ffffffff8109b94e:	f6 c7 02             	test   $0x2,%bh
182000-ffffffff8109b951:	75 19                	jne    ffffffff8109b96c &lt;cancel_delayed_work+0x9c&gt;
182001-ffffffff8109b953:	e8 98 aa 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
182002-ffffffff8109b958:	e8 93 aa 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
182003-ffffffff8109b95d:	48 89 5d c8          	mov    %rbx,-0x38(%rbp)
182004-ffffffff8109b961:	ff 75 c8             	pushq  -0x38(%rbp)
182005-ffffffff8109b964:	9d                   	popfq  
182006-ffffffff8109b965:	e8 c6 07 04 00       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
182007-ffffffff8109b96a:	eb 17                	jmp    ffffffff8109b983 &lt;cancel_delayed_work+0xb3&gt;
182008-ffffffff8109b96c:	e8 cf 07 04 00       	callq  ffffffff810dc140 &lt;trace_hardirqs_on&gt;
182009-ffffffff8109b971:	e8 7a aa 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
182010-ffffffff8109b976:	e8 75 aa 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
182011-ffffffff8109b97b:	48 89 5d d0          	mov    %rbx,-0x30(%rbp)
182012-ffffffff8109b97f:	ff 75 d0             	pushq  -0x30(%rbp)
182013-ffffffff8109b982:	9d                   	popfq  
182014-ffffffff8109b983:	45 85 e4             	test   %r12d,%r12d
182015-ffffffff8109b986:	0f 95 c0             	setne  %al
182016-ffffffff8109b989:	48 83 c4 20          	add    $0x20,%rsp
182017-ffffffff8109b98d:	5b                   	pop    %rbx
182018-ffffffff8109b98e:	41 5c                	pop    %r12
182019-ffffffff8109b990:	41 5e                	pop    %r14
182020-ffffffff8109b992:	41 5f                	pop    %r15
182021-ffffffff8109b994:	5d                   	pop    %rbp
182022-ffffffff8109b995:	c3                   	retq   
182023-ffffffff8109b996:	31 c0                	xor    %eax,%eax
182024-ffffffff8109b998:	eb ef                	jmp    ffffffff8109b989 &lt;cancel_delayed_work+0xb9&gt;
182025-ffffffff8109b99a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
182026-
182027-ffffffff8109b9a0 &lt;set_work_pool_and_clear_pending&gt;:
182028-ffffffff8109b9a0:	55                   	push   %rbp
182029-ffffffff8109b9a1:	48 89 e5             	mov    %rsp,%rbp
182030-ffffffff8109b9a4:	41 56                	push   %r14
182031-ffffffff8109b9a6:	53                   	push   %rbx
182032-ffffffff8109b9a7:	89 f3                	mov    %esi,%ebx
182033-ffffffff8109b9a9:	49 89 fe             	mov    %rdi,%r14
182034-ffffffff8109b9ac:	e8 3f aa 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
182035-ffffffff8109b9b1:	48 63 db             	movslq %ebx,%rbx
182036-ffffffff8109b9b4:	48 c1 e3 05          	shl    $0x5,%rbx
182037-ffffffff8109b9b8:	e8 33 aa 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
182038-ffffffff8109b9bd:	e8 2e aa 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
182039-ffffffff8109b9c2:	49 8b 06             	mov    (%r14),%rax
182040-ffffffff8109b9c5:	a8 01                	test   $0x1,%al
182041-ffffffff8109b9c7:	74 1c                	je     ffffffff8109b9e5 &lt;set_work_pool_and_clear_pending+0x45&gt;
182042-ffffffff8109b9c9:	e8 22 aa 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
182043-ffffffff8109b9ce:	e8 1d aa 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
182044-ffffffff8109b9d3:	e8 18 aa 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
182045-ffffffff8109b9d8:	e8 13 aa 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
182046-ffffffff8109b9dd:	49 89 1e             	mov    %rbx,(%r14)
182047-ffffffff8109b9e0:	5b                   	pop    %rbx
182048-ffffffff8109b9e1:	41 5e                	pop    %r14
182049-ffffffff8109b9e3:	5d                   	pop    %rbp
182050-ffffffff8109b9e4:	c3                   	retq   
182051-ffffffff8109b9e5:	8a 04 25 47 d6 23 82 	mov    0xffffffff8223d647,%al
182052-ffffffff8109b9ec:	24 01                	and    $0x1,%al
182053-ffffffff8109b9ee:	75 d9                	jne    ffffffff8109b9c9 &lt;set_work_pool_and_clear_pending+0x29&gt;
182054-ffffffff8109b9f0:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
182055-ffffffff8109b9f7:	be 65 02 00 00       	mov    $0x265,%esi
182056-ffffffff8109b9fc:	e8 5f 00 fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
182057-ffffffff8109ba01:	c6 04 25 47 d6 23 82 	movb   $0x1,0xffffffff8223d647
182058-ffffffff8109ba08:	01 
182059-ffffffff8109ba09:	eb be                	jmp    ffffffff8109b9c9 &lt;set_work_pool_and_clear_pending+0x29&gt;
182060-ffffffff8109ba0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
182061-
182062-ffffffff8109ba10 &lt;cancel_delayed_work_sync&gt;:
182063-ffffffff8109ba10:	55                   	push   %rbp
182064-ffffffff8109ba11:	48 89 e5             	mov    %rsp,%rbp
182065-ffffffff8109ba14:	53                   	push   %rbx
182066-ffffffff8109ba15:	50                   	push   %rax
182067-ffffffff8109ba16:	48 89 fb             	mov    %rdi,%rbx
182068-ffffffff8109ba19:	e8 d2 a9 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
182069-ffffffff8109ba1e:	be 01 00 00 00       	mov    $0x1,%esi
182070-ffffffff8109ba23:	48 89 df             	mov    %rbx,%rdi
182071-ffffffff8109ba26:	e8 c5 fb ff ff       	callq  ffffffff8109b5f0 &lt;__cancel_work_timer&gt;
182072-ffffffff8109ba2b:	48 83 c4 08          	add    $0x8,%rsp
182073-ffffffff8109ba2f:	5b                   	pop    %rbx
182074-ffffffff8109ba30:	5d                   	pop    %rbp
182075-ffffffff8109ba31:	c3                   	retq   
182076-ffffffff8109ba32:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
182077-ffffffff8109ba39:	1f 84 00 00 00 00 00 
182078-
310375:ffffffff8110f3f0 &lt;del_timer&gt;:
310376-ffffffff8110f3f0:	55                   	push   %rbp
310377-ffffffff8110f3f1:	48 89 e5             	mov    %rsp,%rbp
310378-ffffffff8110f3f4:	41 57                	push   %r15
310379-ffffffff8110f3f6:	41 56                	push   %r14
310380-ffffffff8110f3f8:	53                   	push   %rbx
310381-ffffffff8110f3f9:	50                   	push   %rax
310382-ffffffff8110f3fa:	48 89 fb             	mov    %rdi,%rbx
310383-ffffffff8110f3fd:	e8 ee 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310384-ffffffff8110f402:	e8 e9 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310385-ffffffff8110f407:	e8 e4 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310386-ffffffff8110f40c:	e8 df 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310387-ffffffff8110f411:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
310388-ffffffff8110f418:	00 
310389-ffffffff8110f419:	e8 d2 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310390-ffffffff8110f41e:	45 31 f6             	xor    %r14d,%r14d
310391-ffffffff8110f421:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
310392-ffffffff8110f426:	74 78                	je     ffffffff8110f4a0 &lt;del_timer+0xb0&gt;
310393-ffffffff8110f428:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
310394-ffffffff8110f42c:	48 89 df             	mov    %rbx,%rdi
310395-ffffffff8110f42f:	e8 fc fc ff ff       	callq  ffffffff8110f130 &lt;lock_timer_base&gt;
310396-ffffffff8110f434:	49 89 c7             	mov    %rax,%r15
310397-ffffffff8110f437:	e8 b4 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310398-ffffffff8110f43c:	e8 af 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310399-ffffffff8110f441:	45 31 f6             	xor    %r14d,%r14d
310400-ffffffff8110f444:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
310401-ffffffff8110f449:	74 41                	je     ffffffff8110f48c &lt;del_timer+0x9c&gt;
310402-ffffffff8110f44b:	41 be 01 00 00 00    	mov    $0x1,%r14d
310403-ffffffff8110f451:	be 01 00 00 00       	mov    $0x1,%esi
310404-ffffffff8110f456:	48 89 df             	mov    %rbx,%rdi
310405-ffffffff8110f459:	e8 62 11 00 00       	callq  ffffffff811105c0 &lt;detach_timer&gt;
310406-ffffffff8110f45e:	f6 43 2a 10          	testb  $0x10,0x2a(%rbx)
310407-ffffffff8110f462:	75 16                	jne    ffffffff8110f47a &lt;del_timer+0x8a&gt;
310408-ffffffff8110f464:	49 ff 4f 50          	decq   0x50(%r15)
310409-ffffffff8110f468:	48 8b 43 10          	mov    0x10(%rbx),%rax
310410-ffffffff8110f46c:	49 3b 47 48          	cmp    0x48(%r15),%rax
310411-ffffffff8110f470:	75 08                	jne    ffffffff8110f47a &lt;del_timer+0x8a&gt;
310412-ffffffff8110f472:	49 8b 47 40          	mov    0x40(%r15),%rax
310413-ffffffff8110f476:	49 89 47 48          	mov    %rax,0x48(%r15)
310414-ffffffff8110f47a:	49 ff 4f 58          	decq   0x58(%r15)
310415-ffffffff8110f47e:	75 0c                	jne    ffffffff8110f48c &lt;del_timer+0x9c&gt;
310416-ffffffff8110f480:	48 8b 04 25 00 a0 e0 	mov    0xffffffff81e0a000,%rax
310417-ffffffff8110f487:	81 
310418-ffffffff8110f488:	49 89 47 40          	mov    %rax,0x40(%r15)
310419-ffffffff8110f48c:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
310420-ffffffff8110f490:	e8 5b 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310421-ffffffff8110f495:	4c 89 ff             	mov    %r15,%rdi
310422-ffffffff8110f498:	48 89 de             	mov    %rbx,%rsi
310423-ffffffff8110f49b:	e8 c0 3d 80 00       	callq  ffffffff81913260 &lt;_raw_spin_unlock_irqrestore&gt;
310424-ffffffff8110f4a0:	44 89 f0             	mov    %r14d,%eax
310425-ffffffff8110f4a3:	48 83 c4 08          	add    $0x8,%rsp
310426-ffffffff8110f4a7:	5b                   	pop    %rbx
310427-ffffffff8110f4a8:	41 5e                	pop    %r14
310428-ffffffff8110f4aa:	41 5f                	pop    %r15
310429-ffffffff8110f4ac:	5d                   	pop    %rbp
310430-ffffffff8110f4ad:	c3                   	retq   
310431-ffffffff8110f4ae:	66 90                	xchg   %ax,%ax
310432-
310433-ffffffff8110f4b0 &lt;try_to_del_timer_sync&gt;:
310434-ffffffff8110f4b0:	55                   	push   %rbp
310435-ffffffff8110f4b1:	48 89 e5             	mov    %rsp,%rbp
310436-ffffffff8110f4b4:	41 57                	push   %r15
310437-ffffffff8110f4b6:	41 56                	push   %r14
310438-ffffffff8110f4b8:	53                   	push   %rbx
310439-ffffffff8110f4b9:	50                   	push   %rax
310440-ffffffff8110f4ba:	48 89 fb             	mov    %rdi,%rbx
310441-ffffffff8110f4bd:	e8 2e 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310442-ffffffff8110f4c2:	e8 29 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310443-ffffffff8110f4c7:	e8 24 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310444-ffffffff8110f4cc:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
310445-ffffffff8110f4d0:	48 89 df             	mov    %rbx,%rdi
310446-ffffffff8110f4d3:	e8 58 fc ff ff       	callq  ffffffff8110f130 &lt;lock_timer_base&gt;
310447-ffffffff8110f4d8:	49 89 c6             	mov    %rax,%r14
310448-ffffffff8110f4db:	41 bf ff ff ff ff    	mov    $0xffffffff,%r15d
310449-ffffffff8110f4e1:	49 39 5e 38          	cmp    %rbx,0x38(%r14)
310450-ffffffff8110f4e5:	74 62                	je     ffffffff8110f549 &lt;try_to_del_timer_sync+0x99&gt;
310451-ffffffff8110f4e7:	e8 04 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310452-ffffffff8110f4ec:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
310453-ffffffff8110f4f3:	00 
310454-ffffffff8110f4f4:	e8 f7 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310455-ffffffff8110f4f9:	e8 f2 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310456-ffffffff8110f4fe:	45 31 ff             	xor    %r15d,%r15d
310457-ffffffff8110f501:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
310458-ffffffff8110f506:	74 41                	je     ffffffff8110f549 &lt;try_to_del_timer_sync+0x99&gt;
310459-ffffffff8110f508:	41 bf 01 00 00 00    	mov    $0x1,%r15d
310460-ffffffff8110f50e:	be 01 00 00 00       	mov    $0x1,%esi
310461-ffffffff8110f513:	48 89 df             	mov    %rbx,%rdi
310462-ffffffff8110f516:	e8 a5 10 00 00       	callq  ffffffff811105c0 &lt;detach_timer&gt;
310463-ffffffff8110f51b:	f6 43 2a 10          	testb  $0x10,0x2a(%rbx)
310464-ffffffff8110f51f:	75 16                	jne    ffffffff8110f537 &lt;try_to_del_timer_sync+0x87&gt;
310465-ffffffff8110f521:	49 ff 4e 50          	decq   0x50(%r14)
310466-ffffffff8110f525:	48 8b 43 10          	mov    0x10(%rbx),%rax
310467-ffffffff8110f529:	49 3b 46 48          	cmp    0x48(%r14),%rax
310468-ffffffff8110f52d:	75 08                	jne    ffffffff8110f537 &lt;try_to_del_timer_sync+0x87&gt;
310469-ffffffff8110f52f:	49 8b 46 40          	mov    0x40(%r14),%rax
310470-ffffffff8110f533:	49 89 46 48          	mov    %rax,0x48(%r14)
310471-ffffffff8110f537:	49 ff 4e 58          	decq   0x58(%r14)
310472-ffffffff8110f53b:	75 0c                	jne    ffffffff8110f549 &lt;try_to_del_timer_sync+0x99&gt;
310473-ffffffff8110f53d:	48 8b 04 25 00 a0 e0 	mov    0xffffffff81e0a000,%rax
310474-ffffffff8110f544:	81 
310475-ffffffff8110f545:	49 89 46 40          	mov    %rax,0x40(%r14)
310476-ffffffff8110f549:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
310477-ffffffff8110f54d:	e8 9e 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310478-ffffffff8110f552:	4c 89 f7             	mov    %r14,%rdi
310479-ffffffff8110f555:	48 89 de             	mov    %rbx,%rsi
310480-ffffffff8110f558:	e8 03 3d 80 00       	callq  ffffffff81913260 &lt;_raw_spin_unlock_irqrestore&gt;
310481-ffffffff8110f55d:	44 89 f8             	mov    %r15d,%eax
310482-ffffffff8110f560:	48 83 c4 08          	add    $0x8,%rsp
310483-ffffffff8110f564:	5b                   	pop    %rbx
310484-ffffffff8110f565:	41 5e                	pop    %r14
310485-ffffffff8110f567:	41 5f                	pop    %r15
310486-ffffffff8110f569:	5d                   	pop    %rbp
310487-ffffffff8110f56a:	c3                   	retq   
310488-ffffffff8110f56b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
310489-
310490-ffffffff8110f570 &lt;del_timer_sync&gt;:
310491-ffffffff8110f570:	55                   	push   %rbp
310492-ffffffff8110f571:	48 89 e5             	mov    %rsp,%rbp
310493-ffffffff8110f574:	41 57                	push   %r15
310494-ffffffff8110f576:	41 56                	push   %r14
310495-ffffffff8110f578:	53                   	push   %rbx
310496-ffffffff8110f579:	48 83 ec 28          	sub    $0x28,%rsp
310497-ffffffff8110f57d:	48 89 fb             	mov    %rdi,%rbx
310498-ffffffff8110f580:	e8 6b 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310499-ffffffff8110f585:	e8 66 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310500-ffffffff8110f58a:	e8 61 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310501-ffffffff8110f58f:	e8 5c 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310502-ffffffff8110f594:	9c                   	pushfq 
310503-ffffffff8110f595:	8f 45 e0             	popq   -0x20(%rbp)
310504-ffffffff8110f598:	4c 8b 7d e0          	mov    -0x20(%rbp),%r15
310505-ffffffff8110f59c:	e8 4f 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310506-ffffffff8110f5a1:	e8 4a 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310507-ffffffff8110f5a6:	fa                   	cli    
310508-ffffffff8110f5a7:	e8 84 cb fc ff       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
310509-ffffffff8110f5ac:	4c 8d 73 50          	lea    0x50(%rbx),%r14
310510-ffffffff8110f5b0:	48 c7 04 24 b0 f5 10 	movq   $0xffffffff8110f5b0,(%rsp)
310511-ffffffff8110f5b7:	81 
310512-ffffffff8110f5b8:	31 f6                	xor    %esi,%esi
310513-ffffffff8110f5ba:	31 d2                	xor    %edx,%edx
310514-ffffffff8110f5bc:	31 c9                	xor    %ecx,%ecx
310515-ffffffff8110f5be:	41 b8 01 00 00 00    	mov    $0x1,%r8d
310516-ffffffff8110f5c4:	45 31 c9             	xor    %r9d,%r9d
310517-ffffffff8110f5c7:	4c 89 f7             	mov    %r14,%rdi
310518-ffffffff8110f5ca:	e8 c1 e5 fc ff       	callq  ffffffff810ddb90 &lt;lock_acquire&gt;
310519-ffffffff8110f5cf:	be 01 00 00 00       	mov    $0x1,%esi
310520-ffffffff8110f5d4:	48 c7 c2 cf f5 10 81 	mov    $0xffffffff8110f5cf,%rdx
310521-ffffffff8110f5db:	4c 89 f7             	mov    %r14,%rdi
310522-ffffffff8110f5de:	e8 8d 08 fd ff       	callq  ffffffff810dfe70 &lt;lock_release&gt;
310523-ffffffff8110f5e3:	e8 08 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310524-ffffffff8110f5e8:	4c 89 f8             	mov    %r15,%rax
310525-ffffffff8110f5eb:	49 89 c6             	mov    %rax,%r14
310526-ffffffff8110f5ee:	f6 c4 02             	test   $0x2,%ah
310527-ffffffff8110f5f1:	75 19                	jne    ffffffff8110f60c &lt;del_timer_sync+0x9c&gt;
310528-ffffffff8110f5f3:	e8 f8 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310529-ffffffff8110f5f8:	e8 f3 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310530-ffffffff8110f5fd:	4c 89 75 d0          	mov    %r14,-0x30(%rbp)
310531-ffffffff8110f601:	ff 75 d0             	pushq  -0x30(%rbp)
310532-ffffffff8110f604:	9d                   	popfq  
310533-ffffffff8110f605:	e8 26 cb fc ff       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
310534-ffffffff8110f60a:	eb 17                	jmp    ffffffff8110f623 &lt;del_timer_sync+0xb3&gt;
310535-ffffffff8110f60c:	e8 2f cb fc ff       	callq  ffffffff810dc140 &lt;trace_hardirqs_on&gt;
310536-ffffffff8110f611:	e8 da 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310537-ffffffff8110f616:	e8 d5 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310538-ffffffff8110f61b:	4c 89 75 d8          	mov    %r14,-0x28(%rbp)
310539-ffffffff8110f61f:	ff 75 d8             	pushq  -0x28(%rbp)
310540-ffffffff8110f622:	9d                   	popfq  
310541-ffffffff8110f623:	e8 c8 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310542-ffffffff8110f628:	65 8b 04 25 d4 ae 00 	mov    %gs:0xaed4,%eax
310543-ffffffff8110f62f:	00 
310544-ffffffff8110f630:	a9 00 00 0f 00       	test   $0xf0000,%eax
310545-ffffffff8110f635:	74 25                	je     ffffffff8110f65c &lt;del_timer_sync+0xec&gt;
310546-ffffffff8110f637:	f6 43 2a 20          	testb  $0x20,0x2a(%rbx)
310547-ffffffff8110f63b:	75 1f                	jne    ffffffff8110f65c &lt;del_timer_sync+0xec&gt;
310548-ffffffff8110f63d:	48 c7 c7 04 54 c5 81 	mov    $0xffffffff81c55404,%rdi
310549-ffffffff8110f644:	be 61 04 00 00       	mov    $0x461,%esi
310550-ffffffff8110f649:	e8 12 c4 f6 ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
310551-ffffffff8110f64e:	eb 0c                	jmp    ffffffff8110f65c &lt;del_timer_sync+0xec&gt;
310552-ffffffff8110f650:	e8 9b 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310553-ffffffff8110f655:	e8 96 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
310554-ffffffff8110f65a:	f3 90                	pause  
310555-ffffffff8110f65c:	48 89 df             	mov    %rbx,%rdi
310556-ffffffff8110f65f:	e8 4c fe ff ff       	callq  ffffffff8110f4b0 &lt;try_to_del_timer_sync&gt;
310557-ffffffff8110f664:	85 c0                	test   %eax,%eax
310558-ffffffff8110f666:	78 e8                	js     ffffffff8110f650 &lt;del_timer_sync+0xe0&gt;
310559-ffffffff8110f668:	48 83 c4 28          	add    $0x28,%rsp
310560-ffffffff8110f66c:	5b                   	pop    %rbx
310561-ffffffff8110f66d:	41 5e                	pop    %r14
310562-ffffffff8110f66f:	41 5f                	pop    %r15
310563-ffffffff8110f671:	5d                   	pop    %rbp
310564-ffffffff8110f672:	c3                   	retq   
310565-ffffffff8110f673:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
310566-ffffffff8110f67a:	84 00 00 00 00 00 
310567-
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41441">Sedat Dilek</a> - March 2, 2016, 3:53 p.m.</div>
<pre class="content">
On 3/2/16, Peter Zijlstra &lt;peterz@infradead.org&gt; wrote:
<span class="quote">&gt; On Wed, Mar 02, 2016 at 04:00:49PM +0100, Sedat Dilek wrote:</span>
<span class="quote">&gt;&gt; &gt;</span>
<span class="quote">&gt;&gt; &gt; Right, most odd. Sedat, could you provide objdump -D of the relevant</span>
<span class="quote">&gt;&gt; &gt; sections of vmlinux ?</span>
<span class="quote">&gt;&gt; &gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Can you give some clear instructions - for what shall I look for in</span>
<span class="quote">&gt;&gt; special?</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; objdump -D vmlinux | awk &#39;/&lt;[^&gt;]*&gt;:$/ { p=0; } /&lt;del_timer_sync&gt;:/ { p=1; }</span>
<span class="quote">&gt; { if (p) print $0; }&#39;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; might be a good start, esp. if the output differs between the LLVM and</span>
<span class="quote">&gt; GCC cases (+- address muck).</span>
<span class="quote">&gt;</span>

Here the most relevant objdumps as single files.

- Sedat -
ffffffff8109b5d0 &lt;cancel_work_sync&gt;:
ffffffff8109b5d0:	55                   	push   %rbp
ffffffff8109b5d1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8109b5d4:	53                   	push   %rbx
ffffffff8109b5d5:	50                   	push   %rax
ffffffff8109b5d6:	48 89 fb             	mov    %rdi,%rbx
ffffffff8109b5d9:	e8 12 ae 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b5de:	31 f6                	xor    %esi,%esi
ffffffff8109b5e0:	48 89 df             	mov    %rbx,%rdi
ffffffff8109b5e3:	e8 08 00 00 00       	callq  ffffffff8109b5f0 &lt;__cancel_work_timer&gt;
ffffffff8109b5e8:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8109b5ec:	5b                   	pop    %rbx
ffffffff8109b5ed:	5d                   	pop    %rbp
ffffffff8109b5ee:	c3                   	retq   
ffffffff8109b5ef:	90                   	nop
ffffffff8109b5f0 &lt;__cancel_work_timer&gt;:
ffffffff8109b5f0:	55                   	push   %rbp
ffffffff8109b5f1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8109b5f4:	41 57                	push   %r15
ffffffff8109b5f6:	41 56                	push   %r14
ffffffff8109b5f8:	41 55                	push   %r13
ffffffff8109b5fa:	41 54                	push   %r12
ffffffff8109b5fc:	53                   	push   %rbx
ffffffff8109b5fd:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff8109b601:	89 f3                	mov    %esi,%ebx
ffffffff8109b603:	49 89 fd             	mov    %rdi,%r13
ffffffff8109b606:	e8 e5 ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b60b:	4c 8d 65 b8          	lea    -0x48(%rbp),%r12
ffffffff8109b60f:	44 0f b6 fb          	movzbl %bl,%r15d
ffffffff8109b613:	48 8d 5d a0          	lea    -0x60(%rbp),%rbx
ffffffff8109b617:	eb 17                	jmp    ffffffff8109b630 &lt;__cancel_work_timer+0x40&gt;
ffffffff8109b619:	48 c7 c7 a0 42 e4 81 	mov    $0xffffffff81e442a0,%rdi
ffffffff8109b620:	48 89 de             	mov    %rbx,%rsi
ffffffff8109b623:	e8 28 84 03 00       	callq  ffffffff810d3a50 &lt;finish_wait&gt;
ffffffff8109b628:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8109b62f:	00 
ffffffff8109b630:	4c 89 ef             	mov    %r13,%rdi
ffffffff8109b633:	44 89 fe             	mov    %r15d,%esi
ffffffff8109b636:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
ffffffff8109b63a:	e8 91 ed ff ff       	callq  ffffffff8109a3d0 &lt;try_to_grab_pending&gt;
ffffffff8109b63f:	41 89 c6             	mov    %eax,%r14d
ffffffff8109b642:	41 83 fe fe          	cmp    $0xfffffffe,%r14d
ffffffff8109b646:	74 07                	je     ffffffff8109b64f &lt;__cancel_work_timer+0x5f&gt;
ffffffff8109b648:	45 85 f6             	test   %r14d,%r14d
ffffffff8109b64b:	79 7f                	jns    ffffffff8109b6cc &lt;__cancel_work_timer+0xdc&gt;
ffffffff8109b64d:	eb e1                	jmp    ffffffff8109b630 &lt;__cancel_work_timer+0x40&gt;
ffffffff8109b64f:	e8 9c ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b654:	65 48 8b 04 25 c0 ae 	mov    %gs:0xaec0,%rax
ffffffff8109b65b:	00 00 
ffffffff8109b65d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff8109b661:	48 c7 45 b0 d0 39 0d 	movq   $0xffffffff810d39d0,-0x50(%rbp)
ffffffff8109b668:	81 
ffffffff8109b669:	e8 82 ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b66e:	4c 89 65 b8          	mov    %r12,-0x48(%rbp)
ffffffff8109b672:	4c 89 65 c0          	mov    %r12,-0x40(%rbp)
ffffffff8109b676:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
ffffffff8109b67d:	48 c7 45 b0 70 f4 09 	movq   $0xffffffff8109f470,-0x50(%rbp)
ffffffff8109b684:	81 
ffffffff8109b685:	4c 89 6d c8          	mov    %r13,-0x38(%rbp)
ffffffff8109b689:	48 c7 c7 a0 42 e4 81 	mov    $0xffffffff81e442a0,%rdi
ffffffff8109b690:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff8109b695:	48 89 de             	mov    %rbx,%rsi
ffffffff8109b698:	e8 e3 80 03 00       	callq  ffffffff810d3780 &lt;prepare_to_wait_exclusive&gt;
ffffffff8109b69d:	e8 4e ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b6a2:	e8 49 ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b6a7:	e8 44 ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b6ac:	e8 3f ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b6b1:	49 8b 45 00          	mov    0x0(%r13),%rax
ffffffff8109b6b5:	83 e0 14             	and    $0x14,%eax
ffffffff8109b6b8:	48 83 f8 10          	cmp    $0x10,%rax
ffffffff8109b6bc:	0f 85 57 ff ff ff    	jne    ffffffff8109b619 &lt;__cancel_work_timer+0x29&gt;
ffffffff8109b6c2:	e8 39 25 87 00       	callq  ffffffff8190dc00 &lt;schedule&gt;
ffffffff8109b6c7:	e9 4d ff ff ff       	jmpq   ffffffff8109b619 &lt;__cancel_work_timer+0x29&gt;
ffffffff8109b6cc:	e8 1f ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b6d1:	e8 1a ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b6d6:	e8 15 ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b6db:	e8 10 ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b6e0:	e8 0b ad 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b6e5:	49 8b 45 00          	mov    0x0(%r13),%rax
ffffffff8109b6e9:	a8 04                	test   $0x4,%al
ffffffff8109b6eb:	75 06                	jne    ffffffff8109b6f3 &lt;__cancel_work_timer+0x103&gt;
ffffffff8109b6ed:	48 c1 e8 05          	shr    $0x5,%rax
ffffffff8109b6f1:	eb 0c                	jmp    ffffffff8109b6ff &lt;__cancel_work_timer+0x10f&gt;
ffffffff8109b6f3:	48 25 00 ff ff ff    	and    $0xffffffffffffff00,%rax
ffffffff8109b6f9:	48 8b 00             	mov    (%rax),%rax
ffffffff8109b6fc:	8b 40 40             	mov    0x40(%rax),%eax
ffffffff8109b6ff:	48 63 d8             	movslq %eax,%rbx
ffffffff8109b702:	48 c1 e3 05          	shl    $0x5,%rbx
ffffffff8109b706:	e8 e5 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b70b:	e8 e0 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b710:	49 8b 45 00          	mov    0x0(%r13),%rax
ffffffff8109b714:	a8 01                	test   $0x1,%al
ffffffff8109b716:	0f 84 eb 00 00 00    	je     ffffffff8109b807 &lt;__cancel_work_timer+0x217&gt;
ffffffff8109b71c:	e8 cf ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b721:	48 83 cb 11          	or     $0x11,%rbx
ffffffff8109b725:	e8 c6 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b72a:	e8 c1 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b72f:	e8 bc ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b734:	49 89 5d 00          	mov    %rbx,0x0(%r13)
ffffffff8109b738:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
ffffffff8109b73c:	e8 af ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b741:	f6 c7 02             	test   $0x2,%bh
ffffffff8109b744:	75 19                	jne    ffffffff8109b75f &lt;__cancel_work_timer+0x16f&gt;
ffffffff8109b746:	e8 a5 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b74b:	e8 a0 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b750:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
ffffffff8109b754:	ff 75 90             	pushq  -0x70(%rbp)
ffffffff8109b757:	9d                   	popfq  
ffffffff8109b758:	e8 d3 09 04 00       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
ffffffff8109b75d:	eb 17                	jmp    ffffffff8109b776 &lt;__cancel_work_timer+0x186&gt;
ffffffff8109b75f:	e8 dc 09 04 00       	callq  ffffffff810dc140 &lt;trace_hardirqs_on&gt;
ffffffff8109b764:	e8 87 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b769:	e8 82 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b76e:	48 89 5d 98          	mov    %rbx,-0x68(%rbp)
ffffffff8109b772:	ff 75 98             	pushq  -0x68(%rbp)
ffffffff8109b775:	9d                   	popfq  
ffffffff8109b776:	4c 89 ef             	mov    %r13,%rdi
ffffffff8109b779:	e8 42 fb ff ff       	callq  ffffffff8109b2c0 &lt;flush_work&gt;
ffffffff8109b77e:	e8 6d ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b783:	e8 68 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b788:	e8 63 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b78d:	49 8b 45 00          	mov    0x0(%r13),%rax
ffffffff8109b791:	a8 01                	test   $0x1,%al
ffffffff8109b793:	0f 84 9b 00 00 00    	je     ffffffff8109b834 &lt;__cancel_work_timer+0x244&gt;
ffffffff8109b799:	e8 52 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b79e:	e8 4d ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b7a3:	e8 48 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b7a8:	e8 43 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b7ad:	48 b8 e0 ff ff ff 0f 	movabs $0xfffffffe0,%rax
ffffffff8109b7b4:	00 00 00 
ffffffff8109b7b7:	49 89 45 00          	mov    %rax,0x0(%r13)
ffffffff8109b7bb:	0f ae f0             	mfence 
ffffffff8109b7be:	e8 2d ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b7c3:	e8 28 ac 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b7c8:	48 c7 c0 d8 42 e4 81 	mov    $0xffffffff81e442d8,%rax
ffffffff8109b7cf:	48 39 04 25 d8 42 e4 	cmp    %rax,0xffffffff81e442d8
ffffffff8109b7d6:	81 
ffffffff8109b7d7:	74 19                	je     ffffffff8109b7f2 &lt;__cancel_work_timer+0x202&gt;
ffffffff8109b7d9:	48 c7 c7 a0 42 e4 81 	mov    $0xffffffff81e442a0,%rdi
ffffffff8109b7e0:	be 03 00 00 00       	mov    $0x3,%esi
ffffffff8109b7e5:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff8109b7ea:	4c 89 e9             	mov    %r13,%rcx
ffffffff8109b7ed:	e8 2e 7c 03 00       	callq  ffffffff810d3420 &lt;__wake_up&gt;
ffffffff8109b7f2:	45 85 f6             	test   %r14d,%r14d
ffffffff8109b7f5:	0f 95 c0             	setne  %al
ffffffff8109b7f8:	48 83 c4 48          	add    $0x48,%rsp
ffffffff8109b7fc:	5b                   	pop    %rbx
ffffffff8109b7fd:	41 5c                	pop    %r12
ffffffff8109b7ff:	41 5d                	pop    %r13
ffffffff8109b801:	41 5e                	pop    %r14
ffffffff8109b803:	41 5f                	pop    %r15
ffffffff8109b805:	5d                   	pop    %rbp
ffffffff8109b806:	c3                   	retq   
ffffffff8109b807:	8a 04 25 47 d6 23 82 	mov    0xffffffff8223d647,%al
ffffffff8109b80e:	24 01                	and    $0x1,%al
ffffffff8109b810:	0f 85 06 ff ff ff    	jne    ffffffff8109b71c &lt;__cancel_work_timer+0x12c&gt;
ffffffff8109b816:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
ffffffff8109b81d:	be 65 02 00 00       	mov    $0x265,%esi
ffffffff8109b822:	e8 39 02 fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
ffffffff8109b827:	c6 04 25 47 d6 23 82 	movb   $0x1,0xffffffff8223d647
ffffffff8109b82e:	01 
ffffffff8109b82f:	e9 e8 fe ff ff       	jmpq   ffffffff8109b71c &lt;__cancel_work_timer+0x12c&gt;
ffffffff8109b834:	8a 04 25 47 d6 23 82 	mov    0xffffffff8223d647,%al
ffffffff8109b83b:	24 01                	and    $0x1,%al
ffffffff8109b83d:	0f 85 56 ff ff ff    	jne    ffffffff8109b799 &lt;__cancel_work_timer+0x1a9&gt;
ffffffff8109b843:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
ffffffff8109b84a:	be 65 02 00 00       	mov    $0x265,%esi
ffffffff8109b84f:	e8 0c 02 fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
ffffffff8109b854:	c6 04 25 47 d6 23 82 	movb   $0x1,0xffffffff8223d647
ffffffff8109b85b:	01 
ffffffff8109b85c:	e9 38 ff ff ff       	jmpq   ffffffff8109b799 &lt;__cancel_work_timer+0x1a9&gt;
ffffffff8109b861:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
ffffffff8109b868:	0f 1f 84 00 00 00 00 
ffffffff8109b86f:	00
ffffffff8110f3f0 &lt;del_timer&gt;:
ffffffff8110f3f0:	55                   	push   %rbp
ffffffff8110f3f1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8110f3f4:	41 57                	push   %r15
ffffffff8110f3f6:	41 56                	push   %r14
ffffffff8110f3f8:	53                   	push   %rbx
ffffffff8110f3f9:	50                   	push   %rax
ffffffff8110f3fa:	48 89 fb             	mov    %rdi,%rbx
ffffffff8110f3fd:	e8 ee 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f402:	e8 e9 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f407:	e8 e4 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f40c:	e8 df 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f411:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
ffffffff8110f418:	00 
ffffffff8110f419:	e8 d2 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f41e:	45 31 f6             	xor    %r14d,%r14d
ffffffff8110f421:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
ffffffff8110f426:	74 78                	je     ffffffff8110f4a0 &lt;del_timer+0xb0&gt;
ffffffff8110f428:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
ffffffff8110f42c:	48 89 df             	mov    %rbx,%rdi
ffffffff8110f42f:	e8 fc fc ff ff       	callq  ffffffff8110f130 &lt;lock_timer_base&gt;
ffffffff8110f434:	49 89 c7             	mov    %rax,%r15
ffffffff8110f437:	e8 b4 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f43c:	e8 af 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f441:	45 31 f6             	xor    %r14d,%r14d
ffffffff8110f444:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
ffffffff8110f449:	74 41                	je     ffffffff8110f48c &lt;del_timer+0x9c&gt;
ffffffff8110f44b:	41 be 01 00 00 00    	mov    $0x1,%r14d
ffffffff8110f451:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8110f456:	48 89 df             	mov    %rbx,%rdi
ffffffff8110f459:	e8 62 11 00 00       	callq  ffffffff811105c0 &lt;detach_timer&gt;
ffffffff8110f45e:	f6 43 2a 10          	testb  $0x10,0x2a(%rbx)
ffffffff8110f462:	75 16                	jne    ffffffff8110f47a &lt;del_timer+0x8a&gt;
ffffffff8110f464:	49 ff 4f 50          	decq   0x50(%r15)
ffffffff8110f468:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffff8110f46c:	49 3b 47 48          	cmp    0x48(%r15),%rax
ffffffff8110f470:	75 08                	jne    ffffffff8110f47a &lt;del_timer+0x8a&gt;
ffffffff8110f472:	49 8b 47 40          	mov    0x40(%r15),%rax
ffffffff8110f476:	49 89 47 48          	mov    %rax,0x48(%r15)
ffffffff8110f47a:	49 ff 4f 58          	decq   0x58(%r15)
ffffffff8110f47e:	75 0c                	jne    ffffffff8110f48c &lt;del_timer+0x9c&gt;
ffffffff8110f480:	48 8b 04 25 00 a0 e0 	mov    0xffffffff81e0a000,%rax
ffffffff8110f487:	81 
ffffffff8110f488:	49 89 47 40          	mov    %rax,0x40(%r15)
ffffffff8110f48c:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
ffffffff8110f490:	e8 5b 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f495:	4c 89 ff             	mov    %r15,%rdi
ffffffff8110f498:	48 89 de             	mov    %rbx,%rsi
ffffffff8110f49b:	e8 c0 3d 80 00       	callq  ffffffff81913260 &lt;_raw_spin_unlock_irqrestore&gt;
ffffffff8110f4a0:	44 89 f0             	mov    %r14d,%eax
ffffffff8110f4a3:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8110f4a7:	5b                   	pop    %rbx
ffffffff8110f4a8:	41 5e                	pop    %r14
ffffffff8110f4aa:	41 5f                	pop    %r15
ffffffff8110f4ac:	5d                   	pop    %rbp
ffffffff8110f4ad:	c3                   	retq   
ffffffff8110f4ae:	66 90                	xchg   %ax,%ax
ffffffff8110f570 &lt;del_timer_sync&gt;:
ffffffff8110f570:	55                   	push   %rbp
ffffffff8110f571:	48 89 e5             	mov    %rsp,%rbp
ffffffff8110f574:	41 57                	push   %r15
ffffffff8110f576:	41 56                	push   %r14
ffffffff8110f578:	53                   	push   %rbx
ffffffff8110f579:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8110f57d:	48 89 fb             	mov    %rdi,%rbx
ffffffff8110f580:	e8 6b 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f585:	e8 66 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f58a:	e8 61 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f58f:	e8 5c 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f594:	9c                   	pushfq 
ffffffff8110f595:	8f 45 e0             	popq   -0x20(%rbp)
ffffffff8110f598:	4c 8b 7d e0          	mov    -0x20(%rbp),%r15
ffffffff8110f59c:	e8 4f 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f5a1:	e8 4a 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f5a6:	fa                   	cli    
ffffffff8110f5a7:	e8 84 cb fc ff       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
ffffffff8110f5ac:	4c 8d 73 50          	lea    0x50(%rbx),%r14
ffffffff8110f5b0:	48 c7 04 24 b0 f5 10 	movq   $0xffffffff8110f5b0,(%rsp)
ffffffff8110f5b7:	81 
ffffffff8110f5b8:	31 f6                	xor    %esi,%esi
ffffffff8110f5ba:	31 d2                	xor    %edx,%edx
ffffffff8110f5bc:	31 c9                	xor    %ecx,%ecx
ffffffff8110f5be:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff8110f5c4:	45 31 c9             	xor    %r9d,%r9d
ffffffff8110f5c7:	4c 89 f7             	mov    %r14,%rdi
ffffffff8110f5ca:	e8 c1 e5 fc ff       	callq  ffffffff810ddb90 &lt;lock_acquire&gt;
ffffffff8110f5cf:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8110f5d4:	48 c7 c2 cf f5 10 81 	mov    $0xffffffff8110f5cf,%rdx
ffffffff8110f5db:	4c 89 f7             	mov    %r14,%rdi
ffffffff8110f5de:	e8 8d 08 fd ff       	callq  ffffffff810dfe70 &lt;lock_release&gt;
ffffffff8110f5e3:	e8 08 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f5e8:	4c 89 f8             	mov    %r15,%rax
ffffffff8110f5eb:	49 89 c6             	mov    %rax,%r14
ffffffff8110f5ee:	f6 c4 02             	test   $0x2,%ah
ffffffff8110f5f1:	75 19                	jne    ffffffff8110f60c &lt;del_timer_sync+0x9c&gt;
ffffffff8110f5f3:	e8 f8 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f5f8:	e8 f3 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f5fd:	4c 89 75 d0          	mov    %r14,-0x30(%rbp)
ffffffff8110f601:	ff 75 d0             	pushq  -0x30(%rbp)
ffffffff8110f604:	9d                   	popfq  
ffffffff8110f605:	e8 26 cb fc ff       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
ffffffff8110f60a:	eb 17                	jmp    ffffffff8110f623 &lt;del_timer_sync+0xb3&gt;
ffffffff8110f60c:	e8 2f cb fc ff       	callq  ffffffff810dc140 &lt;trace_hardirqs_on&gt;
ffffffff8110f611:	e8 da 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f616:	e8 d5 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f61b:	4c 89 75 d8          	mov    %r14,-0x28(%rbp)
ffffffff8110f61f:	ff 75 d8             	pushq  -0x28(%rbp)
ffffffff8110f622:	9d                   	popfq  
ffffffff8110f623:	e8 c8 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f628:	65 8b 04 25 d4 ae 00 	mov    %gs:0xaed4,%eax
ffffffff8110f62f:	00 
ffffffff8110f630:	a9 00 00 0f 00       	test   $0xf0000,%eax
ffffffff8110f635:	74 25                	je     ffffffff8110f65c &lt;del_timer_sync+0xec&gt;
ffffffff8110f637:	f6 43 2a 20          	testb  $0x20,0x2a(%rbx)
ffffffff8110f63b:	75 1f                	jne    ffffffff8110f65c &lt;del_timer_sync+0xec&gt;
ffffffff8110f63d:	48 c7 c7 04 54 c5 81 	mov    $0xffffffff81c55404,%rdi
ffffffff8110f644:	be 61 04 00 00       	mov    $0x461,%esi
ffffffff8110f649:	e8 12 c4 f6 ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
ffffffff8110f64e:	eb 0c                	jmp    ffffffff8110f65c &lt;del_timer_sync+0xec&gt;
ffffffff8110f650:	e8 9b 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f655:	e8 96 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f65a:	f3 90                	pause  
ffffffff8110f65c:	48 89 df             	mov    %rbx,%rdi
ffffffff8110f65f:	e8 4c fe ff ff       	callq  ffffffff8110f4b0 &lt;try_to_del_timer_sync&gt;
ffffffff8110f664:	85 c0                	test   %eax,%eax
ffffffff8110f666:	78 e8                	js     ffffffff8110f650 &lt;del_timer_sync+0xe0&gt;
ffffffff8110f668:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8110f66c:	5b                   	pop    %rbx
ffffffff8110f66d:	41 5e                	pop    %r14
ffffffff8110f66f:	41 5f                	pop    %r15
ffffffff8110f671:	5d                   	pop    %rbp
ffffffff8110f672:	c3                   	retq   
ffffffff8110f673:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
ffffffff8110f67a:	84 00 00 00 00 00
ffffffff8109b2c0 &lt;flush_work&gt;:
ffffffff8109b2c0:	55                   	push   %rbp
ffffffff8109b2c1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8109b2c4:	41 56                	push   %r14
ffffffff8109b2c6:	53                   	push   %rbx
ffffffff8109b2c7:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
ffffffff8109b2ce:	49 89 fe             	mov    %rdi,%r14
ffffffff8109b2d1:	e8 1a b1 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b2d6:	49 8d 5e 20          	lea    0x20(%r14),%rbx
ffffffff8109b2da:	48 c7 04 24 da b2 09 	movq   $0xffffffff8109b2da,(%rsp)
ffffffff8109b2e1:	81 
ffffffff8109b2e2:	31 f6                	xor    %esi,%esi
ffffffff8109b2e4:	31 d2                	xor    %edx,%edx
ffffffff8109b2e6:	31 c9                	xor    %ecx,%ecx
ffffffff8109b2e8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff8109b2ee:	45 31 c9             	xor    %r9d,%r9d
ffffffff8109b2f1:	48 89 df             	mov    %rbx,%rdi
ffffffff8109b2f4:	e8 97 28 04 00       	callq  ffffffff810ddb90 &lt;lock_acquire&gt;
ffffffff8109b2f9:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8109b2fe:	48 c7 c2 f9 b2 09 81 	mov    $0xffffffff8109b2f9,%rdx
ffffffff8109b305:	48 89 df             	mov    %rbx,%rdi
ffffffff8109b308:	e8 63 4b 04 00       	callq  ffffffff810dfe70 &lt;lock_release&gt;
ffffffff8109b30d:	48 8d b5 58 ff ff ff 	lea    -0xa8(%rbp),%rsi
ffffffff8109b314:	4c 89 f7             	mov    %r14,%rdi
ffffffff8109b317:	e8 24 00 00 00       	callq  ffffffff8109b340 &lt;start_flush_work&gt;
ffffffff8109b31c:	84 c0                	test   %al,%al
ffffffff8109b31e:	74 12                	je     ffffffff8109b332 &lt;flush_work+0x72&gt;
ffffffff8109b320:	48 8d 7d 98          	lea    -0x68(%rbp),%rdi
ffffffff8109b324:	e8 77 42 87 00       	callq  ffffffff8190f5a0 &lt;wait_for_completion&gt;
ffffffff8109b329:	e8 c2 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b32e:	b0 01                	mov    $0x1,%al
ffffffff8109b330:	eb 02                	jmp    ffffffff8109b334 &lt;flush_work+0x74&gt;
ffffffff8109b332:	31 c0                	xor    %eax,%eax
ffffffff8109b334:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
ffffffff8109b33b:	5b                   	pop    %rbx
ffffffff8109b33c:	41 5e                	pop    %r14
ffffffff8109b33e:	5d                   	pop    %rbp
ffffffff8109b33f:	c3                   	retq
ffffffff8109b340 &lt;start_flush_work&gt;:
ffffffff8109b340:	55                   	push   %rbp
ffffffff8109b341:	48 89 e5             	mov    %rsp,%rbp
ffffffff8109b344:	41 57                	push   %r15
ffffffff8109b346:	41 56                	push   %r14
ffffffff8109b348:	41 55                	push   %r13
ffffffff8109b34a:	41 54                	push   %r12
ffffffff8109b34c:	53                   	push   %rbx
ffffffff8109b34d:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8109b351:	49 89 f7             	mov    %rsi,%r15
ffffffff8109b354:	49 89 fe             	mov    %rdi,%r14
ffffffff8109b357:	e8 94 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b35c:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
ffffffff8109b363:	be 76 0a 00 00       	mov    $0xa76,%esi
ffffffff8109b368:	31 d2                	xor    %edx,%edx
ffffffff8109b36a:	e8 41 dc 01 00       	callq  ffffffff810b8fb0 &lt;__might_sleep&gt;
ffffffff8109b36f:	e8 3c 33 87 00       	callq  ffffffff8190e6b0 &lt;_cond_resched&gt;
ffffffff8109b374:	e8 77 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b379:	e8 72 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b37e:	fa                   	cli    
ffffffff8109b37f:	e8 ac 0d 04 00       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
ffffffff8109b384:	4c 89 f7             	mov    %r14,%rdi
ffffffff8109b387:	e8 c4 23 00 00       	callq  ffffffff8109d750 &lt;get_work_pool&gt;
ffffffff8109b38c:	49 89 c5             	mov    %rax,%r13
ffffffff8109b38f:	4d 85 ed             	test   %r13,%r13
ffffffff8109b392:	0f 84 f3 00 00 00    	je     ffffffff8109b48b &lt;start_flush_work+0x14b&gt;
ffffffff8109b398:	e8 53 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b39d:	4c 89 ef             	mov    %r13,%rdi
ffffffff8109b3a0:	e8 cb 7c 87 00       	callq  ffffffff81913070 &lt;_raw_spin_lock&gt;
ffffffff8109b3a5:	e8 46 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b3aa:	e8 41 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b3af:	e8 3c b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b3b4:	e8 37 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b3b9:	49 8b 06             	mov    (%r14),%rax
ffffffff8109b3bc:	49 89 c4             	mov    %rax,%r12
ffffffff8109b3bf:	49 c1 e4 3d          	shl    $0x3d,%r12
ffffffff8109b3c3:	49 c1 fc 3f          	sar    $0x3f,%r12
ffffffff8109b3c7:	49 21 c4             	and    %rax,%r12
ffffffff8109b3ca:	49 81 e4 00 ff ff ff 	and    $0xffffffffffffff00,%r12
ffffffff8109b3d1:	0f 84 cb 00 00 00    	je     ffffffff8109b4a2 &lt;start_flush_work+0x162&gt;
ffffffff8109b3d7:	31 db                	xor    %ebx,%ebx
ffffffff8109b3d9:	4d 39 2c 24          	cmp    %r13,(%r12)
ffffffff8109b3dd:	0f 85 0e 01 00 00    	jne    ffffffff8109b4f1 &lt;start_flush_work+0x1b1&gt;
ffffffff8109b3e3:	4c 89 6d d0          	mov    %r13,-0x30(%rbp)
ffffffff8109b3e7:	e8 04 b0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b3ec:	e8 ff af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b3f1:	48 b8 e0 ff ff ff 0f 	movabs $0xfffffffe0,%rax
ffffffff8109b3f8:	00 00 00 
ffffffff8109b3fb:	49 89 07             	mov    %rax,(%r15)
ffffffff8109b3fe:	49 8d 7f 20          	lea    0x20(%r15),%rdi
ffffffff8109b402:	48 c7 c6 b4 d9 c4 81 	mov    $0xffffffff81c4d9b4,%rsi
ffffffff8109b409:	48 c7 c2 59 d6 23 82 	mov    $0xffffffff8223d659,%rdx
ffffffff8109b410:	31 c9                	xor    %ecx,%ecx
ffffffff8109b412:	e8 d9 1b 04 00       	callq  ffffffff810dcff0 &lt;lockdep_init_map&gt;
ffffffff8109b417:	4d 8d 6f 08          	lea    0x8(%r15),%r13
ffffffff8109b41b:	e8 d0 af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b420:	4d 89 6f 08          	mov    %r13,0x8(%r15)
ffffffff8109b424:	4d 89 6f 10          	mov    %r13,0x10(%r15)
ffffffff8109b428:	49 c7 47 18 40 f4 09 	movq   $0xffffffff8109f440,0x18(%r15)
ffffffff8109b42f:	81 
ffffffff8109b430:	e8 bb af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b435:	41 0f ba 2f 00       	btsl   $0x0,(%r15)
ffffffff8109b43a:	e8 b1 af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b43f:	41 c7 47 40 00 00 00 	movl   $0x0,0x40(%r15)
ffffffff8109b446:	00 
ffffffff8109b447:	49 8d 7f 48          	lea    0x48(%r15),%rdi
ffffffff8109b44b:	48 c7 c6 2f 56 c4 81 	mov    $0xffffffff81c4562f,%rsi
ffffffff8109b452:	48 c7 c2 4d d6 23 82 	mov    $0xffffffff8223d64d,%rdx
ffffffff8109b459:	e8 d2 7d 03 00       	callq  ffffffff810d3230 &lt;__init_waitqueue_head&gt;
ffffffff8109b45e:	e8 8d af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b463:	65 48 8b 04 25 c0 ae 	mov    %gs:0xaec0,%rax
ffffffff8109b46a:	00 00 
ffffffff8109b46c:	49 89 87 90 00 00 00 	mov    %rax,0x90(%r15)
ffffffff8109b473:	48 85 db             	test   %rbx,%rbx
ffffffff8109b476:	0f 84 89 00 00 00    	je     ffffffff8109b505 &lt;start_flush_work+0x1c5&gt;
ffffffff8109b47c:	48 8b 5b 30          	mov    0x30(%rbx),%rbx
ffffffff8109b480:	41 bd f0 00 00 00    	mov    $0xf0,%r13d
ffffffff8109b486:	e9 96 00 00 00       	jmpq   ffffffff8109b521 &lt;start_flush_work+0x1e1&gt;
ffffffff8109b48b:	e8 b0 0c 04 00       	callq  ffffffff810dc140 &lt;trace_hardirqs_on&gt;
ffffffff8109b490:	e8 5b af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b495:	e8 56 af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b49a:	fb                   	sti    
ffffffff8109b49b:	31 c0                	xor    %eax,%eax
ffffffff8109b49d:	e9 1f 01 00 00       	jmpq   ffffffff8109b5c1 &lt;start_flush_work+0x281&gt;
ffffffff8109b4a2:	e8 49 af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b4a7:	e8 44 af 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b4ac:	48 b8 01 00 fc ff ff 	movabs $0x9e37fffffffc0001,%rax
ffffffff8109b4b3:	ff 37 9e 
ffffffff8109b4b6:	49 0f af c6          	imul   %r14,%rax
ffffffff8109b4ba:	48 c1 e8 3a          	shr    $0x3a,%rax
ffffffff8109b4be:	49 8b 9c c5 50 01 00 	mov    0x150(%r13,%rax,8),%rbx
ffffffff8109b4c5:	00 
ffffffff8109b4c6:	eb 0b                	jmp    ffffffff8109b4d3 &lt;start_flush_work+0x193&gt;
ffffffff8109b4c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8109b4cf:	00 
ffffffff8109b4d0:	48 8b 1b             	mov    (%rbx),%rbx
ffffffff8109b4d3:	48 85 db             	test   %rbx,%rbx
ffffffff8109b4d6:	74 19                	je     ffffffff8109b4f1 &lt;start_flush_work+0x1b1&gt;
ffffffff8109b4d8:	4c 39 73 10          	cmp    %r14,0x10(%rbx)
ffffffff8109b4dc:	75 f2                	jne    ffffffff8109b4d0 &lt;start_flush_work+0x190&gt;
ffffffff8109b4de:	48 8b 43 18          	mov    0x18(%rbx),%rax
ffffffff8109b4e2:	49 3b 46 18          	cmp    0x18(%r14),%rax
ffffffff8109b4e6:	75 e8                	jne    ffffffff8109b4d0 &lt;start_flush_work+0x190&gt;
ffffffff8109b4e8:	4c 8b 63 20          	mov    0x20(%rbx),%r12
ffffffff8109b4ec:	e9 f2 fe ff ff       	jmpq   ffffffff8109b3e3 &lt;start_flush_work+0xa3&gt;
ffffffff8109b4f1:	e8 fa ae 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b4f6:	4c 89 ef             	mov    %r13,%rdi
ffffffff8109b4f9:	e8 f2 7d 87 00       	callq  ffffffff819132f0 &lt;_raw_spin_unlock_irq&gt;
ffffffff8109b4fe:	31 c0                	xor    %eax,%eax
ffffffff8109b500:	e9 bc 00 00 00       	jmpq   ffffffff8109b5c1 &lt;start_flush_work+0x281&gt;
ffffffff8109b505:	49 8b 5e 08          	mov    0x8(%r14),%rbx
ffffffff8109b509:	45 8b 2e             	mov    (%r14),%r13d
ffffffff8109b50c:	41 83 e5 08          	and    $0x8,%r13d
ffffffff8109b510:	e8 db ae 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b515:	41 0f ba 2e 03       	btsl   $0x3,(%r14)
ffffffff8109b51a:	41 81 cd f0 00 00 00 	or     $0xf0,%r13d
ffffffff8109b521:	e8 ca ae 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b526:	e8 c5 ae 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b52b:	4c 89 e7             	mov    %r12,%rdi
ffffffff8109b52e:	4c 89 fe             	mov    %r15,%rsi
ffffffff8109b531:	48 89 da             	mov    %rbx,%rdx
ffffffff8109b534:	44 89 e9             	mov    %r13d,%ecx
ffffffff8109b537:	e8 c4 3a 00 00       	callq  ffffffff8109f000 &lt;insert_work&gt;
ffffffff8109b53c:	e8 af ae 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109b541:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8109b545:	e8 a6 7d 87 00       	callq  ffffffff819132f0 &lt;_raw_spin_unlock_irq&gt;
ffffffff8109b54a:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
ffffffff8109b54f:	83 bf f4 00 00 00 01 	cmpl   $0x1,0xf4(%rdi)
ffffffff8109b556:	74 0a                	je     ffffffff8109b562 &lt;start_flush_work+0x222&gt;
ffffffff8109b558:	48 83 bf e8 00 00 00 	cmpq   $0x0,0xe8(%rdi)
ffffffff8109b55f:	00 
ffffffff8109b560:	74 17                	je     ffffffff8109b579 &lt;start_flush_work+0x239&gt;
ffffffff8109b562:	48 81 c7 10 01 00 00 	add    $0x110,%rdi
ffffffff8109b569:	48 c7 04 24 62 b5 09 	movq   $0xffffffff8109b562,(%rsp)
ffffffff8109b570:	81 
ffffffff8109b571:	31 f6                	xor    %esi,%esi
ffffffff8109b573:	31 d2                	xor    %edx,%edx
ffffffff8109b575:	31 c9                	xor    %ecx,%ecx
ffffffff8109b577:	eb 1b                	jmp    ffffffff8109b594 &lt;start_flush_work+0x254&gt;
ffffffff8109b579:	48 81 c7 10 01 00 00 	add    $0x110,%rdi
ffffffff8109b580:	48 c7 04 24 79 b5 09 	movq   $0xffffffff8109b579,(%rsp)
ffffffff8109b587:	81 
ffffffff8109b588:	be 00 00 00 00       	mov    $0x0,%esi
ffffffff8109b58d:	31 d2                	xor    %edx,%edx
ffffffff8109b58f:	b9 02 00 00 00       	mov    $0x2,%ecx
ffffffff8109b594:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff8109b59a:	45 31 c9             	xor    %r9d,%r9d
ffffffff8109b59d:	e8 ee 25 04 00       	callq  ffffffff810ddb90 &lt;lock_acquire&gt;
ffffffff8109b5a2:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
ffffffff8109b5a7:	48 81 c7 10 01 00 00 	add    $0x110,%rdi
ffffffff8109b5ae:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8109b5b3:	48 c7 c2 a2 b5 09 81 	mov    $0xffffffff8109b5a2,%rdx
ffffffff8109b5ba:	e8 b1 48 04 00       	callq  ffffffff810dfe70 &lt;lock_release&gt;
ffffffff8109b5bf:	b0 01                	mov    $0x1,%al
ffffffff8109b5c1:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8109b5c5:	5b                   	pop    %rbx
ffffffff8109b5c6:	41 5c                	pop    %r12
ffffffff8109b5c8:	41 5d                	pop    %r13
ffffffff8109b5ca:	41 5e                	pop    %r14
ffffffff8109b5cc:	41 5f                	pop    %r15
ffffffff8109b5ce:	5d                   	pop    %rbp
ffffffff8109b5cf:	c3                   	retq
ffffffff8110f4b0 &lt;try_to_del_timer_sync&gt;:
ffffffff8110f4b0:	55                   	push   %rbp
ffffffff8110f4b1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8110f4b4:	41 57                	push   %r15
ffffffff8110f4b6:	41 56                	push   %r14
ffffffff8110f4b8:	53                   	push   %rbx
ffffffff8110f4b9:	50                   	push   %rax
ffffffff8110f4ba:	48 89 fb             	mov    %rdi,%rbx
ffffffff8110f4bd:	e8 2e 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f4c2:	e8 29 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f4c7:	e8 24 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f4cc:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
ffffffff8110f4d0:	48 89 df             	mov    %rbx,%rdi
ffffffff8110f4d3:	e8 58 fc ff ff       	callq  ffffffff8110f130 &lt;lock_timer_base&gt;
ffffffff8110f4d8:	49 89 c6             	mov    %rax,%r14
ffffffff8110f4db:	41 bf ff ff ff ff    	mov    $0xffffffff,%r15d
ffffffff8110f4e1:	49 39 5e 38          	cmp    %rbx,0x38(%r14)
ffffffff8110f4e5:	74 62                	je     ffffffff8110f549 &lt;try_to_del_timer_sync+0x99&gt;
ffffffff8110f4e7:	e8 04 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f4ec:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
ffffffff8110f4f3:	00 
ffffffff8110f4f4:	e8 f7 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f4f9:	e8 f2 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f4fe:	45 31 ff             	xor    %r15d,%r15d
ffffffff8110f501:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
ffffffff8110f506:	74 41                	je     ffffffff8110f549 &lt;try_to_del_timer_sync+0x99&gt;
ffffffff8110f508:	41 bf 01 00 00 00    	mov    $0x1,%r15d
ffffffff8110f50e:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8110f513:	48 89 df             	mov    %rbx,%rdi
ffffffff8110f516:	e8 a5 10 00 00       	callq  ffffffff811105c0 &lt;detach_timer&gt;
ffffffff8110f51b:	f6 43 2a 10          	testb  $0x10,0x2a(%rbx)
ffffffff8110f51f:	75 16                	jne    ffffffff8110f537 &lt;try_to_del_timer_sync+0x87&gt;
ffffffff8110f521:	49 ff 4e 50          	decq   0x50(%r14)
ffffffff8110f525:	48 8b 43 10          	mov    0x10(%rbx),%rax
ffffffff8110f529:	49 3b 46 48          	cmp    0x48(%r14),%rax
ffffffff8110f52d:	75 08                	jne    ffffffff8110f537 &lt;try_to_del_timer_sync+0x87&gt;
ffffffff8110f52f:	49 8b 46 40          	mov    0x40(%r14),%rax
ffffffff8110f533:	49 89 46 48          	mov    %rax,0x48(%r14)
ffffffff8110f537:	49 ff 4e 58          	decq   0x58(%r14)
ffffffff8110f53b:	75 0c                	jne    ffffffff8110f549 &lt;try_to_del_timer_sync+0x99&gt;
ffffffff8110f53d:	48 8b 04 25 00 a0 e0 	mov    0xffffffff81e0a000,%rax
ffffffff8110f544:	81 
ffffffff8110f545:	49 89 46 40          	mov    %rax,0x40(%r14)
ffffffff8110f549:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
ffffffff8110f54d:	e8 9e 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8110f552:	4c 89 f7             	mov    %r14,%rdi
ffffffff8110f555:	48 89 de             	mov    %rbx,%rsi
ffffffff8110f558:	e8 03 3d 80 00       	callq  ffffffff81913260 &lt;_raw_spin_unlock_irqrestore&gt;
ffffffff8110f55d:	44 89 f8             	mov    %r15d,%eax
ffffffff8110f560:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8110f564:	5b                   	pop    %rbx
ffffffff8110f565:	41 5e                	pop    %r14
ffffffff8110f567:	41 5f                	pop    %r15
ffffffff8110f569:	5d                   	pop    %rbp
ffffffff8110f56a:	c3                   	retq   
ffffffff8110f56b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8109a3d0 &lt;try_to_grab_pending&gt;:
ffffffff8109a3d0:	55                   	push   %rbp
ffffffff8109a3d1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8109a3d4:	41 57                	push   %r15
ffffffff8109a3d6:	41 56                	push   %r14
ffffffff8109a3d8:	41 55                	push   %r13
ffffffff8109a3da:	41 54                	push   %r12
ffffffff8109a3dc:	53                   	push   %rbx
ffffffff8109a3dd:	48 83 ec 48          	sub    $0x48,%rsp
ffffffff8109a3e1:	49 89 d5             	mov    %rdx,%r13
ffffffff8109a3e4:	41 89 f6             	mov    %esi,%r14d
ffffffff8109a3e7:	49 89 fc             	mov    %rdi,%r12
ffffffff8109a3ea:	e8 01 c0 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a3ef:	e8 fc bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a3f4:	e8 f7 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a3f9:	e8 f2 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a3fe:	9c                   	pushfq 
ffffffff8109a3ff:	8f 45 d0             	popq   -0x30(%rbp)
ffffffff8109a402:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
ffffffff8109a406:	e8 e5 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a40b:	e8 e0 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a410:	fa                   	cli    
ffffffff8109a411:	49 89 5d 00          	mov    %rbx,0x0(%r13)
ffffffff8109a415:	e8 16 1d 04 00       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
ffffffff8109a41a:	45 84 f6             	test   %r14b,%r14b
ffffffff8109a41d:	74 1e                	je     ffffffff8109a43d &lt;try_to_grab_pending+0x6d&gt;
ffffffff8109a41f:	e8 cc bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a424:	49 8d 7c 24 40       	lea    0x40(%r12),%rdi
ffffffff8109a429:	e8 c2 4f 07 00       	callq  ffffffff8110f3f0 &lt;del_timer&gt;
ffffffff8109a42e:	89 c1                	mov    %eax,%ecx
ffffffff8109a430:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8109a435:	85 c9                	test   %ecx,%ecx
ffffffff8109a437:	0f 85 e6 02 00 00    	jne    ffffffff8109a723 &lt;try_to_grab_pending+0x353&gt;
ffffffff8109a43d:	e8 ae bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a442:	f0 41 0f ba 2c 24 00 	lock btsl $0x0,(%r12)
ffffffff8109a449:	0f 92 45 d0          	setb   -0x30(%rbp)
ffffffff8109a44d:	31 c0                	xor    %eax,%eax
ffffffff8109a44f:	80 7d d0 00          	cmpb   $0x0,-0x30(%rbp)
ffffffff8109a453:	0f 84 ca 02 00 00    	je     ffffffff8109a723 &lt;try_to_grab_pending+0x353&gt;
ffffffff8109a459:	4c 89 e7             	mov    %r12,%rdi
ffffffff8109a45c:	e8 ef 32 00 00       	callq  ffffffff8109d750 &lt;get_work_pool&gt;
ffffffff8109a461:	48 89 c3             	mov    %rax,%rbx
ffffffff8109a464:	48 85 db             	test   %rbx,%rbx
ffffffff8109a467:	74 47                	je     ffffffff8109a4b0 &lt;try_to_grab_pending+0xe0&gt;
ffffffff8109a469:	e8 82 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a46e:	48 89 df             	mov    %rbx,%rdi
ffffffff8109a471:	e8 fa 8b 87 00       	callq  ffffffff81913070 &lt;_raw_spin_lock&gt;
ffffffff8109a476:	e8 75 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a47b:	e8 70 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a480:	e8 6b bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a485:	e8 66 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a48a:	49 8b 04 24          	mov    (%r12),%rax
ffffffff8109a48e:	a8 04                	test   $0x4,%al
ffffffff8109a490:	74 11                	je     ffffffff8109a4a3 &lt;try_to_grab_pending+0xd3&gt;
ffffffff8109a492:	48 25 00 ff ff ff    	and    $0xffffffffffffff00,%rax
ffffffff8109a498:	74 09                	je     ffffffff8109a4a3 &lt;try_to_grab_pending+0xd3&gt;
ffffffff8109a49a:	48 39 18             	cmp    %rbx,(%rax)
ffffffff8109a49d:	0f 84 93 00 00 00    	je     ffffffff8109a536 &lt;try_to_grab_pending+0x166&gt;
ffffffff8109a4a3:	e8 48 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a4a8:	48 89 df             	mov    %rbx,%rdi
ffffffff8109a4ab:	e8 60 8d 87 00       	callq  ffffffff81913210 &lt;_raw_spin_unlock&gt;
ffffffff8109a4b0:	41 8b 5d 00          	mov    0x0(%r13),%ebx
ffffffff8109a4b4:	e8 37 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a4b9:	f6 c7 02             	test   $0x2,%bh
ffffffff8109a4bc:	75 1d                	jne    ffffffff8109a4db &lt;try_to_grab_pending+0x10b&gt;
ffffffff8109a4be:	49 8b 5d 00          	mov    0x0(%r13),%rbx
ffffffff8109a4c2:	e8 29 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a4c7:	e8 24 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a4cc:	48 89 5d c0          	mov    %rbx,-0x40(%rbp)
ffffffff8109a4d0:	ff 75 c0             	pushq  -0x40(%rbp)
ffffffff8109a4d3:	9d                   	popfq  
ffffffff8109a4d4:	e8 57 1c 04 00       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;
ffffffff8109a4d9:	eb 1b                	jmp    ffffffff8109a4f6 &lt;try_to_grab_pending+0x126&gt;
ffffffff8109a4db:	e8 60 1c 04 00       	callq  ffffffff810dc140 &lt;trace_hardirqs_on&gt;
ffffffff8109a4e0:	49 8b 5d 00          	mov    0x0(%r13),%rbx
ffffffff8109a4e4:	e8 07 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a4e9:	e8 02 bf 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a4ee:	48 89 5d c8          	mov    %rbx,-0x38(%rbp)
ffffffff8109a4f2:	ff 75 c8             	pushq  -0x38(%rbp)
ffffffff8109a4f5:	9d                   	popfq  
ffffffff8109a4f6:	e8 f5 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a4fb:	e8 f0 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a500:	e8 eb be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a505:	e8 e6 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a50a:	49 8b 0c 24          	mov    (%r12),%rcx
ffffffff8109a50e:	83 e1 14             	and    $0x14,%ecx
ffffffff8109a511:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
ffffffff8109a516:	48 83 f9 10          	cmp    $0x10,%rcx
ffffffff8109a51a:	0f 84 03 02 00 00    	je     ffffffff8109a723 &lt;try_to_grab_pending+0x353&gt;
ffffffff8109a520:	e8 cb be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a525:	e8 c6 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a52a:	f3 90                	pause  
ffffffff8109a52c:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
ffffffff8109a531:	e9 ed 01 00 00       	jmpq   ffffffff8109a723 &lt;try_to_grab_pending+0x353&gt;
ffffffff8109a536:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8109a53a:	e8 b1 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a53f:	41 f6 04 24 02       	testb  $0x2,(%r12)
ffffffff8109a544:	75 0a                	jne    ffffffff8109a550 &lt;try_to_grab_pending+0x180&gt;
ffffffff8109a546:	4d 8d 6c 24 08       	lea    0x8(%r12),%r13
ffffffff8109a54b:	e9 3a 01 00 00       	jmpq   ffffffff8109a68a &lt;try_to_grab_pending+0x2ba&gt;
ffffffff8109a550:	48 89 5d a0          	mov    %rbx,-0x60(%rbp)
ffffffff8109a554:	e8 97 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a559:	e8 92 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a55e:	e8 8d be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a563:	e8 88 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a568:	e8 83 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a56d:	49 8b 04 24          	mov    (%r12),%rax
ffffffff8109a571:	48 89 c3             	mov    %rax,%rbx
ffffffff8109a574:	48 c1 e3 3d          	shl    $0x3d,%rbx
ffffffff8109a578:	48 c1 fb 3f          	sar    $0x3f,%rbx
ffffffff8109a57c:	48 21 c3             	and    %rax,%rbx
ffffffff8109a57f:	48 81 e3 00 ff ff ff 	and    $0xffffffffffffff00,%rbx
ffffffff8109a586:	48 89 5d 98          	mov    %rbx,-0x68(%rbp)
ffffffff8109a58a:	4c 89 e7             	mov    %r12,%rdi
ffffffff8109a58d:	e8 ee 48 00 00       	callq  ffffffff8109ee80 &lt;trace_workqueue_activate_work&gt;
ffffffff8109a592:	4c 8b 2b             	mov    (%rbx),%r13
ffffffff8109a595:	49 8d 45 48          	lea    0x48(%r13),%rax
ffffffff8109a599:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8109a59d:	e8 4e be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a5a2:	49 8d 44 24 08       	lea    0x8(%r12),%rax
ffffffff8109a5a7:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff8109a5ab:	49 8b 5c 24 08       	mov    0x8(%r12),%rbx
ffffffff8109a5b0:	e8 3b be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a5b5:	e8 36 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a5ba:	4d 8b 7c 24 08       	mov    0x8(%r12),%r15
ffffffff8109a5bf:	4d 8b 74 24 10       	mov    0x10(%r12),%r14
ffffffff8109a5c4:	e8 27 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a5c9:	4d 89 77 08          	mov    %r14,0x8(%r15)
ffffffff8109a5cd:	e8 1e be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a5d2:	4d 89 3e             	mov    %r15,(%r14)
ffffffff8109a5d5:	e8 16 be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a5da:	4d 8b 75 50          	mov    0x50(%r13),%r14
ffffffff8109a5de:	e8 0d be 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a5e3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8109a5e7:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff8109a5eb:	49 89 4d 50          	mov    %rcx,0x50(%r13)
ffffffff8109a5ef:	49 89 44 24 08       	mov    %rax,0x8(%r12)
ffffffff8109a5f4:	4d 89 74 24 10       	mov    %r14,0x10(%r12)
ffffffff8109a5f9:	49 89 0e             	mov    %rcx,(%r14)
ffffffff8109a5fc:	41 f6 04 24 08       	testb  $0x8,(%r12)
ffffffff8109a601:	4c 89 65 90          	mov    %r12,-0x70(%rbp)
ffffffff8109a605:	74 65                	je     ffffffff8109a66c &lt;try_to_grab_pending+0x29c&gt;
ffffffff8109a607:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8109a60e:	00 00 
ffffffff8109a610:	48 8b 0b             	mov    (%rbx),%rcx
ffffffff8109a613:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
ffffffff8109a617:	49 89 c6             	mov    %rax,%r14
ffffffff8109a61a:	e8 d1 bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a61f:	e8 cc bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a624:	4c 8b 3b             	mov    (%rbx),%r15
ffffffff8109a627:	4d 89 ec             	mov    %r13,%r12
ffffffff8109a62a:	4c 8b 6b 08          	mov    0x8(%rbx),%r13
ffffffff8109a62e:	e8 bd bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a633:	4d 89 6f 08          	mov    %r13,0x8(%r15)
ffffffff8109a637:	e8 b4 bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a63c:	4d 89 7d 00          	mov    %r15,0x0(%r13)
ffffffff8109a640:	4d 89 e5             	mov    %r12,%r13
ffffffff8109a643:	e8 a8 bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a648:	4d 8b 7d 50          	mov    0x50(%r13),%r15
ffffffff8109a64c:	e8 9f bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a651:	4c 89 f0             	mov    %r14,%rax
ffffffff8109a654:	49 89 5d 50          	mov    %rbx,0x50(%r13)
ffffffff8109a658:	48 89 03             	mov    %rax,(%rbx)
ffffffff8109a65b:	4c 89 7b 08          	mov    %r15,0x8(%rbx)
ffffffff8109a65f:	49 89 1f             	mov    %rbx,(%r15)
ffffffff8109a662:	f6 43 f8 08          	testb  $0x8,-0x8(%rbx)
ffffffff8109a666:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
ffffffff8109a66a:	75 a4                	jne    ffffffff8109a610 &lt;try_to_grab_pending+0x240&gt;
ffffffff8109a66c:	e8 7f bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a671:	4c 8b 65 90          	mov    -0x70(%rbp),%r12
ffffffff8109a675:	41 0f ba 34 24 01    	btrl   $0x1,(%r12)
ffffffff8109a67b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff8109a67f:	ff 40 58             	incl   0x58(%rax)
ffffffff8109a682:	48 8b 5d a0          	mov    -0x60(%rbp),%rbx
ffffffff8109a686:	4c 8b 6d a8          	mov    -0x58(%rbp),%r13
ffffffff8109a68a:	e8 61 bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a68f:	e8 5c bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a694:	4d 8b 74 24 08       	mov    0x8(%r12),%r14
ffffffff8109a699:	4d 8b 7c 24 10       	mov    0x10(%r12),%r15
ffffffff8109a69e:	e8 4d bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a6a3:	4d 89 7e 08          	mov    %r15,0x8(%r14)
ffffffff8109a6a7:	e8 44 bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a6ac:	4d 89 37             	mov    %r14,(%r15)
ffffffff8109a6af:	e8 3c bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a6b4:	4d 89 6c 24 08       	mov    %r13,0x8(%r12)
ffffffff8109a6b9:	4d 89 6c 24 10       	mov    %r13,0x10(%r12)
ffffffff8109a6be:	e8 2d bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a6c3:	41 8b 34 24          	mov    (%r12),%esi
ffffffff8109a6c7:	c1 ee 04             	shr    $0x4,%esi
ffffffff8109a6ca:	83 e6 0f             	and    $0xf,%esi
ffffffff8109a6cd:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
ffffffff8109a6d1:	e8 ba 4a 00 00       	callq  ffffffff8109f190 &lt;pwq_dec_nr_in_flight&gt;
ffffffff8109a6d6:	4c 63 73 40          	movslq 0x40(%rbx),%r14
ffffffff8109a6da:	e8 11 bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a6df:	49 c1 e6 05          	shl    $0x5,%r14
ffffffff8109a6e3:	e8 08 bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a6e8:	e8 03 bd 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a6ed:	49 8b 04 24          	mov    (%r12),%rax
ffffffff8109a6f1:	a8 01                	test   $0x1,%al
ffffffff8109a6f3:	74 3d                	je     ffffffff8109a732 &lt;try_to_grab_pending+0x362&gt;
ffffffff8109a6f5:	e8 f6 bc 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a6fa:	49 83 ce 01          	or     $0x1,%r14
ffffffff8109a6fe:	e8 ed bc 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a703:	e8 e8 bc 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a708:	e8 e3 bc 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a70d:	4d 89 34 24          	mov    %r14,(%r12)
ffffffff8109a711:	e8 da bc 87 00       	callq  ffffffff819163f0 &lt;mcount&gt;
ffffffff8109a716:	48 89 df             	mov    %rbx,%rdi
ffffffff8109a719:	e8 f2 8a 87 00       	callq  ffffffff81913210 &lt;_raw_spin_unlock&gt;
ffffffff8109a71e:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8109a723:	48 83 c4 48          	add    $0x48,%rsp
ffffffff8109a727:	5b                   	pop    %rbx
ffffffff8109a728:	41 5c                	pop    %r12
ffffffff8109a72a:	41 5d                	pop    %r13
ffffffff8109a72c:	41 5e                	pop    %r14
ffffffff8109a72e:	41 5f                	pop    %r15
ffffffff8109a730:	5d                   	pop    %rbp
ffffffff8109a731:	c3                   	retq   
ffffffff8109a732:	8a 04 25 47 d6 23 82 	mov    0xffffffff8223d647,%al
ffffffff8109a739:	24 01                	and    $0x1,%al
ffffffff8109a73b:	75 b8                	jne    ffffffff8109a6f5 &lt;try_to_grab_pending+0x325&gt;
ffffffff8109a73d:	48 c7 c7 91 d7 c4 81 	mov    $0xffffffff81c4d791,%rdi
ffffffff8109a744:	be 65 02 00 00       	mov    $0x265,%esi
ffffffff8109a749:	e8 12 13 fe ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;
ffffffff8109a74e:	c6 04 25 47 d6 23 82 	movb   $0x1,0xffffffff8223d647
ffffffff8109a755:	01 
ffffffff8109a756:	eb 9d                	jmp    ffffffff8109a6f5 &lt;try_to_grab_pending+0x325&gt;
ffffffff8109a758:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8109a75f:	00
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=310">Steven Rostedt</a> - March 2, 2016, 3:56 p.m.</div>
<pre class="content">
[ Resend with reply all, instead of just &quot;reply&quot; ]

On Wed, 2 Mar 2016 16:53:36 +0100
Sedat Dilek &lt;sedat.dilek@gmail.com&gt; wrote:
<span class="quote">
&gt; ffffffff8110f3f0 &lt;del_timer&gt;:</span>
<span class="quote">&gt; ffffffff8110f3f0:	55                   	push   %rbp</span>
<span class="quote">&gt; ffffffff8110f3f1:	48 89 e5             	mov    %rsp,%rbp</span>
<span class="quote">&gt; ffffffff8110f3f4:	41 57                	push   %r15</span>
<span class="quote">&gt; ffffffff8110f3f6:	41 56                	push   %r14</span>
<span class="quote">&gt; ffffffff8110f3f8:	53                   	push   %rbx</span>
<span class="quote">&gt; ffffffff8110f3f9:	50                   	push   %rax</span>
<span class="quote">&gt; ffffffff8110f3fa:	48 89 fb             	mov    %rdi,%rbx</span>
<span class="quote">&gt; ffffffff8110f3fd:	e8 ee 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; ffffffff8110f402:	e8 e9 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; ffffffff8110f407:	e8 e4 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; ffffffff8110f40c:	e8 df 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>

What is this about?

-- Steve
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41441">Sedat Dilek</a> - March 2, 2016, 4:08 p.m.</div>
<pre class="content">
On 3/2/16, Steven Rostedt &lt;rostedt@goodmis.org&gt; wrote:
<span class="quote">&gt;</span>
<span class="quote">&gt; [ Resend with reply all, instead of just &quot;reply&quot; ]</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; On Wed, 2 Mar 2016 16:53:36 +0100</span>
<span class="quote">&gt; Sedat Dilek &lt;sedat.dilek@gmail.com&gt; wrote:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f3f0 &lt;del_timer&gt;:</span>
<span class="quote">&gt;&gt; ffffffff8110f3f0:	55                   	push   %rbp</span>
<span class="quote">&gt;&gt; ffffffff8110f3f1:	48 89 e5             	mov    %rsp,%rbp</span>
<span class="quote">&gt;&gt; ffffffff8110f3f4:	41 57                	push   %r15</span>
<span class="quote">&gt;&gt; ffffffff8110f3f6:	41 56                	push   %r14</span>
<span class="quote">&gt;&gt; ffffffff8110f3f8:	53                   	push   %rbx</span>
<span class="quote">&gt;&gt; ffffffff8110f3f9:	50                   	push   %rax</span>
<span class="quote">&gt;&gt; ffffffff8110f3fa:	48 89 fb             	mov    %rdi,%rbx</span>
<span class="quote">&gt;&gt; ffffffff8110f3fd:	e8 ee 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f402:	e8 e9 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f407:	e8 e4 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f40c:	e8 df 6f 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; What is this about?</span>
<span class="quote">&gt;</span>

Dunno.

Not sure if this is relevant or not...

[ LINUX-CONFIG ]

$ ./scripts/diffconfig /boot/config-4.4.3-3-iniza-small
/boot/config-4.4.3-3-llvmlinux-amd64
 ARCH_HWEIGHT_CFLAGS &quot;-fcall-saved-rdi -fcall-saved-rsi
-fcall-saved-rdx -fcall-saved-rcx -fcall-saved-r8 -fcall-saved-r9
-fcall-saved-r10 -fcall-saved-r11&quot; -&gt; &quot;&quot;

...and my patchset on top of Linux v4.4.3 is attached.

- Sedat -
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a> - March 2, 2016, 4:24 p.m.</div>
<pre class="content">
On Wed, Mar 02, 2016 at 04:53:36PM +0100, Sedat Dilek wrote:
<span class="quote">&gt; ffffffff8110f570 &lt;del_timer_sync&gt;:</span>
<span class="quote">&gt; ffffffff8110f570:	55                   	push   %rbp</span>
<span class="quote">&gt; ffffffff8110f571:	48 89 e5             	mov    %rsp,%rbp</span>
<span class="quote">&gt; ffffffff8110f574:	41 57                	push   %r15</span>
<span class="quote">&gt; ffffffff8110f576:	41 56                	push   %r14</span>
<span class="quote">&gt; ffffffff8110f578:	53                   	push   %rbx</span>
<span class="quote">&gt; ffffffff8110f579:	48 83 ec 28          	sub    $0x28,%rsp</span>

stack offset is 0x28 bytes [*]
<span class="quote">
&gt; ffffffff8110f57d:	48 89 fb             	mov    %rdi,%rbx</span>
<span class="quote">&gt; ffffffff8110f580:	e8 6b 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; ffffffff8110f585:	e8 66 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; ffffffff8110f58a:	e8 61 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; ffffffff8110f58f:	e8 5c 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>

Your compiler is on drugs!
<span class="quote">
&gt; ffffffff8110f594:	9c                   	pushfq </span>
<span class="quote">&gt; ffffffff8110f595:	8f 45 e0             	popq   -0x20(%rbp)</span>

Saves flags in -0x20(%rbp)
<span class="quote">
&gt; ffffffff8110f598:	4c 8b 7d e0          	mov    -0x20(%rbp),%r15</span>

And in %r15

/me wonders what&#39;s wrong with: popf %r15
<span class="quote">
&gt; ffffffff8110f59c:	e8 4f 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; ffffffff8110f5a1:	e8 4a 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; ffffffff8110f5a6:	fa                   	cli    </span>
<span class="quote">&gt; ffffffff8110f5a7:	e8 84 cb fc ff       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;</span>
<span class="quote">&gt; ffffffff8110f5ac:	4c 8d 73 50          	lea    0x50(%rbx),%r14</span>
<span class="quote">&gt; ffffffff8110f5b0:	48 c7 04 24 b0 f5 10 	movq   $0xffffffff8110f5b0,(%rsp)</span>
<span class="quote">&gt; ffffffff8110f5b7:	81 </span>
<span class="quote">&gt; ffffffff8110f5b8:	31 f6                	xor    %esi,%esi</span>
<span class="quote">&gt; ffffffff8110f5ba:	31 d2                	xor    %edx,%edx</span>
<span class="quote">&gt; ffffffff8110f5bc:	31 c9                	xor    %ecx,%ecx</span>
<span class="quote">&gt; ffffffff8110f5be:	41 b8 01 00 00 00    	mov    $0x1,%r8d</span>
<span class="quote">&gt; ffffffff8110f5c4:	45 31 c9             	xor    %r9d,%r9d</span>
<span class="quote">&gt; ffffffff8110f5c7:	4c 89 f7             	mov    %r14,%rdi</span>
<span class="quote">&gt; ffffffff8110f5ca:	e8 c1 e5 fc ff       	callq  ffffffff810ddb90 &lt;lock_acquire&gt;</span>
<span class="quote">&gt; ffffffff8110f5cf:	be 01 00 00 00       	mov    $0x1,%esi</span>
<span class="quote">&gt; ffffffff8110f5d4:	48 c7 c2 cf f5 10 81 	mov    $0xffffffff8110f5cf,%rdx</span>
<span class="quote">&gt; ffffffff8110f5db:	4c 89 f7             	mov    %r14,%rdi</span>
<span class="quote">&gt; ffffffff8110f5de:	e8 8d 08 fd ff       	callq  ffffffff810dfe70 &lt;lock_release&gt;</span>
<span class="quote">&gt; ffffffff8110f5e3:	e8 08 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">
&gt; ffffffff8110f5e8:	4c 89 f8             	mov    %r15,%rax</span>
<span class="quote">&gt; ffffffff8110f5eb:	49 89 c6             	mov    %rax,%r14</span>

Moves r15 into r14 through rax
<span class="quote">

&gt; ffffffff8110f5ee:	f6 c4 02             	test   $0x2,%ah</span>
<span class="quote">&gt; ffffffff8110f5f1:	75 19                	jne    ffffffff8110f60c &lt;del_timer_sync+0x9c&gt;</span>
<span class="quote">&gt; ffffffff8110f5f3:	e8 f8 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; ffffffff8110f5f8:	e8 f3 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">

&gt; ffffffff8110f5fd:	4c 89 75 d0          	mov    %r14,-0x30(%rbp)</span>
<span class="quote">&gt; ffffffff8110f601:	ff 75 d0             	pushq  -0x30(%rbp)</span>
<span class="quote">&gt; ffffffff8110f604:	9d                   	popfq  </span>

put r14 into -0x30(rbp) and pushes/pops that, see [*] this is 8 bytes
over stack ?!
<span class="quote">
&gt; ffffffff8110f605:	e8 26 cb fc ff       	callq  ffffffff810dc130 &lt;trace_hardirqs_off&gt;</span>
<span class="quote">&gt; ffffffff8110f60a:	eb 17                	jmp    ffffffff8110f623 &lt;del_timer_sync+0xb3&gt;</span>
<span class="quote">&gt; ffffffff8110f60c:	e8 2f cb fc ff       	callq  ffffffff810dc140 &lt;trace_hardirqs_on&gt;</span>
<span class="quote">&gt; ffffffff8110f611:	e8 da 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; ffffffff8110f616:	e8 d5 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; ffffffff8110f61b:	4c 89 75 d8          	mov    %r14,-0x28(%rbp)</span>
<span class="quote">&gt; ffffffff8110f61f:	ff 75 d8             	pushq  -0x28(%rbp)</span>
<span class="quote">&gt; ffffffff8110f622:	9d                   	popfq  </span>

puts r14 into -0x28(rbp) and pushes/pops that
<span class="quote">
&gt; ffffffff8110f623:	e8 c8 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; ffffffff8110f628:	65 8b 04 25 d4 ae 00 	mov    %gs:0xaed4,%eax</span>
<span class="quote">&gt; ffffffff8110f62f:	00 </span>
<span class="quote">&gt; ffffffff8110f630:	a9 00 00 0f 00       	test   $0xf0000,%eax</span>
<span class="quote">&gt; ffffffff8110f635:	74 25                	je     ffffffff8110f65c &lt;del_timer_sync+0xec&gt;</span>
<span class="quote">&gt; ffffffff8110f637:	f6 43 2a 20          	testb  $0x20,0x2a(%rbx)</span>
<span class="quote">&gt; ffffffff8110f63b:	75 1f                	jne    ffffffff8110f65c &lt;del_timer_sync+0xec&gt;</span>
<span class="quote">&gt; ffffffff8110f63d:	48 c7 c7 04 54 c5 81 	mov    $0xffffffff81c55404,%rdi</span>
<span class="quote">&gt; ffffffff8110f644:	be 61 04 00 00       	mov    $0x461,%esi</span>
<span class="quote">&gt; ffffffff8110f649:	e8 12 c4 f6 ff       	callq  ffffffff8107ba60 &lt;warn_slowpath_null&gt;</span>
<span class="quote">&gt; ffffffff8110f64e:	eb 0c                	jmp    ffffffff8110f65c &lt;del_timer_sync+0xec&gt;</span>
<span class="quote">&gt; ffffffff8110f650:	e8 9b 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; ffffffff8110f655:	e8 96 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; ffffffff8110f65a:	f3 90                	pause  </span>
<span class="quote">&gt; ffffffff8110f65c:	48 89 df             	mov    %rbx,%rdi</span>
<span class="quote">&gt; ffffffff8110f65f:	e8 4c fe ff ff       	callq  ffffffff8110f4b0 &lt;try_to_del_timer_sync&gt;</span>
<span class="quote">&gt; ffffffff8110f664:	85 c0                	test   %eax,%eax</span>
<span class="quote">&gt; ffffffff8110f666:	78 e8                	js     ffffffff8110f650 &lt;del_timer_sync+0xe0&gt;</span>
<span class="quote">&gt; ffffffff8110f668:	48 83 c4 28          	add    $0x28,%rsp</span>
<span class="quote">&gt; ffffffff8110f66c:	5b                   	pop    %rbx</span>
<span class="quote">&gt; ffffffff8110f66d:	41 5e                	pop    %r14</span>
<span class="quote">&gt; ffffffff8110f66f:	41 5f                	pop    %r15</span>
<span class="quote">&gt; ffffffff8110f671:	5d                   	pop    %rbp</span>
<span class="quote">&gt; ffffffff8110f672:	c3                   	retq   </span>
<span class="quote">&gt; ffffffff8110f673:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)</span>
<span class="quote">&gt; ffffffff8110f67a:	84 00 00 00 00 00 </span>


That LLVM generate disgusting code, as a contrast, this is what my GCC
makes of this:

ffffffff81155f50 &lt;del_timer_sync&gt;:
ffffffff81155f50:       e8 bb 02 9c 00          callq  ffffffff81b16210 &lt;__fentry__&gt;
ffffffff81155f55:       55                      push   %rbp
ffffffff81155f56:       48 89 e5                mov    %rsp,%rbp
ffffffff81155f59:       41 55                   push   %r13
ffffffff81155f5b:       41 54                   push   %r12
ffffffff81155f5d:       53                      push   %rbx
ffffffff81155f5e:       48 89 fb                mov    %rdi,%rbx
ffffffff81155f61:       48 83 ec 08             sub    $0x8,%rsp
ffffffff81155f65:       9c                      pushfq 
ffffffff81155f66:       41 5c                   pop    %r12
ffffffff81155f68:       fa                      cli    
ffffffff81155f69:       e8 72 5c fd ff          callq  ffffffff8112bbe0 &lt;trace_hardirqs_off&gt;
ffffffff81155f6e:       4c 8d 6b 50             lea    0x50(%rbx),%r13
ffffffff81155f72:       45 31 c9                xor    %r9d,%r9d
ffffffff81155f75:       31 c9                   xor    %ecx,%ecx
ffffffff81155f77:       31 d2                   xor    %edx,%edx
ffffffff81155f79:       31 f6                   xor    %esi,%esi
ffffffff81155f7b:       4c 89 ef                mov    %r13,%rdi
ffffffff81155f7e:       48 c7 04 24 55 5f 15    movq   $0xffffffff81155f55,(%rsp)
ffffffff81155f85:       81 
ffffffff81155f86:       41 b8 01 00 00 00       mov    $0x1,%r8d
ffffffff81155f8c:       e8 3f b3 fd ff          callq  ffffffff811312d0 &lt;lock_acquire&gt;
ffffffff81155f91:       48 c7 c2 55 5f 15 81    mov    $0xffffffff81155f55,%rdx
ffffffff81155f98:       be 01 00 00 00          mov    $0x1,%esi
ffffffff81155f9d:       4c 89 ef                mov    %r13,%rdi
ffffffff81155fa0:       e8 0b b5 fd ff          callq  ffffffff811314b0 &lt;lock_release&gt;
ffffffff81155fa5:       41 f7 c4 00 02 00 00    test   $0x200,%r12d
ffffffff81155fac:       75 52                   jne    ffffffff81156000 &lt;del_timer_sync+0xb0&gt;
ffffffff81155fae:       41 54                   push   %r12
ffffffff81155fb0:       9d                      popfq  
ffffffff81155fb1:       e8 2a 5c fd ff          callq  ffffffff8112bbe0 &lt;trace_hardirqs_off&gt;
ffffffff81155fb6:       65 8b 05 5b 66 eb 7e    mov    %gs:0x7eeb665b(%rip),%eax        # c618 &lt;__preempt_count&gt;
ffffffff81155fbd:       a9 00 00 0f 00          test   $0xf0000,%eax
ffffffff81155fc2:       74 25                   je     ffffffff81155fe9 &lt;del_timer_sync+0x99&gt;
ffffffff81155fc4:       f6 43 2a 20             testb  $0x20,0x2a(%rbx)
ffffffff81155fc8:       75 1f                   jne    ffffffff81155fe9 &lt;del_timer_sync+0x99&gt;
ffffffff81155fca:       be 61 04 00 00          mov    $0x461,%esi
ffffffff81155fcf:       48 c7 c7 09 87 f3 81    mov    $0xffffffff81f38709,%rdi
ffffffff81155fd6:       e8 15 03 f8 ff          callq  ffffffff810d62f0 &lt;warn_slowpath_null&gt;
ffffffff81155fdb:       48 89 df                mov    %rbx,%rdi
ffffffff81155fde:       e8 fd fe ff ff          callq  ffffffff81155ee0 &lt;try_to_del_timer_sync&gt;
ffffffff81155fe3:       85 c0                   test   %eax,%eax
ffffffff81155fe5:       79 0e                   jns    ffffffff81155ff5 &lt;del_timer_sync+0xa5&gt;
ffffffff81155fe7:       f3 90                   pause  
ffffffff81155fe9:       48 89 df                mov    %rbx,%rdi
ffffffff81155fec:       e8 ef fe ff ff          callq  ffffffff81155ee0 &lt;try_to_del_timer_sync&gt;
ffffffff81155ff1:       85 c0                   test   %eax,%eax
ffffffff81155ff3:       78 f2                   js     ffffffff81155fe7 &lt;del_timer_sync+0x97&gt;
ffffffff81155ff5:       48 83 c4 08             add    $0x8,%rsp
ffffffff81155ff9:       5b                      pop    %rbx
ffffffff81155ffa:       41 5c                   pop    %r12
ffffffff81155ffc:       41 5d                   pop    %r13
ffffffff81155ffe:       5d                      pop    %rbp
ffffffff81155fff:       c3                      retq   
ffffffff81156000:       e8 4b 8b fd ff          callq  ffffffff8112eb50 &lt;trace_hardirqs_on&gt;
ffffffff81156005:       41 54                   push   %r12
ffffffff81156007:       9d                      popfq  
ffffffff81156008:       eb ac                   jmp    ffffffff81155fb6 &lt;del_timer_sync+0x66&gt;
ffffffff8115600a:       66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=310">Steven Rostedt</a> - March 2, 2016, 4:35 p.m.</div>
<pre class="content">
On Wed, 2 Mar 2016 17:24:12 +0100
Peter Zijlstra &lt;peterz@infradead.org&gt; wrote:
<span class="quote">
&gt; On Wed, Mar 02, 2016 at 04:53:36PM +0100, Sedat Dilek wrote:</span>
<span class="quote">&gt; &gt; ffffffff8110f570 &lt;del_timer_sync&gt;:</span>
<span class="quote">&gt; &gt; ffffffff8110f570:	55                   	push   %rbp</span>
<span class="quote">&gt; &gt; ffffffff8110f571:	48 89 e5             	mov    %rsp,%rbp</span>
<span class="quote">&gt; &gt; ffffffff8110f574:	41 57                	push   %r15</span>
<span class="quote">&gt; &gt; ffffffff8110f576:	41 56                	push   %r14</span>
<span class="quote">&gt; &gt; ffffffff8110f578:	53                   	push   %rbx</span>
<span class="quote">&gt; &gt; ffffffff8110f579:	48 83 ec 28          	sub    $0x28,%rsp  </span>
<span class="quote">&gt; </span>
<span class="quote">&gt; stack offset is 0x28 bytes [*]</span>

Actually, isn&#39;t it really 0x40 bytes? The stack pushed 3 words (8 bytes
each) before doing the subtract. 0x28 == 40 bytes, 3 * 8 = 24,
40 + 24 = 64 == 0x40.
<span class="quote">
&gt; </span>
<span class="quote">&gt; &gt; ffffffff8110f57d:	48 89 fb             	mov    %rdi,%rbx</span>
<span class="quote">&gt; &gt; ffffffff8110f580:	e8 6b 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; &gt; ffffffff8110f585:	e8 66 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; &gt; ffffffff8110f58a:	e8 61 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt; &gt; ffffffff8110f58f:	e8 5c 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;  </span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Your compiler is on drugs!</span>

Totally agree!


[..]
<span class="quote">
&gt; </span>
<span class="quote">&gt; &gt; ffffffff8110f5fd:	4c 89 75 d0          	mov    %r14,-0x30(%rbp)</span>
<span class="quote">&gt; &gt; ffffffff8110f601:	ff 75 d0             	pushq  -0x30(%rbp)</span>
<span class="quote">&gt; &gt; ffffffff8110f604:	9d                   	popfq    </span>
<span class="quote">&gt; </span>
<span class="quote">&gt; put r14 into -0x30(rbp) and pushes/pops that, see [*] this is 8 bytes</span>
<span class="quote">&gt; over stack ?!</span>

But from rbp, the stack is 0x40 bytes. This may be fine.

-- Steve
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41441">Sedat Dilek</a> - March 2, 2016, 4:42 p.m.</div>
<pre class="content">
On 3/2/16, Peter Zijlstra &lt;peterz@infradead.org&gt; wrote:
<span class="quote">&gt; On Wed, Mar 02, 2016 at 04:53:36PM +0100, Sedat Dilek wrote:</span>
<span class="quote">&gt;&gt; ffffffff8110f570 &lt;del_timer_sync&gt;:</span>
<span class="quote">&gt;&gt; ffffffff8110f570:	55                   	push   %rbp</span>
<span class="quote">&gt;&gt; ffffffff8110f571:	48 89 e5             	mov    %rsp,%rbp</span>
<span class="quote">&gt;&gt; ffffffff8110f574:	41 57                	push   %r15</span>
<span class="quote">&gt;&gt; ffffffff8110f576:	41 56                	push   %r14</span>
<span class="quote">&gt;&gt; ffffffff8110f578:	53                   	push   %rbx</span>
<span class="quote">&gt;&gt; ffffffff8110f579:	48 83 ec 28          	sub    $0x28,%rsp</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; stack offset is 0x28 bytes [*]</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f57d:	48 89 fb             	mov    %rdi,%rbx</span>
<span class="quote">&gt;&gt; ffffffff8110f580:	e8 6b 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f585:	e8 66 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f58a:	e8 61 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f58f:	e8 5c 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Your compiler is on drugs!</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f594:	9c                   	pushfq</span>
<span class="quote">&gt;&gt; ffffffff8110f595:	8f 45 e0             	popq   -0x20(%rbp)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Saves flags in -0x20(%rbp)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f598:	4c 8b 7d e0          	mov    -0x20(%rbp),%r15</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; And in %r15</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; /me wonders what&#39;s wrong with: popf %r15</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f59c:	e8 4f 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f5a1:	e8 4a 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f5a6:	fa                   	cli</span>
<span class="quote">&gt;&gt; ffffffff8110f5a7:	e8 84 cb fc ff       	callq  ffffffff810dc130</span>
<span class="quote">&gt;&gt; &lt;trace_hardirqs_off&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f5ac:	4c 8d 73 50          	lea    0x50(%rbx),%r14</span>
<span class="quote">&gt;&gt; ffffffff8110f5b0:	48 c7 04 24 b0 f5 10 	movq   $0xffffffff8110f5b0,(%rsp)</span>
<span class="quote">&gt;&gt; ffffffff8110f5b7:	81</span>
<span class="quote">&gt;&gt; ffffffff8110f5b8:	31 f6                	xor    %esi,%esi</span>
<span class="quote">&gt;&gt; ffffffff8110f5ba:	31 d2                	xor    %edx,%edx</span>
<span class="quote">&gt;&gt; ffffffff8110f5bc:	31 c9                	xor    %ecx,%ecx</span>
<span class="quote">&gt;&gt; ffffffff8110f5be:	41 b8 01 00 00 00    	mov    $0x1,%r8d</span>
<span class="quote">&gt;&gt; ffffffff8110f5c4:	45 31 c9             	xor    %r9d,%r9d</span>
<span class="quote">&gt;&gt; ffffffff8110f5c7:	4c 89 f7             	mov    %r14,%rdi</span>
<span class="quote">&gt;&gt; ffffffff8110f5ca:	e8 c1 e5 fc ff       	callq  ffffffff810ddb90</span>
<span class="quote">&gt;&gt; &lt;lock_acquire&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f5cf:	be 01 00 00 00       	mov    $0x1,%esi</span>
<span class="quote">&gt;&gt; ffffffff8110f5d4:	48 c7 c2 cf f5 10 81 	mov    $0xffffffff8110f5cf,%rdx</span>
<span class="quote">&gt;&gt; ffffffff8110f5db:	4c 89 f7             	mov    %r14,%rdi</span>
<span class="quote">&gt;&gt; ffffffff8110f5de:	e8 8d 08 fd ff       	callq  ffffffff810dfe70</span>
<span class="quote">&gt;&gt; &lt;lock_release&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f5e3:	e8 08 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f5e8:	4c 89 f8             	mov    %r15,%rax</span>
<span class="quote">&gt;&gt; ffffffff8110f5eb:	49 89 c6             	mov    %rax,%r14</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Moves r15 into r14 through rax</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f5ee:	f6 c4 02             	test   $0x2,%ah</span>
<span class="quote">&gt;&gt; ffffffff8110f5f1:	75 19                	jne    ffffffff8110f60c</span>
<span class="quote">&gt;&gt; &lt;del_timer_sync+0x9c&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f5f3:	e8 f8 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f5f8:	e8 f3 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f5fd:	4c 89 75 d0          	mov    %r14,-0x30(%rbp)</span>
<span class="quote">&gt;&gt; ffffffff8110f601:	ff 75 d0             	pushq  -0x30(%rbp)</span>
<span class="quote">&gt;&gt; ffffffff8110f604:	9d                   	popfq</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; put r14 into -0x30(rbp) and pushes/pops that, see [*] this is 8 bytes</span>
<span class="quote">&gt; over stack ?!</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f605:	e8 26 cb fc ff       	callq  ffffffff810dc130</span>
<span class="quote">&gt;&gt; &lt;trace_hardirqs_off&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f60a:	eb 17                	jmp    ffffffff8110f623</span>
<span class="quote">&gt;&gt; &lt;del_timer_sync+0xb3&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f60c:	e8 2f cb fc ff       	callq  ffffffff810dc140</span>
<span class="quote">&gt;&gt; &lt;trace_hardirqs_on&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f611:	e8 da 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f616:	e8 d5 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f61b:	4c 89 75 d8          	mov    %r14,-0x28(%rbp)</span>
<span class="quote">&gt;&gt; ffffffff8110f61f:	ff 75 d8             	pushq  -0x28(%rbp)</span>
<span class="quote">&gt;&gt; ffffffff8110f622:	9d                   	popfq</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; puts r14 into -0x28(rbp) and pushes/pops that</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f623:	e8 c8 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f628:	65 8b 04 25 d4 ae 00 	mov    %gs:0xaed4,%eax</span>
<span class="quote">&gt;&gt; ffffffff8110f62f:	00</span>
<span class="quote">&gt;&gt; ffffffff8110f630:	a9 00 00 0f 00       	test   $0xf0000,%eax</span>
<span class="quote">&gt;&gt; ffffffff8110f635:	74 25                	je     ffffffff8110f65c</span>
<span class="quote">&gt;&gt; &lt;del_timer_sync+0xec&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f637:	f6 43 2a 20          	testb  $0x20,0x2a(%rbx)</span>
<span class="quote">&gt;&gt; ffffffff8110f63b:	75 1f                	jne    ffffffff8110f65c</span>
<span class="quote">&gt;&gt; &lt;del_timer_sync+0xec&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f63d:	48 c7 c7 04 54 c5 81 	mov    $0xffffffff81c55404,%rdi</span>
<span class="quote">&gt;&gt; ffffffff8110f644:	be 61 04 00 00       	mov    $0x461,%esi</span>
<span class="quote">&gt;&gt; ffffffff8110f649:	e8 12 c4 f6 ff       	callq  ffffffff8107ba60</span>
<span class="quote">&gt;&gt; &lt;warn_slowpath_null&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f64e:	eb 0c                	jmp    ffffffff8110f65c</span>
<span class="quote">&gt;&gt; &lt;del_timer_sync+0xec&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f650:	e8 9b 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f655:	e8 96 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f65a:	f3 90                	pause</span>
<span class="quote">&gt;&gt; ffffffff8110f65c:	48 89 df             	mov    %rbx,%rdi</span>
<span class="quote">&gt;&gt; ffffffff8110f65f:	e8 4c fe ff ff       	callq  ffffffff8110f4b0</span>
<span class="quote">&gt;&gt; &lt;try_to_del_timer_sync&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f664:	85 c0                	test   %eax,%eax</span>
<span class="quote">&gt;&gt; ffffffff8110f666:	78 e8                	js     ffffffff8110f650</span>
<span class="quote">&gt;&gt; &lt;del_timer_sync+0xe0&gt;</span>
<span class="quote">&gt;&gt; ffffffff8110f668:	48 83 c4 28          	add    $0x28,%rsp</span>
<span class="quote">&gt;&gt; ffffffff8110f66c:	5b                   	pop    %rbx</span>
<span class="quote">&gt;&gt; ffffffff8110f66d:	41 5e                	pop    %r14</span>
<span class="quote">&gt;&gt; ffffffff8110f66f:	41 5f                	pop    %r15</span>
<span class="quote">&gt;&gt; ffffffff8110f671:	5d                   	pop    %rbp</span>
<span class="quote">&gt;&gt; ffffffff8110f672:	c3                   	retq</span>
<span class="quote">&gt;&gt; ffffffff8110f673:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw</span>
<span class="quote">&gt;&gt; %cs:0x0(%rax,%rax,1)</span>
<span class="quote">&gt;&gt; ffffffff8110f67a:	84 00 00 00 00 00</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; That LLVM generate disgusting code, as a contrast, this is what my GCC</span>
<span class="quote">&gt; makes of this:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; ffffffff81155f50 &lt;del_timer_sync&gt;:</span>
<span class="quote">&gt; ffffffff81155f50:       e8 bb 02 9c 00          callq  ffffffff81b16210</span>
<span class="quote">&gt; &lt;__fentry__&gt;</span>
<span class="quote">&gt; ffffffff81155f55:       55                      push   %rbp</span>
<span class="quote">&gt; ffffffff81155f56:       48 89 e5                mov    %rsp,%rbp</span>
<span class="quote">&gt; ffffffff81155f59:       41 55                   push   %r13</span>
<span class="quote">&gt; ffffffff81155f5b:       41 54                   push   %r12</span>
<span class="quote">&gt; ffffffff81155f5d:       53                      push   %rbx</span>
<span class="quote">&gt; ffffffff81155f5e:       48 89 fb                mov    %rdi,%rbx</span>
<span class="quote">&gt; ffffffff81155f61:       48 83 ec 08             sub    $0x8,%rsp</span>
<span class="quote">&gt; ffffffff81155f65:       9c                      pushfq</span>
<span class="quote">&gt; ffffffff81155f66:       41 5c                   pop    %r12</span>
<span class="quote">&gt; ffffffff81155f68:       fa                      cli</span>
<span class="quote">&gt; ffffffff81155f69:       e8 72 5c fd ff          callq  ffffffff8112bbe0</span>
<span class="quote">&gt; &lt;trace_hardirqs_off&gt;</span>
<span class="quote">&gt; ffffffff81155f6e:       4c 8d 6b 50             lea    0x50(%rbx),%r13</span>
<span class="quote">&gt; ffffffff81155f72:       45 31 c9                xor    %r9d,%r9d</span>
<span class="quote">&gt; ffffffff81155f75:       31 c9                   xor    %ecx,%ecx</span>
<span class="quote">&gt; ffffffff81155f77:       31 d2                   xor    %edx,%edx</span>
<span class="quote">&gt; ffffffff81155f79:       31 f6                   xor    %esi,%esi</span>
<span class="quote">&gt; ffffffff81155f7b:       4c 89 ef                mov    %r13,%rdi</span>
<span class="quote">&gt; ffffffff81155f7e:       48 c7 04 24 55 5f 15    movq</span>
<span class="quote">&gt; $0xffffffff81155f55,(%rsp)</span>
<span class="quote">&gt; ffffffff81155f85:       81</span>
<span class="quote">&gt; ffffffff81155f86:       41 b8 01 00 00 00       mov    $0x1,%r8d</span>
<span class="quote">&gt; ffffffff81155f8c:       e8 3f b3 fd ff          callq  ffffffff811312d0</span>
<span class="quote">&gt; &lt;lock_acquire&gt;</span>
<span class="quote">&gt; ffffffff81155f91:       48 c7 c2 55 5f 15 81    mov</span>
<span class="quote">&gt; $0xffffffff81155f55,%rdx</span>
<span class="quote">&gt; ffffffff81155f98:       be 01 00 00 00          mov    $0x1,%esi</span>
<span class="quote">&gt; ffffffff81155f9d:       4c 89 ef                mov    %r13,%rdi</span>
<span class="quote">&gt; ffffffff81155fa0:       e8 0b b5 fd ff          callq  ffffffff811314b0</span>
<span class="quote">&gt; &lt;lock_release&gt;</span>
<span class="quote">&gt; ffffffff81155fa5:       41 f7 c4 00 02 00 00    test   $0x200,%r12d</span>
<span class="quote">&gt; ffffffff81155fac:       75 52                   jne    ffffffff81156000</span>
<span class="quote">&gt; &lt;del_timer_sync+0xb0&gt;</span>
<span class="quote">&gt; ffffffff81155fae:       41 54                   push   %r12</span>
<span class="quote">&gt; ffffffff81155fb0:       9d                      popfq</span>
<span class="quote">&gt; ffffffff81155fb1:       e8 2a 5c fd ff          callq  ffffffff8112bbe0</span>
<span class="quote">&gt; &lt;trace_hardirqs_off&gt;</span>
<span class="quote">&gt; ffffffff81155fb6:       65 8b 05 5b 66 eb 7e    mov</span>
<span class="quote">&gt; %gs:0x7eeb665b(%rip),%eax        # c618 &lt;__preempt_count&gt;</span>
<span class="quote">&gt; ffffffff81155fbd:       a9 00 00 0f 00          test   $0xf0000,%eax</span>
<span class="quote">&gt; ffffffff81155fc2:       74 25                   je     ffffffff81155fe9</span>
<span class="quote">&gt; &lt;del_timer_sync+0x99&gt;</span>
<span class="quote">&gt; ffffffff81155fc4:       f6 43 2a 20             testb  $0x20,0x2a(%rbx)</span>
<span class="quote">&gt; ffffffff81155fc8:       75 1f                   jne    ffffffff81155fe9</span>
<span class="quote">&gt; &lt;del_timer_sync+0x99&gt;</span>
<span class="quote">&gt; ffffffff81155fca:       be 61 04 00 00          mov    $0x461,%esi</span>
<span class="quote">&gt; ffffffff81155fcf:       48 c7 c7 09 87 f3 81    mov</span>
<span class="quote">&gt; $0xffffffff81f38709,%rdi</span>
<span class="quote">&gt; ffffffff81155fd6:       e8 15 03 f8 ff          callq  ffffffff810d62f0</span>
<span class="quote">&gt; &lt;warn_slowpath_null&gt;</span>
<span class="quote">&gt; ffffffff81155fdb:       48 89 df                mov    %rbx,%rdi</span>
<span class="quote">&gt; ffffffff81155fde:       e8 fd fe ff ff          callq  ffffffff81155ee0</span>
<span class="quote">&gt; &lt;try_to_del_timer_sync&gt;</span>
<span class="quote">&gt; ffffffff81155fe3:       85 c0                   test   %eax,%eax</span>
<span class="quote">&gt; ffffffff81155fe5:       79 0e                   jns    ffffffff81155ff5</span>
<span class="quote">&gt; &lt;del_timer_sync+0xa5&gt;</span>
<span class="quote">&gt; ffffffff81155fe7:       f3 90                   pause</span>
<span class="quote">&gt; ffffffff81155fe9:       48 89 df                mov    %rbx,%rdi</span>
<span class="quote">&gt; ffffffff81155fec:       e8 ef fe ff ff          callq  ffffffff81155ee0</span>
<span class="quote">&gt; &lt;try_to_del_timer_sync&gt;</span>
<span class="quote">&gt; ffffffff81155ff1:       85 c0                   test   %eax,%eax</span>
<span class="quote">&gt; ffffffff81155ff3:       78 f2                   js     ffffffff81155fe7</span>
<span class="quote">&gt; &lt;del_timer_sync+0x97&gt;</span>
<span class="quote">&gt; ffffffff81155ff5:       48 83 c4 08             add    $0x8,%rsp</span>
<span class="quote">&gt; ffffffff81155ff9:       5b                      pop    %rbx</span>
<span class="quote">&gt; ffffffff81155ffa:       41 5c                   pop    %r12</span>
<span class="quote">&gt; ffffffff81155ffc:       41 5d                   pop    %r13</span>
<span class="quote">&gt; ffffffff81155ffe:       5d                      pop    %rbp</span>
<span class="quote">&gt; ffffffff81155fff:       c3                      retq</span>
<span class="quote">&gt; ffffffff81156000:       e8 4b 8b fd ff          callq  ffffffff8112eb50</span>
<span class="quote">&gt; &lt;trace_hardirqs_on&gt;</span>
<span class="quote">&gt; ffffffff81156005:       41 54                   push   %r12</span>
<span class="quote">&gt; ffffffff81156007:       9d                      popfq</span>
<span class="quote">&gt; ffffffff81156008:       eb ac                   jmp    ffffffff81155fb6</span>
<span class="quote">&gt; &lt;del_timer_sync+0x66&gt;</span>
<span class="quote">&gt; ffffffff8115600a:       66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)</span>
<span class="quote">&gt;</span>

OK, I cannot say much to your analysis.

The full make-lines look differently.

GCC for example has &#39;-mfentry -DCC_USING_FENTRY&#39;.

[ CLANG ]

mycompiler -Wp,-MD,kernel/.workqueue.o.d  -nostdinc -isystem
/opt/llvm-toolchain-3.8.0rc3/bin/../lib/clang/3.8.0/include -nostdinc
-isystem /opt/llvm-toolchain-3.8.0rc3/bin/../lib/clang/3.8.0/include
-I./arch/x86/include -Iarch/x86/include/generated/uapi
-Iarch/x86/include/generated  -Iinclude -I./arch/x86/include/uapi
-Iarch/x86/include/generated/uapi -I./include/uapi
-Iinclude/generated/uapi -include ./include/linux/kconfig.h
-D__KERNEL__ -Qunused-arguments -Wno-unknown-warning-option -Wall
-Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing
-fno-common -Werror-implicit-function-declaration -Wno-format-security
-std=gnu89 -no-integrated-as -mno-sse -mno-mmx -mno-sse2 -mno-3dnow
-mno-avx -m64 -mtune=generic -mno-red-zone -mcmodel=kernel
-funit-at-a-time -DCONFIG_X86_X32_ABI -DCONFIG_AS_CFI=1
-DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1
-DCONFIG_AS_FXSAVEQ=1 -DCONFIG_AS_SSSE3=1 -DCONFIG_AS_CRC32=1
-DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare
-fno-asynchronous-unwind-tables -O2 -Wframe-larger-than=1024
-fno-stack-protector -Wno-unused-variable
-Wno-format-invalid-specifier -Wno-gnu -Wno-asm-operand-widths
-Wno-initializer-overrides -fno-builtin -Wno-tautological-compare
-mno-global-merge -fno-omit-frame-pointer -fno-optimize-sibling-calls
-pg -Wdeclaration-after-statement -Wno-pointer-sign
-fno-strict-overflow -Werror=implicit-int -Werror=strict-prototypes
-Werror=date-time -Wno-initializer-overrides -Wno-unused-value
-Wno-format -Wno-unknown-warning-option -Wno-sign-compare
-Wno-format-zero-length -Wno-uninitialized    -D&quot;KBUILD_STR(s)=#s&quot;
-D&quot;KBUILD_BASENAME=KBUILD_STR(workqueue)&quot;
-D&quot;KBUILD_MODNAME=KBUILD_STR(workqueue)&quot; -c -o kernel/.tmp_workqueue.o
kernel/workqueue.c

mycompiler -Wp,-MD,kernel/time/.timer.o.d  -nostdinc -isystem
/opt/llvm-toolchain-3.8.0rc3/bin/../lib/clang/3.8.0/include -nostdinc
-isystem /opt/llvm-toolchain-3.8.0rc3/bin/../lib/clang/3.8.0/include
-I./arch/x86/include -Iarch/x86/include/generated/uapi
-Iarch/x86/include/generated  -Iinclude -I./arch/x86/include/uapi
-Iarch/x86/include/generated/uapi -I./include/uapi
-Iinclude/generated/uapi -include ./include/linux/kconfig.h
-D__KERNEL__ -Qunused-arguments -Wno-unknown-warning-option -Wall
-Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing
-fno-common -Werror-implicit-function-declaration -Wno-format-security
-std=gnu89 -no-integrated-as -mno-sse -mno-mmx -mno-sse2 -mno-3dnow
-mno-avx -m64 -mtune=generic -mno-red-zone -mcmodel=kernel
-funit-at-a-time -DCONFIG_X86_X32_ABI -DCONFIG_AS_CFI=1
-DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1
-DCONFIG_AS_FXSAVEQ=1 -DCONFIG_AS_SSSE3=1 -DCONFIG_AS_CRC32=1
-DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare
-fno-asynchronous-unwind-tables -O2 -Wframe-larger-than=1024
-fno-stack-protector -Wno-unused-variable
-Wno-format-invalid-specifier -Wno-gnu -Wno-asm-operand-widths
-Wno-initializer-overrides -fno-builtin -Wno-tautological-compare
-mno-global-merge -fno-omit-frame-pointer -fno-optimize-sibling-calls
-pg -Wdeclaration-after-statement -Wno-pointer-sign
-fno-strict-overflow -Werror=implicit-int -Werror=strict-prototypes
-Werror=date-time -Wno-initializer-overrides -Wno-unused-value
-Wno-format -Wno-unknown-warning-option -Wno-sign-compare
-Wno-format-zero-length -Wno-uninitialized    -D&quot;KBUILD_STR(s)=#s&quot;
-D&quot;KBUILD_BASENAME=KBUILD_STR(timer)&quot;
-D&quot;KBUILD_MODNAME=KBUILD_STR(timer)&quot; -c -o kernel/time/.tmp_timer.o
kernel/time/timer.c

[ GCC ]

mycompiler -Wp,-MD,kernel/.workqueue.o.d  -nostdinc -isystem
/usr/lib/gcc/x86_64-linux-gnu/4.9/include -nostdinc -isystem
/usr/lib/gcc/x86_64-linux-gnu/4.9/include -I./arch/x86/include
-Iarch/x86/include/generated/uapi -Iarch/x86/include/generated
-Iinclude -I./arch/x86/include/uapi -Iarch/x86/include/generated/uapi
-I./include/uapi -Iinclude/generated/uapi -include
./include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef
-Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common
-Werror-implicit-function-declaration -Wno-format-security -std=gnu89
-mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1
-falign-loops=1 -mno-80387 -mno-fp-ret-in-387
-mpreferred-stack-boundary=3 -mtune=generic -mno-red-zone
-mcmodel=kernel -funit-at-a-time -maccumulate-outgoing-args
-DCONFIG_X86_X32_ABI -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1
-DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_FXSAVEQ=1 -DCONFIG_AS_SSSE3=1
-DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe
-Wno-sign-compare -fno-asynchronous-unwind-tables
-fno-delete-null-pointer-checks -O2 --param=allow-store-data-races=0
-Wframe-larger-than=1024 -fno-stack-protector
-Wno-unused-but-set-variable -fno-omit-frame-pointer
-fno-optimize-sibling-calls -fno-var-tracking-assignments -pg -mfentry
-DCC_USING_FENTRY -Wdeclaration-after-statement -Wno-pointer-sign
-fno-strict-overflow -fconserve-stack -Werror=implicit-int
-Werror=strict-prototypes -Werror=date-time -DCC_HAVE_ASM_GOTO
-D&quot;KBUILD_STR(s)=#s&quot; -D&quot;KBUILD_BASENAME=KBUILD_STR(workqueue)&quot;
-D&quot;KBUILD_MODNAME=KBUILD_STR(workqueue)&quot; -c -o kernel/.tmp_workqueue.o
kernel/workqueue.c

mycompiler -Wp,-MD,kernel/time/.timer.o.d  -nostdinc -isystem
/usr/lib/gcc/x86_64-linux-gnu/4.9/include -nostdinc -isystem
/usr/lib/gcc/x86_64-linux-gnu/4.9/include -I./arch/x86/include
-Iarch/x86/include/generated/uapi -Iarch/x86/include/generated
-Iinclude -I./arch/x86/include/uapi -Iarch/x86/include/generated/uapi
-I./include/uapi -Iinclude/generated/uapi -include
./include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef
-Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common
-Werror-implicit-function-declaration -Wno-format-security -std=gnu89
-mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1
-falign-loops=1 -mno-80387 -mno-fp-ret-in-387
-mpreferred-stack-boundary=3 -mtune=generic -mno-red-zone
-mcmodel=kernel -funit-at-a-time -maccumulate-outgoing-args
-DCONFIG_X86_X32_ABI -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1
-DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_FXSAVEQ=1 -DCONFIG_AS_SSSE3=1
-DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe
-Wno-sign-compare -fno-asynchronous-unwind-tables
-fno-delete-null-pointer-checks -O2 --param=allow-store-data-races=0
-Wframe-larger-than=1024 -fno-stack-protector
-Wno-unused-but-set-variable -fno-omit-frame-pointer
-fno-optimize-sibling-calls -fno-var-tracking-assignments -pg -mfentry
-DCC_USING_FENTRY -Wdeclaration-after-statement -Wno-pointer-sign
-fno-strict-overflow -fconserve-stack -Werror=implicit-int
-Werror=strict-prototypes -Werror=date-time -DCC_HAVE_ASM_GOTO
-D&quot;KBUILD_STR(s)=#s&quot; -D&quot;KBUILD_BASENAME=KBUILD_STR(timer)&quot;
-D&quot;KBUILD_MODNAME=KBUILD_STR(timer)&quot; -c -o kernel/time/.tmp_timer.o
kernel/time/timer.c

I can try to use the make-line of GCC and re-compile.

- Sedat -
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a> - March 2, 2016, 4:42 p.m.</div>
<pre class="content">
On Wed, Mar 02, 2016 at 11:35:35AM -0500, Steven Rostedt wrote:
<span class="quote">&gt; On Wed, 2 Mar 2016 17:24:12 +0100</span>
<span class="quote">&gt; Peter Zijlstra &lt;peterz@infradead.org&gt; wrote:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; On Wed, Mar 02, 2016 at 04:53:36PM +0100, Sedat Dilek wrote:</span>
<span class="quote">&gt; &gt; &gt; ffffffff8110f570 &lt;del_timer_sync&gt;:</span>
<span class="quote">&gt; &gt; &gt; ffffffff8110f570:	55                   	push   %rbp</span>
<span class="quote">&gt; &gt; &gt; ffffffff8110f571:	48 89 e5             	mov    %rsp,%rbp</span>
<span class="quote">&gt; &gt; &gt; ffffffff8110f574:	41 57                	push   %r15</span>
<span class="quote">&gt; &gt; &gt; ffffffff8110f576:	41 56                	push   %r14</span>
<span class="quote">&gt; &gt; &gt; ffffffff8110f578:	53                   	push   %rbx</span>
<span class="quote">&gt; &gt; &gt; ffffffff8110f579:	48 83 ec 28          	sub    $0x28,%rsp  </span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; stack offset is 0x28 bytes [*]</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Actually, isn&#39;t it really 0x40 bytes? The stack pushed 3 words (8 bytes</span>
<span class="quote">&gt; each) before doing the subtract. 0x28 == 40 bytes, 3 * 8 = 24,</span>
<span class="quote">&gt; 40 + 24 = 64 == 0x40.</span>
<span class="quote">
&gt; &gt; &gt; ffffffff8110f5fd:	4c 89 75 d0          	mov    %r14,-0x30(%rbp)</span>
<span class="quote">&gt; &gt; &gt; ffffffff8110f601:	ff 75 d0             	pushq  -0x30(%rbp)</span>
<span class="quote">&gt; &gt; &gt; ffffffff8110f604:	9d                   	popfq    </span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; put r14 into -0x30(rbp) and pushes/pops that, see [*] this is 8 bytes</span>
<span class="quote">&gt; &gt; over stack ?!</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; But from rbp, the stack is 0x40 bytes. This may be fine.</span>

Ah indeed.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41441">Sedat Dilek</a> - March 2, 2016, 4:52 p.m.</div>
<pre class="content">
On 3/2/16, Sedat Dilek &lt;sedat.dilek@gmail.com&gt; wrote:
<span class="quote">&gt; On 3/2/16, Peter Zijlstra &lt;peterz@infradead.org&gt; wrote:</span>
<span class="quote">&gt;&gt; On Wed, Mar 02, 2016 at 04:53:36PM +0100, Sedat Dilek wrote:</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f570 &lt;del_timer_sync&gt;:</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f570:	55                   	push   %rbp</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f571:	48 89 e5             	mov    %rsp,%rbp</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f574:	41 57                	push   %r15</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f576:	41 56                	push   %r14</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f578:	53                   	push   %rbx</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f579:	48 83 ec 28          	sub    $0x28,%rsp</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; stack offset is 0x28 bytes [*]</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f57d:	48 89 fb             	mov    %rdi,%rbx</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f580:	e8 6b 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f585:	e8 66 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f58a:	e8 61 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f58f:	e8 5c 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Your compiler is on drugs!</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f594:	9c                   	pushfq</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f595:	8f 45 e0             	popq   -0x20(%rbp)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Saves flags in -0x20(%rbp)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f598:	4c 8b 7d e0          	mov    -0x20(%rbp),%r15</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; And in %r15</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; /me wonders what&#39;s wrong with: popf %r15</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f59c:	e8 4f 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5a1:	e8 4a 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5a6:	fa                   	cli</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5a7:	e8 84 cb fc ff       	callq  ffffffff810dc130</span>
<span class="quote">&gt;&gt;&gt; &lt;trace_hardirqs_off&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5ac:	4c 8d 73 50          	lea    0x50(%rbx),%r14</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5b0:	48 c7 04 24 b0 f5 10 	movq</span>
<span class="quote">&gt;&gt;&gt; $0xffffffff8110f5b0,(%rsp)</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5b7:	81</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5b8:	31 f6                	xor    %esi,%esi</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5ba:	31 d2                	xor    %edx,%edx</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5bc:	31 c9                	xor    %ecx,%ecx</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5be:	41 b8 01 00 00 00    	mov    $0x1,%r8d</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5c4:	45 31 c9             	xor    %r9d,%r9d</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5c7:	4c 89 f7             	mov    %r14,%rdi</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5ca:	e8 c1 e5 fc ff       	callq  ffffffff810ddb90</span>
<span class="quote">&gt;&gt;&gt; &lt;lock_acquire&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5cf:	be 01 00 00 00       	mov    $0x1,%esi</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5d4:	48 c7 c2 cf f5 10 81 	mov    $0xffffffff8110f5cf,%rdx</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5db:	4c 89 f7             	mov    %r14,%rdi</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5de:	e8 8d 08 fd ff       	callq  ffffffff810dfe70</span>
<span class="quote">&gt;&gt;&gt; &lt;lock_release&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5e3:	e8 08 6e 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5e8:	4c 89 f8             	mov    %r15,%rax</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5eb:	49 89 c6             	mov    %rax,%r14</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Moves r15 into r14 through rax</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5ee:	f6 c4 02             	test   $0x2,%ah</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5f1:	75 19                	jne    ffffffff8110f60c</span>
<span class="quote">&gt;&gt;&gt; &lt;del_timer_sync+0x9c&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5f3:	e8 f8 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5f8:	e8 f3 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f5fd:	4c 89 75 d0          	mov    %r14,-0x30(%rbp)</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f601:	ff 75 d0             	pushq  -0x30(%rbp)</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f604:	9d                   	popfq</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; put r14 into -0x30(rbp) and pushes/pops that, see [*] this is 8 bytes</span>
<span class="quote">&gt;&gt; over stack ?!</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f605:	e8 26 cb fc ff       	callq  ffffffff810dc130</span>
<span class="quote">&gt;&gt;&gt; &lt;trace_hardirqs_off&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f60a:	eb 17                	jmp    ffffffff8110f623</span>
<span class="quote">&gt;&gt;&gt; &lt;del_timer_sync+0xb3&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f60c:	e8 2f cb fc ff       	callq  ffffffff810dc140</span>
<span class="quote">&gt;&gt;&gt; &lt;trace_hardirqs_on&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f611:	e8 da 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f616:	e8 d5 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f61b:	4c 89 75 d8          	mov    %r14,-0x28(%rbp)</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f61f:	ff 75 d8             	pushq  -0x28(%rbp)</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f622:	9d                   	popfq</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; puts r14 into -0x28(rbp) and pushes/pops that</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f623:	e8 c8 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f628:	65 8b 04 25 d4 ae 00 	mov    %gs:0xaed4,%eax</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f62f:	00</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f630:	a9 00 00 0f 00       	test   $0xf0000,%eax</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f635:	74 25                	je     ffffffff8110f65c</span>
<span class="quote">&gt;&gt;&gt; &lt;del_timer_sync+0xec&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f637:	f6 43 2a 20          	testb  $0x20,0x2a(%rbx)</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f63b:	75 1f                	jne    ffffffff8110f65c</span>
<span class="quote">&gt;&gt;&gt; &lt;del_timer_sync+0xec&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f63d:	48 c7 c7 04 54 c5 81 	mov    $0xffffffff81c55404,%rdi</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f644:	be 61 04 00 00       	mov    $0x461,%esi</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f649:	e8 12 c4 f6 ff       	callq  ffffffff8107ba60</span>
<span class="quote">&gt;&gt;&gt; &lt;warn_slowpath_null&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f64e:	eb 0c                	jmp    ffffffff8110f65c</span>
<span class="quote">&gt;&gt;&gt; &lt;del_timer_sync+0xec&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f650:	e8 9b 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f655:	e8 96 6d 80 00       	callq  ffffffff819163f0 &lt;mcount&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f65a:	f3 90                	pause</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f65c:	48 89 df             	mov    %rbx,%rdi</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f65f:	e8 4c fe ff ff       	callq  ffffffff8110f4b0</span>
<span class="quote">&gt;&gt;&gt; &lt;try_to_del_timer_sync&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f664:	85 c0                	test   %eax,%eax</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f666:	78 e8                	js     ffffffff8110f650</span>
<span class="quote">&gt;&gt;&gt; &lt;del_timer_sync+0xe0&gt;</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f668:	48 83 c4 28          	add    $0x28,%rsp</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f66c:	5b                   	pop    %rbx</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f66d:	41 5e                	pop    %r14</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f66f:	41 5f                	pop    %r15</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f671:	5d                   	pop    %rbp</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f672:	c3                   	retq</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f673:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw</span>
<span class="quote">&gt;&gt;&gt; %cs:0x0(%rax,%rax,1)</span>
<span class="quote">&gt;&gt;&gt; ffffffff8110f67a:	84 00 00 00 00 00</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; That LLVM generate disgusting code, as a contrast, this is what my GCC</span>
<span class="quote">&gt;&gt; makes of this:</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; ffffffff81155f50 &lt;del_timer_sync&gt;:</span>
<span class="quote">&gt;&gt; ffffffff81155f50:       e8 bb 02 9c 00          callq  ffffffff81b16210</span>
<span class="quote">&gt;&gt; &lt;__fentry__&gt;</span>
<span class="quote">&gt;&gt; ffffffff81155f55:       55                      push   %rbp</span>
<span class="quote">&gt;&gt; ffffffff81155f56:       48 89 e5                mov    %rsp,%rbp</span>
<span class="quote">&gt;&gt; ffffffff81155f59:       41 55                   push   %r13</span>
<span class="quote">&gt;&gt; ffffffff81155f5b:       41 54                   push   %r12</span>
<span class="quote">&gt;&gt; ffffffff81155f5d:       53                      push   %rbx</span>
<span class="quote">&gt;&gt; ffffffff81155f5e:       48 89 fb                mov    %rdi,%rbx</span>
<span class="quote">&gt;&gt; ffffffff81155f61:       48 83 ec 08             sub    $0x8,%rsp</span>
<span class="quote">&gt;&gt; ffffffff81155f65:       9c                      pushfq</span>
<span class="quote">&gt;&gt; ffffffff81155f66:       41 5c                   pop    %r12</span>
<span class="quote">&gt;&gt; ffffffff81155f68:       fa                      cli</span>
<span class="quote">&gt;&gt; ffffffff81155f69:       e8 72 5c fd ff          callq  ffffffff8112bbe0</span>
<span class="quote">&gt;&gt; &lt;trace_hardirqs_off&gt;</span>
<span class="quote">&gt;&gt; ffffffff81155f6e:       4c 8d 6b 50             lea    0x50(%rbx),%r13</span>
<span class="quote">&gt;&gt; ffffffff81155f72:       45 31 c9                xor    %r9d,%r9d</span>
<span class="quote">&gt;&gt; ffffffff81155f75:       31 c9                   xor    %ecx,%ecx</span>
<span class="quote">&gt;&gt; ffffffff81155f77:       31 d2                   xor    %edx,%edx</span>
<span class="quote">&gt;&gt; ffffffff81155f79:       31 f6                   xor    %esi,%esi</span>
<span class="quote">&gt;&gt; ffffffff81155f7b:       4c 89 ef                mov    %r13,%rdi</span>
<span class="quote">&gt;&gt; ffffffff81155f7e:       48 c7 04 24 55 5f 15    movq</span>
<span class="quote">&gt;&gt; $0xffffffff81155f55,(%rsp)</span>
<span class="quote">&gt;&gt; ffffffff81155f85:       81</span>
<span class="quote">&gt;&gt; ffffffff81155f86:       41 b8 01 00 00 00       mov    $0x1,%r8d</span>
<span class="quote">&gt;&gt; ffffffff81155f8c:       e8 3f b3 fd ff          callq  ffffffff811312d0</span>
<span class="quote">&gt;&gt; &lt;lock_acquire&gt;</span>
<span class="quote">&gt;&gt; ffffffff81155f91:       48 c7 c2 55 5f 15 81    mov</span>
<span class="quote">&gt;&gt; $0xffffffff81155f55,%rdx</span>
<span class="quote">&gt;&gt; ffffffff81155f98:       be 01 00 00 00          mov    $0x1,%esi</span>
<span class="quote">&gt;&gt; ffffffff81155f9d:       4c 89 ef                mov    %r13,%rdi</span>
<span class="quote">&gt;&gt; ffffffff81155fa0:       e8 0b b5 fd ff          callq  ffffffff811314b0</span>
<span class="quote">&gt;&gt; &lt;lock_release&gt;</span>
<span class="quote">&gt;&gt; ffffffff81155fa5:       41 f7 c4 00 02 00 00    test   $0x200,%r12d</span>
<span class="quote">&gt;&gt; ffffffff81155fac:       75 52                   jne    ffffffff81156000</span>
<span class="quote">&gt;&gt; &lt;del_timer_sync+0xb0&gt;</span>
<span class="quote">&gt;&gt; ffffffff81155fae:       41 54                   push   %r12</span>
<span class="quote">&gt;&gt; ffffffff81155fb0:       9d                      popfq</span>
<span class="quote">&gt;&gt; ffffffff81155fb1:       e8 2a 5c fd ff          callq  ffffffff8112bbe0</span>
<span class="quote">&gt;&gt; &lt;trace_hardirqs_off&gt;</span>
<span class="quote">&gt;&gt; ffffffff81155fb6:       65 8b 05 5b 66 eb 7e    mov</span>
<span class="quote">&gt;&gt; %gs:0x7eeb665b(%rip),%eax        # c618 &lt;__preempt_count&gt;</span>
<span class="quote">&gt;&gt; ffffffff81155fbd:       a9 00 00 0f 00          test   $0xf0000,%eax</span>
<span class="quote">&gt;&gt; ffffffff81155fc2:       74 25                   je     ffffffff81155fe9</span>
<span class="quote">&gt;&gt; &lt;del_timer_sync+0x99&gt;</span>
<span class="quote">&gt;&gt; ffffffff81155fc4:       f6 43 2a 20             testb  $0x20,0x2a(%rbx)</span>
<span class="quote">&gt;&gt; ffffffff81155fc8:       75 1f                   jne    ffffffff81155fe9</span>
<span class="quote">&gt;&gt; &lt;del_timer_sync+0x99&gt;</span>
<span class="quote">&gt;&gt; ffffffff81155fca:       be 61 04 00 00          mov    $0x461,%esi</span>
<span class="quote">&gt;&gt; ffffffff81155fcf:       48 c7 c7 09 87 f3 81    mov</span>
<span class="quote">&gt;&gt; $0xffffffff81f38709,%rdi</span>
<span class="quote">&gt;&gt; ffffffff81155fd6:       e8 15 03 f8 ff          callq  ffffffff810d62f0</span>
<span class="quote">&gt;&gt; &lt;warn_slowpath_null&gt;</span>
<span class="quote">&gt;&gt; ffffffff81155fdb:       48 89 df                mov    %rbx,%rdi</span>
<span class="quote">&gt;&gt; ffffffff81155fde:       e8 fd fe ff ff          callq  ffffffff81155ee0</span>
<span class="quote">&gt;&gt; &lt;try_to_del_timer_sync&gt;</span>
<span class="quote">&gt;&gt; ffffffff81155fe3:       85 c0                   test   %eax,%eax</span>
<span class="quote">&gt;&gt; ffffffff81155fe5:       79 0e                   jns    ffffffff81155ff5</span>
<span class="quote">&gt;&gt; &lt;del_timer_sync+0xa5&gt;</span>
<span class="quote">&gt;&gt; ffffffff81155fe7:       f3 90                   pause</span>
<span class="quote">&gt;&gt; ffffffff81155fe9:       48 89 df                mov    %rbx,%rdi</span>
<span class="quote">&gt;&gt; ffffffff81155fec:       e8 ef fe ff ff          callq  ffffffff81155ee0</span>
<span class="quote">&gt;&gt; &lt;try_to_del_timer_sync&gt;</span>
<span class="quote">&gt;&gt; ffffffff81155ff1:       85 c0                   test   %eax,%eax</span>
<span class="quote">&gt;&gt; ffffffff81155ff3:       78 f2                   js     ffffffff81155fe7</span>
<span class="quote">&gt;&gt; &lt;del_timer_sync+0x97&gt;</span>
<span class="quote">&gt;&gt; ffffffff81155ff5:       48 83 c4 08             add    $0x8,%rsp</span>
<span class="quote">&gt;&gt; ffffffff81155ff9:       5b                      pop    %rbx</span>
<span class="quote">&gt;&gt; ffffffff81155ffa:       41 5c                   pop    %r12</span>
<span class="quote">&gt;&gt; ffffffff81155ffc:       41 5d                   pop    %r13</span>
<span class="quote">&gt;&gt; ffffffff81155ffe:       5d                      pop    %rbp</span>
<span class="quote">&gt;&gt; ffffffff81155fff:       c3                      retq</span>
<span class="quote">&gt;&gt; ffffffff81156000:       e8 4b 8b fd ff          callq  ffffffff8112eb50</span>
<span class="quote">&gt;&gt; &lt;trace_hardirqs_on&gt;</span>
<span class="quote">&gt;&gt; ffffffff81156005:       41 54                   push   %r12</span>
<span class="quote">&gt;&gt; ffffffff81156007:       9d                      popfq</span>
<span class="quote">&gt;&gt; ffffffff81156008:       eb ac                   jmp    ffffffff81155fb6</span>
<span class="quote">&gt;&gt; &lt;del_timer_sync+0x66&gt;</span>
<span class="quote">&gt;&gt; ffffffff8115600a:       66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; OK, I cannot say much to your analysis.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; The full make-lines look differently.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; GCC for example has &#39;-mfentry -DCC_USING_FENTRY&#39;.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; [ CLANG ]</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; mycompiler -Wp,-MD,kernel/.workqueue.o.d  -nostdinc -isystem</span>
<span class="quote">&gt; /opt/llvm-toolchain-3.8.0rc3/bin/../lib/clang/3.8.0/include -nostdinc</span>
<span class="quote">&gt; -isystem /opt/llvm-toolchain-3.8.0rc3/bin/../lib/clang/3.8.0/include</span>
<span class="quote">&gt; -I./arch/x86/include -Iarch/x86/include/generated/uapi</span>
<span class="quote">&gt; -Iarch/x86/include/generated  -Iinclude -I./arch/x86/include/uapi</span>
<span class="quote">&gt; -Iarch/x86/include/generated/uapi -I./include/uapi</span>
<span class="quote">&gt; -Iinclude/generated/uapi -include ./include/linux/kconfig.h</span>
<span class="quote">&gt; -D__KERNEL__ -Qunused-arguments -Wno-unknown-warning-option -Wall</span>
<span class="quote">&gt; -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing</span>
<span class="quote">&gt; -fno-common -Werror-implicit-function-declaration -Wno-format-security</span>
<span class="quote">&gt; -std=gnu89 -no-integrated-as -mno-sse -mno-mmx -mno-sse2 -mno-3dnow</span>
<span class="quote">&gt; -mno-avx -m64 -mtune=generic -mno-red-zone -mcmodel=kernel</span>
<span class="quote">&gt; -funit-at-a-time -DCONFIG_X86_X32_ABI -DCONFIG_AS_CFI=1</span>
<span class="quote">&gt; -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1</span>
<span class="quote">&gt; -DCONFIG_AS_FXSAVEQ=1 -DCONFIG_AS_SSSE3=1 -DCONFIG_AS_CRC32=1</span>
<span class="quote">&gt; -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare</span>
<span class="quote">&gt; -fno-asynchronous-unwind-tables -O2 -Wframe-larger-than=1024</span>
<span class="quote">&gt; -fno-stack-protector -Wno-unused-variable</span>
<span class="quote">&gt; -Wno-format-invalid-specifier -Wno-gnu -Wno-asm-operand-widths</span>
<span class="quote">&gt; -Wno-initializer-overrides -fno-builtin -Wno-tautological-compare</span>
<span class="quote">&gt; -mno-global-merge -fno-omit-frame-pointer -fno-optimize-sibling-calls</span>
<span class="quote">&gt; -pg -Wdeclaration-after-statement -Wno-pointer-sign</span>
<span class="quote">&gt; -fno-strict-overflow -Werror=implicit-int -Werror=strict-prototypes</span>
<span class="quote">&gt; -Werror=date-time -Wno-initializer-overrides -Wno-unused-value</span>
<span class="quote">&gt; -Wno-format -Wno-unknown-warning-option -Wno-sign-compare</span>
<span class="quote">&gt; -Wno-format-zero-length -Wno-uninitialized    -D&quot;KBUILD_STR(s)=#s&quot;</span>
<span class="quote">&gt; -D&quot;KBUILD_BASENAME=KBUILD_STR(workqueue)&quot;</span>
<span class="quote">&gt; -D&quot;KBUILD_MODNAME=KBUILD_STR(workqueue)&quot; -c -o kernel/.tmp_workqueue.o</span>
<span class="quote">&gt; kernel/workqueue.c</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; mycompiler -Wp,-MD,kernel/time/.timer.o.d  -nostdinc -isystem</span>
<span class="quote">&gt; /opt/llvm-toolchain-3.8.0rc3/bin/../lib/clang/3.8.0/include -nostdinc</span>
<span class="quote">&gt; -isystem /opt/llvm-toolchain-3.8.0rc3/bin/../lib/clang/3.8.0/include</span>
<span class="quote">&gt; -I./arch/x86/include -Iarch/x86/include/generated/uapi</span>
<span class="quote">&gt; -Iarch/x86/include/generated  -Iinclude -I./arch/x86/include/uapi</span>
<span class="quote">&gt; -Iarch/x86/include/generated/uapi -I./include/uapi</span>
<span class="quote">&gt; -Iinclude/generated/uapi -include ./include/linux/kconfig.h</span>
<span class="quote">&gt; -D__KERNEL__ -Qunused-arguments -Wno-unknown-warning-option -Wall</span>
<span class="quote">&gt; -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing</span>
<span class="quote">&gt; -fno-common -Werror-implicit-function-declaration -Wno-format-security</span>
<span class="quote">&gt; -std=gnu89 -no-integrated-as -mno-sse -mno-mmx -mno-sse2 -mno-3dnow</span>
<span class="quote">&gt; -mno-avx -m64 -mtune=generic -mno-red-zone -mcmodel=kernel</span>
<span class="quote">&gt; -funit-at-a-time -DCONFIG_X86_X32_ABI -DCONFIG_AS_CFI=1</span>
<span class="quote">&gt; -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1</span>
<span class="quote">&gt; -DCONFIG_AS_FXSAVEQ=1 -DCONFIG_AS_SSSE3=1 -DCONFIG_AS_CRC32=1</span>
<span class="quote">&gt; -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare</span>
<span class="quote">&gt; -fno-asynchronous-unwind-tables -O2 -Wframe-larger-than=1024</span>
<span class="quote">&gt; -fno-stack-protector -Wno-unused-variable</span>
<span class="quote">&gt; -Wno-format-invalid-specifier -Wno-gnu -Wno-asm-operand-widths</span>
<span class="quote">&gt; -Wno-initializer-overrides -fno-builtin -Wno-tautological-compare</span>
<span class="quote">&gt; -mno-global-merge -fno-omit-frame-pointer -fno-optimize-sibling-calls</span>
<span class="quote">&gt; -pg -Wdeclaration-after-statement -Wno-pointer-sign</span>
<span class="quote">&gt; -fno-strict-overflow -Werror=implicit-int -Werror=strict-prototypes</span>
<span class="quote">&gt; -Werror=date-time -Wno-initializer-overrides -Wno-unused-value</span>
<span class="quote">&gt; -Wno-format -Wno-unknown-warning-option -Wno-sign-compare</span>
<span class="quote">&gt; -Wno-format-zero-length -Wno-uninitialized    -D&quot;KBUILD_STR(s)=#s&quot;</span>
<span class="quote">&gt; -D&quot;KBUILD_BASENAME=KBUILD_STR(timer)&quot;</span>
<span class="quote">&gt; -D&quot;KBUILD_MODNAME=KBUILD_STR(timer)&quot; -c -o kernel/time/.tmp_timer.o</span>
<span class="quote">&gt; kernel/time/timer.c</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; [ GCC ]</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; mycompiler -Wp,-MD,kernel/.workqueue.o.d  -nostdinc -isystem</span>
<span class="quote">&gt; /usr/lib/gcc/x86_64-linux-gnu/4.9/include -nostdinc -isystem</span>
<span class="quote">&gt; /usr/lib/gcc/x86_64-linux-gnu/4.9/include -I./arch/x86/include</span>
<span class="quote">&gt; -Iarch/x86/include/generated/uapi -Iarch/x86/include/generated</span>
<span class="quote">&gt; -Iinclude -I./arch/x86/include/uapi -Iarch/x86/include/generated/uapi</span>
<span class="quote">&gt; -I./include/uapi -Iinclude/generated/uapi -include</span>
<span class="quote">&gt; ./include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef</span>
<span class="quote">&gt; -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common</span>
<span class="quote">&gt; -Werror-implicit-function-declaration -Wno-format-security -std=gnu89</span>
<span class="quote">&gt; -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1</span>
<span class="quote">&gt; -falign-loops=1 -mno-80387 -mno-fp-ret-in-387</span>
<span class="quote">&gt; -mpreferred-stack-boundary=3 -mtune=generic -mno-red-zone</span>
<span class="quote">&gt; -mcmodel=kernel -funit-at-a-time -maccumulate-outgoing-args</span>
<span class="quote">&gt; -DCONFIG_X86_X32_ABI -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1</span>
<span class="quote">&gt; -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_FXSAVEQ=1 -DCONFIG_AS_SSSE3=1</span>
<span class="quote">&gt; -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe</span>
<span class="quote">&gt; -Wno-sign-compare -fno-asynchronous-unwind-tables</span>
<span class="quote">&gt; -fno-delete-null-pointer-checks -O2 --param=allow-store-data-races=0</span>
<span class="quote">&gt; -Wframe-larger-than=1024 -fno-stack-protector</span>
<span class="quote">&gt; -Wno-unused-but-set-variable -fno-omit-frame-pointer</span>
<span class="quote">&gt; -fno-optimize-sibling-calls -fno-var-tracking-assignments -pg -mfentry</span>
<span class="quote">&gt; -DCC_USING_FENTRY -Wdeclaration-after-statement -Wno-pointer-sign</span>
<span class="quote">&gt; -fno-strict-overflow -fconserve-stack -Werror=implicit-int</span>
<span class="quote">&gt; -Werror=strict-prototypes -Werror=date-time -DCC_HAVE_ASM_GOTO</span>
<span class="quote">&gt; -D&quot;KBUILD_STR(s)=#s&quot; -D&quot;KBUILD_BASENAME=KBUILD_STR(workqueue)&quot;</span>
<span class="quote">&gt; -D&quot;KBUILD_MODNAME=KBUILD_STR(workqueue)&quot; -c -o kernel/.tmp_workqueue.o</span>
<span class="quote">&gt; kernel/workqueue.c</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; mycompiler -Wp,-MD,kernel/time/.timer.o.d  -nostdinc -isystem</span>
<span class="quote">&gt; /usr/lib/gcc/x86_64-linux-gnu/4.9/include -nostdinc -isystem</span>
<span class="quote">&gt; /usr/lib/gcc/x86_64-linux-gnu/4.9/include -I./arch/x86/include</span>
<span class="quote">&gt; -Iarch/x86/include/generated/uapi -Iarch/x86/include/generated</span>
<span class="quote">&gt; -Iinclude -I./arch/x86/include/uapi -Iarch/x86/include/generated/uapi</span>
<span class="quote">&gt; -I./include/uapi -Iinclude/generated/uapi -include</span>
<span class="quote">&gt; ./include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef</span>
<span class="quote">&gt; -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common</span>
<span class="quote">&gt; -Werror-implicit-function-declaration -Wno-format-security -std=gnu89</span>
<span class="quote">&gt; -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1</span>
<span class="quote">&gt; -falign-loops=1 -mno-80387 -mno-fp-ret-in-387</span>
<span class="quote">&gt; -mpreferred-stack-boundary=3 -mtune=generic -mno-red-zone</span>
<span class="quote">&gt; -mcmodel=kernel -funit-at-a-time -maccumulate-outgoing-args</span>
<span class="quote">&gt; -DCONFIG_X86_X32_ABI -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1</span>
<span class="quote">&gt; -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_FXSAVEQ=1 -DCONFIG_AS_SSSE3=1</span>
<span class="quote">&gt; -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe</span>
<span class="quote">&gt; -Wno-sign-compare -fno-asynchronous-unwind-tables</span>
<span class="quote">&gt; -fno-delete-null-pointer-checks -O2 --param=allow-store-data-races=0</span>
<span class="quote">&gt; -Wframe-larger-than=1024 -fno-stack-protector</span>
<span class="quote">&gt; -Wno-unused-but-set-variable -fno-omit-frame-pointer</span>
<span class="quote">&gt; -fno-optimize-sibling-calls -fno-var-tracking-assignments -pg -mfentry</span>
<span class="quote">&gt; -DCC_USING_FENTRY -Wdeclaration-after-statement -Wno-pointer-sign</span>
<span class="quote">&gt; -fno-strict-overflow -fconserve-stack -Werror=implicit-int</span>
<span class="quote">&gt; -Werror=strict-prototypes -Werror=date-time -DCC_HAVE_ASM_GOTO</span>
<span class="quote">&gt; -D&quot;KBUILD_STR(s)=#s&quot; -D&quot;KBUILD_BASENAME=KBUILD_STR(timer)&quot;</span>
<span class="quote">&gt; -D&quot;KBUILD_MODNAME=KBUILD_STR(timer)&quot; -c -o kernel/time/.tmp_timer.o</span>
<span class="quote">&gt; kernel/time/timer.c</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; I can try to use the make-line of GCC and re-compile.</span>
<span class="quote">&gt;</span>

Look here...

+ mycompiler -Wp,-MD,kernel/time/.timer.o.d -nostdinc -isystem
/usr/lib/gcc/x86_64-linux-gnu/4.9/include -nostdinc -isystem
/usr/lib/gcc/x86_64-linux-gnu/4.9/include -I./arch/x86/include
-Iarch/x86/include/generated/uapi -Iarch/x86/include/generated
-Iinclude -I./arch/x86/include/uapi -Iarch/x86/include/generated/uapi
-I./include/uapi -Iinclude/generated/uapi -include
./include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef
-Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common
-Werror-implicit-function-declaration -Wno-format-security -std=gnu89
-mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -m64 -falign-jumps=1
-falign-loops=1 -mno-80387 -mno-fp-ret-in-387
-mpreferred-stack-boundary=3 -mtune=generic -mno-red-zone
-mcmodel=kernel -funit-at-a-time -maccumulate-outgoing-args
-DCONFIG_X86_X32_ABI -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1
-DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_FXSAVEQ=1 -DCONFIG_AS_SSSE3=1
-DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe
-Wno-sign-compare -fno-asynchronous-unwind-tables
-fno-delete-null-pointer-checks -O2 --param=allow-store-data-races=0
-Wframe-larger-than=1024 -fno-stack-protector
-Wno-unused-but-set-variable -fno-omit-frame-pointer
-fno-optimize-sibling-calls -fno-var-tracking-assignments -pg -mfentry
-DCC_USING_FENTRY -Wdeclaration-after-statement -Wno-pointer-sign
-fno-strict-overflow -fconserve-stack -Werror=implicit-int
-Werror=strict-prototypes -Werror=date-time -DCC_HAVE_ASM_GOTO
-DKBUILD_STR(s)=#s -DKBUILD_BASENAME=KBUILD_STR(timer)
-DKBUILD_MODNAME=KBUILD_STR(timer) -c -o kernel/time/.tmp_timer.o
kernel/time/timer.c
clang-3.8: error: unknown argument: &#39;-mno-80387&#39;
clang-3.8: error: unknown argument: &#39;-mno-fp-ret-in-387&#39;
clang-3.8: error: unknown argument: &#39;-mpreferred-stack-boundary=3&#39;
clang-3.8: error: unknown argument: &#39;-maccumulate-outgoing-args&#39;
clang-3.8: error: unknown argument: &#39;-fno-var-tracking-assignments&#39;
clang-3.8: error: unknown argument: &#39;-mfentry&#39;
clang-3.8: error: unknown argument: &#39;-fconserve-stack&#39;
clang-3.8: warning: optimization flag &#39;-falign-jumps=1&#39; is not supported
clang-3.8: warning: optimization flag &#39;-falign-loops=1&#39; is not supported
clang-3.8: warning: optimization flag
&#39;-fno-delete-null-pointer-checks&#39; is not supported
+ ld -m elf_x86_64 -r kernel/time/.tmp_timer.o -o kernel/time/timer.o
ld: cannot find kernel/time/.tmp_timer.o: No such file or directory

- Sedat -
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
Al Viro (1):
      use -&gt;d_seq to get coherency between -&gt;d_inode and -&gt;d_flags

Sedat Dilek (24):
      kbuild: llvmlinux: Add cross compilation support
      kbuild: llvmlinux: Add support for integrated-assembler (IA)
      kbuild: llvmlinux: Add LLVM bitcode support
      kbuild: llvmlinux: Add some more clang compiler-flags
      kbuild: llvmlinux: Add -Werror compiler-flag to cc-options
      kbuild: llvmlinux: Fix ASM defines
      kbuild: llvmlinux: Fix unsupported -fno-delete-null-pointer-checks compiler-flag
      kbuild: llvmlinux: Fix unsupported -fcatch-undefined-behavior compiler-flag
      compiler-gcc: llvmlinux: Add __maybe_unused attribute for inlining
      fs/compat: llvmlinux: Fix warning in COMPATIBLE_IOCTL define
      bcache: llvmlinux: Replace nested function with __bch_cache_cmp()
      megaraid_sas: llvmlinux: Remove inline from megasas_return_cmd()
      scsi: libosd: llvmlinux: Remove __weak and add __maybe_unused attribute
      mpilib: llvmlinux: Fix compilation with clang
      md/raid10: llvmlinux: Remove VLAIS from handle_reshape_read_error()
      apparmor: llvmlinux: Remove VLAIS from aa_calc_profile_hash()
      x86: llvmlinux: Fix unsupported -falign-{jumps,loops} compiler-flags
      xen: llvmlinux: Remove VLAIS from xen_flush_tlb_others()
      um: llvmlinux: Check for clang compiler in memcpy export
      x86: boot: llvmlinux: Workaround LLVM Bug PR3997
      x86/hweight: boot: llvmlinux: Workaround LLVM Bug PR9457
      Merge branch &#39;for-linus&#39; of git://git.kernel.org/.../viro/vfs into for-4.5/vfs-fixes
      Merge branch &#39;for-4.4/llvmlinux-amd64-fixes&#39; into 4.5.0-rc6-2-llvmlinux-amd64
      Merge branch &#39;for-4.5/vfs-fixes&#39; into 4.5.0-rc6-2-llvmlinux-amd64

 .gitignore                                |  1 +
 Kbuild                                    |  8 +++----
 Makefile                                  | 36 +++++++++++++++++++++++++++----
 arch/x86/Kconfig                          |  4 ++--
 arch/x86/Makefile                         |  6 ++++--
 arch/x86/boot/memory.c                    |  6 ++++++
 arch/x86/boot/string.h                    |  3 +++
 arch/x86/include/asm/arch_hweight.h       | 18 ++++------------
 arch/x86/um/ksyms.c                       |  2 +-
 arch/x86/xen/mmu.c                        | 35 +++++++++++++++---------------
 drivers/md/bcache/sysfs.c                 | 10 +++++----
 drivers/md/raid10.c                       |  8 +++----
 drivers/scsi/megaraid/megaraid_sas_base.c |  2 +-
 fs/compat_ioctl.c                         |  2 +-
 fs/dcache.c                               | 20 +++++------------
 include/linux/compiler-gcc.h              | 12 +++++------
 include/linux/dcache.h                    |  4 +---
 include/linux/kbuild.h                    |  6 +++---
 include/scsi/osd_types.h                  |  2 +-
 lib/mpi/Makefile                          |  2 ++
 lib/mpi/longlong.h                        |  9 +++-----
 lib/mpi/mpi-inline.h                      |  2 +-
 lib/mpi/mpi-internal.h                    | 10 +--------
 scripts/Kbuild.include                    |  6 +++---
 scripts/Makefile.build                    | 14 ++++++++++++
 scripts/mod/Makefile                      |  8 +++----
 security/apparmor/crypto.c                | 17 ++++++---------
 27 files changed, 137 insertions(+), 116 deletions(-)

<span class="p_header">diff --git a/.gitignore b/.gitignore</span>
<span class="p_header">index fd3a35592543..34fe1346aa87 100644</span>
<span class="p_header">--- a/.gitignore</span>
<span class="p_header">+++ b/.gitignore</span>
<span class="p_chunk">@@ -33,6 +33,7 @@</span> <span class="p_context"></span>
 *.lzo
 *.patch
 *.gcno
<span class="p_add">+*.ll</span>
 modules.builtin
 Module.symvers
 *.dwo
<span class="p_header">diff --git a/Kbuild b/Kbuild</span>
<span class="p_header">index f55cefd9bf29..0bbb86358942 100644</span>
<span class="p_header">--- a/Kbuild</span>
<span class="p_header">+++ b/Kbuild</span>
<span class="p_chunk">@@ -8,10 +8,10 @@</span> <span class="p_context"></span>
 
 # Default sed regexp - multiline due to syntax constraints
 define sed-y
<span class="p_del">-	&quot;/^-&gt;/{s:-&gt;#\(.*\):/* \1 */:; \</span>
<span class="p_del">-	s:^-&gt;\([^ ]*\) [\$$#]*\([-0-9]*\) \(.*\):#define \1 \2 /* \3 */:; \</span>
<span class="p_del">-	s:^-&gt;\([^ ]*\) [\$$#]*\([^ ]*\) \(.*\):#define \1 \2 /* \3 */:; \</span>
<span class="p_del">-	s:-&gt;::; p;}&quot;</span>
<span class="p_add">+	&quot;/^@-&gt;/{s:@-&gt;#\(.*\):/* \1 */:; \</span>
<span class="p_add">+	s:^@-&gt;\([^ ]*\) [\$$#]*\([-0-9]*\) \(.*\):#define \1 \2 /* \3 */:; \</span>
<span class="p_add">+	s:^@-&gt;\([^ ]*\) [\$$#]*\([^ ]*\) \(.*\):#define \1 \2 /* \3 */:; \</span>
<span class="p_add">+	s:@-&gt;::; p;}&quot;</span>
 endef
 
 # Use filechk to avoid rebuilds when a header changes, but the resulting file
<span class="p_header">diff --git a/Makefile b/Makefile</span>
<span class="p_header">index af6e5f893d56..ee064eb6da68 100644</span>
<span class="p_header">--- a/Makefile</span>
<span class="p_header">+++ b/Makefile</span>
<span class="p_chunk">@@ -301,8 +301,10 @@</span> <span class="p_context"> HOSTCFLAGS   = -Wall -Wmissing-prototypes -Wstrict-prototypes -O2 -fomit-frame-p</span>
 HOSTCXXFLAGS = -O2
 
 ifeq ($(shell $(HOSTCC) -v 2&gt;&amp;1 | grep -c &quot;clang version&quot;), 1)
<span class="p_del">-HOSTCFLAGS  += -Wno-unused-value -Wno-unused-parameter \</span>
<span class="p_del">-		-Wno-missing-field-initializers -fno-delete-null-pointer-checks</span>
<span class="p_add">+HOSTCFLAGS  += -Wno-unused-value -Wno-unused-parameter -Wno-missing-field-initializers</span>
<span class="p_add">+endif</span>
<span class="p_add">+ifneq ($(shell $(HOSTCC) -v 2&gt;&amp;1 | grep -c &quot;clang version&quot;), 1)</span>
<span class="p_add">+HOSTCFLAGS  += -fno-delete-null-pointer-checks</span>
 endif
 
 # Decide whether to build built-in, modular, or both.
<span class="p_chunk">@@ -366,6 +368,19 @@</span> <span class="p_context"> CFLAGS_KERNEL	=</span>
 AFLAGS_KERNEL	=
 CFLAGS_GCOV	= -fprofile-arcs -ftest-coverage
 
<span class="p_add">+ifeq ($(cc-name),clang)</span>
<span class="p_add">+ifneq ($(CROSS_COMPILE),)</span>
<span class="p_add">+CLANG_TARGET   := -target $(notdir $(CROSS_COMPILE:%-=%))</span>
<span class="p_add">+GCC_TOOLCHAIN  := $(dir $(CROSS_COMPILE))</span>
<span class="p_add">+endif</span>
<span class="p_add">+ifneq ($(GCC_TOOLCHAIN),)</span>
<span class="p_add">+CLANG_GCC_TC   := -gcc-toolchain $(GCC_TOOLCHAIN)</span>
<span class="p_add">+endif</span>
<span class="p_add">+ifneq ($(CLANG_ENABLE_IA),1)</span>
<span class="p_add">+CLANG_IA_FLAG  = -no-integrated-as</span>
<span class="p_add">+endif</span>
<span class="p_add">+CLANG_FLAGS    := $(CLANG_TARGET) $(CLANG_GCC_TC) $(CLANG_IA_FLAG)</span>
<span class="p_add">+endif</span>
 
 # Use USERINCLUDE when you must reference the UAPI directories only.
 USERINCLUDE    := \
<span class="p_chunk">@@ -391,11 +406,11 @@</span> <span class="p_context"> KBUILD_CFLAGS   := -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs \</span>
 		   -fno-strict-aliasing -fno-common \
 		   -Werror-implicit-function-declaration \
 		   -Wno-format-security \
<span class="p_del">-		   -std=gnu89</span>
<span class="p_add">+		   -std=gnu89 $(CLANG_FLAGS)</span>
 
 KBUILD_AFLAGS_KERNEL :=
 KBUILD_CFLAGS_KERNEL :=
<span class="p_del">-KBUILD_AFLAGS   := -D__ASSEMBLY__</span>
<span class="p_add">+KBUILD_AFLAGS   := -D__ASSEMBLY__ $(CLANG_FLAGS)</span>
 KBUILD_AFLAGS_MODULE  := -DMODULE
 KBUILD_CFLAGS_MODULE  := -DMODULE
 KBUILD_LDFLAGS_MODULE := -T $(srctree)/scripts/module-common.lds
<span class="p_chunk">@@ -611,7 +626,9 @@</span> <span class="p_context"> ARCH_AFLAGS :=</span>
 ARCH_CFLAGS :=
 include arch/$(SRCARCH)/Makefile
 
<span class="p_add">+ifneq ($(cc-name),clang)</span>
 KBUILD_CFLAGS	+= $(call cc-option,-fno-delete-null-pointer-checks,)
<span class="p_add">+endif</span>
 
 ifdef CONFIG_CC_OPTIMIZE_FOR_SIZE
 KBUILD_CFLAGS	+= -Os $(call cc-disable-warning,maybe-uninitialized,)
<span class="p_chunk">@@ -679,13 +696,18 @@</span> <span class="p_context"> KBUILD_CPPFLAGS += $(call cc-option,-Wno-unknown-warning-option,)</span>
 KBUILD_CFLAGS += $(call cc-disable-warning, unused-variable)
 KBUILD_CFLAGS += $(call cc-disable-warning, format-invalid-specifier)
 KBUILD_CFLAGS += $(call cc-disable-warning, gnu)
<span class="p_add">+KBUILD_CFLAGS += $(call cc-disable-warning, asm-operand-widths)</span>
<span class="p_add">+KBUILD_CFLAGS += $(call cc-disable-warning, initializer-overrides)</span>
<span class="p_add">+KBUILD_CFLAGS += $(call cc-option, -fno-builtin)</span>
 # Quiet clang warning: comparison of unsigned expression &lt; 0 is always false
 KBUILD_CFLAGS += $(call cc-disable-warning, tautological-compare)
 # CLANG uses a _MergedGlobals as optimization, but this breaks modpost, as the
 # source of a reference will be _MergedGlobals and not on of the whitelisted names.
 # See modpost pattern 2
 KBUILD_CFLAGS += $(call cc-option, -mno-global-merge,)
<span class="p_add">+ifneq ($(cc-name),clang)</span>
 KBUILD_CFLAGS += $(call cc-option, -fcatch-undefined-behavior)
<span class="p_add">+endif</span>
 else
 
 # This warning generated too much noise in a regular build.
<span class="p_chunk">@@ -1267,6 +1289,8 @@</span> <span class="p_context"> help:</span>
 	@echo  &#39;                    (default: $$(INSTALL_MOD_PATH)/lib/firmware)&#39;
 	@echo  &#39;  dir/            - Build all files in dir and below&#39;
 	@echo  &#39;  dir/file.[ois]  - Build specified target only&#39;
<span class="p_add">+	@echo  &#39;  dir/file.ll     - Build the LLVM bitcode file&#39;</span>
<span class="p_add">+	@echo  &#39;                    (requires compiler support for LLVM bitcode generation)&#39;</span>
 	@echo  &#39;  dir/file.lst    - Build specified mixed source/assembly target only&#39;
 	@echo  &#39;                    (requires a recent binutils and recent build (System.map))&#39;
 	@echo  &#39;  dir/file.ko     - Build module including final link&#39;
<span class="p_chunk">@@ -1545,6 +1569,10 @@</span> <span class="p_context"> endif</span>
 	$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)
 %.symtypes: %.c prepare scripts FORCE
 	$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)
<span class="p_add">+%.ll: %.c prepare scripts FORCE</span>
<span class="p_add">+	$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)</span>
<span class="p_add">+%.ll: %.S prepare scripts FORCE</span>
<span class="p_add">+	$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)</span>
 
 # Modules
 /: prepare scripts FORCE
<span class="p_header">diff --git a/arch/x86/Kconfig b/arch/x86/Kconfig</span>
<span class="p_header">index c46662f64c39..b25ddbb8ef08 100644</span>
<span class="p_header">--- a/arch/x86/Kconfig</span>
<span class="p_header">+++ b/arch/x86/Kconfig</span>
<span class="p_chunk">@@ -294,8 +294,8 @@</span> <span class="p_context"> config X86_32_LAZY_GS</span>
 
 config ARCH_HWEIGHT_CFLAGS
 	string
<span class="p_del">-	default &quot;-fcall-saved-ecx -fcall-saved-edx&quot; if X86_32</span>
<span class="p_del">-	default &quot;-fcall-saved-rdi -fcall-saved-rsi -fcall-saved-rdx -fcall-saved-rcx -fcall-saved-r8 -fcall-saved-r9 -fcall-saved-r10 -fcall-saved-r11&quot; if X86_64</span>
<span class="p_add">+	# Workaround LLVM Bug PR9457</span>
<span class="p_add">+	default &quot;&quot; if (X86_32 || X86_64)</span>
 
 config ARCH_SUPPORTS_UPROBES
 	def_bool y
<span class="p_header">diff --git a/arch/x86/Makefile b/arch/x86/Makefile</span>
<span class="p_header">index 4086abca0b32..5fa41ffe15e2 100644</span>
<span class="p_header">--- a/arch/x86/Makefile</span>
<span class="p_header">+++ b/arch/x86/Makefile</span>
<span class="p_chunk">@@ -87,11 +87,13 @@</span> <span class="p_context"> else</span>
         KBUILD_AFLAGS += -m64
         KBUILD_CFLAGS += -m64
 
<span class="p_add">+ifneq ($(cc-name),clang)</span>
         # Align jump targets to 1 byte, not the default 16 bytes:
<span class="p_del">-        KBUILD_CFLAGS += -falign-jumps=1</span>
<span class="p_add">+        KBUILD_CFLAGS += $(call cc-option,-falign-jumps=1)</span>
 
         # Pack loops tightly as well:
<span class="p_del">-        KBUILD_CFLAGS += -falign-loops=1</span>
<span class="p_add">+        KBUILD_CFLAGS += $(call cc-option,-falign-loops=1)</span>
<span class="p_add">+endif</span>
 
         # Don&#39;t autogenerate traditional x87 instructions
         KBUILD_CFLAGS += $(call cc-option,-mno-80387)
<span class="p_header">diff --git a/arch/x86/boot/memory.c b/arch/x86/boot/memory.c</span>
<span class="p_header">index db75d07c3645..d49115f80fbb 100644</span>
<span class="p_header">--- a/arch/x86/boot/memory.c</span>
<span class="p_header">+++ b/arch/x86/boot/memory.c</span>
<span class="p_chunk">@@ -64,7 +64,13 @@</span> <span class="p_context"> static int detect_memory_e820(void)</span>
 			break;
 		}
 
<span class="p_add">+/* Workaround LLVM Bug PR3997 */</span>
<span class="p_add">+#ifdef __clang__</span>
<span class="p_add">+		memcpy(desc, &amp;buf, sizeof(*desc));</span>
<span class="p_add">+		desc++;</span>
<span class="p_add">+#else</span>
 		*desc++ = buf;
<span class="p_add">+#endif /* __clang__ */</span>
 		count++;
 	} while (ireg.ebx &amp;&amp; count &lt; ARRAY_SIZE(boot_params.e820_map));
 
<span class="p_header">diff --git a/arch/x86/boot/string.h b/arch/x86/boot/string.h</span>
<span class="p_header">index 725e820602b1..31a431e9d4e2 100644</span>
<span class="p_header">--- a/arch/x86/boot/string.h</span>
<span class="p_header">+++ b/arch/x86/boot/string.h</span>
<span class="p_chunk">@@ -14,8 +14,11 @@</span> <span class="p_context"> int memcmp(const void *s1, const void *s2, size_t len);</span>
  * Access builtin version by default. If one needs to use optimized version,
  * do &quot;undef memcpy&quot; in .c file and link against right string.c
  */
<span class="p_add">+/* Workaround LLVM Bug PR3997 */</span>
<span class="p_add">+#ifndef __clang__</span>
 #define memcpy(d,s,l) __builtin_memcpy(d,s,l)
 #define memset(d,c,l) __builtin_memset(d,c,l)
 #define memcmp	__builtin_memcmp
<span class="p_add">+#endif /* __clang__ */</span>
 
 #endif /* BOOT_STRING_H */
<span class="p_header">diff --git a/arch/x86/include/asm/arch_hweight.h b/arch/x86/include/asm/arch_hweight.h</span>
<span class="p_header">index 259a7c1ef709..33f828a659bc 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/arch_hweight.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/arch_hweight.h</span>
<span class="p_chunk">@@ -23,13 +23,8 @@</span> <span class="p_context"></span>
  */
 static __always_inline unsigned int __arch_hweight32(unsigned int w)
 {
<span class="p_del">-	unsigned int res = 0;</span>
<span class="p_del">-</span>
<span class="p_del">-	asm (ALTERNATIVE(&quot;call __sw_hweight32&quot;, POPCNT32, X86_FEATURE_POPCNT)</span>
<span class="p_del">-		     : &quot;=&quot;REG_OUT (res)</span>
<span class="p_del">-		     : REG_IN (w));</span>
<span class="p_del">-</span>
<span class="p_del">-	return res;</span>
<span class="p_add">+/* Workaround LLVM Bug PR9457 */</span>
<span class="p_add">+	return __sw_hweight32(w);</span>
 }
 
 static inline unsigned int __arch_hweight16(unsigned int w)
<span class="p_chunk">@@ -51,13 +46,8 @@</span> <span class="p_context"> static inline unsigned long __arch_hweight64(__u64 w)</span>
 #else
 static __always_inline unsigned long __arch_hweight64(__u64 w)
 {
<span class="p_del">-	unsigned long res = 0;</span>
<span class="p_del">-</span>
<span class="p_del">-	asm (ALTERNATIVE(&quot;call __sw_hweight64&quot;, POPCNT64, X86_FEATURE_POPCNT)</span>
<span class="p_del">-		     : &quot;=&quot;REG_OUT (res)</span>
<span class="p_del">-		     : REG_IN (w));</span>
<span class="p_del">-</span>
<span class="p_del">-	return res;</span>
<span class="p_add">+/* Workaround LLVM Bug PR9457 */</span>
<span class="p_add">+	return __sw_hweight64(w);</span>
 }
 #endif /* CONFIG_X86_32 */
 
<span class="p_header">diff --git a/arch/x86/um/ksyms.c b/arch/x86/um/ksyms.c</span>
<span class="p_header">index 2e8f43ec6214..04aedcecd887 100644</span>
<span class="p_header">--- a/arch/x86/um/ksyms.c</span>
<span class="p_header">+++ b/arch/x86/um/ksyms.c</span>
<span class="p_chunk">@@ -4,7 +4,7 @@</span> <span class="p_context"></span>
 
 #ifndef CONFIG_X86_32
 /*XXX: we need them because they would be exported by x86_64 */
<span class="p_del">-#if (__GNUC__ == 4 &amp;&amp; __GNUC_MINOR__ &gt;= 3) || __GNUC__ &gt; 4</span>
<span class="p_add">+#if (__GNUC__ == 4 &amp;&amp; __GNUC_MINOR__ &gt;= 3) || __GNUC__ &gt; 4 || defined(__clang__)</span>
 EXPORT_SYMBOL(memcpy);
 #else
 EXPORT_SYMBOL(__memcpy);
<span class="p_header">diff --git a/arch/x86/xen/mmu.c b/arch/x86/xen/mmu.c</span>
<span class="p_header">index c913ca4f6958..61fcdce1f71c 100644</span>
<span class="p_header">--- a/arch/x86/xen/mmu.c</span>
<span class="p_header">+++ b/arch/x86/xen/mmu.c</span>
<span class="p_chunk">@@ -1374,36 +1374,37 @@</span> <span class="p_context"> static void xen_flush_tlb_others(const struct cpumask *cpus,</span>
 				 struct mm_struct *mm, unsigned long start,
 				 unsigned long end)
 {
<span class="p_del">-	struct {</span>
<span class="p_del">-		struct mmuext_op op;</span>
<span class="p_del">-#ifdef CONFIG_SMP</span>
<span class="p_del">-		DECLARE_BITMAP(mask, num_processors);</span>
<span class="p_del">-#else</span>
<span class="p_del">-		DECLARE_BITMAP(mask, NR_CPUS);</span>
<span class="p_del">-#endif</span>
<span class="p_del">-	} *args;</span>
 	struct multicall_space mcs;
<span class="p_add">+	struct mmuext_op *op;</span>
<span class="p_add">+	struct cpumask *mask;</span>
 
 	trace_xen_mmu_flush_tlb_others(cpus, mm, start, end);
 
 	if (cpumask_empty(cpus))
 		return;		/* nothing to do */
 
<span class="p_del">-	mcs = xen_mc_entry(sizeof(*args));</span>
<span class="p_del">-	args = mcs.args;</span>
<span class="p_del">-	args-&gt;op.arg2.vcpumask = to_cpumask(args-&gt;mask);</span>
<span class="p_add">+#ifdef CONFIG_SMP</span>
<span class="p_add">+	mcs = xen_mc_entry(sizeof(struct mmuext_op) + BITS_TO_LONGS(num_processors)*sizeof(unsigned long));</span>
<span class="p_add">+#else</span>
<span class="p_add">+	mcs = xen_mc_entry(sizeof(struct mmuext_op) + BITS_TO_LONGS(NR_CPUS)*sizeof(unsigned long));</span>
<span class="p_add">+#endif</span>
<span class="p_add">+	/* Extract fields */</span>
<span class="p_add">+	op = mcs.args;</span>
<span class="p_add">+	mask = to_cpumask(mcs.args + sizeof(struct mmuext_op));</span>
<span class="p_add">+</span>
<span class="p_add">+	op-&gt;arg2.vcpumask = mask;</span>
 
 	/* Remove us, and any offline CPUS. */
<span class="p_del">-	cpumask_and(to_cpumask(args-&gt;mask), cpus, cpu_online_mask);</span>
<span class="p_del">-	cpumask_clear_cpu(smp_processor_id(), to_cpumask(args-&gt;mask));</span>
<span class="p_add">+	cpumask_and(mask, cpus, cpu_online_mask);</span>
<span class="p_add">+	cpumask_clear_cpu(smp_processor_id(), mask);</span>
 
<span class="p_del">-	args-&gt;op.cmd = MMUEXT_TLB_FLUSH_MULTI;</span>
<span class="p_add">+	op-&gt;cmd = MMUEXT_TLB_FLUSH_MULTI;</span>
 	if (end != TLB_FLUSH_ALL &amp;&amp; (end - start) &lt;= PAGE_SIZE) {
<span class="p_del">-		args-&gt;op.cmd = MMUEXT_INVLPG_MULTI;</span>
<span class="p_del">-		args-&gt;op.arg1.linear_addr = start;</span>
<span class="p_add">+		op-&gt;cmd = MMUEXT_INVLPG_MULTI;</span>
<span class="p_add">+		op-&gt;arg1.linear_addr = start;</span>
 	}
 
<span class="p_del">-	MULTI_mmuext_op(mcs.mc, &amp;args-&gt;op, 1, NULL, DOMID_SELF);</span>
<span class="p_add">+	MULTI_mmuext_op(mcs.mc, op, 1, NULL, DOMID_SELF);</span>
 
 	xen_mc_issue(PARAVIRT_LAZY_MMU);
 }
<span class="p_header">diff --git a/drivers/md/bcache/sysfs.c b/drivers/md/bcache/sysfs.c</span>
<span class="p_header">index b3ff57d61dde..53d8baa741fb 100644</span>
<span class="p_header">--- a/drivers/md/bcache/sysfs.c</span>
<span class="p_header">+++ b/drivers/md/bcache/sysfs.c</span>
<span class="p_chunk">@@ -731,6 +731,11 @@</span> <span class="p_context"> static struct attribute *bch_cache_set_internal_files[] = {</span>
 };
 KTYPE(bch_cache_set_internal);
 
<span class="p_add">+static int __bch_cache_cmp(const void *l, const void *r)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return *((uint16_t *) r) - *((uint16_t *) l);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 SHOW(__bch_cache)
 {
 	struct cache *ca = container_of(kobj, struct cache, kobj);
<span class="p_chunk">@@ -755,9 +760,6 @@</span> <span class="p_context"> SHOW(__bch_cache)</span>
 					       CACHE_REPLACEMENT(&amp;ca-&gt;sb));
 
 	if (attr == &amp;sysfs_priority_stats) {
<span class="p_del">-		int cmp(const void *l, const void *r)</span>
<span class="p_del">-		{	return *((uint16_t *) r) - *((uint16_t *) l); }</span>
<span class="p_del">-</span>
 		struct bucket *b;
 		size_t n = ca-&gt;sb.nbuckets, i;
 		size_t unused = 0, available = 0, dirty = 0, meta = 0;
<span class="p_chunk">@@ -786,7 +788,7 @@</span> <span class="p_context"> SHOW(__bch_cache)</span>
 			p[i] = ca-&gt;buckets[i].prio;
 		mutex_unlock(&amp;ca-&gt;set-&gt;bucket_lock);
 
<span class="p_del">-		sort(p, n, sizeof(uint16_t), cmp, NULL);</span>
<span class="p_add">+		sort(p, n, sizeof(uint16_t), __bch_cache_cmp, NULL);</span>
 
 		while (n &amp;&amp;
 		       !cached[n - 1])
<span class="p_header">diff --git a/drivers/md/raid10.c b/drivers/md/raid10.c</span>
<span class="p_header">index 1c1447dd3417..2b29d22e667a 100644</span>
<span class="p_header">--- a/drivers/md/raid10.c</span>
<span class="p_header">+++ b/drivers/md/raid10.c</span>
<span class="p_chunk">@@ -4483,11 +4483,9 @@</span> <span class="p_context"> static int handle_reshape_read_error(struct mddev *mddev,</span>
 	/* Use sync reads to get the blocks from somewhere else */
 	int sectors = r10_bio-&gt;sectors;
 	struct r10conf *conf = mddev-&gt;private;
<span class="p_del">-	struct {</span>
<span class="p_del">-		struct r10bio r10_bio;</span>
<span class="p_del">-		struct r10dev devs[conf-&gt;copies];</span>
<span class="p_del">-	} on_stack;</span>
<span class="p_del">-	struct r10bio *r10b = &amp;on_stack.r10_bio;</span>
<span class="p_add">+	/* Allocate space for r10bio on stack */</span>
<span class="p_add">+	u8 r10bio_on_stack[sizeof(struct r10bio) + conf-&gt;copies * sizeof(struct r10dev)];</span>
<span class="p_add">+	struct r10bio *r10b = (struct r10bio *) r10bio_on_stack;</span>
 	int slot = 0;
 	int idx = 0;
 	struct bio_vec *bvec = r10_bio-&gt;master_bio-&gt;bi_io_vec;
<span class="p_header">diff --git a/drivers/scsi/megaraid/megaraid_sas_base.c b/drivers/scsi/megaraid/megaraid_sas_base.c</span>
<span class="p_header">index 97a1c1c33b05..abcec3020c83 100644</span>
<span class="p_header">--- a/drivers/scsi/megaraid/megaraid_sas_base.c</span>
<span class="p_header">+++ b/drivers/scsi/megaraid/megaraid_sas_base.c</span>
<span class="p_chunk">@@ -234,7 +234,7 @@</span> <span class="p_context"> struct megasas_cmd *megasas_get_cmd(struct megasas_instance</span>
  * @instance:		Adapter soft state
  * @cmd:		Command packet to be returned to free command pool
  */
<span class="p_del">-inline void</span>
<span class="p_add">+void</span>
 megasas_return_cmd(struct megasas_instance *instance, struct megasas_cmd *cmd)
 {
 	unsigned long flags;
<span class="p_header">diff --git a/fs/compat_ioctl.c b/fs/compat_ioctl.c</span>
<span class="p_header">index 6402eaf8ab95..019f05bc8acf 100644</span>
<span class="p_header">--- a/fs/compat_ioctl.c</span>
<span class="p_header">+++ b/fs/compat_ioctl.c</span>
<span class="p_chunk">@@ -832,7 +832,7 @@</span> <span class="p_context"> static int compat_ioctl_preallocate(struct file *file,</span>
  */
 #define XFORM(i) (((i) ^ ((i) &lt;&lt; 27) ^ ((i) &lt;&lt; 17)) &amp; 0xffffffff)
 
<span class="p_del">-#define COMPATIBLE_IOCTL(cmd) XFORM(cmd),</span>
<span class="p_add">+#define COMPATIBLE_IOCTL(cmd) XFORM((u32)cmd),</span>
 /* ioctl should not be warned about even if it&#39;s not implemented.
    Valid reasons to use this:
    - It is implemented with -&gt;compat_ioctl on some device, but programs
<span class="p_header">diff --git a/fs/dcache.c b/fs/dcache.c</span>
<span class="p_header">index 92d5140de851..2398f9f94337 100644</span>
<span class="p_header">--- a/fs/dcache.c</span>
<span class="p_header">+++ b/fs/dcache.c</span>
<span class="p_chunk">@@ -269,9 +269,6 @@</span> <span class="p_context"> static inline int dname_external(const struct dentry *dentry)</span>
 	return dentry-&gt;d_name.name != dentry-&gt;d_iname;
 }
 
<span class="p_del">-/*</span>
<span class="p_del">- * Make sure other CPUs see the inode attached before the type is set.</span>
<span class="p_del">- */</span>
 static inline void __d_set_inode_and_type(struct dentry *dentry,
 					  struct inode *inode,
 					  unsigned type_flags)
<span class="p_chunk">@@ -279,28 +276,18 @@</span> <span class="p_context"> static inline void __d_set_inode_and_type(struct dentry *dentry,</span>
 	unsigned flags;
 
 	dentry-&gt;d_inode = inode;
<span class="p_del">-	smp_wmb();</span>
 	flags = READ_ONCE(dentry-&gt;d_flags);
 	flags &amp;= ~(DCACHE_ENTRY_TYPE | DCACHE_FALLTHRU);
 	flags |= type_flags;
 	WRITE_ONCE(dentry-&gt;d_flags, flags);
 }
 
<span class="p_del">-/*</span>
<span class="p_del">- * Ideally, we want to make sure that other CPUs see the flags cleared before</span>
<span class="p_del">- * the inode is detached, but this is really a violation of RCU principles</span>
<span class="p_del">- * since the ordering suggests we should always set inode before flags.</span>
<span class="p_del">- *</span>
<span class="p_del">- * We should instead replace or discard the entire dentry - but that sucks</span>
<span class="p_del">- * performancewise on mass deletion/rename.</span>
<span class="p_del">- */</span>
 static inline void __d_clear_type_and_inode(struct dentry *dentry)
 {
 	unsigned flags = READ_ONCE(dentry-&gt;d_flags);
 
 	flags &amp;= ~(DCACHE_ENTRY_TYPE | DCACHE_FALLTHRU);
 	WRITE_ONCE(dentry-&gt;d_flags, flags);
<span class="p_del">-	smp_wmb();</span>
 	dentry-&gt;d_inode = NULL;
 }
 
<span class="p_chunk">@@ -370,9 +357,11 @@</span> <span class="p_context"> static void dentry_unlink_inode(struct dentry * dentry)</span>
 	__releases(dentry-&gt;d_inode-&gt;i_lock)
 {
 	struct inode *inode = dentry-&gt;d_inode;
<span class="p_add">+</span>
<span class="p_add">+	raw_write_seqcount_begin(&amp;dentry-&gt;d_seq);</span>
 	__d_clear_type_and_inode(dentry);
 	hlist_del_init(&amp;dentry-&gt;d_u.d_alias);
<span class="p_del">-	dentry_rcuwalk_invalidate(dentry);</span>
<span class="p_add">+	raw_write_seqcount_end(&amp;dentry-&gt;d_seq);</span>
 	spin_unlock(&amp;dentry-&gt;d_lock);
 	spin_unlock(&amp;inode-&gt;i_lock);
 	if (!inode-&gt;i_nlink)
<span class="p_chunk">@@ -1758,8 +1747,9 @@</span> <span class="p_context"> static void __d_instantiate(struct dentry *dentry, struct inode *inode)</span>
 	spin_lock(&amp;dentry-&gt;d_lock);
 	if (inode)
 		hlist_add_head(&amp;dentry-&gt;d_u.d_alias, &amp;inode-&gt;i_dentry);
<span class="p_add">+	raw_write_seqcount_begin(&amp;dentry-&gt;d_seq);</span>
 	__d_set_inode_and_type(dentry, inode, add_flags);
<span class="p_del">-	dentry_rcuwalk_invalidate(dentry);</span>
<span class="p_add">+	raw_write_seqcount_end(&amp;dentry-&gt;d_seq);</span>
 	spin_unlock(&amp;dentry-&gt;d_lock);
 	fsnotify_d_instantiate(dentry, inode);
 }
<span class="p_header">diff --git a/include/linux/compiler-gcc.h b/include/linux/compiler-gcc.h</span>
<span class="p_header">index 22ab246feed3..8d9b96b5648c 100644</span>
<span class="p_header">--- a/include/linux/compiler-gcc.h</span>
<span class="p_header">+++ b/include/linux/compiler-gcc.h</span>
<span class="p_chunk">@@ -70,14 +70,14 @@</span> <span class="p_context"></span>
  */
 #if !defined(CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING) ||		\
     !defined(CONFIG_OPTIMIZE_INLINING) || (__GNUC__ &lt; 4)
<span class="p_del">-#define inline		inline		__attribute__((always_inline)) notrace</span>
<span class="p_del">-#define __inline__	__inline__	__attribute__((always_inline)) notrace</span>
<span class="p_del">-#define __inline	__inline	__attribute__((always_inline)) notrace</span>
<span class="p_add">+#define inline		inline		__attribute__((always_inline)) notrace __maybe_unused</span>
<span class="p_add">+#define __inline__	__inline__	__attribute__((always_inline)) notrace __maybe_unused</span>
<span class="p_add">+#define __inline	__inline	__attribute__((always_inline)) notrace __maybe_unused</span>
 #else
 /* A lot of inline functions can cause havoc with function tracing */
<span class="p_del">-#define inline		inline		notrace</span>
<span class="p_del">-#define __inline__	__inline__	notrace</span>
<span class="p_del">-#define __inline	__inline	notrace</span>
<span class="p_add">+#define inline		inline		notrace __maybe_unused</span>
<span class="p_add">+#define __inline__	__inline__	notrace __maybe_unused</span>
<span class="p_add">+#define __inline	__inline	notrace __maybe_unused</span>
 #endif
 
 #define __always_inline	inline __attribute__((always_inline))
<span class="p_header">diff --git a/include/linux/dcache.h b/include/linux/dcache.h</span>
<span class="p_header">index 7781ce110503..c4b5f4b3f8f8 100644</span>
<span class="p_header">--- a/include/linux/dcache.h</span>
<span class="p_header">+++ b/include/linux/dcache.h</span>
<span class="p_chunk">@@ -409,9 +409,7 @@</span> <span class="p_context"> static inline bool d_mountpoint(const struct dentry *dentry)</span>
  */
 static inline unsigned __d_entry_type(const struct dentry *dentry)
 {
<span class="p_del">-	unsigned type = READ_ONCE(dentry-&gt;d_flags);</span>
<span class="p_del">-	smp_rmb();</span>
<span class="p_del">-	return type &amp; DCACHE_ENTRY_TYPE;</span>
<span class="p_add">+	return dentry-&gt;d_flags &amp; DCACHE_ENTRY_TYPE;</span>
 }
 
 static inline bool d_is_miss(const struct dentry *dentry)
<span class="p_header">diff --git a/include/linux/kbuild.h b/include/linux/kbuild.h</span>
<span class="p_header">index 22a72198c14b..75fa2c3e0e1d 100644</span>
<span class="p_header">--- a/include/linux/kbuild.h</span>
<span class="p_header">+++ b/include/linux/kbuild.h</span>
<span class="p_chunk">@@ -2,14 +2,14 @@</span> <span class="p_context"></span>
 #define __LINUX_KBUILD_H
 
 #define DEFINE(sym, val) \
<span class="p_del">-        asm volatile(&quot;\n-&gt;&quot; #sym &quot; %0 &quot; #val : : &quot;i&quot; (val))</span>
<span class="p_add">+	asm volatile(&quot;\n@-&gt;&quot; #sym &quot; %0 &quot; #val : : &quot;i&quot; (val))</span>
 
<span class="p_del">-#define BLANK() asm volatile(&quot;\n-&gt;&quot; : : )</span>
<span class="p_add">+#define BLANK() asm volatile(&quot;\n@-&gt;&quot; : : )</span>
 
 #define OFFSET(sym, str, mem) \
 	DEFINE(sym, offsetof(struct str, mem))
 
 #define COMMENT(x) \
<span class="p_del">-	asm volatile(&quot;\n-&gt;#&quot; x)</span>
<span class="p_add">+	asm volatile(&quot;\n@-&gt;#&quot; x)</span>
 
 #endif
<span class="p_header">diff --git a/include/scsi/osd_types.h b/include/scsi/osd_types.h</span>
<span class="p_header">index 48e8a165e136..c7ae7211d15d 100644</span>
<span class="p_header">--- a/include/scsi/osd_types.h</span>
<span class="p_header">+++ b/include/scsi/osd_types.h</span>
<span class="p_chunk">@@ -28,7 +28,7 @@</span> <span class="p_context"> struct osd_obj_id {</span>
 	osd_id id;
 };
 
<span class="p_del">-static const struct __weak osd_obj_id osd_root_object = {0, 0};</span>
<span class="p_add">+static const struct osd_obj_id osd_root_object __maybe_unused = {0, 0};</span>
 
 struct osd_attr {
 	u32 attr_page;
<span class="p_header">diff --git a/lib/mpi/Makefile b/lib/mpi/Makefile</span>
<span class="p_header">index 019a68c90144..d5553f6b9f09 100644</span>
<span class="p_header">--- a/lib/mpi/Makefile</span>
<span class="p_header">+++ b/lib/mpi/Makefile</span>
<span class="p_chunk">@@ -4,6 +4,8 @@</span> <span class="p_context"></span>
 
 obj-$(CONFIG_MPILIB) = mpi.o
 
<span class="p_add">+CFLAGS_KERNEL += $(call cc-option,-fheinous-gnu-extensions)</span>
<span class="p_add">+</span>
 mpi-y = \
 	generic_mpih-lshift.o		\
 	generic_mpih-mul1.o		\
<span class="p_header">diff --git a/lib/mpi/longlong.h b/lib/mpi/longlong.h</span>
<span class="p_header">index b90e255c2a68..881a62ca0578 100644</span>
<span class="p_header">--- a/lib/mpi/longlong.h</span>
<span class="p_header">+++ b/lib/mpi/longlong.h</span>
<span class="p_chunk">@@ -193,8 +193,7 @@</span> <span class="p_context"> extern UDItype __udiv_qrnnd(UDItype *, UDItype, UDItype, UDItype);</span>
 		&quot;rI&quot; ((USItype)(bl)))
 #if defined __ARM_ARCH_2__ || defined __ARM_ARCH_3__
 #define umul_ppmm(xh, xl, a, b) \
<span class="p_del">-	__asm__ (&quot;%@ Inlined umul_ppmm\n&quot; \</span>
<span class="p_del">-		&quot;mov	%|r0, %2, lsr #16		@ AAAA\n&quot; \</span>
<span class="p_add">+	__asm__ (&quot;mov	%|r0, %2, lsr #16		@ AAAA\n&quot; \</span>
 		&quot;mov	%|r2, %3, lsr #16		@ BBBB\n&quot; \
 		&quot;bic	%|r1, %2, %|r0, lsl #16		@ aaaa\n&quot; \
 		&quot;bic	%0, %3, %|r2, lsl #16		@ bbbb\n&quot; \
<span class="p_chunk">@@ -213,10 +212,8 @@</span> <span class="p_context"> extern UDItype __udiv_qrnnd(UDItype *, UDItype, UDItype, UDItype);</span>
 	: &quot;r0&quot;, &quot;r1&quot;, &quot;r2&quot;)
 #else
 #define umul_ppmm(xh, xl, a, b) \
<span class="p_del">-	__asm__ (&quot;%@ Inlined umul_ppmm\n&quot; \</span>
<span class="p_del">-		&quot;umull %r1, %r0, %r2, %r3&quot; \</span>
<span class="p_del">-	: &quot;=&amp;r&quot; ((USItype)(xh)), \</span>
<span class="p_del">-			&quot;=r&quot; ((USItype)(xl)) \</span>
<span class="p_add">+	__asm__ (&quot;umull %1, %0, %2, %3&quot; \</span>
<span class="p_add">+	: &quot;=&amp;r&quot; ((xh)), &quot;=r&quot; ((xl)) \</span>
 	: &quot;r&quot; ((USItype)(a)), \
 			&quot;r&quot; ((USItype)(b)) \
 	: &quot;r0&quot;, &quot;r1&quot;)
<span class="p_header">diff --git a/lib/mpi/mpi-inline.h b/lib/mpi/mpi-inline.h</span>
<span class="p_header">index e2b39852b30a..c245ea31f785 100644</span>
<span class="p_header">--- a/lib/mpi/mpi-inline.h</span>
<span class="p_header">+++ b/lib/mpi/mpi-inline.h</span>
<span class="p_chunk">@@ -30,7 +30,7 @@</span> <span class="p_context"></span>
 #define G10_MPI_INLINE_H
 
 #ifndef G10_MPI_INLINE_DECL
<span class="p_del">-#define G10_MPI_INLINE_DECL  extern inline</span>
<span class="p_add">+#define G10_MPI_INLINE_DECL  static inline</span>
 #endif
 
 G10_MPI_INLINE_DECL mpi_limb_t
<span class="p_header">diff --git a/lib/mpi/mpi-internal.h b/lib/mpi/mpi-internal.h</span>
<span class="p_header">index c65dd1bff45a..09e9f13c5ba0 100644</span>
<span class="p_header">--- a/lib/mpi/mpi-internal.h</span>
<span class="p_header">+++ b/lib/mpi/mpi-internal.h</span>
<span class="p_chunk">@@ -168,20 +168,12 @@</span> <span class="p_context"> void mpi_rshift_limbs(MPI a, unsigned int count);</span>
 int mpi_lshift_limbs(MPI a, unsigned int count);
 
 /*-- mpihelp-add.c --*/
<span class="p_del">-mpi_limb_t mpihelp_add_1(mpi_ptr_t res_ptr, mpi_ptr_t s1_ptr,</span>
<span class="p_del">-			 mpi_size_t s1_size, mpi_limb_t s2_limb);</span>
 mpi_limb_t mpihelp_add_n(mpi_ptr_t res_ptr, mpi_ptr_t s1_ptr,
 			 mpi_ptr_t s2_ptr, mpi_size_t size);
<span class="p_del">-mpi_limb_t mpihelp_add(mpi_ptr_t res_ptr, mpi_ptr_t s1_ptr, mpi_size_t s1_size,</span>
<span class="p_del">-		       mpi_ptr_t s2_ptr, mpi_size_t s2_size);</span>
 
 /*-- mpihelp-sub.c --*/
<span class="p_del">-mpi_limb_t mpihelp_sub_1(mpi_ptr_t res_ptr, mpi_ptr_t s1_ptr,</span>
<span class="p_del">-			 mpi_size_t s1_size, mpi_limb_t s2_limb);</span>
 mpi_limb_t mpihelp_sub_n(mpi_ptr_t res_ptr, mpi_ptr_t s1_ptr,
 			 mpi_ptr_t s2_ptr, mpi_size_t size);
<span class="p_del">-mpi_limb_t mpihelp_sub(mpi_ptr_t res_ptr, mpi_ptr_t s1_ptr, mpi_size_t s1_size,</span>
<span class="p_del">-		       mpi_ptr_t s2_ptr, mpi_size_t s2_size);</span>
 
 /*-- mpihelp-cmp.c --*/
 int mpihelp_cmp(mpi_ptr_t op1_ptr, mpi_ptr_t op2_ptr, mpi_size_t size);
<span class="p_chunk">@@ -238,7 +230,7 @@</span> <span class="p_context"> mpi_limb_t mpihelp_rshift(mpi_ptr_t wp, mpi_ptr_t up, mpi_size_t usize,</span>
 #define W_TYPE_SIZE BITS_PER_MPI_LIMB
 typedef mpi_limb_t UWtype;
 typedef unsigned int UHWtype;
<span class="p_del">-#if defined(__GNUC__)</span>
<span class="p_add">+#if defined(__GNUC__) &amp;&amp; !defined(__clang__)</span>
 typedef unsigned int UQItype __attribute__ ((mode(QI)));
 typedef int SItype __attribute__ ((mode(SI)));
 typedef unsigned int USItype __attribute__ ((mode(SI)));
<span class="p_header">diff --git a/scripts/Kbuild.include b/scripts/Kbuild.include</span>
<span class="p_header">index 1db6d73c8dd2..30d9343f0c4b 100644</span>
<span class="p_header">--- a/scripts/Kbuild.include</span>
<span class="p_header">+++ b/scripts/Kbuild.include</span>
<span class="p_chunk">@@ -111,12 +111,12 @@</span> <span class="p_context"> as-instr = $(call try-run,\</span>
 # Usage: cflags-y += $(call cc-option,-march=winchip-c6,-march=i586)
 
 cc-option = $(call try-run,\
<span class="p_del">-	$(CC) $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) $(1) -c -x c /dev/null -o &quot;$$TMP&quot;,$(1),$(2))</span>
<span class="p_add">+	$(CC) -Werror $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) $(1) -c -x c /dev/null -o &quot;$$TMP&quot;,$(1),$(2))</span>
 
 # cc-option-yn
 # Usage: flag := $(call cc-option-yn,-march=winchip-c6)
 cc-option-yn = $(call try-run,\
<span class="p_del">-	$(CC) $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) $(1) -c -x c /dev/null -o &quot;$$TMP&quot;,y,n)</span>
<span class="p_add">+	$(CC) -Werror $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) $(1) -c -x c /dev/null -o &quot;$$TMP&quot;,y,n)</span>
 
 # cc-option-align
 # Prefix align with either -falign or -malign
<span class="p_chunk">@@ -126,7 +126,7 @@</span> <span class="p_context"> cc-option-align = $(subst -functions=0,,\</span>
 # cc-disable-warning
 # Usage: cflags-y += $(call cc-disable-warning,unused-but-set-variable)
 cc-disable-warning = $(call try-run,\
<span class="p_del">-	$(CC) $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) -W$(strip $(1)) -c -x c /dev/null -o &quot;$$TMP&quot;,-Wno-$(strip $(1)))</span>
<span class="p_add">+	$(CC) -Werror $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) -W$(strip $(1)) -c -x c /dev/null -o &quot;$$TMP&quot;,-Wno-$(strip $(1)))</span>
 
 # cc-name
 # Expands to either gcc or clang
<span class="p_header">diff --git a/scripts/Makefile.build b/scripts/Makefile.build</span>
<span class="p_header">index 2c47f9c305aa..ce2aa2b1df90 100644</span>
<span class="p_header">--- a/scripts/Makefile.build</span>
<span class="p_header">+++ b/scripts/Makefile.build</span>
<span class="p_chunk">@@ -174,6 +174,20 @@</span> <span class="p_context"> cmd_cc_symtypes_c =                                                         \</span>
 $(obj)/%.symtypes : $(src)/%.c FORCE
 	$(call cmd,cc_symtypes_c)
 
<span class="p_add">+# LLVM bitcode</span>
<span class="p_add">+# Generate .ll files from .s and .c</span>
<span class="p_add">+quiet_cmd_cc_ll_c = CC $(quiet_modtag)  $@</span>
<span class="p_add">+      cmd_cc_ll_c = $(CC) $(c_flags) -emit-llvm -S -o $@ $&lt;</span>
<span class="p_add">+</span>
<span class="p_add">+$(obj)/%.ll: $(src)/%.c FORCE</span>
<span class="p_add">+	$(call if_changed_dep,cc_ll_c)</span>
<span class="p_add">+</span>
<span class="p_add">+quiet_cmd_as_ll_S = CPP $(quiet_modtag) $@</span>
<span class="p_add">+      cmd_as_ll_S = $(CPP) $(a_flags)   -o $@ $&lt;</span>
<span class="p_add">+</span>
<span class="p_add">+$(obj)/%.ll: $(src)/%.S FORCE</span>
<span class="p_add">+	$(call if_changed_dep,as_ll_S)</span>
<span class="p_add">+</span>
 # C (.c) files
 # The C file is compiled and updated dependency information is generated.
 # (See cmd_cc_o_c + relevant part of rule_cc_o_c)
<span class="p_header">diff --git a/scripts/mod/Makefile b/scripts/mod/Makefile</span>
<span class="p_header">index c11212ff3510..86f6b852cd93 100644</span>
<span class="p_header">--- a/scripts/mod/Makefile</span>
<span class="p_header">+++ b/scripts/mod/Makefile</span>
<span class="p_chunk">@@ -6,10 +6,10 @@</span> <span class="p_context"> modpost-objs	:= modpost.o file2alias.o sumversion.o</span>
 devicetable-offsets-file := devicetable-offsets.h
 
 define sed-y
<span class="p_del">-	&quot;/^-&gt;/{s:-&gt;#\(.*\):/* \1 */:; \</span>
<span class="p_del">-	s:^-&gt;\([^ ]*\) [\$$#]*\([-0-9]*\) \(.*\):#define \1 \2 /* \3 */:; \</span>
<span class="p_del">-	s:^-&gt;\([^ ]*\) [\$$#]*\([^ ]*\) \(.*\):#define \1 \2 /* \3 */:; \</span>
<span class="p_del">-	s:-&gt;::; p;}&quot;</span>
<span class="p_add">+	&quot;/^@-&gt;/{s:@-&gt;#\(.*\):/* \1 */:; \</span>
<span class="p_add">+	s:^@-&gt;\([^ ]*\) [\$$#]*\([-0-9]*\) \(.*\):#define \1 \2 /* \3 */:; \</span>
<span class="p_add">+	s:^@-&gt;\([^ ]*\) [\$$#]*\([^ ]*\) \(.*\):#define \1 \2 /* \3 */:; \</span>
<span class="p_add">+	s:@-&gt;::; p;}&quot;</span>
 endef
 
 quiet_cmd_offsets = GEN     $@
<span class="p_header">diff --git a/security/apparmor/crypto.c b/security/apparmor/crypto.c</span>
<span class="p_header">index 532471d0b3a0..c948247e90c2 100644</span>
<span class="p_header">--- a/security/apparmor/crypto.c</span>
<span class="p_header">+++ b/security/apparmor/crypto.c</span>
<span class="p_chunk">@@ -32,10 +32,7 @@</span> <span class="p_context"> unsigned int aa_hash_size(void)</span>
 int aa_calc_profile_hash(struct aa_profile *profile, u32 version, void *start,
 			 size_t len)
 {
<span class="p_del">-	struct {</span>
<span class="p_del">-		struct shash_desc shash;</span>
<span class="p_del">-		char ctx[crypto_shash_descsize(apparmor_tfm)];</span>
<span class="p_del">-	} desc;</span>
<span class="p_add">+	SHASH_DESC_ON_STACK(shash, apparmor_tfm);</span>
 	int error = -ENOMEM;
 	u32 le32_version = cpu_to_le32(version);
 
<span class="p_chunk">@@ -46,19 +43,19 @@</span> <span class="p_context"> int aa_calc_profile_hash(struct aa_profile *profile, u32 version, void *start,</span>
 	if (!profile-&gt;hash)
 		goto fail;
 
<span class="p_del">-	desc.shash.tfm = apparmor_tfm;</span>
<span class="p_del">-	desc.shash.flags = 0;</span>
<span class="p_add">+	shash-&gt;tfm = apparmor_tfm;</span>
<span class="p_add">+	shash-&gt;flags = 0;</span>
 
<span class="p_del">-	error = crypto_shash_init(&amp;desc.shash);</span>
<span class="p_add">+	error = crypto_shash_init(shash);</span>
 	if (error)
 		goto fail;
<span class="p_del">-	error = crypto_shash_update(&amp;desc.shash, (u8 *) &amp;le32_version, 4);</span>
<span class="p_add">+	error = crypto_shash_update(shash, (u8 *) &amp;le32_version, 4);</span>
 	if (error)
 		goto fail;
<span class="p_del">-	error = crypto_shash_update(&amp;desc.shash, (u8 *) start, len);</span>
<span class="p_add">+	error = crypto_shash_update(shash, (u8 *) start, len);</span>
 	if (error)
 		goto fail;
<span class="p_del">-	error = crypto_shash_final(&amp;desc.shash, profile-&gt;hash);</span>
<span class="p_add">+	error = crypto_shash_final(shash, profile-&gt;hash);</span>
 	if (error)
 		goto fail;
 
</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



