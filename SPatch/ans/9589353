
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v4,19/24] openrisc: entry: Whitespace and comment cleanups - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v4,19/24] openrisc: entry: Whitespace and comment cleanups</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=153221">Stafford Horne</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 24, 2017, 4:32 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;bc9bb8b52d059efd339dc1bb649483cb8749ab02.1487910170.git.shorne@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9589353/mbox/"
   >mbox</a>
|
   <a href="/patch/9589353/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9589353/">/patch/9589353/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	D29B36042B for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 24 Feb 2017 04:35:42 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C66EC287EE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 24 Feb 2017 04:35:42 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id BB649288DD; Fri, 24 Feb 2017 04:35:42 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.5 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, FREEMAIL_FROM, RCVD_IN_DNSWL_HI,
	RCVD_IN_SORBS_SPAM autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5B104287EE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 24 Feb 2017 04:35:42 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751461AbdBXEfl (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 23 Feb 2017 23:35:41 -0500
Received: from mail-pf0-f193.google.com ([209.85.192.193]:36059 &quot;EHLO
	mail-pf0-f193.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751295AbdBXEfO (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 23 Feb 2017 23:35:14 -0500
Received: by mail-pf0-f193.google.com with SMTP id c193so468929pfb.3
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Thu, 23 Feb 2017 20:34:25 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=from:to:cc:subject:date:message-id:in-reply-to:references
	:in-reply-to:references;
	bh=z6OUfDfSWwopy/VOT4qp5iWk6Ksdt4oD2V8sMtOV7TQ=;
	b=ov92lSfhfdLCE0yb0NinWQxoCELJjxrDBhUVAGN+TwebPzexCDmcFXAYD0s4uvmmbn
	ZyWWAqkvGH33t8kNnXMDoGDJrKcxVUAzUYoAvZvu9L0xMXKIMXVZ67OInoG5JlZpbDoR
	S6KvQVuf9VVUfGWj5bOZzTWBpRCs5C52iCi3MasilWE4Ksfs+yLZR+V92ocuGuL+c9Cw
	PkIIeAYsGGsELYNk71wMU208Fvr7MRvJ+JPhI/gu7KGQfO+JRRwCr6c4tWW6nCkRZENE
	/Fw/TauZMxNxg7eGUqxHRrThk7uYip6dGxH2ERVyfFuA3xsOneo844ZOUdB+MzK9yEEq
	+ucQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references:in-reply-to:references;
	bh=z6OUfDfSWwopy/VOT4qp5iWk6Ksdt4oD2V8sMtOV7TQ=;
	b=InTQEUPHJP2ip5ZZhnlI+qrNhvI/5al6ZYgnkIuhELPOjNm+BI0cEImfAuMa4D0h1i
	a8X1dpgUp4bNsD9T+HUVXh3ZawBPEZeBVBkeKMWQ21iZp9sfStLBYpC0OAYxhzrQXl3v
	8pmiCZbm/xuagycBUd5ld6PVWcmEsVP0A15T39ze7KSvsWrc+/DNAdUjxUOBp+05cDxw
	GOR8hhIGxLjtyY7EOU5lfs9q6RO2eEYLPEbvV4MEJMB1YjSVZZe40IsjxHHqcfDhVtl8
	wh7DkO+lrCZh3rA53cHhn8kpK67Vcx/DNNkr9vHcGjM3bEdJH0B7Xw7gJEWt85526SVi
	AZnw==
X-Gm-Message-State: AMke39loTRPCNAT0YqA+M9TqhuA7H7MPcBDp6mk4iiTMJGJR1QT2kMZebwk0rYHzAPpfsQ==
X-Received: by 10.84.149.102 with SMTP id b35mr1128958plh.3.1487910865322;
	Thu, 23 Feb 2017 20:34:25 -0800 (PST)
Received: from localhost (z2.115-65-21.ppp.wakwak.ne.jp. [115.65.21.2])
	by smtp.gmail.com with ESMTPSA id
	k76sm12375494pfg.42.2017.02.23.20.34.24
	(version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
	Thu, 23 Feb 2017 20:34:24 -0800 (PST)
From: Stafford Horne &lt;shorne@gmail.com&gt;
To: Jonas Bonn &lt;jonas@southpole.se&gt;,
	Stefan Kristiansson &lt;stefan.kristiansson@saunalahti.fi&gt;
Cc: linux@roeck-us.net, openrisc@lists.librecores.org,
	linux-kernel@vger.kernel.org, Stafford Horne &lt;shorne@gmail.com&gt;
Subject: [PATCH v4 19/24] openrisc: entry: Whitespace and comment cleanups
Date: Fri, 24 Feb 2017 13:32:39 +0900
Message-Id: &lt;bc9bb8b52d059efd339dc1bb649483cb8749ab02.1487910170.git.shorne@gmail.com&gt;
X-Mailer: git-send-email 2.9.3
In-Reply-To: &lt;cover.1487910170.git.shorne@gmail.com&gt;
References: &lt;cover.1487910170.git.shorne@gmail.com&gt;
In-Reply-To: &lt;cover.1487910170.git.shorne@gmail.com&gt;
References: &lt;cover.1487910170.git.shorne@gmail.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=153221">Stafford Horne</a> - Feb. 24, 2017, 4:32 a.m.</div>
<pre class="content">
Cleanups to whitespace and add some comments. Reading through the delay
slot logic I noticed some things:
 - Delay slot instructions were not indented
 - Some comments are not lined up
 - Use tabs and spaces consistent with other code

No functional change
<span class="signed-off-by">
Signed-off-by: Stafford Horne &lt;shorne@gmail.com&gt;</span>
---
 arch/openrisc/kernel/entry.S | 38 ++++++++++++++++++--------------------
 1 file changed, 18 insertions(+), 20 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1878">Jonas Bonn</a> - Feb. 24, 2017, 9:45 a.m.</div>
<pre class="content">
On 02/24/2017 05:32 AM, Stafford Horne wrote:
<span class="quote">&gt; Cleanups to whitespace and add some comments. Reading through the delay</span>
<span class="quote">&gt; slot logic I noticed some things:</span>
<span class="quote">&gt;   - Delay slot instructions were not indented</span>
<span class="quote">&gt;   - Some comments are not lined up</span>
<span class="quote">&gt;   - Use tabs and spaces consistent with other code</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; No functional change</span>

No, don&#39;t do this.  Whitespace cleanups like this make life difficult 
for people rebasing on your tree, as well as blunting useful tools like 
git blame.

I&#39;m not against the indentation of the delay slot instructions; that 
seems sane and should be pretty transparent in a merge conflict.

The whitespace cleanup and tab-space toggling needs to go, though. These 
sorts of things are better fixed up when the code lines they apply to 
are changed for other, functional reasons.

I suggest you pull out the delay slot fixups into a separate patch and 
then just sit on the rest until you&#39;ve discovered the pain of whitespace 
cleanup-inflicted merge conflicts and decide to just ditch them altogether.

/Jonas
<span class="quote">
&gt;</span>
<span class="quote">&gt; Signed-off-by: Stafford Horne &lt;shorne@gmail.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;   arch/openrisc/kernel/entry.S | 38 ++++++++++++++++++--------------------</span>
<span class="quote">&gt;   1 file changed, 18 insertions(+), 20 deletions(-)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; diff --git a/arch/openrisc/kernel/entry.S b/arch/openrisc/kernel/entry.S</span>
<span class="quote">&gt; index ba1a361..daae2a4 100644</span>
<span class="quote">&gt; --- a/arch/openrisc/kernel/entry.S</span>
<span class="quote">&gt; +++ b/arch/openrisc/kernel/entry.S</span>
<span class="quote">&gt; @@ -228,7 +228,7 @@ EXCEPTION_ENTRY(_data_page_fault_handler)</span>
<span class="quote">&gt;   	 * DTLB miss handler in the CONFIG_GUARD_PROTECTED_CORE part</span>
<span class="quote">&gt;   	 */</span>
<span class="quote">&gt;   #ifdef CONFIG_OPENRISC_NO_SPR_SR_DSX</span>
<span class="quote">&gt; -	l.lwz   r6,PT_PC(r3)                  // address of an offending insn</span>
<span class="quote">&gt; +	l.lwz   r6,PT_PC(r3)               // address of an offending insn</span>
<span class="quote">&gt;   	l.lwz   r6,0(r6)                   // instruction that caused pf</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   	l.srli  r6,r6,26                   // check opcode for jump insn</span>
<span class="quote">&gt; @@ -244,49 +244,47 @@ EXCEPTION_ENTRY(_data_page_fault_handler)</span>
<span class="quote">&gt;   	l.bf    8f</span>
<span class="quote">&gt;   	l.sfeqi r6,0x12                    // l.jalr</span>
<span class="quote">&gt;   	l.bf    8f</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	l.nop</span>
<span class="quote">&gt; +	 l.nop</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   	l.j     9f</span>
<span class="quote">&gt; -	l.nop</span>
<span class="quote">&gt; -8:</span>
<span class="quote">&gt; +	 l.nop</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -	l.lwz   r6,PT_PC(r3)                  // address of an offending insn</span>
<span class="quote">&gt; +8: // offending insn is in delay slot</span>
<span class="quote">&gt; +	l.lwz   r6,PT_PC(r3)               // address of an offending insn</span>
<span class="quote">&gt;   	l.addi  r6,r6,4</span>
<span class="quote">&gt;   	l.lwz   r6,0(r6)                   // instruction that caused pf</span>
<span class="quote">&gt;   	l.srli  r6,r6,26                   // get opcode</span>
<span class="quote">&gt; -9:</span>
<span class="quote">&gt; +9: // offending instruction opcode loaded in r6</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   #else</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -	l.mfspr r6,r0,SPR_SR		   // SR</span>
<span class="quote">&gt; -//	l.lwz	r6,PT_SR(r3)		   // ESR</span>
<span class="quote">&gt; -	l.andi	r6,r6,SPR_SR_DSX	   // check for delay slot exception</span>
<span class="quote">&gt; -	l.sfeqi	r6,0x1			   // exception happened in delay slot</span>
<span class="quote">&gt; -	l.bnf	7f</span>
<span class="quote">&gt; -	l.lwz	r6,PT_PC(r3)		   // address of an offending insn</span>
<span class="quote">&gt; +	l.mfspr r6,r0,SPR_SR               // SR</span>
<span class="quote">&gt; +	l.andi  r6,r6,SPR_SR_DSX           // check for delay slot exception</span>
<span class="quote">&gt; +	l.sfeqi r6,0x1                     // exception happened in delay slot</span>
<span class="quote">&gt; +	l.bnf   7f</span>
<span class="quote">&gt; +	 l.lwz  r6,PT_PC(r3)               // address of an offending insn</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -	l.addi	r6,r6,4			   // offending insn is in delay slot</span>
<span class="quote">&gt; +	l.addi	r6,r6,4                    // offending insn is in delay slot</span>
<span class="quote">&gt;   7:</span>
<span class="quote">&gt;   	l.lwz   r6,0(r6)                   // instruction that caused pf</span>
<span class="quote">&gt;   	l.srli  r6,r6,26                   // check opcode for write access</span>
<span class="quote">&gt;   #endif</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -	l.sfgeui r6,0x33		   // check opcode for write access</span>
<span class="quote">&gt; +	l.sfgeui r6,0x33                   // check opcode for write access</span>
<span class="quote">&gt;   	l.bnf   1f</span>
<span class="quote">&gt;   	l.sfleui r6,0x37</span>
<span class="quote">&gt;   	l.bnf   1f</span>
<span class="quote">&gt;   	l.ori   r6,r0,0x1                  // write access</span>
<span class="quote">&gt;   	l.j     2f</span>
<span class="quote">&gt; -	l.nop</span>
<span class="quote">&gt; +	 l.nop</span>
<span class="quote">&gt;   1:	l.ori   r6,r0,0x0                  // !write access</span>
<span class="quote">&gt;   2:</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   	/* call fault.c handler in or32/mm/fault.c */</span>
<span class="quote">&gt;   	l.jal   do_page_fault</span>
<span class="quote">&gt; -	l.nop</span>
<span class="quote">&gt; +	 l.nop</span>
<span class="quote">&gt;   	l.j     _ret_from_exception</span>
<span class="quote">&gt; -	l.nop</span>
<span class="quote">&gt; +	 l.nop</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   /* ---[ 0x400: Insn Page Fault exception ]------------------------------- */</span>
<span class="quote">&gt;   EXCEPTION_ENTRY(_itlb_miss_page_fault_handler)</span>
<span class="quote">&gt; @@ -306,9 +304,9 @@ EXCEPTION_ENTRY(_insn_page_fault_handler)</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   	/* call fault.c handler in or32/mm/fault.c */</span>
<span class="quote">&gt;   	l.jal   do_page_fault</span>
<span class="quote">&gt; -	l.nop</span>
<span class="quote">&gt; +	 l.nop</span>
<span class="quote">&gt;   	l.j     _ret_from_exception</span>
<span class="quote">&gt; -	l.nop</span>
<span class="quote">&gt; +	 l.nop</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   /* ---[ 0x500: Timer exception ]----------------------------------------- */</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=153221">Stafford Horne</a> - Feb. 24, 2017, 8:31 p.m.</div>
<pre class="content">
On Fri, Feb 24, 2017 at 10:45:08AM +0100, Jonas Bonn wrote:
<span class="quote">&gt; On 02/24/2017 05:32 AM, Stafford Horne wrote:</span>
<span class="quote">&gt; &gt; Cleanups to whitespace and add some comments. Reading through the delay</span>
<span class="quote">&gt; &gt; slot logic I noticed some things:</span>
<span class="quote">&gt; &gt;   - Delay slot instructions were not indented</span>
<span class="quote">&gt; &gt;   - Some comments are not lined up</span>
<span class="quote">&gt; &gt;   - Use tabs and spaces consistent with other code</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; No functional change</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; No, don&#39;t do this.  Whitespace cleanups like this make life difficult for</span>
<span class="quote">&gt; people rebasing on your tree, as well as blunting useful tools like git</span>
<span class="quote">&gt; blame.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I&#39;m not against the indentation of the delay slot instructions; that seems</span>
<span class="quote">&gt; sane and should be pretty transparent in a merge conflict.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The whitespace cleanup and tab-space toggling needs to go, though. These</span>
<span class="quote">&gt; sorts of things are better fixed up when the code lines they apply to are</span>
<span class="quote">&gt; changed for other, functional reasons.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I suggest you pull out the delay slot fixups into a separate patch and then</span>
<span class="quote">&gt; just sit on the rest until you&#39;ve discovered the pain of whitespace</span>
<span class="quote">&gt; cleanup-inflicted merge conflicts and decide to just ditch them altogether.</span>

Hi Jonas,

I agree here and definitely if I knew others were actively working on this
code I would be a bit more careful.  But the truth is I think its only me
right now.  If you have patches that will get a conflict due to this let me
know.

Also, all of our out of tree patches for this file are actually upstream
(as of this series now).

Also, for me, this was needed in order for me to read the code (i.e.
comments in the right place, and removing commented out lines) and fix the
bug in the next patch.

Nevertheless, if someone else thinks this should be left out Ill revert.

-Stafford
<span class="quote">
&gt; &gt; </span>
<span class="quote">&gt; &gt; Signed-off-by: Stafford Horne &lt;shorne@gmail.com&gt;</span>
<span class="quote">&gt; &gt; ---</span>
<span class="quote">&gt; &gt;   arch/openrisc/kernel/entry.S | 38 ++++++++++++++++++--------------------</span>
<span class="quote">&gt; &gt;   1 file changed, 18 insertions(+), 20 deletions(-)</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; diff --git a/arch/openrisc/kernel/entry.S b/arch/openrisc/kernel/entry.S</span>
<span class="quote">&gt; &gt; index ba1a361..daae2a4 100644</span>
<span class="quote">&gt; &gt; --- a/arch/openrisc/kernel/entry.S</span>
<span class="quote">&gt; &gt; +++ b/arch/openrisc/kernel/entry.S</span>
<span class="quote">&gt; &gt; @@ -228,7 +228,7 @@ EXCEPTION_ENTRY(_data_page_fault_handler)</span>
<span class="quote">&gt; &gt;   	 * DTLB miss handler in the CONFIG_GUARD_PROTECTED_CORE part</span>
<span class="quote">&gt; &gt;   	 */</span>
<span class="quote">&gt; &gt;   #ifdef CONFIG_OPENRISC_NO_SPR_SR_DSX</span>
<span class="quote">&gt; &gt; -	l.lwz   r6,PT_PC(r3)                  // address of an offending insn</span>
<span class="quote">&gt; &gt; +	l.lwz   r6,PT_PC(r3)               // address of an offending insn</span>
<span class="quote">&gt; &gt;   	l.lwz   r6,0(r6)                   // instruction that caused pf</span>
<span class="quote">&gt; &gt;   	l.srli  r6,r6,26                   // check opcode for jump insn</span>
<span class="quote">&gt; &gt; @@ -244,49 +244,47 @@ EXCEPTION_ENTRY(_data_page_fault_handler)</span>
<span class="quote">&gt; &gt;   	l.bf    8f</span>
<span class="quote">&gt; &gt;   	l.sfeqi r6,0x12                    // l.jalr</span>
<span class="quote">&gt; &gt;   	l.bf    8f</span>
<span class="quote">&gt; &gt; -</span>
<span class="quote">&gt; &gt; -	l.nop</span>
<span class="quote">&gt; &gt; +	 l.nop</span>
<span class="quote">&gt; &gt;   	l.j     9f</span>
<span class="quote">&gt; &gt; -	l.nop</span>
<span class="quote">&gt; &gt; -8:</span>
<span class="quote">&gt; &gt; +	 l.nop</span>
<span class="quote">&gt; &gt; -	l.lwz   r6,PT_PC(r3)                  // address of an offending insn</span>
<span class="quote">&gt; &gt; +8: // offending insn is in delay slot</span>
<span class="quote">&gt; &gt; +	l.lwz   r6,PT_PC(r3)               // address of an offending insn</span>
<span class="quote">&gt; &gt;   	l.addi  r6,r6,4</span>
<span class="quote">&gt; &gt;   	l.lwz   r6,0(r6)                   // instruction that caused pf</span>
<span class="quote">&gt; &gt;   	l.srli  r6,r6,26                   // get opcode</span>
<span class="quote">&gt; &gt; -9:</span>
<span class="quote">&gt; &gt; +9: // offending instruction opcode loaded in r6</span>
<span class="quote">&gt; &gt;   #else</span>
<span class="quote">&gt; &gt; -	l.mfspr r6,r0,SPR_SR		   // SR</span>
<span class="quote">&gt; &gt; -//	l.lwz	r6,PT_SR(r3)		   // ESR</span>
<span class="quote">&gt; &gt; -	l.andi	r6,r6,SPR_SR_DSX	   // check for delay slot exception</span>
<span class="quote">&gt; &gt; -	l.sfeqi	r6,0x1			   // exception happened in delay slot</span>
<span class="quote">&gt; &gt; -	l.bnf	7f</span>
<span class="quote">&gt; &gt; -	l.lwz	r6,PT_PC(r3)		   // address of an offending insn</span>
<span class="quote">&gt; &gt; +	l.mfspr r6,r0,SPR_SR               // SR</span>
<span class="quote">&gt; &gt; +	l.andi  r6,r6,SPR_SR_DSX           // check for delay slot exception</span>
<span class="quote">&gt; &gt; +	l.sfeqi r6,0x1                     // exception happened in delay slot</span>
<span class="quote">&gt; &gt; +	l.bnf   7f</span>
<span class="quote">&gt; &gt; +	 l.lwz  r6,PT_PC(r3)               // address of an offending insn</span>
<span class="quote">&gt; &gt; -	l.addi	r6,r6,4			   // offending insn is in delay slot</span>
<span class="quote">&gt; &gt; +	l.addi	r6,r6,4                    // offending insn is in delay slot</span>
<span class="quote">&gt; &gt;   7:</span>
<span class="quote">&gt; &gt;   	l.lwz   r6,0(r6)                   // instruction that caused pf</span>
<span class="quote">&gt; &gt;   	l.srli  r6,r6,26                   // check opcode for write access</span>
<span class="quote">&gt; &gt;   #endif</span>
<span class="quote">&gt; &gt; -	l.sfgeui r6,0x33		   // check opcode for write access</span>
<span class="quote">&gt; &gt; +	l.sfgeui r6,0x33                   // check opcode for write access</span>
<span class="quote">&gt; &gt;   	l.bnf   1f</span>
<span class="quote">&gt; &gt;   	l.sfleui r6,0x37</span>
<span class="quote">&gt; &gt;   	l.bnf   1f</span>
<span class="quote">&gt; &gt;   	l.ori   r6,r0,0x1                  // write access</span>
<span class="quote">&gt; &gt;   	l.j     2f</span>
<span class="quote">&gt; &gt; -	l.nop</span>
<span class="quote">&gt; &gt; +	 l.nop</span>
<span class="quote">&gt; &gt;   1:	l.ori   r6,r0,0x0                  // !write access</span>
<span class="quote">&gt; &gt;   2:</span>
<span class="quote">&gt; &gt;   	/* call fault.c handler in or32/mm/fault.c */</span>
<span class="quote">&gt; &gt;   	l.jal   do_page_fault</span>
<span class="quote">&gt; &gt; -	l.nop</span>
<span class="quote">&gt; &gt; +	 l.nop</span>
<span class="quote">&gt; &gt;   	l.j     _ret_from_exception</span>
<span class="quote">&gt; &gt; -	l.nop</span>
<span class="quote">&gt; &gt; +	 l.nop</span>
<span class="quote">&gt; &gt;   /* ---[ 0x400: Insn Page Fault exception ]------------------------------- */</span>
<span class="quote">&gt; &gt;   EXCEPTION_ENTRY(_itlb_miss_page_fault_handler)</span>
<span class="quote">&gt; &gt; @@ -306,9 +304,9 @@ EXCEPTION_ENTRY(_insn_page_fault_handler)</span>
<span class="quote">&gt; &gt;   	/* call fault.c handler in or32/mm/fault.c */</span>
<span class="quote">&gt; &gt;   	l.jal   do_page_fault</span>
<span class="quote">&gt; &gt; -	l.nop</span>
<span class="quote">&gt; &gt; +	 l.nop</span>
<span class="quote">&gt; &gt;   	l.j     _ret_from_exception</span>
<span class="quote">&gt; &gt; -	l.nop</span>
<span class="quote">&gt; &gt; +	 l.nop</span>
<span class="quote">&gt; &gt;   /* ---[ 0x500: Timer exception ]----------------------------------------- */</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/openrisc/kernel/entry.S b/arch/openrisc/kernel/entry.S</span>
<span class="p_header">index ba1a361..daae2a4 100644</span>
<span class="p_header">--- a/arch/openrisc/kernel/entry.S</span>
<span class="p_header">+++ b/arch/openrisc/kernel/entry.S</span>
<span class="p_chunk">@@ -228,7 +228,7 @@</span> <span class="p_context"> EXCEPTION_ENTRY(_data_page_fault_handler)</span>
 	 * DTLB miss handler in the CONFIG_GUARD_PROTECTED_CORE part
 	 */
 #ifdef CONFIG_OPENRISC_NO_SPR_SR_DSX
<span class="p_del">-	l.lwz   r6,PT_PC(r3)                  // address of an offending insn</span>
<span class="p_add">+	l.lwz   r6,PT_PC(r3)               // address of an offending insn</span>
 	l.lwz   r6,0(r6)                   // instruction that caused pf
 
 	l.srli  r6,r6,26                   // check opcode for jump insn
<span class="p_chunk">@@ -244,49 +244,47 @@</span> <span class="p_context"> EXCEPTION_ENTRY(_data_page_fault_handler)</span>
 	l.bf    8f
 	l.sfeqi r6,0x12                    // l.jalr
 	l.bf    8f
<span class="p_del">-</span>
<span class="p_del">-	l.nop</span>
<span class="p_add">+	 l.nop</span>
 
 	l.j     9f
<span class="p_del">-	l.nop</span>
<span class="p_del">-8:</span>
<span class="p_add">+	 l.nop</span>
 
<span class="p_del">-	l.lwz   r6,PT_PC(r3)                  // address of an offending insn</span>
<span class="p_add">+8: // offending insn is in delay slot</span>
<span class="p_add">+	l.lwz   r6,PT_PC(r3)               // address of an offending insn</span>
 	l.addi  r6,r6,4
 	l.lwz   r6,0(r6)                   // instruction that caused pf
 	l.srli  r6,r6,26                   // get opcode
<span class="p_del">-9:</span>
<span class="p_add">+9: // offending instruction opcode loaded in r6</span>
 
 #else
 
<span class="p_del">-	l.mfspr r6,r0,SPR_SR		   // SR</span>
<span class="p_del">-//	l.lwz	r6,PT_SR(r3)		   // ESR</span>
<span class="p_del">-	l.andi	r6,r6,SPR_SR_DSX	   // check for delay slot exception</span>
<span class="p_del">-	l.sfeqi	r6,0x1			   // exception happened in delay slot</span>
<span class="p_del">-	l.bnf	7f</span>
<span class="p_del">-	l.lwz	r6,PT_PC(r3)		   // address of an offending insn</span>
<span class="p_add">+	l.mfspr r6,r0,SPR_SR               // SR</span>
<span class="p_add">+	l.andi  r6,r6,SPR_SR_DSX           // check for delay slot exception</span>
<span class="p_add">+	l.sfeqi r6,0x1                     // exception happened in delay slot</span>
<span class="p_add">+	l.bnf   7f</span>
<span class="p_add">+	 l.lwz  r6,PT_PC(r3)               // address of an offending insn</span>
 
<span class="p_del">-	l.addi	r6,r6,4			   // offending insn is in delay slot</span>
<span class="p_add">+	l.addi	r6,r6,4                    // offending insn is in delay slot</span>
 7:
 	l.lwz   r6,0(r6)                   // instruction that caused pf
 	l.srli  r6,r6,26                   // check opcode for write access
 #endif
 
<span class="p_del">-	l.sfgeui r6,0x33		   // check opcode for write access</span>
<span class="p_add">+	l.sfgeui r6,0x33                   // check opcode for write access</span>
 	l.bnf   1f
 	l.sfleui r6,0x37
 	l.bnf   1f
 	l.ori   r6,r0,0x1                  // write access
 	l.j     2f
<span class="p_del">-	l.nop</span>
<span class="p_add">+	 l.nop</span>
 1:	l.ori   r6,r0,0x0                  // !write access
 2:
 
 	/* call fault.c handler in or32/mm/fault.c */
 	l.jal   do_page_fault
<span class="p_del">-	l.nop</span>
<span class="p_add">+	 l.nop</span>
 	l.j     _ret_from_exception
<span class="p_del">-	l.nop</span>
<span class="p_add">+	 l.nop</span>
 
 /* ---[ 0x400: Insn Page Fault exception ]------------------------------- */
 EXCEPTION_ENTRY(_itlb_miss_page_fault_handler)
<span class="p_chunk">@@ -306,9 +304,9 @@</span> <span class="p_context"> EXCEPTION_ENTRY(_insn_page_fault_handler)</span>
 
 	/* call fault.c handler in or32/mm/fault.c */
 	l.jal   do_page_fault
<span class="p_del">-	l.nop</span>
<span class="p_add">+	 l.nop</span>
 	l.j     _ret_from_exception
<span class="p_del">-	l.nop</span>
<span class="p_add">+	 l.nop</span>
 
 
 /* ---[ 0x500: Timer exception ]----------------------------------------- */

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



