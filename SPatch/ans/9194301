
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/2] sparc64: Fix pagetable freeing for hugepage regions - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/2] sparc64: Fix pagetable freeing for hugepage regions</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=145751">Nitin Gupta</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 23, 2016, 1:11 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1466644374-58354-2-git-send-email-nitin.m.gupta@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9194301/mbox/"
   >mbox</a>
|
   <a href="/patch/9194301/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9194301/">/patch/9194301/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	304386075A for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 23 Jun 2016 01:14:22 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1ED0828418
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 23 Jun 2016 01:14:22 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 1253E28425; Thu, 23 Jun 2016 01:14:22 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	UNPARSEABLE_RELAY autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6D1A428418
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 23 Jun 2016 01:14:21 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751999AbcFWBOC (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 22 Jun 2016 21:14:02 -0400
Received: from aserp1040.oracle.com ([141.146.126.69]:27972 &quot;EHLO
	aserp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751573AbcFWBN6 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 22 Jun 2016 21:13:58 -0400
Received: from userv0021.oracle.com (userv0021.oracle.com [156.151.31.71])
	by aserp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2) with
	ESMTP id u5N1DUix031300
	(version=TLSv1 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Thu, 23 Jun 2016 01:13:31 GMT
Received: from userv0122.oracle.com (userv0122.oracle.com [156.151.31.75])
	by userv0021.oracle.com (8.13.8/8.13.8) with ESMTP id u5N1DUgW028504
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Thu, 23 Jun 2016 01:13:30 GMT
Received: from abhmp0005.oracle.com (abhmp0005.oracle.com [141.146.116.11])
	by userv0122.oracle.com (8.14.4/8.14.4) with ESMTP id
	u5N1DQUm004658; Thu, 23 Jun 2016 01:13:26 GMT
Received: from ca-qasparc20.us.oracle.com (/10.147.24.73)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Wed, 22 Jun 2016 18:13:26 -0700
From: Nitin Gupta &lt;nitin.m.gupta@oracle.com&gt;
To: &quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;
Cc: Nitin Gupta &lt;nitin.m.gupta@oracle.com&gt;,
	&quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Zhang Zhen &lt;zhenzhang.zhang@huawei.com&gt;,
	Dominik Dingel &lt;dingel@linux.vnet.ibm.com&gt;,
	Martin Schwidefsky &lt;schwidefsky@de.ibm.com&gt;,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;,
	Mike Kravetz &lt;mike.kravetz@oracle.com&gt;,
	Hillf Danton &lt;hillf.zj@alibaba-inc.com&gt;, Michal Hocko &lt;mhocko@suse.com&gt;,
	Chen Gang &lt;chengang@emindsoft.com.cn&gt;, David Woods &lt;dwoods@ezchip.com&gt;,
	Yaowei Bai &lt;baiyaowei@cmss.chinamobile.com&gt;,
	sparclinux@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH 2/2] sparc64: Fix pagetable freeing for hugepage regions
Date: Wed, 22 Jun 2016 18:11:42 -0700
Message-Id: &lt;1466644374-58354-2-git-send-email-nitin.m.gupta@oracle.com&gt;
X-Mailer: git-send-email 1.7.1
In-Reply-To: &lt;1466644374-58354-1-git-send-email-nitin.m.gupta@oracle.com&gt;
References: &lt;1466644374-58354-1-git-send-email-nitin.m.gupta@oracle.com&gt;
X-Source-IP: userv0021.oracle.com [156.151.31.71]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=145751">Nitin Gupta</a> - June 23, 2016, 1:11 a.m.</div>
<pre class="content">
8M pages now allocate page tables till PMD level only.
So, when freeing page table for 8M hugepage backed region,
make sure we don&#39;t try to access non-existent PTE level.
<span class="signed-off-by">
Signed-off-by: Nitin Gupta &lt;nitin.m.gupta@oracle.com&gt;</span>
---
 arch/sparc/include/asm/hugetlb.h |  8 ----
 arch/sparc/mm/hugetlbpage.c      | 98 ++++++++++++++++++++++++++++++++++++++++
 include/linux/hugetlb.h          |  4 ++
 3 files changed, 102 insertions(+), 8 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=143191">kbuild test robot</a> - June 23, 2016, 2:38 a.m.</div>
<pre class="content">
Hi,

[auto build test ERROR on sparc/master]
[also build test ERROR on v4.7-rc4 next-20160622]
[cannot apply to sparc-next/master]
[if your patch is applied to the wrong git tree, please drop us a note to help improve the system]

url:    https://github.com/0day-ci/linux/commits/Nitin-Gupta/sparc64-Trim-page-tables-for-8M-hugepages/20160623-092926
base:   https://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc.git master
config: i386-defconfig (attached as .config)
compiler: gcc-6 (Debian 6.1.1-1) 6.1.1 20160430
reproduce:
        # save the attached .config to linux build tree
        make ARCH=i386 

All errors (new ones prefixed by &gt;&gt;):

   In file included from include/linux/hugetlb.h:420:0,
                    from kernel/fork.c:38:
<span class="quote">&gt;&gt; arch/x86/include/asm/hugetlb.h:30:20: error: static declaration of &#39;hugetlb_free_pgd_range&#39; follows non-static declaration</span>
    static inline void hugetlb_free_pgd_range(struct mmu_gather *tlb,
                       ^~~~~~~~~~~~~~~~~~~~~~
   In file included from kernel/fork.c:38:0:
   include/linux/hugetlb.h:123:6: note: previous declaration of &#39;hugetlb_free_pgd_range&#39; was here
    void hugetlb_free_pgd_range(struct mmu_gather *tlb, unsigned long addr,
         ^~~~~~~~~~~~~~~~~~~~~~

vim +/hugetlb_free_pgd_range +30 arch/x86/include/asm/hugetlb.h

6d779079 include/asm-x86/hugetlb.h Gerald Schaefer 2008-04-28  24  		return -EINVAL;
a5516438 include/asm-x86/hugetlb.h Andi Kleen      2008-07-23  25  	if (addr &amp; ~huge_page_mask(h))
6d779079 include/asm-x86/hugetlb.h Gerald Schaefer 2008-04-28  26  		return -EINVAL;
6d779079 include/asm-x86/hugetlb.h Gerald Schaefer 2008-04-28  27  	return 0;
6d779079 include/asm-x86/hugetlb.h Gerald Schaefer 2008-04-28  28  }
6d779079 include/asm-x86/hugetlb.h Gerald Schaefer 2008-04-28  29  
42b77728 include/asm-x86/hugetlb.h Jan Beulich     2008-07-23 @30  static inline void hugetlb_free_pgd_range(struct mmu_gather *tlb,
6d779079 include/asm-x86/hugetlb.h Gerald Schaefer 2008-04-28  31  					  unsigned long addr, unsigned long end,
6d779079 include/asm-x86/hugetlb.h Gerald Schaefer 2008-04-28  32  					  unsigned long floor,
6d779079 include/asm-x86/hugetlb.h Gerald Schaefer 2008-04-28  33  					  unsigned long ceiling)

:::::: The code at line 30 was first introduced by commit
:::::: 42b7772812d15b86543a23b82bd6070eef9a08b1 mm: remove double indirection on tlb parameter to free_pgd_range() &amp; Co

:::::: TO: Jan Beulich &lt;jbeulich@novell.com&gt;
:::::: CC: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;

---
0-DAY kernel test infrastructure                Open Source Technology Center
https://lists.01.org/pipermail/kbuild-all                   Intel Corporation
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=143191">kbuild test robot</a> - June 23, 2016, 3:27 a.m.</div>
<pre class="content">
Hi,

[auto build test ERROR on sparc/master]
[also build test ERROR on v4.7-rc4 next-20160622]
[cannot apply to sparc-next/master]
[if your patch is applied to the wrong git tree, please drop us a note to help improve the system]

url:    https://github.com/0day-ci/linux/commits/Nitin-Gupta/sparc64-Trim-page-tables-for-8M-hugepages/20160623-092926
base:   https://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc.git master
config: sh-sh7785lcr_32bit_defconfig (attached as .config)
compiler: sh4-linux-gnu-gcc (Debian 5.3.1-8) 5.3.1 20160205
reproduce:
        wget https://git.kernel.org/cgit/linux/kernel/git/wfg/lkp-tests.git/plain/sbin/make.cross -O ~/bin/make.cross
        chmod +x ~/bin/make.cross
        # save the attached .config to linux build tree
        make.cross ARCH=sh 

All errors (new ones prefixed by &gt;&gt;):

   In file included from include/linux/hugetlb.h:420:0,
                    from fs/hugetlbfs/inode.c:28:
<span class="quote">&gt;&gt; arch/sh/include/asm/hugetlb.h:29:20: error: static declaration of &#39;hugetlb_free_pgd_range&#39; follows non-static declaration</span>
    static inline void hugetlb_free_pgd_range(struct mmu_gather *tlb,
                       ^
   In file included from fs/hugetlbfs/inode.c:28:0:
   include/linux/hugetlb.h:123:6: note: previous declaration of &#39;hugetlb_free_pgd_range&#39; was here
    void hugetlb_free_pgd_range(struct mmu_gather *tlb, unsigned long addr,
         ^

vim +/hugetlb_free_pgd_range +29 arch/sh/include/asm/hugetlb.h

6d779079 include/asm-sh/hugetlb.h Gerald Schaefer 2008-04-28  23  		return -EINVAL;
6d779079 include/asm-sh/hugetlb.h Gerald Schaefer 2008-04-28  24  	if (addr &amp; ~HPAGE_MASK)
6d779079 include/asm-sh/hugetlb.h Gerald Schaefer 2008-04-28  25  		return -EINVAL;
6d779079 include/asm-sh/hugetlb.h Gerald Schaefer 2008-04-28  26  	return 0;
6d779079 include/asm-sh/hugetlb.h Gerald Schaefer 2008-04-28  27  }
6d779079 include/asm-sh/hugetlb.h Gerald Schaefer 2008-04-28  28  
42b77728 include/asm-sh/hugetlb.h Jan Beulich     2008-07-23 @29  static inline void hugetlb_free_pgd_range(struct mmu_gather *tlb,
6d779079 include/asm-sh/hugetlb.h Gerald Schaefer 2008-04-28  30  					  unsigned long addr, unsigned long end,
6d779079 include/asm-sh/hugetlb.h Gerald Schaefer 2008-04-28  31  					  unsigned long floor,
6d779079 include/asm-sh/hugetlb.h Gerald Schaefer 2008-04-28  32  					  unsigned long ceiling)

:::::: The code at line 29 was first introduced by commit
:::::: 42b7772812d15b86543a23b82bd6070eef9a08b1 mm: remove double indirection on tlb parameter to free_pgd_range() &amp; Co

:::::: TO: Jan Beulich &lt;jbeulich@novell.com&gt;
:::::: CC: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;

---
0-DAY kernel test infrastructure                Open Source Technology Center
https://lists.01.org/pipermail/kbuild-all                   Intel Corporation
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=143191">kbuild test robot</a> - June 23, 2016, 3:30 a.m.</div>
<pre class="content">
Hi,

[auto build test ERROR on sparc/master]
[also build test ERROR on v4.7-rc4 next-20160622]
[cannot apply to sparc-next/master]
[if your patch is applied to the wrong git tree, please drop us a note to help improve the system]

url:    https://github.com/0day-ci/linux/commits/Nitin-Gupta/sparc64-Trim-page-tables-for-8M-hugepages/20160623-092926
base:   https://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc.git master
config: tile-tilegx_defconfig (attached as .config)
compiler: tilegx-linux-gcc (GCC) 4.6.2
reproduce:
        wget https://git.kernel.org/cgit/linux/kernel/git/wfg/lkp-tests.git/plain/sbin/make.cross -O ~/bin/make.cross
        chmod +x ~/bin/make.cross
        # save the attached .config to linux build tree
        make.cross ARCH=tile 

All errors (new ones prefixed by &gt;&gt;):

   In file included from include/linux/hugetlb.h:420:0,
                    from arch/tile/kernel/proc.c:25:
<span class="quote">&gt;&gt; arch/tile/include/asm/hugetlb.h:43:20: error: static declaration of &#39;hugetlb_free_pgd_range&#39; follows non-static declaration</span>
   include/linux/hugetlb.h:123:6: note: previous declaration of &#39;hugetlb_free_pgd_range&#39; was here

vim +/hugetlb_free_pgd_range +43 arch/tile/include/asm/hugetlb.h

867e359b Chris Metcalf 2010-05-28  37  		return -EINVAL;
867e359b Chris Metcalf 2010-05-28  38  	if (addr &amp; ~huge_page_mask(h))
867e359b Chris Metcalf 2010-05-28  39  		return -EINVAL;
867e359b Chris Metcalf 2010-05-28  40  	return 0;
867e359b Chris Metcalf 2010-05-28  41  }
867e359b Chris Metcalf 2010-05-28  42  
867e359b Chris Metcalf 2010-05-28 @43  static inline void hugetlb_free_pgd_range(struct mmu_gather *tlb,
867e359b Chris Metcalf 2010-05-28  44  					  unsigned long addr, unsigned long end,
867e359b Chris Metcalf 2010-05-28  45  					  unsigned long floor,
867e359b Chris Metcalf 2010-05-28  46  					  unsigned long ceiling)

:::::: The code at line 43 was first introduced by commit
:::::: 867e359b97c970a60626d5d76bbe2a8fadbf38fb arch/tile: core support for Tilera 32-bit chips.

:::::: TO: Chris Metcalf &lt;cmetcalf@tilera.com&gt;
:::::: CC: Chris Metcalf &lt;cmetcalf@tilera.com&gt;

---
0-DAY kernel test infrastructure                Open Source Technology Center
https://lists.01.org/pipermail/kbuild-all                   Intel Corporation
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/sparc/include/asm/hugetlb.h b/arch/sparc/include/asm/hugetlb.h</span>
<span class="p_header">index 139e711..1a6708c 100644</span>
<span class="p_header">--- a/arch/sparc/include/asm/hugetlb.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/hugetlb.h</span>
<span class="p_chunk">@@ -31,14 +31,6 @@</span> <span class="p_context"> static inline int prepare_hugepage_range(struct file *file,</span>
 	return 0;
 }
 
<span class="p_del">-static inline void hugetlb_free_pgd_range(struct mmu_gather *tlb,</span>
<span class="p_del">-					  unsigned long addr, unsigned long end,</span>
<span class="p_del">-					  unsigned long floor,</span>
<span class="p_del">-					  unsigned long ceiling)</span>
<span class="p_del">-{</span>
<span class="p_del">-	free_pgd_range(tlb, addr, end, floor, ceiling);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline void huge_ptep_clear_flush(struct vm_area_struct *vma,
 					 unsigned long addr, pte_t *ptep)
 {
<span class="p_header">diff --git a/arch/sparc/mm/hugetlbpage.c b/arch/sparc/mm/hugetlbpage.c</span>
<span class="p_header">index cafb5ca..494c390 100644</span>
<span class="p_header">--- a/arch/sparc/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/sparc/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -12,6 +12,7 @@</span> <span class="p_context"></span>
 
 #include &lt;asm/mman.h&gt;
 #include &lt;asm/pgalloc.h&gt;
<span class="p_add">+#include &lt;asm/pgtable.h&gt;</span>
 #include &lt;asm/tlb.h&gt;
 #include &lt;asm/tlbflush.h&gt;
 #include &lt;asm/cacheflush.h&gt;
<span class="p_chunk">@@ -202,3 +203,100 @@</span> <span class="p_context"> int pud_huge(pud_t pud)</span>
 {
 	return 0;
 }
<span class="p_add">+</span>
<span class="p_add">+static void hugetlb_free_pte_range(struct mmu_gather *tlb, pmd_t *pmd,</span>
<span class="p_add">+			   unsigned long addr)</span>
<span class="p_add">+{</span>
<span class="p_add">+	pgtable_t token = pmd_pgtable(*pmd);</span>
<span class="p_add">+</span>
<span class="p_add">+	pmd_clear(pmd);</span>
<span class="p_add">+	pte_free_tlb(tlb, token, addr);</span>
<span class="p_add">+	atomic_long_dec(&amp;tlb-&gt;mm-&gt;nr_ptes);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static void hugetlb_free_pmd_range(struct mmu_gather *tlb, pud_t *pud,</span>
<span class="p_add">+				   unsigned long addr, unsigned long end,</span>
<span class="p_add">+				   unsigned long floor, unsigned long ceiling)</span>
<span class="p_add">+{</span>
<span class="p_add">+	pmd_t *pmd;</span>
<span class="p_add">+	unsigned long next;</span>
<span class="p_add">+	unsigned long start;</span>
<span class="p_add">+</span>
<span class="p_add">+	start = addr;</span>
<span class="p_add">+	pmd = pmd_offset(pud, addr);</span>
<span class="p_add">+	do {</span>
<span class="p_add">+		next = pmd_addr_end(addr, end);</span>
<span class="p_add">+		if (pmd_none(*pmd))</span>
<span class="p_add">+			continue;</span>
<span class="p_add">+		if (is_hugetlb_pmd(*pmd))</span>
<span class="p_add">+			pmd_clear(pmd);</span>
<span class="p_add">+		else</span>
<span class="p_add">+			hugetlb_free_pte_range(tlb, pmd, addr);</span>
<span class="p_add">+	} while (pmd++, addr = next, addr != end);</span>
<span class="p_add">+</span>
<span class="p_add">+	start &amp;= PUD_MASK;</span>
<span class="p_add">+	if (start &lt; floor)</span>
<span class="p_add">+		return;</span>
<span class="p_add">+	if (ceiling) {</span>
<span class="p_add">+		ceiling &amp;= PUD_MASK;</span>
<span class="p_add">+		if (!ceiling)</span>
<span class="p_add">+			return;</span>
<span class="p_add">+	}</span>
<span class="p_add">+	if (end - 1 &gt; ceiling - 1)</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	pmd = pmd_offset(pud, start);</span>
<span class="p_add">+	pud_clear(pud);</span>
<span class="p_add">+	pmd_free_tlb(tlb, pmd, start);</span>
<span class="p_add">+	mm_dec_nr_pmds(tlb-&gt;mm);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static void hugetlb_free_pud_range(struct mmu_gather *tlb, pgd_t *pgd,</span>
<span class="p_add">+				   unsigned long addr, unsigned long end,</span>
<span class="p_add">+				   unsigned long floor, unsigned long ceiling)</span>
<span class="p_add">+{</span>
<span class="p_add">+	pud_t *pud;</span>
<span class="p_add">+	unsigned long next;</span>
<span class="p_add">+	unsigned long start;</span>
<span class="p_add">+</span>
<span class="p_add">+	start = addr;</span>
<span class="p_add">+	pud = pud_offset(pgd, addr);</span>
<span class="p_add">+	do {</span>
<span class="p_add">+		next = pud_addr_end(addr, end);</span>
<span class="p_add">+		if (pud_none_or_clear_bad(pud))</span>
<span class="p_add">+			continue;</span>
<span class="p_add">+		hugetlb_free_pmd_range(tlb, pud, addr, next, floor,</span>
<span class="p_add">+				       ceiling);</span>
<span class="p_add">+	} while (pud++, addr = next, addr != end);</span>
<span class="p_add">+</span>
<span class="p_add">+	start &amp;= PGDIR_MASK;</span>
<span class="p_add">+	if (start &lt; floor)</span>
<span class="p_add">+		return;</span>
<span class="p_add">+	if (ceiling) {</span>
<span class="p_add">+		ceiling &amp;= PGDIR_MASK;</span>
<span class="p_add">+		if (!ceiling)</span>
<span class="p_add">+			return;</span>
<span class="p_add">+	}</span>
<span class="p_add">+	if (end - 1 &gt; ceiling - 1)</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	pud = pud_offset(pgd, start);</span>
<span class="p_add">+	pgd_clear(pgd);</span>
<span class="p_add">+	pud_free_tlb(tlb, pud, start);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+void hugetlb_free_pgd_range(struct mmu_gather *tlb,</span>
<span class="p_add">+			    unsigned long addr, unsigned long end,</span>
<span class="p_add">+			    unsigned long floor, unsigned long ceiling)</span>
<span class="p_add">+{</span>
<span class="p_add">+	pgd_t *pgd;</span>
<span class="p_add">+	unsigned long next;</span>
<span class="p_add">+</span>
<span class="p_add">+	pgd = pgd_offset(tlb-&gt;mm, addr);</span>
<span class="p_add">+	do {</span>
<span class="p_add">+		next = pgd_addr_end(addr, end);</span>
<span class="p_add">+		if (pgd_none_or_clear_bad(pgd))</span>
<span class="p_add">+			continue;</span>
<span class="p_add">+		hugetlb_free_pud_range(tlb, pgd, addr, next, floor, ceiling);</span>
<span class="p_add">+	} while (pgd++, addr = next, addr != end);</span>
<span class="p_add">+}</span>
<span class="p_header">diff --git a/include/linux/hugetlb.h b/include/linux/hugetlb.h</span>
<span class="p_header">index c26d463..4461309 100644</span>
<span class="p_header">--- a/include/linux/hugetlb.h</span>
<span class="p_header">+++ b/include/linux/hugetlb.h</span>
<span class="p_chunk">@@ -120,6 +120,10 @@</span> <span class="p_context"> int pud_huge(pud_t pmd);</span>
 unsigned long hugetlb_change_protection(struct vm_area_struct *vma,
 		unsigned long address, unsigned long end, pgprot_t newprot);
 
<span class="p_add">+void hugetlb_free_pgd_range(struct mmu_gather *tlb, unsigned long addr,</span>
<span class="p_add">+			    unsigned long end, unsigned long floor,</span>
<span class="p_add">+			    unsigned long ceiling);</span>
<span class="p_add">+</span>
 #else /* !CONFIG_HUGETLB_PAGE */
 
 static inline void reset_vma_resv_huge_pages(struct vm_area_struct *vma)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



