
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v6,24/46] x86: dma-mapping: Use unsigned long for dma_attrs - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v6,24/46] x86: dma-mapping: Use unsigned long for dma_attrs</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=72608">Krzysztof Kozlowski</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 13, 2016, 8:41 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1468399300-5399-24-git-send-email-k.kozlowski@samsung.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9227233/mbox/"
   >mbox</a>
|
   <a href="/patch/9227233/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9227233/">/patch/9227233/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	B8099608A1 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 13 Jul 2016 08:51:11 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id A8FCB27D85
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 13 Jul 2016 08:51:11 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 9CD5527BFA; Wed, 13 Jul 2016 08:51:11 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 8FBFE2766D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 13 Jul 2016 08:51:10 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932421AbcGMIu5 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 13 Jul 2016 04:50:57 -0400
Received: from mailout3.w1.samsung.com ([210.118.77.13]:55532 &quot;EHLO
	mailout3.w1.samsung.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752148AbcGMImg (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 13 Jul 2016 04:42:36 -0400
Received: from eucpsbgm2.samsung.com (unknown [203.254.199.245])
	by mailout3.w1.samsung.com
	(Oracle Communications Messaging Server 7.0.5.31.0 64bit (built May 5
	2014))
	with ESMTP id &lt;0OA800J52W6NYA30@mailout3.w1.samsung.com&gt;; Wed,
	13 Jul 2016 09:42:24 +0100 (BST)
X-AuditID: cbfec7f5-f792a6d000001302-39-5785feef648b
Received: from eusync3.samsung.com ( [203.254.199.213])
	by eucpsbgm2.samsung.com (EUCPMTA) with SMTP id 68.31.04866.FEEF5875;
	Wed, 13 Jul 2016 09:42:23 +0100 (BST)
Received: from AMDC2174.DIGITAL.local ([106.120.53.17])
	by eusync3.samsung.com (Oracle Communications Messaging Server
	7.0.5.31.0 64bit (built May  5 2014))
	with ESMTPA id &lt;0OA800KINW5J0E10@eusync3.samsung.com&gt;; Wed,
	13 Jul 2016 09:42:23 +0100 (BST)
From: Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: linux-kernel@vger.kernel.org, hch@infradead.org,
	Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;,
	Bartlomiej Zolnierkiewicz &lt;b.zolnierkie@samsung.com&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;, x86@kernel.org,
	Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;,
	David Vrabel &lt;david.vrabel@citrix.com&gt;, Juergen Gross &lt;jgross@suse.com&gt;,
	Muli Ben-Yehuda &lt;mulix@mulix.org&gt;, Jon Mason &lt;jdmason@kudzu.us&gt;,
	Konrad Rzeszutek Wilk &lt;konrad.wilk@oracle.com&gt;,
	Bjorn Helgaas &lt;bhelgaas@google.com&gt;, Keith Busch &lt;keith.busch@intel.com&gt;,
	xen-devel@lists.xenproject.org, iommu@lists.linux-foundation.org,
	linux-pci@vger.kernel.org
Subject: [PATCH v6 24/46] x86: dma-mapping: Use unsigned long for dma_attrs
Date: Wed, 13 Jul 2016 10:41:15 +0200
Message-id: &lt;1468399300-5399-24-git-send-email-k.kozlowski@samsung.com&gt;
X-Mailer: git-send-email 1.9.1
In-reply-to: &lt;1468399300-5399-23-git-send-email-k.kozlowski@samsung.com&gt;
References: &lt;1468399167-28083-1-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-1-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-2-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-3-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-4-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-5-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-6-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-7-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-8-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-9-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-10-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-11-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-12-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-13-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-14-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-15-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-16-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-17-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-18-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-19-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-20-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-21-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-22-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-23-git-send-email-k.kozlowski@samsung.com&gt;
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFmpjkeLIzCtJLcpLzFFi42I5/e/4Vd33/1rDDWZ/MbeYs34Nm8XGGetZ
	LZY0ZVhcnN7KYrF8ha/F6QmLmCymbRS3WLDf2mLNpTY2izk3jSxevzC0uHf0C5PFssVPGS0u
	75rDZnF23nE2i0sHFjBZrD94m8Vi86apzBY/Njxmtfi+ZTKTg4jH68kTGD0WbCr12LxCy2Px
	npdMHptWdbJ5LFj/hNXj3blz7B4nZvxm8Zh8Yzmjx+EPV1g8Lj87w+Tx8ektFo/3+66yefRt
	WcXosX7LVRaPz5vkAgSjuGxSUnMyy1KL9O0SuDLO7JnOXHC0tuLr2m6mBsa9KV2MnBwSAiYS
	hx4uYoOwxSQu3FsPZHNxCAksZZRYcW8/lNPIJLHq6lywKjYBY4nNy5eA2SICuhKrnu9iBili
	FtjKKtG08xUzSEJYwFui7dJ8sCIWAVWJiXtXsoLYvALuElc7njJBrJOTOHlsMlicU8BDov3n
	X3aIbRe4JU727meawMi7gJFhFaNoamlyQXFSeq6RXnFibnFpXrpecn7uJkZI7Hzdwbj0mNUh
	RgEORiUe3hWCreFCrIllxZW5hxglOJiVRHhNfwKFeFMSK6tSi/Lji0pzUosPMUpzsCiJ887c
	9T5ESCA9sSQ1OzW1ILUIJsvEwSnVwMh5NfeW+5RFBsbftjWarXj74XtZfp3UcucHOxbuY7YJ
	uLstw+Kxml5bjp3Qp6h72l3z648scNlrcjliypIKNhXRR+Zf6i8nyDnEu/d8Vnsk9PlE25WT
	4v1rb6tGBSs+eHIjpFN98cGlEmYz5Zvd5lUfPNe0r/DIpOAzt+bMzfxwZM/Tm6xulyuVWIoz
	Eg21mIuKEwEiJcGJmQIAAA==
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72608">Krzysztof Kozlowski</a> - July 13, 2016, 8:41 a.m.</div>
<pre class="content">
Split out subsystem specific changes for easier reviews. This will be
squashed with main commit.
<span class="signed-off-by">
Signed-off-by: Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;</span>
---
 arch/x86/include/asm/dma-mapping.h       |  5 ++---
 arch/x86/include/asm/swiotlb.h           |  4 ++--
 arch/x86/include/asm/xen/page-coherent.h |  9 ++++-----
 arch/x86/kernel/amd_gart_64.c            | 20 ++++++++++----------
 arch/x86/kernel/pci-calgary_64.c         | 14 +++++++-------
 arch/x86/kernel/pci-dma.c                |  4 ++--
 arch/x86/kernel/pci-nommu.c              |  4 ++--
 arch/x86/kernel/pci-swiotlb.c            |  4 ++--
 arch/x86/pci/sta2x11-fixup.c             |  2 +-
 arch/x86/pci/vmd.c                       | 16 ++++++++--------
 10 files changed, 40 insertions(+), 42 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/dma-mapping.h b/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_header">index 3a27b93e6261..44461626830e 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -9,7 +9,6 @@</span> <span class="p_context"></span>
 #include &lt;linux/kmemcheck.h&gt;
 #include &lt;linux/scatterlist.h&gt;
 #include &lt;linux/dma-debug.h&gt;
<span class="p_del">-#include &lt;linux/dma-attrs.h&gt;</span>
 #include &lt;asm/io.h&gt;
 #include &lt;asm/swiotlb.h&gt;
 #include &lt;linux/dma-contiguous.h&gt;
<span class="p_chunk">@@ -48,11 +47,11 @@</span> <span class="p_context"> extern int dma_supported(struct device *hwdev, u64 mask);</span>
 
 extern void *dma_generic_alloc_coherent(struct device *dev, size_t size,
 					dma_addr_t *dma_addr, gfp_t flag,
<span class="p_del">-					struct dma_attrs *attrs);</span>
<span class="p_add">+					unsigned long attrs);</span>
 
 extern void dma_generic_free_coherent(struct device *dev, size_t size,
 				      void *vaddr, dma_addr_t dma_addr,
<span class="p_del">-				      struct dma_attrs *attrs);</span>
<span class="p_add">+				      unsigned long attrs);</span>
 
 #ifdef CONFIG_X86_DMA_REMAP /* Platform code defines bridge-specific code */
 extern bool dma_capable(struct device *dev, dma_addr_t addr, size_t size);
<span class="p_header">diff --git a/arch/x86/include/asm/swiotlb.h b/arch/x86/include/asm/swiotlb.h</span>
<span class="p_header">index ab05d73e2bb7..d2f69b9ff732 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/swiotlb.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/swiotlb.h</span>
<span class="p_chunk">@@ -31,9 +31,9 @@</span> <span class="p_context"> static inline void dma_mark_clean(void *addr, size_t size) {}</span>
 
 extern void *x86_swiotlb_alloc_coherent(struct device *hwdev, size_t size,
 					dma_addr_t *dma_handle, gfp_t flags,
<span class="p_del">-					struct dma_attrs *attrs);</span>
<span class="p_add">+					unsigned long attrs);</span>
 extern void x86_swiotlb_free_coherent(struct device *dev, size_t size,
 					void *vaddr, dma_addr_t dma_addr,
<span class="p_del">-					struct dma_attrs *attrs);</span>
<span class="p_add">+					unsigned long attrs);</span>
 
 #endif /* _ASM_X86_SWIOTLB_H */
<span class="p_header">diff --git a/arch/x86/include/asm/xen/page-coherent.h b/arch/x86/include/asm/xen/page-coherent.h</span>
<span class="p_header">index acd844c017d3..f02f025ff988 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/xen/page-coherent.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/xen/page-coherent.h</span>
<span class="p_chunk">@@ -2,12 +2,11 @@</span> <span class="p_context"></span>
 #define _ASM_X86_XEN_PAGE_COHERENT_H
 
 #include &lt;asm/page.h&gt;
<span class="p_del">-#include &lt;linux/dma-attrs.h&gt;</span>
 #include &lt;linux/dma-mapping.h&gt;
 
 static inline void *xen_alloc_coherent_pages(struct device *hwdev, size_t size,
 		dma_addr_t *dma_handle, gfp_t flags,
<span class="p_del">-		struct dma_attrs *attrs)</span>
<span class="p_add">+		unsigned long attrs)</span>
 {
 	void *vstart = (void*)__get_free_pages(flags, get_order(size));
 	*dma_handle = virt_to_phys(vstart);
<span class="p_chunk">@@ -16,18 +15,18 @@</span> <span class="p_context"> static inline void *xen_alloc_coherent_pages(struct device *hwdev, size_t size,</span>
 
 static inline void xen_free_coherent_pages(struct device *hwdev, size_t size,
 		void *cpu_addr, dma_addr_t dma_handle,
<span class="p_del">-		struct dma_attrs *attrs)</span>
<span class="p_add">+		unsigned long attrs)</span>
 {
 	free_pages((unsigned long) cpu_addr, get_order(size));
 }
 
 static inline void xen_dma_map_page(struct device *hwdev, struct page *page,
 	     dma_addr_t dev_addr, unsigned long offset, size_t size,
<span class="p_del">-	     enum dma_data_direction dir, struct dma_attrs *attrs) { }</span>
<span class="p_add">+	     enum dma_data_direction dir, unsigned long attrs) { }</span>
 
 static inline void xen_dma_unmap_page(struct device *hwdev, dma_addr_t handle,
 		size_t size, enum dma_data_direction dir,
<span class="p_del">-		struct dma_attrs *attrs) { }</span>
<span class="p_add">+		unsigned long attrs) { }</span>
 
 static inline void xen_dma_sync_single_for_cpu(struct device *hwdev,
 		dma_addr_t handle, size_t size, enum dma_data_direction dir) { }
<span class="p_header">diff --git a/arch/x86/kernel/amd_gart_64.c b/arch/x86/kernel/amd_gart_64.c</span>
<span class="p_header">index 8e3842fc8bea..4aff288e37a4 100644</span>
<span class="p_header">--- a/arch/x86/kernel/amd_gart_64.c</span>
<span class="p_header">+++ b/arch/x86/kernel/amd_gart_64.c</span>
<span class="p_chunk">@@ -242,7 +242,7 @@</span> <span class="p_context"> static dma_addr_t dma_map_area(struct device *dev, dma_addr_t phys_mem,</span>
 static dma_addr_t gart_map_page(struct device *dev, struct page *page,
 				unsigned long offset, size_t size,
 				enum dma_data_direction dir,
<span class="p_del">-				struct dma_attrs *attrs)</span>
<span class="p_add">+				unsigned long attrs)</span>
 {
 	unsigned long bus;
 	phys_addr_t paddr = page_to_phys(page) + offset;
<span class="p_chunk">@@ -264,7 +264,7 @@</span> <span class="p_context"> static dma_addr_t gart_map_page(struct device *dev, struct page *page,</span>
  */
 static void gart_unmap_page(struct device *dev, dma_addr_t dma_addr,
 			    size_t size, enum dma_data_direction dir,
<span class="p_del">-			    struct dma_attrs *attrs)</span>
<span class="p_add">+			    unsigned long attrs)</span>
 {
 	unsigned long iommu_page;
 	int npages;
<span class="p_chunk">@@ -286,7 +286,7 @@</span> <span class="p_context"> static void gart_unmap_page(struct device *dev, dma_addr_t dma_addr,</span>
  * Wrapper for pci_unmap_single working with scatterlists.
  */
 static void gart_unmap_sg(struct device *dev, struct scatterlist *sg, int nents,
<span class="p_del">-			  enum dma_data_direction dir, struct dma_attrs *attrs)</span>
<span class="p_add">+			  enum dma_data_direction dir, unsigned long attrs)</span>
 {
 	struct scatterlist *s;
 	int i;
<span class="p_chunk">@@ -294,7 +294,7 @@</span> <span class="p_context"> static void gart_unmap_sg(struct device *dev, struct scatterlist *sg, int nents,</span>
 	for_each_sg(sg, s, nents, i) {
 		if (!s-&gt;dma_length || !s-&gt;length)
 			break;
<span class="p_del">-		gart_unmap_page(dev, s-&gt;dma_address, s-&gt;dma_length, dir, NULL);</span>
<span class="p_add">+		gart_unmap_page(dev, s-&gt;dma_address, s-&gt;dma_length, dir, 0);</span>
 	}
 }
 
<span class="p_chunk">@@ -316,7 +316,7 @@</span> <span class="p_context"> static int dma_map_sg_nonforce(struct device *dev, struct scatterlist *sg,</span>
 			addr = dma_map_area(dev, addr, s-&gt;length, dir, 0);
 			if (addr == bad_dma_addr) {
 				if (i &gt; 0)
<span class="p_del">-					gart_unmap_sg(dev, sg, i, dir, NULL);</span>
<span class="p_add">+					gart_unmap_sg(dev, sg, i, dir, 0);</span>
 				nents = 0;
 				sg[0].dma_length = 0;
 				break;
<span class="p_chunk">@@ -387,7 +387,7 @@</span> <span class="p_context"> dma_map_cont(struct device *dev, struct scatterlist *start, int nelems,</span>
  * Merge chunks that have page aligned sizes into a continuous mapping.
  */
 static int gart_map_sg(struct device *dev, struct scatterlist *sg, int nents,
<span class="p_del">-		       enum dma_data_direction dir, struct dma_attrs *attrs)</span>
<span class="p_add">+		       enum dma_data_direction dir, unsigned long attrs)</span>
 {
 	struct scatterlist *s, *ps, *start_sg, *sgmap;
 	int need = 0, nextneed, i, out, start;
<span class="p_chunk">@@ -457,7 +457,7 @@</span> <span class="p_context"> static int gart_map_sg(struct device *dev, struct scatterlist *sg, int nents,</span>
 
 error:
 	flush_gart();
<span class="p_del">-	gart_unmap_sg(dev, sg, out, dir, NULL);</span>
<span class="p_add">+	gart_unmap_sg(dev, sg, out, dir, 0);</span>
 
 	/* When it was forced or merged try again in a dumb way */
 	if (force_iommu || iommu_merge) {
<span class="p_chunk">@@ -477,7 +477,7 @@</span> <span class="p_context"> error:</span>
 /* allocate and map a coherent mapping */
 static void *
 gart_alloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_addr,
<span class="p_del">-		    gfp_t flag, struct dma_attrs *attrs)</span>
<span class="p_add">+		    gfp_t flag, unsigned long attrs)</span>
 {
 	dma_addr_t paddr;
 	unsigned long align_mask;
<span class="p_chunk">@@ -509,9 +509,9 @@</span> <span class="p_context"> gart_alloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_addr,</span>
 /* free a coherent mapping */
 static void
 gart_free_coherent(struct device *dev, size_t size, void *vaddr,
<span class="p_del">-		   dma_addr_t dma_addr, struct dma_attrs *attrs)</span>
<span class="p_add">+		   dma_addr_t dma_addr, unsigned long attrs)</span>
 {
<span class="p_del">-	gart_unmap_page(dev, dma_addr, size, DMA_BIDIRECTIONAL, NULL);</span>
<span class="p_add">+	gart_unmap_page(dev, dma_addr, size, DMA_BIDIRECTIONAL, 0);</span>
 	dma_generic_free_coherent(dev, size, vaddr, dma_addr, attrs);
 }
 
<span class="p_header">diff --git a/arch/x86/kernel/pci-calgary_64.c b/arch/x86/kernel/pci-calgary_64.c</span>
<span class="p_header">index 833b1d329c47..5d400ba1349d 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-calgary_64.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-calgary_64.c</span>
<span class="p_chunk">@@ -340,7 +340,7 @@</span> <span class="p_context"> static inline struct iommu_table *find_iommu_table(struct device *dev)</span>
 
 static void calgary_unmap_sg(struct device *dev, struct scatterlist *sglist,
 			     int nelems,enum dma_data_direction dir,
<span class="p_del">-			     struct dma_attrs *attrs)</span>
<span class="p_add">+			     unsigned long attrs)</span>
 {
 	struct iommu_table *tbl = find_iommu_table(dev);
 	struct scatterlist *s;
<span class="p_chunk">@@ -364,7 +364,7 @@</span> <span class="p_context"> static void calgary_unmap_sg(struct device *dev, struct scatterlist *sglist,</span>
 
 static int calgary_map_sg(struct device *dev, struct scatterlist *sg,
 			  int nelems, enum dma_data_direction dir,
<span class="p_del">-			  struct dma_attrs *attrs)</span>
<span class="p_add">+			  unsigned long attrs)</span>
 {
 	struct iommu_table *tbl = find_iommu_table(dev);
 	struct scatterlist *s;
<span class="p_chunk">@@ -396,7 +396,7 @@</span> <span class="p_context"> static int calgary_map_sg(struct device *dev, struct scatterlist *sg,</span>
 
 	return nelems;
 error:
<span class="p_del">-	calgary_unmap_sg(dev, sg, nelems, dir, NULL);</span>
<span class="p_add">+	calgary_unmap_sg(dev, sg, nelems, dir, 0);</span>
 	for_each_sg(sg, s, nelems, i) {
 		sg-&gt;dma_address = DMA_ERROR_CODE;
 		sg-&gt;dma_length = 0;
<span class="p_chunk">@@ -407,7 +407,7 @@</span> <span class="p_context"> error:</span>
 static dma_addr_t calgary_map_page(struct device *dev, struct page *page,
 				   unsigned long offset, size_t size,
 				   enum dma_data_direction dir,
<span class="p_del">-				   struct dma_attrs *attrs)</span>
<span class="p_add">+				   unsigned long attrs)</span>
 {
 	void *vaddr = page_address(page) + offset;
 	unsigned long uaddr;
<span class="p_chunk">@@ -422,7 +422,7 @@</span> <span class="p_context"> static dma_addr_t calgary_map_page(struct device *dev, struct page *page,</span>
 
 static void calgary_unmap_page(struct device *dev, dma_addr_t dma_addr,
 			       size_t size, enum dma_data_direction dir,
<span class="p_del">-			       struct dma_attrs *attrs)</span>
<span class="p_add">+			       unsigned long attrs)</span>
 {
 	struct iommu_table *tbl = find_iommu_table(dev);
 	unsigned int npages;
<span class="p_chunk">@@ -432,7 +432,7 @@</span> <span class="p_context"> static void calgary_unmap_page(struct device *dev, dma_addr_t dma_addr,</span>
 }
 
 static void* calgary_alloc_coherent(struct device *dev, size_t size,
<span class="p_del">-	dma_addr_t *dma_handle, gfp_t flag, struct dma_attrs *attrs)</span>
<span class="p_add">+	dma_addr_t *dma_handle, gfp_t flag, unsigned long attrs)</span>
 {
 	void *ret = NULL;
 	dma_addr_t mapping;
<span class="p_chunk">@@ -466,7 +466,7 @@</span> <span class="p_context"> error:</span>
 
 static void calgary_free_coherent(struct device *dev, size_t size,
 				  void *vaddr, dma_addr_t dma_handle,
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_add">+				  unsigned long attrs)</span>
 {
 	unsigned int npages;
 	struct iommu_table *tbl = find_iommu_table(dev);
<span class="p_header">diff --git a/arch/x86/kernel/pci-dma.c b/arch/x86/kernel/pci-dma.c</span>
<span class="p_header">index 6ba014c61d62..d30c37750765 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-dma.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-dma.c</span>
<span class="p_chunk">@@ -77,7 +77,7 @@</span> <span class="p_context"> void __init pci_iommu_alloc(void)</span>
 }
 void *dma_generic_alloc_coherent(struct device *dev, size_t size,
 				 dma_addr_t *dma_addr, gfp_t flag,
<span class="p_del">-				 struct dma_attrs *attrs)</span>
<span class="p_add">+				 unsigned long attrs)</span>
 {
 	unsigned long dma_mask;
 	struct page *page;
<span class="p_chunk">@@ -120,7 +120,7 @@</span> <span class="p_context"> again:</span>
 }
 
 void dma_generic_free_coherent(struct device *dev, size_t size, void *vaddr,
<span class="p_del">-			       dma_addr_t dma_addr, struct dma_attrs *attrs)</span>
<span class="p_add">+			       dma_addr_t dma_addr, unsigned long attrs)</span>
 {
 	unsigned int count = PAGE_ALIGN(size) &gt;&gt; PAGE_SHIFT;
 	struct page *page = virt_to_page(vaddr);
<span class="p_header">diff --git a/arch/x86/kernel/pci-nommu.c b/arch/x86/kernel/pci-nommu.c</span>
<span class="p_header">index da15918d1c81..00e71ce396a8 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-nommu.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-nommu.c</span>
<span class="p_chunk">@@ -28,7 +28,7 @@</span> <span class="p_context"> check_addr(char *name, struct device *hwdev, dma_addr_t bus, size_t size)</span>
 static dma_addr_t nommu_map_page(struct device *dev, struct page *page,
 				 unsigned long offset, size_t size,
 				 enum dma_data_direction dir,
<span class="p_del">-				 struct dma_attrs *attrs)</span>
<span class="p_add">+				 unsigned long attrs)</span>
 {
 	dma_addr_t bus = page_to_phys(page) + offset;
 	WARN_ON(size == 0);
<span class="p_chunk">@@ -55,7 +55,7 @@</span> <span class="p_context"> static dma_addr_t nommu_map_page(struct device *dev, struct page *page,</span>
  */
 static int nommu_map_sg(struct device *hwdev, struct scatterlist *sg,
 			int nents, enum dma_data_direction dir,
<span class="p_del">-			struct dma_attrs *attrs)</span>
<span class="p_add">+			unsigned long attrs)</span>
 {
 	struct scatterlist *s;
 	int i;
<span class="p_header">diff --git a/arch/x86/kernel/pci-swiotlb.c b/arch/x86/kernel/pci-swiotlb.c</span>
<span class="p_header">index 7c577a178859..db88bfe56a77 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-swiotlb.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-swiotlb.c</span>
<span class="p_chunk">@@ -16,7 +16,7 @@</span> <span class="p_context"> int swiotlb __read_mostly;</span>
 
 void *x86_swiotlb_alloc_coherent(struct device *hwdev, size_t size,
 					dma_addr_t *dma_handle, gfp_t flags,
<span class="p_del">-					struct dma_attrs *attrs)</span>
<span class="p_add">+					unsigned long attrs)</span>
 {
 	void *vaddr;
 
<span class="p_chunk">@@ -37,7 +37,7 @@</span> <span class="p_context"> void *x86_swiotlb_alloc_coherent(struct device *hwdev, size_t size,</span>
 
 void x86_swiotlb_free_coherent(struct device *dev, size_t size,
 				      void *vaddr, dma_addr_t dma_addr,
<span class="p_del">-				      struct dma_attrs *attrs)</span>
<span class="p_add">+				      unsigned long attrs)</span>
 {
 	if (is_swiotlb_buffer(dma_to_phys(dev, dma_addr)))
 		swiotlb_free_coherent(dev, size, vaddr, dma_addr);
<span class="p_header">diff --git a/arch/x86/pci/sta2x11-fixup.c b/arch/x86/pci/sta2x11-fixup.c</span>
<span class="p_header">index 5ceda85b8687..052c1cb76305 100644</span>
<span class="p_header">--- a/arch/x86/pci/sta2x11-fixup.c</span>
<span class="p_header">+++ b/arch/x86/pci/sta2x11-fixup.c</span>
<span class="p_chunk">@@ -169,7 +169,7 @@</span> <span class="p_context"> static void *sta2x11_swiotlb_alloc_coherent(struct device *dev,</span>
 					    size_t size,
 					    dma_addr_t *dma_handle,
 					    gfp_t flags,
<span class="p_del">-					    struct dma_attrs *attrs)</span>
<span class="p_add">+					    unsigned long attrs)</span>
 {
 	void *vaddr;
 
<span class="p_header">diff --git a/arch/x86/pci/vmd.c b/arch/x86/pci/vmd.c</span>
<span class="p_header">index e88b4176260f..b814ca675131 100644</span>
<span class="p_header">--- a/arch/x86/pci/vmd.c</span>
<span class="p_header">+++ b/arch/x86/pci/vmd.c</span>
<span class="p_chunk">@@ -274,14 +274,14 @@</span> <span class="p_context"> static struct dma_map_ops *vmd_dma_ops(struct device *dev)</span>
 }
 
 static void *vmd_alloc(struct device *dev, size_t size, dma_addr_t *addr,
<span class="p_del">-		       gfp_t flag, struct dma_attrs *attrs)</span>
<span class="p_add">+		       gfp_t flag, unsigned long attrs)</span>
 {
 	return vmd_dma_ops(dev)-&gt;alloc(to_vmd_dev(dev), size, addr, flag,
 				       attrs);
 }
 
 static void vmd_free(struct device *dev, size_t size, void *vaddr,
<span class="p_del">-		     dma_addr_t addr, struct dma_attrs *attrs)</span>
<span class="p_add">+		     dma_addr_t addr, unsigned long attrs)</span>
 {
 	return vmd_dma_ops(dev)-&gt;free(to_vmd_dev(dev), size, vaddr, addr,
 				      attrs);
<span class="p_chunk">@@ -289,7 +289,7 @@</span> <span class="p_context"> static void vmd_free(struct device *dev, size_t size, void *vaddr,</span>
 
 static int vmd_mmap(struct device *dev, struct vm_area_struct *vma,
 		    void *cpu_addr, dma_addr_t addr, size_t size,
<span class="p_del">-		    struct dma_attrs *attrs)</span>
<span class="p_add">+		    unsigned long attrs)</span>
 {
 	return vmd_dma_ops(dev)-&gt;mmap(to_vmd_dev(dev), vma, cpu_addr, addr,
 				      size, attrs);
<span class="p_chunk">@@ -297,7 +297,7 @@</span> <span class="p_context"> static int vmd_mmap(struct device *dev, struct vm_area_struct *vma,</span>
 
 static int vmd_get_sgtable(struct device *dev, struct sg_table *sgt,
 			   void *cpu_addr, dma_addr_t addr, size_t size,
<span class="p_del">-			   struct dma_attrs *attrs)</span>
<span class="p_add">+			   unsigned long attrs)</span>
 {
 	return vmd_dma_ops(dev)-&gt;get_sgtable(to_vmd_dev(dev), sgt, cpu_addr,
 					     addr, size, attrs);
<span class="p_chunk">@@ -306,26 +306,26 @@</span> <span class="p_context"> static int vmd_get_sgtable(struct device *dev, struct sg_table *sgt,</span>
 static dma_addr_t vmd_map_page(struct device *dev, struct page *page,
 			       unsigned long offset, size_t size,
 			       enum dma_data_direction dir,
<span class="p_del">-			       struct dma_attrs *attrs)</span>
<span class="p_add">+			       unsigned long attrs)</span>
 {
 	return vmd_dma_ops(dev)-&gt;map_page(to_vmd_dev(dev), page, offset, size,
 					  dir, attrs);
 }
 
 static void vmd_unmap_page(struct device *dev, dma_addr_t addr, size_t size,
<span class="p_del">-			   enum dma_data_direction dir, struct dma_attrs *attrs)</span>
<span class="p_add">+			   enum dma_data_direction dir, unsigned long attrs)</span>
 {
 	vmd_dma_ops(dev)-&gt;unmap_page(to_vmd_dev(dev), addr, size, dir, attrs);
 }
 
 static int vmd_map_sg(struct device *dev, struct scatterlist *sg, int nents,
<span class="p_del">-		      enum dma_data_direction dir, struct dma_attrs *attrs)</span>
<span class="p_add">+		      enum dma_data_direction dir, unsigned long attrs)</span>
 {
 	return vmd_dma_ops(dev)-&gt;map_sg(to_vmd_dev(dev), sg, nents, dir, attrs);
 }
 
 static void vmd_unmap_sg(struct device *dev, struct scatterlist *sg, int nents,
<span class="p_del">-			 enum dma_data_direction dir, struct dma_attrs *attrs)</span>
<span class="p_add">+			 enum dma_data_direction dir, unsigned long attrs)</span>
 {
 	vmd_dma_ops(dev)-&gt;unmap_sg(to_vmd_dev(dev), sg, nents, dir, attrs);
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



