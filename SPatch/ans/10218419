
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[7/9] x86/mm: Make MAX_PHYSADDR_BITS and MAX_PHYSMEM_BITS dynamic - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [7/9] x86/mm: Make MAX_PHYSADDR_BITS and MAX_PHYSMEM_BITS dynamic</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=40781">Kirill A. Shutemov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 14, 2018, 11:16 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180214111656.88514-8-kirill.shutemov@linux.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10218419/mbox/"
   >mbox</a>
|
   <a href="/patch/10218419/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10218419/">/patch/10218419/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	31B9F602CB for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 14 Feb 2018 11:18:07 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1AF73285C7
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 14 Feb 2018 11:18:07 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 0F8C728A16; Wed, 14 Feb 2018 11:18:07 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 86443285C7
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 14 Feb 2018 11:18:06 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S967445AbeBNLRh (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 14 Feb 2018 06:17:37 -0500
Received: from mga02.intel.com ([134.134.136.20]:5270 &quot;EHLO mga02.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S967414AbeBNLRQ (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 14 Feb 2018 06:17:16 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga002.jf.intel.com ([10.7.209.21])
	by orsmga101.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
	14 Feb 2018 03:17:16 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.46,512,1511856000&quot;; d=&quot;scan&#39;208&quot;;a=&quot;34604565&quot;
Received: from black.fi.intel.com ([10.237.72.28])
	by orsmga002.jf.intel.com with ESMTP; 14 Feb 2018 03:17:13 -0800
Received: by black.fi.intel.com (Postfix, from userid 1000)
	id B016D325; Wed, 14 Feb 2018 13:17:08 +0200 (EET)
From: &quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
To: Ingo Molnar &lt;mingo@redhat.com&gt;, x86@kernel.org,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;, &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Andy Lutomirski &lt;luto@amacapital.net&gt;,
	Borislav Petkov &lt;bp@suse.de&gt;, Andi Kleen &lt;ak@linux.intel.com&gt;,
	linux-mm@kvack.org, linux-kernel@vger.kernel.org,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
Subject: [PATCH 7/9] x86/mm: Make MAX_PHYSADDR_BITS and MAX_PHYSMEM_BITS
	dynamic
Date: Wed, 14 Feb 2018 14:16:54 +0300
Message-Id: &lt;20180214111656.88514-8-kirill.shutemov@linux.intel.com&gt;
X-Mailer: git-send-email 2.15.1
In-Reply-To: &lt;20180214111656.88514-1-kirill.shutemov@linux.intel.com&gt;
References: &lt;20180214111656.88514-1-kirill.shutemov@linux.intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=40781">Kirill A. Shutemov</a> - Feb. 14, 2018, 11:16 a.m.</div>
<pre class="content">
For boot-time switching between paging modes, we need to be able to
adjust size of physical address space at runtime.

As part of making physical address space size variable, we have to make
X86_5LEVEL dependent on SPARSEMEM_VMEMMAP. !SPARSEMEM_VMEMMAP
configuration doesn&#39;t build with variable MAX_PHYSMEM_BITS.

For !SPARSEMEM_VMEMMAP SECTIONS_WIDTH depends on MAX_PHYSMEM_BITS:

SECTIONS_WIDTH
  SECTIONS_SHIFT
    MAX_PHYSMEM_BITS

And SECTIONS_WIDTH is used on pre-processor stage, it doesn&#39;t work if it&#39;s
dyncamic. See include/linux/page-flags-layout.h.

Affect on kernel image size:

   text	   data	    bss	    dec	    hex	filename
8628393	4734340	1368064	14730797	 e0c62d	vmlinux.before
8628892	4734340	1368064	14731296	 e0c820	vmlinux.after
<span class="signed-off-by">
Signed-off-by: Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt;</span>
---
 arch/x86/Kconfig                        | 1 +
 arch/x86/include/asm/pgtable_64_types.h | 2 +-
 arch/x86/include/asm/sparsemem.h        | 9 ++-------
 arch/x86/kernel/setup.c                 | 5 ++---
 4 files changed, 6 insertions(+), 11 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/Kconfig b/arch/x86/Kconfig</span>
<span class="p_header">index f925274ddf79..0d780a3ee924 100644</span>
<span class="p_header">--- a/arch/x86/Kconfig</span>
<span class="p_header">+++ b/arch/x86/Kconfig</span>
<span class="p_chunk">@@ -1472,6 +1472,7 @@</span> <span class="p_context"> config X86_PAE</span>
 config X86_5LEVEL
 	bool &quot;Enable 5-level page tables support&quot;
 	select DYNAMIC_MEMORY_LAYOUT
<span class="p_add">+	select SPARSEMEM_VMEMMAP</span>
 	depends on X86_64
 	---help---
 	  5-level paging enables access to larger address space:
<span class="p_header">diff --git a/arch/x86/include/asm/pgtable_64_types.h b/arch/x86/include/asm/pgtable_64_types.h</span>
<span class="p_header">index 0c48d80e11d4..59d971c85de5 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/pgtable_64_types.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/pgtable_64_types.h</span>
<span class="p_chunk">@@ -95,7 +95,7 @@</span> <span class="p_context"> extern unsigned int ptrs_per_p4d;</span>
  * range must not overlap with anything except the KASAN shadow area, which
  * is correct as KASAN disables KASLR.
  */
<span class="p_del">-#define MAXMEM			_AC(__AC(1, UL) &lt;&lt; MAX_PHYSMEM_BITS, UL)</span>
<span class="p_add">+#define MAXMEM			(1UL &lt;&lt; MAX_PHYSMEM_BITS)</span>
 
 #define LDT_PGD_ENTRY_L4	-3UL
 #define LDT_PGD_ENTRY_L5	-112UL
<span class="p_header">diff --git a/arch/x86/include/asm/sparsemem.h b/arch/x86/include/asm/sparsemem.h</span>
<span class="p_header">index 4fc1e9d3c43e..4617a2bf123c 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/sparsemem.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/sparsemem.h</span>
<span class="p_chunk">@@ -27,13 +27,8 @@</span> <span class="p_context"></span>
 # endif
 #else /* CONFIG_X86_32 */
 # define SECTION_SIZE_BITS	27 /* matt - 128 is convenient right now */
<span class="p_del">-# ifdef CONFIG_X86_5LEVEL</span>
<span class="p_del">-#  define MAX_PHYSADDR_BITS	52</span>
<span class="p_del">-#  define MAX_PHYSMEM_BITS	52</span>
<span class="p_del">-# else</span>
<span class="p_del">-#  define MAX_PHYSADDR_BITS	44</span>
<span class="p_del">-#  define MAX_PHYSMEM_BITS	46</span>
<span class="p_del">-# endif</span>
<span class="p_add">+# define MAX_PHYSADDR_BITS	(pgtable_l5_enabled ? 52 : 44)</span>
<span class="p_add">+# define MAX_PHYSMEM_BITS	(pgtable_l5_enabled ? 52 : 46)</span>
 #endif
 
 #endif /* CONFIG_SPARSEMEM */
<span class="p_header">diff --git a/arch/x86/kernel/setup.c b/arch/x86/kernel/setup.c</span>
<span class="p_header">index 1ae67e982af7..399d0f7fa8f1 100644</span>
<span class="p_header">--- a/arch/x86/kernel/setup.c</span>
<span class="p_header">+++ b/arch/x86/kernel/setup.c</span>
<span class="p_chunk">@@ -189,9 +189,7 @@</span> <span class="p_context"> struct ist_info ist_info;</span>
 #endif
 
 #else
<span class="p_del">-struct cpuinfo_x86 boot_cpu_data __read_mostly = {</span>
<span class="p_del">-	.x86_phys_bits = MAX_PHYSMEM_BITS,</span>
<span class="p_del">-};</span>
<span class="p_add">+struct cpuinfo_x86 boot_cpu_data __read_mostly;</span>
 EXPORT_SYMBOL(boot_cpu_data);
 #endif
 
<span class="p_chunk">@@ -851,6 +849,7 @@</span> <span class="p_context"> void __init setup_arch(char **cmdline_p)</span>
 	__flush_tlb_all();
 #else
 	printk(KERN_INFO &quot;Command line: %s\n&quot;, boot_command_line);
<span class="p_add">+	boot_cpu_data.x86_phys_bits = MAX_PHYSMEM_BITS;</span>
 #endif
 
 	/*

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



