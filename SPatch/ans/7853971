
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[03/06] iommu/ipmmu-vmsa: Break out utlb control function - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [03/06] iommu/ipmmu-vmsa: Break out utlb control function</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=19">Magnus Damm</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 15, 2015, 12:02 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20151215120239.26216.43390.sendpatchset@little-apple&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7853971/mbox/"
   >mbox</a>
|
   <a href="/patch/7853971/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7853971/">/patch/7853971/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 43266BEEE1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 15 Dec 2015 12:01:16 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 596852034C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 15 Dec 2015 12:01:12 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 1A0AA2035E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 15 Dec 2015 12:01:11 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S965212AbbLOMBF (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 15 Dec 2015 07:01:05 -0500
Received: from mail-pf0-f182.google.com ([209.85.192.182]:34010 &quot;EHLO
	mail-pf0-f182.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S964921AbbLOMBB (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 15 Dec 2015 07:01:01 -0500
Received: by mail-pf0-f182.google.com with SMTP id o64so3812085pfb.1;
	Tue, 15 Dec 2015 04:01:00 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=from:to:cc:date:message-id:in-reply-to:references:subject;
	bh=5lhQHpE9gjjIcSpkkGAIFhXJJBC2/JaFpJEcaSb8OEk=;
	b=K9edmazJRmmhQlyNOZ+NngjLF2t+VNLQ3NAoT+PRHSD2Bt73V2nfIDIbc33LuZZ+rT
	5bhFAVqcpF0457hhehn4mHxBjXnH8t8jGUlbdmNa1ZE0RgOOhDm0+Gf0W6I9ys1m02fF
	weJOaR94ffhPisUPR2nITSo2o3GFbohO3c/bm3ayRjEDWxIuqrel3+GOySSfJAOx/JWf
	RKtshfK8YsgY7NKxDQ8dKsdvQ8DC8Dsrwk8uFijOSnvsZs0atVfKi3Wl0RtX+rlVz1/H
	GvRGPL2vQo1+9K5qI7SlnRSApWMItYSCi9eiKdkrBZjBTNRobK3dPBkLRwxcPdNXywYS
	+/0g==
X-Received: by 10.98.9.4 with SMTP id e4mr43502705pfd.18.1450180860652;
	Tue, 15 Dec 2015 04:01:00 -0800 (PST)
Received: from [127.0.0.1] (s214090.ppp.asahi-net.or.jp. [220.157.214.90])
	by smtp.gmail.com with ESMTPSA id
	x86sm1926301pfi.68.2015.12.15.04.00.57
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Tue, 15 Dec 2015 04:00:59 -0800 (PST)
From: Magnus Damm &lt;magnus.damm@gmail.com&gt;
To: iommu@lists.linux-foundation.org
Cc: laurent.pinchart+renesas@ideasonboard.com, geert+renesas@glider.be,
	linux-sh@vger.kernel.org, joro@8bytes.org,
	linux-kernel@vger.kernel.org, horms+renesas@verge.net.au,
	Magnus Damm &lt;magnus.damm@gmail.com&gt;
Date: Tue, 15 Dec 2015 21:02:39 +0900
Message-Id: &lt;20151215120239.26216.43390.sendpatchset@little-apple&gt;
In-Reply-To: &lt;20151215120212.26216.61530.sendpatchset@little-apple&gt;
References: &lt;20151215120212.26216.61530.sendpatchset@little-apple&gt;
Subject: [PATCH 03/06] iommu/ipmmu-vmsa: Break out utlb control function
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.8 required=5.0 tests=BAYES_00,
	DKIM_ADSP_CUSTOM_MED, 
	DKIM_SIGNED, FREEMAIL_FROM, RCVD_IN_DNSWL_HI, T_DKIM_INVALID,
	T_RP_MATCHES_RCVD, 
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=19">Magnus Damm</a> - Dec. 15, 2015, 12:02 p.m.</div>
<pre class="content">
<span class="from">From: Magnus Damm &lt;damm+renesas@opensource.se&gt;</span>

Introduce the function ipmmu_utlb_ctrl() that shares code
to enable or disable utlbs.
<span class="signed-off-by">
Signed-off-by: Magnus Damm &lt;damm+renesas@opensource.se&gt;</span>
---

 drivers/iommu/ipmmu-vmsa.c |   30 +++++++++++++++---------------
 1 file changed, 15 insertions(+), 15 deletions(-)

--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=70">Geert Uytterhoeven</a> - Dec. 15, 2015, 3:48 p.m.</div>
<pre class="content">
Hi Magnus,

On Tue, Dec 15, 2015 at 1:02 PM, Magnus Damm &lt;magnus.damm@gmail.com&gt; wrote:
<span class="quote">&gt; --- 0004/drivers/iommu/ipmmu-vmsa.c</span>
<span class="quote">&gt; +++ work/drivers/iommu/ipmmu-vmsa.c     2015-12-15 13:17:40.580513000 +0900</span>
<span class="quote">&gt; @@ -279,9 +279,18 @@ static void ipmmu_utlb_enable(struct ipm</span>
<span class="quote">&gt;  static void ipmmu_utlb_disable(struct ipmmu_vmsa_domain *domain,</span>
<span class="quote">&gt;                                unsigned int utlb)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -       struct ipmmu_vmsa_device *mmu = domain-&gt;mmu;</span>
<span class="quote">&gt; +       ipmmu_write(domain-&gt;mmu, IMUCTR(utlb), 0);</span>
<span class="quote">&gt; +}</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +static void ipmmu_utlb_ctrl(struct ipmmu_vmsa_domain *domain,</span>
<span class="quote">&gt; +                           void (*fn)(struct ipmmu_vmsa_domain *,</span>
<span class="quote">&gt; +                                      unsigned int utlb), struct device *dev)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +       struct ipmmu_vmsa_dev_data *dev_data = get_dev_data(dev);</span>
<span class="quote">&gt; +       unsigned int i;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; -       ipmmu_write(mmu, IMUCTR(utlb), 0);</span>
<span class="quote">&gt; +       for (i = 0; i &lt; dev_data-&gt;num_utlbs; ++i)</span>
<span class="quote">&gt; +               fn(domain, dev_data-&gt;utlbs[i]);</span>
<span class="quote">&gt;  }</span>

Unless you have further plans with the &quot;fn&quot; parameter, I would simply pass
a bool enable/disable flag instead of a function pointer.

Gr{oetje,eeting}s,

                        Geert

--
Geert Uytterhoeven -- There&#39;s lots of Linux beyond ia32 -- geert@linux-m68k.org

In personal conversations with technical people, I call myself a hacker. But
when I&#39;m talking to journalists I just say &quot;programmer&quot; or something like that.
                                -- Linus Torvalds
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2987">Laurent Pinchart</a> - Dec. 29, 2015, 12:05 a.m.</div>
<pre class="content">
Hi Magnus,

On Tuesday 15 December 2015 16:48:42 Geert Uytterhoeven wrote:
<span class="quote">&gt; On Tue, Dec 15, 2015 at 1:02 PM, Magnus Damm &lt;magnus.damm@gmail.com&gt; wrote:</span>
<span class="quote">&gt; &gt; --- 0004/drivers/iommu/ipmmu-vmsa.c</span>
<span class="quote">&gt; &gt; +++ work/drivers/iommu/ipmmu-vmsa.c     2015-12-15 13:17:40.580513000</span>
<span class="quote">&gt; &gt; +0900</span>
<span class="quote">&gt; &gt; @@ -279,9 +279,18 @@ static void ipmmu_utlb_enable(struct ipm</span>
<span class="quote">&gt; &gt;  static void ipmmu_utlb_disable(struct ipmmu_vmsa_domain *domain,</span>
<span class="quote">&gt; &gt;                                unsigned int utlb)</span>
<span class="quote">&gt; &gt;  {</span>
<span class="quote">&gt; &gt; -       struct ipmmu_vmsa_device *mmu = domain-&gt;mmu;</span>
<span class="quote">&gt; &gt; +       ipmmu_write(domain-&gt;mmu, IMUCTR(utlb), 0);</span>
<span class="quote">&gt; &gt; +}</span>
<span class="quote">&gt; &gt; +</span>
<span class="quote">&gt; &gt; +static void ipmmu_utlb_ctrl(struct ipmmu_vmsa_domain *domain,</span>
<span class="quote">&gt; &gt; +                           void (*fn)(struct ipmmu_vmsa_domain *,</span>
<span class="quote">&gt; &gt; +                                      unsigned int utlb), struct device</span>
<span class="quote">&gt; &gt; *dev)</span>
<span class="quote">&gt; &gt; +{</span>
<span class="quote">&gt; &gt; +       struct ipmmu_vmsa_dev_data *dev_data = get_dev_data(dev);</span>
<span class="quote">&gt; &gt; +       unsigned int i;</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; -       ipmmu_write(mmu, IMUCTR(utlb), 0);</span>
<span class="quote">&gt; &gt; +       for (i = 0; i &lt; dev_data-&gt;num_utlbs; ++i)</span>
<span class="quote">&gt; &gt; +               fn(domain, dev_data-&gt;utlbs[i]);</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;  }</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Unless you have further plans with the &quot;fn&quot; parameter, I would simply pass</span>
<span class="quote">&gt; a bool enable/disable flag instead of a function pointer.</span>

I agree with Geert. What&#39;s your plan here ?
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- 0004/drivers/iommu/ipmmu-vmsa.c</span>
<span class="p_header">+++ work/drivers/iommu/ipmmu-vmsa.c	2015-12-15 13:17:40.580513000 +0900</span>
<span class="p_chunk">@@ -279,9 +279,18 @@</span> <span class="p_context"> static void ipmmu_utlb_enable(struct ipm</span>
 static void ipmmu_utlb_disable(struct ipmmu_vmsa_domain *domain,
 			       unsigned int utlb)
 {
<span class="p_del">-	struct ipmmu_vmsa_device *mmu = domain-&gt;mmu;</span>
<span class="p_add">+	ipmmu_write(domain-&gt;mmu, IMUCTR(utlb), 0);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static void ipmmu_utlb_ctrl(struct ipmmu_vmsa_domain *domain,</span>
<span class="p_add">+			    void (*fn)(struct ipmmu_vmsa_domain *,</span>
<span class="p_add">+				       unsigned int utlb), struct device *dev)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct ipmmu_vmsa_dev_data *dev_data = get_dev_data(dev);</span>
<span class="p_add">+	unsigned int i;</span>
 
<span class="p_del">-	ipmmu_write(mmu, IMUCTR(utlb), 0);</span>
<span class="p_add">+	for (i = 0; i &lt; dev_data-&gt;num_utlbs; ++i)</span>
<span class="p_add">+		fn(domain, dev_data-&gt;utlbs[i]);</span>
 }
 
 static void ipmmu_tlb_flush_all(void *cookie)
<span class="p_chunk">@@ -503,7 +512,6 @@</span> <span class="p_context"> static int ipmmu_attach_device(struct io</span>
 	struct ipmmu_vmsa_device *mmu = dev_data-&gt;mmu;
 	struct ipmmu_vmsa_domain *domain = to_vmsa_domain(io_domain);
 	unsigned long flags;
<span class="p_del">-	unsigned int i;</span>
 	int ret = 0;
 
 	if (!mmu) {
<span class="p_chunk">@@ -529,24 +537,16 @@</span> <span class="p_context"> static int ipmmu_attach_device(struct io</span>
 
 	spin_unlock_irqrestore(&amp;domain-&gt;lock, flags);
 
<span class="p_del">-	if (ret &lt; 0)</span>
<span class="p_del">-		return ret;</span>
<span class="p_add">+	if (!ret)</span>
<span class="p_add">+		ipmmu_utlb_ctrl(domain, ipmmu_utlb_enable, dev);</span>
 
<span class="p_del">-	for (i = 0; i &lt; dev_data-&gt;num_utlbs; ++i)</span>
<span class="p_del">-		ipmmu_utlb_enable(domain, dev_data-&gt;utlbs[i]);</span>
<span class="p_del">-</span>
<span class="p_del">-	return 0;</span>
<span class="p_add">+	return ret;</span>
 }
 
 static void ipmmu_detach_device(struct iommu_domain *io_domain,
 				struct device *dev)
 {
<span class="p_del">-	struct ipmmu_vmsa_dev_data *dev_data = get_dev_data(dev);</span>
<span class="p_del">-	struct ipmmu_vmsa_domain *domain = to_vmsa_domain(io_domain);</span>
<span class="p_del">-	unsigned int i;</span>
<span class="p_del">-</span>
<span class="p_del">-	for (i = 0; i &lt; dev_data-&gt;num_utlbs; ++i)</span>
<span class="p_del">-		ipmmu_utlb_disable(domain, dev_data-&gt;utlbs[i]);</span>
<span class="p_add">+	ipmmu_utlb_ctrl(to_vmsa_domain(io_domain), ipmmu_utlb_disable, dev);</span>
 
 	/*
 	 * TODO: Optimize by disabling the context when no device is attached.

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



