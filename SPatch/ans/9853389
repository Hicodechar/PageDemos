
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>sparc64: Register hugepages during arch init - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    sparc64: Register hugepages during arch init</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=145751">Nitin Gupta</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 20, 2017, 12:12 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1500509583-192121-1-git-send-email-nitin.m.gupta@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9853389/mbox/"
   >mbox</a>
|
   <a href="/patch/9853389/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9853389/">/patch/9853389/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	7236F60388 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 20 Jul 2017 00:13:24 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 76C7228702
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 20 Jul 2017 00:13:24 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 6A95328716; Thu, 20 Jul 2017 00:13:24 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	UNPARSEABLE_RELAY autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id DE63228702
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 20 Jul 2017 00:13:23 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S933699AbdGTANU (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 19 Jul 2017 20:13:20 -0400
Received: from userp1040.oracle.com ([156.151.31.81]:31718 &quot;EHLO
	userp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932108AbdGTANT (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 19 Jul 2017 20:13:19 -0400
Received: from aserv0022.oracle.com (aserv0022.oracle.com [141.146.126.234])
	by userp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2)
	with ESMTP id v6K0DERk012690
	(version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Thu, 20 Jul 2017 00:13:15 GMT
Received: from userv0122.oracle.com (userv0122.oracle.com [156.151.31.75])
	by aserv0022.oracle.com (8.14.4/8.14.4) with ESMTP id v6K0DEU4024668
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Thu, 20 Jul 2017 00:13:14 GMT
Received: from abhmp0008.oracle.com (abhmp0008.oracle.com [141.146.116.14])
	by userv0122.oracle.com (8.14.4/8.14.4) with ESMTP id
	v6K0DDj7020056; Thu, 20 Jul 2017 00:13:13 GMT
Received: from ca-qasparc20.us.oracle.com (/10.147.24.73)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Wed, 19 Jul 2017 17:13:13 -0700
From: Nitin Gupta &lt;nitin.m.gupta@oracle.com&gt;
To: &quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;
Cc: &quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;,
	bob picco &lt;bob.picco@oracle.com&gt;,
	Pavel Tatashin &lt;pasha.tatashin@oracle.com&gt;,
	Nitin Gupta &lt;nitin.m.gupta@oracle.com&gt;,
	Steven Sistare &lt;steven.sistare@oracle.com&gt;,
	Paul Gortmaker &lt;paul.gortmaker@windriver.com&gt;,
	Thomas Tai &lt;thomas.tai@oracle.com&gt;, Atish Patra &lt;atish.patra@oracle.com&gt;,
	sparclinux@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH] sparc64: Register hugepages during arch init
Date: Wed, 19 Jul 2017 17:12:54 -0700
Message-Id: &lt;1500509583-192121-1-git-send-email-nitin.m.gupta@oracle.com&gt;
X-Mailer: git-send-email 1.7.1
X-Source-IP: aserv0022.oracle.com [141.146.126.234]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=145751">Nitin Gupta</a> - July 20, 2017, 12:12 a.m.</div>
<pre class="content">
Add hstate for each supported hugepage size using
arch initcall. This change fixes some hugepage
parameter parsing inconsistencies:

case 1: no hugepage parameters

 Without hugepage parameters, only a hugepages-8192kB entry is visible
 in sysfs.  It&#39;s different from x86_64 where both 2M and 1G hugepage
 sizes are available.

case 2: default_hugepagesz=[64K|256M|2G]

 When specifying only a default_hugepagesz parameter, the default
 hugepage size isn&#39;t really changed and it stays at 8M. This is again
 different from x86_64.

Orabug: 25869946
<span class="reviewed-by">
Reviewed-by: Bob Picco &lt;bob.picco@oracle.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Nitin Gupta &lt;nitin.m.gupta@oracle.com&gt;</span>
---
 arch/sparc/mm/init_64.c | 25 ++++++++++++++++++++++++-
 1 file changed, 24 insertions(+), 1 deletion(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=129">David Miller</a> - July 20, 2017, 7:38 p.m.</div>
<pre class="content">
<span class="from">From: Nitin Gupta &lt;nitin.m.gupta@oracle.com&gt;</span>
Date: Wed, 19 Jul 2017 17:12:54 -0700
<span class="quote">
&gt; Add hstate for each supported hugepage size using</span>
<span class="quote">&gt; arch initcall. This change fixes some hugepage</span>
<span class="quote">&gt; parameter parsing inconsistencies:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; case 1: no hugepage parameters</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  Without hugepage parameters, only a hugepages-8192kB entry is visible</span>
<span class="quote">&gt;  in sysfs.  It&#39;s different from x86_64 where both 2M and 1G hugepage</span>
<span class="quote">&gt;  sizes are available.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; case 2: default_hugepagesz=[64K|256M|2G]</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  When specifying only a default_hugepagesz parameter, the default</span>
<span class="quote">&gt;  hugepage size isn&#39;t really changed and it stays at 8M. This is again</span>
<span class="quote">&gt;  different from x86_64.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Orabug: 25869946</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Reviewed-by: Bob Picco &lt;bob.picco@oracle.com&gt;</span>
<span class="quote">&gt; Signed-off-by: Nitin Gupta &lt;nitin.m.gupta@oracle.com&gt;</span>

Applied and queued up for -stable, thanks.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/sparc/mm/init_64.c b/arch/sparc/mm/init_64.c</span>
<span class="p_header">index 3c40ebd..fed73f1 100644</span>
<span class="p_header">--- a/arch/sparc/mm/init_64.c</span>
<span class="p_header">+++ b/arch/sparc/mm/init_64.c</span>
<span class="p_chunk">@@ -325,6 +325,29 @@</span> <span class="p_context"> static void __update_mmu_tsb_insert(struct mm_struct *mm, unsigned long tsb_inde</span>
 }
 
 #ifdef CONFIG_HUGETLB_PAGE
<span class="p_add">+static void __init add_huge_page_size(unsigned long size)</span>
<span class="p_add">+{</span>
<span class="p_add">+	unsigned int order;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (size_to_hstate(size))</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
<span class="p_add">+	order = ilog2(size) - PAGE_SHIFT;</span>
<span class="p_add">+	hugetlb_add_hstate(order);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static int __init hugetlbpage_init(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	add_huge_page_size(1UL &lt;&lt; HPAGE_64K_SHIFT);</span>
<span class="p_add">+	add_huge_page_size(1UL &lt;&lt; HPAGE_SHIFT);</span>
<span class="p_add">+	add_huge_page_size(1UL &lt;&lt; HPAGE_256MB_SHIFT);</span>
<span class="p_add">+	add_huge_page_size(1UL &lt;&lt; HPAGE_2GB_SHIFT);</span>
<span class="p_add">+</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+arch_initcall(hugetlbpage_init);</span>
<span class="p_add">+</span>
 static int __init setup_hugepagesz(char *string)
 {
 	unsigned long long hugepage_size;
<span class="p_chunk">@@ -364,7 +387,7 @@</span> <span class="p_context"> static int __init setup_hugepagesz(char *string)</span>
 		goto out;
 	}
 
<span class="p_del">-	hugetlb_add_hstate(hugepage_shift - PAGE_SHIFT);</span>
<span class="p_add">+	add_huge_page_size(hugepage_size);</span>
 	rc = 1;
 
 out:

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



