
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>drm/i915: fix i915 running as dom0 under Xen - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    drm/i915: fix i915 running as dom0 under Xen</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=100191">Juergen Gross</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 2, 2017, 9:47 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170202094711.939-1-jgross@suse.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9551515/mbox/"
   >mbox</a>
|
   <a href="/patch/9551515/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9551515/">/patch/9551515/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	AA30760236 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  2 Feb 2017 09:47:20 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 8623C2823D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  2 Feb 2017 09:47:20 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 7A31128404; Thu,  2 Feb 2017 09:47:20 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 161F02823D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  2 Feb 2017 09:47:20 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751093AbdBBJrS (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 2 Feb 2017 04:47:18 -0500
Received: from mx2.suse.de ([195.135.220.15]:41517 &quot;EHLO mx2.suse.de&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1750941AbdBBJrR (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 2 Feb 2017 04:47:17 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (charybdis-ext.suse.de [195.135.220.254])
	by mx2.suse.de (Postfix) with ESMTP id 6C1C5AB1D;
	Thu,  2 Feb 2017 09:47:15 +0000 (UTC)
From: Juergen Gross &lt;jgross@suse.com&gt;
To: linux-kernel@vger.kernel.org, xen-devel@lists.xenproject.org,
	dri-devel@lists.freedesktop.org, intel-gfx@lists.freedesktop.org
Cc: airlied@linux.ie, jani.nikula@linux.intel.com,
	daniel.vetter@intel.com, konrad.wilk@oracle.com,
	Juergen Gross &lt;jgross@suse.com&gt;
Subject: [PATCH] drm/i915: fix i915 running as dom0 under Xen
Date: Thu,  2 Feb 2017 10:47:11 +0100
Message-Id: &lt;20170202094711.939-1-jgross@suse.com&gt;
X-Mailer: git-send-email 2.10.2
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=100191">Juergen Gross</a> - Feb. 2, 2017, 9:47 a.m.</div>
<pre class="content">
Commit 920cf4194954ec (&quot;drm/i915: Introduce an internal allocator for
disposable private objects&quot;) introduced a regression for the kernel
running as Xen dom0: when switching to graphics mode a GPU HANG
occurred.

Reason seems to be a missing adaption similar to that done in
commit 7453c549f5f648 (&quot;swiotlb: Export swiotlb_max_segment to users&quot;)
to i915_gem_object_get_pages_internal().

So limit the maximum page order to be used according to the maximum
swiotlb segment size instead to the complete swiotlb size.
<span class="signed-off-by">
Signed-off-by: Juergen Gross &lt;jgross@suse.com&gt;</span>
---
Please consider for 4.10 as otherwise 4.10 will be unusable as Xen dom0
with i915 graphics.
---
 drivers/gpu/drm/i915/i915_gem_internal.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=976">Daniel Vetter</a> - Feb. 2, 2017, 10:48 a.m.</div>
<pre class="content">
On Thu, Feb 02, 2017 at 10:47:11AM +0100, Juergen Gross wrote:
<span class="quote">&gt; Commit 920cf4194954ec (&quot;drm/i915: Introduce an internal allocator for</span>
<span class="quote">&gt; disposable private objects&quot;) introduced a regression for the kernel</span>
<span class="quote">&gt; running as Xen dom0: when switching to graphics mode a GPU HANG</span>
<span class="quote">&gt; occurred.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Reason seems to be a missing adaption similar to that done in</span>
<span class="quote">&gt; commit 7453c549f5f648 (&quot;swiotlb: Export swiotlb_max_segment to users&quot;)</span>
<span class="quote">&gt; to i915_gem_object_get_pages_internal().</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; So limit the maximum page order to be used according to the maximum</span>
<span class="quote">&gt; swiotlb segment size instead to the complete swiotlb size.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Juergen Gross &lt;jgross@suse.com&gt;</span>
Fixes: 920cf4194954 (&quot;drm/i915: Introduce an internal allocator for disposable private objects&quot;)
Cc: Chris Wilson &lt;chris@chris-wilson.co.uk&gt;
Cc: Tvrtko Ursulin &lt;tvrtko.ursulin@linux.intel.com&gt;
Cc: Daniel Vetter &lt;daniel.vetter@intel.com&gt;
Cc: Jani Nikula &lt;jani.nikula@linux.intel.com&gt;
Cc: intel-gfx@lists.freedesktop.org
Cc: &lt;drm-intel-fixes@lists.freedesktop.org&gt; # v4.10-rc1+

We have a nice script for these :-)
-Daniel
<span class="quote">
&gt; ---</span>
<span class="quote">&gt; Please consider for 4.10 as otherwise 4.10 will be unusable as Xen dom0</span>
<span class="quote">&gt; with i915 graphics.</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  drivers/gpu/drm/i915/i915_gem_internal.c | 12 ++++++++++--</span>
<span class="quote">&gt;  1 file changed, 10 insertions(+), 2 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/i915/i915_gem_internal.c b/drivers/gpu/drm/i915/i915_gem_internal.c</span>
<span class="quote">&gt; index 4b3ff3e..d09c749 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/i915/i915_gem_internal.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/i915/i915_gem_internal.c</span>
<span class="quote">&gt; @@ -66,8 +66,16 @@ i915_gem_object_get_pages_internal(struct drm_i915_gem_object *obj)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	max_order = MAX_ORDER;</span>
<span class="quote">&gt;  #ifdef CONFIG_SWIOTLB</span>
<span class="quote">&gt; -	if (swiotlb_nr_tbl()) /* minimum max swiotlb size is IO_TLB_SEGSIZE */</span>
<span class="quote">&gt; -		max_order = min(max_order, ilog2(IO_TLB_SEGPAGES));</span>
<span class="quote">&gt; +	if (swiotlb_nr_tbl()) {</span>
<span class="quote">&gt; +		unsigned int max_segment;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +		max_segment = swiotlb_max_segment();</span>
<span class="quote">&gt; +		if (max_segment) {</span>
<span class="quote">&gt; +			max_segment = max_t(unsigned int, max_segment,</span>
<span class="quote">&gt; +					    PAGE_SIZE) &gt;&gt; PAGE_SHIFT;</span>
<span class="quote">&gt; +			max_order = min(max_order, ilog2(max_segment));</span>
<span class="quote">&gt; +		}</span>
<span class="quote">&gt; +	}</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	gfp = GFP_KERNEL | __GFP_HIGHMEM | __GFP_RECLAIMABLE;</span>
<span class="quote">&gt; -- </span>
<span class="quote">&gt; 2.10.2</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; _______________________________________________</span>
<span class="quote">&gt; Intel-gfx mailing list</span>
<span class="quote">&gt; Intel-gfx@lists.freedesktop.org</span>
<span class="quote">&gt; https://lists.freedesktop.org/mailman/listinfo/intel-gfx</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1064">Chris Wilson</a> - Feb. 2, 2017, 10:55 a.m.</div>
<pre class="content">
On Thu, Feb 02, 2017 at 11:48:21AM +0100, Daniel Vetter wrote:
<span class="quote">&gt; On Thu, Feb 02, 2017 at 10:47:11AM +0100, Juergen Gross wrote:</span>
<span class="quote">&gt; &gt; Commit 920cf4194954ec (&quot;drm/i915: Introduce an internal allocator for</span>
<span class="quote">&gt; &gt; disposable private objects&quot;) introduced a regression for the kernel</span>
<span class="quote">&gt; &gt; running as Xen dom0: when switching to graphics mode a GPU HANG</span>
<span class="quote">&gt; &gt; occurred.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Reason seems to be a missing adaption similar to that done in</span>
<span class="quote">&gt; &gt; commit 7453c549f5f648 (&quot;swiotlb: Export swiotlb_max_segment to users&quot;)</span>
<span class="quote">&gt; &gt; to i915_gem_object_get_pages_internal().</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; So limit the maximum page order to be used according to the maximum</span>
<span class="quote">&gt; &gt; swiotlb segment size instead to the complete swiotlb size.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Signed-off-by: Juergen Gross &lt;jgross@suse.com&gt;</span>
<span class="quote">&gt; Fixes: 920cf4194954 (&quot;drm/i915: Introduce an internal allocator for disposable private objects&quot;)</span>
<span class="quote">&gt; Cc: Chris Wilson &lt;chris@chris-wilson.co.uk&gt;</span>
<span class="quote">&gt; Cc: Tvrtko Ursulin &lt;tvrtko.ursulin@linux.intel.com&gt;</span>
<span class="quote">&gt; Cc: Daniel Vetter &lt;daniel.vetter@intel.com&gt;</span>
<span class="quote">&gt; Cc: Jani Nikula &lt;jani.nikula@linux.intel.com&gt;</span>
<span class="quote">&gt; Cc: intel-gfx@lists.freedesktop.org</span>
<span class="quote">&gt; Cc: &lt;drm-intel-fixes@lists.freedesktop.org&gt; # v4.10-rc1+</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; We have a nice script for these :-)</span>

Pffifle. 7453c549f5f648 allowed Xen to change it and silently conflicted
with those that already used the previous limits, which didn&#39;t land in
our tree until v4.10-rc3.
-Chris
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=82731">tvrtko.ursulin@linux.intel.com</a> - Feb. 2, 2017, 12:11 p.m.</div>
<pre class="content">
On 02/02/2017 09:47, Juergen Gross wrote:
<span class="quote">&gt; Commit 920cf4194954ec (&quot;drm/i915: Introduce an internal allocator for</span>
<span class="quote">&gt; disposable private objects&quot;) introduced a regression for the kernel</span>
<span class="quote">&gt; running as Xen dom0: when switching to graphics mode a GPU HANG</span>
<span class="quote">&gt; occurred.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Reason seems to be a missing adaption similar to that done in</span>
<span class="quote">&gt; commit 7453c549f5f648 (&quot;swiotlb: Export swiotlb_max_segment to users&quot;)</span>
<span class="quote">&gt; to i915_gem_object_get_pages_internal().</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; So limit the maximum page order to be used according to the maximum</span>
<span class="quote">&gt; swiotlb segment size instead to the complete swiotlb size.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Signed-off-by: Juergen Gross &lt;jgross@suse.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt; Please consider for 4.10 as otherwise 4.10 will be unusable as Xen dom0</span>
<span class="quote">&gt; with i915 graphics.</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  drivers/gpu/drm/i915/i915_gem_internal.c | 12 ++++++++++--</span>
<span class="quote">&gt;  1 file changed, 10 insertions(+), 2 deletions(-)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/i915/i915_gem_internal.c b/drivers/gpu/drm/i915/i915_gem_internal.c</span>
<span class="quote">&gt; index 4b3ff3e..d09c749 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/i915/i915_gem_internal.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/i915/i915_gem_internal.c</span>
<span class="quote">&gt; @@ -66,8 +66,16 @@ i915_gem_object_get_pages_internal(struct drm_i915_gem_object *obj)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;  	max_order = MAX_ORDER;</span>
<span class="quote">&gt;  #ifdef CONFIG_SWIOTLB</span>
<span class="quote">&gt; -	if (swiotlb_nr_tbl()) /* minimum max swiotlb size is IO_TLB_SEGSIZE */</span>
<span class="quote">&gt; -		max_order = min(max_order, ilog2(IO_TLB_SEGPAGES));</span>
<span class="quote">&gt; +	if (swiotlb_nr_tbl()) {</span>
<span class="quote">&gt; +		unsigned int max_segment;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +		max_segment = swiotlb_max_segment();</span>
<span class="quote">&gt; +		if (max_segment) {</span>
<span class="quote">&gt; +			max_segment = max_t(unsigned int, max_segment,</span>
<span class="quote">&gt; +					    PAGE_SIZE) &gt;&gt; PAGE_SHIFT;</span>
<span class="quote">&gt; +			max_order = min(max_order, ilog2(max_segment));</span>
<span class="quote">&gt; +		}</span>
<span class="quote">&gt; +	}</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;  	gfp = GFP_KERNEL | __GFP_HIGHMEM | __GFP_RECLAIMABLE;</span>
<span class="quote">&gt;</span>

Looks OK to me. We could bikeshed it to only use swiotlb_max_segment() 
which I think was the intention when that API was added but can leave 
that for the future.
<span class="reviewed-by">
Reviewed-by: Tvrtko Ursulin &lt;tvrtko.ursulin@intel.com&gt;</span>

Regards,

Tvrtko
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1064">Chris Wilson</a> - Feb. 2, 2017, 12:27 p.m.</div>
<pre class="content">
On Thu, Feb 02, 2017 at 12:11:29PM +0000, Tvrtko Ursulin wrote:
<span class="quote">&gt; </span>
<span class="quote">&gt; On 02/02/2017 09:47, Juergen Gross wrote:</span>
<span class="quote">&gt; &gt;Commit 920cf4194954ec (&quot;drm/i915: Introduce an internal allocator for</span>
<span class="quote">&gt; &gt;disposable private objects&quot;) introduced a regression for the kernel</span>
<span class="quote">&gt; &gt;running as Xen dom0: when switching to graphics mode a GPU HANG</span>
<span class="quote">&gt; &gt;occurred.</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt;Reason seems to be a missing adaption similar to that done in</span>
<span class="quote">&gt; &gt;commit 7453c549f5f648 (&quot;swiotlb: Export swiotlb_max_segment to users&quot;)</span>
<span class="quote">&gt; &gt;to i915_gem_object_get_pages_internal().</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt;So limit the maximum page order to be used according to the maximum</span>
<span class="quote">&gt; &gt;swiotlb segment size instead to the complete swiotlb size.</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt;Signed-off-by: Juergen Gross &lt;jgross@suse.com&gt;</span>
<span class="quote">&gt; &gt;---</span>
<span class="quote">&gt; &gt;Please consider for 4.10 as otherwise 4.10 will be unusable as Xen dom0</span>
<span class="quote">&gt; &gt;with i915 graphics.</span>
<span class="quote">&gt; &gt;---</span>
<span class="quote">&gt; &gt; drivers/gpu/drm/i915/i915_gem_internal.c | 12 ++++++++++--</span>
<span class="quote">&gt; &gt; 1 file changed, 10 insertions(+), 2 deletions(-)</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt;diff --git a/drivers/gpu/drm/i915/i915_gem_internal.c b/drivers/gpu/drm/i915/i915_gem_internal.c</span>
<span class="quote">&gt; &gt;index 4b3ff3e..d09c749 100644</span>
<span class="quote">&gt; &gt;--- a/drivers/gpu/drm/i915/i915_gem_internal.c</span>
<span class="quote">&gt; &gt;+++ b/drivers/gpu/drm/i915/i915_gem_internal.c</span>
<span class="quote">&gt; &gt;@@ -66,8 +66,16 @@ i915_gem_object_get_pages_internal(struct drm_i915_gem_object *obj)</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; 	max_order = MAX_ORDER;</span>
<span class="quote">&gt; &gt; #ifdef CONFIG_SWIOTLB</span>
<span class="quote">&gt; &gt;-	if (swiotlb_nr_tbl()) /* minimum max swiotlb size is IO_TLB_SEGSIZE */</span>
<span class="quote">&gt; &gt;-		max_order = min(max_order, ilog2(IO_TLB_SEGPAGES));</span>
<span class="quote">&gt; &gt;+	if (swiotlb_nr_tbl()) {</span>
<span class="quote">&gt; &gt;+		unsigned int max_segment;</span>
<span class="quote">&gt; &gt;+</span>
<span class="quote">&gt; &gt;+		max_segment = swiotlb_max_segment();</span>
<span class="quote">&gt; &gt;+		if (max_segment) {</span>
<span class="quote">&gt; &gt;+			max_segment = max_t(unsigned int, max_segment,</span>
<span class="quote">&gt; &gt;+					    PAGE_SIZE) &gt;&gt; PAGE_SHIFT;</span>
<span class="quote">&gt; &gt;+			max_order = min(max_order, ilog2(max_segment));</span>
<span class="quote">&gt; &gt;+		}</span>
<span class="quote">&gt; &gt;+	}</span>
<span class="quote">&gt; &gt; #endif</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; 	gfp = GFP_KERNEL | __GFP_HIGHMEM | __GFP_RECLAIMABLE;</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Looks OK to me. We could bikeshed it to only use</span>
<span class="quote">&gt; swiotlb_max_segment() which I think was the intention when that API</span>
<span class="quote">&gt; was added but can leave that for the future.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Reviewed-by: Tvrtko Ursulin &lt;tvrtko.ursulin@intel.com&gt;</span>

Pushed, I imagine this has been added to the list of sg cleanups you
have :)
-Chris
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/gpu/drm/i915/i915_gem_internal.c b/drivers/gpu/drm/i915/i915_gem_internal.c</span>
<span class="p_header">index 4b3ff3e..d09c749 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/i915/i915_gem_internal.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/i915/i915_gem_internal.c</span>
<span class="p_chunk">@@ -66,8 +66,16 @@</span> <span class="p_context"> i915_gem_object_get_pages_internal(struct drm_i915_gem_object *obj)</span>
 
 	max_order = MAX_ORDER;
 #ifdef CONFIG_SWIOTLB
<span class="p_del">-	if (swiotlb_nr_tbl()) /* minimum max swiotlb size is IO_TLB_SEGSIZE */</span>
<span class="p_del">-		max_order = min(max_order, ilog2(IO_TLB_SEGPAGES));</span>
<span class="p_add">+	if (swiotlb_nr_tbl()) {</span>
<span class="p_add">+		unsigned int max_segment;</span>
<span class="p_add">+</span>
<span class="p_add">+		max_segment = swiotlb_max_segment();</span>
<span class="p_add">+		if (max_segment) {</span>
<span class="p_add">+			max_segment = max_t(unsigned int, max_segment,</span>
<span class="p_add">+					    PAGE_SIZE) &gt;&gt; PAGE_SHIFT;</span>
<span class="p_add">+			max_order = min(max_order, ilog2(max_segment));</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
 #endif
 
 	gfp = GFP_KERNEL | __GFP_HIGHMEM | __GFP_RECLAIMABLE;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



