
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[GIT,pull] x86 fixes for 4.1 - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [GIT,pull] x86 fixes for 4.1</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=107">Thomas Gleixner</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 26, 2015, 9:31 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;alpine.DEB.2.11.1507261120000.18576@nanos&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6866131/mbox/"
   >mbox</a>
|
   <a href="/patch/6866131/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6866131/">/patch/6866131/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 27E5FC05AC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 26 Jul 2015 09:32:25 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id A912F2066C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 26 Jul 2015 09:32:23 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 0C2C720665
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 26 Jul 2015 09:32:22 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754993AbbGZJcF (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 26 Jul 2015 05:32:05 -0400
Received: from www.linutronix.de ([62.245.132.108]:53046 &quot;EHLO
	Galois.linutronix.de&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752648AbbGZJcB (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 26 Jul 2015 05:32:01 -0400
Received: from localhost ([127.0.0.1]) by Galois.linutronix.de with esmtps
	(TLS1.0:DHE_RSA_AES_256_CBC_SHA1:256) (Exim 4.80)
	(envelope-from &lt;tglx@linutronix.de&gt;)
	id 1ZJIHm-0006EG-R8; Sun, 26 Jul 2015 11:31:59 +0200
Date: Sun, 26 Jul 2015 11:31:45 +0200 (CEST)
From: Thomas Gleixner &lt;tglx@linutronix.de&gt;
To: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
cc: LKML &lt;linux-kernel@vger.kernel.org&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Ingo Molnar &lt;mingo@kernel.org&gt;, &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;
Subject: [GIT pull] x86 fixes for 4.1
Message-ID: &lt;alpine.DEB.2.11.1507261120000.18576@nanos&gt;
User-Agent: Alpine 2.11 (DEB 23 2013-08-11)
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Linutronix-Spam-Score: -1.0
X-Linutronix-Spam-Level: -
X-Linutronix-Spam-Status: No , -1.0 points, 5.0 required, ALL_TRUSTED=-1,
	SHORTCIRCUIT=-0.0001
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=107">Thomas Gleixner</a> - July 26, 2015, 9:31 a.m.</div>
<pre class="content">
Linus,

please pull the latest x86-urgent-for-linus git tree from:

   git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git x86-urgent-for-linus

This update contains:

 - The manual revert of the SYSCALL32 changes which caused a regression

 - A fix for the MPX vma handling

 - Three fixes for the ioremap &#39;is ram&#39; checks.

 - PAT warning fixes

 - A trivial fix for the size calculation of TLB tracepoints

 - Handle old EFI structures gracefully

 This also contains a PAT fix from Jan plus a revert thereof. Toshi
 explained why the code is correct.

Thanks,

	tglx

------------------&gt;
Dave Hansen (1):
      x86/mm: Add parenthesis for TLB tracepoint size calculation

Denys Vlasenko (1):
      x86/asm/entry/32: Revert &#39;Do not use R9 in SYSCALL32&#39; commit

Jan Beulich (2):
      x86/fpu: Disable dependent CPU features on &quot;noxsave&quot;
      x86/mm/pat: Adjust default caching mode translation tables

Kirill A. Shutemov (1):
      x86/mpx: Do not set -&gt;vm_ops on MPX VMAs

Luis R. Rodriguez (2):
      x86/mm/pat, drivers/infiniband/ipath: Replace WARN() with pr_warn()
      x86/mm/pat, drivers/media/ivtv: Move the PAT warning and replace WARN() with pr_warn()

Thomas Gleixner (2):
      x86/mm: Fix newly introduced printk format warnings
      x86/mm/pat: Revert &#39;Adjust default caching mode translation tables&#39;

Tony Luck (1):
      efi: Handle memory error structures produced based on old versions of standard

Toshi Kani (3):
      x86/mm: Move warning from __ioremap_check_ram() to the call site
      x86/mm: Remove region_is_ram() call from ioremap
      mm: Fix bugs in region_is_ram()


 arch/x86/entry/entry_64_compat.S           | 14 +++++++++-----
 arch/x86/kernel/fpu/init.c                 |  6 ++++++
 arch/x86/mm/ioremap.c                      | 23 ++++++-----------------
 arch/x86/mm/mmap.c                         |  7 +++++++
 arch/x86/mm/mpx.c                          | 24 +++---------------------
 arch/x86/mm/tlb.c                          |  2 +-
 drivers/firmware/efi/cper.c                | 15 ++++++++++++---
 drivers/infiniband/hw/ipath/ipath_driver.c |  6 ++++--
 drivers/media/pci/ivtv/ivtvfb.c            | 15 +++++++++------
 include/linux/cper.h                       | 22 +++++++++++++++++++++-
 kernel/resource.c                          |  6 +++---
 11 files changed, 81 insertions(+), 59 deletions(-)

--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/entry/entry_64_compat.S b/arch/x86/entry/entry_64_compat.S</span>
<span class="p_header">index bb187a6a877c..5a1844765a7a 100644</span>
<span class="p_header">--- a/arch/x86/entry/entry_64_compat.S</span>
<span class="p_header">+++ b/arch/x86/entry/entry_64_compat.S</span>
<span class="p_chunk">@@ -205,7 +205,6 @@</span> <span class="p_context"> sysexit_from_sys_call:</span>
 	movl	RDX(%rsp), %edx		/* arg3 */
 	movl	RSI(%rsp), %ecx		/* arg4 */
 	movl	RDI(%rsp), %r8d		/* arg5 */
<span class="p_del">-	movl	%ebp, %r9d		/* arg6 */</span>
 	.endm
 
 	.macro auditsys_exit exit
<span class="p_chunk">@@ -236,6 +235,7 @@</span> <span class="p_context"> sysexit_from_sys_call:</span>
 
 sysenter_auditsys:
 	auditsys_entry_common
<span class="p_add">+	movl	%ebp, %r9d		/* reload 6th syscall arg */</span>
 	jmp	sysenter_dispatch
 
 sysexit_audit:
<span class="p_chunk">@@ -336,7 +336,7 @@</span> <span class="p_context"> ENTRY(entry_SYSCALL_compat)</span>
 	 * 32-bit zero extended:
 	 */
 	ASM_STAC
<span class="p_del">-1:	movl	(%r8), %ebp</span>
<span class="p_add">+1:	movl	(%r8), %r9d</span>
 	_ASM_EXTABLE(1b, ia32_badarg)
 	ASM_CLAC
 	orl	$TS_COMPAT, ASM_THREAD_INFO(TI_status, %rsp, SIZEOF_PTREGS)
<span class="p_chunk">@@ -346,7 +346,7 @@</span> <span class="p_context"> ENTRY(entry_SYSCALL_compat)</span>
 cstar_do_call:
 	/* 32-bit syscall -&gt; 64-bit C ABI argument conversion */
 	movl	%edi, %r8d		/* arg5 */
<span class="p_del">-	movl	%ebp, %r9d		/* arg6 */</span>
<span class="p_add">+	/* r9 already loaded */		/* arg6 */</span>
 	xchg	%ecx, %esi		/* rsi:arg2, rcx:arg4 */
 	movl	%ebx, %edi		/* arg1 */
 	movl	%edx, %edx		/* arg3 (zero extension) */
<span class="p_chunk">@@ -358,7 +358,6 @@</span> <span class="p_context"> cstar_dispatch:</span>
 	call	*ia32_sys_call_table(, %rax, 8)
 	movq	%rax, RAX(%rsp)
 1:
<span class="p_del">-	movl	RCX(%rsp), %ebp</span>
 	DISABLE_INTERRUPTS(CLBR_NONE)
 	TRACE_IRQS_OFF
 	testl	$_TIF_ALLWORK_MASK, ASM_THREAD_INFO(TI_flags, %rsp, SIZEOF_PTREGS)
<span class="p_chunk">@@ -392,7 +391,9 @@</span> <span class="p_context"> sysretl_from_sys_call:</span>
 
 #ifdef CONFIG_AUDITSYSCALL
 cstar_auditsys:
<span class="p_add">+	movl	%r9d, R9(%rsp)		/* register to be clobbered by call */</span>
 	auditsys_entry_common
<span class="p_add">+	movl	R9(%rsp), %r9d		/* reload 6th syscall arg */</span>
 	jmp	cstar_dispatch
 
 sysretl_audit:
<span class="p_chunk">@@ -404,14 +405,16 @@</span> <span class="p_context"> cstar_tracesys:</span>
 	testl	$(_TIF_WORK_SYSCALL_ENTRY &amp; ~_TIF_SYSCALL_AUDIT), ASM_THREAD_INFO(TI_flags, %rsp, SIZEOF_PTREGS)
 	jz	cstar_auditsys
 #endif
<span class="p_add">+	xchgl	%r9d, %ebp</span>
 	SAVE_EXTRA_REGS
 	xorl	%eax, %eax		/* Do not leak kernel information */
 	movq	%rax, R11(%rsp)
 	movq	%rax, R10(%rsp)
<span class="p_del">-	movq	%rax, R9(%rsp)</span>
<span class="p_add">+	movq	%r9, R9(%rsp)</span>
 	movq	%rax, R8(%rsp)
 	movq	%rsp, %rdi		/* &amp;pt_regs -&gt; arg1 */
 	call	syscall_trace_enter
<span class="p_add">+	movl	R9(%rsp), %r9d</span>
 
 	/* Reload arg registers from stack. (see sysenter_tracesys) */
 	movl	RCX(%rsp), %ecx
<span class="p_chunk">@@ -421,6 +424,7 @@</span> <span class="p_context"> cstar_tracesys:</span>
 	movl	%eax, %eax		/* zero extension */
 
 	RESTORE_EXTRA_REGS
<span class="p_add">+	xchgl	%ebp, %r9d</span>
 	jmp	cstar_do_call
 END(entry_SYSCALL_compat)
 
<span class="p_header">diff --git a/arch/x86/kernel/fpu/init.c b/arch/x86/kernel/fpu/init.c</span>
<span class="p_header">index 0b39173dd971..1e173f6285c7 100644</span>
<span class="p_header">--- a/arch/x86/kernel/fpu/init.c</span>
<span class="p_header">+++ b/arch/x86/kernel/fpu/init.c</span>
<span class="p_chunk">@@ -351,9 +351,15 @@</span> <span class="p_context"> static int __init x86_noxsave_setup(char *s)</span>
 
 	setup_clear_cpu_cap(X86_FEATURE_XSAVE);
 	setup_clear_cpu_cap(X86_FEATURE_XSAVEOPT);
<span class="p_add">+	setup_clear_cpu_cap(X86_FEATURE_XSAVEC);</span>
 	setup_clear_cpu_cap(X86_FEATURE_XSAVES);
 	setup_clear_cpu_cap(X86_FEATURE_AVX);
 	setup_clear_cpu_cap(X86_FEATURE_AVX2);
<span class="p_add">+	setup_clear_cpu_cap(X86_FEATURE_AVX512F);</span>
<span class="p_add">+	setup_clear_cpu_cap(X86_FEATURE_AVX512PF);</span>
<span class="p_add">+	setup_clear_cpu_cap(X86_FEATURE_AVX512ER);</span>
<span class="p_add">+	setup_clear_cpu_cap(X86_FEATURE_AVX512CD);</span>
<span class="p_add">+	setup_clear_cpu_cap(X86_FEATURE_MPX);</span>
 
 	return 1;
 }
<span class="p_header">diff --git a/arch/x86/mm/ioremap.c b/arch/x86/mm/ioremap.c</span>
<span class="p_header">index cc5ccc415cc0..b9c78f3bcd67 100644</span>
<span class="p_header">--- a/arch/x86/mm/ioremap.c</span>
<span class="p_header">+++ b/arch/x86/mm/ioremap.c</span>
<span class="p_chunk">@@ -63,8 +63,6 @@</span> <span class="p_context"> static int __ioremap_check_ram(unsigned long start_pfn, unsigned long nr_pages,</span>
 		    !PageReserved(pfn_to_page(start_pfn + i)))
 			return 1;
 
<span class="p_del">-	WARN_ONCE(1, &quot;ioremap on RAM pfn 0x%lx\n&quot;, start_pfn);</span>
<span class="p_del">-</span>
 	return 0;
 }
 
<span class="p_chunk">@@ -94,7 +92,6 @@</span> <span class="p_context"> static void __iomem *__ioremap_caller(resource_size_t phys_addr,</span>
 	pgprot_t prot;
 	int retval;
 	void __iomem *ret_addr;
<span class="p_del">-	int ram_region;</span>
 
 	/* Don&#39;t allow wraparound or zero size */
 	last_addr = phys_addr + size - 1;
<span class="p_chunk">@@ -117,23 +114,15 @@</span> <span class="p_context"> static void __iomem *__ioremap_caller(resource_size_t phys_addr,</span>
 	/*
 	 * Don&#39;t allow anybody to remap normal RAM that we&#39;re using..
 	 */
<span class="p_del">-	/* First check if whole region can be identified as RAM or not */</span>
<span class="p_del">-	ram_region = region_is_ram(phys_addr, size);</span>
<span class="p_del">-	if (ram_region &gt; 0) {</span>
<span class="p_del">-		WARN_ONCE(1, &quot;ioremap on RAM at 0x%lx - 0x%lx\n&quot;,</span>
<span class="p_del">-				(unsigned long int)phys_addr,</span>
<span class="p_del">-				(unsigned long int)last_addr);</span>
<span class="p_add">+	pfn      = phys_addr &gt;&gt; PAGE_SHIFT;</span>
<span class="p_add">+	last_pfn = last_addr &gt;&gt; PAGE_SHIFT;</span>
<span class="p_add">+	if (walk_system_ram_range(pfn, last_pfn - pfn + 1, NULL,</span>
<span class="p_add">+					  __ioremap_check_ram) == 1) {</span>
<span class="p_add">+		WARN_ONCE(1, &quot;ioremap on RAM at %pa - %pa\n&quot;,</span>
<span class="p_add">+			  &amp;phys_addr, &amp;last_addr);</span>
 		return NULL;
 	}
 
<span class="p_del">-	/* If could not be identified(-1), check page by page */</span>
<span class="p_del">-	if (ram_region &lt; 0) {</span>
<span class="p_del">-		pfn      = phys_addr &gt;&gt; PAGE_SHIFT;</span>
<span class="p_del">-		last_pfn = last_addr &gt;&gt; PAGE_SHIFT;</span>
<span class="p_del">-		if (walk_system_ram_range(pfn, last_pfn - pfn + 1, NULL,</span>
<span class="p_del">-					  __ioremap_check_ram) == 1)</span>
<span class="p_del">-			return NULL;</span>
<span class="p_del">-	}</span>
 	/*
 	 * Mappings have to be page-aligned
 	 */
<span class="p_header">diff --git a/arch/x86/mm/mmap.c b/arch/x86/mm/mmap.c</span>
<span class="p_header">index 9d518d693b4b..844b06d67df4 100644</span>
<span class="p_header">--- a/arch/x86/mm/mmap.c</span>
<span class="p_header">+++ b/arch/x86/mm/mmap.c</span>
<span class="p_chunk">@@ -126,3 +126,10 @@</span> <span class="p_context"> void arch_pick_mmap_layout(struct mm_struct *mm)</span>
 		mm-&gt;get_unmapped_area = arch_get_unmapped_area_topdown;
 	}
 }
<span class="p_add">+</span>
<span class="p_add">+const char *arch_vma_name(struct vm_area_struct *vma)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if (vma-&gt;vm_flags &amp; VM_MPX)</span>
<span class="p_add">+		return &quot;[mpx]&quot;;</span>
<span class="p_add">+	return NULL;</span>
<span class="p_add">+}</span>
<span class="p_header">diff --git a/arch/x86/mm/mpx.c b/arch/x86/mm/mpx.c</span>
<span class="p_header">index 7a657f58bbea..db1b0bc5017c 100644</span>
<span class="p_header">--- a/arch/x86/mm/mpx.c</span>
<span class="p_header">+++ b/arch/x86/mm/mpx.c</span>
<span class="p_chunk">@@ -20,20 +20,6 @@</span> <span class="p_context"></span>
 #define CREATE_TRACE_POINTS
 #include &lt;asm/trace/mpx.h&gt;
 
<span class="p_del">-static const char *mpx_mapping_name(struct vm_area_struct *vma)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return &quot;[mpx]&quot;;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static struct vm_operations_struct mpx_vma_ops = {</span>
<span class="p_del">-	.name = mpx_mapping_name,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-static int is_mpx_vma(struct vm_area_struct *vma)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return (vma-&gt;vm_ops == &amp;mpx_vma_ops);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline unsigned long mpx_bd_size_bytes(struct mm_struct *mm)
 {
 	if (is_64bit_mm(mm))
<span class="p_chunk">@@ -53,9 +39,6 @@</span> <span class="p_context"> static inline unsigned long mpx_bt_size_bytes(struct mm_struct *mm)</span>
 /*
  * This is really a simplified &quot;vm_mmap&quot;. it only handles MPX
  * bounds tables (the bounds directory is user-allocated).
<span class="p_del">- *</span>
<span class="p_del">- * Later on, we use the vma-&gt;vm_ops to uniquely identify these</span>
<span class="p_del">- * VMAs.</span>
  */
 static unsigned long mpx_mmap(unsigned long len)
 {
<span class="p_chunk">@@ -101,7 +84,6 @@</span> <span class="p_context"> static unsigned long mpx_mmap(unsigned long len)</span>
 		ret = -ENOMEM;
 		goto out;
 	}
<span class="p_del">-	vma-&gt;vm_ops = &amp;mpx_vma_ops;</span>
 
 	if (vm_flags &amp; VM_LOCKED) {
 		up_write(&amp;mm-&gt;mmap_sem);
<span class="p_chunk">@@ -812,7 +794,7 @@</span> <span class="p_context"> static noinline int zap_bt_entries_mapping(struct mm_struct *mm,</span>
 		 * so stop immediately and return an error.  This
 		 * probably results in a SIGSEGV.
 		 */
<span class="p_del">-		if (!is_mpx_vma(vma))</span>
<span class="p_add">+		if (!(vma-&gt;vm_flags &amp; VM_MPX))</span>
 			return -EINVAL;
 
 		len = min(vma-&gt;vm_end, end) - addr;
<span class="p_chunk">@@ -945,9 +927,9 @@</span> <span class="p_context"> static int try_unmap_single_bt(struct mm_struct *mm,</span>
 	 * lots of tables even though we have no actual table
 	 * entries in use.
 	 */
<span class="p_del">-	while (next &amp;&amp; is_mpx_vma(next))</span>
<span class="p_add">+	while (next &amp;&amp; (next-&gt;vm_flags &amp; VM_MPX))</span>
 		next = next-&gt;vm_next;
<span class="p_del">-	while (prev &amp;&amp; is_mpx_vma(prev))</span>
<span class="p_add">+	while (prev &amp;&amp; (prev-&gt;vm_flags &amp; VM_MPX))</span>
 		prev = prev-&gt;vm_prev;
 	/*
 	 * We know &#39;start&#39; and &#39;end&#39; lie within an area controlled
<span class="p_header">diff --git a/arch/x86/mm/tlb.c b/arch/x86/mm/tlb.c</span>
<span class="p_header">index 3250f2371aea..90b924acd982 100644</span>
<span class="p_header">--- a/arch/x86/mm/tlb.c</span>
<span class="p_header">+++ b/arch/x86/mm/tlb.c</span>
<span class="p_chunk">@@ -117,7 +117,7 @@</span> <span class="p_context"> static void flush_tlb_func(void *info)</span>
 		} else {
 			unsigned long addr;
 			unsigned long nr_pages =
<span class="p_del">-				f-&gt;flush_end - f-&gt;flush_start / PAGE_SIZE;</span>
<span class="p_add">+				(f-&gt;flush_end - f-&gt;flush_start) / PAGE_SIZE;</span>
 			addr = f-&gt;flush_start;
 			while (addr &lt; f-&gt;flush_end) {
 				__flush_tlb_single(addr);
<span class="p_header">diff --git a/drivers/firmware/efi/cper.c b/drivers/firmware/efi/cper.c</span>
<span class="p_header">index 4fd9961d552e..d42537425438 100644</span>
<span class="p_header">--- a/drivers/firmware/efi/cper.c</span>
<span class="p_header">+++ b/drivers/firmware/efi/cper.c</span>
<span class="p_chunk">@@ -305,10 +305,17 @@</span> <span class="p_context"> const char *cper_mem_err_unpack(struct trace_seq *p,</span>
 	return ret;
 }
 
<span class="p_del">-static void cper_print_mem(const char *pfx, const struct cper_sec_mem_err *mem)</span>
<span class="p_add">+static void cper_print_mem(const char *pfx, const struct cper_sec_mem_err *mem,</span>
<span class="p_add">+	int len)</span>
 {
 	struct cper_mem_err_compact cmem;
 
<span class="p_add">+	/* Don&#39;t trust UEFI 2.1/2.2 structure with bad validation bits */</span>
<span class="p_add">+	if (len == sizeof(struct cper_sec_mem_err_old) &amp;&amp;</span>
<span class="p_add">+	    (mem-&gt;validation_bits &amp; ~(CPER_MEM_VALID_RANK_NUMBER - 1))) {</span>
<span class="p_add">+		pr_err(FW_WARN &quot;valid bits set for fields beyond structure\n&quot;);</span>
<span class="p_add">+		return;</span>
<span class="p_add">+	}</span>
 	if (mem-&gt;validation_bits &amp; CPER_MEM_VALID_ERROR_STATUS)
 		printk(&quot;%s&quot;&quot;error_status: 0x%016llx\n&quot;, pfx, mem-&gt;error_status);
 	if (mem-&gt;validation_bits &amp; CPER_MEM_VALID_PA)
<span class="p_chunk">@@ -405,8 +412,10 @@</span> <span class="p_context"> static void cper_estatus_print_section(</span>
 	} else if (!uuid_le_cmp(*sec_type, CPER_SEC_PLATFORM_MEM)) {
 		struct cper_sec_mem_err *mem_err = (void *)(gdata + 1);
 		printk(&quot;%s&quot;&quot;section_type: memory error\n&quot;, newpfx);
<span class="p_del">-		if (gdata-&gt;error_data_length &gt;= sizeof(*mem_err))</span>
<span class="p_del">-			cper_print_mem(newpfx, mem_err);</span>
<span class="p_add">+		if (gdata-&gt;error_data_length &gt;=</span>
<span class="p_add">+		    sizeof(struct cper_sec_mem_err_old))</span>
<span class="p_add">+			cper_print_mem(newpfx, mem_err,</span>
<span class="p_add">+				       gdata-&gt;error_data_length);</span>
 		else
 			goto err_section_too_small;
 	} else if (!uuid_le_cmp(*sec_type, CPER_SEC_PCIE)) {
<span class="p_header">diff --git a/drivers/infiniband/hw/ipath/ipath_driver.c b/drivers/infiniband/hw/ipath/ipath_driver.c</span>
<span class="p_header">index 2d7e503d13cb..871dbe56216a 100644</span>
<span class="p_header">--- a/drivers/infiniband/hw/ipath/ipath_driver.c</span>
<span class="p_header">+++ b/drivers/infiniband/hw/ipath/ipath_driver.c</span>
<span class="p_chunk">@@ -31,6 +31,8 @@</span> <span class="p_context"></span>
  * SOFTWARE.
  */
 
<span class="p_add">+#define pr_fmt(fmt) KBUILD_MODNAME &quot;: &quot; fmt</span>
<span class="p_add">+</span>
 #include &lt;linux/sched.h&gt;
 #include &lt;linux/spinlock.h&gt;
 #include &lt;linux/idr.h&gt;
<span class="p_chunk">@@ -399,8 +401,8 @@</span> <span class="p_context"> static int ipath_init_one(struct pci_dev *pdev, const struct pci_device_id *ent)</span>
 	u32 bar0 = 0, bar1 = 0;
 
 #ifdef CONFIG_X86_64
<span class="p_del">-	if (WARN(pat_enabled(),</span>
<span class="p_del">-		 &quot;ipath needs PAT disabled, boot with nopat kernel parameter\n&quot;)) {</span>
<span class="p_add">+	if (pat_enabled()) {</span>
<span class="p_add">+		pr_warn(&quot;ipath needs PAT disabled, boot with nopat kernel parameter\n&quot;);</span>
 		ret = -ENODEV;
 		goto bail;
 	}
<span class="p_header">diff --git a/drivers/media/pci/ivtv/ivtvfb.c b/drivers/media/pci/ivtv/ivtvfb.c</span>
<span class="p_header">index 4cb365d4ffdc..8b95eefb610b 100644</span>
<span class="p_header">--- a/drivers/media/pci/ivtv/ivtvfb.c</span>
<span class="p_header">+++ b/drivers/media/pci/ivtv/ivtvfb.c</span>
<span class="p_chunk">@@ -38,6 +38,8 @@</span> <span class="p_context"></span>
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  */
 
<span class="p_add">+#define pr_fmt(fmt) KBUILD_MODNAME &quot;: &quot; fmt</span>
<span class="p_add">+</span>
 #include &lt;linux/module.h&gt;
 #include &lt;linux/kernel.h&gt;
 #include &lt;linux/fb.h&gt;
<span class="p_chunk">@@ -1171,6 +1173,13 @@</span> <span class="p_context"> static int ivtvfb_init_card(struct ivtv *itv)</span>
 {
 	int rc;
 
<span class="p_add">+#ifdef CONFIG_X86_64</span>
<span class="p_add">+	if (pat_enabled()) {</span>
<span class="p_add">+		pr_warn(&quot;ivtvfb needs PAT disabled, boot with nopat kernel parameter\n&quot;);</span>
<span class="p_add">+		return -ENODEV;</span>
<span class="p_add">+	}</span>
<span class="p_add">+#endif</span>
<span class="p_add">+</span>
 	if (itv-&gt;osd_info) {
 		IVTVFB_ERR(&quot;Card %d already initialised\n&quot;, ivtvfb_card_id);
 		return -EBUSY;
<span class="p_chunk">@@ -1265,12 +1274,6 @@</span> <span class="p_context"> static int __init ivtvfb_init(void)</span>
 	int registered = 0;
 	int err;
 
<span class="p_del">-#ifdef CONFIG_X86_64</span>
<span class="p_del">-	if (WARN(pat_enabled(),</span>
<span class="p_del">-		 &quot;ivtvfb needs PAT disabled, boot with nopat kernel parameter\n&quot;)) {</span>
<span class="p_del">-		return -ENODEV;</span>
<span class="p_del">-	}</span>
<span class="p_del">-#endif</span>
 
 	if (ivtvfb_card_id &lt; -1 || ivtvfb_card_id &gt;= IVTV_MAX_CARDS) {
 		printk(KERN_ERR &quot;ivtvfb:  ivtvfb_card_id parameter is out of range (valid range: -1 - %d)\n&quot;,
<span class="p_header">diff --git a/include/linux/cper.h b/include/linux/cper.h</span>
<span class="p_header">index 76abba4b238e..dcacb1a72e26 100644</span>
<span class="p_header">--- a/include/linux/cper.h</span>
<span class="p_header">+++ b/include/linux/cper.h</span>
<span class="p_chunk">@@ -340,7 +340,27 @@</span> <span class="p_context"> struct cper_ia_proc_ctx {</span>
 	__u64	mm_reg_addr;
 };
 
<span class="p_del">-/* Memory Error Section */</span>
<span class="p_add">+/* Old Memory Error Section UEFI 2.1, 2.2 */</span>
<span class="p_add">+struct cper_sec_mem_err_old {</span>
<span class="p_add">+	__u64	validation_bits;</span>
<span class="p_add">+	__u64	error_status;</span>
<span class="p_add">+	__u64	physical_addr;</span>
<span class="p_add">+	__u64	physical_addr_mask;</span>
<span class="p_add">+	__u16	node;</span>
<span class="p_add">+	__u16	card;</span>
<span class="p_add">+	__u16	module;</span>
<span class="p_add">+	__u16	bank;</span>
<span class="p_add">+	__u16	device;</span>
<span class="p_add">+	__u16	row;</span>
<span class="p_add">+	__u16	column;</span>
<span class="p_add">+	__u16	bit_pos;</span>
<span class="p_add">+	__u64	requestor_id;</span>
<span class="p_add">+	__u64	responder_id;</span>
<span class="p_add">+	__u64	target_id;</span>
<span class="p_add">+	__u8	error_type;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+/* Memory Error Section UEFI &gt;= 2.3 */</span>
 struct cper_sec_mem_err {
 	__u64	validation_bits;
 	__u64	error_status;
<span class="p_header">diff --git a/kernel/resource.c b/kernel/resource.c</span>
<span class="p_header">index 90552aab5f2d..fed052a1bc9f 100644</span>
<span class="p_header">--- a/kernel/resource.c</span>
<span class="p_header">+++ b/kernel/resource.c</span>
<span class="p_chunk">@@ -504,13 +504,13 @@</span> <span class="p_context"> int region_is_ram(resource_size_t start, unsigned long size)</span>
 {
 	struct resource *p;
 	resource_size_t end = start + size - 1;
<span class="p_del">-	int flags = IORESOURCE_MEM | IORESOURCE_BUSY;</span>
<span class="p_add">+	unsigned long flags = IORESOURCE_MEM | IORESOURCE_BUSY;</span>
 	const char *name = &quot;System RAM&quot;;
 	int ret = -1;
 
 	read_lock(&amp;resource_lock);
 	for (p = iomem_resource.child; p ; p = p-&gt;sibling) {
<span class="p_del">-		if (end &lt; p-&gt;start)</span>
<span class="p_add">+		if (p-&gt;end &lt; start)</span>
 			continue;
 
 		if (p-&gt;start &lt;= start &amp;&amp; end &lt;= p-&gt;end) {
<span class="p_chunk">@@ -521,7 +521,7 @@</span> <span class="p_context"> int region_is_ram(resource_size_t start, unsigned long size)</span>
 				ret = 1;
 			break;
 		}
<span class="p_del">-		if (p-&gt;end &lt; start)</span>
<span class="p_add">+		if (end &lt; p-&gt;start)</span>
 			break;	/* not found */
 	}
 	read_unlock(&amp;resource_lock);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



