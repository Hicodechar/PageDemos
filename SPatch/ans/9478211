
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,02/14] sparc64: add new fields to mmu context for shared context support - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,02/14] sparc64: add new fields to mmu context for shared context support</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 16, 2016, 6:35 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1481913337-9331-3-git-send-email-mike.kravetz@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9478211/mbox/"
   >mbox</a>
|
   <a href="/patch/9478211/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9478211/">/patch/9478211/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	F38CC60828 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Dec 2016 18:36:28 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E9B4B286EE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Dec 2016 18:36:28 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D253B287CD; Fri, 16 Dec 2016 18:36:28 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	UNPARSEABLE_RELAY autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6DDAC28780
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Dec 2016 18:36:28 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1759015AbcLPSgZ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 16 Dec 2016 13:36:25 -0500
Received: from aserp1040.oracle.com ([141.146.126.69]:38948 &quot;EHLO
	aserp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1758119AbcLPSgD (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 16 Dec 2016 13:36:03 -0500
Received: from aserv0022.oracle.com (aserv0022.oracle.com [141.146.126.234])
	by aserp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2)
	with ESMTP id uBGIZrpq024871
	(version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Fri, 16 Dec 2016 18:35:53 GMT
Received: from userv0122.oracle.com (userv0122.oracle.com [156.151.31.75])
	by aserv0022.oracle.com (8.14.4/8.14.4) with ESMTP id uBGIZrgr014297
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Fri, 16 Dec 2016 18:35:53 GMT
Received: from abhmp0002.oracle.com (abhmp0002.oracle.com [141.146.116.8])
	by userv0122.oracle.com (8.14.4/8.14.4) with ESMTP id uBGIZqLn020082; 
	Fri, 16 Dec 2016 18:35:52 GMT
Received: from monkey.oracle.com (/50.188.161.229)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Fri, 16 Dec 2016 10:35:52 -0800
From: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
To: sparclinux@vger.kernel.org, linux-mm@kvack.org,
	linux-kernel@vger.kernel.org
Cc: &quot;David S . Miller&quot; &lt;davem@davemloft.net&gt;,
	Bob Picco &lt;bob.picco@oracle.com&gt;, Nitin Gupta &lt;nitin.m.gupta@oracle.com&gt;,
	Vijay Kumar &lt;vijay.ac.kumar@oracle.com&gt;,
	Julian Calaby &lt;julian.calaby@gmail.com&gt;,
	Adam Buchbinder &lt;adam.buchbinder@gmail.com&gt;,
	&quot;Kirill A . Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Michal Hocko &lt;mhocko@suse.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
Subject: [RFC PATCH 02/14] sparc64: add new fields to mmu context for shared
	context support
Date: Fri, 16 Dec 2016 10:35:25 -0800
Message-Id: &lt;1481913337-9331-3-git-send-email-mike.kravetz@oracle.com&gt;
X-Mailer: git-send-email 2.7.4
In-Reply-To: &lt;1481913337-9331-1-git-send-email-mike.kravetz@oracle.com&gt;
References: &lt;1481913337-9331-1-git-send-email-mike.kravetz@oracle.com&gt;
X-Source-IP: aserv0022.oracle.com [141.146.126.234]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - Dec. 16, 2016, 6:35 p.m.</div>
<pre class="content">
Add new fields to the mm_context structure to support shared context.
Instead of a simple context ID, add a pointer to a structure with a
reference count.  This is needed as multiple tasks will share the
context ID.

Pages using the shared context ID will reside in a separate TSB.  So
changes are made to increase the number of TSBs as well.  Note that
only support for context sharing of huge pages is provided.  Therefore,
no base page size shared context TSB.
<span class="signed-off-by">
Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
---
 arch/sparc/include/asm/mmu_64.h         | 36 +++++++++++++++++++++++++++++----
 arch/sparc/include/asm/mmu_context_64.h |  8 ++++----
 2 files changed, 36 insertions(+), 8 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=8352">Sam Ravnborg</a> - Dec. 17, 2016, 7:34 a.m.</div>
<pre class="content">
Hi Mike.

On Fri, Dec 16, 2016 at 10:35:25AM -0800, Mike Kravetz wrote:
<span class="quote">&gt; Add new fields to the mm_context structure to support shared context.</span>
<span class="quote">&gt; Instead of a simple context ID, add a pointer to a structure with a</span>
<span class="quote">&gt; reference count.  This is needed as multiple tasks will share the</span>
<span class="quote">&gt; context ID.</span>

What are the benefits with the shared_mmu_ctx struct?
It does not save any space in mm_context_t, and the CPU only
supports one extra context.
So it looks like over-engineering with all the extra administration
required to handle it with refcount, poitners etc.

what do I miss?

	Sam
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=8352">Sam Ravnborg</a> - Dec. 17, 2016, 7:38 a.m.</div>
<pre class="content">
Hi Mike
<span class="quote">
&gt; diff --git a/arch/sparc/include/asm/mmu_context_64.h b/arch/sparc/include/asm/mmu_context_64.h</span>
<span class="quote">&gt; index b84be67..d031799 100644</span>
<span class="quote">&gt; --- a/arch/sparc/include/asm/mmu_context_64.h</span>
<span class="quote">&gt; +++ b/arch/sparc/include/asm/mmu_context_64.h</span>
<span class="quote">&gt; @@ -35,15 +35,15 @@ void __tsb_context_switch(unsigned long pgd_pa,</span>
<span class="quote">&gt;  static inline void tsb_context_switch(struct mm_struct *mm)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	__tsb_context_switch(__pa(mm-&gt;pgd),</span>
<span class="quote">&gt; -			     &amp;mm-&gt;context.tsb_block[0],</span>
<span class="quote">&gt; +			     &amp;mm-&gt;context.tsb_block[MM_TSB_BASE],</span>
<span class="quote">&gt;  #if defined(CONFIG_HUGETLB_PAGE) || defined(CONFIG_TRANSPARENT_HUGEPAGE)</span>
<span class="quote">&gt; -			     (mm-&gt;context.tsb_block[1].tsb ?</span>
<span class="quote">&gt; -			      &amp;mm-&gt;context.tsb_block[1] :</span>
<span class="quote">&gt; +			     (mm-&gt;context.tsb_block[MM_TSB_HUGE].tsb ?</span>
<span class="quote">&gt; +			      &amp;mm-&gt;context.tsb_block[MM_TSB_HUGE] :</span>
<span class="quote">&gt;  			      NULL)</span>
<span class="quote">&gt;  #else</span>
<span class="quote">&gt;  			     NULL</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt; -			     , __pa(&amp;mm-&gt;context.tsb_descr[0]));</span>
<span class="quote">&gt; +			     , __pa(&amp;mm-&gt;context.tsb_descr[MM_TSB_BASE]));</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
This is a nice cleanup that has nothing to do with your series.
Could you submit this as a separate patch so we can get it applied.

This is the only place left where the array index for tsb_block
and tsb_descr uses hardcoded values. And it would be good to get
rid of these.

	Sam
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - Dec. 18, 2016, 11:33 p.m.</div>
<pre class="content">
On 12/16/2016 11:34 PM, Sam Ravnborg wrote:
<span class="quote">&gt; Hi Mike.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; On Fri, Dec 16, 2016 at 10:35:25AM -0800, Mike Kravetz wrote:</span>
<span class="quote">&gt;&gt; Add new fields to the mm_context structure to support shared context.</span>
<span class="quote">&gt;&gt; Instead of a simple context ID, add a pointer to a structure with a</span>
<span class="quote">&gt;&gt; reference count.  This is needed as multiple tasks will share the</span>
<span class="quote">&gt;&gt; context ID.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; What are the benefits with the shared_mmu_ctx struct?</span>
<span class="quote">&gt; It does not save any space in mm_context_t, and the CPU only</span>
<span class="quote">&gt; supports one extra context.</span>
<span class="quote">&gt; So it looks like over-engineering with all the extra administration</span>
<span class="quote">&gt; required to handle it with refcount, poitners etc.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; what do I miss?</span>

Multiple tasks will share this same context ID.  The first task to need
a new shared context will allocate the structure, increment the ref count
and point to it.  As other tasks join the sharing, they will increment
the ref count and point to the same structure.  Similarly, when tasks
no longer use the shared context ID, they will decrement the reference
count.

The reference count is important so that we will know when the last
reference to the shared context ID is dropped.  When the last reference
is dropped, then the ID can be recycled/given back to the global pool
of context IDs.

This seemed to be the most straight forward way to implement this.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - Dec. 18, 2016, 11:45 p.m.</div>
<pre class="content">
On 12/16/2016 11:38 PM, Sam Ravnborg wrote:
<span class="quote">&gt; Hi Mike</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;&gt; diff --git a/arch/sparc/include/asm/mmu_context_64.h b/arch/sparc/include/asm/mmu_context_64.h</span>
<span class="quote">&gt;&gt; index b84be67..d031799 100644</span>
<span class="quote">&gt;&gt; --- a/arch/sparc/include/asm/mmu_context_64.h</span>
<span class="quote">&gt;&gt; +++ b/arch/sparc/include/asm/mmu_context_64.h</span>
<span class="quote">&gt;&gt; @@ -35,15 +35,15 @@ void __tsb_context_switch(unsigned long pgd_pa,</span>
<span class="quote">&gt;&gt;  static inline void tsb_context_switch(struct mm_struct *mm)</span>
<span class="quote">&gt;&gt;  {</span>
<span class="quote">&gt;&gt;  	__tsb_context_switch(__pa(mm-&gt;pgd),</span>
<span class="quote">&gt;&gt; -			     &amp;mm-&gt;context.tsb_block[0],</span>
<span class="quote">&gt;&gt; +			     &amp;mm-&gt;context.tsb_block[MM_TSB_BASE],</span>
<span class="quote">&gt;&gt;  #if defined(CONFIG_HUGETLB_PAGE) || defined(CONFIG_TRANSPARENT_HUGEPAGE)</span>
<span class="quote">&gt;&gt; -			     (mm-&gt;context.tsb_block[1].tsb ?</span>
<span class="quote">&gt;&gt; -			      &amp;mm-&gt;context.tsb_block[1] :</span>
<span class="quote">&gt;&gt; +			     (mm-&gt;context.tsb_block[MM_TSB_HUGE].tsb ?</span>
<span class="quote">&gt;&gt; +			      &amp;mm-&gt;context.tsb_block[MM_TSB_HUGE] :</span>
<span class="quote">&gt;&gt;  			      NULL)</span>
<span class="quote">&gt;&gt;  #else</span>
<span class="quote">&gt;&gt;  			     NULL</span>
<span class="quote">&gt;&gt;  #endif</span>
<span class="quote">&gt;&gt; -			     , __pa(&amp;mm-&gt;context.tsb_descr[0]));</span>
<span class="quote">&gt;&gt; +			     , __pa(&amp;mm-&gt;context.tsb_descr[MM_TSB_BASE]));</span>
<span class="quote">&gt;&gt;  }</span>
<span class="quote">&gt;&gt;  </span>
<span class="quote">&gt; This is a nice cleanup that has nothing to do with your series.</span>
<span class="quote">&gt; Could you submit this as a separate patch so we can get it applied.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This is the only place left where the array index for tsb_block</span>
<span class="quote">&gt; and tsb_descr uses hardcoded values. And it would be good to get</span>
<span class="quote">&gt; rid of these.</span>

Sure, I will submit a separate cleanup patch for this.

However, do note that in my series if CONFIG_SHARED_MMU_CTX is defined,
then MM_TSB_HUGE_SHARED is index 0, instead of MM_TSB_BASE being 0 in
the case where CONFIG_SHARED_MMU_CTX is not defined.  This may seem
&#39;strange&#39; and the obvious question would be &#39;why not put CONFIG_SHARED_MMU_CTX
at the end of the existing array (index 2)?&#39;.  The reason is that tsb_descr
array can not have any &#39;holes&#39; when passed to the hypervisor.  Since there
will always be a MM_TSB_BASE tsb, with MM_TSB_HUGE_SHARED before and
MM_TSB_HUGE after MM_TSB_BASE, few tricks are necessary to ensure no holes
are in the array passed to the hypervisor.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=8352">Sam Ravnborg</a> - Dec. 21, 2016, 6:12 p.m.</div>
<pre class="content">
Hi Mike.

On Sun, Dec 18, 2016 at 03:33:59PM -0800, Mike Kravetz wrote:
<span class="quote">&gt; On 12/16/2016 11:34 PM, Sam Ravnborg wrote:</span>
<span class="quote">&gt; &gt; Hi Mike.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; On Fri, Dec 16, 2016 at 10:35:25AM -0800, Mike Kravetz wrote:</span>
<span class="quote">&gt; &gt;&gt; Add new fields to the mm_context structure to support shared context.</span>
<span class="quote">&gt; &gt;&gt; Instead of a simple context ID, add a pointer to a structure with a</span>
<span class="quote">&gt; &gt;&gt; reference count.  This is needed as multiple tasks will share the</span>
<span class="quote">&gt; &gt;&gt; context ID.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; What are the benefits with the shared_mmu_ctx struct?</span>
<span class="quote">&gt; &gt; It does not save any space in mm_context_t, and the CPU only</span>
<span class="quote">&gt; &gt; supports one extra context.</span>
<span class="quote">&gt; &gt; So it looks like over-engineering with all the extra administration</span>
<span class="quote">&gt; &gt; required to handle it with refcount, poitners etc.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; what do I miss?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Multiple tasks will share this same context ID.  The first task to need</span>
<span class="quote">&gt; a new shared context will allocate the structure, increment the ref count</span>
<span class="quote">&gt; and point to it.  As other tasks join the sharing, they will increment</span>
<span class="quote">&gt; the ref count and point to the same structure.  Similarly, when tasks</span>
<span class="quote">&gt; no longer use the shared context ID, they will decrement the reference</span>
<span class="quote">&gt; count.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The reference count is important so that we will know when the last</span>
<span class="quote">&gt; reference to the shared context ID is dropped.  When the last reference</span>
<span class="quote">&gt; is dropped, then the ID can be recycled/given back to the global pool</span>
<span class="quote">&gt; of context IDs.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This seemed to be the most straight forward way to implement this.</span>

This nice explanation clarified it - thanks.
Could you try to include this info in the description
of the struct - so it is obvious what the intention with the
reference counter is.

	Sam
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=8352">Sam Ravnborg</a> - Dec. 21, 2016, 6:13 p.m.</div>
<pre class="content">
On Sun, Dec 18, 2016 at 03:45:31PM -0800, Mike Kravetz wrote:
<span class="quote">&gt; On 12/16/2016 11:38 PM, Sam Ravnborg wrote:</span>
<span class="quote">&gt; &gt; Hi Mike</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;&gt; diff --git a/arch/sparc/include/asm/mmu_context_64.h b/arch/sparc/include/asm/mmu_context_64.h</span>
<span class="quote">&gt; &gt;&gt; index b84be67..d031799 100644</span>
<span class="quote">&gt; &gt;&gt; --- a/arch/sparc/include/asm/mmu_context_64.h</span>
<span class="quote">&gt; &gt;&gt; +++ b/arch/sparc/include/asm/mmu_context_64.h</span>
<span class="quote">&gt; &gt;&gt; @@ -35,15 +35,15 @@ void __tsb_context_switch(unsigned long pgd_pa,</span>
<span class="quote">&gt; &gt;&gt;  static inline void tsb_context_switch(struct mm_struct *mm)</span>
<span class="quote">&gt; &gt;&gt;  {</span>
<span class="quote">&gt; &gt;&gt;  	__tsb_context_switch(__pa(mm-&gt;pgd),</span>
<span class="quote">&gt; &gt;&gt; -			     &amp;mm-&gt;context.tsb_block[0],</span>
<span class="quote">&gt; &gt;&gt; +			     &amp;mm-&gt;context.tsb_block[MM_TSB_BASE],</span>
<span class="quote">&gt; &gt;&gt;  #if defined(CONFIG_HUGETLB_PAGE) || defined(CONFIG_TRANSPARENT_HUGEPAGE)</span>
<span class="quote">&gt; &gt;&gt; -			     (mm-&gt;context.tsb_block[1].tsb ?</span>
<span class="quote">&gt; &gt;&gt; -			      &amp;mm-&gt;context.tsb_block[1] :</span>
<span class="quote">&gt; &gt;&gt; +			     (mm-&gt;context.tsb_block[MM_TSB_HUGE].tsb ?</span>
<span class="quote">&gt; &gt;&gt; +			      &amp;mm-&gt;context.tsb_block[MM_TSB_HUGE] :</span>
<span class="quote">&gt; &gt;&gt;  			      NULL)</span>
<span class="quote">&gt; &gt;&gt;  #else</span>
<span class="quote">&gt; &gt;&gt;  			     NULL</span>
<span class="quote">&gt; &gt;&gt;  #endif</span>
<span class="quote">&gt; &gt;&gt; -			     , __pa(&amp;mm-&gt;context.tsb_descr[0]));</span>
<span class="quote">&gt; &gt;&gt; +			     , __pa(&amp;mm-&gt;context.tsb_descr[MM_TSB_BASE]));</span>
<span class="quote">&gt; &gt;&gt;  }</span>
<span class="quote">&gt; &gt;&gt;  </span>
<span class="quote">&gt; &gt; This is a nice cleanup that has nothing to do with your series.</span>
<span class="quote">&gt; &gt; Could you submit this as a separate patch so we can get it applied.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; This is the only place left where the array index for tsb_block</span>
<span class="quote">&gt; &gt; and tsb_descr uses hardcoded values. And it would be good to get</span>
<span class="quote">&gt; &gt; rid of these.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Sure, I will submit a separate cleanup patch for this.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; However, do note that in my series if CONFIG_SHARED_MMU_CTX is defined,</span>
<span class="quote">&gt; then MM_TSB_HUGE_SHARED is index 0, instead of MM_TSB_BASE being 0 in</span>
<span class="quote">&gt; the case where CONFIG_SHARED_MMU_CTX is not defined.  This may seem</span>
<span class="quote">&gt; &#39;strange&#39; and the obvious question would be &#39;why not put CONFIG_SHARED_MMU_CTX</span>
<span class="quote">&gt; at the end of the existing array (index 2)?&#39;.  The reason is that tsb_descr</span>
<span class="quote">&gt; array can not have any &#39;holes&#39; when passed to the hypervisor.  Since there</span>
<span class="quote">&gt; will always be a MM_TSB_BASE tsb, with MM_TSB_HUGE_SHARED before and</span>
<span class="quote">&gt; MM_TSB_HUGE after MM_TSB_BASE, few tricks are necessary to ensure no holes</span>
<span class="quote">&gt; are in the array passed to the hypervisor.</span>
So this is the explanation for the strange changes of the constants.
Add a similar explanation to the code to help the next reader.

	Sam
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/sparc/include/asm/mmu_64.h b/arch/sparc/include/asm/mmu_64.h</span>
<span class="p_header">index f7de0db..edf8663 100644</span>
<span class="p_header">--- a/arch/sparc/include/asm/mmu_64.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/mmu_64.h</span>
<span class="p_chunk">@@ -57,6 +57,13 @@</span> <span class="p_context"></span>
 	 (!(((__ctx.sparc64_ctx_val) ^ tlb_context_cache) &amp; CTX_VERSION_MASK))
 #define CTX_HWBITS(__ctx)	((__ctx.sparc64_ctx_val) &amp; CTX_HW_MASK)
 #define CTX_NRBITS(__ctx)	((__ctx.sparc64_ctx_val) &amp; CTX_NR_MASK)
<span class="p_add">+#define	SHARED_CTX_VALID(__ctx)	(__ctx.shared_ctx &amp;&amp; \</span>
<span class="p_add">+	 (!(((__ctx.shared_ctx-&gt;shared_ctx_val) ^ tlb_context_cache) &amp; \</span>
<span class="p_add">+	   CTX_VERSION_MASK)))</span>
<span class="p_add">+#define	SHARED_CTX_HWBITS(__ctx)	\</span>
<span class="p_add">+	 ((__ctx.shared_ctx-&gt;shared_ctx_val) &amp; CTX_HW_MASK)</span>
<span class="p_add">+#define	SHARED_CTX_NRBITS(__ctx)	\</span>
<span class="p_add">+	 ((__ctx.shared_ctx-&gt;shared_ctx_val) &amp; CTX_NR_MASK)</span>
 
 #ifndef __ASSEMBLY__
 
<span class="p_chunk">@@ -80,24 +87,45 @@</span> <span class="p_context"> struct tsb_config {</span>
 	unsigned long		tsb_map_pte;
 };
 
<span class="p_del">-#define MM_TSB_BASE	0</span>
<span class="p_add">+#if defined(CONFIG_SHARED_MMU_CTX)</span>
<span class="p_add">+struct shared_mmu_ctx {</span>
<span class="p_add">+	atomic_t	refcount;</span>
<span class="p_add">+	unsigned long	shared_ctx_val;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+#define MM_TSB_HUGE_SHARED	0</span>
<span class="p_add">+#define MM_TSB_BASE		1</span>
<span class="p_add">+#define MM_TSB_HUGE		2</span>
<span class="p_add">+#define MM_NUM_TSBS		3</span>
<span class="p_add">+#else</span>
 
<span class="p_add">+#define MM_TSB_BASE		0</span>
 #if defined(CONFIG_HUGETLB_PAGE) || defined(CONFIG_TRANSPARENT_HUGEPAGE)
<span class="p_del">-#define MM_TSB_HUGE	1</span>
<span class="p_del">-#define MM_NUM_TSBS	2</span>
<span class="p_add">+#define MM_TSB_HUGE		1</span>
<span class="p_add">+#define MM_TSB_HUGE_SHARED	1	/* Simplifies conditions in code */</span>
<span class="p_add">+#define MM_NUM_TSBS		2</span>
 #else
<span class="p_del">-#define MM_NUM_TSBS	1</span>
<span class="p_add">+#define MM_NUM_TSBS		1</span>
<span class="p_add">+#endif</span>
 #endif
 
 typedef struct {
 	spinlock_t		lock;
 	unsigned long		sparc64_ctx_val;
<span class="p_add">+#if defined(CONFIG_SHARED_MMU_CTX)</span>
<span class="p_add">+	struct shared_mmu_ctx	*shared_ctx;</span>
<span class="p_add">+	unsigned long		shared_hugetlb_pte_count;</span>
<span class="p_add">+#endif</span>
 	unsigned long		hugetlb_pte_count;
 	unsigned long		thp_pte_count;
 	struct tsb_config	tsb_block[MM_NUM_TSBS];
 	struct hv_tsb_descr	tsb_descr[MM_NUM_TSBS];
 } mm_context_t;
 
<span class="p_add">+#define	mm_shared_ctx_val(mm)					\</span>
<span class="p_add">+	((mm)-&gt;context.shared_ctx ?				\</span>
<span class="p_add">+	 (mm)-&gt;context.shared_ctx-&gt;shared_ctx_val : 0UL)</span>
<span class="p_add">+</span>
 #endif /* !__ASSEMBLY__ */
 
 #define TSB_CONFIG_TSB		0x00
<span class="p_header">diff --git a/arch/sparc/include/asm/mmu_context_64.h b/arch/sparc/include/asm/mmu_context_64.h</span>
<span class="p_header">index b84be67..d031799 100644</span>
<span class="p_header">--- a/arch/sparc/include/asm/mmu_context_64.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/mmu_context_64.h</span>
<span class="p_chunk">@@ -35,15 +35,15 @@</span> <span class="p_context"> void __tsb_context_switch(unsigned long pgd_pa,</span>
 static inline void tsb_context_switch(struct mm_struct *mm)
 {
 	__tsb_context_switch(__pa(mm-&gt;pgd),
<span class="p_del">-			     &amp;mm-&gt;context.tsb_block[0],</span>
<span class="p_add">+			     &amp;mm-&gt;context.tsb_block[MM_TSB_BASE],</span>
 #if defined(CONFIG_HUGETLB_PAGE) || defined(CONFIG_TRANSPARENT_HUGEPAGE)
<span class="p_del">-			     (mm-&gt;context.tsb_block[1].tsb ?</span>
<span class="p_del">-			      &amp;mm-&gt;context.tsb_block[1] :</span>
<span class="p_add">+			     (mm-&gt;context.tsb_block[MM_TSB_HUGE].tsb ?</span>
<span class="p_add">+			      &amp;mm-&gt;context.tsb_block[MM_TSB_HUGE] :</span>
 			      NULL)
 #else
 			     NULL
 #endif
<span class="p_del">-			     , __pa(&amp;mm-&gt;context.tsb_descr[0]));</span>
<span class="p_add">+			     , __pa(&amp;mm-&gt;context.tsb_descr[MM_TSB_BASE]));</span>
 }
 
 void tsb_grow(struct mm_struct *mm,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



