
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/2] arm64: avoid increasing DMA masks above what hardware supports - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/2] arm64: avoid increasing DMA masks above what hardware supports</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=170319">Nikita Yushchenko</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 11, 2017, 6:31 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1484159512-28515-3-git-send-email-nikita.yoush@cogentembedded.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9511005/mbox/"
   >mbox</a>
|
   <a href="/patch/9511005/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9511005/">/patch/9511005/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	4DD4B6075C for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 11 Jan 2017 18:32:34 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 35BE527F8E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 11 Jan 2017 18:32:34 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 2A77528667; Wed, 11 Jan 2017 18:32:34 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 2F11528666
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 11 Jan 2017 18:32:32 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1031002AbdAKSc0 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 11 Jan 2017 13:32:26 -0500
Received: from mail-lf0-f42.google.com ([209.85.215.42]:34485 &quot;EHLO
	mail-lf0-f42.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1764542AbdAKScX (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 11 Jan 2017 13:32:23 -0500
Received: by mail-lf0-f42.google.com with SMTP id v186so88426421lfa.1
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Wed, 11 Jan 2017 10:32:22 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=cogentembedded-com.20150623.gappssmtp.com; s=20150623;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=2JPQnF0hWQbAsnKDQ0sHrlzZ1Z742Gu139QZWz2AmIU=;
	b=DXAESSjMhz9Y/9dulw+J6jdMJJcTL4niqgG3zYiX+XN/Mog1Nst7qeVCorsifq/tYR
	8brbsWwDBeQPc8Gs5AttDV+dK/FmEp9edLu/d4sW+uKgvT6PxLu+8tCjinmbX7FyAEsm
	gncvRmy3Cc5bvYGKkp2vsNiEWUBzJLieLkNDA/ggpnZvsM1wwt4YF5Evz1Ik7wGPA/7O
	HRy5DxQRuCkcbiKDMg2HCvnK9DsTsxy2mZCqDOMEXK7zpPGtPErMcDstcN074KkzBMBS
	6+9cfTtqWrpsn8eGAmAG+EfXuw1d6c9tIzGhcaf9kpg2pcKrhZRGVNffYIaWbOIMZ5Hl
	fvFw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=2JPQnF0hWQbAsnKDQ0sHrlzZ1Z742Gu139QZWz2AmIU=;
	b=TJkaRHxJCn/I2XBV+ibPLXIOz19fr73RCYOzPpT8kiD0cauguBgR7lWUbXdJ4iJSlP
	nMi4t9WmoF2Jv1agklNfp5zFFBi0Pq9vVJHaHms/U6cRvcgl6rLFIXrKT6irQLxRhslT
	3LqflrsppJfb9rB7Vwn8etgynlTIJf3jqokZC5gB5ZhfTlDYFDqmH7Mr1whEmU/P9JdH
	FVc+O0awl0MUHIa+SPE5D7wKfFsAWgRE+QK8jN2ZrFppkhjUbkHkbEzvy29ksqmVfUGZ
	mQANMr15JqukFUCKCzKe/H2021fUxXwylNaIn3pDhVv2Cpot6uttO5IaNWTrAZJWSfsG
	PKFQ==
X-Gm-Message-State: AIkVDXK8W6vLgfhOwF+708PZlvsct8+IWrlQTAkNAwtK9UPCAr+o47nZqyCu83OryqvG7A==
X-Received: by 10.25.20.66 with SMTP id k63mr3870691lfi.111.1484159541509;
	Wed, 11 Jan 2017 10:32:21 -0800 (PST)
Received: from hugenb.home (nikaet.starlink.ru. [94.141.168.29])
	by smtp.gmail.com with ESMTPSA id
	s20sm361640lfe.41.2017.01.11.10.32.19
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Wed, 11 Jan 2017 10:32:20 -0800 (PST)
From: Nikita Yushchenko &lt;nikita.yoush@cogentembedded.com&gt;
To: Robin Murphy &lt;robin.murphy@arm.com&gt;, Will Deacon &lt;will.deacon@arm.com&gt;,
	Arnd Bergmann &lt;arnd@arndb.de&gt;
Cc: linux-arm-kernel@lists.infradead.org, linux-renesas-soc@vger.kernel.org,
	Simon Horman &lt;horms@verge.net.au&gt;,
	Bjorn Helgaas &lt;bhelgaas@google.com&gt;, fkan@apm.com,
	linux-kernel@vger.kernel.org,
	Artemi Ivanov &lt;artemi.ivanov@cogentembedded.com&gt;,
	Nikita Yushchenko &lt;nikita.yoush@cogentembedded.com&gt;
Subject: [PATCH 2/2] arm64: avoid increasing DMA masks above what hardware
	supports
Date: Wed, 11 Jan 2017 21:31:52 +0300
Message-Id: &lt;1484159512-28515-3-git-send-email-nikita.yoush@cogentembedded.com&gt;
X-Mailer: git-send-email 2.1.4
In-Reply-To: &lt;1484159512-28515-1-git-send-email-nikita.yoush@cogentembedded.com&gt;
References: &lt;dca35acf-1adf-aa85-7a0b-d0c6ec702fa1@arm.com&gt;
	&lt;1484159512-28515-1-git-send-email-nikita.yoush@cogentembedded.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=170319">Nikita Yushchenko</a> - Jan. 11, 2017, 6:31 p.m.</div>
<pre class="content">
There are cases when device supports wide DMA addresses wider than
device&#39;s connection supports.

In this case driver sets DMA mask based on knowledge of device
capabilities. That must succeed to allow drivers to initialize.

However, swiotlb or iommu still need knowledge about actual device
capabilities. To avoid breakage, actual mask must not be set wider than
device connection allows.
<span class="signed-off-by">
Signed-off-by: Nikita Yushchenko &lt;nikita.yoush@cogentembedded.com&gt;</span>
CC: Arnd Bergmann &lt;arnd@arndb.de&gt;
CC: Robin Murphy &lt;robin.murphy@arm.com&gt;
CC: Will Deacon &lt;will.deacon@arm.com&gt;
---
 arch/arm64/Kconfig                   |  3 +++
 arch/arm64/include/asm/device.h      |  1 +
 arch/arm64/include/asm/dma-mapping.h |  3 +++
 arch/arm64/mm/dma-mapping.c          | 40 ++++++++++++++++++++++++++++++++++++
 4 files changed, 47 insertions(+)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=176">Arnd Bergmann</a> - Jan. 11, 2017, 9:11 p.m.</div>
<pre class="content">
On Wednesday, January 11, 2017 9:31:52 PM CET Nikita Yushchenko wrote:
<span class="quote">&gt; @@ -959,6 +990,15 @@ void arch_setup_dma_ops(struct device *dev, u64 dma_base, u64 size,</span>
<span class="quote">&gt;         if (!dev-&gt;archdata.dma_ops)</span>
<span class="quote">&gt;                 dev-&gt;archdata.dma_ops = &amp;swiotlb_dma_ops;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +       /*</span>
<span class="quote">&gt; +        * Whatever the parent bus can set. A device must not set</span>
<span class="quote">&gt; +        * a DMA mask larger than this.</span>
<span class="quote">&gt; +        */</span>
<span class="quote">&gt; +       if (enforce_range)</span>
<span class="quote">&gt; +               dev-&gt;archdata.parent_dma_mask = size - 1;</span>
<span class="quote">&gt; +       else</span>
<span class="quote">&gt; +               dev-&gt;archdata.parent_dma_mask = DMA_BIT_MASK(64);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;         dev-&gt;archdata.dma_coherent = coherent;</span>
<span class="quote">&gt;         __iommu_setup_dma_ops(dev, dma_base, size, iommu);</span>
<span class="quote">&gt; </span>

Could we just pass the mask instead of the size here?

	Arnd
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=170319">Nikita Yushchenko</a> - Jan. 12, 2017, 5:53 a.m.</div>
<pre class="content">
<span class="quote">&gt;&gt; @@ -959,6 +990,15 @@ void arch_setup_dma_ops(struct device *dev, u64 dma_base, u64 size,</span>
<span class="quote">&gt;&gt;         if (!dev-&gt;archdata.dma_ops)</span>
<span class="quote">&gt;&gt;                 dev-&gt;archdata.dma_ops = &amp;swiotlb_dma_ops;</span>
<span class="quote">&gt;&gt;  </span>
<span class="quote">&gt;&gt; +       /*</span>
<span class="quote">&gt;&gt; +        * Whatever the parent bus can set. A device must not set</span>
<span class="quote">&gt;&gt; +        * a DMA mask larger than this.</span>
<span class="quote">&gt;&gt; +        */</span>
<span class="quote">&gt;&gt; +       if (enforce_range)</span>
<span class="quote">&gt;&gt; +               dev-&gt;archdata.parent_dma_mask = size - 1;</span>
<span class="quote">&gt;&gt; +       else</span>
<span class="quote">&gt;&gt; +               dev-&gt;archdata.parent_dma_mask = DMA_BIT_MASK(64);</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt;         dev-&gt;archdata.dma_coherent = coherent;</span>
<span class="quote">&gt;&gt;         __iommu_setup_dma_ops(dev, dma_base, size, iommu);</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Could we just pass the mask instead of the size here?</span>

We don&#39;t want to change API now.

Nikita
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=143191">kbuild test robot</a> - Jan. 13, 2017, 10:16 a.m.</div>
<pre class="content">
Hi Nikita,

[auto build test ERROR on linus/master]
[also build test ERROR on v4.10-rc3 next-20170112]
[cannot apply to arm64/for-next/core]
[if your patch is applied to the wrong git tree, please drop us a note to help improve the system]

url:    https://github.com/0day-ci/linux/commits/Nikita-Yushchenko/dma-mapping-let-arch-know-origin-of-dma-range-passed-to-arch_setup_dma_ops/20170113-152733
config: arm64-defconfig (attached as .config)
compiler: aarch64-linux-gnu-gcc (Debian 6.1.1-9) 6.1.1 20160705
reproduce:
        wget https://git.kernel.org/cgit/linux/kernel/git/wfg/lkp-tests.git/plain/sbin/make.cross -O ~/bin/make.cross
        chmod +x ~/bin/make.cross
        # save the attached .config to linux build tree
        make.cross ARCH=arm64 

All errors (new ones prefixed by &gt;&gt;):

   arch/arm64/mm/dma-mapping.c: In function &#39;dma_set_mask&#39;:
<span class="quote">&gt;&gt; arch/arm64/mm/dma-mapping.c:210:6: error: &#39;mask&#39; undeclared (first use in this function)</span>
     if (mask &gt; dev-&gt;archdata.parent_dma_mask)
         ^~~~
   arch/arm64/mm/dma-mapping.c:210:6: note: each undeclared identifier is reported only once for each function it appears in

vim +/mask +210 arch/arm64/mm/dma-mapping.c

   204	}
   205	
   206	int dma_set_mask(struct device *dev, u64 dma_mask)
   207	{
   208		const struct dma_map_ops *ops = get_dma_ops(dev);
   209	
<span class="quote"> &gt; 210		if (mask &gt; dev-&gt;archdata.parent_dma_mask)</span>
   211			mask = dev-&gt;archdata.parent_dma_mask;
   212	
   213		if (ops-&gt;set_dma_mask)

---
0-DAY kernel test infrastructure                Open Source Technology Center
https://lists.01.org/pipermail/kbuild-all                   Intel Corporation
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/Kconfig b/arch/arm64/Kconfig</span>
<span class="p_header">index 1117421..afb2c08 100644</span>
<span class="p_header">--- a/arch/arm64/Kconfig</span>
<span class="p_header">+++ b/arch/arm64/Kconfig</span>
<span class="p_chunk">@@ -216,6 +216,9 @@</span> <span class="p_context"> config NEED_DMA_MAP_STATE</span>
 config NEED_SG_DMA_LENGTH
 	def_bool y
 
<span class="p_add">+config ARCH_HAS_DMA_SET_COHERENT_MASK</span>
<span class="p_add">+	def_bool y</span>
<span class="p_add">+</span>
 config SMP
 	def_bool y
 
<span class="p_header">diff --git a/arch/arm64/include/asm/device.h b/arch/arm64/include/asm/device.h</span>
<span class="p_header">index 243ef25..a57e7bb 100644</span>
<span class="p_header">--- a/arch/arm64/include/asm/device.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/device.h</span>
<span class="p_chunk">@@ -22,6 +22,7 @@</span> <span class="p_context"> struct dev_archdata {</span>
 	void *iommu;			/* private IOMMU data */
 #endif
 	bool dma_coherent;
<span class="p_add">+	u64 parent_dma_mask;</span>
 };
 
 struct pdev_archdata {
<span class="p_header">diff --git a/arch/arm64/include/asm/dma-mapping.h b/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_header">index ae1c23f..46b53e6 100644</span>
<span class="p_header">--- a/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -52,6 +52,9 @@</span> <span class="p_context"> void arch_setup_dma_ops(struct device *dev, u64 dma_base, u64 size,</span>
 			bool coherent);
 #define arch_setup_dma_ops	arch_setup_dma_ops
 
<span class="p_add">+#define HAVE_ARCH_DMA_SET_MASK 1</span>
<span class="p_add">+extern int dma_set_mask(struct device *dev, u64 dma_mask);</span>
<span class="p_add">+</span>
 #ifdef CONFIG_IOMMU_DMA
 void arch_teardown_dma_ops(struct device *dev);
 #define arch_teardown_dma_ops	arch_teardown_dma_ops
<span class="p_header">diff --git a/arch/arm64/mm/dma-mapping.c b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">index ea295f1..31b96fd 100644</span>
<span class="p_header">--- a/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">+++ b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_chunk">@@ -203,6 +203,37 @@</span> <span class="p_context"> static void __dma_free(struct device *dev, size_t size,</span>
 	__dma_free_coherent(dev, size, swiotlb_addr, dma_handle, attrs);
 }
 
<span class="p_add">+int dma_set_mask(struct device *dev, u64 dma_mask)</span>
<span class="p_add">+{</span>
<span class="p_add">+	const struct dma_map_ops *ops = get_dma_ops(dev);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (mask &gt; dev-&gt;archdata.parent_dma_mask)</span>
<span class="p_add">+		mask = dev-&gt;archdata.parent_dma_mask;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (ops-&gt;set_dma_mask)</span>
<span class="p_add">+		return ops-&gt;set_dma_mask(dev, mask);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (!dev-&gt;dma_mask || !dma_supported(dev, mask))</span>
<span class="p_add">+		return -EIO;</span>
<span class="p_add">+</span>
<span class="p_add">+	*dev-&gt;dma_mask = mask;</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+EXPORT_SYMBOL(dma_set_mask);</span>
<span class="p_add">+</span>
<span class="p_add">+int dma_set_coherent_mask(struct device *dev, u64 mask)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if (mask &gt; dev-&gt;archdata.parent_dma_mask)</span>
<span class="p_add">+		mask = dev-&gt;archdata.parent_dma_mask;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (!dma_supported(dev, mask))</span>
<span class="p_add">+		return -EIO;</span>
<span class="p_add">+</span>
<span class="p_add">+	dev-&gt;coherent_dma_mask = mask;</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+EXPORT_SYMBOL(dma_set_coherent_mask);</span>
<span class="p_add">+</span>
 static dma_addr_t __swiotlb_map_page(struct device *dev, struct page *page,
 				     unsigned long offset, size_t size,
 				     enum dma_data_direction dir,
<span class="p_chunk">@@ -959,6 +990,15 @@</span> <span class="p_context"> void arch_setup_dma_ops(struct device *dev, u64 dma_base, u64 size,</span>
 	if (!dev-&gt;archdata.dma_ops)
 		dev-&gt;archdata.dma_ops = &amp;swiotlb_dma_ops;
 
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Whatever the parent bus can set. A device must not set</span>
<span class="p_add">+	 * a DMA mask larger than this.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	if (enforce_range)</span>
<span class="p_add">+		dev-&gt;archdata.parent_dma_mask = size - 1;</span>
<span class="p_add">+	else</span>
<span class="p_add">+		dev-&gt;archdata.parent_dma_mask = DMA_BIT_MASK(64);</span>
<span class="p_add">+</span>
 	dev-&gt;archdata.dma_coherent = coherent;
 	__iommu_setup_dma_ops(dev, dma_base, size, iommu);
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



