
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[11/22] swiotlb: remove various exports - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [11/22] swiotlb: remove various exports</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 10, 2018, 8:09 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180110080932.14157-12-hch@lst.de&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10154413/mbox/"
   >mbox</a>
|
   <a href="/patch/10154413/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10154413/">/patch/10154413/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	A818C60231 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Jan 2018 08:10:22 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9D9E826E47
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Jan 2018 08:10:22 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 9203327853; Wed, 10 Jan 2018 08:10:22 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id EA91926E47
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 10 Jan 2018 08:10:21 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S964939AbeAJIKS (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 10 Jan 2018 03:10:18 -0500
Received: from bombadil.infradead.org ([65.50.211.133]:55850 &quot;EHLO
	bombadil.infradead.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932099AbeAJIKN (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 10 Jan 2018 03:10:13 -0500
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=infradead.org; s=bombadil.20170209;
	h=References:In-Reply-To:Message-Id:
	Date:Subject:Cc:To:From:Sender:Reply-To:MIME-Version:Content-Type:
	Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
	Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
	List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
	bh=8Tc3sPceDWFtB+WEm9Qvqc2cTzvVMZTjkBzuRcKTyFw=;
	b=lNitNrQjFV6pTHxPGXe6kyXAl
	hJWcTIrXRLehjBDBv/C2CU9WUeAr9wz+XQ4W+76TpDXDrn3mjBrUS5KE4Lt55iVhwsLAEgehl1KiL
	4cTcttCsXviVUexdf9Po5kDfABeYDnAr2rted5iHvlhwF7ny4k3ej34CMfBwMSBMzgWXqzsS9Cp0e
	uwWWyKeWfb+5cYWKmab5XV5fjRDkObOloh1IX/rGVoMoN/OXSxyaP2LkiXp9bSVzE/2GOlFWcsJh1
	aZ4fsq9yW3MOjQWSDerQdkvem3uSJvjq4e3hCE6jC0EfbkGNyyrepm4eGoHHf5FNXWndjN8F8ozqT
	K6R3LtR1A==;
Received: from clnet-p099-196.ikbnet.co.at ([83.175.99.196] helo=localhost)
	by bombadil.infradead.org with esmtpsa (Exim 4.89 #1 (Red Hat
	Linux)) id 1eZBSY-0008Mu-Rs; Wed, 10 Jan 2018 08:10:07 +0000
From: Christoph Hellwig &lt;hch@lst.de&gt;
To: iommu@lists.linux-foundation.org
Cc: Konrad Rzeszutek Wilk &lt;konrad@darnok.org&gt;,
	Michal Simek &lt;monstr@monstr.eu&gt;, Guan Xuetao &lt;gxt@mprc.pku.edu.cn&gt;,
	=?UTF-8?q?Christian=20K=C3=B6nig?= &lt;ckoenig.leichtzumerken@gmail.com&gt;,
	linux-arm-kernel@lists.infradead.org, linux-ia64@vger.kernel.org,
	linux-mips@linux-mips.org, linuxppc-dev@lists.ozlabs.org,
	x86@kernel.org, linux-arch@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH 11/22] swiotlb: remove various exports
Date: Wed, 10 Jan 2018 09:09:21 +0100
Message-Id: &lt;20180110080932.14157-12-hch@lst.de&gt;
X-Mailer: git-send-email 2.14.2
In-Reply-To: &lt;20180110080932.14157-1-hch@lst.de&gt;
References: &lt;20180110080932.14157-1-hch@lst.de&gt;
X-SRS-Rewrite: SMTP reverse-path rewritten from &lt;hch@infradead.org&gt; by
	bombadil.infradead.org. See http://www.infradead.org/rpr.html
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a> - Jan. 10, 2018, 8:09 a.m.</div>
<pre class="content">
All these symbols are only used by arch dma_ops implementations or
xen-swiotlb.  None of which can be modular.
<span class="signed-off-by">
Signed-off-by: Christoph Hellwig &lt;hch@lst.de&gt;</span>
---
 lib/swiotlb.c | 13 -------------
 1 file changed, 13 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/lib/swiotlb.c b/lib/swiotlb.c</span>
<span class="p_header">index bf2d19ee91c1..1eac51ff77a4 100644</span>
<span class="p_header">--- a/lib/swiotlb.c</span>
<span class="p_header">+++ b/lib/swiotlb.c</span>
<span class="p_chunk">@@ -605,7 +605,6 @@</span> <span class="p_context"> phys_addr_t swiotlb_tbl_map_single(struct device *hwdev,</span>
 
 	return tlb_addr;
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(swiotlb_tbl_map_single);</span>
 
 /*
  * Allocates bounce buffer and returns its kernel virtual address.
<span class="p_chunk">@@ -675,7 +674,6 @@</span> <span class="p_context"> void swiotlb_tbl_unmap_single(struct device *hwdev, phys_addr_t tlb_addr,</span>
 	}
 	spin_unlock_irqrestore(&amp;io_tlb_lock, flags);
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(swiotlb_tbl_unmap_single);</span>
 
 void swiotlb_tbl_sync_single(struct device *hwdev, phys_addr_t tlb_addr,
 			     size_t size, enum dma_data_direction dir,
<span class="p_chunk">@@ -707,7 +705,6 @@</span> <span class="p_context"> void swiotlb_tbl_sync_single(struct device *hwdev, phys_addr_t tlb_addr,</span>
 		BUG();
 	}
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(swiotlb_tbl_sync_single);</span>
 
 static inline bool dma_coherent_ok(struct device *dev, dma_addr_t addr,
 		size_t size)
<span class="p_chunk">@@ -884,7 +881,6 @@</span> <span class="p_context"> dma_addr_t swiotlb_map_page(struct device *dev, struct page *page,</span>
 
 	return swiotlb_phys_to_dma(dev, io_tlb_overflow_buffer);
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(swiotlb_map_page);</span>
 
 /*
  * Unmap a single streaming mode DMA translation.  The dma_addr and size must
<span class="p_chunk">@@ -925,7 +921,6 @@</span> <span class="p_context"> void swiotlb_unmap_page(struct device *hwdev, dma_addr_t dev_addr,</span>
 {
 	unmap_single(hwdev, dev_addr, size, dir, attrs);
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(swiotlb_unmap_page);</span>
 
 /*
  * Make physical memory consistent for a single streaming mode DMA translation
<span class="p_chunk">@@ -963,7 +958,6 @@</span> <span class="p_context"> swiotlb_sync_single_for_cpu(struct device *hwdev, dma_addr_t dev_addr,</span>
 {
 	swiotlb_sync_single(hwdev, dev_addr, size, dir, SYNC_FOR_CPU);
 }
<span class="p_del">-EXPORT_SYMBOL(swiotlb_sync_single_for_cpu);</span>
 
 void
 swiotlb_sync_single_for_device(struct device *hwdev, dma_addr_t dev_addr,
<span class="p_chunk">@@ -971,7 +965,6 @@</span> <span class="p_context"> swiotlb_sync_single_for_device(struct device *hwdev, dma_addr_t dev_addr,</span>
 {
 	swiotlb_sync_single(hwdev, dev_addr, size, dir, SYNC_FOR_DEVICE);
 }
<span class="p_del">-EXPORT_SYMBOL(swiotlb_sync_single_for_device);</span>
 
 /*
  * Map a set of buffers described by scatterlist in streaming mode for DMA.
<span class="p_chunk">@@ -1023,7 +1016,6 @@</span> <span class="p_context"> swiotlb_map_sg_attrs(struct device *hwdev, struct scatterlist *sgl, int nelems,</span>
 	}
 	return nelems;
 }
<span class="p_del">-EXPORT_SYMBOL(swiotlb_map_sg_attrs);</span>
 
 /*
  * Unmap a set of streaming mode DMA translations.  Again, cpu read rules
<span class="p_chunk">@@ -1043,7 +1035,6 @@</span> <span class="p_context"> swiotlb_unmap_sg_attrs(struct device *hwdev, struct scatterlist *sgl,</span>
 		unmap_single(hwdev, sg-&gt;dma_address, sg_dma_len(sg), dir,
 			     attrs);
 }
<span class="p_del">-EXPORT_SYMBOL(swiotlb_unmap_sg_attrs);</span>
 
 /*
  * Make physical memory consistent for a set of streaming mode DMA translations
<span class="p_chunk">@@ -1071,7 +1062,6 @@</span> <span class="p_context"> swiotlb_sync_sg_for_cpu(struct device *hwdev, struct scatterlist *sg,</span>
 {
 	swiotlb_sync_sg(hwdev, sg, nelems, dir, SYNC_FOR_CPU);
 }
<span class="p_del">-EXPORT_SYMBOL(swiotlb_sync_sg_for_cpu);</span>
 
 void
 swiotlb_sync_sg_for_device(struct device *hwdev, struct scatterlist *sg,
<span class="p_chunk">@@ -1079,14 +1069,12 @@</span> <span class="p_context"> swiotlb_sync_sg_for_device(struct device *hwdev, struct scatterlist *sg,</span>
 {
 	swiotlb_sync_sg(hwdev, sg, nelems, dir, SYNC_FOR_DEVICE);
 }
<span class="p_del">-EXPORT_SYMBOL(swiotlb_sync_sg_for_device);</span>
 
 int
 swiotlb_dma_mapping_error(struct device *hwdev, dma_addr_t dma_addr)
 {
 	return (dma_addr == swiotlb_phys_to_dma(hwdev, io_tlb_overflow_buffer));
 }
<span class="p_del">-EXPORT_SYMBOL(swiotlb_dma_mapping_error);</span>
 
 /*
  * Return whether the given device DMA address mask can be supported
<span class="p_chunk">@@ -1099,7 +1087,6 @@</span> <span class="p_context"> swiotlb_dma_supported(struct device *hwdev, u64 mask)</span>
 {
 	return swiotlb_phys_to_dma(hwdev, io_tlb_end - 1) &lt;= mask;
 }
<span class="p_del">-EXPORT_SYMBOL(swiotlb_dma_supported);</span>
 
 #ifdef CONFIG_DMA_DIRECT_OPS
 void *swiotlb_alloc(struct device *dev, size_t size, dma_addr_t *dma_handle,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



