
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[PART1,RFC,v2,03/10] svm: Introduce new AVIC VMCB registers - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [PART1,RFC,v2,03/10] svm: Introduce new AVIC VMCB registers</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=2908">Suthikulpanit, Suravee</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 4, 2016, 8:46 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1457124368-2025-4-git-send-email-Suravee.Suthikulpanit@amd.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8507591/mbox/"
   >mbox</a>
|
   <a href="/patch/8507591/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8507591/">/patch/8507591/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 0A798C0554
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  4 Mar 2016 20:49:13 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 6EF4D2022A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  4 Mar 2016 20:49:12 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id B51D7201F2
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  4 Mar 2016 20:49:11 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1760187AbcCDUtB (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 4 Mar 2016 15:49:01 -0500
Received: from mail-bn1bon0069.outbound.protection.outlook.com
	([157.56.111.69]:64651
	&quot;EHLO na01-bn1-obe.outbound.protection.outlook.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1759633AbcCDUs6 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 4 Mar 2016 15:48:58 -0500
Authentication-Results: redhat.com; dkim=none (message not signed)
	header.d=none; redhat.com; dmarc=none action=none header.from=amd.com;
Received: from localhost.localdomain (124.121.8.20) by
	SN1PR12MB0445.namprd12.prod.outlook.com (10.162.105.139) with
	Microsoft SMTP
	Server (TLS) id 15.1.415.20; Fri, 4 Mar 2016 20:48:41 +0000
From: Suravee Suthikulpanit &lt;Suravee.Suthikulpanit@amd.com&gt;
To: &lt;pbonzini@redhat.com&gt;, &lt;rkrcmar@redhat.com&gt;, &lt;joro@8bytes.org&gt;,
	&lt;bp@alien8.de&gt;, &lt;gleb@kernel.org&gt;, &lt;alex.williamson@redhat.com&gt;
CC: &lt;kvm@vger.kernel.org&gt;, &lt;linux-kernel@vger.kernel.org&gt;,
	&lt;wei@redhat.com&gt;, &lt;sherry.hurwitz@amd.com&gt;,
	Suravee Suthikulpanit &lt;suravee.suthikulpanit@amd.com&gt;
Subject: [PART1 RFC v2 03/10] svm: Introduce new AVIC VMCB registers
Date: Fri, 4 Mar 2016 14:46:01 -0600
Message-ID: &lt;1457124368-2025-4-git-send-email-Suravee.Suthikulpanit@amd.com&gt;
X-Mailer: git-send-email 1.9.1
In-Reply-To: &lt;1457124368-2025-1-git-send-email-Suravee.Suthikulpanit@amd.com&gt;
References: &lt;1457124368-2025-1-git-send-email-Suravee.Suthikulpanit@amd.com&gt;
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [124.121.8.20]
X-ClientProxiedBy: SINPR01CA0045.apcprd01.prod.exchangelabs.com
	(10.141.109.45) To SN1PR12MB0445.namprd12.prod.outlook.com
	(25.162.105.139)
X-MS-Office365-Filtering-Correlation-Id: 802a6e58-961d-42ca-0e91-08d3446e6052
X-Microsoft-Exchange-Diagnostics: 1; SN1PR12MB0445;
	2:jecLUiFqQ5/OjZ5Iv1nd8cETM0Eq+Ee+XwUK0COaL0oQUkeJFVLrwCfOWRdBwxPVu/Vct4mDJAdENWU8MPwu7dC2/Jf6Id34Uu4AQMfq0+fA7Hf2b0CTNsz48ZdKpYjv2kH6hUtfh3mKU0HeDRZq5klm/psaKnuBJhusiAsArvqljAnFWQRYe+bdV7GR4Csf;
	3:R8NKsFbqAWtx8LHYm1xakT1t6Z9VtxiGkIfeHoU91GK5i1GfLtH7SSgPlY7MvetKBEUQtDoLbaCLiWu2N8RueJQVgysXB9MPHcRCfjlcq+5OoF5Bab2OZzfRZAcgjfGy;
	25:LVGA4BAZIC8GklLhtfYm8pj1q31+HNpdRHuGvXGU4914SquqVFw2W0kRBqTUOOdCCi6HG9BApcu1tbkT/SUN/jKaRE728PrywZMgz9cwlY5hVxQn49FoqiMaTADZDFV/ijdPv46HxXNSYfC8q24/hEjngu8Ozkv148Ugi5ZfBDtbRUykw84J50vW+NzS4vVSEgyBDdhoXdzDgKs09liDiXuY7ixoHtNAp4iwDgP0S+HQZlfV1/aYIN0Rc3U7LeQThqP5TmQSvgLNp0fbjDl2HWo0d5jokFPdEy4QW8ZPunioFppxmTsucXFEP5K1ZaiS1qNzzH9x5wit6Q3P7NS58A==
X-Microsoft-Antispam: UriScan:;BCL:0;PCL:0;RULEID:;SRVR:SN1PR12MB0445;
X-Microsoft-Exchange-Diagnostics: 1; SN1PR12MB0445;
	20:+AFHNTLNZPfRATn/p7phbg5GzXlkkIFQWOOtNUKGvfb2ztzWnlhlRuC8ewCyUDT3EPEmhkbGs+wSKc3PBMYu0Ban0yInZrN9CW2pDtU55QJoIr6+CuTsomrjRk0MWrkUKJEFYRZGIZo6zAAZsFg0J2g7Sn+dyY8DpBa6xEBpSla7tsdbRsroLZb46I9tzxOIszAITLLUituGc2u/2BxzUjgfafmwdKDdr3G47+fNZj1rshMX2bKwlnjSz8Fuu16pJNbL8LJuLuFnv4Lkskq7zir3a6ijk/8XZ1zoWL3YuFLE2AiNR9j4JIyn9DV7p6JcuPTi6t1ooAatXSd/gqz9DMSa+8u5PRHqZ1r5BlF2VXQfelR3DUK/I25cmCWDykHZsv5aPT9nnEsywn8yh87DkzXEIY6oWxiG9rKl35y58W7uyF11Lb5Ecl3dfSnBo1Po5phppDUdtcuNGNEVjKFL3+VgiB0XdB/oz/AX+u7SYsYaKiO9U+Yzzqz44Foc8y9y;
	4:Kr3Pnlnm0bpvAt8FRLP0FNWszdZvEOHegWL54JxYsCRE6n7tIFd7wfRIhIkNpbD7oiGxAF0wbpCbKFHjHHK+4HneChzMu94Cwaez9NZekh3seXecvncZF0aCjvXSn8qJTM8VP5J2bSrv+Neh0L+AQ/kPho+GIaouUcZ51S4hWbcN2bv2/H/U0HyyEq1C8vr4ls3ZBSaoyLLOTtO4HV3XqrCl41LQh0BLCPuWGPF28MJ/i7aJNUcVAqYoRuzrF8CeNPWxr+CE2qB122m/lZ9m4hW0m/UbyiEgcBOIla43kg5wJo6i90nkYIafnfe6nIqp0NTKLzoEfipbN/czcf49/xwX8kzfFiwCqJVJdC0FEKM+yk9I1nXdmAyoWtDVz1d2
X-Microsoft-Antispam-PRVS: &lt;SN1PR12MB04457EE68623152D5F151FD2F3BE0@SN1PR12MB0445.namprd12.prod.outlook.com&gt;
X-Exchange-Antispam-Report-Test: UriScan:;
X-Exchange-Antispam-Report-CFA-Test: BCL:0; PCL:0;
	RULEID:(601004)(2401047)(5005006)(8121501046)(3002001)(10201501046);
	SRVR:SN1PR12MB0445; BCL:0; PCL:0; RULEID:; SRVR:SN1PR12MB0445;
X-Forefront-PRVS: 0871917CDA
X-Forefront-Antispam-Report: SFV:NSPM;
	SFS:(10009020)(4630300001)(979002)(6069001)(6009001)(106356001)(77096005)(5001770100001)(87976001)(48376002)(47776003)(229853001)(36756003)(2201001)(66066001)(81166005)(50466002)(2950100001)(5004730100002)(189998001)(40100003)(50226001)(5003940100001)(122386002)(5008740100001)(19580405001)(2906002)(19580395003)(86362001)(4326007)(42186005)(50986999)(6116002)(3846002)(1096002)(92566002)(586003)(76176999)(217873001)(969003)(989001)(999001)(1009001)(1019001);
	DIR:OUT; SFP:1101; SCL:1; SRVR:SN1PR12MB0445;
	H:localhost.localdomain; FPR:; SPF:None; MLV:ovrnspm;
	PTR:InfoNoRecords; LANG:en; 
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1; SN1PR12MB0445;
	23:mGOOWpyoEvl8akEd6Uu5SkPWr1eaq/SFylZwyiOgd?=
	=?us-ascii?Q?V/bDZNJkTsR4CjNwN3h9xZszozUQIk0JgXX8YIURnQ31M2y1tEema7KPmkMs?=
	=?us-ascii?Q?dFcJVgodBVIdWiy4+/hqty1Sed9ML0phunUxZHm3a6ZGYGqWq4jtojeYV1xt?=
	=?us-ascii?Q?RQfMTIrhdasCBYd/rwS28CjwzrhT9QEQUWKyxrbt2BeOJhRp9LMbjRhAA0gb?=
	=?us-ascii?Q?TJc7YvTNJMrLljqIeSEbhT+3Uj9XF9BjlSaDsni3PUouJO6acu0W46EHfLt9?=
	=?us-ascii?Q?TnJx3Zga76UDva7sv6XUkT5t848tSO+G8ZcZmP+KDqYMx73EbCYaKMzjYQds?=
	=?us-ascii?Q?JXQkVpmajJShlgzcIy3JhXTnkvEq82I6F+whatFv7BINr+FLzauDGVo8bpfj?=
	=?us-ascii?Q?UfZwgTLZBGgQidcmy1arrqb1E9XEwweR7otSd/gJATzEtw7rOqLaWLNSFQ4b?=
	=?us-ascii?Q?VWlpbq9xaWwnu3jSYpCOKG7Qg6x9i2YfhzKnzCAb9XuNr5Es6MHMJs9TAO8e?=
	=?us-ascii?Q?vEJlXv7NEVRQwdWB2tXFm5NmUA2UPPk8gdUdTitiTymuCB87UIs5CKwsQAQF?=
	=?us-ascii?Q?L1vFg5lCG0dy/O0GERZDu4o7P/JAOzU8V6X/piW2niQNjgECAGZ2N3Iks40q?=
	=?us-ascii?Q?eK/Og7qduh6Hu7wnhvI50MgrUMpx9L9syP3m7u7PksnSYyQ5BhCHfw6TbSSQ?=
	=?us-ascii?Q?ZG0FYt/Bv5Ko5FlloRoGIKleqQMomswapbtEaR2Afz3DV4laPl/WLeE9LCat?=
	=?us-ascii?Q?O7qNDA0v78u0WKXw8eT6r05YwPPkuSUFpYvUnLEsi0fyyKw33IVXCZgawVDf?=
	=?us-ascii?Q?JOHtuawGL5u+IcBtml4rTo5b6lkGcS4l6Z0U+ev7quskfs2LIkwZvH7Qd2Z+?=
	=?us-ascii?Q?6mR02/333uYv5M7RL9ve2++tpXCcGSLCXM6lcXYxRKg8b7rQJHwk8iCIVa3p?=
	=?us-ascii?Q?NljXW5foxC4CyIod6RYaU2Rg6Iu/NYaZX1JrfDe2Zw8OdLQTe1hEFYODlNWH?=
	=?us-ascii?Q?QH/JkuTs3c9q+Ufr1zZVEgG2tdZYcXse1RckJgHvX5ka0knZt3PMd6Z8fEI9?=
	=?us-ascii?Q?oGRXEw4MznrKxUIQES6bY9RCJjIYZj6TY0Sgc8PKQjx3VlMoQ=3D=3D?=
X-Microsoft-Exchange-Diagnostics: 1; SN1PR12MB0445;
	5:QwjSLwrQiZWXoLGhZqUd5krxXGElVZSuA3oDmsguyHd1QoMQ/LagOPZEjb+MXfclI0ShYyJOJ/hWUIkN76b6LObWdpqNjAUM0qHwQIkmBonRqkMdcW7hJYRjeBenTwuUVJjW8cAKhHAwk1C+SuUOgw==;
	24:6DRSZtfVpxWSnqV/J7asWkhgRK3qCoBGy1ZoW0/RBKwbLSuGklb9PuRhZUlPwegB7/MhTSkJuEiDx/alTgBF1JKV5+sDYcxAQ6M2Kp7i/mU=;
	20:u5PmOnJGhVuFMm2vqEvgylGCok26HDOlDnsx8y3d6NX5+pGi18xRsfkO939hEl03gNdtfPAue+7hVIsmNBxcZSoRZ3CDZMG5nqcqTGlybdLoIRHLKXwbcuSQgf68onQTPmdU+/+BhfKDOQyoC+NnE2Olj1pMif/NfG7nHTb8YGtzeE1Ax96Loqelkk99RTo/4PgjvJFC4Q5Yz4azfR4y/saHNF+gug1xhlmi+qJ1Ljozyvw/ZNmpL4zoiBDbbn+k
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 04 Mar 2016 20:48:41.0421
	(UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN1PR12MB0445
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2908">Suthikulpanit, Suravee</a> - March 4, 2016, 8:46 p.m.</div>
<pre class="content">
<span class="from">From: Suravee Suthikulpanit &lt;suravee.suthikulpanit@amd.com&gt;</span>

Introduce new AVIC VMCB registers. Also breakdown int_ctl register
into bit-field for ease of use.
<span class="signed-off-by">
Signed-off-by: Suravee Suthikulpanit &lt;suravee.suthikulpanit@amd.com&gt;</span>
---
 arch/x86/include/asm/svm.h | 29 ++++++++++++++++++++++++-----
 1 file changed, 24 insertions(+), 5 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2536">Paolo Bonzini</a> - March 7, 2016, 3:44 p.m.</div>
<pre class="content">
On 04/03/2016 21:46, Suravee Suthikulpanit wrote:
<span class="quote">&gt; From: Suravee Suthikulpanit &lt;suravee.suthikulpanit@amd.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Introduce new AVIC VMCB registers. Also breakdown int_ctl register</span>
<span class="quote">&gt; into bit-field for ease of use.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Suravee Suthikulpanit &lt;suravee.suthikulpanit@amd.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/x86/include/asm/svm.h | 29 ++++++++++++++++++++++++-----</span>
<span class="quote">&gt;  1 file changed, 24 insertions(+), 5 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/arch/x86/include/asm/svm.h b/arch/x86/include/asm/svm.h</span>
<span class="quote">&gt; index 6136d99..db5d7af 100644</span>
<span class="quote">&gt; --- a/arch/x86/include/asm/svm.h</span>
<span class="quote">&gt; +++ b/arch/x86/include/asm/svm.h</span>
<span class="quote">&gt; @@ -67,10 +67,24 @@ struct __attribute__ ((__packed__)) vmcb_control_area {</span>
<span class="quote">&gt;  	u32 asid;</span>
<span class="quote">&gt;  	u8 tlb_ctl;</span>
<span class="quote">&gt;  	u8 reserved_2[3];</span>
<span class="quote">&gt; -	u32 int_ctl;</span>
<span class="quote">&gt; +	union { /* Offset 0x60 */</span>
<span class="quote">&gt; +		u32 int_ctl;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +		struct __attribute__ ((__packed__)) {</span>
<span class="quote">&gt; +			u32 v_tpr		: 8,</span>
<span class="quote">&gt; +			    v_irq		: 1,</span>
<span class="quote">&gt; +			    reserved_3		: 7,</span>
<span class="quote">&gt; +			    v_intr_prio		: 4,</span>
<span class="quote">&gt; +			    v_ign_tpr		: 1,</span>
<span class="quote">&gt; +			    reserved_4		: 3,</span>
<span class="quote">&gt; +			    v_intr_masking	: 1,</span>
<span class="quote">&gt; +			    reserved_5		: 6,</span>
<span class="quote">&gt; +			    avic_enable		: 1;</span>

Please do not introduce bitfields and drop patch 4.

Thanks,

Paolo
<span class="quote">
&gt; +		};</span>
<span class="quote">&gt; +	};</span>
<span class="quote">&gt;  	u32 int_vector;</span>
<span class="quote">&gt;  	u32 int_state;</span>
<span class="quote">&gt; -	u8 reserved_3[4];</span>
<span class="quote">&gt; +	u8 reserved_6[4];</span>
<span class="quote">&gt;  	u32 exit_code;</span>
<span class="quote">&gt;  	u32 exit_code_hi;</span>
<span class="quote">&gt;  	u64 exit_info_1;</span>
<span class="quote">&gt; @@ -78,17 +92,22 @@ struct __attribute__ ((__packed__)) vmcb_control_area {</span>
<span class="quote">&gt;  	u32 exit_int_info;</span>
<span class="quote">&gt;  	u32 exit_int_info_err;</span>
<span class="quote">&gt;  	u64 nested_ctl;</span>
<span class="quote">&gt; -	u8 reserved_4[16];</span>
<span class="quote">&gt; +	u64 avic_vapic_bar;</span>
<span class="quote">&gt; +	u8 reserved_7[8];</span>
<span class="quote">&gt;  	u32 event_inj;</span>
<span class="quote">&gt;  	u32 event_inj_err;</span>
<span class="quote">&gt;  	u64 nested_cr3;</span>
<span class="quote">&gt;  	u64 lbr_ctl;</span>
<span class="quote">&gt;  	u32 clean;</span>
<span class="quote">&gt; -	u32 reserved_5;</span>
<span class="quote">&gt; +	u32 reserved_8;</span>
<span class="quote">&gt;  	u64 next_rip;</span>
<span class="quote">&gt;  	u8 insn_len;</span>
<span class="quote">&gt;  	u8 insn_bytes[15];</span>
<span class="quote">&gt; -	u8 reserved_6[800];</span>
<span class="quote">&gt; +	u64 avic_bk_page;	/* Offset 0xe0 */</span>
<span class="quote">&gt; +	u8 reserved_9[8];	/* Offset 0xe8 */</span>
<span class="quote">&gt; +	u64 avic_log_apic_id;	/* Offset 0xf0 */</span>
<span class="quote">&gt; +	u64 avic_phy_apic_id;	/* Offset 0xf8 */</span>
<span class="quote">&gt; +	u8 reserved_10[768];</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2908">Suthikulpanit, Suravee</a> - March 14, 2016, 7:41 a.m.</div>
<pre class="content">
Hi,

On 03/07/2016 10:44 PM, Paolo Bonzini wrote:
<span class="quote">&gt;</span>
<span class="quote">&gt; On 04/03/2016 21:46, Suravee Suthikulpanit wrote:</span>
<span class="quote">&gt;&gt; &gt;From: Suravee Suthikulpanit&lt;suravee.suthikulpanit@amd.com&gt;</span>
<span class="quote">&gt;&gt; &gt;</span>
<span class="quote">&gt;&gt; &gt;Introduce new AVIC VMCB registers. Also breakdown int_ctl register</span>
<span class="quote">&gt;&gt; &gt;into bit-field for ease of use.</span>
<span class="quote">&gt;&gt; &gt;</span>
<span class="quote">&gt;&gt; &gt;Signed-off-by: Suravee Suthikulpanit&lt;suravee.suthikulpanit@amd.com&gt;</span>
<span class="quote">&gt;&gt; &gt;---</span>
<span class="quote">&gt;&gt; &gt;  arch/x86/include/asm/svm.h | 29 ++++++++++++++++++++++++-----</span>
<span class="quote">&gt;&gt; &gt;  1 file changed, 24 insertions(+), 5 deletions(-)</span>
<span class="quote">&gt;&gt; &gt;</span>
<span class="quote">&gt;&gt; &gt;diff --git a/arch/x86/include/asm/svm.h b/arch/x86/include/asm/svm.h</span>
<span class="quote">&gt;&gt; &gt;index 6136d99..db5d7af 100644</span>
<span class="quote">&gt;&gt; &gt;--- a/arch/x86/include/asm/svm.h</span>
<span class="quote">&gt;&gt; &gt;+++ b/arch/x86/include/asm/svm.h</span>
<span class="quote">&gt;&gt; &gt;@@ -67,10 +67,24 @@ struct __attribute__ ((__packed__)) vmcb_control_area {</span>
<span class="quote">&gt;&gt; &gt;  	u32 asid;</span>
<span class="quote">&gt;&gt; &gt;  	u8 tlb_ctl;</span>
<span class="quote">&gt;&gt; &gt;  	u8 reserved_2[3];</span>
<span class="quote">&gt;&gt; &gt;-	u32 int_ctl;</span>
<span class="quote">&gt;&gt; &gt;+	union { /* Offset 0x60 */</span>
<span class="quote">&gt;&gt; &gt;+		u32 int_ctl;</span>
<span class="quote">&gt;&gt; &gt;+</span>
<span class="quote">&gt;&gt; &gt;+		struct __attribute__ ((__packed__)) {</span>
<span class="quote">&gt;&gt; &gt;+			u32 v_tpr		: 8,</span>
<span class="quote">&gt;&gt; &gt;+			    v_irq		: 1,</span>
<span class="quote">&gt;&gt; &gt;+			    reserved_3		: 7,</span>
<span class="quote">&gt;&gt; &gt;+			    v_intr_prio		: 4,</span>
<span class="quote">&gt;&gt; &gt;+			    v_ign_tpr		: 1,</span>
<span class="quote">&gt;&gt; &gt;+			    reserved_4		: 3,</span>
<span class="quote">&gt;&gt; &gt;+			    v_intr_masking	: 1,</span>
<span class="quote">&gt;&gt; &gt;+			    reserved_5		: 6,</span>
<span class="quote">&gt;&gt; &gt;+			    avic_enable		: 1;</span>
<span class="quote">&gt; Please do not introduce bitfields and drop patch 4.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Thanks,</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Paolo</span>
<span class="quote">&gt;</span>

Any particular reason why you do not recommend the use of bit field?

Thanks,
Suravee
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2536">Paolo Bonzini</a> - March 14, 2016, 12:25 p.m.</div>
<pre class="content">
On 14/03/2016 08:41, Suravee Suthikulpanit wrote:
<span class="quote">&gt; Any particular reason why you do not recommend the use of bit field?</span>

1) The current coding style is generally not using bitfields

2) Having to review patches that change working code unrelated to AVIC

3) Most of the fields are not even used when AVIC is enabled, so the
benefit of the conversion is small.

Paolo
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2908">Suthikulpanit, Suravee</a> - March 15, 2016, 12:51 p.m.</div>
<pre class="content">
On 03/14/2016 07:25 PM, Paolo Bonzini wrote:
<span class="quote">&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; On 14/03/2016 08:41, Suravee Suthikulpanit wrote:</span>
<span class="quote">&gt;&gt; Any particular reason why you do not recommend the use of bit field?</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; 1) The current coding style is generally not using bitfields</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; 2) Having to review patches that change working code unrelated to AVIC</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; 3) Most of the fields are not even used when AVIC is enabled, so the</span>
<span class="quote">&gt; benefit of the conversion is small.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Paolo</span>
<span class="quote">&gt;</span>

Ok I&#39;ll remove the bit-field stuff from patch 3 and will get rid off 
patch 4.

Thanks,
Suravee
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/svm.h b/arch/x86/include/asm/svm.h</span>
<span class="p_header">index 6136d99..db5d7af 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/svm.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/svm.h</span>
<span class="p_chunk">@@ -67,10 +67,24 @@</span> <span class="p_context"> struct __attribute__ ((__packed__)) vmcb_control_area {</span>
 	u32 asid;
 	u8 tlb_ctl;
 	u8 reserved_2[3];
<span class="p_del">-	u32 int_ctl;</span>
<span class="p_add">+	union { /* Offset 0x60 */</span>
<span class="p_add">+		u32 int_ctl;</span>
<span class="p_add">+</span>
<span class="p_add">+		struct __attribute__ ((__packed__)) {</span>
<span class="p_add">+			u32 v_tpr		: 8,</span>
<span class="p_add">+			    v_irq		: 1,</span>
<span class="p_add">+			    reserved_3		: 7,</span>
<span class="p_add">+			    v_intr_prio		: 4,</span>
<span class="p_add">+			    v_ign_tpr		: 1,</span>
<span class="p_add">+			    reserved_4		: 3,</span>
<span class="p_add">+			    v_intr_masking	: 1,</span>
<span class="p_add">+			    reserved_5		: 6,</span>
<span class="p_add">+			    avic_enable		: 1;</span>
<span class="p_add">+		};</span>
<span class="p_add">+	};</span>
 	u32 int_vector;
 	u32 int_state;
<span class="p_del">-	u8 reserved_3[4];</span>
<span class="p_add">+	u8 reserved_6[4];</span>
 	u32 exit_code;
 	u32 exit_code_hi;
 	u64 exit_info_1;
<span class="p_chunk">@@ -78,17 +92,22 @@</span> <span class="p_context"> struct __attribute__ ((__packed__)) vmcb_control_area {</span>
 	u32 exit_int_info;
 	u32 exit_int_info_err;
 	u64 nested_ctl;
<span class="p_del">-	u8 reserved_4[16];</span>
<span class="p_add">+	u64 avic_vapic_bar;</span>
<span class="p_add">+	u8 reserved_7[8];</span>
 	u32 event_inj;
 	u32 event_inj_err;
 	u64 nested_cr3;
 	u64 lbr_ctl;
 	u32 clean;
<span class="p_del">-	u32 reserved_5;</span>
<span class="p_add">+	u32 reserved_8;</span>
 	u64 next_rip;
 	u8 insn_len;
 	u8 insn_bytes[15];
<span class="p_del">-	u8 reserved_6[800];</span>
<span class="p_add">+	u64 avic_bk_page;	/* Offset 0xe0 */</span>
<span class="p_add">+	u8 reserved_9[8];	/* Offset 0xe8 */</span>
<span class="p_add">+	u64 avic_log_apic_id;	/* Offset 0xf0 */</span>
<span class="p_add">+	u64 avic_phy_apic_id;	/* Offset 0xf8 */</span>
<span class="p_add">+	u8 reserved_10[768];</span>
 };
 
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



