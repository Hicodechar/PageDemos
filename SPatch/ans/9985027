
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[13/13] x86/paravirt: Convert natively patched pv ops to use paravirt alternatives - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [13/13] x86/paravirt: Convert natively patched pv ops to use paravirt alternatives</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=95791">Josh Poimboeuf</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 4, 2017, 3:58 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;2540b103663d5038035e4df731b85c4f5094f431.1507128293.git.jpoimboe@redhat.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9985027/mbox/"
   >mbox</a>
|
   <a href="/patch/9985027/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9985027/">/patch/9985027/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	B50A46028E for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  4 Oct 2017 15:59:21 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id A693E28B08
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  4 Oct 2017 15:59:21 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 9AD3328B4A; Wed,  4 Oct 2017 15:59:21 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id F2C3D28B08
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  4 Oct 2017 15:59:20 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752638AbdJDP7T (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 4 Oct 2017 11:59:19 -0400
Received: from mx1.redhat.com ([209.132.183.28]:35868 &quot;EHLO mx1.redhat.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752609AbdJDP7L (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 4 Oct 2017 11:59:11 -0400
Received: from smtp.corp.redhat.com
	(int-mx05.intmail.prod.int.phx2.redhat.com [10.5.11.15])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 2E6214ACBB;
	Wed,  4 Oct 2017 15:59:11 +0000 (UTC)
DMARC-Filter: OpenDMARC Filter v1.3.2 mx1.redhat.com 2E6214ACBB
Authentication-Results: ext-mx09.extmail.prod.ext.phx2.redhat.com;
	dmarc=none (p=none dis=none) header.from=redhat.com
Authentication-Results: ext-mx09.extmail.prod.ext.phx2.redhat.com;
	spf=fail smtp.mailfrom=jpoimboe@redhat.com
Received: from treble.redhat.com (ovpn-120-76.rdu2.redhat.com [10.10.120.76])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 966516292B;
	Wed,  4 Oct 2017 15:59:08 +0000 (UTC)
From: Josh Poimboeuf &lt;jpoimboe@redhat.com&gt;
To: x86@kernel.org
Cc: linux-kernel@vger.kernel.org, Juergen Gross &lt;jgross@suse.com&gt;,
	Andy Lutomirski &lt;luto@kernel.org&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Sasha Levin &lt;alexander.levin@verizon.com&gt;,
	live-patching@vger.kernel.org, Jiri Slaby &lt;jslaby@suse.cz&gt;,
	Ingo Molnar &lt;mingo@kernel.org&gt;, &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;,
	Peter Zijlstra &lt;peterz@infradead.org&gt;, Mike Galbraith &lt;efault@gmx.de&gt;,
	Chris Wright &lt;chrisw@sous-sol.org&gt;, Alok Kataria &lt;akataria@vmware.com&gt;,
	Rusty Russell &lt;rusty@rustcorp.com.au&gt;,
	virtualization@lists.linux-foundation.org,
	Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;,
	xen-devel@lists.xenproject.org, Thomas Gleixner &lt;tglx@linutronix.de&gt;,
	Borislav Petkov &lt;bp@alien8.de&gt;
Subject: [PATCH 13/13] x86/paravirt: Convert natively patched pv ops to use
	paravirt alternatives
Date: Wed,  4 Oct 2017 10:58:34 -0500
Message-Id: &lt;2540b103663d5038035e4df731b85c4f5094f431.1507128293.git.jpoimboe@redhat.com&gt;
In-Reply-To: &lt;cover.1507128293.git.jpoimboe@redhat.com&gt;
References: &lt;cover.1507128293.git.jpoimboe@redhat.com&gt;
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.38]);
	Wed, 04 Oct 2017 15:59:11 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=95791">Josh Poimboeuf</a> - Oct. 4, 2017, 3:58 p.m.</div>
<pre class="content">
Now that the paravirt alternatives infrastructure is in place, use it
for all natively patched pv ops.

This fixes KASAN warnings in the ORC unwinder like the following:

  BUG: KASAN: stack-out-of-bounds in deref_stack_reg+0x123/0x140

This also improves debuggability by making vmlinux more likely to match
reality.

Reported-by: Sasha Levin &lt;alexander.levin@verizon.com&gt;
<span class="signed-off-by">Signed-off-by: Josh Poimboeuf &lt;jpoimboe@redhat.com&gt;</span>
---
 arch/x86/include/asm/paravirt-asm.h | 23 +++++++++++++----------
 arch/x86/include/asm/paravirt.h     | 37 +++++++++++++++++++++----------------
 2 files changed, 34 insertions(+), 26 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/paravirt-asm.h b/arch/x86/include/asm/paravirt-asm.h</span>
<span class="p_header">index a8139ea27cc1..b051f9254ace 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/paravirt-asm.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/paravirt-asm.h</span>
<span class="p_chunk">@@ -86,16 +86,18 @@</span> <span class="p_context"></span>
 		pv_cpu_ops, PV_CPU_iret, CLBR_NONE)
 
 #define DISABLE_INTERRUPTS(clobbers)					\
<span class="p_del">-	PV_SITE(PV_SAVE_REGS(clobbers | CLBR_CALLEE_SAVE);		\</span>
<span class="p_del">-		call PV_INDIRECT(pv_irq_ops+PV_IRQ_irq_disable);	\</span>
<span class="p_del">-		PV_RESTORE_REGS(clobbers | CLBR_CALLEE_SAVE),		\</span>
<span class="p_del">-		pv_irq_ops, PV_IRQ_irq_disable, clobbers)</span>
<span class="p_add">+	PV_ALT_SITE(cli,						\</span>
<span class="p_add">+		    PV_SAVE_REGS(clobbers | CLBR_CALLEE_SAVE);		\</span>
<span class="p_add">+		    call PV_INDIRECT(pv_irq_ops+PV_IRQ_irq_disable);	\</span>
<span class="p_add">+		    PV_RESTORE_REGS(clobbers | CLBR_CALLEE_SAVE),	\</span>
<span class="p_add">+		    pv_irq_ops, PV_IRQ_irq_disable, clobbers)</span>
 
 #define ENABLE_INTERRUPTS(clobbers)					\
<span class="p_del">-	PV_SITE(PV_SAVE_REGS(clobbers | CLBR_CALLEE_SAVE);		\</span>
<span class="p_del">-		call PV_INDIRECT(pv_irq_ops+PV_IRQ_irq_enable);		\</span>
<span class="p_del">-		PV_RESTORE_REGS(clobbers | CLBR_CALLEE_SAVE),		\</span>
<span class="p_del">-		pv_irq_ops, PV_IRQ_irq_enable, clobbers)</span>
<span class="p_add">+	PV_ALT_SITE(sti,						\</span>
<span class="p_add">+		    PV_SAVE_REGS(clobbers | CLBR_CALLEE_SAVE);		\</span>
<span class="p_add">+		    call PV_INDIRECT(pv_irq_ops+PV_IRQ_irq_enable);	\</span>
<span class="p_add">+		    PV_RESTORE_REGS(clobbers | CLBR_CALLEE_SAVE),	\</span>
<span class="p_add">+		    pv_irq_ops, PV_IRQ_irq_enable, clobbers)</span>
 
 #ifdef CONFIG_X86_32
 
<span class="p_chunk">@@ -128,8 +130,9 @@</span> <span class="p_context"></span>
 	call PV_INDIRECT(pv_mmu_ops+PV_MMU_read_cr2)
 
 #define USERGS_SYSRET64							\
<span class="p_del">-	PV_SITE(jmp PV_INDIRECT(pv_cpu_ops+PV_CPU_usergs_sysret64),	\</span>
<span class="p_del">-		pv_cpu_ops, PV_CPU_usergs_sysret64, CLBR_NONE)</span>
<span class="p_add">+	PV_ALT_SITE(swapgs; sysret,					\</span>
<span class="p_add">+		    jmp PV_INDIRECT(pv_cpu_ops+PV_CPU_usergs_sysret64),	\</span>
<span class="p_add">+		    pv_cpu_ops, PV_CPU_usergs_sysret64, CLBR_NONE)</span>
 
 #endif	/* !CONFIG_X86_32 */
 
<span class="p_header">diff --git a/arch/x86/include/asm/paravirt.h b/arch/x86/include/asm/paravirt.h</span>
<span class="p_header">index bfd02c3335cb..4216a3b02832 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/paravirt.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/paravirt.h</span>
<span class="p_chunk">@@ -13,6 +13,7 @@</span> <span class="p_context"></span>
 #include &lt;asm/frame.h&gt;
 #include &lt;asm/pgtable_types.h&gt;
 #include &lt;asm/paravirt_types.h&gt;
<span class="p_add">+#include &lt;asm/special_insns.h&gt;</span>
 
 static inline void load_sp0(struct tss_struct *tss,
 			     struct thread_struct *thread)
<span class="p_chunk">@@ -50,9 +51,10 @@</span> <span class="p_context"> static inline void write_cr0(unsigned long x)</span>
 	PVOP_VCALL1(pv_cpu_ops.write_cr0, x);
 }
 
<span class="p_del">-static inline unsigned long read_cr2(void)</span>
<span class="p_add">+static __always_inline unsigned long read_cr2(void)</span>
 {
<span class="p_del">-	return PVOP_CALL0(unsigned long, pv_mmu_ops.read_cr2);</span>
<span class="p_add">+	return PVOP_ALT_CALL0(unsigned long, NATIVE_READ_CR2,</span>
<span class="p_add">+			      pv_mmu_ops.read_cr2);</span>
 }
 
 static inline void write_cr2(unsigned long x)
<span class="p_chunk">@@ -60,14 +62,15 @@</span> <span class="p_context"> static inline void write_cr2(unsigned long x)</span>
 	PVOP_VCALL1(pv_mmu_ops.write_cr2, x);
 }
 
<span class="p_del">-static inline unsigned long __read_cr3(void)</span>
<span class="p_add">+static __always_inline unsigned long __read_cr3(void)</span>
 {
<span class="p_del">-	return PVOP_CALL0(unsigned long, pv_mmu_ops.read_cr3);</span>
<span class="p_add">+	return PVOP_ALT_CALL0(unsigned long, NATIVE_READ_CR3,</span>
<span class="p_add">+			      pv_mmu_ops.read_cr3);</span>
 }
 
<span class="p_del">-static inline void write_cr3(unsigned long x)</span>
<span class="p_add">+static __always_inline void write_cr3(unsigned long x)</span>
 {
<span class="p_del">-	PVOP_VCALL1(pv_mmu_ops.write_cr3, x);</span>
<span class="p_add">+	PVOP_ALT_VCALL1(NATIVE_WRITE_CR3, pv_mmu_ops.write_cr3, x);</span>
 }
 
 static inline void __write_cr4(unsigned long x)
<span class="p_chunk">@@ -291,9 +294,10 @@</span> <span class="p_context"> static inline void __flush_tlb_global(void)</span>
 {
 	PVOP_VCALL0(pv_mmu_ops.flush_tlb_kernel);
 }
<span class="p_del">-static inline void __flush_tlb_single(unsigned long addr)</span>
<span class="p_add">+static __always_inline void __flush_tlb_single(unsigned long addr)</span>
 {
<span class="p_del">-	PVOP_VCALL1(pv_mmu_ops.flush_tlb_single, addr);</span>
<span class="p_add">+	PVOP_ALT_VCALL1(NATIVE_FLUSH_TLB_SINGLE, pv_mmu_ops.flush_tlb_single,</span>
<span class="p_add">+			addr);</span>
 }
 
 static inline void flush_tlb_others(const struct cpumask *cpumask,
<span class="p_chunk">@@ -761,24 +765,25 @@</span> <span class="p_context"> static __always_inline bool pv_vcpu_is_preempted(long cpu)</span>
 #define __PV_IS_CALLEE_SAVE(func)			\
 	((struct paravirt_callee_save) { func })
 
<span class="p_del">-static inline notrace unsigned long arch_local_save_flags(void)</span>
<span class="p_add">+static __always_inline unsigned long arch_local_save_flags(void)</span>
 {
<span class="p_del">-	return PVOP_CALLEE0(unsigned long, pv_irq_ops.save_fl);</span>
<span class="p_add">+	return PVOP_ALT_CALLEE0(unsigned long, NATIVE_SAVE_FL,</span>
<span class="p_add">+				pv_irq_ops.save_fl);</span>
 }
 
<span class="p_del">-static inline notrace void arch_local_irq_restore(unsigned long f)</span>
<span class="p_add">+static __always_inline void arch_local_irq_restore(unsigned long f)</span>
 {
<span class="p_del">-	PVOP_VCALLEE1(pv_irq_ops.restore_fl, f);</span>
<span class="p_add">+	PVOP_ALT_VCALLEE1(NATIVE_RESTORE_FL, pv_irq_ops.restore_fl, f);</span>
 }
 
<span class="p_del">-static inline notrace void arch_local_irq_disable(void)</span>
<span class="p_add">+static __always_inline void arch_local_irq_disable(void)</span>
 {
<span class="p_del">-	PVOP_VCALLEE0(pv_irq_ops.irq_disable);</span>
<span class="p_add">+	PVOP_ALT_VCALLEE0(NATIVE_IRQ_DISABLE, pv_irq_ops.irq_disable);</span>
 }
 
<span class="p_del">-static inline notrace void arch_local_irq_enable(void)</span>
<span class="p_add">+static __always_inline void arch_local_irq_enable(void)</span>
 {
<span class="p_del">-	PVOP_VCALLEE0(pv_irq_ops.irq_enable);</span>
<span class="p_add">+	PVOP_ALT_VCALLEE0(NATIVE_IRQ_ENABLE, pv_irq_ops.irq_enable);</span>
 }
 
 static inline notrace unsigned long arch_local_irq_save(void)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



