
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,2/2] mm/hugetlb: handle races in alloc_huge_page and hugetlb_reserve_pages - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,2/2] mm/hugetlb: handle races in alloc_huge_page and hugetlb_reserve_pages</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>May 23, 2015, 3:55 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1432353304-12767-3-git-send-email-mike.kravetz@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6470111/mbox/"
   >mbox</a>
|
   <a href="/patch/6470111/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6470111/">/patch/6470111/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 36D649F444
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 23 May 2015 03:55:56 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 8194C205D1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 23 May 2015 03:55:52 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id A6B3F205F9
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 23 May 2015 03:55:48 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1946039AbbEWDzg (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 22 May 2015 23:55:36 -0400
Received: from aserp1040.oracle.com ([141.146.126.69]:42367 &quot;EHLO
	aserp1040.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1161036AbbEWDza (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 22 May 2015 23:55:30 -0400
Received: from aserv0021.oracle.com (aserv0021.oracle.com [141.146.126.233])
	by aserp1040.oracle.com (Sentrion-MTA-4.3.2/Sentrion-MTA-4.3.2)
	with ESMTP id t4N3tExE008957
	(version=TLSv1 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK);
	Sat, 23 May 2015 03:55:15 GMT
Received: from userv0121.oracle.com (userv0121.oracle.com [156.151.31.72])
	by aserv0021.oracle.com (8.13.8/8.13.8) with ESMTP id t4N3tEVQ031847
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL); 
	Sat, 23 May 2015 03:55:14 GMT
Received: from abhmp0011.oracle.com (abhmp0011.oracle.com [141.146.116.17])
	by userv0121.oracle.com (8.13.8/8.13.8) with ESMTP id
	t4N3tE4E012755; Sat, 23 May 2015 03:55:14 GMT
Received: from monkey.oracle.com (/50.53.81.168)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Fri, 22 May 2015 20:55:13 -0700
From: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
To: linux-mm@kvack.org, linux-kernel@vger.kernel.org
Cc: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;,
	Davidlohr Bueso &lt;dave@stgolabs.net&gt;,
	David Rientjes &lt;rientjes@google.com&gt;,
	Luiz Capitulino &lt;lcapitulino@redhat.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
Subject: [PATCH v2 2/2] mm/hugetlb: handle races in alloc_huge_page and
	hugetlb_reserve_pages
Date: Fri, 22 May 2015 20:55:04 -0700
Message-Id: &lt;1432353304-12767-3-git-send-email-mike.kravetz@oracle.com&gt;
X-Mailer: git-send-email 2.1.0
In-Reply-To: &lt;1432353304-12767-1-git-send-email-mike.kravetz@oracle.com&gt;
References: &lt;1432353304-12767-1-git-send-email-mike.kravetz@oracle.com&gt;
X-Source-IP: aserv0021.oracle.com [141.146.126.233]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - May 23, 2015, 3:55 a.m.</div>
<pre class="content">
alloc_huge_page and hugetlb_reserve_pages use region_chg to
calculate the number of pages which will be added to the reserve
map.  Subpool and global reserve counts are adjusted based on
the output of region_chg.  Before the pages are actually added
to the reserve map, these routines could race and add fewer
pages than expected.  If this happens, the subpool and global
reserve counts are not correct.

Compare the number of pages actually added (region_add) to those
expected to added (region_chg).  If fewer pages are actually added,
this indicates a race and adjust counters accordingly.
<span class="signed-off-by">
Signed-off-by: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;</span>
---
 mm/hugetlb.c | 34 ++++++++++++++++++++++++++++++----
 1 file changed, 30 insertions(+), 4 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 3855889..9234163 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -1540,7 +1540,7 @@</span> <span class="p_context"> static struct page *alloc_huge_page(struct vm_area_struct *vma,</span>
 	struct hugepage_subpool *spool = subpool_vma(vma);
 	struct hstate *h = hstate_vma(vma);
 	struct page *page;
<span class="p_del">-	long chg;</span>
<span class="p_add">+	long chg, commit;</span>
 	int ret, idx;
 	struct hugetlb_cgroup *h_cg;
 
<span class="p_chunk">@@ -1581,7 +1581,20 @@</span> <span class="p_context"> static struct page *alloc_huge_page(struct vm_area_struct *vma,</span>
 
 	set_page_private(page, (unsigned long)spool);
 
<span class="p_del">-	vma_commit_reservation(h, vma, addr);</span>
<span class="p_add">+	commit = vma_commit_reservation(h, vma, addr);</span>
<span class="p_add">+	if (unlikely(chg &gt; commit)) {</span>
<span class="p_add">+		/*</span>
<span class="p_add">+		 * The page was added to the reservation map between</span>
<span class="p_add">+		 * vma_needs_reservation and vma_commit_reservation.</span>
<span class="p_add">+		 * This indicates a race with hugetlb_reserve_pages.</span>
<span class="p_add">+		 * Adjust for the subpool count incremented above AND</span>
<span class="p_add">+		 * in hugetlb_reserve_pages for the same page.  Also,</span>
<span class="p_add">+		 * the reservation count added in hugetlb_reserve_pages</span>
<span class="p_add">+		 * no longer applies.</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		hugepage_subpool_put_pages(spool, 1);</span>
<span class="p_add">+		hugetlb_acct_memory(h, -1);</span>
<span class="p_add">+	}</span>
 	return page;
 
 out_uncharge_cgroup:
<span class="p_chunk">@@ -3695,8 +3708,21 @@</span> <span class="p_context"> int hugetlb_reserve_pages(struct inode *inode,</span>
 	 * consumed reservations are stored in the map. Hence, nothing
 	 * else has to be done for private mappings here
 	 */
<span class="p_del">-	if (!vma || vma-&gt;vm_flags &amp; VM_MAYSHARE)</span>
<span class="p_del">-		region_add(resv_map, from, to);</span>
<span class="p_add">+	if (!vma || vma-&gt;vm_flags &amp; VM_MAYSHARE) {</span>
<span class="p_add">+		long add = region_add(resv_map, from, to);</span>
<span class="p_add">+</span>
<span class="p_add">+		if (unlikely(chg &gt; add)) {</span>
<span class="p_add">+			/*</span>
<span class="p_add">+			 * pages in this range were added to the reserve</span>
<span class="p_add">+			 * map between region_chg and region_add.  This</span>
<span class="p_add">+			 * indicates a race with alloc_huge_page.  Adjust</span>
<span class="p_add">+			 * the subpool and reserve counts modified above</span>
<span class="p_add">+			 * based on the difference.</span>
<span class="p_add">+			 */</span>
<span class="p_add">+			hugepage_subpool_put_pages(spool, chg - add);</span>
<span class="p_add">+			hugetlb_acct_memory(h, -(chg - ret));</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
 	return 0;
 out_err:
 	if (vma &amp;&amp; is_vma_resv_set(vma, HPAGE_RESV_OWNER))

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



