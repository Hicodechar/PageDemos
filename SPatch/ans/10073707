
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>Linux 4.14.2 - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    Linux 4.14.2</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 24, 2017, 8:18 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171124081854.GB12646@kroah.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10073707/mbox/"
   >mbox</a>
|
   <a href="/patch/10073707/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10073707/">/patch/10073707/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	F09A36037F for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 24 Nov 2017 08:18:56 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id DFF122A359
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 24 Nov 2017 08:18:56 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D45682A35E; Fri, 24 Nov 2017 08:18:56 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 94DB92A359
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 24 Nov 2017 08:18:55 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753121AbdKXISw (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 24 Nov 2017 03:18:52 -0500
Received: from mail.linuxfoundation.org ([140.211.169.12]:43016 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752926AbdKXISu (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 24 Nov 2017 03:18:50 -0500
Received: from localhost (LFbn-1-12253-150.w90-92.abo.wanadoo.fr
	[90.92.67.150])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id 8C797ABB;
	Fri, 24 Nov 2017 08:18:49 +0000 (UTC)
Date: Fri, 24 Nov 2017 09:18:55 +0100
From: Greg KH &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org, Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	torvalds@linux-foundation.org, stable@vger.kernel.org
Cc: lwn@lwn.net, Jiri Slaby &lt;jslaby@suse.cz&gt;
Subject: Re: Linux 4.14.2
Message-ID: &lt;20171124081854.GB12646@kroah.com&gt;
References: &lt;20171124081847.GA12646@kroah.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: &lt;20171124081847.GA12646@kroah.com&gt;
User-Agent: Mutt/1.9.1 (2017-09-22)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Nov. 24, 2017, 8:18 a.m.</div>
<pre class="content">

</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/Makefile b/Makefile</span>
<span class="p_header">index 01f9df1af256..75d89dc2b94a 100644</span>
<span class="p_header">--- a/Makefile</span>
<span class="p_header">+++ b/Makefile</span>
<span class="p_chunk">@@ -1,7 +1,7 @@</span> <span class="p_context"></span>
 # SPDX-License-Identifier: GPL-2.0
 VERSION = 4
 PATCHLEVEL = 14
<span class="p_del">-SUBLEVEL = 1</span>
<span class="p_add">+SUBLEVEL = 2</span>
 EXTRAVERSION =
 NAME = Petit Gorille
 
<span class="p_header">diff --git a/block/bio.c b/block/bio.c</span>
<span class="p_header">index 101c2a9b5481..33fa6b4af312 100644</span>
<span class="p_header">--- a/block/bio.c</span>
<span class="p_header">+++ b/block/bio.c</span>
<span class="p_chunk">@@ -597,6 +597,7 @@</span> <span class="p_context"> void __bio_clone_fast(struct bio *bio, struct bio *bio_src)</span>
 	 * so we don&#39;t set nor calculate new physical/hw segment counts here
 	 */
 	bio-&gt;bi_disk = bio_src-&gt;bi_disk;
<span class="p_add">+	bio-&gt;bi_partno = bio_src-&gt;bi_partno;</span>
 	bio_set_flag(bio, BIO_CLONED);
 	bio-&gt;bi_opf = bio_src-&gt;bi_opf;
 	bio-&gt;bi_write_hint = bio_src-&gt;bi_write_hint;
<span class="p_header">diff --git a/drivers/char/ipmi/ipmi_msghandler.c b/drivers/char/ipmi/ipmi_msghandler.c</span>
<span class="p_header">index 810b138f5897..c82d9fd2f05a 100644</span>
<span class="p_header">--- a/drivers/char/ipmi/ipmi_msghandler.c</span>
<span class="p_header">+++ b/drivers/char/ipmi/ipmi_msghandler.c</span>
<span class="p_chunk">@@ -4030,7 +4030,8 @@</span> <span class="p_context"> smi_from_recv_msg(ipmi_smi_t intf, struct ipmi_recv_msg *recv_msg,</span>
 }
 
 static void check_msg_timeout(ipmi_smi_t intf, struct seq_table *ent,
<span class="p_del">-			      struct list_head *timeouts, long timeout_period,</span>
<span class="p_add">+			      struct list_head *timeouts,</span>
<span class="p_add">+			      unsigned long timeout_period,</span>
 			      int slot, unsigned long *flags,
 			      unsigned int *waiting_msgs)
 {
<span class="p_chunk">@@ -4043,8 +4044,8 @@</span> <span class="p_context"> static void check_msg_timeout(ipmi_smi_t intf, struct seq_table *ent,</span>
 	if (!ent-&gt;inuse)
 		return;
 
<span class="p_del">-	ent-&gt;timeout -= timeout_period;</span>
<span class="p_del">-	if (ent-&gt;timeout &gt; 0) {</span>
<span class="p_add">+	if (timeout_period &lt; ent-&gt;timeout) {</span>
<span class="p_add">+		ent-&gt;timeout -= timeout_period;</span>
 		(*waiting_msgs)++;
 		return;
 	}
<span class="p_chunk">@@ -4110,7 +4111,8 @@</span> <span class="p_context"> static void check_msg_timeout(ipmi_smi_t intf, struct seq_table *ent,</span>
 	}
 }
 
<span class="p_del">-static unsigned int ipmi_timeout_handler(ipmi_smi_t intf, long timeout_period)</span>
<span class="p_add">+static unsigned int ipmi_timeout_handler(ipmi_smi_t intf,</span>
<span class="p_add">+					 unsigned long timeout_period)</span>
 {
 	struct list_head     timeouts;
 	struct ipmi_recv_msg *msg, *msg2;
<span class="p_header">diff --git a/drivers/char/ipmi/ipmi_si_intf.c b/drivers/char/ipmi/ipmi_si_intf.c</span>
<span class="p_header">index 36f47e8d06a3..bc3984ffe867 100644</span>
<span class="p_header">--- a/drivers/char/ipmi/ipmi_si_intf.c</span>
<span class="p_header">+++ b/drivers/char/ipmi/ipmi_si_intf.c</span>
<span class="p_chunk">@@ -3424,7 +3424,7 @@</span> <span class="p_context"> static inline void wait_for_timer_and_thread(struct smi_info *smi_info)</span>
 		del_timer_sync(&amp;smi_info-&gt;si_timer);
 }
 
<span class="p_del">-static int is_new_interface(struct smi_info *info)</span>
<span class="p_add">+static struct smi_info *find_dup_si(struct smi_info *info)</span>
 {
 	struct smi_info *e;
 
<span class="p_chunk">@@ -3439,24 +3439,36 @@</span> <span class="p_context"> static int is_new_interface(struct smi_info *info)</span>
 			 */
 			if (info-&gt;slave_addr &amp;&amp; !e-&gt;slave_addr)
 				e-&gt;slave_addr = info-&gt;slave_addr;
<span class="p_del">-			return 0;</span>
<span class="p_add">+			return e;</span>
 		}
 	}
 
<span class="p_del">-	return 1;</span>
<span class="p_add">+	return NULL;</span>
 }
 
 static int add_smi(struct smi_info *new_smi)
 {
 	int rv = 0;
<span class="p_add">+	struct smi_info *dup;</span>
 
 	mutex_lock(&amp;smi_infos_lock);
<span class="p_del">-	if (!is_new_interface(new_smi)) {</span>
<span class="p_del">-		pr_info(PFX &quot;%s-specified %s state machine: duplicate\n&quot;,</span>
<span class="p_del">-			ipmi_addr_src_to_str(new_smi-&gt;addr_source),</span>
<span class="p_del">-			si_to_str[new_smi-&gt;si_type]);</span>
<span class="p_del">-		rv = -EBUSY;</span>
<span class="p_del">-		goto out_err;</span>
<span class="p_add">+	dup = find_dup_si(new_smi);</span>
<span class="p_add">+	if (dup) {</span>
<span class="p_add">+		if (new_smi-&gt;addr_source == SI_ACPI &amp;&amp;</span>
<span class="p_add">+		    dup-&gt;addr_source == SI_SMBIOS) {</span>
<span class="p_add">+			/* We prefer ACPI over SMBIOS. */</span>
<span class="p_add">+			dev_info(dup-&gt;dev,</span>
<span class="p_add">+				 &quot;Removing SMBIOS-specified %s state machine in favor of ACPI\n&quot;,</span>
<span class="p_add">+				 si_to_str[new_smi-&gt;si_type]);</span>
<span class="p_add">+			cleanup_one_si(dup);</span>
<span class="p_add">+		} else {</span>
<span class="p_add">+			dev_info(new_smi-&gt;dev,</span>
<span class="p_add">+				 &quot;%s-specified %s state machine: duplicate\n&quot;,</span>
<span class="p_add">+				 ipmi_addr_src_to_str(new_smi-&gt;addr_source),</span>
<span class="p_add">+				 si_to_str[new_smi-&gt;si_type]);</span>
<span class="p_add">+			rv = -EBUSY;</span>
<span class="p_add">+			goto out_err;</span>
<span class="p_add">+		}</span>
 	}
 
 	pr_info(PFX &quot;Adding %s-specified %s state machine\n&quot;,
<span class="p_chunk">@@ -3865,7 +3877,8 @@</span> <span class="p_context"> static void cleanup_one_si(struct smi_info *to_clean)</span>
 		poll(to_clean);
 		schedule_timeout_uninterruptible(1);
 	}
<span class="p_del">-	disable_si_irq(to_clean, false);</span>
<span class="p_add">+	if (to_clean-&gt;handlers)</span>
<span class="p_add">+		disable_si_irq(to_clean, false);</span>
 	while (to_clean-&gt;curr_msg || (to_clean-&gt;si_state != SI_NORMAL)) {
 		poll(to_clean);
 		schedule_timeout_uninterruptible(1);
<span class="p_header">diff --git a/drivers/char/tpm/tpm-dev-common.c b/drivers/char/tpm/tpm-dev-common.c</span>
<span class="p_header">index 610638a80383..461bf0b8a094 100644</span>
<span class="p_header">--- a/drivers/char/tpm/tpm-dev-common.c</span>
<span class="p_header">+++ b/drivers/char/tpm/tpm-dev-common.c</span>
<span class="p_chunk">@@ -110,6 +110,12 @@</span> <span class="p_context"> ssize_t tpm_common_write(struct file *file, const char __user *buf,</span>
 		return -EFAULT;
 	}
 
<span class="p_add">+	if (in_size &lt; 6 ||</span>
<span class="p_add">+	    in_size &lt; be32_to_cpu(*((__be32 *) (priv-&gt;data_buffer + 2)))) {</span>
<span class="p_add">+		mutex_unlock(&amp;priv-&gt;buffer_mutex);</span>
<span class="p_add">+		return -EINVAL;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	/* atomic tpm command send and result receive. We only hold the ops
 	 * lock during this period so that the tpm can be unregistered even if
 	 * the char dev is held open.
<span class="p_header">diff --git a/drivers/net/ethernet/fealnx.c b/drivers/net/ethernet/fealnx.c</span>
<span class="p_header">index e92859dab7ae..e191c4ebeaf4 100644</span>
<span class="p_header">--- a/drivers/net/ethernet/fealnx.c</span>
<span class="p_header">+++ b/drivers/net/ethernet/fealnx.c</span>
<span class="p_chunk">@@ -257,8 +257,8 @@</span> <span class="p_context"> enum rx_desc_status_bits {</span>
 	RXFSD = 0x00000800,	/* first descriptor */
 	RXLSD = 0x00000400,	/* last descriptor */
 	ErrorSummary = 0x80,	/* error summary */
<span class="p_del">-	RUNT = 0x40,		/* runt packet received */</span>
<span class="p_del">-	LONG = 0x20,		/* long packet received */</span>
<span class="p_add">+	RUNTPKT = 0x40,		/* runt packet received */</span>
<span class="p_add">+	LONGPKT = 0x20,		/* long packet received */</span>
 	FAE = 0x10,		/* frame align error */
 	CRC = 0x08,		/* crc error */
 	RXER = 0x04,		/* receive error */
<span class="p_chunk">@@ -1632,7 +1632,7 @@</span> <span class="p_context"> static int netdev_rx(struct net_device *dev)</span>
 					       dev-&gt;name, rx_status);
 
 				dev-&gt;stats.rx_errors++;	/* end of a packet. */
<span class="p_del">-				if (rx_status &amp; (LONG | RUNT))</span>
<span class="p_add">+				if (rx_status &amp; (LONGPKT | RUNTPKT))</span>
 					dev-&gt;stats.rx_length_errors++;
 				if (rx_status &amp; RXER)
 					dev-&gt;stats.rx_frame_errors++;
<span class="p_header">diff --git a/drivers/net/usb/cdc_ncm.c b/drivers/net/usb/cdc_ncm.c</span>
<span class="p_header">index 47cab1bde065..9e1b74590682 100644</span>
<span class="p_header">--- a/drivers/net/usb/cdc_ncm.c</span>
<span class="p_header">+++ b/drivers/net/usb/cdc_ncm.c</span>
<span class="p_chunk">@@ -771,7 +771,7 @@</span> <span class="p_context"> int cdc_ncm_bind_common(struct usbnet *dev, struct usb_interface *intf, u8 data_</span>
 	int err;
 	u8 iface_no;
 	struct usb_cdc_parsed_header hdr;
<span class="p_del">-	u16 curr_ntb_format;</span>
<span class="p_add">+	__le16 curr_ntb_format;</span>
 
 	ctx = kzalloc(sizeof(*ctx), GFP_KERNEL);
 	if (!ctx)
<span class="p_chunk">@@ -889,7 +889,7 @@</span> <span class="p_context"> int cdc_ncm_bind_common(struct usbnet *dev, struct usb_interface *intf, u8 data_</span>
 			goto error2;
 		}
 
<span class="p_del">-		if (curr_ntb_format == USB_CDC_NCM_NTB32_FORMAT) {</span>
<span class="p_add">+		if (curr_ntb_format == cpu_to_le16(USB_CDC_NCM_NTB32_FORMAT)) {</span>
 			dev_info(&amp;intf-&gt;dev, &quot;resetting NTB format to 16-bit&quot;);
 			err = usbnet_write_cmd(dev, USB_CDC_SET_NTB_FORMAT,
 					       USB_TYPE_CLASS | USB_DIR_OUT
<span class="p_header">diff --git a/drivers/net/vxlan.c b/drivers/net/vxlan.c</span>
<span class="p_header">index d7c49cf1d5e9..a2f4e52fadb5 100644</span>
<span class="p_header">--- a/drivers/net/vxlan.c</span>
<span class="p_header">+++ b/drivers/net/vxlan.c</span>
<span class="p_chunk">@@ -1623,26 +1623,19 @@</span> <span class="p_context"> static struct sk_buff *vxlan_na_create(struct sk_buff *request,</span>
 static int neigh_reduce(struct net_device *dev, struct sk_buff *skb, __be32 vni)
 {
 	struct vxlan_dev *vxlan = netdev_priv(dev);
<span class="p_del">-	struct nd_msg *msg;</span>
<span class="p_del">-	const struct ipv6hdr *iphdr;</span>
 	const struct in6_addr *daddr;
<span class="p_del">-	struct neighbour *n;</span>
<span class="p_add">+	const struct ipv6hdr *iphdr;</span>
 	struct inet6_dev *in6_dev;
<span class="p_add">+	struct neighbour *n;</span>
<span class="p_add">+	struct nd_msg *msg;</span>
 
 	in6_dev = __in6_dev_get(dev);
 	if (!in6_dev)
 		goto out;
 
<span class="p_del">-	if (!pskb_may_pull(skb, sizeof(struct ipv6hdr) + sizeof(struct nd_msg)))</span>
<span class="p_del">-		goto out;</span>
<span class="p_del">-</span>
 	iphdr = ipv6_hdr(skb);
 	daddr = &amp;iphdr-&gt;daddr;
<span class="p_del">-</span>
 	msg = (struct nd_msg *)(iphdr + 1);
<span class="p_del">-	if (msg-&gt;icmph.icmp6_code != 0 ||</span>
<span class="p_del">-	    msg-&gt;icmph.icmp6_type != NDISC_NEIGHBOUR_SOLICITATION)</span>
<span class="p_del">-		goto out;</span>
 
 	if (ipv6_addr_loopback(daddr) ||
 	    ipv6_addr_is_multicast(&amp;msg-&gt;target))
<span class="p_chunk">@@ -2240,11 +2233,11 @@</span> <span class="p_context"> static void vxlan_xmit_one(struct sk_buff *skb, struct net_device *dev,</span>
 static netdev_tx_t vxlan_xmit(struct sk_buff *skb, struct net_device *dev)
 {
 	struct vxlan_dev *vxlan = netdev_priv(dev);
<span class="p_add">+	struct vxlan_rdst *rdst, *fdst = NULL;</span>
 	const struct ip_tunnel_info *info;
<span class="p_del">-	struct ethhdr *eth;</span>
 	bool did_rsc = false;
<span class="p_del">-	struct vxlan_rdst *rdst, *fdst = NULL;</span>
 	struct vxlan_fdb *f;
<span class="p_add">+	struct ethhdr *eth;</span>
 	__be32 vni = 0;
 
 	info = skb_tunnel_info(skb);
<span class="p_chunk">@@ -2269,12 +2262,14 @@</span> <span class="p_context"> static netdev_tx_t vxlan_xmit(struct sk_buff *skb, struct net_device *dev)</span>
 		if (ntohs(eth-&gt;h_proto) == ETH_P_ARP)
 			return arp_reduce(dev, skb, vni);
 #if IS_ENABLED(CONFIG_IPV6)
<span class="p_del">-		else if (ntohs(eth-&gt;h_proto) == ETH_P_IPV6) {</span>
<span class="p_del">-			struct ipv6hdr *hdr, _hdr;</span>
<span class="p_del">-			if ((hdr = skb_header_pointer(skb,</span>
<span class="p_del">-						      skb_network_offset(skb),</span>
<span class="p_del">-						      sizeof(_hdr), &amp;_hdr)) &amp;&amp;</span>
<span class="p_del">-			    hdr-&gt;nexthdr == IPPROTO_ICMPV6)</span>
<span class="p_add">+		else if (ntohs(eth-&gt;h_proto) == ETH_P_IPV6 &amp;&amp;</span>
<span class="p_add">+			 pskb_may_pull(skb, sizeof(struct ipv6hdr) +</span>
<span class="p_add">+					    sizeof(struct nd_msg)) &amp;&amp;</span>
<span class="p_add">+			 ipv6_hdr(skb)-&gt;nexthdr == IPPROTO_ICMPV6) {</span>
<span class="p_add">+			struct nd_msg *m = (struct nd_msg *)(ipv6_hdr(skb) + 1);</span>
<span class="p_add">+</span>
<span class="p_add">+			if (m-&gt;icmph.icmp6_code == 0 &amp;&amp;</span>
<span class="p_add">+			    m-&gt;icmph.icmp6_type == NDISC_NEIGHBOUR_SOLICITATION)</span>
 				return neigh_reduce(dev, skb, vni);
 		}
 #endif
<span class="p_header">diff --git a/drivers/tty/serial/8250/8250_fintek.c b/drivers/tty/serial/8250/8250_fintek.c</span>
<span class="p_header">index e500f7dd2470..4bd376c08b59 100644</span>
<span class="p_header">--- a/drivers/tty/serial/8250/8250_fintek.c</span>
<span class="p_header">+++ b/drivers/tty/serial/8250/8250_fintek.c</span>
<span class="p_chunk">@@ -118,6 +118,9 @@</span> <span class="p_context"> static int fintek_8250_enter_key(u16 base_port, u8 key)</span>
 	if (!request_muxed_region(base_port, 2, &quot;8250_fintek&quot;))
 		return -EBUSY;
 
<span class="p_add">+	/* Force to deactive all SuperIO in this base_port */</span>
<span class="p_add">+	outb(EXIT_KEY, base_port + ADDR_PORT);</span>
<span class="p_add">+</span>
 	outb(key, base_port + ADDR_PORT);
 	outb(key, base_port + ADDR_PORT);
 	return 0;
<span class="p_header">diff --git a/drivers/tty/serial/omap-serial.c b/drivers/tty/serial/omap-serial.c</span>
<span class="p_header">index 7754053deeda..26a22b100df1 100644</span>
<span class="p_header">--- a/drivers/tty/serial/omap-serial.c</span>
<span class="p_header">+++ b/drivers/tty/serial/omap-serial.c</span>
<span class="p_chunk">@@ -693,7 +693,7 @@</span> <span class="p_context"> static void serial_omap_set_mctrl(struct uart_port *port, unsigned int mctrl)</span>
 	if ((mctrl &amp; TIOCM_RTS) &amp;&amp; (port-&gt;status &amp; UPSTAT_AUTORTS))
 		up-&gt;efr |= UART_EFR_RTS;
 	else
<span class="p_del">-		up-&gt;efr &amp;= UART_EFR_RTS;</span>
<span class="p_add">+		up-&gt;efr &amp;= ~UART_EFR_RTS;</span>
 	serial_out(up, UART_EFR, up-&gt;efr);
 	serial_out(up, UART_LCR, lcr);
 
<span class="p_header">diff --git a/fs/coda/upcall.c b/fs/coda/upcall.c</span>
<span class="p_header">index a37f003530d7..1175a1722411 100644</span>
<span class="p_header">--- a/fs/coda/upcall.c</span>
<span class="p_header">+++ b/fs/coda/upcall.c</span>
<span class="p_chunk">@@ -447,8 +447,7 @@</span> <span class="p_context"> int venus_fsync(struct super_block *sb, struct CodaFid *fid)</span>
 	UPARG(CODA_FSYNC);
 
 	inp-&gt;coda_fsync.VFid = *fid;
<span class="p_del">-	error = coda_upcall(coda_vcp(sb), sizeof(union inputArgs),</span>
<span class="p_del">-			    &amp;outsize, inp);</span>
<span class="p_add">+	error = coda_upcall(coda_vcp(sb), insize, &amp;outsize, inp);</span>
 
 	CODA_FREE(inp, insize);
 	return error;
<span class="p_header">diff --git a/fs/ocfs2/dlm/dlmrecovery.c b/fs/ocfs2/dlm/dlmrecovery.c</span>
<span class="p_header">index 74407c6dd592..ec8f75813beb 100644</span>
<span class="p_header">--- a/fs/ocfs2/dlm/dlmrecovery.c</span>
<span class="p_header">+++ b/fs/ocfs2/dlm/dlmrecovery.c</span>
<span class="p_chunk">@@ -2419,6 +2419,7 @@</span> <span class="p_context"> static void dlm_do_local_recovery_cleanup(struct dlm_ctxt *dlm, u8 dead_node)</span>
 					dlm_lockres_put(res);
 					continue;
 				}
<span class="p_add">+				dlm_move_lockres_to_recovery_list(dlm, res);</span>
 			} else if (res-&gt;owner == dlm-&gt;node_num) {
 				dlm_free_dead_locks(dlm, res, dead_node);
 				__dlm_lockres_calc_usage(dlm, res);
<span class="p_header">diff --git a/fs/ocfs2/file.c b/fs/ocfs2/file.c</span>
<span class="p_header">index 6e41fc8fabbe..dc455d45a66a 100644</span>
<span class="p_header">--- a/fs/ocfs2/file.c</span>
<span class="p_header">+++ b/fs/ocfs2/file.c</span>
<span class="p_chunk">@@ -1161,6 +1161,13 @@</span> <span class="p_context"> int ocfs2_setattr(struct dentry *dentry, struct iattr *attr)</span>
 	}
 	size_change = S_ISREG(inode-&gt;i_mode) &amp;&amp; attr-&gt;ia_valid &amp; ATTR_SIZE;
 	if (size_change) {
<span class="p_add">+		/*</span>
<span class="p_add">+		 * Here we should wait dio to finish before inode lock</span>
<span class="p_add">+		 * to avoid a deadlock between ocfs2_setattr() and</span>
<span class="p_add">+		 * ocfs2_dio_end_io_write()</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		inode_dio_wait(inode);</span>
<span class="p_add">+</span>
 		status = ocfs2_rw_lock(inode, 1);
 		if (status &lt; 0) {
 			mlog_errno(status);
<span class="p_chunk">@@ -1200,8 +1207,6 @@</span> <span class="p_context"> int ocfs2_setattr(struct dentry *dentry, struct iattr *attr)</span>
 		if (status)
 			goto bail_unlock;
 
<span class="p_del">-		inode_dio_wait(inode);</span>
<span class="p_del">-</span>
 		if (i_size_read(inode) &gt;= attr-&gt;ia_size) {
 			if (ocfs2_should_order_data(inode)) {
 				status = ocfs2_begin_ordered_truncate(inode,
<span class="p_header">diff --git a/include/linux/mmzone.h b/include/linux/mmzone.h</span>
<span class="p_header">index c9c4a81b9767..18b06983131a 100644</span>
<span class="p_header">--- a/include/linux/mmzone.h</span>
<span class="p_header">+++ b/include/linux/mmzone.h</span>
<span class="p_chunk">@@ -700,7 +700,8 @@</span> <span class="p_context"> typedef struct pglist_data {</span>
 	 * is the first PFN that needs to be initialised.
 	 */
 	unsigned long first_deferred_pfn;
<span class="p_del">-	unsigned long static_init_size;</span>
<span class="p_add">+	/* Number of non-deferred pages */</span>
<span class="p_add">+	unsigned long static_init_pgcnt;</span>
 #endif /* CONFIG_DEFERRED_STRUCT_PAGE_INIT */
 
 #ifdef CONFIG_TRANSPARENT_HUGEPAGE
<span class="p_header">diff --git a/kernel/rcu/tree_plugin.h b/kernel/rcu/tree_plugin.h</span>
<span class="p_header">index e012b9be777e..fed95fa941e6 100644</span>
<span class="p_header">--- a/kernel/rcu/tree_plugin.h</span>
<span class="p_header">+++ b/kernel/rcu/tree_plugin.h</span>
<span class="p_chunk">@@ -1507,7 +1507,7 @@</span> <span class="p_context"> static void rcu_prepare_for_idle(void)</span>
 	rdtp-&gt;last_accelerate = jiffies;
 	for_each_rcu_flavor(rsp) {
 		rdp = this_cpu_ptr(rsp-&gt;rda);
<span class="p_del">-		if (rcu_segcblist_pend_cbs(&amp;rdp-&gt;cblist))</span>
<span class="p_add">+		if (!rcu_segcblist_pend_cbs(&amp;rdp-&gt;cblist))</span>
 			continue;
 		rnp = rdp-&gt;mynode;
 		raw_spin_lock_rcu_node(rnp); /* irqs already disabled. */
<span class="p_header">diff --git a/mm/page_alloc.c b/mm/page_alloc.c</span>
<span class="p_header">index 77e4d3c5c57b..82a6270c9743 100644</span>
<span class="p_header">--- a/mm/page_alloc.c</span>
<span class="p_header">+++ b/mm/page_alloc.c</span>
<span class="p_chunk">@@ -290,28 +290,37 @@</span> <span class="p_context"> EXPORT_SYMBOL(nr_online_nodes);</span>
 int page_group_by_mobility_disabled __read_mostly;
 
 #ifdef CONFIG_DEFERRED_STRUCT_PAGE_INIT
<span class="p_add">+</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Determine how many pages need to be initialized durig early boot</span>
<span class="p_add">+ * (non-deferred initialization).</span>
<span class="p_add">+ * The value of first_deferred_pfn will be set later, once non-deferred pages</span>
<span class="p_add">+ * are initialized, but for now set it ULONG_MAX.</span>
<span class="p_add">+ */</span>
 static inline void reset_deferred_meminit(pg_data_t *pgdat)
 {
<span class="p_del">-	unsigned long max_initialise;</span>
<span class="p_del">-	unsigned long reserved_lowmem;</span>
<span class="p_add">+	phys_addr_t start_addr, end_addr;</span>
<span class="p_add">+	unsigned long max_pgcnt;</span>
<span class="p_add">+	unsigned long reserved;</span>
 
 	/*
 	 * Initialise at least 2G of a node but also take into account that
 	 * two large system hashes that can take up 1GB for 0.25TB/node.
 	 */
<span class="p_del">-	max_initialise = max(2UL &lt;&lt; (30 - PAGE_SHIFT),</span>
<span class="p_del">-		(pgdat-&gt;node_spanned_pages &gt;&gt; 8));</span>
<span class="p_add">+	max_pgcnt = max(2UL &lt;&lt; (30 - PAGE_SHIFT),</span>
<span class="p_add">+			(pgdat-&gt;node_spanned_pages &gt;&gt; 8));</span>
 
 	/*
 	 * Compensate the all the memblock reservations (e.g. crash kernel)
 	 * from the initial estimation to make sure we will initialize enough
 	 * memory to boot.
 	 */
<span class="p_del">-	reserved_lowmem = memblock_reserved_memory_within(pgdat-&gt;node_start_pfn,</span>
<span class="p_del">-			pgdat-&gt;node_start_pfn + max_initialise);</span>
<span class="p_del">-	max_initialise += reserved_lowmem;</span>
<span class="p_add">+	start_addr = PFN_PHYS(pgdat-&gt;node_start_pfn);</span>
<span class="p_add">+	end_addr = PFN_PHYS(pgdat-&gt;node_start_pfn + max_pgcnt);</span>
<span class="p_add">+	reserved = memblock_reserved_memory_within(start_addr, end_addr);</span>
<span class="p_add">+	max_pgcnt += PHYS_PFN(reserved);</span>
 
<span class="p_del">-	pgdat-&gt;static_init_size = min(max_initialise, pgdat-&gt;node_spanned_pages);</span>
<span class="p_add">+	pgdat-&gt;static_init_pgcnt = min(max_pgcnt, pgdat-&gt;node_spanned_pages);</span>
 	pgdat-&gt;first_deferred_pfn = ULONG_MAX;
 }
 
<span class="p_chunk">@@ -338,7 +347,7 @@</span> <span class="p_context"> static inline bool update_defer_init(pg_data_t *pgdat,</span>
 	if (zone_end &lt; pgdat_end_pfn(pgdat))
 		return true;
 	(*nr_initialised)++;
<span class="p_del">-	if ((*nr_initialised &gt; pgdat-&gt;static_init_size) &amp;&amp;</span>
<span class="p_add">+	if ((*nr_initialised &gt; pgdat-&gt;static_init_pgcnt) &amp;&amp;</span>
 	    (pfn &amp; (PAGES_PER_SECTION - 1)) == 0) {
 		pgdat-&gt;first_deferred_pfn = pfn;
 		return false;
<span class="p_header">diff --git a/mm/page_ext.c b/mm/page_ext.c</span>
<span class="p_header">index 4f0367d472c4..2c16216c29b6 100644</span>
<span class="p_header">--- a/mm/page_ext.c</span>
<span class="p_header">+++ b/mm/page_ext.c</span>
<span class="p_chunk">@@ -125,7 +125,6 @@</span> <span class="p_context"> struct page_ext *lookup_page_ext(struct page *page)</span>
 	struct page_ext *base;
 
 	base = NODE_DATA(page_to_nid(page))-&gt;node_page_ext;
<span class="p_del">-#if defined(CONFIG_DEBUG_VM)</span>
 	/*
 	 * The sanity checks the page allocator does upon freeing a
 	 * page can reach here before the page_ext arrays are
<span class="p_chunk">@@ -134,7 +133,6 @@</span> <span class="p_context"> struct page_ext *lookup_page_ext(struct page *page)</span>
 	 */
 	if (unlikely(!base))
 		return NULL;
<span class="p_del">-#endif</span>
 	index = pfn - round_down(node_start_pfn(page_to_nid(page)),
 					MAX_ORDER_NR_PAGES);
 	return get_entry(base, index);
<span class="p_chunk">@@ -199,7 +197,6 @@</span> <span class="p_context"> struct page_ext *lookup_page_ext(struct page *page)</span>
 {
 	unsigned long pfn = page_to_pfn(page);
 	struct mem_section *section = __pfn_to_section(pfn);
<span class="p_del">-#if defined(CONFIG_DEBUG_VM)</span>
 	/*
 	 * The sanity checks the page allocator does upon freeing a
 	 * page can reach here before the page_ext arrays are
<span class="p_chunk">@@ -208,7 +205,6 @@</span> <span class="p_context"> struct page_ext *lookup_page_ext(struct page *page)</span>
 	 */
 	if (!section-&gt;page_ext)
 		return NULL;
<span class="p_del">-#endif</span>
 	return get_entry(section-&gt;page_ext, pfn);
 }
 
<span class="p_header">diff --git a/mm/pagewalk.c b/mm/pagewalk.c</span>
<span class="p_header">index 8bd4afa83cb8..23a3e415ac2c 100644</span>
<span class="p_header">--- a/mm/pagewalk.c</span>
<span class="p_header">+++ b/mm/pagewalk.c</span>
<span class="p_chunk">@@ -188,8 +188,12 @@</span> <span class="p_context"> static int walk_hugetlb_range(unsigned long addr, unsigned long end,</span>
 	do {
 		next = hugetlb_entry_end(h, addr, end);
 		pte = huge_pte_offset(walk-&gt;mm, addr &amp; hmask, sz);
<span class="p_del">-		if (pte &amp;&amp; walk-&gt;hugetlb_entry)</span>
<span class="p_add">+</span>
<span class="p_add">+		if (pte)</span>
 			err = walk-&gt;hugetlb_entry(pte, hmask, addr, next, walk);
<span class="p_add">+		else if (walk-&gt;pte_hole)</span>
<span class="p_add">+			err = walk-&gt;pte_hole(addr, next, walk);</span>
<span class="p_add">+</span>
 		if (err)
 			break;
 	} while (addr = next, addr != end);
<span class="p_header">diff --git a/net/netlink/af_netlink.c b/net/netlink/af_netlink.c</span>
<span class="p_header">index b93148e8e9fb..15c99dfa3d72 100644</span>
<span class="p_header">--- a/net/netlink/af_netlink.c</span>
<span class="p_header">+++ b/net/netlink/af_netlink.c</span>
<span class="p_chunk">@@ -2136,7 +2136,7 @@</span> <span class="p_context"> static int netlink_dump(struct sock *sk)</span>
 	struct sk_buff *skb = NULL;
 	struct nlmsghdr *nlh;
 	struct module *module;
<span class="p_del">-	int len, err = -ENOBUFS;</span>
<span class="p_add">+	int err = -ENOBUFS;</span>
 	int alloc_min_size;
 	int alloc_size;
 
<span class="p_chunk">@@ -2183,9 +2183,11 @@</span> <span class="p_context"> static int netlink_dump(struct sock *sk)</span>
 	skb_reserve(skb, skb_tailroom(skb) - alloc_size);
 	netlink_skb_set_owner_r(skb, sk);
 
<span class="p_del">-	len = cb-&gt;dump(skb, cb);</span>
<span class="p_add">+	if (nlk-&gt;dump_done_errno &gt; 0)</span>
<span class="p_add">+		nlk-&gt;dump_done_errno = cb-&gt;dump(skb, cb);</span>
 
<span class="p_del">-	if (len &gt; 0) {</span>
<span class="p_add">+	if (nlk-&gt;dump_done_errno &gt; 0 ||</span>
<span class="p_add">+	    skb_tailroom(skb) &lt; nlmsg_total_size(sizeof(nlk-&gt;dump_done_errno))) {</span>
 		mutex_unlock(nlk-&gt;cb_mutex);
 
 		if (sk_filter(sk, skb))
<span class="p_chunk">@@ -2195,13 +2197,15 @@</span> <span class="p_context"> static int netlink_dump(struct sock *sk)</span>
 		return 0;
 	}
 
<span class="p_del">-	nlh = nlmsg_put_answer(skb, cb, NLMSG_DONE, sizeof(len), NLM_F_MULTI);</span>
<span class="p_del">-	if (!nlh)</span>
<span class="p_add">+	nlh = nlmsg_put_answer(skb, cb, NLMSG_DONE,</span>
<span class="p_add">+			       sizeof(nlk-&gt;dump_done_errno), NLM_F_MULTI);</span>
<span class="p_add">+	if (WARN_ON(!nlh))</span>
 		goto errout_skb;
 
 	nl_dump_check_consistent(cb, nlh);
 
<span class="p_del">-	memcpy(nlmsg_data(nlh), &amp;len, sizeof(len));</span>
<span class="p_add">+	memcpy(nlmsg_data(nlh), &amp;nlk-&gt;dump_done_errno,</span>
<span class="p_add">+	       sizeof(nlk-&gt;dump_done_errno));</span>
 
 	if (sk_filter(sk, skb))
 		kfree_skb(skb);
<span class="p_chunk">@@ -2273,6 +2277,7 @@</span> <span class="p_context"> int __netlink_dump_start(struct sock *ssk, struct sk_buff *skb,</span>
 	}
 
 	nlk-&gt;cb_running = true;
<span class="p_add">+	nlk-&gt;dump_done_errno = INT_MAX;</span>
 
 	mutex_unlock(nlk-&gt;cb_mutex);
 
<span class="p_header">diff --git a/net/netlink/af_netlink.h b/net/netlink/af_netlink.h</span>
<span class="p_header">index 028188597eaa..962de7b3c023 100644</span>
<span class="p_header">--- a/net/netlink/af_netlink.h</span>
<span class="p_header">+++ b/net/netlink/af_netlink.h</span>
<span class="p_chunk">@@ -34,6 +34,7 @@</span> <span class="p_context"> struct netlink_sock {</span>
 	wait_queue_head_t	wait;
 	bool			bound;
 	bool			cb_running;
<span class="p_add">+	int			dump_done_errno;</span>
 	struct netlink_callback	cb;
 	struct mutex		*cb_mutex;
 	struct mutex		cb_def_mutex;
<span class="p_header">diff --git a/net/sctp/ipv6.c b/net/sctp/ipv6.c</span>
<span class="p_header">index a6dfa86c0201..3b18085e3b10 100644</span>
<span class="p_header">--- a/net/sctp/ipv6.c</span>
<span class="p_header">+++ b/net/sctp/ipv6.c</span>
<span class="p_chunk">@@ -807,9 +807,10 @@</span> <span class="p_context"> static void sctp_inet6_skb_msgname(struct sk_buff *skb, char *msgname,</span>
 		addr-&gt;v6.sin6_flowinfo = 0;
 		addr-&gt;v6.sin6_port = sh-&gt;source;
 		addr-&gt;v6.sin6_addr = ipv6_hdr(skb)-&gt;saddr;
<span class="p_del">-		if (ipv6_addr_type(&amp;addr-&gt;v6.sin6_addr) &amp; IPV6_ADDR_LINKLOCAL) {</span>
<span class="p_add">+		if (ipv6_addr_type(&amp;addr-&gt;v6.sin6_addr) &amp; IPV6_ADDR_LINKLOCAL)</span>
 			addr-&gt;v6.sin6_scope_id = sctp_v6_skb_iif(skb);
<span class="p_del">-		}</span>
<span class="p_add">+		else</span>
<span class="p_add">+			addr-&gt;v6.sin6_scope_id = 0;</span>
 	}
 
 	*addr_len = sctp_v6_addr_to_user(sctp_sk(skb-&gt;sk), addr);
<span class="p_header">diff --git a/security/integrity/ima/ima_appraise.c b/security/integrity/ima/ima_appraise.c</span>
<span class="p_header">index 809ba70fbbbf..7d769b948de8 100644</span>
<span class="p_header">--- a/security/integrity/ima/ima_appraise.c</span>
<span class="p_header">+++ b/security/integrity/ima/ima_appraise.c</span>
<span class="p_chunk">@@ -320,6 +320,9 @@</span> <span class="p_context"> void ima_update_xattr(struct integrity_iint_cache *iint, struct file *file)</span>
 	if (iint-&gt;flags &amp; IMA_DIGSIG)
 		return;
 
<span class="p_add">+	if (iint-&gt;ima_file_status != INTEGRITY_PASS)</span>
<span class="p_add">+		return;</span>
<span class="p_add">+</span>
 	rc = ima_collect_measurement(iint, file, NULL, 0, ima_hash_algo);
 	if (rc &lt; 0)
 		return;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



