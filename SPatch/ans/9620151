
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.10,70/75] x86/tlb: Fix tlb flushing when lguest clears PGE - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.10,70/75] x86/tlb: Fix tlb flushing when lguest clears PGE</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 13, 2017, 8:44 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170313083415.272521570@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9620151/mbox/"
   >mbox</a>
|
   <a href="/patch/9620151/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9620151/">/patch/9620151/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	B444B60244 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 13 Mar 2017 08:54:17 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id A82FC283E2
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 13 Mar 2017 08:54:17 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 9C4F228403; Mon, 13 Mar 2017 08:54:17 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5831A283E2
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 13 Mar 2017 08:54:16 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752980AbdCMIyO (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 13 Mar 2017 04:54:14 -0400
Received: from mail.linuxfoundation.org ([140.211.169.12]:40864 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752422AbdCMIrO (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 13 Mar 2017 04:47:14 -0400
Received: from localhost (unknown [104.132.150.97])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id 76939B68;
	Mon, 13 Mar 2017 08:47:07 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, Fengguang Wu &lt;fengguang.wu@intel.com&gt;,
	Daniel Borkmann &lt;daniel@iogearbox.net&gt;, bp@suse.de,
	Kees Cook &lt;keescook@chromium.org&gt;,
	&quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;, netdev@vger.kernel.org,
	Rusty Russell &lt;rusty@rustcorp.com.au&gt;,
	Alexei Starovoitov &lt;ast@kernel.org&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;, lkp@01.org,
	Laura Abbott &lt;labbott@redhat.com&gt;, Thomas Gleixner &lt;tglx@linutronix.de&gt;
Subject: [PATCH 4.10 70/75] x86/tlb: Fix tlb flushing when lguest clears PGE
Date: Mon, 13 Mar 2017 16:44:19 +0800
Message-Id: &lt;20170313083415.272521570@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.12.0
In-Reply-To: &lt;20170313083411.408297387@linuxfoundation.org&gt;
References: &lt;20170313083411.408297387@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - March 13, 2017, 8:44 a.m.</div>
<pre class="content">
4.10-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: Daniel Borkmann &lt;daniel@iogearbox.net&gt;</span>

commit 2c4ea6e28dbf15ab93632c5c189f3948366b8885 upstream.

Fengguang reported random corruptions from various locations on x86-32
after commits d2852a224050 (&quot;arch: add ARCH_HAS_SET_MEMORY config&quot;) and
9d876e79df6a (&quot;bpf: fix unlocking of jited image when module ronx not set&quot;)
that uses the former. While x86-32 doesn&#39;t have a JIT like x86_64, the
bpf_prog_lock_ro() and bpf_prog_unlock_ro() got enabled due to
ARCH_HAS_SET_MEMORY, whereas Fengguang&#39;s test kernel doesn&#39;t have module
support built in and therefore never had the DEBUG_SET_MODULE_RONX setting
enabled.

After investigating the crashes further, it turned out that using
set_memory_ro() and set_memory_rw() didn&#39;t have the desired effect, for
example, setting the pages as read-only on x86-32 would still let
probe_kernel_write() succeed without error. This behavior would manifest
itself in situations where the vmalloc&#39;ed buffer was accessed prior to
set_memory_*() such as in case of bpf_prog_alloc(). In cases where it
wasn&#39;t, the page attribute changes seemed to have taken effect, leading to
the conclusion that a TLB invalidate didn&#39;t happen. Moreover, it turned out
that this issue reproduced with qemu in &quot;-cpu kvm64&quot; mode, but not for
&quot;-cpu host&quot;. When the issue occurs, change_page_attr_set_clr() did trigger
a TLB flush as expected via __flush_tlb_all() through cpa_flush_range(),
though.

There are 3 variants for issuing a TLB flush: invpcid_flush_all() (depends
on CPU feature bits X86_FEATURE_INVPCID, X86_FEATURE_PGE), cr4 based flush
(depends on X86_FEATURE_PGE), and cr3 based flush.  For &quot;-cpu host&quot; case in
my setup, the flush used invpcid_flush_all() variant, whereas for &quot;-cpu
kvm64&quot;, the flush was cr4 based. Switching the kvm64 case to cr3 manually
worked fine, and further investigating the cr4 one turned out that
X86_CR4_PGE bit was not set in cr4 register, meaning the
__native_flush_tlb_global_irq_disabled() wrote cr4 twice with the same
value instead of clearing X86_CR4_PGE in the first write to trigger the
flush.

It turned out that X86_CR4_PGE was cleared from cr4 during init from
lguest_arch_host_init() via adjust_pge(). The X86_FEATURE_PGE bit is also
cleared from there due to concerns of using PGE in guest kernel that can
lead to hard to trace bugs (see bff672e630a0 (&quot;lguest: documentation V:
Host&quot;) in init()). The CPU feature bits are cleared in dynamic
boot_cpu_data, but they never propagated to __flush_tlb_all() as it uses
static_cpu_has() instead of boot_cpu_has() for testing which variant of TLB
flushing to use, meaning they still used the old setting of the host
kernel.

Clearing via setup_clear_cpu_cap(X86_FEATURE_PGE) so this would propagate
to static_cpu_has() checks is too late at this point as sections have been
patched already, so for now, it seems reasonable to switch back to
boot_cpu_has(X86_FEATURE_PGE) as it was prior to commit c109bf95992b
(&quot;x86/cpufeature: Remove cpu_has_pge&quot;). This lets the TLB flush trigger via
cr3 as originally intended, properly makes the new page attributes visible
and thus fixes the crashes seen by Fengguang.

Fixes: c109bf95992b (&quot;x86/cpufeature: Remove cpu_has_pge&quot;)
Reported-by: Fengguang Wu &lt;fengguang.wu@intel.com&gt;
<span class="signed-off-by">Signed-off-by: Daniel Borkmann &lt;daniel@iogearbox.net&gt;</span>
Cc: bp@suse.de
Cc: Kees Cook &lt;keescook@chromium.org&gt;
Cc: &quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;
Cc: netdev@vger.kernel.org
Cc: Rusty Russell &lt;rusty@rustcorp.com.au&gt;
Cc: Alexei Starovoitov &lt;ast@kernel.org&gt;
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: lkp@01.org
Cc: Laura Abbott &lt;labbott@redhat.com&gt;
Link: http://lkml.kernrl.org/r/20170301125426.l4nf65rx4wahohyl@wfg-t540p.sh.intel.com
Link: http://lkml.kernel.org/r/25c41ad9eca164be4db9ad84f768965b7eb19d9e.1489191673.git.daniel@iogearbox.net
<span class="signed-off-by">Signed-off-by: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>

---
 arch/x86/include/asm/tlbflush.h |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_chunk">@@ -188,7 +188,7 @@</span> <span class="p_context"> static inline void __native_flush_tlb_si</span>
 
 static inline void __flush_tlb_all(void)
 {
<span class="p_del">-	if (static_cpu_has(X86_FEATURE_PGE))</span>
<span class="p_add">+	if (boot_cpu_has(X86_FEATURE_PGE))</span>
 		__flush_tlb_global();
 	else
 		__flush_tlb();

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



