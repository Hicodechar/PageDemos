
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code explicitly non-modular vs CONFIG_TIMER_STATS) - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code explicitly non-modular vs CONFIG_TIMER_STATS)</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=447">Christian Borntraeger</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 28, 2016, 9:16 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;56A9DC76.2030502@de.ibm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8148061/mbox/"
   >mbox</a>
|
   <a href="/patch/8148061/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8148061/">/patch/8148061/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 843979F818
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 28 Jan 2016 09:18:20 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id BE83420265
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 28 Jan 2016 09:18:19 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 41777202DD
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 28 Jan 2016 09:18:18 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S933852AbcA1JSN (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 28 Jan 2016 04:18:13 -0500
Received: from e06smtp12.uk.ibm.com ([195.75.94.108]:59406 &quot;EHLO
	e06smtp12.uk.ibm.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1755030AbcA1JQp (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 28 Jan 2016 04:16:45 -0500
Received: from localhost
	by e06smtp12.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use
	Only! Violators will be prosecuted
	for &lt;linux-kernel@vger.kernel.org&gt; from &lt;borntraeger@de.ibm.com&gt;;
	Thu, 28 Jan 2016 09:16:43 -0000
Received: from d06dlp02.portsmouth.uk.ibm.com (9.149.20.14)
	by e06smtp12.uk.ibm.com (192.168.101.142) with IBM ESMTP SMTP
	Gateway: Authorized Use Only! Violators will be prosecuted; 
	Thu, 28 Jan 2016 09:16:41 -0000
X-IBM-Helo: d06dlp02.portsmouth.uk.ibm.com
X-IBM-MailFrom: borntraeger@de.ibm.com
X-IBM-RcptTo: linux-kernel@vger.kernel.org
Received: from b06cxnps4075.portsmouth.uk.ibm.com
	(d06relay12.portsmouth.uk.ibm.com [9.149.109.197])
	by d06dlp02.portsmouth.uk.ibm.com (Postfix) with ESMTP id
	41A542190068 for &lt;linux-kernel@vger.kernel.org&gt;;
	Thu, 28 Jan 2016 09:16:28 +0000 (GMT)
Received: from d06av06.portsmouth.uk.ibm.com (d06av06.portsmouth.uk.ibm.com
	[9.149.37.217])
	by b06cxnps4075.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with
	ESMTP id u0S9Gern8847846
	for &lt;linux-kernel@vger.kernel.org&gt;; Thu, 28 Jan 2016 09:16:40 GMT
Received: from d06av06.portsmouth.uk.ibm.com (localhost [127.0.0.1])
	by d06av06.portsmouth.uk.ibm.com (8.14.4/8.14.4/NCO v10.0 AVout) with
	ESMTP id u0S9GdWE017099
	for &lt;linux-kernel@vger.kernel.org&gt;; Thu, 28 Jan 2016 04:16:40 -0500
Received: from oc1450873852.ibm.com (dyn-9-152-224-73.boeblingen.de.ibm.com
	[9.152.224.73])
	by d06av06.portsmouth.uk.ibm.com (8.14.4/8.14.4/NCO v10.0 AVin) with
	ESMTP id u0S9GdRC017077; Thu, 28 Jan 2016 04:16:39 -0500
To: Paul Gortmaker &lt;paul.gortmaker@windriver.com&gt;
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Nadia Yvette Chambers &lt;nyc@holomorphy.com&gt;,
	Alexander Viro &lt;viro@zeniv.linux.org.uk&gt;,
	Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;,
	Mike Kravetz &lt;mike.kravetz@oracle.com&gt;,
	David Rientjes &lt;rientjes@google.com&gt;,
	Hillf Danton &lt;hillf.zj@alibaba-inc.com&gt;,
	Davidlohr Bueso &lt;dave@stgolabs.net&gt;,
	Linux Kernel Mailing List &lt;linux-kernel@vger.kernel.org&gt;
From: Christian Borntraeger &lt;borntraeger@de.ibm.com&gt;
Subject: Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code explicitly
	non-modular vs CONFIG_TIMER_STATS)
Message-ID: &lt;56A9DC76.2030502@de.ibm.com&gt;
Date: Thu, 28 Jan 2016 10:16:38 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101
	Thunderbird/38.5.0
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit
X-TM-AS-MML: disable
X-Content-Scanned: Fidelis XPS MAILER
x-cbid: 16012809-0009-0000-0000-0000076EF323
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=447">Christian Borntraeger</a> - Jan. 28, 2016, 9:16 a.m.</div>
<pre class="content">
Paul,

the commit 3e89e1c5ea842 (&quot;hugetlb: make mm and fs code explicitly non-modular&quot;) 
triggers belows warning/oops, if CONFIG_TIMER_STATS is set.

Looking at the patch the only &quot;real&quot; change is the init_call,
and indeed

makes the problem go away. 
Not sure yet, what CONFIG_TIMER_STATS changes in terms of kobject, though.




[    0.998607] kobject: &#39;(null)&#39; (0000000000000010): is not initialized, yet kobject_get() is being called.
[    0.998620] ------------[ cut here ]------------
[    0.998621] WARNING: at lib/kobject.c:597
[    0.998622] Modules linked in:
[    0.998625] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.5.0-rc1 #174
[    0.998626] task: 0000000232720000 ti: 000000023270c000 task.ti: 000000023270c000
[    0.998628] Krnl PSW : 0704c00180000000 000000000058276c (kobject_get+0x6c/0x90)
[    0.998632]            R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:0 PM:0 EA:3
Krnl GPRS: 000000000000006c 0000000232720000 000000000000005c 0000000000000001
[    0.998635]            0000000000287e04 0000000000000000 0000000000dd99a8 0000000000000000
[    0.998636]            0000000000d86008 0000000000000000 0000000000000000 0000000000000000
[    0.998637]            0000000000000010 0000000000000010 0000000000582768 000000023270fbb0
[    0.998643] Krnl Code: 000000000058275c: c02000267259	larl	%%r2,a50c0e
           0000000000582762: c0e5ffe82b17	brasl	%%r14,287d90
          #0000000000582768: a7f40001		brc	15,58276a
<span class="quote">          &gt;000000000058276c: a7f4ffe2		brc	15,582730</span>
           0000000000582770: c010003d24f3	larl	%%r1,d27156
           0000000000582776: 95001000		cli	0(%%r1),0
           000000000058277a: a774ffe6		brc	7,582746
           000000000058277e: a7f40001		brc	15,582780
[    0.998653] Call Trace:
[    0.998655] ([&lt;0000000000582768&gt;] kobject_get+0x68/0x90)
[    0.998657]  [&lt;000000000058318e&gt;] kobject_add_internal+0x46/0x2e8
[    0.998658]  [&lt;0000000000583684&gt;] kobject_add+0x7c/0xd0
[    0.998660]  [&lt;0000000000583722&gt;] kobject_create_and_add+0x4a/0x98
[    0.998662]  [&lt;00000000002e8ee0&gt;] hugetlb_register_node+0x68/0x130
[    0.998663]  [&lt;0000000000d59ef0&gt;] hugetlb_init+0x4f0/0x600
[    0.998665]  [&lt;00000000001001da&gt;] do_one_initcall+0xa2/0x1b8
[    0.998666]  [&lt;0000000000d3ae52&gt;] kernel_init_freeable+0x232/0x2e0
[    0.998668]  [&lt;00000000008312d2&gt;] kernel_init+0x2a/0x120
[    0.998670]  [&lt;000000000083d332&gt;] kernel_thread_starter+0x6/0xc
[    0.998671]  [&lt;000000000083d32c&gt;] kernel_thread_starter+0x0/0xc
[    0.998673] no locks held by swapper/0/1.
[    0.998673] Last Breaking-Event-Address:
[    0.998675]  [&lt;0000000000582768&gt;] kobject_get+0x68/0x90
[    0.998678] ---[ end trace cae7490da7950580 ]---
[    0.998679] Unable to handle kernel pointer dereference in virtual kernel address space
[    0.998681] failing address: 0000000000000000 TEID: 0000000000000483
[    0.998681] Fault in home space mode while using kernel ASCE.
[    0.998684] AS:0000000000fb1007 R3:000000023ffcf007 S:000000023fff8000 P:000000000000003d 
[    0.998719] Oops: 0004 ilc:3 [#1] SMP DEBUG_PAGEALLOC
[    0.998721] Modules linked in:
[    0.998723] CPU: 0 PID: 1 Comm: swapper/0 Tainted: G        W       4.5.0-rc1 #174
[    0.998725] task: 0000000232720000 ti: 000000023270c000 task.ti: 000000023270c000
[    0.998726] Krnl PSW : 0704c00180000000 0000000000582734 (kobject_get+0x34/0x90)
[    0.998729]            R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:0 PM:0 EA:3
Krnl GPRS: 000000000000006c 0000000200000001 000000000000005c 0000000000000001
[    0.998731]            0000000000287e04 0000000000000000 0000000000dd99a8 0000000000000000
[    0.998733]            0000000000d86008 0000000000000000 0000000000000000 0000000000000000
[    0.998734]            0000000000000010 0000000000000010 0000000000582768 000000023270fbb0
[    0.998739] Krnl Code: 0000000000582728: 9180203c		tm	60(%%r2),128
           000000000058272c: a7840013		brc	8,582752
          #0000000000582730: a7180001		lhi	%%r1,1
<span class="quote">          &gt;0000000000582734: eb11d03800f8	laa	%%r1,%%r1,56(%%r13)</span>
           000000000058273a: 07e0		bcr	14,%%r0
           000000000058273c: a71a0001		ahi	%%r1,1
           0000000000582740: ec1c0018017e	cij	%%r1,1,12,582770
           0000000000582746: b904002d		lgr	%%r2,%%r13
[    0.998839] Call Trace:
[    0.998841] ([&lt;0000000000582768&gt;] kobject_get+0x68/0x90)
[    0.998843]  [&lt;000000000058318e&gt;] kobject_add_internal+0x46/0x2e8
[    0.998844]  [&lt;0000000000583684&gt;] kobject_add+0x7c/0xd0
[    0.998846]  [&lt;0000000000583722&gt;] kobject_create_and_add+0x4a/0x98
[    0.998847]  [&lt;00000000002e8ee0&gt;] hugetlb_register_node+0x68/0x130
[    0.998849]  [&lt;0000000000d59ef0&gt;] hugetlb_init+0x4f0/0x600
[    0.998850]  [&lt;00000000001001da&gt;] do_one_initcall+0xa2/0x1b8
[    0.998852]  [&lt;0000000000d3ae52&gt;] kernel_init_freeable+0x232/0x2e0
[    0.998853]  [&lt;00000000008312d2&gt;] kernel_init+0x2a/0x120
[    0.998855]  [&lt;000000000083d332&gt;] kernel_thread_starter+0x6/0xc
[    0.998856]  [&lt;000000000083d32c&gt;] kernel_thread_starter+0x0/0xc
[    0.998857] INFO: lockdep is turned off.
[    0.998858] Last Breaking-Event-Address:
[    0.998859]  [&lt;000000000058276c&gt;] kobject_get+0x6c/0x90
[    0.998861]  
[    0.998863] Kernel panic - not syncing: Fatal exception: panic_on_oops
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=113021">Hillf Danton</a> - Jan. 28, 2016, 9:40 a.m.</div>
<pre class="content">
<span class="quote">&gt; </span>
<span class="quote">&gt; Paul,</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; the commit 3e89e1c5ea842 (&quot;hugetlb: make mm and fs code explicitly non-modular&quot;)</span>
<span class="quote">&gt; triggers belows warning/oops, if CONFIG_TIMER_STATS is set.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Looking at the patch the only &quot;real&quot; change is the init_call,</span>
<span class="quote">&gt; and indeed</span>
<span class="quote">&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt; @@ -2653,7 +2653,7 @@ static int __init hugetlb_init(void)</span>
<span class="quote">&gt;                 mutex_init(&amp;hugetlb_fault_mutex_table[i]);</span>
<span class="quote">&gt;         return 0;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -subsys_initcall(hugetlb_init);</span>
<span class="quote">&gt; +device_initcall(hugetlb_init);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  /* Should be called on processing a hugepagesz=... option */</span>
<span class="quote">&gt;  void __init hugetlb_add_hstate(unsigned int order)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; makes the problem go away.</span>

Helps more if a patch is delivered.

thanks
Hillf
<span class="quote">
&gt; Not sure yet, what CONFIG_TIMER_STATS changes in terms of kobject, though.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; </span>
<span class="quote">&gt; </span>
<span class="quote">&gt; </span>
<span class="quote">&gt; [    0.998607] kobject: &#39;(null)&#39; (0000000000000010): is not initialized, yet kobject_get() is being called.</span>
<span class="quote">&gt; [    0.998620] ------------[ cut here ]------------</span>
<span class="quote">&gt; [    0.998621] WARNING: at lib/kobject.c:597</span>
<span class="quote">&gt; [    0.998622] Modules linked in:</span>
<span class="quote">&gt; [    0.998625] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.5.0-rc1 #174</span>
<span class="quote">&gt; [    0.998626] task: 0000000232720000 ti: 000000023270c000 task.ti: 000000023270c000</span>
<span class="quote">&gt; [    0.998628] Krnl PSW : 0704c00180000000 000000000058276c (kobject_get+0x6c/0x90)</span>
<span class="quote">&gt; [    0.998632]            R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:0 PM:0 EA:3</span>
<span class="quote">&gt; Krnl GPRS: 000000000000006c 0000000232720000 000000000000005c 0000000000000001</span>
<span class="quote">&gt; [    0.998635]            0000000000287e04 0000000000000000 0000000000dd99a8 0000000000000000</span>
<span class="quote">&gt; [    0.998636]            0000000000d86008 0000000000000000 0000000000000000 0000000000000000</span>
<span class="quote">&gt; [    0.998637]            0000000000000010 0000000000000010 0000000000582768 000000023270fbb0</span>
<span class="quote">&gt; [    0.998643] Krnl Code: 000000000058275c: c02000267259	larl	%%r2,a50c0e</span>
<span class="quote">&gt;            0000000000582762: c0e5ffe82b17	brasl	%%r14,287d90</span>
<span class="quote">&gt;           #0000000000582768: a7f40001		brc	15,58276a</span>
<span class="quote">&gt;           &gt;000000000058276c: a7f4ffe2		brc	15,582730</span>
<span class="quote">&gt;            0000000000582770: c010003d24f3	larl	%%r1,d27156</span>
<span class="quote">&gt;            0000000000582776: 95001000		cli	0(%%r1),0</span>
<span class="quote">&gt;            000000000058277a: a774ffe6		brc	7,582746</span>
<span class="quote">&gt;            000000000058277e: a7f40001		brc	15,582780</span>
<span class="quote">&gt; [    0.998653] Call Trace:</span>
<span class="quote">&gt; [    0.998655] ([&lt;0000000000582768&gt;] kobject_get+0x68/0x90)</span>
<span class="quote">&gt; [    0.998657]  [&lt;000000000058318e&gt;] kobject_add_internal+0x46/0x2e8</span>
<span class="quote">&gt; [    0.998658]  [&lt;0000000000583684&gt;] kobject_add+0x7c/0xd0</span>
<span class="quote">&gt; [    0.998660]  [&lt;0000000000583722&gt;] kobject_create_and_add+0x4a/0x98</span>
<span class="quote">&gt; [    0.998662]  [&lt;00000000002e8ee0&gt;] hugetlb_register_node+0x68/0x130</span>
<span class="quote">&gt; [    0.998663]  [&lt;0000000000d59ef0&gt;] hugetlb_init+0x4f0/0x600</span>
<span class="quote">&gt; [    0.998665]  [&lt;00000000001001da&gt;] do_one_initcall+0xa2/0x1b8</span>
<span class="quote">&gt; [    0.998666]  [&lt;0000000000d3ae52&gt;] kernel_init_freeable+0x232/0x2e0</span>
<span class="quote">&gt; [    0.998668]  [&lt;00000000008312d2&gt;] kernel_init+0x2a/0x120</span>
<span class="quote">&gt; [    0.998670]  [&lt;000000000083d332&gt;] kernel_thread_starter+0x6/0xc</span>
<span class="quote">&gt; [    0.998671]  [&lt;000000000083d32c&gt;] kernel_thread_starter+0x0/0xc</span>
<span class="quote">&gt; [    0.998673] no locks held by swapper/0/1.</span>
<span class="quote">&gt; [    0.998673] Last Breaking-Event-Address:</span>
<span class="quote">&gt; [    0.998675]  [&lt;0000000000582768&gt;] kobject_get+0x68/0x90</span>
<span class="quote">&gt; [    0.998678] ---[ end trace cae7490da7950580 ]---</span>
<span class="quote">&gt; [    0.998679] Unable to handle kernel pointer dereference in virtual kernel address space</span>
<span class="quote">&gt; [    0.998681] failing address: 0000000000000000 TEID: 0000000000000483</span>
<span class="quote">&gt; [    0.998681] Fault in home space mode while using kernel ASCE.</span>
<span class="quote">&gt; [    0.998684] AS:0000000000fb1007 R3:000000023ffcf007 S:000000023fff8000 P:000000000000003d</span>
<span class="quote">&gt; [    0.998719] Oops: 0004 ilc:3 [#1] SMP DEBUG_PAGEALLOC</span>
<span class="quote">&gt; [    0.998721] Modules linked in:</span>
<span class="quote">&gt; [    0.998723] CPU: 0 PID: 1 Comm: swapper/0 Tainted: G        W       4.5.0-rc1 #174</span>
<span class="quote">&gt; [    0.998725] task: 0000000232720000 ti: 000000023270c000 task.ti: 000000023270c000</span>
<span class="quote">&gt; [    0.998726] Krnl PSW : 0704c00180000000 0000000000582734 (kobject_get+0x34/0x90)</span>
<span class="quote">&gt; [    0.998729]            R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:0 PM:0 EA:3</span>
<span class="quote">&gt; Krnl GPRS: 000000000000006c 0000000200000001 000000000000005c 0000000000000001</span>
<span class="quote">&gt; [    0.998731]            0000000000287e04 0000000000000000 0000000000dd99a8 0000000000000000</span>
<span class="quote">&gt; [    0.998733]            0000000000d86008 0000000000000000 0000000000000000 0000000000000000</span>
<span class="quote">&gt; [    0.998734]            0000000000000010 0000000000000010 0000000000582768 000000023270fbb0</span>
<span class="quote">&gt; [    0.998739] Krnl Code: 0000000000582728: 9180203c		tm	60(%%r2),128</span>
<span class="quote">&gt;            000000000058272c: a7840013		brc	8,582752</span>
<span class="quote">&gt;           #0000000000582730: a7180001		lhi	%%r1,1</span>
<span class="quote">&gt;           &gt;0000000000582734: eb11d03800f8	laa	%%r1,%%r1,56(%%r13)</span>
<span class="quote">&gt;            000000000058273a: 07e0		bcr	14,%%r0</span>
<span class="quote">&gt;            000000000058273c: a71a0001		ahi	%%r1,1</span>
<span class="quote">&gt;            0000000000582740: ec1c0018017e	cij	%%r1,1,12,582770</span>
<span class="quote">&gt;            0000000000582746: b904002d		lgr	%%r2,%%r13</span>
<span class="quote">&gt; [    0.998839] Call Trace:</span>
<span class="quote">&gt; [    0.998841] ([&lt;0000000000582768&gt;] kobject_get+0x68/0x90)</span>
<span class="quote">&gt; [    0.998843]  [&lt;000000000058318e&gt;] kobject_add_internal+0x46/0x2e8</span>
<span class="quote">&gt; [    0.998844]  [&lt;0000000000583684&gt;] kobject_add+0x7c/0xd0</span>
<span class="quote">&gt; [    0.998846]  [&lt;0000000000583722&gt;] kobject_create_and_add+0x4a/0x98</span>
<span class="quote">&gt; [    0.998847]  [&lt;00000000002e8ee0&gt;] hugetlb_register_node+0x68/0x130</span>
<span class="quote">&gt; [    0.998849]  [&lt;0000000000d59ef0&gt;] hugetlb_init+0x4f0/0x600</span>
<span class="quote">&gt; [    0.998850]  [&lt;00000000001001da&gt;] do_one_initcall+0xa2/0x1b8</span>
<span class="quote">&gt; [    0.998852]  [&lt;0000000000d3ae52&gt;] kernel_init_freeable+0x232/0x2e0</span>
<span class="quote">&gt; [    0.998853]  [&lt;00000000008312d2&gt;] kernel_init+0x2a/0x120</span>
<span class="quote">&gt; [    0.998855]  [&lt;000000000083d332&gt;] kernel_thread_starter+0x6/0xc</span>
<span class="quote">&gt; [    0.998856]  [&lt;000000000083d32c&gt;] kernel_thread_starter+0x0/0xc</span>
<span class="quote">&gt; [    0.998857] INFO: lockdep is turned off.</span>
<span class="quote">&gt; [    0.998858] Last Breaking-Event-Address:</span>
<span class="quote">&gt; [    0.998859]  [&lt;000000000058276c&gt;] kobject_get+0x6c/0x90</span>
<span class="quote">&gt; [    0.998861]</span>
<span class="quote">&gt; [    0.998863] Kernel panic - not syncing: Fatal exception: panic_on_oops</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=447">Christian Borntraeger</a> - Jan. 28, 2016, 9:48 a.m.</div>
<pre class="content">
On 01/28/2016 10:40 AM, Hillf Danton wrote:
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Paul,</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; the commit 3e89e1c5ea842 (&quot;hugetlb: make mm and fs code explicitly non-modular&quot;)</span>
<span class="quote">&gt;&gt; triggers belows warning/oops, if CONFIG_TIMER_STATS is set.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Looking at the patch the only &quot;real&quot; change is the init_call,</span>
<span class="quote">&gt;&gt; and indeed</span>
<span class="quote">&gt;&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt;&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt;&gt; @@ -2653,7 +2653,7 @@ static int __init hugetlb_init(void)</span>
<span class="quote">&gt;&gt;                 mutex_init(&amp;hugetlb_fault_mutex_table[i]);</span>
<span class="quote">&gt;&gt;         return 0;</span>
<span class="quote">&gt;&gt;  }</span>
<span class="quote">&gt;&gt; -subsys_initcall(hugetlb_init);</span>
<span class="quote">&gt;&gt; +device_initcall(hugetlb_init);</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;  /* Should be called on processing a hugepagesz=... option */</span>
<span class="quote">&gt;&gt;  void __init hugetlb_add_hstate(unsigned int order)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; makes the problem go away.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Helps more if a patch is delivered.</span>

The problem is that the original change was intentional. So I do not not
what the right fix is.
<span class="quote">

&gt; </span>
<span class="quote">&gt; thanks</span>
<span class="quote">&gt; Hillf</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;&gt; Not sure yet, what CONFIG_TIMER_STATS changes in terms of kobject, though.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; [    0.998607] kobject: &#39;(null)&#39; (0000000000000010): is not initialized, yet kobject_get() is being called.</span>
<span class="quote">&gt;&gt; [    0.998620] ------------[ cut here ]------------</span>
<span class="quote">&gt;&gt; [    0.998621] WARNING: at lib/kobject.c:597</span>
<span class="quote">&gt;&gt; [    0.998622] Modules linked in:</span>
<span class="quote">&gt;&gt; [    0.998625] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.5.0-rc1 #174</span>
<span class="quote">&gt;&gt; [    0.998626] task: 0000000232720000 ti: 000000023270c000 task.ti: 000000023270c000</span>
<span class="quote">&gt;&gt; [    0.998628] Krnl PSW : 0704c00180000000 000000000058276c (kobject_get+0x6c/0x90)</span>
<span class="quote">&gt;&gt; [    0.998632]            R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:0 PM:0 EA:3</span>
<span class="quote">&gt;&gt; Krnl GPRS: 000000000000006c 0000000232720000 000000000000005c 0000000000000001</span>
<span class="quote">&gt;&gt; [    0.998635]            0000000000287e04 0000000000000000 0000000000dd99a8 0000000000000000</span>
<span class="quote">&gt;&gt; [    0.998636]            0000000000d86008 0000000000000000 0000000000000000 0000000000000000</span>
<span class="quote">&gt;&gt; [    0.998637]            0000000000000010 0000000000000010 0000000000582768 000000023270fbb0</span>
<span class="quote">&gt;&gt; [    0.998643] Krnl Code: 000000000058275c: c02000267259	larl	%%r2,a50c0e</span>
<span class="quote">&gt;&gt;            0000000000582762: c0e5ffe82b17	brasl	%%r14,287d90</span>
<span class="quote">&gt;&gt;           #0000000000582768: a7f40001		brc	15,58276a</span>
<span class="quote">&gt;&gt;           &gt;000000000058276c: a7f4ffe2		brc	15,582730</span>
<span class="quote">&gt;&gt;            0000000000582770: c010003d24f3	larl	%%r1,d27156</span>
<span class="quote">&gt;&gt;            0000000000582776: 95001000		cli	0(%%r1),0</span>
<span class="quote">&gt;&gt;            000000000058277a: a774ffe6		brc	7,582746</span>
<span class="quote">&gt;&gt;            000000000058277e: a7f40001		brc	15,582780</span>
<span class="quote">&gt;&gt; [    0.998653] Call Trace:</span>
<span class="quote">&gt;&gt; [    0.998655] ([&lt;0000000000582768&gt;] kobject_get+0x68/0x90)</span>
<span class="quote">&gt;&gt; [    0.998657]  [&lt;000000000058318e&gt;] kobject_add_internal+0x46/0x2e8</span>
<span class="quote">&gt;&gt; [    0.998658]  [&lt;0000000000583684&gt;] kobject_add+0x7c/0xd0</span>
<span class="quote">&gt;&gt; [    0.998660]  [&lt;0000000000583722&gt;] kobject_create_and_add+0x4a/0x98</span>
<span class="quote">&gt;&gt; [    0.998662]  [&lt;00000000002e8ee0&gt;] hugetlb_register_node+0x68/0x130</span>
<span class="quote">&gt;&gt; [    0.998663]  [&lt;0000000000d59ef0&gt;] hugetlb_init+0x4f0/0x600</span>
<span class="quote">&gt;&gt; [    0.998665]  [&lt;00000000001001da&gt;] do_one_initcall+0xa2/0x1b8</span>
<span class="quote">&gt;&gt; [    0.998666]  [&lt;0000000000d3ae52&gt;] kernel_init_freeable+0x232/0x2e0</span>
<span class="quote">&gt;&gt; [    0.998668]  [&lt;00000000008312d2&gt;] kernel_init+0x2a/0x120</span>
<span class="quote">&gt;&gt; [    0.998670]  [&lt;000000000083d332&gt;] kernel_thread_starter+0x6/0xc</span>
<span class="quote">&gt;&gt; [    0.998671]  [&lt;000000000083d32c&gt;] kernel_thread_starter+0x0/0xc</span>
<span class="quote">&gt;&gt; [    0.998673] no locks held by swapper/0/1.</span>
<span class="quote">&gt;&gt; [    0.998673] Last Breaking-Event-Address:</span>
<span class="quote">&gt;&gt; [    0.998675]  [&lt;0000000000582768&gt;] kobject_get+0x68/0x90</span>
<span class="quote">&gt;&gt; [    0.998678] ---[ end trace cae7490da7950580 ]---</span>
<span class="quote">&gt;&gt; [    0.998679] Unable to handle kernel pointer dereference in virtual kernel address space</span>
<span class="quote">&gt;&gt; [    0.998681] failing address: 0000000000000000 TEID: 0000000000000483</span>
<span class="quote">&gt;&gt; [    0.998681] Fault in home space mode while using kernel ASCE.</span>
<span class="quote">&gt;&gt; [    0.998684] AS:0000000000fb1007 R3:000000023ffcf007 S:000000023fff8000 P:000000000000003d</span>
<span class="quote">&gt;&gt; [    0.998719] Oops: 0004 ilc:3 [#1] SMP DEBUG_PAGEALLOC</span>
<span class="quote">&gt;&gt; [    0.998721] Modules linked in:</span>
<span class="quote">&gt;&gt; [    0.998723] CPU: 0 PID: 1 Comm: swapper/0 Tainted: G        W       4.5.0-rc1 #174</span>
<span class="quote">&gt;&gt; [    0.998725] task: 0000000232720000 ti: 000000023270c000 task.ti: 000000023270c000</span>
<span class="quote">&gt;&gt; [    0.998726] Krnl PSW : 0704c00180000000 0000000000582734 (kobject_get+0x34/0x90)</span>
<span class="quote">&gt;&gt; [    0.998729]            R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:0 PM:0 EA:3</span>
<span class="quote">&gt;&gt; Krnl GPRS: 000000000000006c 0000000200000001 000000000000005c 0000000000000001</span>
<span class="quote">&gt;&gt; [    0.998731]            0000000000287e04 0000000000000000 0000000000dd99a8 0000000000000000</span>
<span class="quote">&gt;&gt; [    0.998733]            0000000000d86008 0000000000000000 0000000000000000 0000000000000000</span>
<span class="quote">&gt;&gt; [    0.998734]            0000000000000010 0000000000000010 0000000000582768 000000023270fbb0</span>
<span class="quote">&gt;&gt; [    0.998739] Krnl Code: 0000000000582728: 9180203c		tm	60(%%r2),128</span>
<span class="quote">&gt;&gt;            000000000058272c: a7840013		brc	8,582752</span>
<span class="quote">&gt;&gt;           #0000000000582730: a7180001		lhi	%%r1,1</span>
<span class="quote">&gt;&gt;           &gt;0000000000582734: eb11d03800f8	laa	%%r1,%%r1,56(%%r13)</span>
<span class="quote">&gt;&gt;            000000000058273a: 07e0		bcr	14,%%r0</span>
<span class="quote">&gt;&gt;            000000000058273c: a71a0001		ahi	%%r1,1</span>
<span class="quote">&gt;&gt;            0000000000582740: ec1c0018017e	cij	%%r1,1,12,582770</span>
<span class="quote">&gt;&gt;            0000000000582746: b904002d		lgr	%%r2,%%r13</span>
<span class="quote">&gt;&gt; [    0.998839] Call Trace:</span>
<span class="quote">&gt;&gt; [    0.998841] ([&lt;0000000000582768&gt;] kobject_get+0x68/0x90)</span>
<span class="quote">&gt;&gt; [    0.998843]  [&lt;000000000058318e&gt;] kobject_add_internal+0x46/0x2e8</span>
<span class="quote">&gt;&gt; [    0.998844]  [&lt;0000000000583684&gt;] kobject_add+0x7c/0xd0</span>
<span class="quote">&gt;&gt; [    0.998846]  [&lt;0000000000583722&gt;] kobject_create_and_add+0x4a/0x98</span>
<span class="quote">&gt;&gt; [    0.998847]  [&lt;00000000002e8ee0&gt;] hugetlb_register_node+0x68/0x130</span>
<span class="quote">&gt;&gt; [    0.998849]  [&lt;0000000000d59ef0&gt;] hugetlb_init+0x4f0/0x600</span>
<span class="quote">&gt;&gt; [    0.998850]  [&lt;00000000001001da&gt;] do_one_initcall+0xa2/0x1b8</span>
<span class="quote">&gt;&gt; [    0.998852]  [&lt;0000000000d3ae52&gt;] kernel_init_freeable+0x232/0x2e0</span>
<span class="quote">&gt;&gt; [    0.998853]  [&lt;00000000008312d2&gt;] kernel_init+0x2a/0x120</span>
<span class="quote">&gt;&gt; [    0.998855]  [&lt;000000000083d332&gt;] kernel_thread_starter+0x6/0xc</span>
<span class="quote">&gt;&gt; [    0.998856]  [&lt;000000000083d32c&gt;] kernel_thread_starter+0x0/0xc</span>
<span class="quote">&gt;&gt; [    0.998857] INFO: lockdep is turned off.</span>
<span class="quote">&gt;&gt; [    0.998858] Last Breaking-Event-Address:</span>
<span class="quote">&gt;&gt; [    0.998859]  [&lt;000000000058276c&gt;] kobject_get+0x6c/0x90</span>
<span class="quote">&gt;&gt; [    0.998861]</span>
<span class="quote">&gt;&gt; [    0.998863] Kernel panic - not syncing: Fatal exception: panic_on_oops</span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1553">Paul Gortmaker</a> - Jan. 28, 2016, 2:37 p.m.</div>
<pre class="content">
[Re: Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code explicitly non-modular vs CONFIG_TIMER_STATS)] On 28/01/2016 (Thu 10:48) Christian Borntraeger wrote:
<span class="quote">
&gt; On 01/28/2016 10:40 AM, Hillf Danton wrote:</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; Paul,</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; the commit 3e89e1c5ea842 (&quot;hugetlb: make mm and fs code explicitly non-modular&quot;)</span>
<span class="quote">&gt; &gt;&gt; triggers belows warning/oops, if CONFIG_TIMER_STATS is set.</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; Looking at the patch the only &quot;real&quot; change is the init_call,</span>
<span class="quote">&gt; &gt;&gt; and indeed</span>
<span class="quote">&gt; &gt;&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt; &gt;&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt; &gt;&gt; @@ -2653,7 +2653,7 @@ static int __init hugetlb_init(void)</span>
<span class="quote">&gt; &gt;&gt;                 mutex_init(&amp;hugetlb_fault_mutex_table[i]);</span>
<span class="quote">&gt; &gt;&gt;         return 0;</span>
<span class="quote">&gt; &gt;&gt;  }</span>
<span class="quote">&gt; &gt;&gt; -subsys_initcall(hugetlb_init);</span>
<span class="quote">&gt; &gt;&gt; +device_initcall(hugetlb_init);</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;  /* Should be called on processing a hugepagesz=... option */</span>
<span class="quote">&gt; &gt;&gt;  void __init hugetlb_add_hstate(unsigned int order)</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; makes the problem go away.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Helps more if a patch is delivered.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The problem is that the original change was intentional. So I do not not</span>
<span class="quote">&gt; what the right fix is.</span>

Thanks for the report ; let me see if I can work out what TIMER_STATS
is doing to cause this sometime today.

P.
--
<span class="quote">
&gt; </span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; thanks</span>
<span class="quote">&gt; &gt; Hillf</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;&gt; Not sure yet, what CONFIG_TIMER_STATS changes in terms of kobject, though.</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt;</span>
<span class="quote">&gt; &gt;&gt; [    0.998607] kobject: &#39;(null)&#39; (0000000000000010): is not initialized, yet kobject_get() is being called.</span>
<span class="quote">&gt; &gt;&gt; [    0.998620] ------------[ cut here ]------------</span>
<span class="quote">&gt; &gt;&gt; [    0.998621] WARNING: at lib/kobject.c:597</span>
<span class="quote">&gt; &gt;&gt; [    0.998622] Modules linked in:</span>
<span class="quote">&gt; &gt;&gt; [    0.998625] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.5.0-rc1 #174</span>
<span class="quote">&gt; &gt;&gt; [    0.998626] task: 0000000232720000 ti: 000000023270c000 task.ti: 000000023270c000</span>
<span class="quote">&gt; &gt;&gt; [    0.998628] Krnl PSW : 0704c00180000000 000000000058276c (kobject_get+0x6c/0x90)</span>
<span class="quote">&gt; &gt;&gt; [    0.998632]            R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:0 PM:0 EA:3</span>
<span class="quote">&gt; &gt;&gt; Krnl GPRS: 000000000000006c 0000000232720000 000000000000005c 0000000000000001</span>
<span class="quote">&gt; &gt;&gt; [    0.998635]            0000000000287e04 0000000000000000 0000000000dd99a8 0000000000000000</span>
<span class="quote">&gt; &gt;&gt; [    0.998636]            0000000000d86008 0000000000000000 0000000000000000 0000000000000000</span>
<span class="quote">&gt; &gt;&gt; [    0.998637]            0000000000000010 0000000000000010 0000000000582768 000000023270fbb0</span>
<span class="quote">&gt; &gt;&gt; [    0.998643] Krnl Code: 000000000058275c: c02000267259	larl	%%r2,a50c0e</span>
<span class="quote">&gt; &gt;&gt;            0000000000582762: c0e5ffe82b17	brasl	%%r14,287d90</span>
<span class="quote">&gt; &gt;&gt;           #0000000000582768: a7f40001		brc	15,58276a</span>
<span class="quote">&gt; &gt;&gt;           &gt;000000000058276c: a7f4ffe2		brc	15,582730</span>
<span class="quote">&gt; &gt;&gt;            0000000000582770: c010003d24f3	larl	%%r1,d27156</span>
<span class="quote">&gt; &gt;&gt;            0000000000582776: 95001000		cli	0(%%r1),0</span>
<span class="quote">&gt; &gt;&gt;            000000000058277a: a774ffe6		brc	7,582746</span>
<span class="quote">&gt; &gt;&gt;            000000000058277e: a7f40001		brc	15,582780</span>
<span class="quote">&gt; &gt;&gt; [    0.998653] Call Trace:</span>
<span class="quote">&gt; &gt;&gt; [    0.998655] ([&lt;0000000000582768&gt;] kobject_get+0x68/0x90)</span>
<span class="quote">&gt; &gt;&gt; [    0.998657]  [&lt;000000000058318e&gt;] kobject_add_internal+0x46/0x2e8</span>
<span class="quote">&gt; &gt;&gt; [    0.998658]  [&lt;0000000000583684&gt;] kobject_add+0x7c/0xd0</span>
<span class="quote">&gt; &gt;&gt; [    0.998660]  [&lt;0000000000583722&gt;] kobject_create_and_add+0x4a/0x98</span>
<span class="quote">&gt; &gt;&gt; [    0.998662]  [&lt;00000000002e8ee0&gt;] hugetlb_register_node+0x68/0x130</span>
<span class="quote">&gt; &gt;&gt; [    0.998663]  [&lt;0000000000d59ef0&gt;] hugetlb_init+0x4f0/0x600</span>
<span class="quote">&gt; &gt;&gt; [    0.998665]  [&lt;00000000001001da&gt;] do_one_initcall+0xa2/0x1b8</span>
<span class="quote">&gt; &gt;&gt; [    0.998666]  [&lt;0000000000d3ae52&gt;] kernel_init_freeable+0x232/0x2e0</span>
<span class="quote">&gt; &gt;&gt; [    0.998668]  [&lt;00000000008312d2&gt;] kernel_init+0x2a/0x120</span>
<span class="quote">&gt; &gt;&gt; [    0.998670]  [&lt;000000000083d332&gt;] kernel_thread_starter+0x6/0xc</span>
<span class="quote">&gt; &gt;&gt; [    0.998671]  [&lt;000000000083d32c&gt;] kernel_thread_starter+0x0/0xc</span>
<span class="quote">&gt; &gt;&gt; [    0.998673] no locks held by swapper/0/1.</span>
<span class="quote">&gt; &gt;&gt; [    0.998673] Last Breaking-Event-Address:</span>
<span class="quote">&gt; &gt;&gt; [    0.998675]  [&lt;0000000000582768&gt;] kobject_get+0x68/0x90</span>
<span class="quote">&gt; &gt;&gt; [    0.998678] ---[ end trace cae7490da7950580 ]---</span>
<span class="quote">&gt; &gt;&gt; [    0.998679] Unable to handle kernel pointer dereference in virtual kernel address space</span>
<span class="quote">&gt; &gt;&gt; [    0.998681] failing address: 0000000000000000 TEID: 0000000000000483</span>
<span class="quote">&gt; &gt;&gt; [    0.998681] Fault in home space mode while using kernel ASCE.</span>
<span class="quote">&gt; &gt;&gt; [    0.998684] AS:0000000000fb1007 R3:000000023ffcf007 S:000000023fff8000 P:000000000000003d</span>
<span class="quote">&gt; &gt;&gt; [    0.998719] Oops: 0004 ilc:3 [#1] SMP DEBUG_PAGEALLOC</span>
<span class="quote">&gt; &gt;&gt; [    0.998721] Modules linked in:</span>
<span class="quote">&gt; &gt;&gt; [    0.998723] CPU: 0 PID: 1 Comm: swapper/0 Tainted: G        W       4.5.0-rc1 #174</span>
<span class="quote">&gt; &gt;&gt; [    0.998725] task: 0000000232720000 ti: 000000023270c000 task.ti: 000000023270c000</span>
<span class="quote">&gt; &gt;&gt; [    0.998726] Krnl PSW : 0704c00180000000 0000000000582734 (kobject_get+0x34/0x90)</span>
<span class="quote">&gt; &gt;&gt; [    0.998729]            R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:0 PM:0 EA:3</span>
<span class="quote">&gt; &gt;&gt; Krnl GPRS: 000000000000006c 0000000200000001 000000000000005c 0000000000000001</span>
<span class="quote">&gt; &gt;&gt; [    0.998731]            0000000000287e04 0000000000000000 0000000000dd99a8 0000000000000000</span>
<span class="quote">&gt; &gt;&gt; [    0.998733]            0000000000d86008 0000000000000000 0000000000000000 0000000000000000</span>
<span class="quote">&gt; &gt;&gt; [    0.998734]            0000000000000010 0000000000000010 0000000000582768 000000023270fbb0</span>
<span class="quote">&gt; &gt;&gt; [    0.998739] Krnl Code: 0000000000582728: 9180203c		tm	60(%%r2),128</span>
<span class="quote">&gt; &gt;&gt;            000000000058272c: a7840013		brc	8,582752</span>
<span class="quote">&gt; &gt;&gt;           #0000000000582730: a7180001		lhi	%%r1,1</span>
<span class="quote">&gt; &gt;&gt;           &gt;0000000000582734: eb11d03800f8	laa	%%r1,%%r1,56(%%r13)</span>
<span class="quote">&gt; &gt;&gt;            000000000058273a: 07e0		bcr	14,%%r0</span>
<span class="quote">&gt; &gt;&gt;            000000000058273c: a71a0001		ahi	%%r1,1</span>
<span class="quote">&gt; &gt;&gt;            0000000000582740: ec1c0018017e	cij	%%r1,1,12,582770</span>
<span class="quote">&gt; &gt;&gt;            0000000000582746: b904002d		lgr	%%r2,%%r13</span>
<span class="quote">&gt; &gt;&gt; [    0.998839] Call Trace:</span>
<span class="quote">&gt; &gt;&gt; [    0.998841] ([&lt;0000000000582768&gt;] kobject_get+0x68/0x90)</span>
<span class="quote">&gt; &gt;&gt; [    0.998843]  [&lt;000000000058318e&gt;] kobject_add_internal+0x46/0x2e8</span>
<span class="quote">&gt; &gt;&gt; [    0.998844]  [&lt;0000000000583684&gt;] kobject_add+0x7c/0xd0</span>
<span class="quote">&gt; &gt;&gt; [    0.998846]  [&lt;0000000000583722&gt;] kobject_create_and_add+0x4a/0x98</span>
<span class="quote">&gt; &gt;&gt; [    0.998847]  [&lt;00000000002e8ee0&gt;] hugetlb_register_node+0x68/0x130</span>
<span class="quote">&gt; &gt;&gt; [    0.998849]  [&lt;0000000000d59ef0&gt;] hugetlb_init+0x4f0/0x600</span>
<span class="quote">&gt; &gt;&gt; [    0.998850]  [&lt;00000000001001da&gt;] do_one_initcall+0xa2/0x1b8</span>
<span class="quote">&gt; &gt;&gt; [    0.998852]  [&lt;0000000000d3ae52&gt;] kernel_init_freeable+0x232/0x2e0</span>
<span class="quote">&gt; &gt;&gt; [    0.998853]  [&lt;00000000008312d2&gt;] kernel_init+0x2a/0x120</span>
<span class="quote">&gt; &gt;&gt; [    0.998855]  [&lt;000000000083d332&gt;] kernel_thread_starter+0x6/0xc</span>
<span class="quote">&gt; &gt;&gt; [    0.998856]  [&lt;000000000083d32c&gt;] kernel_thread_starter+0x0/0xc</span>
<span class="quote">&gt; &gt;&gt; [    0.998857] INFO: lockdep is turned off.</span>
<span class="quote">&gt; &gt;&gt; [    0.998858] Last Breaking-Event-Address:</span>
<span class="quote">&gt; &gt;&gt; [    0.998859]  [&lt;000000000058276c&gt;] kobject_get+0x6c/0x90</span>
<span class="quote">&gt; &gt;&gt; [    0.998861]</span>
<span class="quote">&gt; &gt;&gt; [    0.998863] Kernel panic - not syncing: Fatal exception: panic_on_oops</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=124511">Mike Kravetz</a> - Jan. 28, 2016, 3:05 p.m.</div>
<pre class="content">
On 01/28/2016 06:37 AM, Paul Gortmaker wrote:
<span class="quote">&gt; [Re: Regression: 4.5-rc1 (bisect: hugetlb: make mm and fs code explicitly non-modular vs CONFIG_TIMER_STATS)] On 28/01/2016 (Thu 10:48) Christian Borntraeger wrote:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;&gt; On 01/28/2016 10:40 AM, Hillf Danton wrote:</span>
<span class="quote">&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt; Paul,</span>
<span class="quote">&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt; the commit 3e89e1c5ea842 (&quot;hugetlb: make mm and fs code explicitly non-modular&quot;)</span>
<span class="quote">&gt;&gt;&gt;&gt; triggers belows warning/oops, if CONFIG_TIMER_STATS is set.</span>
<span class="quote">&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt; Looking at the patch the only &quot;real&quot; change is the init_call,</span>
<span class="quote">&gt;&gt;&gt;&gt; and indeed</span>
<span class="quote">&gt;&gt;&gt;&gt; --- a/mm/hugetlb.c</span>
<span class="quote">&gt;&gt;&gt;&gt; +++ b/mm/hugetlb.c</span>
<span class="quote">&gt;&gt;&gt;&gt; @@ -2653,7 +2653,7 @@ static int __init hugetlb_init(void)</span>
<span class="quote">&gt;&gt;&gt;&gt;                 mutex_init(&amp;hugetlb_fault_mutex_table[i]);</span>
<span class="quote">&gt;&gt;&gt;&gt;         return 0;</span>
<span class="quote">&gt;&gt;&gt;&gt;  }</span>
<span class="quote">&gt;&gt;&gt;&gt; -subsys_initcall(hugetlb_init);</span>
<span class="quote">&gt;&gt;&gt;&gt; +device_initcall(hugetlb_init);</span>
<span class="quote">&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt;  /* Should be called on processing a hugepagesz=... option */</span>
<span class="quote">&gt;&gt;&gt;&gt;  void __init hugetlb_add_hstate(unsigned int order)</span>
<span class="quote">&gt;&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt;&gt; makes the problem go away.</span>
<span class="quote">&gt;&gt;&gt;</span>
<span class="quote">&gt;&gt;&gt; Helps more if a patch is delivered.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; The problem is that the original change was intentional. So I do not not</span>
<span class="quote">&gt;&gt; what the right fix is.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Thanks for the report ; let me see if I can work out what TIMER_STATS</span>
<span class="quote">&gt; is doing to cause this sometime today.</span>
<span class="quote">&gt; </span>

Hmmm?  CONFIG_TIMER_STATS is set in my config and I am not seeing the
issue.  Not sure, but it looks like Christian is building/running on
s390. This &#39;might&#39; be a contributing factor.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -2653,7 +2653,7 @@</span> <span class="p_context"> static int __init hugetlb_init(void)</span>
                mutex_init(&amp;hugetlb_fault_mutex_table[i]);
        return 0;
 }
<span class="p_del">-subsys_initcall(hugetlb_init);</span>
<span class="p_add">+device_initcall(hugetlb_init);</span>
 
 /* Should be called on processing a hugepagesz=... option */
 void __init hugetlb_add_hstate(unsigned int order)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



