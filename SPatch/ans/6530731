
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>ia64: remove paravirt code - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    ia64: remove paravirt code</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=40671">Luis R. Rodriguez</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 2, 2015, 6:42 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1433270522-1973-1-git-send-email-mcgrof@do-not-panic.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6530731/mbox/"
   >mbox</a>
|
   <a href="/patch/6530731/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6530731/">/patch/6530731/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 14F1BC0020
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  2 Jun 2015 18:44:59 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 539F420544
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  2 Jun 2015 18:44:52 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 4A2D720531
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  2 Jun 2015 18:44:45 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754552AbbFBSoe (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 2 Jun 2015 14:44:34 -0400
Received: from mail-qc0-f176.google.com ([209.85.216.176]:33116 &quot;EHLO
	mail-qc0-f176.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753624AbbFBSoW (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 2 Jun 2015 14:44:22 -0400
Received: by qcmi9 with SMTP id i9so63643778qcm.0;
	Tue, 02 Jun 2015 11:44:21 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=sender:from:to:cc:subject:date:message-id;
	bh=D9nS/+nQ31DAQqLVCPdEBxlRVUx2OGpNKZtOY656Viw=;
	b=lT8dzwXfyNHA1gaYHdqaiQieXMFaO/VBxXblnkt+X5myekharnuxxMl7DlN4nPoq/Y
	S1gNi7LRQyDf3E/R8brUaosrIO5LejYlcLuKDD0tjujgJQljEiGPK9FwbFQ0t/sa34fz
	FyPxYqqPAFtdjnMcBD2fDs09g4YktuZKi5bnT2Hr2qwU+ZDtuCwKVLs8M2cK2VyIwgO8
	xyXpabdnPSdwHE85ykVGvjFrY9JfDWlj9kzQcRyWKHzru3rzjONJ+zI9lqR66Al7lGFG
	ZyhARFZAtSj6CJdsAnhLExsGbUc7AFdXZD/m4U2pHZCbcnWJRIsG73w2P3STcIRRBgDW
	znkw==
X-Received: by 10.140.94.18 with SMTP id f18mr10010237qge.38.1433270661421; 
	Tue, 02 Jun 2015 11:44:21 -0700 (PDT)
Received: from mcgrof@gmail.com (c-98-234-145-61.hsd1.ca.comcast.net.
	[98.234.145.61]) by mx.google.com with ESMTPSA id
	102sm7762494qgn.37.2015.06.02.11.44.17
	(version=TLSv1 cipher=RC4-SHA bits=128/128);
	Tue, 02 Jun 2015 11:44:20 -0700 (PDT)
Received: by mcgrof@gmail.com (sSMTP sendmail emulation);
	Tue, 02 Jun 2015 11:42:09 -0700
From: &quot;Luis R. Rodriguez&quot; &lt;mcgrof@do-not-panic.com&gt;
To: tony.luck@intel.com, fenghua.yu@intel.com
Cc: linux-ia64@vger.kernel.org, linux-kernel@vger.kernel.org,
	pbonzini@redhat.com, boris.ostrovsky@oracle.com,
	chrisw@sous-sol.org, jeremy@goop.org, akataria@vmware.com,
	rusty@rustcorp.com.au, &quot;Luis R. Rodriguez&quot; &lt;mcgrof@suse.com&gt;
Subject: [PATCH] ia64: remove paravirt code
Date: Tue,  2 Jun 2015 11:42:02 -0700
Message-Id: &lt;1433270522-1973-1-git-send-email-mcgrof@do-not-panic.com&gt;
X-Mailer: git-send-email 2.1.0
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.8 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID,T_RP_MATCHES_RCVD,UNPARSEABLE_RELAY
	autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=40671">Luis R. Rodriguez</a> - June 2, 2015, 6:42 p.m.</div>
<pre class="content">
<span class="from">From: &quot;Luis R. Rodriguez&quot; &lt;mcgrof@suse.com&gt;</span>

All the ia64 pvops code is now dead code since both
xen and kvm support have been ripped out [0] [1]. Just
that no one had troubled to rip this stuff out. The only
useful remaining pieces were the old pvops docs but that
was recently also generalized and moved out from ia64 [2].

This has been run time tested on an ia64 Madison system.

[0] 003f7de625890 &quot;KVM: ia64: remove&quot; since v3.19-rc1
[1] d52eefb47d4eb &quot;ia64/xen: Remove Xen support for ia64&quot; since v3.14-rc1
[2] &quot;virtual: Documentation: simplify and generalize paravirt_ops.txt&quot;
<span class="signed-off-by">
Signed-off-by: Luis R. Rodriguez &lt;mcgrof@suse.com&gt;</span>
---
I&#39;ve build and run time tested this against linux-next tag next-20150529.
The build will fail if you&#39;ve enabled the LKDTM (Linux Kernel Dump Test
Tool Module) enabled on SLE11 ia64 builds, a fix for which I&#39;ve just
posted [3].

[3] https://marc.info/?l=linux-kernel&amp;m=143327018731361&amp;w=2

 arch/ia64/Kconfig                         |  23 -
 arch/ia64/include/asm/hw_irq.h            |   8 -
 arch/ia64/include/asm/intrinsics.h        |  13 -
 arch/ia64/include/asm/iosapic.h           |   4 -
 arch/ia64/include/asm/module.h            |   6 -
 arch/ia64/include/asm/native/inst.h       | 103 +---
 arch/ia64/include/asm/native/pvchk_inst.h | 271 ---------
 arch/ia64/include/asm/paravirt.h          | 321 -----------
 arch/ia64/include/asm/paravirt_patch.h    | 143 -----
 arch/ia64/include/asm/paravirt_privop.h   | 479 ----------------
 arch/ia64/kernel/Makefile                 |  34 +-
 arch/ia64/kernel/efi.c                    |   1 -
 arch/ia64/kernel/entry.S                  |  41 +-
 arch/ia64/kernel/fsys.S                   |  18 +-
 arch/ia64/kernel/gate.S                   |   9 +-
 arch/ia64/kernel/gate.lds.S               |  17 +-
 arch/ia64/kernel/head.S                   |  42 --
 arch/ia64/kernel/ivt.S                    |   4 +-
 arch/ia64/kernel/minstate.h               |   2 +-
 arch/ia64/kernel/module.c                 |  32 --
 arch/ia64/kernel/paravirt.c               | 902 ------------------------------
 arch/ia64/kernel/paravirt_inst.h          |  28 -
 arch/ia64/kernel/paravirt_patch.c         | 514 -----------------
 arch/ia64/kernel/paravirt_patchlist.c     |  81 ---
 arch/ia64/kernel/paravirt_patchlist.h     |  24 -
 arch/ia64/kernel/paravirtentry.S          | 121 ----
 arch/ia64/kernel/patch.c                  |  38 +-
 arch/ia64/kernel/setup.c                  |  12 -
 arch/ia64/kernel/smpboot.c                |   2 -
 arch/ia64/kernel/time.c                   |  29 -
 arch/ia64/kernel/vmlinux.lds.S            |  21 -
 arch/ia64/mm/init.c                       |   9 +-
 arch/ia64/scripts/pvcheck.sed             |  33 --
 33 files changed, 68 insertions(+), 3317 deletions(-)
 delete mode 100644 arch/ia64/include/asm/native/pvchk_inst.h
 delete mode 100644 arch/ia64/include/asm/paravirt.h
 delete mode 100644 arch/ia64/include/asm/paravirt_patch.h
 delete mode 100644 arch/ia64/include/asm/paravirt_privop.h
 delete mode 100644 arch/ia64/kernel/paravirt.c
 delete mode 100644 arch/ia64/kernel/paravirt_inst.h
 delete mode 100644 arch/ia64/kernel/paravirt_patch.c
 delete mode 100644 arch/ia64/kernel/paravirt_patchlist.c
 delete mode 100644 arch/ia64/kernel/paravirt_patchlist.h
 delete mode 100644 arch/ia64/kernel/paravirtentry.S
 delete mode 100644 arch/ia64/scripts/pvcheck.sed
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=89251">Luis R. Rodriguez</a> - June 8, 2015, 11:34 p.m.</div>
<pre class="content">
On Tue, Jun 2, 2015 at 11:42 AM, Luis R. Rodriguez
&lt;mcgrof@do-not-panic.com&gt; wrote:
<span class="quote">&gt; From: &quot;Luis R. Rodriguez&quot; &lt;mcgrof@suse.com&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; All the ia64 pvops code is now dead code since both</span>
<span class="quote">&gt; xen and kvm support have been ripped out [0] [1]. Just</span>
<span class="quote">&gt; that no one had troubled to rip this stuff out. The only</span>
<span class="quote">&gt; useful remaining pieces were the old pvops docs but that</span>
<span class="quote">&gt; was recently also generalized and moved out from ia64 [2].</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; This has been run time tested on an ia64 Madison system.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; [0] 003f7de625890 &quot;KVM: ia64: remove&quot; since v3.19-rc1</span>
<span class="quote">&gt; [1] d52eefb47d4eb &quot;ia64/xen: Remove Xen support for ia64&quot; since v3.14-rc1</span>
<span class="quote">&gt; [2] &quot;virtual: Documentation: simplify and generalize paravirt_ops.txt&quot;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Signed-off-by: Luis R. Rodriguez &lt;mcgrof@suse.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt; I&#39;ve build and run time tested this against linux-next tag next-20150529.</span>
<span class="quote">&gt; The build will fail if you&#39;ve enabled the LKDTM (Linux Kernel Dump Test</span>
<span class="quote">&gt; Tool Module) enabled on SLE11 ia64 builds, a fix for which I&#39;ve just</span>
<span class="quote">&gt; posted [3].</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; [3] https://marc.info/?l=linux-kernel&amp;m=143327018731361&amp;w=2</span>

Hey folks, any feedback?

 Luis
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=355">Luck, Tony</a> - June 9, 2015, 10:56 p.m.</div>
<pre class="content">
<span class="quote">&gt; Hey folks, any feedback?</span>

Sorry - it sounds like a good idea - haven&#39;t had time to play with the patch yet.

-Tony
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=694">Tony Luck</a> - June 10, 2015, 10:11 p.m.</div>
<pre class="content">
On Tue, Jun 2, 2015 at 11:42 AM, Luis R. Rodriguez
&lt;mcgrof@do-not-panic.com&gt; wrote:
<span class="quote">&gt; From: &quot;Luis R. Rodriguez&quot; &lt;mcgrof@suse.com&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; All the ia64 pvops code is now dead code since both</span>
<span class="quote">&gt; xen and kvm support have been ripped out [0] [1]. Just</span>
<span class="quote">&gt; that no one had troubled to rip this stuff out. The only</span>
<span class="quote">&gt; useful remaining pieces were the old pvops docs but that</span>
<span class="quote">&gt; was recently also generalized and moved out from ia64 [2].</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; This has been run time tested on an ia64 Madison system.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; [0] 003f7de625890 &quot;KVM: ia64: remove&quot; since v3.19-rc1</span>
<span class="quote">&gt; [1] d52eefb47d4eb &quot;ia64/xen: Remove Xen support for ia64&quot; since v3.14-rc1</span>
<span class="quote">&gt; [2] &quot;virtual: Documentation: simplify and generalize paravirt_ops.txt&quot;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Signed-off-by: Luis R. Rodriguez &lt;mcgrof@suse.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt; I&#39;ve build and run time tested this against linux-next tag next-20150529.</span>
<span class="quote">&gt; The build will fail if you&#39;ve enabled the LKDTM (Linux Kernel Dump Test</span>
<span class="quote">&gt; Tool Module) enabled on SLE11 ia64 builds, a fix for which I&#39;ve just</span>
<span class="quote">&gt; posted [3].</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; [3] https://marc.info/?l=linux-kernel&amp;m=143327018731361&amp;w=2</span>


So this builds cleanly on all my test configurations, and boots on
the one machine that I tried it on - good job.

But I&#39;m wondering how much of this was auto-generated (and
so perhaps free from typos) and how much was done by hand?

It isn&#39;t a full revert of the patch series that added paravirt ... you
simplified macros like:
 #define MOV_TO_KR(kr, reg, clob0, clob1)       \
-       mov IA64_KR(kr) = reg                   \
-       CLOBBER(clob0)                          \
-       CLOBBER(clob1)
+       mov IA64_KR(kr) = reg

but didn&#39;t remove them completely.

So what can I do to validate this 4000+ line patch?  Can I compare
disassembled &quot;.o&quot; files pre/post patch somehow to be sure this doesn&#39;t
have some small typo errors somewhere?

-Tony
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=40671">Luis R. Rodriguez</a> - June 10, 2015, 11:40 p.m.</div>
<pre class="content">
On Wed, Jun 10, 2015 at 3:11 PM, Tony Luck &lt;tony.luck@gmail.com&gt; wrote:
<span class="quote">&gt; On Tue, Jun 2, 2015 at 11:42 AM, Luis R. Rodriguez</span>
<span class="quote">&gt; &lt;mcgrof@do-not-panic.com&gt; wrote:</span>
<span class="quote">&gt;&gt; From: &quot;Luis R. Rodriguez&quot; &lt;mcgrof@suse.com&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; All the ia64 pvops code is now dead code since both</span>
<span class="quote">&gt;&gt; xen and kvm support have been ripped out [0] [1]. Just</span>
<span class="quote">&gt;&gt; that no one had troubled to rip this stuff out. The only</span>
<span class="quote">&gt;&gt; useful remaining pieces were the old pvops docs but that</span>
<span class="quote">&gt;&gt; was recently also generalized and moved out from ia64 [2].</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; This has been run time tested on an ia64 Madison system.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; [0] 003f7de625890 &quot;KVM: ia64: remove&quot; since v3.19-rc1</span>
<span class="quote">&gt;&gt; [1] d52eefb47d4eb &quot;ia64/xen: Remove Xen support for ia64&quot; since v3.14-rc1</span>
<span class="quote">&gt;&gt; [2] &quot;virtual: Documentation: simplify and generalize paravirt_ops.txt&quot;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Luis R. Rodriguez &lt;mcgrof@suse.com&gt;</span>
<span class="quote">&gt;&gt; ---</span>
<span class="quote">&gt;&gt; I&#39;ve build and run time tested this against linux-next tag next-20150529.</span>
<span class="quote">&gt;&gt; The build will fail if you&#39;ve enabled the LKDTM (Linux Kernel Dump Test</span>
<span class="quote">&gt;&gt; Tool Module) enabled on SLE11 ia64 builds, a fix for which I&#39;ve just</span>
<span class="quote">&gt;&gt; posted [3].</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; [3] https://marc.info/?l=linux-kernel&amp;m=143327018731361&amp;w=2</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; So this builds cleanly on all my test configurations, and boots on</span>
<span class="quote">&gt; the one machine that I tried it on - good job.</span>

Thanks!
<span class="quote">
&gt; But I&#39;m wondering how much of this was auto-generated (and</span>
<span class="quote">&gt; so perhaps free from typos) and how much was done by hand?</span>

I did this work to help study alternatives to how pvops was
implemented on other architectures, so I studied the patches that
introduced the code meticulously and then used my editor / editor
regexps to make substitutions as needed and shift code as needed.
Compile testing found some minor typos, which were easy to fix.
<span class="quote">
&gt; It isn&#39;t a full revert of the patch series that added paravirt ... you</span>
<span class="quote">&gt; simplified macros like:</span>
<span class="quote">&gt;  #define MOV_TO_KR(kr, reg, clob0, clob1)       \</span>
<span class="quote">&gt; -       mov IA64_KR(kr) = reg                   \</span>
<span class="quote">&gt; -       CLOBBER(clob0)                          \</span>
<span class="quote">&gt; -       CLOBBER(clob1)</span>
<span class="quote">&gt; +       mov IA64_KR(kr) = reg</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; but didn&#39;t remove them completely.</span>

Right, this IMHO was not necessary at this point but I can understand
if you want that. I think that could be done as a separate patch too
though and perhaps done through a machine, not human and manually.
<span class="quote">
&gt; So what can I do to validate this 4000+ line patch?  Can I compare</span>
<span class="quote">&gt; disassembled &quot;.o&quot; files pre/post patch somehow to be sure this doesn&#39;t</span>
<span class="quote">&gt; have some small typo errors somewhere?</span>

Its quite a huge chunk of code removed, I doubt that .o files would
remain intact after this, but I could be wrong. I think run time
validation and examination of the code changes, understanding of the
code changes is necessary, but also likely just as run time tests.

Is there no ia64 regression test suite?

I don&#39;t see ia64 getting much love anyway these days so would it not
hurt to merge and spin through linux-next for a while and if no issues
are reported make it fly in?

 Luis
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=694">Tony Luck</a> - June 11, 2015, 10:39 p.m.</div>
<pre class="content">
On Wed, Jun 10, 2015 at 4:40 PM, Luis R. Rodriguez
&lt;mcgrof@do-not-panic.com&gt; wrote:
<span class="quote">&gt; Its quite a huge chunk of code removed, I doubt that .o files would</span>
<span class="quote">&gt; remain intact after this, but I could be wrong. I think run time</span>
<span class="quote">&gt; validation and examination of the code changes, understanding of the</span>
<span class="quote">&gt; code changes is necessary, but also likely just as run time tests.</span>

Actually it seems the most of the .o files below arch/ia64/kernel look quite
similar ... some post-processing of the &quot;objdump -d&quot; output the squash
out addreses ... and the before/after .o files have few enough differences
that they can be looked at manually.
<span class="quote">
&gt; Is there no ia64 regression test suite?</span>
Not really.
<span class="quote">
&gt; I don&#39;t see ia64 getting much love anyway these days so would it not</span>
<span class="quote">&gt; hurt to merge and spin through linux-next for a while and if no issues</span>
<span class="quote">&gt; are reported make it fly in?</span>

Not sure how many people besides me are booting linux-next kernels.

Still - let&#39;s give it a try,

-Tony
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/ia64/Kconfig b/arch/ia64/Kconfig</span>
<span class="p_header">index 76d25b2..42a91a7 100644</span>
<span class="p_header">--- a/arch/ia64/Kconfig</span>
<span class="p_header">+++ b/arch/ia64/Kconfig</span>
<span class="p_chunk">@@ -137,29 +137,6 @@</span> <span class="p_context"> config AUDIT_ARCH</span>
 	bool
 	default y
 
<span class="p_del">-menuconfig PARAVIRT_GUEST</span>
<span class="p_del">-	bool &quot;Paravirtualized guest support&quot;</span>
<span class="p_del">-	depends on BROKEN</span>
<span class="p_del">-	help</span>
<span class="p_del">-	  Say Y here to get to see options related to running Linux under</span>
<span class="p_del">-	  various hypervisors.  This option alone does not add any kernel code.</span>
<span class="p_del">-</span>
<span class="p_del">-	  If you say N, all options in this submenu will be skipped and disabled.</span>
<span class="p_del">-</span>
<span class="p_del">-if PARAVIRT_GUEST</span>
<span class="p_del">-</span>
<span class="p_del">-config PARAVIRT</span>
<span class="p_del">-	bool &quot;Enable paravirtualization code&quot;</span>
<span class="p_del">-	depends on PARAVIRT_GUEST</span>
<span class="p_del">-	default y</span>
<span class="p_del">-	help</span>
<span class="p_del">-	  This changes the kernel so it can modify itself when it is run</span>
<span class="p_del">-	  under a hypervisor, potentially improving performance significantly</span>
<span class="p_del">-	  over full virtualization.  However, when run without a hypervisor</span>
<span class="p_del">-	  the kernel is theoretically slower and slightly larger.</span>
<span class="p_del">-</span>
<span class="p_del">-endif</span>
<span class="p_del">-</span>
 choice
 	prompt &quot;System type&quot;
 	default IA64_GENERIC
<span class="p_header">diff --git a/arch/ia64/include/asm/hw_irq.h b/arch/ia64/include/asm/hw_irq.h</span>
<span class="p_header">index 668786e..74347eb 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/hw_irq.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/hw_irq.h</span>
<span class="p_chunk">@@ -15,11 +15,7 @@</span> <span class="p_context"></span>
 #include &lt;asm/ptrace.h&gt;
 #include &lt;asm/smp.h&gt;
 
<span class="p_del">-#ifndef CONFIG_PARAVIRT</span>
 typedef u8 ia64_vector;
<span class="p_del">-#else</span>
<span class="p_del">-typedef u16 ia64_vector;</span>
<span class="p_del">-#endif</span>
 
 /*
  * 0 special
<span class="p_chunk">@@ -114,15 +110,11 @@</span> <span class="p_context"> DECLARE_PER_CPU(int[IA64_NUM_VECTORS], vector_irq);</span>
 
 extern struct irq_chip irq_type_ia64_lsapic;	/* CPU-internal interrupt controller */
 
<span class="p_del">-#ifdef CONFIG_PARAVIRT_GUEST</span>
<span class="p_del">-#include &lt;asm/paravirt.h&gt;</span>
<span class="p_del">-#else</span>
 #define ia64_register_ipi	ia64_native_register_ipi
 #define assign_irq_vector	ia64_native_assign_irq_vector
 #define free_irq_vector		ia64_native_free_irq_vector
 #define register_percpu_irq	ia64_native_register_percpu_irq
 #define ia64_resend_irq		ia64_native_resend_irq
<span class="p_del">-#endif</span>
 
 extern void ia64_native_register_ipi(void);
 extern int bind_irq_vector(int irq, int vector, cpumask_t domain);
<span class="p_header">diff --git a/arch/ia64/include/asm/intrinsics.h b/arch/ia64/include/asm/intrinsics.h</span>
<span class="p_header">index 20477ea..ec970a9 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/intrinsics.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/intrinsics.h</span>
<span class="p_chunk">@@ -7,19 +7,6 @@</span> <span class="p_context"></span>
 #ifndef _ASM_IA64_INTRINSICS_H
 #define _ASM_IA64_INTRINSICS_H
 
<span class="p_del">-#include &lt;asm/paravirt_privop.h&gt;</span>
 #include &lt;uapi/asm/intrinsics.h&gt;
 
<span class="p_del">-#ifndef __ASSEMBLY__</span>
<span class="p_del">-#if defined(CONFIG_PARAVIRT)</span>
<span class="p_del">-# undef IA64_INTRINSIC_API</span>
<span class="p_del">-# undef IA64_INTRINSIC_MACRO</span>
<span class="p_del">-# ifdef ASM_SUPPORTED</span>
<span class="p_del">-#  define IA64_INTRINSIC_API(name)	paravirt_ ## name</span>
<span class="p_del">-# else</span>
<span class="p_del">-#  define IA64_INTRINSIC_API(name)	pv_cpu_ops.name</span>
<span class="p_del">-# endif</span>
<span class="p_del">-#define IA64_INTRINSIC_MACRO(name)	paravirt_ ## name</span>
<span class="p_del">-#endif</span>
<span class="p_del">-#endif /* !__ASSEMBLY__ */</span>
 #endif /* _ASM_IA64_INTRINSICS_H */
<span class="p_header">diff --git a/arch/ia64/include/asm/iosapic.h b/arch/ia64/include/asm/iosapic.h</span>
<span class="p_header">index 94c89a2..4ae1fbd 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/iosapic.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/iosapic.h</span>
<span class="p_chunk">@@ -55,14 +55,10 @@</span> <span class="p_context"></span>
 
 #define NR_IOSAPICS			256
 
<span class="p_del">-#ifdef CONFIG_PARAVIRT_GUEST</span>
<span class="p_del">-#include &lt;asm/paravirt.h&gt;</span>
<span class="p_del">-#else</span>
 #define iosapic_pcat_compat_init	ia64_native_iosapic_pcat_compat_init
 #define __iosapic_read			__ia64_native_iosapic_read
 #define __iosapic_write			__ia64_native_iosapic_write
 #define iosapic_get_irq_chip		ia64_native_iosapic_get_irq_chip
<span class="p_del">-#endif</span>
 
 extern void __init ia64_native_iosapic_pcat_compat_init(void);
 extern struct irq_chip *ia64_native_iosapic_get_irq_chip(unsigned long trigger);
<span class="p_header">diff --git a/arch/ia64/include/asm/module.h b/arch/ia64/include/asm/module.h</span>
<span class="p_header">index dfba22a..f31894b 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/module.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/module.h</span>
<span class="p_chunk">@@ -18,12 +18,6 @@</span> <span class="p_context"> struct mod_arch_specific {</span>
 	struct elf64_shdr *got;		/* global offset table */
 	struct elf64_shdr *opd;		/* official procedure descriptors */
 	struct elf64_shdr *unwind;	/* unwind-table section */
<span class="p_del">-#ifdef CONFIG_PARAVIRT</span>
<span class="p_del">-	struct elf64_shdr *paravirt_bundles;</span>
<span class="p_del">-					/* paravirt_alt_bundle_patch table */</span>
<span class="p_del">-	struct elf64_shdr *paravirt_insts;</span>
<span class="p_del">-					/* paravirt_alt_inst_patch table */</span>
<span class="p_del">-#endif</span>
 	unsigned long gp;		/* global-pointer for module */
 
 	void *core_unw_table;		/* core unwind-table cookie returned by unwinder */
<span class="p_header">diff --git a/arch/ia64/include/asm/native/inst.h b/arch/ia64/include/asm/native/inst.h</span>
<span class="p_header">index d2d46ef..7e08f17 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/native/inst.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/native/inst.h</span>
<span class="p_chunk">@@ -22,32 +22,6 @@</span> <span class="p_context"></span>
 
 #define DO_SAVE_MIN		IA64_NATIVE_DO_SAVE_MIN
 
<span class="p_del">-#define __paravirt_switch_to			ia64_native_switch_to</span>
<span class="p_del">-#define __paravirt_leave_syscall		ia64_native_leave_syscall</span>
<span class="p_del">-#define __paravirt_work_processed_syscall	ia64_native_work_processed_syscall</span>
<span class="p_del">-#define __paravirt_leave_kernel			ia64_native_leave_kernel</span>
<span class="p_del">-#define __paravirt_pending_syscall_end		ia64_work_pending_syscall_end</span>
<span class="p_del">-#define __paravirt_work_processed_syscall_target \</span>
<span class="p_del">-						ia64_work_processed_syscall</span>
<span class="p_del">-</span>
<span class="p_del">-#define paravirt_fsyscall_table			ia64_native_fsyscall_table</span>
<span class="p_del">-#define paravirt_fsys_bubble_down		ia64_native_fsys_bubble_down</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef CONFIG_PARAVIRT_GUEST_ASM_CLOBBER_CHECK</span>
<span class="p_del">-# define PARAVIRT_POISON	0xdeadbeefbaadf00d</span>
<span class="p_del">-# define CLOBBER(clob)				\</span>
<span class="p_del">-	;;					\</span>
<span class="p_del">-	movl clob = PARAVIRT_POISON;		\</span>
<span class="p_del">-	;;</span>
<span class="p_del">-# define CLOBBER_PRED(pred_clob)		\</span>
<span class="p_del">-	;;					\</span>
<span class="p_del">-	cmp.eq pred_clob, p0 = r0, r0		\</span>
<span class="p_del">-	;;</span>
<span class="p_del">-#else</span>
<span class="p_del">-# define CLOBBER(clob)			/* nothing */</span>
<span class="p_del">-# define CLOBBER_PRED(pred_clob)	/* nothing */</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
 #define MOV_FROM_IFA(reg)	\
 	mov reg = cr.ifa
 
<span class="p_chunk">@@ -70,106 +44,76 @@</span> <span class="p_context"></span>
 	mov reg = cr.iip
 
 #define MOV_FROM_IVR(reg, clob)	\
<span class="p_del">-	mov reg = cr.ivr	\</span>
<span class="p_del">-	CLOBBER(clob)</span>
<span class="p_add">+	mov reg = cr.ivr</span>
 
 #define MOV_FROM_PSR(pred, reg, clob)	\
<span class="p_del">-(pred)	mov reg = psr			\</span>
<span class="p_del">-	CLOBBER(clob)</span>
<span class="p_add">+(pred)	mov reg = psr</span>
 
 #define MOV_FROM_ITC(pred, pred_clob, reg, clob)	\
<span class="p_del">-(pred)	mov reg = ar.itc				\</span>
<span class="p_del">-	CLOBBER(clob)					\</span>
<span class="p_del">-	CLOBBER_PRED(pred_clob)</span>
<span class="p_add">+(pred)	mov reg = ar.itc</span>
 
 #define MOV_TO_IFA(reg, clob)	\
<span class="p_del">-	mov cr.ifa = reg	\</span>
<span class="p_del">-	CLOBBER(clob)</span>
<span class="p_add">+	mov cr.ifa = reg</span>
 
 #define MOV_TO_ITIR(pred, reg, clob)	\
<span class="p_del">-(pred)	mov cr.itir = reg		\</span>
<span class="p_del">-	CLOBBER(clob)</span>
<span class="p_add">+(pred)	mov cr.itir = reg</span>
 
 #define MOV_TO_IHA(pred, reg, clob)	\
<span class="p_del">-(pred)	mov cr.iha = reg		\</span>
<span class="p_del">-	CLOBBER(clob)</span>
<span class="p_add">+(pred)	mov cr.iha = reg</span>
 
 #define MOV_TO_IPSR(pred, reg, clob)		\
<span class="p_del">-(pred)	mov cr.ipsr = reg			\</span>
<span class="p_del">-	CLOBBER(clob)</span>
<span class="p_add">+(pred)	mov cr.ipsr = reg</span>
 
 #define MOV_TO_IFS(pred, reg, clob)	\
<span class="p_del">-(pred)	mov cr.ifs = reg		\</span>
<span class="p_del">-	CLOBBER(clob)</span>
<span class="p_add">+(pred)	mov cr.ifs = reg</span>
 
 #define MOV_TO_IIP(reg, clob)	\
<span class="p_del">-	mov cr.iip = reg	\</span>
<span class="p_del">-	CLOBBER(clob)</span>
<span class="p_add">+	mov cr.iip = reg</span>
 
 #define MOV_TO_KR(kr, reg, clob0, clob1)	\
<span class="p_del">-	mov IA64_KR(kr) = reg			\</span>
<span class="p_del">-	CLOBBER(clob0)				\</span>
<span class="p_del">-	CLOBBER(clob1)</span>
<span class="p_add">+	mov IA64_KR(kr) = reg</span>
 
 #define ITC_I(pred, reg, clob)	\
<span class="p_del">-(pred)	itc.i reg		\</span>
<span class="p_del">-	CLOBBER(clob)</span>
<span class="p_add">+(pred)	itc.i reg</span>
 
 #define ITC_D(pred, reg, clob)	\
<span class="p_del">-(pred)	itc.d reg		\</span>
<span class="p_del">-	CLOBBER(clob)</span>
<span class="p_add">+(pred)	itc.d reg</span>
 
 #define ITC_I_AND_D(pred_i, pred_d, reg, clob)	\
 (pred_i) itc.i reg;				\
<span class="p_del">-(pred_d) itc.d reg				\</span>
<span class="p_del">-	CLOBBER(clob)</span>
<span class="p_add">+(pred_d) itc.d reg</span>
 
 #define THASH(pred, reg0, reg1, clob)		\
<span class="p_del">-(pred)	thash reg0 = reg1			\</span>
<span class="p_del">-	CLOBBER(clob)</span>
<span class="p_add">+(pred)	thash reg0 = reg1</span>
 
 #define SSM_PSR_IC_AND_DEFAULT_BITS_AND_SRLZ_I(clob0, clob1)		\
 	ssm psr.ic | PSR_DEFAULT_BITS					\
<span class="p_del">-	CLOBBER(clob0)							\</span>
<span class="p_del">-	CLOBBER(clob1)							\</span>
 	;;								\
 	srlz.i /* guarantee that interruption collectin is on */	\
 	;;
 
 #define SSM_PSR_IC_AND_SRLZ_D(clob0, clob1)	\
 	ssm psr.ic				\
<span class="p_del">-	CLOBBER(clob0)				\</span>
<span class="p_del">-	CLOBBER(clob1)				\</span>
 	;;					\
 	srlz.d
 
 #define RSM_PSR_IC(clob)	\
<span class="p_del">-	rsm psr.ic		\</span>
<span class="p_del">-	CLOBBER(clob)</span>
<span class="p_add">+	rsm psr.ic</span>
 
 #define SSM_PSR_I(pred, pred_clob, clob)	\
<span class="p_del">-(pred)	ssm psr.i				\</span>
<span class="p_del">-	CLOBBER(clob)				\</span>
<span class="p_del">-	CLOBBER_PRED(pred_clob)</span>
<span class="p_add">+(pred)	ssm psr.i</span>
 
 #define RSM_PSR_I(pred, clob0, clob1)	\
<span class="p_del">-(pred)	rsm psr.i			\</span>
<span class="p_del">-	CLOBBER(clob0)			\</span>
<span class="p_del">-	CLOBBER(clob1)</span>
<span class="p_add">+(pred)	rsm psr.i</span>
 
 #define RSM_PSR_I_IC(clob0, clob1, clob2)	\
<span class="p_del">-	rsm psr.i | psr.ic			\</span>
<span class="p_del">-	CLOBBER(clob0)				\</span>
<span class="p_del">-	CLOBBER(clob1)				\</span>
<span class="p_del">-	CLOBBER(clob2)</span>
<span class="p_add">+	rsm psr.i | psr.ic</span>
 
 #define RSM_PSR_DT		\
 	rsm psr.dt
 
 #define RSM_PSR_BE_I(clob0, clob1)	\
<span class="p_del">-	rsm psr.be | psr.i		\</span>
<span class="p_del">-	CLOBBER(clob0)			\</span>
<span class="p_del">-	CLOBBER(clob1)</span>
<span class="p_add">+	rsm psr.be | psr.i</span>
 
 #define SSM_PSR_DT_AND_SRLZ_I	\
 	ssm psr.dt		\
<span class="p_chunk">@@ -177,15 +121,10 @@</span> <span class="p_context"></span>
 	srlz.i
 
 #define BSW_0(clob0, clob1, clob2)	\
<span class="p_del">-	bsw.0				\</span>
<span class="p_del">-	CLOBBER(clob0)			\</span>
<span class="p_del">-	CLOBBER(clob1)			\</span>
<span class="p_del">-	CLOBBER(clob2)</span>
<span class="p_add">+	bsw.0</span>
 
 #define BSW_1(clob0, clob1)	\
<span class="p_del">-	bsw.1			\</span>
<span class="p_del">-	CLOBBER(clob0)		\</span>
<span class="p_del">-	CLOBBER(clob1)</span>
<span class="p_add">+	bsw.1</span>
 
 #define COVER	\
 	cover
<span class="p_header">diff --git a/arch/ia64/include/asm/native/pvchk_inst.h b/arch/ia64/include/asm/native/pvchk_inst.h</span>
deleted file mode 100644
<span class="p_header">index 8d72962..0000000</span>
<span class="p_header">--- a/arch/ia64/include/asm/native/pvchk_inst.h</span>
<span class="p_header">+++ /dev/null</span>
<span class="p_chunk">@@ -1,271 +0,0 @@</span> <span class="p_context"></span>
<span class="p_del">-#ifndef _ASM_NATIVE_PVCHK_INST_H</span>
<span class="p_del">-#define _ASM_NATIVE_PVCHK_INST_H</span>
<span class="p_del">-</span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * arch/ia64/include/asm/native/pvchk_inst.h</span>
<span class="p_del">- * Checker for paravirtualizations of privileged operations.</span>
<span class="p_del">- *</span>
<span class="p_del">- * Copyright (C) 2005 Hewlett-Packard Co</span>
<span class="p_del">- *      Dan Magenheimer &lt;dan.magenheimer@hp.com&gt;</span>
<span class="p_del">- *</span>
<span class="p_del">- * Copyright (c) 2008 Isaku Yamahata &lt;yamahata at valinux co jp&gt;</span>
<span class="p_del">- *                    VA Linux Systems Japan K.K.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is free software; you can redistribute it and/or modify</span>
<span class="p_del">- * it under the terms of the GNU General Public License as published by</span>
<span class="p_del">- * the Free Software Foundation; either version 2 of the License, or</span>
<span class="p_del">- * (at your option) any later version.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is distributed in the hope that it will be useful,</span>
<span class="p_del">- * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<span class="p_del">- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<span class="p_del">- * GNU General Public License for more details.</span>
<span class="p_del">- *</span>
<span class="p_del">- * You should have received a copy of the GNU General Public License</span>
<span class="p_del">- * along with this program; if not, write to the Free Software</span>
<span class="p_del">- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>
<span class="p_del">- *</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-/**********************************************</span>
<span class="p_del">- * Instructions paravirtualized for correctness</span>
<span class="p_del">- **********************************************/</span>
<span class="p_del">-</span>
<span class="p_del">-/* &quot;fc&quot; and &quot;thash&quot; are privilege-sensitive instructions, meaning they</span>
<span class="p_del">- *  may have different semantics depending on whether they are executed</span>
<span class="p_del">- *  at PL0 vs PL!=0.  When paravirtualized, these instructions mustn&#39;t</span>
<span class="p_del">- *  be allowed to execute directly, lest incorrect semantics result.</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-#define fc	.error &quot;fc should not be used directly.&quot;</span>
<span class="p_del">-#define thash	.error &quot;thash should not be used directly.&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-/* Note that &quot;ttag&quot; and &quot;cover&quot; are also privilege-sensitive; &quot;ttag&quot;</span>
<span class="p_del">- * is not currently used (though it may be in a long-format VHPT system!)</span>
<span class="p_del">- * and the semantics of cover only change if psr.ic is off which is very</span>
<span class="p_del">- * rare (and currently non-existent outside of assembly code</span>
<span class="p_del">- */</span>
<span class="p_del">-#define ttag	.error &quot;ttag should not be used directly.&quot;</span>
<span class="p_del">-#define cover	.error &quot;cover should not be used directly.&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-/* There are also privilege-sensitive registers.  These registers are</span>
<span class="p_del">- * readable at any privilege level but only writable at PL0.</span>
<span class="p_del">- */</span>
<span class="p_del">-#define cpuid	.error &quot;cpuid should not be used directly.&quot;</span>
<span class="p_del">-#define pmd	.error &quot;pmd should not be used directly.&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-/*</span>
<span class="p_del">- * mov ar.eflag =</span>
<span class="p_del">- * mov = ar.eflag</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-/**********************************************</span>
<span class="p_del">- * Instructions paravirtualized for performance</span>
<span class="p_del">- **********************************************/</span>
<span class="p_del">-/*</span>
<span class="p_del">- * Those instructions include &#39;.&#39; which can&#39;t be handled by cpp.</span>
<span class="p_del">- * or can&#39;t be handled by cpp easily.</span>
<span class="p_del">- * They are handled by sed instead of cpp.</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-/* for .S</span>
<span class="p_del">- * itc.i</span>
<span class="p_del">- * itc.d</span>
<span class="p_del">- *</span>
<span class="p_del">- * bsw.0</span>
<span class="p_del">- * bsw.1</span>
<span class="p_del">- *</span>
<span class="p_del">- * ssm psr.ic | PSR_DEFAULT_BITS</span>
<span class="p_del">- * ssm psr.ic</span>
<span class="p_del">- * rsm psr.ic</span>
<span class="p_del">- * ssm psr.i</span>
<span class="p_del">- * rsm psr.i</span>
<span class="p_del">- * rsm psr.i | psr.ic</span>
<span class="p_del">- * rsm psr.dt</span>
<span class="p_del">- * ssm psr.dt</span>
<span class="p_del">- *</span>
<span class="p_del">- * mov = cr.ifa</span>
<span class="p_del">- * mov = cr.itir</span>
<span class="p_del">- * mov = cr.isr</span>
<span class="p_del">- * mov = cr.iha</span>
<span class="p_del">- * mov = cr.ipsr</span>
<span class="p_del">- * mov = cr.iim</span>
<span class="p_del">- * mov = cr.iip</span>
<span class="p_del">- * mov = cr.ivr</span>
<span class="p_del">- * mov = psr</span>
<span class="p_del">- *</span>
<span class="p_del">- * mov cr.ifa =</span>
<span class="p_del">- * mov cr.itir =</span>
<span class="p_del">- * mov cr.iha =</span>
<span class="p_del">- * mov cr.ipsr =</span>
<span class="p_del">- * mov cr.ifs =</span>
<span class="p_del">- * mov cr.iip =</span>
<span class="p_del">- * mov cr.kr =</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-/* for intrinsics</span>
<span class="p_del">- * ssm psr.i</span>
<span class="p_del">- * rsm psr.i</span>
<span class="p_del">- * mov = psr</span>
<span class="p_del">- * mov = ivr</span>
<span class="p_del">- * mov = tpr</span>
<span class="p_del">- * mov cr.itm =</span>
<span class="p_del">- * mov eoi =</span>
<span class="p_del">- * mov rr[] =</span>
<span class="p_del">- * mov = rr[]</span>
<span class="p_del">- * mov = kr</span>
<span class="p_del">- * mov kr =</span>
<span class="p_del">- * ptc.ga</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-/*************************************************************</span>
<span class="p_del">- * define paravirtualized instrcution macros as nop to ingore.</span>
<span class="p_del">- * and check whether arguments are appropriate.</span>
<span class="p_del">- *************************************************************/</span>
<span class="p_del">-</span>
<span class="p_del">-/* check whether reg is a regular register */</span>
<span class="p_del">-.macro is_rreg_in reg</span>
<span class="p_del">-	.ifc &quot;\reg&quot;, &quot;r0&quot;</span>
<span class="p_del">-		nop 0</span>
<span class="p_del">-		.exitm</span>
<span class="p_del">-	.endif</span>
<span class="p_del">-	;;</span>
<span class="p_del">-	mov \reg = r0</span>
<span class="p_del">-	;;</span>
<span class="p_del">-.endm</span>
<span class="p_del">-#define IS_RREG_IN(reg)	is_rreg_in reg ;</span>
<span class="p_del">-</span>
<span class="p_del">-#define IS_RREG_OUT(reg)			\</span>
<span class="p_del">-	;;					\</span>
<span class="p_del">-	mov reg = r0				\</span>
<span class="p_del">-	;;</span>
<span class="p_del">-</span>
<span class="p_del">-#define IS_RREG_CLOB(reg)	IS_RREG_OUT(reg)</span>
<span class="p_del">-</span>
<span class="p_del">-/* check whether pred is a predicate register */</span>
<span class="p_del">-#define IS_PRED_IN(pred)			\</span>
<span class="p_del">-	;;					\</span>
<span class="p_del">-	(pred)	nop 0				\</span>
<span class="p_del">-	;;</span>
<span class="p_del">-</span>
<span class="p_del">-#define IS_PRED_OUT(pred)			\</span>
<span class="p_del">-	;;					\</span>
<span class="p_del">-	cmp.eq pred, p0 = r0, r0		\</span>
<span class="p_del">-	;;</span>
<span class="p_del">-</span>
<span class="p_del">-#define IS_PRED_CLOB(pred)	IS_PRED_OUT(pred)</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
<span class="p_del">-#define DO_SAVE_MIN(__COVER, SAVE_IFS, EXTRA, WORKAROUND)	\</span>
<span class="p_del">-	nop 0</span>
<span class="p_del">-#define MOV_FROM_IFA(reg)			\</span>
<span class="p_del">-	IS_RREG_OUT(reg)</span>
<span class="p_del">-#define MOV_FROM_ITIR(reg)			\</span>
<span class="p_del">-	IS_RREG_OUT(reg)</span>
<span class="p_del">-#define MOV_FROM_ISR(reg)			\</span>
<span class="p_del">-	IS_RREG_OUT(reg)</span>
<span class="p_del">-#define MOV_FROM_IHA(reg)			\</span>
<span class="p_del">-	IS_RREG_OUT(reg)</span>
<span class="p_del">-#define MOV_FROM_IPSR(pred, reg)		\</span>
<span class="p_del">-	IS_PRED_IN(pred)			\</span>
<span class="p_del">-	IS_RREG_OUT(reg)</span>
<span class="p_del">-#define MOV_FROM_IIM(reg)			\</span>
<span class="p_del">-	IS_RREG_OUT(reg)</span>
<span class="p_del">-#define MOV_FROM_IIP(reg)			\</span>
<span class="p_del">-	IS_RREG_OUT(reg)</span>
<span class="p_del">-#define MOV_FROM_IVR(reg, clob)			\</span>
<span class="p_del">-	IS_RREG_OUT(reg)			\</span>
<span class="p_del">-	IS_RREG_CLOB(clob)</span>
<span class="p_del">-#define MOV_FROM_PSR(pred, reg, clob)		\</span>
<span class="p_del">-	IS_PRED_IN(pred)			\</span>
<span class="p_del">-	IS_RREG_OUT(reg)			\</span>
<span class="p_del">-	IS_RREG_CLOB(clob)</span>
<span class="p_del">-#define MOV_FROM_ITC(pred, pred_clob, reg, clob)	\</span>
<span class="p_del">-	IS_PRED_IN(pred)				\</span>
<span class="p_del">-	IS_PRED_CLOB(pred_clob)				\</span>
<span class="p_del">-	IS_RREG_OUT(reg)				\</span>
<span class="p_del">-	IS_RREG_CLOB(clob)</span>
<span class="p_del">-#define MOV_TO_IFA(reg, clob)			\</span>
<span class="p_del">-	IS_RREG_IN(reg)				\</span>
<span class="p_del">-	IS_RREG_CLOB(clob)</span>
<span class="p_del">-#define MOV_TO_ITIR(pred, reg, clob)		\</span>
<span class="p_del">-	IS_PRED_IN(pred)			\</span>
<span class="p_del">-	IS_RREG_IN(reg)				\</span>
<span class="p_del">-	IS_RREG_CLOB(clob)</span>
<span class="p_del">-#define MOV_TO_IHA(pred, reg, clob)		\</span>
<span class="p_del">-	IS_PRED_IN(pred)			\</span>
<span class="p_del">-	IS_RREG_IN(reg)				\</span>
<span class="p_del">-	IS_RREG_CLOB(clob)</span>
<span class="p_del">-#define MOV_TO_IPSR(pred, reg, clob)		\</span>
<span class="p_del">-	IS_PRED_IN(pred)			\</span>
<span class="p_del">-	IS_RREG_IN(reg)				\</span>
<span class="p_del">-	IS_RREG_CLOB(clob)</span>
<span class="p_del">-#define MOV_TO_IFS(pred, reg, clob)		\</span>
<span class="p_del">-	IS_PRED_IN(pred)			\</span>
<span class="p_del">-	IS_RREG_IN(reg)				\</span>
<span class="p_del">-	IS_RREG_CLOB(clob)</span>
<span class="p_del">-#define MOV_TO_IIP(reg, clob)			\</span>
<span class="p_del">-	IS_RREG_IN(reg)				\</span>
<span class="p_del">-	IS_RREG_CLOB(clob)</span>
<span class="p_del">-#define MOV_TO_KR(kr, reg, clob0, clob1)	\</span>
<span class="p_del">-	IS_RREG_IN(reg)				\</span>
<span class="p_del">-	IS_RREG_CLOB(clob0)			\</span>
<span class="p_del">-	IS_RREG_CLOB(clob1)</span>
<span class="p_del">-#define ITC_I(pred, reg, clob)			\</span>
<span class="p_del">-	IS_PRED_IN(pred)			\</span>
<span class="p_del">-	IS_RREG_IN(reg)				\</span>
<span class="p_del">-	IS_RREG_CLOB(clob)</span>
<span class="p_del">-#define ITC_D(pred, reg, clob)			\</span>
<span class="p_del">-	IS_PRED_IN(pred)			\</span>
<span class="p_del">-	IS_RREG_IN(reg)				\</span>
<span class="p_del">-	IS_RREG_CLOB(clob)</span>
<span class="p_del">-#define ITC_I_AND_D(pred_i, pred_d, reg, clob)	\</span>
<span class="p_del">-	IS_PRED_IN(pred_i)			\</span>
<span class="p_del">-	IS_PRED_IN(pred_d)			\</span>
<span class="p_del">-	IS_RREG_IN(reg)				\</span>
<span class="p_del">-	IS_RREG_CLOB(clob)</span>
<span class="p_del">-#define THASH(pred, reg0, reg1, clob)		\</span>
<span class="p_del">-	IS_PRED_IN(pred)			\</span>
<span class="p_del">-	IS_RREG_OUT(reg0)			\</span>
<span class="p_del">-	IS_RREG_IN(reg1)			\</span>
<span class="p_del">-	IS_RREG_CLOB(clob)</span>
<span class="p_del">-#define SSM_PSR_IC_AND_DEFAULT_BITS_AND_SRLZ_I(clob0, clob1)	\</span>
<span class="p_del">-	IS_RREG_CLOB(clob0)					\</span>
<span class="p_del">-	IS_RREG_CLOB(clob1)</span>
<span class="p_del">-#define SSM_PSR_IC_AND_SRLZ_D(clob0, clob1)	\</span>
<span class="p_del">-	IS_RREG_CLOB(clob0)			\</span>
<span class="p_del">-	IS_RREG_CLOB(clob1)</span>
<span class="p_del">-#define RSM_PSR_IC(clob)			\</span>
<span class="p_del">-	IS_RREG_CLOB(clob)</span>
<span class="p_del">-#define SSM_PSR_I(pred, pred_clob, clob)	\</span>
<span class="p_del">-	IS_PRED_IN(pred)			\</span>
<span class="p_del">-	IS_PRED_CLOB(pred_clob)			\</span>
<span class="p_del">-	IS_RREG_CLOB(clob)</span>
<span class="p_del">-#define RSM_PSR_I(pred, clob0, clob1)		\</span>
<span class="p_del">-	IS_PRED_IN(pred)			\</span>
<span class="p_del">-	IS_RREG_CLOB(clob0)			\</span>
<span class="p_del">-	IS_RREG_CLOB(clob1)</span>
<span class="p_del">-#define RSM_PSR_I_IC(clob0, clob1, clob2)	\</span>
<span class="p_del">-	IS_RREG_CLOB(clob0)			\</span>
<span class="p_del">-	IS_RREG_CLOB(clob1)			\</span>
<span class="p_del">-	IS_RREG_CLOB(clob2)</span>
<span class="p_del">-#define RSM_PSR_DT				\</span>
<span class="p_del">-	nop 0</span>
<span class="p_del">-#define RSM_PSR_BE_I(clob0, clob1)		\</span>
<span class="p_del">-	IS_RREG_CLOB(clob0)			\</span>
<span class="p_del">-	IS_RREG_CLOB(clob1)</span>
<span class="p_del">-#define SSM_PSR_DT_AND_SRLZ_I			\</span>
<span class="p_del">-	nop 0</span>
<span class="p_del">-#define BSW_0(clob0, clob1, clob2)		\</span>
<span class="p_del">-	IS_RREG_CLOB(clob0)			\</span>
<span class="p_del">-	IS_RREG_CLOB(clob1)			\</span>
<span class="p_del">-	IS_RREG_CLOB(clob2)</span>
<span class="p_del">-#define BSW_1(clob0, clob1)			\</span>
<span class="p_del">-	IS_RREG_CLOB(clob0)			\</span>
<span class="p_del">-	IS_RREG_CLOB(clob1)</span>
<span class="p_del">-#define COVER					\</span>
<span class="p_del">-	nop 0</span>
<span class="p_del">-#define RFI					\</span>
<span class="p_del">-	br.ret.sptk.many rp /* defining nop causes dependency error */</span>
<span class="p_del">-</span>
<span class="p_del">-#endif /* _ASM_NATIVE_PVCHK_INST_H */</span>
<span class="p_header">diff --git a/arch/ia64/include/asm/paravirt.h b/arch/ia64/include/asm/paravirt.h</span>
deleted file mode 100644
<span class="p_header">index b53518a..0000000</span>
<span class="p_header">--- a/arch/ia64/include/asm/paravirt.h</span>
<span class="p_header">+++ /dev/null</span>
<span class="p_chunk">@@ -1,321 +0,0 @@</span> <span class="p_context"></span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * Copyright (c) 2008 Isaku Yamahata &lt;yamahata at valinux co jp&gt;</span>
<span class="p_del">- *                    VA Linux Systems Japan K.K.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is free software; you can redistribute it and/or modify</span>
<span class="p_del">- * it under the terms of the GNU General Public License as published by</span>
<span class="p_del">- * the Free Software Foundation; either version 2 of the License, or</span>
<span class="p_del">- * (at your option) any later version.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is distributed in the hope that it will be useful,</span>
<span class="p_del">- * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<span class="p_del">- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<span class="p_del">- * GNU General Public License for more details.</span>
<span class="p_del">- *</span>
<span class="p_del">- * You should have received a copy of the GNU General Public License</span>
<span class="p_del">- * along with this program; if not, write to the Free Software</span>
<span class="p_del">- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>
<span class="p_del">- *</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
<span class="p_del">-#ifndef __ASM_PARAVIRT_H</span>
<span class="p_del">-#define __ASM_PARAVIRT_H</span>
<span class="p_del">-</span>
<span class="p_del">-#ifndef __ASSEMBLY__</span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * fsys related addresses</span>
<span class="p_del">- */</span>
<span class="p_del">-struct pv_fsys_data {</span>
<span class="p_del">-	unsigned long *fsyscall_table;</span>
<span class="p_del">-	void *fsys_bubble_down;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-extern struct pv_fsys_data pv_fsys_data;</span>
<span class="p_del">-</span>
<span class="p_del">-unsigned long *paravirt_get_fsyscall_table(void);</span>
<span class="p_del">-char *paravirt_get_fsys_bubble_down(void);</span>
<span class="p_del">-</span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * patchlist addresses for gate page</span>
<span class="p_del">- */</span>
<span class="p_del">-enum pv_gate_patchlist {</span>
<span class="p_del">-	PV_GATE_START_FSYSCALL,</span>
<span class="p_del">-	PV_GATE_END_FSYSCALL,</span>
<span class="p_del">-</span>
<span class="p_del">-	PV_GATE_START_BRL_FSYS_BUBBLE_DOWN,</span>
<span class="p_del">-	PV_GATE_END_BRL_FSYS_BUBBLE_DOWN,</span>
<span class="p_del">-</span>
<span class="p_del">-	PV_GATE_START_VTOP,</span>
<span class="p_del">-	PV_GATE_END_VTOP,</span>
<span class="p_del">-</span>
<span class="p_del">-	PV_GATE_START_MCKINLEY_E9,</span>
<span class="p_del">-	PV_GATE_END_MCKINLEY_E9,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-struct pv_patchdata {</span>
<span class="p_del">-	unsigned long start_fsyscall_patchlist;</span>
<span class="p_del">-	unsigned long end_fsyscall_patchlist;</span>
<span class="p_del">-	unsigned long start_brl_fsys_bubble_down_patchlist;</span>
<span class="p_del">-	unsigned long end_brl_fsys_bubble_down_patchlist;</span>
<span class="p_del">-	unsigned long start_vtop_patchlist;</span>
<span class="p_del">-	unsigned long end_vtop_patchlist;</span>
<span class="p_del">-	unsigned long start_mckinley_e9_patchlist;</span>
<span class="p_del">-	unsigned long end_mckinley_e9_patchlist;</span>
<span class="p_del">-</span>
<span class="p_del">-	void *gate_section;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-extern struct pv_patchdata pv_patchdata;</span>
<span class="p_del">-</span>
<span class="p_del">-unsigned long paravirt_get_gate_patchlist(enum pv_gate_patchlist type);</span>
<span class="p_del">-void *paravirt_get_gate_section(void);</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef CONFIG_PARAVIRT_GUEST</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_HYPERVISOR_TYPE_DEFAULT	0</span>
<span class="p_del">-</span>
<span class="p_del">-#ifndef __ASSEMBLY__</span>
<span class="p_del">-</span>
<span class="p_del">-#include &lt;asm/hw_irq.h&gt;</span>
<span class="p_del">-#include &lt;asm/meminit.h&gt;</span>
<span class="p_del">-</span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * general info</span>
<span class="p_del">- */</span>
<span class="p_del">-struct pv_info {</span>
<span class="p_del">-	unsigned int kernel_rpl;</span>
<span class="p_del">-	int paravirt_enabled;</span>
<span class="p_del">-	const char *name;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-extern struct pv_info pv_info;</span>
<span class="p_del">-</span>
<span class="p_del">-static inline int paravirt_enabled(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return pv_info.paravirt_enabled;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline unsigned int get_kernel_rpl(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return pv_info.kernel_rpl;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * initialization hooks.</span>
<span class="p_del">- */</span>
<span class="p_del">-struct rsvd_region;</span>
<span class="p_del">-</span>
<span class="p_del">-struct pv_init_ops {</span>
<span class="p_del">-	void (*banner)(void);</span>
<span class="p_del">-</span>
<span class="p_del">-	int (*reserve_memory)(struct rsvd_region *region);</span>
<span class="p_del">-</span>
<span class="p_del">-	void (*arch_setup_early)(void);</span>
<span class="p_del">-	void (*arch_setup_console)(char **cmdline_p);</span>
<span class="p_del">-	int (*arch_setup_nomca)(void);</span>
<span class="p_del">-</span>
<span class="p_del">-	void (*post_smp_prepare_boot_cpu)(void);</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef ASM_SUPPORTED</span>
<span class="p_del">-	unsigned long (*patch_bundle)(void *sbundle, void *ebundle,</span>
<span class="p_del">-				      unsigned long type);</span>
<span class="p_del">-	unsigned long (*patch_inst)(unsigned long stag, unsigned long etag,</span>
<span class="p_del">-				    unsigned long type);</span>
<span class="p_del">-#endif</span>
<span class="p_del">-	void (*patch_branch)(unsigned long tag, unsigned long type);</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-extern struct pv_init_ops pv_init_ops;</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void paravirt_banner(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (pv_init_ops.banner)</span>
<span class="p_del">-		pv_init_ops.banner();</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline int paravirt_reserve_memory(struct rsvd_region *region)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (pv_init_ops.reserve_memory)</span>
<span class="p_del">-		return pv_init_ops.reserve_memory(region);</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void paravirt_arch_setup_early(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (pv_init_ops.arch_setup_early)</span>
<span class="p_del">-		pv_init_ops.arch_setup_early();</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void paravirt_arch_setup_console(char **cmdline_p)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (pv_init_ops.arch_setup_console)</span>
<span class="p_del">-		pv_init_ops.arch_setup_console(cmdline_p);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline int paravirt_arch_setup_nomca(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (pv_init_ops.arch_setup_nomca)</span>
<span class="p_del">-		return pv_init_ops.arch_setup_nomca();</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void paravirt_post_smp_prepare_boot_cpu(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (pv_init_ops.post_smp_prepare_boot_cpu)</span>
<span class="p_del">-		pv_init_ops.post_smp_prepare_boot_cpu();</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * replacement of iosapic operations.</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-struct pv_iosapic_ops {</span>
<span class="p_del">-	void (*pcat_compat_init)(void);</span>
<span class="p_del">-</span>
<span class="p_del">-	struct irq_chip *(*__get_irq_chip)(unsigned long trigger);</span>
<span class="p_del">-</span>
<span class="p_del">-	unsigned int (*__read)(char __iomem *iosapic, unsigned int reg);</span>
<span class="p_del">-	void (*__write)(char __iomem *iosapic, unsigned int reg, u32 val);</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-extern struct pv_iosapic_ops pv_iosapic_ops;</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void</span>
<span class="p_del">-iosapic_pcat_compat_init(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (pv_iosapic_ops.pcat_compat_init)</span>
<span class="p_del">-		pv_iosapic_ops.pcat_compat_init();</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline struct irq_chip*</span>
<span class="p_del">-iosapic_get_irq_chip(unsigned long trigger)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return pv_iosapic_ops.__get_irq_chip(trigger);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline unsigned int</span>
<span class="p_del">-__iosapic_read(char __iomem *iosapic, unsigned int reg)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return pv_iosapic_ops.__read(iosapic, reg);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void</span>
<span class="p_del">-__iosapic_write(char __iomem *iosapic, unsigned int reg, u32 val)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return pv_iosapic_ops.__write(iosapic, reg, val);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * replacement of irq operations.</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-struct pv_irq_ops {</span>
<span class="p_del">-	void (*register_ipi)(void);</span>
<span class="p_del">-</span>
<span class="p_del">-	int (*assign_irq_vector)(int irq);</span>
<span class="p_del">-	void (*free_irq_vector)(int vector);</span>
<span class="p_del">-</span>
<span class="p_del">-	void (*register_percpu_irq)(ia64_vector vec,</span>
<span class="p_del">-				    struct irqaction *action);</span>
<span class="p_del">-</span>
<span class="p_del">-	void (*resend_irq)(unsigned int vector);</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-extern struct pv_irq_ops pv_irq_ops;</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void</span>
<span class="p_del">-ia64_register_ipi(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	pv_irq_ops.register_ipi();</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline int</span>
<span class="p_del">-assign_irq_vector(int irq)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return pv_irq_ops.assign_irq_vector(irq);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void</span>
<span class="p_del">-free_irq_vector(int vector)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return pv_irq_ops.free_irq_vector(vector);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void</span>
<span class="p_del">-register_percpu_irq(ia64_vector vec, struct irqaction *action)</span>
<span class="p_del">-{</span>
<span class="p_del">-	pv_irq_ops.register_percpu_irq(vec, action);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void</span>
<span class="p_del">-ia64_resend_irq(unsigned int vector)</span>
<span class="p_del">-{</span>
<span class="p_del">-	pv_irq_ops.resend_irq(vector);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * replacement of time operations.</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-extern struct itc_jitter_data_t itc_jitter_data;</span>
<span class="p_del">-extern volatile int time_keeper_id;</span>
<span class="p_del">-</span>
<span class="p_del">-struct pv_time_ops {</span>
<span class="p_del">-	void (*init_missing_ticks_accounting)(int cpu);</span>
<span class="p_del">-	int (*do_steal_accounting)(unsigned long *new_itm);</span>
<span class="p_del">-</span>
<span class="p_del">-	void (*clocksource_resume)(void);</span>
<span class="p_del">-</span>
<span class="p_del">-	unsigned long long (*sched_clock)(void);</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-extern struct pv_time_ops pv_time_ops;</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void</span>
<span class="p_del">-paravirt_init_missing_ticks_accounting(int cpu)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (pv_time_ops.init_missing_ticks_accounting)</span>
<span class="p_del">-		pv_time_ops.init_missing_ticks_accounting(cpu);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-struct static_key;</span>
<span class="p_del">-extern struct static_key paravirt_steal_enabled;</span>
<span class="p_del">-extern struct static_key paravirt_steal_rq_enabled;</span>
<span class="p_del">-</span>
<span class="p_del">-static inline int</span>
<span class="p_del">-paravirt_do_steal_accounting(unsigned long *new_itm)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return pv_time_ops.do_steal_accounting(new_itm);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline unsigned long long paravirt_sched_clock(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return pv_time_ops.sched_clock();</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-#endif /* !__ASSEMBLY__ */</span>
<span class="p_del">-</span>
<span class="p_del">-#else</span>
<span class="p_del">-/* fallback for native case */</span>
<span class="p_del">-</span>
<span class="p_del">-#ifndef __ASSEMBLY__</span>
<span class="p_del">-</span>
<span class="p_del">-#define paravirt_banner()				do { } while (0)</span>
<span class="p_del">-#define paravirt_reserve_memory(region)			0</span>
<span class="p_del">-</span>
<span class="p_del">-#define paravirt_arch_setup_early()			do { } while (0)</span>
<span class="p_del">-#define paravirt_arch_setup_console(cmdline_p)		do { } while (0)</span>
<span class="p_del">-#define paravirt_arch_setup_nomca()			0</span>
<span class="p_del">-#define paravirt_post_smp_prepare_boot_cpu()		do { } while (0)</span>
<span class="p_del">-</span>
<span class="p_del">-#define paravirt_init_missing_ticks_accounting(cpu)	do { } while (0)</span>
<span class="p_del">-#define paravirt_do_steal_accounting(new_itm)		0</span>
<span class="p_del">-</span>
<span class="p_del">-#endif /* __ASSEMBLY__ */</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
<span class="p_del">-#endif /* CONFIG_PARAVIRT_GUEST */</span>
<span class="p_del">-</span>
<span class="p_del">-#endif /* __ASM_PARAVIRT_H */</span>
<span class="p_header">diff --git a/arch/ia64/include/asm/paravirt_patch.h b/arch/ia64/include/asm/paravirt_patch.h</span>
deleted file mode 100644
<span class="p_header">index 128ff5d..0000000</span>
<span class="p_header">--- a/arch/ia64/include/asm/paravirt_patch.h</span>
<span class="p_header">+++ /dev/null</span>
<span class="p_chunk">@@ -1,143 +0,0 @@</span> <span class="p_context"></span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * Copyright (c) 2008 Isaku Yamahata &lt;yamahata at valinux co jp&gt;</span>
<span class="p_del">- *                    VA Linux Systems Japan K.K.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is free software; you can redistribute it and/or modify</span>
<span class="p_del">- * it under the terms of the GNU General Public License as published by</span>
<span class="p_del">- * the Free Software Foundation; either version 2 of the License, or</span>
<span class="p_del">- * (at your option) any later version.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is distributed in the hope that it will be useful,</span>
<span class="p_del">- * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<span class="p_del">- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<span class="p_del">- * GNU General Public License for more details.</span>
<span class="p_del">- *</span>
<span class="p_del">- * You should have received a copy of the GNU General Public License</span>
<span class="p_del">- * along with this program; if not, write to the Free Software</span>
<span class="p_del">- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>
<span class="p_del">- *</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-#ifndef __ASM_PARAVIRT_PATCH_H</span>
<span class="p_del">-#define __ASM_PARAVIRT_PATCH_H</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef __ASSEMBLY__</span>
<span class="p_del">-</span>
<span class="p_del">-	.section .paravirt_branches, &quot;a&quot;</span>
<span class="p_del">-	.previous</span>
<span class="p_del">-#define PARAVIRT_PATCH_SITE_BR(type)		\</span>
<span class="p_del">-	{					\</span>
<span class="p_del">-	[1:] ;					\</span>
<span class="p_del">-	br.cond.sptk.many 2f ;			\</span>
<span class="p_del">-	nop.b 0 ;				\</span>
<span class="p_del">-	nop.b 0;; ;				\</span>
<span class="p_del">-	} ;					\</span>
<span class="p_del">-	2:					\</span>
<span class="p_del">-	.xdata8 &quot;.paravirt_branches&quot;, 1b, type</span>
<span class="p_del">-</span>
<span class="p_del">-#else</span>
<span class="p_del">-</span>
<span class="p_del">-#include &lt;linux/stringify.h&gt;</span>
<span class="p_del">-#include &lt;asm/intrinsics.h&gt;</span>
<span class="p_del">-</span>
<span class="p_del">-/* for binary patch */</span>
<span class="p_del">-struct paravirt_patch_site_bundle {</span>
<span class="p_del">-	void		*sbundle;</span>
<span class="p_del">-	void		*ebundle;</span>
<span class="p_del">-	unsigned long	type;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-/* label means the beginning of new bundle */</span>
<span class="p_del">-#define paravirt_alt_bundle(instr, privop)				\</span>
<span class="p_del">-	&quot;\t998:\n&quot;							\</span>
<span class="p_del">-	&quot;\t&quot; instr &quot;\n&quot;							\</span>
<span class="p_del">-	&quot;\t999:\n&quot;							\</span>
<span class="p_del">-	&quot;\t.pushsection .paravirt_bundles, \&quot;a\&quot;\n&quot;			\</span>
<span class="p_del">-	&quot;\t.popsection\n&quot;						\</span>
<span class="p_del">-	&quot;\t.xdata8 \&quot;.paravirt_bundles\&quot;, 998b, 999b, &quot;			\</span>
<span class="p_del">-	__stringify(privop) &quot;\n&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
<span class="p_del">-struct paravirt_patch_bundle_elem {</span>
<span class="p_del">-	const void	*sbundle;</span>
<span class="p_del">-	const void	*ebundle;</span>
<span class="p_del">-	unsigned long	type;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
<span class="p_del">-struct paravirt_patch_site_inst {</span>
<span class="p_del">-	unsigned long	stag;</span>
<span class="p_del">-	unsigned long	etag;</span>
<span class="p_del">-	unsigned long	type;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-#define paravirt_alt_inst(instr, privop)				\</span>
<span class="p_del">-	&quot;\t[998:]\n&quot;							\</span>
<span class="p_del">-	&quot;\t&quot; instr &quot;\n&quot;							\</span>
<span class="p_del">-	&quot;\t[999:]\n&quot;							\</span>
<span class="p_del">-	&quot;\t.pushsection .paravirt_insts, \&quot;a\&quot;\n&quot;			\</span>
<span class="p_del">-	&quot;\t.popsection\n&quot;						\</span>
<span class="p_del">-	&quot;\t.xdata8 \&quot;.paravirt_insts\&quot;, 998b, 999b, &quot;			\</span>
<span class="p_del">-	__stringify(privop) &quot;\n&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-struct paravirt_patch_site_branch {</span>
<span class="p_del">-	unsigned long	tag;</span>
<span class="p_del">-	unsigned long	type;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-struct paravirt_patch_branch_target {</span>
<span class="p_del">-	const void	*entry;</span>
<span class="p_del">-	unsigned long	type;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-void</span>
<span class="p_del">-__paravirt_patch_apply_branch(</span>
<span class="p_del">-	unsigned long tag, unsigned long type,</span>
<span class="p_del">-	const struct paravirt_patch_branch_target *entries,</span>
<span class="p_del">-	unsigned int nr_entries);</span>
<span class="p_del">-</span>
<span class="p_del">-void</span>
<span class="p_del">-paravirt_patch_reloc_br(unsigned long tag, const void *target);</span>
<span class="p_del">-</span>
<span class="p_del">-void</span>
<span class="p_del">-paravirt_patch_reloc_brl(unsigned long tag, const void *target);</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
<span class="p_del">-#if defined(ASM_SUPPORTED) &amp;&amp; defined(CONFIG_PARAVIRT)</span>
<span class="p_del">-unsigned long</span>
<span class="p_del">-ia64_native_patch_bundle(void *sbundle, void *ebundle, unsigned long type);</span>
<span class="p_del">-</span>
<span class="p_del">-unsigned long</span>
<span class="p_del">-__paravirt_patch_apply_bundle(void *sbundle, void *ebundle, unsigned long type,</span>
<span class="p_del">-			      const struct paravirt_patch_bundle_elem *elems,</span>
<span class="p_del">-			      unsigned long nelems,</span>
<span class="p_del">-			      const struct paravirt_patch_bundle_elem **found);</span>
<span class="p_del">-</span>
<span class="p_del">-void</span>
<span class="p_del">-paravirt_patch_apply_bundle(const struct paravirt_patch_site_bundle *start,</span>
<span class="p_del">-			    const struct paravirt_patch_site_bundle *end);</span>
<span class="p_del">-</span>
<span class="p_del">-void</span>
<span class="p_del">-paravirt_patch_apply_inst(const struct paravirt_patch_site_inst *start,</span>
<span class="p_del">-			  const struct paravirt_patch_site_inst *end);</span>
<span class="p_del">-</span>
<span class="p_del">-void paravirt_patch_apply(void);</span>
<span class="p_del">-#else</span>
<span class="p_del">-#define paravirt_patch_apply_bundle(start, end)	do { } while (0)</span>
<span class="p_del">-#define paravirt_patch_apply_inst(start, end)	do { } while (0)</span>
<span class="p_del">-#define paravirt_patch_apply()			do { } while (0)</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
<span class="p_del">-#endif /* !__ASSEMBLEY__ */</span>
<span class="p_del">-</span>
<span class="p_del">-#endif /* __ASM_PARAVIRT_PATCH_H */</span>
<span class="p_del">-</span>
<span class="p_del">-/*</span>
<span class="p_del">- * Local variables:</span>
<span class="p_del">- * mode: C</span>
<span class="p_del">- * c-set-style: &quot;linux&quot;</span>
<span class="p_del">- * c-basic-offset: 8</span>
<span class="p_del">- * tab-width: 8</span>
<span class="p_del">- * indent-tabs-mode: t</span>
<span class="p_del">- * End:</span>
<span class="p_del">- */</span>
<span class="p_header">diff --git a/arch/ia64/include/asm/paravirt_privop.h b/arch/ia64/include/asm/paravirt_privop.h</span>
deleted file mode 100644
<span class="p_header">index 8f6cb11..0000000</span>
<span class="p_header">--- a/arch/ia64/include/asm/paravirt_privop.h</span>
<span class="p_header">+++ /dev/null</span>
<span class="p_chunk">@@ -1,479 +0,0 @@</span> <span class="p_context"></span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * Copyright (c) 2008 Isaku Yamahata &lt;yamahata at valinux co jp&gt;</span>
<span class="p_del">- *                    VA Linux Systems Japan K.K.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is free software; you can redistribute it and/or modify</span>
<span class="p_del">- * it under the terms of the GNU General Public License as published by</span>
<span class="p_del">- * the Free Software Foundation; either version 2 of the License, or</span>
<span class="p_del">- * (at your option) any later version.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is distributed in the hope that it will be useful,</span>
<span class="p_del">- * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<span class="p_del">- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<span class="p_del">- * GNU General Public License for more details.</span>
<span class="p_del">- *</span>
<span class="p_del">- * You should have received a copy of the GNU General Public License</span>
<span class="p_del">- * along with this program; if not, write to the Free Software</span>
<span class="p_del">- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>
<span class="p_del">- *</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-#ifndef _ASM_IA64_PARAVIRT_PRIVOP_H</span>
<span class="p_del">-#define _ASM_IA64_PARAVIRT_PRIVOP_H</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef CONFIG_PARAVIRT</span>
<span class="p_del">-</span>
<span class="p_del">-#ifndef __ASSEMBLY__</span>
<span class="p_del">-</span>
<span class="p_del">-#include &lt;linux/types.h&gt;</span>
<span class="p_del">-#include &lt;asm/kregs.h&gt; /* for IA64_PSR_I */</span>
<span class="p_del">-</span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * replacement of intrinsics operations.</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-struct pv_cpu_ops {</span>
<span class="p_del">-	void (*fc)(void *addr);</span>
<span class="p_del">-	unsigned long (*thash)(unsigned long addr);</span>
<span class="p_del">-	unsigned long (*get_cpuid)(int index);</span>
<span class="p_del">-	unsigned long (*get_pmd)(int index);</span>
<span class="p_del">-	unsigned long (*getreg)(int reg);</span>
<span class="p_del">-	void (*setreg)(int reg, unsigned long val);</span>
<span class="p_del">-	void (*ptcga)(unsigned long addr, unsigned long size);</span>
<span class="p_del">-	unsigned long (*get_rr)(unsigned long index);</span>
<span class="p_del">-	void (*set_rr)(unsigned long index, unsigned long val);</span>
<span class="p_del">-	void (*set_rr0_to_rr4)(unsigned long val0, unsigned long val1,</span>
<span class="p_del">-			       unsigned long val2, unsigned long val3,</span>
<span class="p_del">-			       unsigned long val4);</span>
<span class="p_del">-	void (*ssm_i)(void);</span>
<span class="p_del">-	void (*rsm_i)(void);</span>
<span class="p_del">-	unsigned long (*get_psr_i)(void);</span>
<span class="p_del">-	void (*intrin_local_irq_restore)(unsigned long flags);</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-extern struct pv_cpu_ops pv_cpu_ops;</span>
<span class="p_del">-</span>
<span class="p_del">-extern void ia64_native_setreg_func(int regnum, unsigned long val);</span>
<span class="p_del">-extern unsigned long ia64_native_getreg_func(int regnum);</span>
<span class="p_del">-</span>
<span class="p_del">-/************************************************/</span>
<span class="p_del">-/* Instructions paravirtualized for performance */</span>
<span class="p_del">-/************************************************/</span>
<span class="p_del">-</span>
<span class="p_del">-#ifndef ASM_SUPPORTED</span>
<span class="p_del">-#define paravirt_ssm_i()	pv_cpu_ops.ssm_i()</span>
<span class="p_del">-#define paravirt_rsm_i()	pv_cpu_ops.rsm_i()</span>
<span class="p_del">-#define __paravirt_getreg()	pv_cpu_ops.getreg()</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
<span class="p_del">-/* mask for ia64_native_ssm/rsm() must be constant.(&quot;i&quot; constraing).</span>
<span class="p_del">- * static inline function doesn&#39;t satisfy it. */</span>
<span class="p_del">-#define paravirt_ssm(mask)			\</span>
<span class="p_del">-	do {					\</span>
<span class="p_del">-		if ((mask) == IA64_PSR_I)	\</span>
<span class="p_del">-			paravirt_ssm_i();	\</span>
<span class="p_del">-		else				\</span>
<span class="p_del">-			ia64_native_ssm(mask);	\</span>
<span class="p_del">-	} while (0)</span>
<span class="p_del">-</span>
<span class="p_del">-#define paravirt_rsm(mask)			\</span>
<span class="p_del">-	do {					\</span>
<span class="p_del">-		if ((mask) == IA64_PSR_I)	\</span>
<span class="p_del">-			paravirt_rsm_i();	\</span>
<span class="p_del">-		else				\</span>
<span class="p_del">-			ia64_native_rsm(mask);	\</span>
<span class="p_del">-	} while (0)</span>
<span class="p_del">-</span>
<span class="p_del">-/* returned ip value should be the one in the caller,</span>
<span class="p_del">- * not in __paravirt_getreg() */</span>
<span class="p_del">-#define paravirt_getreg(reg)					\</span>
<span class="p_del">-	({							\</span>
<span class="p_del">-		unsigned long res;				\</span>
<span class="p_del">-		if ((reg) == _IA64_REG_IP)			\</span>
<span class="p_del">-			res = ia64_native_getreg(_IA64_REG_IP); \</span>
<span class="p_del">-		else						\</span>
<span class="p_del">-			res = __paravirt_getreg(reg);		\</span>
<span class="p_del">-		res;						\</span>
<span class="p_del">-	})</span>
<span class="p_del">-</span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * replacement of hand written assembly codes.</span>
<span class="p_del">- */</span>
<span class="p_del">-struct pv_cpu_asm_switch {</span>
<span class="p_del">-	unsigned long switch_to;</span>
<span class="p_del">-	unsigned long leave_syscall;</span>
<span class="p_del">-	unsigned long work_processed_syscall;</span>
<span class="p_del">-	unsigned long leave_kernel;</span>
<span class="p_del">-};</span>
<span class="p_del">-void paravirt_cpu_asm_init(const struct pv_cpu_asm_switch *cpu_asm_switch);</span>
<span class="p_del">-</span>
<span class="p_del">-#endif /* __ASSEMBLY__ */</span>
<span class="p_del">-</span>
<span class="p_del">-#define IA64_PARAVIRT_ASM_FUNC(name)	paravirt_ ## name</span>
<span class="p_del">-</span>
<span class="p_del">-#else</span>
<span class="p_del">-</span>
<span class="p_del">-/* fallback for native case */</span>
<span class="p_del">-#define IA64_PARAVIRT_ASM_FUNC(name)	ia64_native_ ## name</span>
<span class="p_del">-</span>
<span class="p_del">-#endif /* CONFIG_PARAVIRT */</span>
<span class="p_del">-</span>
<span class="p_del">-#if defined(CONFIG_PARAVIRT) &amp;&amp; defined(ASM_SUPPORTED)</span>
<span class="p_del">-#define paravirt_dv_serialize_data()	ia64_dv_serialize_data()</span>
<span class="p_del">-#else</span>
<span class="p_del">-#define paravirt_dv_serialize_data()	/* nothing */</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
<span class="p_del">-/* these routines utilize privilege-sensitive or performance-sensitive</span>
<span class="p_del">- * privileged instructions so the code must be replaced with</span>
<span class="p_del">- * paravirtualized versions */</span>
<span class="p_del">-#define ia64_switch_to			IA64_PARAVIRT_ASM_FUNC(switch_to)</span>
<span class="p_del">-#define ia64_leave_syscall		IA64_PARAVIRT_ASM_FUNC(leave_syscall)</span>
<span class="p_del">-#define ia64_work_processed_syscall	\</span>
<span class="p_del">-	IA64_PARAVIRT_ASM_FUNC(work_processed_syscall)</span>
<span class="p_del">-#define ia64_leave_kernel		IA64_PARAVIRT_ASM_FUNC(leave_kernel)</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
<span class="p_del">-#if defined(CONFIG_PARAVIRT)</span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * binary patching infrastructure</span>
<span class="p_del">- */</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_FC				1</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_THASH			2</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_GET_CPUID			3</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_GET_PMD			4</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_PTCGA			5</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_GET_RR			6</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_SET_RR			7</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_SET_RR0_TO_RR4		8</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_SSM_I			9</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_RSM_I			10</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_GET_PSR_I			11</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_INTRIN_LOCAL_IRQ_RESTORE	12</span>
<span class="p_del">-</span>
<span class="p_del">-/* PARAVIRT_PATY_TYPE_[GS]ETREG + _IA64_REG_xxx */</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_GETREG			0x10000000</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_SETREG			0x20000000</span>
<span class="p_del">-</span>
<span class="p_del">-/*</span>
<span class="p_del">- * struct task_struct* (*ia64_switch_to)(void* next_task);</span>
<span class="p_del">- * void *ia64_leave_syscall;</span>
<span class="p_del">- * void *ia64_work_processed_syscall</span>
<span class="p_del">- * void *ia64_leave_kernel;</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_BR_START			0x30000000</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_BR_SWITCH_TO		\</span>
<span class="p_del">-	(PARAVIRT_PATCH_TYPE_BR_START + 0)</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_BR_LEAVE_SYSCALL		\</span>
<span class="p_del">-	(PARAVIRT_PATCH_TYPE_BR_START + 1)</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_BR_WORK_PROCESSED_SYSCALL	\</span>
<span class="p_del">-	(PARAVIRT_PATCH_TYPE_BR_START + 2)</span>
<span class="p_del">-#define PARAVIRT_PATCH_TYPE_BR_LEAVE_KERNEL		\</span>
<span class="p_del">-	(PARAVIRT_PATCH_TYPE_BR_START + 3)</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef ASM_SUPPORTED</span>
<span class="p_del">-#include &lt;asm/paravirt_patch.h&gt;</span>
<span class="p_del">-</span>
<span class="p_del">-/*</span>
<span class="p_del">- * pv_cpu_ops calling stub.</span>
<span class="p_del">- * normal function call convension can&#39;t be written by gcc</span>
<span class="p_del">- * inline assembly.</span>
<span class="p_del">- *</span>
<span class="p_del">- * from the caller&#39;s point of view,</span>
<span class="p_del">- * the following registers will be clobbered.</span>
<span class="p_del">- * r2, r3</span>
<span class="p_del">- * r8-r15</span>
<span class="p_del">- * r16, r17</span>
<span class="p_del">- * b6, b7</span>
<span class="p_del">- * p6-p15</span>
<span class="p_del">- * ar.ccv</span>
<span class="p_del">- *</span>
<span class="p_del">- * from the callee&#39;s point of view ,</span>
<span class="p_del">- * the following registers can be used.</span>
<span class="p_del">- * r2, r3: scratch</span>
<span class="p_del">- * r8: scratch, input argument0 and return value</span>
<span class="p_del">- * r0-r15: scratch, input argument1-5</span>
<span class="p_del">- * b6: return pointer</span>
<span class="p_del">- * b7: scratch</span>
<span class="p_del">- * p6-p15: scratch</span>
<span class="p_del">- * ar.ccv: scratch</span>
<span class="p_del">- *</span>
<span class="p_del">- * other registers must not be changed. especially</span>
<span class="p_del">- * b0: rp: preserved. gcc ignores b0 in clobbered register.</span>
<span class="p_del">- * r16: saved gp</span>
<span class="p_del">- */</span>
<span class="p_del">-/* 5 bundles */</span>
<span class="p_del">-#define __PARAVIRT_BR							\</span>
<span class="p_del">-	&quot;;;\n&quot;								\</span>
<span class="p_del">-	&quot;{ .mlx\n&quot;							\</span>
<span class="p_del">-	&quot;nop 0\n&quot;							\</span>
<span class="p_del">-	&quot;movl r2 = %[op_addr]\n&quot;/* get function pointer address */	\</span>
<span class="p_del">-	&quot;;;\n&quot;								\</span>
<span class="p_del">-	&quot;}\n&quot;								\</span>
<span class="p_del">-	&quot;1:\n&quot;								\</span>
<span class="p_del">-	&quot;{ .mii\n&quot;							\</span>
<span class="p_del">-	&quot;ld8 r2 = [r2]\n&quot;	/* load function descriptor address */	\</span>
<span class="p_del">-	&quot;mov r17 = ip\n&quot;	/* get ip to calc return address */	\</span>
<span class="p_del">-	&quot;mov r16 = gp\n&quot;	/* save gp */				\</span>
<span class="p_del">-	&quot;;;\n&quot;								\</span>
<span class="p_del">-	&quot;}\n&quot;								\</span>
<span class="p_del">-	&quot;{ .mii\n&quot;							\</span>
<span class="p_del">-	&quot;ld8 r3 = [r2], 8\n&quot;	/* load entry address */		\</span>
<span class="p_del">-	&quot;adds r17 =  1f - 1b, r17\n&quot;	/* calculate return address */	\</span>
<span class="p_del">-	&quot;;;\n&quot;								\</span>
<span class="p_del">-	&quot;mov b7 = r3\n&quot;		/* set entry address */			\</span>
<span class="p_del">-	&quot;}\n&quot;								\</span>
<span class="p_del">-	&quot;{ .mib\n&quot;							\</span>
<span class="p_del">-	&quot;ld8 gp = [r2]\n&quot;	/* load gp value */			\</span>
<span class="p_del">-	&quot;mov b6 = r17\n&quot;	/* set return address */		\</span>
<span class="p_del">-	&quot;br.cond.sptk.few b7\n&quot;	/* intrinsics are very short isns */	\</span>
<span class="p_del">-	&quot;}\n&quot;								\</span>
<span class="p_del">-	&quot;1:\n&quot;								\</span>
<span class="p_del">-	&quot;{ .mii\n&quot;							\</span>
<span class="p_del">-	&quot;mov gp = r16\n&quot;	/* restore gp value */			\</span>
<span class="p_del">-	&quot;nop 0\n&quot;							\</span>
<span class="p_del">-	&quot;nop 0\n&quot;							\</span>
<span class="p_del">-	&quot;;;\n&quot;								\</span>
<span class="p_del">-	&quot;}\n&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_OP(op)				\</span>
<span class="p_del">-	[op_addr] &quot;i&quot;(&amp;pv_cpu_ops.op)</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_TYPE(type)			\</span>
<span class="p_del">-	PARAVIRT_PATCH_TYPE_ ## type</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_REG_CLOBBERS0					\</span>
<span class="p_del">-	&quot;r2&quot;, &quot;r3&quot;, /*&quot;r8&quot;,*/ &quot;r9&quot;, &quot;r10&quot;, &quot;r11&quot;, &quot;r14&quot;,	\</span>
<span class="p_del">-		&quot;r15&quot;, &quot;r16&quot;, &quot;r17&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_REG_CLOBBERS1					\</span>
<span class="p_del">-	&quot;r2&quot;,&quot;r3&quot;, /*&quot;r8&quot;,*/ &quot;r9&quot;, &quot;r10&quot;, &quot;r11&quot;, &quot;r14&quot;,		\</span>
<span class="p_del">-		&quot;r15&quot;, &quot;r16&quot;, &quot;r17&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_REG_CLOBBERS2					\</span>
<span class="p_del">-	&quot;r2&quot;, &quot;r3&quot;, /*&quot;r8&quot;, &quot;r9&quot;,*/ &quot;r10&quot;, &quot;r11&quot;, &quot;r14&quot;,	\</span>
<span class="p_del">-		&quot;r15&quot;, &quot;r16&quot;, &quot;r17&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_REG_CLOBBERS5					\</span>
<span class="p_del">-	&quot;r2&quot;, &quot;r3&quot;, /*&quot;r8&quot;, &quot;r9&quot;, &quot;r10&quot;, &quot;r11&quot;, &quot;r14&quot;,*/	\</span>
<span class="p_del">-		&quot;r15&quot;, &quot;r16&quot;, &quot;r17&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_BR_CLOBBERS			\</span>
<span class="p_del">-	&quot;b6&quot;, &quot;b7&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_PR_CLOBBERS						\</span>
<span class="p_del">-	&quot;p6&quot;, &quot;p7&quot;, &quot;p8&quot;, &quot;p9&quot;, &quot;p10&quot;, &quot;p11&quot;, &quot;p12&quot;, &quot;p13&quot;, &quot;p14&quot;, &quot;p15&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_AR_CLOBBERS			\</span>
<span class="p_del">-	&quot;ar.ccv&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_CLOBBERS0			\</span>
<span class="p_del">-		PARAVIRT_REG_CLOBBERS0,		\</span>
<span class="p_del">-		PARAVIRT_BR_CLOBBERS,		\</span>
<span class="p_del">-		PARAVIRT_PR_CLOBBERS,		\</span>
<span class="p_del">-		PARAVIRT_AR_CLOBBERS,		\</span>
<span class="p_del">-		&quot;memory&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_CLOBBERS1			\</span>
<span class="p_del">-		PARAVIRT_REG_CLOBBERS1,		\</span>
<span class="p_del">-		PARAVIRT_BR_CLOBBERS,		\</span>
<span class="p_del">-		PARAVIRT_PR_CLOBBERS,		\</span>
<span class="p_del">-		PARAVIRT_AR_CLOBBERS,		\</span>
<span class="p_del">-		&quot;memory&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_CLOBBERS2			\</span>
<span class="p_del">-		PARAVIRT_REG_CLOBBERS2,		\</span>
<span class="p_del">-		PARAVIRT_BR_CLOBBERS,		\</span>
<span class="p_del">-		PARAVIRT_PR_CLOBBERS,		\</span>
<span class="p_del">-		PARAVIRT_AR_CLOBBERS,		\</span>
<span class="p_del">-		&quot;memory&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_CLOBBERS5			\</span>
<span class="p_del">-		PARAVIRT_REG_CLOBBERS5,		\</span>
<span class="p_del">-		PARAVIRT_BR_CLOBBERS,		\</span>
<span class="p_del">-		PARAVIRT_PR_CLOBBERS,		\</span>
<span class="p_del">-		PARAVIRT_AR_CLOBBERS,		\</span>
<span class="p_del">-		&quot;memory&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_BR0(op, type)					\</span>
<span class="p_del">-	register unsigned long ia64_clobber asm (&quot;r8&quot;);		\</span>
<span class="p_del">-	asm volatile (paravirt_alt_bundle(__PARAVIRT_BR,	\</span>
<span class="p_del">-					  PARAVIRT_TYPE(type))	\</span>
<span class="p_del">-		      :	&quot;=r&quot;(ia64_clobber)			\</span>
<span class="p_del">-		      : PARAVIRT_OP(op)				\</span>
<span class="p_del">-		      : PARAVIRT_CLOBBERS0)</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_BR0_RET(op, type)				\</span>
<span class="p_del">-	register unsigned long ia64_intri_res asm (&quot;r8&quot;);	\</span>
<span class="p_del">-	asm volatile (paravirt_alt_bundle(__PARAVIRT_BR,	\</span>
<span class="p_del">-					  PARAVIRT_TYPE(type))	\</span>
<span class="p_del">-		      : &quot;=r&quot;(ia64_intri_res)			\</span>
<span class="p_del">-		      : PARAVIRT_OP(op)				\</span>
<span class="p_del">-		      : PARAVIRT_CLOBBERS0)</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_BR1(op, type, arg1)				\</span>
<span class="p_del">-	register unsigned long __##arg1 asm (&quot;r8&quot;) = arg1;	\</span>
<span class="p_del">-	register unsigned long ia64_clobber asm (&quot;r8&quot;);		\</span>
<span class="p_del">-	asm volatile (paravirt_alt_bundle(__PARAVIRT_BR,	\</span>
<span class="p_del">-					  PARAVIRT_TYPE(type))	\</span>
<span class="p_del">-		      :	&quot;=r&quot;(ia64_clobber)			\</span>
<span class="p_del">-		      : PARAVIRT_OP(op), &quot;0&quot;(__##arg1)		\</span>
<span class="p_del">-		      : PARAVIRT_CLOBBERS1)</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_BR1_RET(op, type, arg1)			\</span>
<span class="p_del">-	register unsigned long ia64_intri_res asm (&quot;r8&quot;);	\</span>
<span class="p_del">-	register unsigned long __##arg1 asm (&quot;r8&quot;) = arg1;	\</span>
<span class="p_del">-	asm volatile (paravirt_alt_bundle(__PARAVIRT_BR,	\</span>
<span class="p_del">-					  PARAVIRT_TYPE(type))	\</span>
<span class="p_del">-		      : &quot;=r&quot;(ia64_intri_res)			\</span>
<span class="p_del">-		      : PARAVIRT_OP(op), &quot;0&quot;(__##arg1)		\</span>
<span class="p_del">-		      : PARAVIRT_CLOBBERS1)</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_BR1_VOID(op, type, arg1)			\</span>
<span class="p_del">-	register void *__##arg1 asm (&quot;r8&quot;) = arg1;		\</span>
<span class="p_del">-	register unsigned long ia64_clobber asm (&quot;r8&quot;);		\</span>
<span class="p_del">-	asm volatile (paravirt_alt_bundle(__PARAVIRT_BR,	\</span>
<span class="p_del">-					  PARAVIRT_TYPE(type))	\</span>
<span class="p_del">-		      :	&quot;=r&quot;(ia64_clobber)			\</span>
<span class="p_del">-		      : PARAVIRT_OP(op), &quot;0&quot;(__##arg1)		\</span>
<span class="p_del">-		      : PARAVIRT_CLOBBERS1)</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_BR2(op, type, arg1, arg2)				\</span>
<span class="p_del">-	register unsigned long __##arg1 asm (&quot;r8&quot;) = arg1;		\</span>
<span class="p_del">-	register unsigned long __##arg2 asm (&quot;r9&quot;) = arg2;		\</span>
<span class="p_del">-	register unsigned long ia64_clobber1 asm (&quot;r8&quot;);		\</span>
<span class="p_del">-	register unsigned long ia64_clobber2 asm (&quot;r9&quot;);		\</span>
<span class="p_del">-	asm volatile (paravirt_alt_bundle(__PARAVIRT_BR,		\</span>
<span class="p_del">-					  PARAVIRT_TYPE(type))		\</span>
<span class="p_del">-		      : &quot;=r&quot;(ia64_clobber1), &quot;=r&quot;(ia64_clobber2)	\</span>
<span class="p_del">-		      : PARAVIRT_OP(op), &quot;0&quot;(__##arg1), &quot;1&quot;(__##arg2)	\</span>
<span class="p_del">-		      : PARAVIRT_CLOBBERS2)</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_DEFINE_CPU_OP0(op, type)		\</span>
<span class="p_del">-	static inline void				\</span>
<span class="p_del">-	paravirt_ ## op (void)				\</span>
<span class="p_del">-	{						\</span>
<span class="p_del">-		PARAVIRT_BR0(op, type);			\</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_DEFINE_CPU_OP0_RET(op, type)		\</span>
<span class="p_del">-	static inline unsigned long			\</span>
<span class="p_del">-	paravirt_ ## op (void)				\</span>
<span class="p_del">-	{						\</span>
<span class="p_del">-		PARAVIRT_BR0_RET(op, type);		\</span>
<span class="p_del">-		return ia64_intri_res;			\</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_DEFINE_CPU_OP1_VOID(op, type)		\</span>
<span class="p_del">-	static inline void				\</span>
<span class="p_del">-	paravirt_ ## op (void *arg1)			\</span>
<span class="p_del">-	{						\</span>
<span class="p_del">-		PARAVIRT_BR1_VOID(op, type, arg1);	\</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_DEFINE_CPU_OP1(op, type)		\</span>
<span class="p_del">-	static inline void				\</span>
<span class="p_del">-	paravirt_ ## op (unsigned long arg1)		\</span>
<span class="p_del">-	{						\</span>
<span class="p_del">-		PARAVIRT_BR1(op, type, arg1);		\</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_DEFINE_CPU_OP1_RET(op, type)		\</span>
<span class="p_del">-	static inline unsigned long			\</span>
<span class="p_del">-	paravirt_ ## op (unsigned long arg1)		\</span>
<span class="p_del">-	{						\</span>
<span class="p_del">-		PARAVIRT_BR1_RET(op, type, arg1);	\</span>
<span class="p_del">-		return ia64_intri_res;			\</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-#define PARAVIRT_DEFINE_CPU_OP2(op, type)		\</span>
<span class="p_del">-	static inline void				\</span>
<span class="p_del">-	paravirt_ ## op (unsigned long arg1,		\</span>
<span class="p_del">-			 unsigned long arg2)		\</span>
<span class="p_del">-	{						\</span>
<span class="p_del">-		PARAVIRT_BR2(op, type, arg1, arg2);	\</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
<span class="p_del">-PARAVIRT_DEFINE_CPU_OP1_VOID(fc, FC);</span>
<span class="p_del">-PARAVIRT_DEFINE_CPU_OP1_RET(thash, THASH)</span>
<span class="p_del">-PARAVIRT_DEFINE_CPU_OP1_RET(get_cpuid, GET_CPUID)</span>
<span class="p_del">-PARAVIRT_DEFINE_CPU_OP1_RET(get_pmd, GET_PMD)</span>
<span class="p_del">-PARAVIRT_DEFINE_CPU_OP2(ptcga, PTCGA)</span>
<span class="p_del">-PARAVIRT_DEFINE_CPU_OP1_RET(get_rr, GET_RR)</span>
<span class="p_del">-PARAVIRT_DEFINE_CPU_OP2(set_rr, SET_RR)</span>
<span class="p_del">-PARAVIRT_DEFINE_CPU_OP0(ssm_i, SSM_I)</span>
<span class="p_del">-PARAVIRT_DEFINE_CPU_OP0(rsm_i, RSM_I)</span>
<span class="p_del">-PARAVIRT_DEFINE_CPU_OP0_RET(get_psr_i, GET_PSR_I)</span>
<span class="p_del">-PARAVIRT_DEFINE_CPU_OP1(intrin_local_irq_restore, INTRIN_LOCAL_IRQ_RESTORE)</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void</span>
<span class="p_del">-paravirt_set_rr0_to_rr4(unsigned long val0, unsigned long val1,</span>
<span class="p_del">-			unsigned long val2, unsigned long val3,</span>
<span class="p_del">-			unsigned long val4)</span>
<span class="p_del">-{</span>
<span class="p_del">-	register unsigned long __val0 asm (&quot;r8&quot;) = val0;</span>
<span class="p_del">-	register unsigned long __val1 asm (&quot;r9&quot;) = val1;</span>
<span class="p_del">-	register unsigned long __val2 asm (&quot;r10&quot;) = val2;</span>
<span class="p_del">-	register unsigned long __val3 asm (&quot;r11&quot;) = val3;</span>
<span class="p_del">-	register unsigned long __val4 asm (&quot;r14&quot;) = val4;</span>
<span class="p_del">-</span>
<span class="p_del">-	register unsigned long ia64_clobber0 asm (&quot;r8&quot;);</span>
<span class="p_del">-	register unsigned long ia64_clobber1 asm (&quot;r9&quot;);</span>
<span class="p_del">-	register unsigned long ia64_clobber2 asm (&quot;r10&quot;);</span>
<span class="p_del">-	register unsigned long ia64_clobber3 asm (&quot;r11&quot;);</span>
<span class="p_del">-	register unsigned long ia64_clobber4 asm (&quot;r14&quot;);</span>
<span class="p_del">-</span>
<span class="p_del">-	asm volatile (paravirt_alt_bundle(__PARAVIRT_BR,</span>
<span class="p_del">-					  PARAVIRT_TYPE(SET_RR0_TO_RR4))</span>
<span class="p_del">-		      : &quot;=r&quot;(ia64_clobber0),</span>
<span class="p_del">-			&quot;=r&quot;(ia64_clobber1),</span>
<span class="p_del">-			&quot;=r&quot;(ia64_clobber2),</span>
<span class="p_del">-			&quot;=r&quot;(ia64_clobber3),</span>
<span class="p_del">-			&quot;=r&quot;(ia64_clobber4)</span>
<span class="p_del">-		      : PARAVIRT_OP(set_rr0_to_rr4),</span>
<span class="p_del">-			&quot;0&quot;(__val0), &quot;1&quot;(__val1), &quot;2&quot;(__val2),</span>
<span class="p_del">-			&quot;3&quot;(__val3), &quot;4&quot;(__val4)</span>
<span class="p_del">-		      : PARAVIRT_CLOBBERS5);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-/* unsigned long paravirt_getreg(int reg) */</span>
<span class="p_del">-#define __paravirt_getreg(reg)						\</span>
<span class="p_del">-	({								\</span>
<span class="p_del">-		register unsigned long ia64_intri_res asm (&quot;r8&quot;);	\</span>
<span class="p_del">-		register unsigned long __reg asm (&quot;r8&quot;) = (reg);	\</span>
<span class="p_del">-									\</span>
<span class="p_del">-		asm volatile (paravirt_alt_bundle(__PARAVIRT_BR,	\</span>
<span class="p_del">-						  PARAVIRT_TYPE(GETREG) \</span>
<span class="p_del">-						  + (reg))		\</span>
<span class="p_del">-			      : &quot;=r&quot;(ia64_intri_res)			\</span>
<span class="p_del">-			      : PARAVIRT_OP(getreg), &quot;0&quot;(__reg)		\</span>
<span class="p_del">-			      : PARAVIRT_CLOBBERS1);			\</span>
<span class="p_del">-									\</span>
<span class="p_del">-		ia64_intri_res;						\</span>
<span class="p_del">-	})</span>
<span class="p_del">-</span>
<span class="p_del">-/* void paravirt_setreg(int reg, unsigned long val) */</span>
<span class="p_del">-#define paravirt_setreg(reg, val)					\</span>
<span class="p_del">-	do {								\</span>
<span class="p_del">-		register unsigned long __val asm (&quot;r8&quot;) = val;		\</span>
<span class="p_del">-		register unsigned long __reg asm (&quot;r9&quot;) = reg;		\</span>
<span class="p_del">-		register unsigned long ia64_clobber1 asm (&quot;r8&quot;);	\</span>
<span class="p_del">-		register unsigned long ia64_clobber2 asm (&quot;r9&quot;);	\</span>
<span class="p_del">-									\</span>
<span class="p_del">-		asm volatile (paravirt_alt_bundle(__PARAVIRT_BR,	\</span>
<span class="p_del">-						  PARAVIRT_TYPE(SETREG) \</span>
<span class="p_del">-						  + (reg))		\</span>
<span class="p_del">-			      : &quot;=r&quot;(ia64_clobber1),			\</span>
<span class="p_del">-				&quot;=r&quot;(ia64_clobber2)			\</span>
<span class="p_del">-			      : PARAVIRT_OP(setreg),			\</span>
<span class="p_del">-				&quot;1&quot;(__reg), &quot;0&quot;(__val)			\</span>
<span class="p_del">-			      : PARAVIRT_CLOBBERS2);			\</span>
<span class="p_del">-	} while (0)</span>
<span class="p_del">-</span>
<span class="p_del">-#endif /* ASM_SUPPORTED */</span>
<span class="p_del">-#endif /* CONFIG_PARAVIRT &amp;&amp; ASM_SUPPOTED */</span>
<span class="p_del">-</span>
<span class="p_del">-#endif /* _ASM_IA64_PARAVIRT_PRIVOP_H */</span>
<span class="p_header">diff --git a/arch/ia64/kernel/Makefile b/arch/ia64/kernel/Makefile</span>
<span class="p_header">index d68b5cf..3686d6a 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/Makefile</span>
<span class="p_header">+++ b/arch/ia64/kernel/Makefile</span>
<span class="p_chunk">@@ -9,7 +9,7 @@</span> <span class="p_context"> endif</span>
 extra-y	:= head.o init_task.o vmlinux.lds
 
 obj-y := entry.o efi.o efi_stub.o gate-data.o fsys.o ia64_ksyms.o irq.o irq_ia64.o	\
<span class="p_del">-	 irq_lsapic.o ivt.o machvec.o pal.o paravirt_patchlist.o patch.o process.o perfmon.o ptrace.o sal.o		\</span>
<span class="p_add">+	 irq_lsapic.o ivt.o machvec.o pal.o patch.o process.o perfmon.o ptrace.o sal.o		\</span>
 	 salinfo.o setup.o signal.o sys_ia64.o time.o traps.o unaligned.o \
 	 unwind.o mca.o mca_asm.o topology.o dma-mapping.o
 
<span class="p_chunk">@@ -35,9 +35,6 @@</span> <span class="p_context"> mca_recovery-y			+= mca_drv.o mca_drv_asm.o</span>
 obj-$(CONFIG_IA64_MC_ERR_INJECT)+= err_inject.o
 obj-$(CONFIG_STACKTRACE)	+= stacktrace.o
 
<span class="p_del">-obj-$(CONFIG_PARAVIRT)		+= paravirt.o paravirtentry.o \</span>
<span class="p_del">-				   paravirt_patch.o</span>
<span class="p_del">-</span>
 obj-$(CONFIG_IA64_ESI)		+= esi.o
 ifneq ($(CONFIG_IA64_ESI),)
 obj-y				+= esi_stub.o	# must be in kernel proper
<span class="p_chunk">@@ -52,8 +49,6 @@</span> <span class="p_context"> CFLAGS_traps.o  += -mfixed-range=f2-f5,f16-f31</span>
 
 # The gate DSO image is built using a special linker script.
 include $(src)/Makefile.gate
<span class="p_del">-# tell compiled for native</span>
<span class="p_del">-CPPFLAGS_gate.lds += -D__IA64_GATE_PARAVIRTUALIZED_NATIVE</span>
 
 # Calculate NR_IRQ = max(IA64_NATIVE_NR_IRQS, XEN_NR_IRQS, ...) based on config
 define sed-y
<span class="p_chunk">@@ -84,30 +79,3 @@</span> <span class="p_context"> arch/$(SRCARCH)/kernel/nr-irqs.s: arch/$(SRCARCH)/kernel/nr-irqs.c</span>
 include/generated/nr-irqs.h: arch/$(SRCARCH)/kernel/nr-irqs.s
 	$(Q)mkdir -p $(dir $@)
 	$(call cmd,nr_irqs)
<span class="p_del">-</span>
<span class="p_del">-#</span>
<span class="p_del">-# native ivt.S, entry.S and fsys.S</span>
<span class="p_del">-#</span>
<span class="p_del">-ASM_PARAVIRT_OBJS = ivt.o entry.o fsys.o</span>
<span class="p_del">-define paravirtualized_native</span>
<span class="p_del">-AFLAGS_$(1) += -D__IA64_ASM_PARAVIRTUALIZED_NATIVE</span>
<span class="p_del">-AFLAGS_pvchk-sed-$(1) += -D__IA64_ASM_PARAVIRTUALIZED_PVCHECK</span>
<span class="p_del">-extra-y += pvchk-$(1)</span>
<span class="p_del">-endef</span>
<span class="p_del">-$(foreach obj,$(ASM_PARAVIRT_OBJS),$(eval $(call paravirtualized_native,$(obj))))</span>
<span class="p_del">-</span>
<span class="p_del">-#</span>
<span class="p_del">-# Checker for paravirtualizations of privileged operations.</span>
<span class="p_del">-#</span>
<span class="p_del">-quiet_cmd_pv_check_sed = PVCHK   $@</span>
<span class="p_del">-define cmd_pv_check_sed</span>
<span class="p_del">-	sed -f $(srctree)/arch/$(SRCARCH)/scripts/pvcheck.sed $&lt; &gt; $@</span>
<span class="p_del">-endef</span>
<span class="p_del">-</span>
<span class="p_del">-$(obj)/pvchk-sed-%.s: $(src)/%.S $(srctree)/arch/$(SRCARCH)/scripts/pvcheck.sed FORCE</span>
<span class="p_del">-	$(call if_changed_dep,as_s_S)</span>
<span class="p_del">-$(obj)/pvchk-%.s: $(obj)/pvchk-sed-%.s FORCE</span>
<span class="p_del">-	$(call if_changed,pv_check_sed)</span>
<span class="p_del">-$(obj)/pvchk-%.o: $(obj)/pvchk-%.s FORCE</span>
<span class="p_del">-	$(call if_changed,as_o_S)</span>
<span class="p_del">-.PRECIOUS: $(obj)/pvchk-sed-%.s $(obj)/pvchk-%.s $(obj)/pvchk-%.o</span>
<span class="p_header">diff --git a/arch/ia64/kernel/efi.c b/arch/ia64/kernel/efi.c</span>
<span class="p_header">index c52d754..47e962f 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/efi.c</span>
<span class="p_header">+++ b/arch/ia64/kernel/efi.c</span>
<span class="p_chunk">@@ -464,7 +464,6 @@</span> <span class="p_context"> efi_map_pal_code (void)</span>
 		 GRANULEROUNDDOWN((unsigned long) pal_vaddr),
 		 pte_val(pfn_pte(__pa(pal_vaddr) &gt;&gt; PAGE_SHIFT, PAGE_KERNEL)),
 		 IA64_GRANULE_SHIFT);
<span class="p_del">-	paravirt_dv_serialize_data();</span>
 	ia64_set_psr(psr);		/* restore psr */
 }
 
<span class="p_header">diff --git a/arch/ia64/kernel/entry.S b/arch/ia64/kernel/entry.S</span>
<span class="p_header">index fcf8b8c..ae0de7b 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/entry.S</span>
<span class="p_header">+++ b/arch/ia64/kernel/entry.S</span>
<span class="p_chunk">@@ -51,7 +51,6 @@</span> <span class="p_context"></span>
 
 #include &quot;minstate.h&quot;
 
<span class="p_del">-#ifdef __IA64_ASM_PARAVIRTUALIZED_NATIVE</span>
 	/*
 	 * execve() is special because in case of success, we need to
 	 * setup a null register window frame.
<span class="p_chunk">@@ -161,7 +160,6 @@</span> <span class="p_context"> GLOBAL_ENTRY(sys_clone)</span>
 	mov rp=loc0
 	br.ret.sptk.many rp
 END(sys_clone)
<span class="p_del">-#endif /* __IA64_ASM_PARAVIRTUALIZED_NATIVE */</span>
 
 /*
  * prev_task &lt;- ia64_switch_to(struct task_struct *next)
<span class="p_chunk">@@ -169,7 +167,7 @@</span> <span class="p_context"> END(sys_clone)</span>
  *	called.  The code starting at .map relies on this.  The rest of the code
  *	doesn&#39;t care about the interrupt masking status.
  */
<span class="p_del">-GLOBAL_ENTRY(__paravirt_switch_to)</span>
<span class="p_add">+GLOBAL_ENTRY(ia64_switch_to)</span>
 	.prologue
 	alloc r16=ar.pfs,1,0,0,0
 	DO_SAVE_SWITCH_STACK
<span class="p_chunk">@@ -221,9 +219,8 @@</span> <span class="p_context"> GLOBAL_ENTRY(__paravirt_switch_to)</span>
 	itr.d dtr[r25]=r23		// wire in new mapping...
 	SSM_PSR_IC_AND_SRLZ_D(r8, r9)	// reenable the psr.ic bit
 	br.cond.sptk .done
<span class="p_del">-END(__paravirt_switch_to)</span>
<span class="p_add">+END(ia64_switch_to)</span>
 
<span class="p_del">-#ifdef __IA64_ASM_PARAVIRTUALIZED_NATIVE</span>
 /*
  * Note that interrupts are enabled during save_switch_stack and load_switch_stack.  This
  * means that we may get an interrupt with &quot;sp&quot; pointing to the new kernel stack while
<span class="p_chunk">@@ -639,16 +636,8 @@</span> <span class="p_context"> GLOBAL_ENTRY(ia64_ret_from_syscall)</span>
 	adds r2=PT(R8)+16,sp			// r2 = &amp;pt_regs.r8
 	mov r10=r0				// clear error indication in r10
 (p7)	br.cond.spnt handle_syscall_error	// handle potential syscall failure
<span class="p_del">-#ifdef CONFIG_PARAVIRT</span>
<span class="p_del">-	;;</span>
<span class="p_del">-	br.cond.sptk.few ia64_leave_syscall</span>
<span class="p_del">-	;;</span>
<span class="p_del">-#endif /* CONFIG_PARAVIRT */</span>
 END(ia64_ret_from_syscall)
<span class="p_del">-#ifndef CONFIG_PARAVIRT</span>
 	// fall through
<span class="p_del">-#endif</span>
<span class="p_del">-#endif /* __IA64_ASM_PARAVIRTUALIZED_NATIVE */</span>
 
 /*
  * ia64_leave_syscall(): Same as ia64_leave_kernel, except that it doesn&#39;t
<span class="p_chunk">@@ -694,7 +683,7 @@</span> <span class="p_context"> END(ia64_ret_from_syscall)</span>
  *	      ar.csd: cleared
  *	      ar.ssd: cleared
  */
<span class="p_del">-GLOBAL_ENTRY(__paravirt_leave_syscall)</span>
<span class="p_add">+GLOBAL_ENTRY(ia64_leave_syscall)</span>
 	PT_REGS_UNWIND_INFO(0)
 	/*
 	 * work.need_resched etc. mustn&#39;t get changed by this CPU before it returns to
<span class="p_chunk">@@ -722,8 +711,8 @@</span> <span class="p_context"> GLOBAL_ENTRY(__paravirt_leave_syscall)</span>
 	cmp.eq pLvSys,p0=r0,r0		// pLvSys=1: leave from syscall
 (pUStk)	cmp.eq.unc p6,p0=r0,r0		// p6 &lt;- pUStk
 #endif
<span class="p_del">-.global __paravirt_work_processed_syscall;</span>
<span class="p_del">-__paravirt_work_processed_syscall:</span>
<span class="p_add">+.global ia64_work_processed_syscall;</span>
<span class="p_add">+ia64_work_processed_syscall:</span>
 #ifdef CONFIG_VIRT_CPU_ACCOUNTING_NATIVE
 	adds r2=PT(LOADRS)+16,r12
 	MOV_FROM_ITC(pUStk, p9, r22, r19)	// fetch time at leave
<span class="p_chunk">@@ -836,9 +825,9 @@</span> <span class="p_context"> __paravirt_work_processed_syscall:</span>
 	mov.m ar.ssd=r0			// M2   clear ar.ssd
 	mov f11=f0			// F    clear f11
 	br.cond.sptk.many rbs_switch	// B
<span class="p_del">-END(__paravirt_leave_syscall)</span>
<span class="p_add">+END(ia64_leave_syscall)</span>
 
<span class="p_del">-GLOBAL_ENTRY(__paravirt_leave_kernel)</span>
<span class="p_add">+GLOBAL_ENTRY(ia64_leave_kernel)</span>
 	PT_REGS_UNWIND_INFO(0)
 	/*
 	 * work.need_resched etc. mustn&#39;t get changed by this CPU before it returns to
<span class="p_chunk">@@ -1171,26 +1160,25 @@</span> <span class="p_context"> skip_rbs_switch:</span>
 (p6)	br.cond.sptk.few .notify
 	br.call.spnt.many rp=preempt_schedule_irq
 .ret9:	cmp.eq p6,p0=r0,r0	// p6 &lt;- 1 (re-check)
<span class="p_del">-(pLvSys)br.cond.sptk.few  __paravirt_pending_syscall_end</span>
<span class="p_add">+(pLvSys)br.cond.sptk.few  ia64_work_pending_syscall_end</span>
 	br.cond.sptk.many .work_processed_kernel
 
 .notify:
 (pUStk)	br.call.spnt.many rp=notify_resume_user
 .ret10:	cmp.ne p6,p0=r0,r0	// p6 &lt;- 0 (don&#39;t re-check)
<span class="p_del">-(pLvSys)br.cond.sptk.few  __paravirt_pending_syscall_end</span>
<span class="p_add">+(pLvSys)br.cond.sptk.few  ia64_work_pending_syscall_end</span>
 	br.cond.sptk.many .work_processed_kernel
 
<span class="p_del">-.global __paravirt_pending_syscall_end;</span>
<span class="p_del">-__paravirt_pending_syscall_end:</span>
<span class="p_add">+.global ia64_work_pending_syscall_end;</span>
<span class="p_add">+ia64_work_pending_syscall_end:</span>
 	adds r2=PT(R8)+16,r12
 	adds r3=PT(R10)+16,r12
 	;;
 	ld8 r8=[r2]
 	ld8 r10=[r3]
<span class="p_del">-	br.cond.sptk.many __paravirt_work_processed_syscall_target</span>
<span class="p_del">-END(__paravirt_leave_kernel)</span>
<span class="p_add">+	br.cond.sptk.many ia64_work_processed_syscall</span>
<span class="p_add">+END(ia64_leave_kernel)</span>
 
<span class="p_del">-#ifdef __IA64_ASM_PARAVIRTUALIZED_NATIVE</span>
 ENTRY(handle_syscall_error)
 	/*
 	 * Some system calls (e.g., ptrace, mmap) can return arbitrary values which could
<span class="p_chunk">@@ -1294,7 +1282,7 @@</span> <span class="p_context"> ENTRY(sys_rt_sigreturn)</span>
 	adds sp=16,sp
 	;;
 	ld8 r9=[sp]				// load new ar.unat
<span class="p_del">-	mov.sptk b7=r8,ia64_native_leave_kernel</span>
<span class="p_add">+	mov.sptk b7=r8,ia64_leave_kernel</span>
 	;;
 	mov ar.unat=r9
 	br.many b7
<span class="p_chunk">@@ -1782,4 +1770,3 @@</span> <span class="p_context"> sys_call_table:</span>
 	data8 sys_execveat
 
 	.org sys_call_table + 8*NR_syscalls	// guard against failures to increase NR_syscalls
<span class="p_del">-#endif /* __IA64_ASM_PARAVIRTUALIZED_NATIVE */</span>
<span class="p_header">diff --git a/arch/ia64/kernel/fsys.S b/arch/ia64/kernel/fsys.S</span>
<span class="p_header">index abc6dee..edbf7af 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/fsys.S</span>
<span class="p_header">+++ b/arch/ia64/kernel/fsys.S</span>
<span class="p_chunk">@@ -24,7 +24,7 @@</span> <span class="p_context"></span>
 #include &lt;asm/unistd.h&gt;
 
 #include &quot;entry.h&quot;
<span class="p_del">-#include &quot;paravirt_inst.h&quot;</span>
<span class="p_add">+#include &lt;asm/native/inst.h&gt;</span>
 
 /*
  * See Documentation/ia64/fsys.txt for details on fsyscalls.
<span class="p_chunk">@@ -402,7 +402,7 @@</span> <span class="p_context"> ENTRY(fsys_fallback_syscall)</span>
 	mov r26=ar.pfs
 END(fsys_fallback_syscall)
 	/* FALL THROUGH */
<span class="p_del">-GLOBAL_ENTRY(paravirt_fsys_bubble_down)</span>
<span class="p_add">+GLOBAL_ENTRY(fsys_bubble_down)</span>
 	.prologue
 	.altrp b6
 	.body
<span class="p_chunk">@@ -440,7 +440,7 @@</span> <span class="p_context"> GLOBAL_ENTRY(paravirt_fsys_bubble_down)</span>
 	 *
 	 * PSR.BE : already is turned off in __kernel_syscall_via_epc()
 	 * PSR.AC : don&#39;t care (kernel normally turns PSR.AC on)
<span class="p_del">-	 * PSR.I  : already turned off by the time paravirt_fsys_bubble_down gets</span>
<span class="p_add">+	 * PSR.I  : already turned off by the time fsys_bubble_down gets</span>
 	 *	    invoked
 	 * PSR.DFL: always 0 (kernel never turns it on)
 	 * PSR.DFH: don&#39;t care --- kernel never touches f32-f127 on its own
<span class="p_chunk">@@ -450,7 +450,7 @@</span> <span class="p_context"> GLOBAL_ENTRY(paravirt_fsys_bubble_down)</span>
 	 * PSR.DB : don&#39;t care --- kernel never enables kernel-level
 	 *	    breakpoints
 	 * PSR.TB : must be 0 already; if it wasn&#39;t zero on entry to
<span class="p_del">-	 *          __kernel_syscall_via_epc, the branch to paravirt_fsys_bubble_down</span>
<span class="p_add">+	 *          __kernel_syscall_via_epc, the branch to fsys_bubble_down</span>
 	 *          will trigger a taken branch; the taken-trap-handler then
 	 *          converts the syscall into a break-based system-call.
 	 */
<span class="p_chunk">@@ -541,14 +541,14 @@</span> <span class="p_context"> GLOBAL_ENTRY(paravirt_fsys_bubble_down)</span>
 	nop.m 0
 (p8)	br.call.sptk.many b6=b6			// B    (ignore return address)
 	br.cond.spnt ia64_trace_syscall		// B
<span class="p_del">-END(paravirt_fsys_bubble_down)</span>
<span class="p_add">+END(fsys_bubble_down)</span>
 
 	.rodata
 	.align 8
<span class="p_del">-	.globl paravirt_fsyscall_table</span>
<span class="p_add">+	.globl fsyscall_table</span>
 
<span class="p_del">-	data8 paravirt_fsys_bubble_down</span>
<span class="p_del">-paravirt_fsyscall_table:</span>
<span class="p_add">+	data8 fsys_bubble_down</span>
<span class="p_add">+fsyscall_table:</span>
 	data8 fsys_ni_syscall
 	data8 0				// exit			// 1025
 	data8 0				// read
<span class="p_chunk">@@ -833,4 +833,4 @@</span> <span class="p_context"> paravirt_fsyscall_table:</span>
 
 	// fill in zeros for the remaining entries
 	.zero:
<span class="p_del">-	.space paravirt_fsyscall_table + 8*NR_syscalls - .zero, 0</span>
<span class="p_add">+	.space fsyscall_table + 8*NR_syscalls - .zero, 0</span>
<span class="p_header">diff --git a/arch/ia64/kernel/gate.S b/arch/ia64/kernel/gate.S</span>
<span class="p_header">index b5f8bdd..0bd1b3b 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/gate.S</span>
<span class="p_header">+++ b/arch/ia64/kernel/gate.S</span>
<span class="p_chunk">@@ -14,7 +14,7 @@</span> <span class="p_context"></span>
 #include &lt;asm/unistd.h&gt;
 #include &lt;asm/kregs.h&gt;
 #include &lt;asm/page.h&gt;
<span class="p_del">-#include &quot;paravirt_inst.h&quot;</span>
<span class="p_add">+#include &lt;asm/native/inst.h&gt;</span>
 
 /*
  * We can&#39;t easily refer to symbols inside the kernel.  To avoid full runtime relocation,
<span class="p_chunk">@@ -376,11 +376,4 @@</span> <span class="p_context"> GLOBAL_ENTRY(__kernel_syscall_via_epc)</span>
 (p9)	mov r8=ENOSYS
 	FSYS_RETURN
 
<span class="p_del">-#ifdef CONFIG_PARAVIRT</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * padd to make the size of this symbol constant</span>
<span class="p_del">-	 * independent of paravirtualization.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	.align PAGE_SIZE / 8</span>
<span class="p_del">-#endif</span>
 END(__kernel_syscall_via_epc)
<span class="p_header">diff --git a/arch/ia64/kernel/gate.lds.S b/arch/ia64/kernel/gate.lds.S</span>
<span class="p_header">index e518f79..3e8271e 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/gate.lds.S</span>
<span class="p_header">+++ b/arch/ia64/kernel/gate.lds.S</span>
<span class="p_chunk">@@ -6,7 +6,6 @@</span> <span class="p_context"></span>
  */
 
 #include &lt;asm/page.h&gt;
<span class="p_del">-#include &quot;paravirt_patchlist.h&quot;</span>
 
 SECTIONS
 {
<span class="p_chunk">@@ -33,21 +32,21 @@</span> <span class="p_context"> SECTIONS</span>
 	. = GATE_ADDR + 0x600;
 
 	.data..patch		: {
<span class="p_del">-		__paravirt_start_gate_mckinley_e9_patchlist = .;</span>
<span class="p_add">+		__start_gate_mckinley_e9_patchlist = .;</span>
 		*(.data..patch.mckinley_e9)
<span class="p_del">-		__paravirt_end_gate_mckinley_e9_patchlist = .;</span>
<span class="p_add">+		__end_gate_mckinley_e9_patchlist = .;</span>
 
<span class="p_del">-		__paravirt_start_gate_vtop_patchlist = .;</span>
<span class="p_add">+		__start_gate_vtop_patchlist = .;</span>
 		*(.data..patch.vtop)
<span class="p_del">-		__paravirt_end_gate_vtop_patchlist = .;</span>
<span class="p_add">+		__end_gate_vtop_patchlist = .;</span>
 
<span class="p_del">-		__paravirt_start_gate_fsyscall_patchlist = .;</span>
<span class="p_add">+		__start_gate_fsyscall_patchlist = .;</span>
 		*(.data..patch.fsyscall_table)
<span class="p_del">-		__paravirt_end_gate_fsyscall_patchlist = .;</span>
<span class="p_add">+		__end_gate_fsyscall_patchlist = .;</span>
 
<span class="p_del">-		__paravirt_start_gate_brl_fsys_bubble_down_patchlist = .;</span>
<span class="p_add">+		__start_gate_brl_fsys_bubble_down_patchlist = .;</span>
 		*(.data..patch.brl_fsys_bubble_down)
<span class="p_del">-		__paravirt_end_gate_brl_fsys_bubble_down_patchlist = .;</span>
<span class="p_add">+		__end_gate_brl_fsys_bubble_down_patchlist = .;</span>
 	}						:readable
 
 	.IA_64.unwind_info	: { *(.IA_64.unwind_info*) }
<span class="p_header">diff --git a/arch/ia64/kernel/head.S b/arch/ia64/kernel/head.S</span>
<span class="p_header">index a4acdda..bb748c5 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/head.S</span>
<span class="p_header">+++ b/arch/ia64/kernel/head.S</span>
<span class="p_chunk">@@ -26,7 +26,6 @@</span> <span class="p_context"></span>
 #include &lt;asm/mmu_context.h&gt;
 #include &lt;asm/asm-offsets.h&gt;
 #include &lt;asm/pal.h&gt;
<span class="p_del">-#include &lt;asm/paravirt.h&gt;</span>
 #include &lt;asm/pgtable.h&gt;
 #include &lt;asm/processor.h&gt;
 #include &lt;asm/ptrace.h&gt;
<span class="p_chunk">@@ -394,41 +393,6 @@</span> <span class="p_context"> start_ap:</span>
 	;;
 (isBP)	st8 [r2]=r28		// save the address of the boot param area passed by the bootloader
 
<span class="p_del">-#ifdef CONFIG_PARAVIRT</span>
<span class="p_del">-</span>
<span class="p_del">-	movl r14=hypervisor_setup_hooks</span>
<span class="p_del">-	movl r15=hypervisor_type</span>
<span class="p_del">-	mov r16=num_hypervisor_hooks</span>
<span class="p_del">-	;;</span>
<span class="p_del">-	ld8 r2=[r15]</span>
<span class="p_del">-	;;</span>
<span class="p_del">-	cmp.ltu p7,p0=r2,r16	// array size check</span>
<span class="p_del">-	shladd r8=r2,3,r14</span>
<span class="p_del">-	;;</span>
<span class="p_del">-(p7)	ld8 r9=[r8]</span>
<span class="p_del">-	;;</span>
<span class="p_del">-(p7)	mov b1=r9</span>
<span class="p_del">-(p7)	cmp.ne.unc p7,p0=r9,r0	// no actual branch to NULL</span>
<span class="p_del">-	;;</span>
<span class="p_del">-(p7)	br.call.sptk.many rp=b1</span>
<span class="p_del">-</span>
<span class="p_del">-	__INITDATA</span>
<span class="p_del">-</span>
<span class="p_del">-default_setup_hook = 0		// Currently nothing needs to be done.</span>
<span class="p_del">-</span>
<span class="p_del">-	.global hypervisor_type</span>
<span class="p_del">-hypervisor_type:</span>
<span class="p_del">-	data8		PARAVIRT_HYPERVISOR_TYPE_DEFAULT</span>
<span class="p_del">-</span>
<span class="p_del">-	// must have the same order with PARAVIRT_HYPERVISOR_TYPE_xxx</span>
<span class="p_del">-</span>
<span class="p_del">-hypervisor_setup_hooks:</span>
<span class="p_del">-	data8		default_setup_hook</span>
<span class="p_del">-num_hypervisor_hooks = (. - hypervisor_setup_hooks) / 8</span>
<span class="p_del">-	.previous</span>
<span class="p_del">-</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
 #ifdef CONFIG_SMP
 (isAP)	br.call.sptk.many rp=start_secondary
 .ret0:
<span class="p_chunk">@@ -1063,12 +1027,6 @@</span> <span class="p_context"> GLOBAL_ENTRY(ia64_native_sched_clock)</span>
 	shrp r8=r9,r8,IA64_NSEC_PER_CYC_SHIFT
 	br.ret.sptk.many rp
 END(ia64_native_sched_clock)
<span class="p_del">-#ifndef CONFIG_PARAVIRT</span>
<span class="p_del">-	//unsigned long long</span>
<span class="p_del">-	//sched_clock(void) __attribute__((alias(&quot;ia64_native_sched_clock&quot;)));</span>
<span class="p_del">-	.global sched_clock</span>
<span class="p_del">-sched_clock = ia64_native_sched_clock</span>
<span class="p_del">-#endif</span>
 
 #ifdef CONFIG_VIRT_CPU_ACCOUNTING_NATIVE
 GLOBAL_ENTRY(cycle_to_cputime)
<span class="p_header">diff --git a/arch/ia64/kernel/ivt.S b/arch/ia64/kernel/ivt.S</span>
<span class="p_header">index e42bf7a..b1c3cfc 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/ivt.S</span>
<span class="p_header">+++ b/arch/ia64/kernel/ivt.S</span>
<span class="p_chunk">@@ -937,7 +937,6 @@</span> <span class="p_context"> END(interrupt)</span>
 	 *	- ar.fpsr: set to kernel settings
 	 *	-  b6: preserved (same as on entry)
 	 */
<span class="p_del">-#ifdef __IA64_ASM_PARAVIRTUALIZED_NATIVE</span>
 GLOBAL_ENTRY(ia64_syscall_setup)
 #if PT(B6) != 0
 # error This code assumes that b6 is the first field in pt_regs.
<span class="p_chunk">@@ -1029,7 +1028,6 @@</span> <span class="p_context"> GLOBAL_ENTRY(ia64_syscall_setup)</span>
 (p10)	mov r8=-EINVAL
 	br.ret.sptk.many b7
 END(ia64_syscall_setup)
<span class="p_del">-#endif /* __IA64_ASM_PARAVIRTUALIZED_NATIVE */</span>
 
 	.org ia64_ivt+0x3c00
 /////////////////////////////////////////////////////////////////////////////////////////
<span class="p_chunk">@@ -1043,7 +1041,7 @@</span> <span class="p_context"> END(ia64_syscall_setup)</span>
 	DBG_FAULT(16)
 	FAULT(16)
 
<span class="p_del">-#if defined(CONFIG_VIRT_CPU_ACCOUNTING_NATIVE) &amp;&amp; defined(__IA64_ASM_PARAVIRTUALIZED_NATIVE)</span>
<span class="p_add">+#if defined(CONFIG_VIRT_CPU_ACCOUNTING_NATIVE)</span>
 	/*
 	 * There is no particular reason for this code to be here, other than
 	 * that there happens to be space here that would go unused otherwise.
<span class="p_header">diff --git a/arch/ia64/kernel/minstate.h b/arch/ia64/kernel/minstate.h</span>
<span class="p_header">index cc82a7d..5704700 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/minstate.h</span>
<span class="p_header">+++ b/arch/ia64/kernel/minstate.h</span>
<span class="p_chunk">@@ -2,7 +2,7 @@</span> <span class="p_context"></span>
 #include &lt;asm/cache.h&gt;
 
 #include &quot;entry.h&quot;
<span class="p_del">-#include &quot;paravirt_inst.h&quot;</span>
<span class="p_add">+#include &lt;asm/native/inst.h&gt;</span>
 
 #ifdef CONFIG_VIRT_CPU_ACCOUNTING_NATIVE
 /* read ar.itc in advance, and use it before leaving bank 0 */
<span class="p_header">diff --git a/arch/ia64/kernel/module.c b/arch/ia64/kernel/module.c</span>
<span class="p_header">index 29754aa..b15933c 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/module.c</span>
<span class="p_header">+++ b/arch/ia64/kernel/module.c</span>
<span class="p_chunk">@@ -439,14 +439,6 @@</span> <span class="p_context"> module_frob_arch_sections (Elf_Ehdr *ehdr, Elf_Shdr *sechdrs, char *secstrings,</span>
 			mod-&gt;arch.opd = s;
 		else if (strcmp(&quot;.IA_64.unwind&quot;, secstrings + s-&gt;sh_name) == 0)
 			mod-&gt;arch.unwind = s;
<span class="p_del">-#ifdef CONFIG_PARAVIRT</span>
<span class="p_del">-		else if (strcmp(&quot;.paravirt_bundles&quot;,</span>
<span class="p_del">-				secstrings + s-&gt;sh_name) == 0)</span>
<span class="p_del">-			mod-&gt;arch.paravirt_bundles = s;</span>
<span class="p_del">-		else if (strcmp(&quot;.paravirt_insts&quot;,</span>
<span class="p_del">-				secstrings + s-&gt;sh_name) == 0)</span>
<span class="p_del">-			mod-&gt;arch.paravirt_insts = s;</span>
<span class="p_del">-#endif</span>
 
 	if (!mod-&gt;arch.core_plt || !mod-&gt;arch.init_plt || !mod-&gt;arch.got || !mod-&gt;arch.opd) {
 		printk(KERN_ERR &quot;%s: sections missing\n&quot;, mod-&gt;name);
<span class="p_chunk">@@ -914,30 +906,6 @@</span> <span class="p_context"> module_finalize (const Elf_Ehdr *hdr, const Elf_Shdr *sechdrs, struct module *mo</span>
 	DEBUGP(&quot;%s: init: entry=%p\n&quot;, __func__, mod-&gt;init);
 	if (mod-&gt;arch.unwind)
 		register_unwind_table(mod);
<span class="p_del">-#ifdef CONFIG_PARAVIRT</span>
<span class="p_del">-        if (mod-&gt;arch.paravirt_bundles) {</span>
<span class="p_del">-                struct paravirt_patch_site_bundle *start =</span>
<span class="p_del">-                        (struct paravirt_patch_site_bundle *)</span>
<span class="p_del">-                        mod-&gt;arch.paravirt_bundles-&gt;sh_addr;</span>
<span class="p_del">-                struct paravirt_patch_site_bundle *end =</span>
<span class="p_del">-                        (struct paravirt_patch_site_bundle *)</span>
<span class="p_del">-                        (mod-&gt;arch.paravirt_bundles-&gt;sh_addr +</span>
<span class="p_del">-                         mod-&gt;arch.paravirt_bundles-&gt;sh_size);</span>
<span class="p_del">-</span>
<span class="p_del">-                paravirt_patch_apply_bundle(start, end);</span>
<span class="p_del">-        }</span>
<span class="p_del">-        if (mod-&gt;arch.paravirt_insts) {</span>
<span class="p_del">-                struct paravirt_patch_site_inst *start =</span>
<span class="p_del">-                        (struct paravirt_patch_site_inst *)</span>
<span class="p_del">-                        mod-&gt;arch.paravirt_insts-&gt;sh_addr;</span>
<span class="p_del">-                struct paravirt_patch_site_inst *end =</span>
<span class="p_del">-                        (struct paravirt_patch_site_inst *)</span>
<span class="p_del">-                        (mod-&gt;arch.paravirt_insts-&gt;sh_addr +</span>
<span class="p_del">-                         mod-&gt;arch.paravirt_insts-&gt;sh_size);</span>
<span class="p_del">-</span>
<span class="p_del">-                paravirt_patch_apply_inst(start, end);</span>
<span class="p_del">-        }</span>
<span class="p_del">-#endif</span>
 	return 0;
 }
 
<span class="p_header">diff --git a/arch/ia64/kernel/paravirt.c b/arch/ia64/kernel/paravirt.c</span>
deleted file mode 100644
<span class="p_header">index 1b22f6d..0000000</span>
<span class="p_header">--- a/arch/ia64/kernel/paravirt.c</span>
<span class="p_header">+++ /dev/null</span>
<span class="p_chunk">@@ -1,902 +0,0 @@</span> <span class="p_context"></span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * arch/ia64/kernel/paravirt.c</span>
<span class="p_del">- *</span>
<span class="p_del">- * Copyright (c) 2008 Isaku Yamahata &lt;yamahata at valinux co jp&gt;</span>
<span class="p_del">- *                    VA Linux Systems Japan K.K.</span>
<span class="p_del">- *     Yaozu (Eddie) Dong &lt;eddie.dong@intel.com&gt;</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is free software; you can redistribute it and/or modify</span>
<span class="p_del">- * it under the terms of the GNU General Public License as published by</span>
<span class="p_del">- * the Free Software Foundation; either version 2 of the License, or</span>
<span class="p_del">- * (at your option) any later version.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is distributed in the hope that it will be useful,</span>
<span class="p_del">- * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<span class="p_del">- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<span class="p_del">- * GNU General Public License for more details.</span>
<span class="p_del">- *</span>
<span class="p_del">- * You should have received a copy of the GNU General Public License</span>
<span class="p_del">- * along with this program; if not, write to the Free Software</span>
<span class="p_del">- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>
<span class="p_del">- *</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-#include &lt;linux/init.h&gt;</span>
<span class="p_del">-</span>
<span class="p_del">-#include &lt;linux/compiler.h&gt;</span>
<span class="p_del">-#include &lt;linux/io.h&gt;</span>
<span class="p_del">-#include &lt;linux/irq.h&gt;</span>
<span class="p_del">-#include &lt;linux/module.h&gt;</span>
<span class="p_del">-#include &lt;linux/types.h&gt;</span>
<span class="p_del">-</span>
<span class="p_del">-#include &lt;asm/iosapic.h&gt;</span>
<span class="p_del">-#include &lt;asm/paravirt.h&gt;</span>
<span class="p_del">-</span>
<span class="p_del">-/***************************************************************************</span>
<span class="p_del">- * general info</span>
<span class="p_del">- */</span>
<span class="p_del">-struct pv_info pv_info = {</span>
<span class="p_del">-	.kernel_rpl = 0,</span>
<span class="p_del">-	.paravirt_enabled = 0,</span>
<span class="p_del">-	.name = &quot;bare hardware&quot;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-/***************************************************************************</span>
<span class="p_del">- * pv_init_ops</span>
<span class="p_del">- * initialization hooks.</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-static void __init</span>
<span class="p_del">-ia64_native_patch_branch(unsigned long tag, unsigned long type);</span>
<span class="p_del">-</span>
<span class="p_del">-struct pv_init_ops pv_init_ops =</span>
<span class="p_del">-{</span>
<span class="p_del">-#ifdef ASM_SUPPORTED</span>
<span class="p_del">-	.patch_bundle = ia64_native_patch_bundle,</span>
<span class="p_del">-#endif</span>
<span class="p_del">-	.patch_branch = ia64_native_patch_branch,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-/***************************************************************************</span>
<span class="p_del">- * pv_cpu_ops</span>
<span class="p_del">- * intrinsics hooks.</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-#ifndef ASM_SUPPORTED</span>
<span class="p_del">-/* ia64_native_xxx are macros so that we have to make them real functions */</span>
<span class="p_del">-</span>
<span class="p_del">-#define DEFINE_VOID_FUNC1(name)					\</span>
<span class="p_del">-	static void						\</span>
<span class="p_del">-	ia64_native_ ## name ## _func(unsigned long arg)	\</span>
<span class="p_del">-	{							\</span>
<span class="p_del">-		ia64_native_ ## name(arg);			\</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-#define DEFINE_VOID_FUNC1_VOID(name)				\</span>
<span class="p_del">-	static void						\</span>
<span class="p_del">-	ia64_native_ ## name ## _func(void *arg)		\</span>
<span class="p_del">-	{							\</span>
<span class="p_del">-		ia64_native_ ## name(arg);			\</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-#define DEFINE_VOID_FUNC2(name)					\</span>
<span class="p_del">-	static void						\</span>
<span class="p_del">-	ia64_native_ ## name ## _func(unsigned long arg0,	\</span>
<span class="p_del">-				      unsigned long arg1)	\</span>
<span class="p_del">-	{							\</span>
<span class="p_del">-		ia64_native_ ## name(arg0, arg1);		\</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-#define DEFINE_FUNC0(name)			\</span>
<span class="p_del">-	static unsigned long			\</span>
<span class="p_del">-	ia64_native_ ## name ## _func(void)	\</span>
<span class="p_del">-	{					\</span>
<span class="p_del">-		return ia64_native_ ## name();	\</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-#define DEFINE_FUNC1(name, type)			\</span>
<span class="p_del">-	static unsigned long				\</span>
<span class="p_del">-	ia64_native_ ## name ## _func(type arg)		\</span>
<span class="p_del">-	{						\</span>
<span class="p_del">-		return ia64_native_ ## name(arg);	\</span>
<span class="p_del">-	}						\</span>
<span class="p_del">-</span>
<span class="p_del">-DEFINE_VOID_FUNC1_VOID(fc);</span>
<span class="p_del">-DEFINE_VOID_FUNC1(intrin_local_irq_restore);</span>
<span class="p_del">-</span>
<span class="p_del">-DEFINE_VOID_FUNC2(ptcga);</span>
<span class="p_del">-DEFINE_VOID_FUNC2(set_rr);</span>
<span class="p_del">-</span>
<span class="p_del">-DEFINE_FUNC0(get_psr_i);</span>
<span class="p_del">-</span>
<span class="p_del">-DEFINE_FUNC1(thash, unsigned long);</span>
<span class="p_del">-DEFINE_FUNC1(get_cpuid, int);</span>
<span class="p_del">-DEFINE_FUNC1(get_pmd, int);</span>
<span class="p_del">-DEFINE_FUNC1(get_rr, unsigned long);</span>
<span class="p_del">-</span>
<span class="p_del">-static void</span>
<span class="p_del">-ia64_native_ssm_i_func(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	ia64_native_ssm(IA64_PSR_I);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static void</span>
<span class="p_del">-ia64_native_rsm_i_func(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	ia64_native_rsm(IA64_PSR_I);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static void</span>
<span class="p_del">-ia64_native_set_rr0_to_rr4_func(unsigned long val0, unsigned long val1,</span>
<span class="p_del">-				unsigned long val2, unsigned long val3,</span>
<span class="p_del">-				unsigned long val4)</span>
<span class="p_del">-{</span>
<span class="p_del">-	ia64_native_set_rr0_to_rr4(val0, val1, val2, val3, val4);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-#define CASE_GET_REG(id)				\</span>
<span class="p_del">-	case _IA64_REG_ ## id:				\</span>
<span class="p_del">-	res = ia64_native_getreg(_IA64_REG_ ## id);	\</span>
<span class="p_del">-	break;</span>
<span class="p_del">-#define CASE_GET_AR(id) CASE_GET_REG(AR_ ## id)</span>
<span class="p_del">-#define CASE_GET_CR(id) CASE_GET_REG(CR_ ## id)</span>
<span class="p_del">-</span>
<span class="p_del">-unsigned long</span>
<span class="p_del">-ia64_native_getreg_func(int regnum)</span>
<span class="p_del">-{</span>
<span class="p_del">-	unsigned long res = -1;</span>
<span class="p_del">-	switch (regnum) {</span>
<span class="p_del">-	CASE_GET_REG(GP);</span>
<span class="p_del">-	/*CASE_GET_REG(IP);*/ /* returned ip value shouldn&#39;t be constant */</span>
<span class="p_del">-	CASE_GET_REG(PSR);</span>
<span class="p_del">-	CASE_GET_REG(TP);</span>
<span class="p_del">-	CASE_GET_REG(SP);</span>
<span class="p_del">-</span>
<span class="p_del">-	CASE_GET_AR(KR0);</span>
<span class="p_del">-	CASE_GET_AR(KR1);</span>
<span class="p_del">-	CASE_GET_AR(KR2);</span>
<span class="p_del">-	CASE_GET_AR(KR3);</span>
<span class="p_del">-	CASE_GET_AR(KR4);</span>
<span class="p_del">-	CASE_GET_AR(KR5);</span>
<span class="p_del">-	CASE_GET_AR(KR6);</span>
<span class="p_del">-	CASE_GET_AR(KR7);</span>
<span class="p_del">-	CASE_GET_AR(RSC);</span>
<span class="p_del">-	CASE_GET_AR(BSP);</span>
<span class="p_del">-	CASE_GET_AR(BSPSTORE);</span>
<span class="p_del">-	CASE_GET_AR(RNAT);</span>
<span class="p_del">-	CASE_GET_AR(FCR);</span>
<span class="p_del">-	CASE_GET_AR(EFLAG);</span>
<span class="p_del">-	CASE_GET_AR(CSD);</span>
<span class="p_del">-	CASE_GET_AR(SSD);</span>
<span class="p_del">-	CASE_GET_AR(CFLAG);</span>
<span class="p_del">-	CASE_GET_AR(FSR);</span>
<span class="p_del">-	CASE_GET_AR(FIR);</span>
<span class="p_del">-	CASE_GET_AR(FDR);</span>
<span class="p_del">-	CASE_GET_AR(CCV);</span>
<span class="p_del">-	CASE_GET_AR(UNAT);</span>
<span class="p_del">-	CASE_GET_AR(FPSR);</span>
<span class="p_del">-	CASE_GET_AR(ITC);</span>
<span class="p_del">-	CASE_GET_AR(PFS);</span>
<span class="p_del">-	CASE_GET_AR(LC);</span>
<span class="p_del">-	CASE_GET_AR(EC);</span>
<span class="p_del">-</span>
<span class="p_del">-	CASE_GET_CR(DCR);</span>
<span class="p_del">-	CASE_GET_CR(ITM);</span>
<span class="p_del">-	CASE_GET_CR(IVA);</span>
<span class="p_del">-	CASE_GET_CR(PTA);</span>
<span class="p_del">-	CASE_GET_CR(IPSR);</span>
<span class="p_del">-	CASE_GET_CR(ISR);</span>
<span class="p_del">-	CASE_GET_CR(IIP);</span>
<span class="p_del">-	CASE_GET_CR(IFA);</span>
<span class="p_del">-	CASE_GET_CR(ITIR);</span>
<span class="p_del">-	CASE_GET_CR(IIPA);</span>
<span class="p_del">-	CASE_GET_CR(IFS);</span>
<span class="p_del">-	CASE_GET_CR(IIM);</span>
<span class="p_del">-	CASE_GET_CR(IHA);</span>
<span class="p_del">-	CASE_GET_CR(LID);</span>
<span class="p_del">-	CASE_GET_CR(IVR);</span>
<span class="p_del">-	CASE_GET_CR(TPR);</span>
<span class="p_del">-	CASE_GET_CR(EOI);</span>
<span class="p_del">-	CASE_GET_CR(IRR0);</span>
<span class="p_del">-	CASE_GET_CR(IRR1);</span>
<span class="p_del">-	CASE_GET_CR(IRR2);</span>
<span class="p_del">-	CASE_GET_CR(IRR3);</span>
<span class="p_del">-	CASE_GET_CR(ITV);</span>
<span class="p_del">-	CASE_GET_CR(PMV);</span>
<span class="p_del">-	CASE_GET_CR(CMCV);</span>
<span class="p_del">-	CASE_GET_CR(LRR0);</span>
<span class="p_del">-	CASE_GET_CR(LRR1);</span>
<span class="p_del">-</span>
<span class="p_del">-	default:</span>
<span class="p_del">-		printk(KERN_CRIT &quot;wrong_getreg %d\n&quot;, regnum);</span>
<span class="p_del">-		break;</span>
<span class="p_del">-	}</span>
<span class="p_del">-	return res;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-#define CASE_SET_REG(id)				\</span>
<span class="p_del">-	case _IA64_REG_ ## id:				\</span>
<span class="p_del">-	ia64_native_setreg(_IA64_REG_ ## id, val);	\</span>
<span class="p_del">-	break;</span>
<span class="p_del">-#define CASE_SET_AR(id) CASE_SET_REG(AR_ ## id)</span>
<span class="p_del">-#define CASE_SET_CR(id) CASE_SET_REG(CR_ ## id)</span>
<span class="p_del">-</span>
<span class="p_del">-void</span>
<span class="p_del">-ia64_native_setreg_func(int regnum, unsigned long val)</span>
<span class="p_del">-{</span>
<span class="p_del">-	switch (regnum) {</span>
<span class="p_del">-	case _IA64_REG_PSR_L:</span>
<span class="p_del">-		ia64_native_setreg(_IA64_REG_PSR_L, val);</span>
<span class="p_del">-		ia64_dv_serialize_data();</span>
<span class="p_del">-		break;</span>
<span class="p_del">-	CASE_SET_REG(SP);</span>
<span class="p_del">-	CASE_SET_REG(GP);</span>
<span class="p_del">-</span>
<span class="p_del">-	CASE_SET_AR(KR0);</span>
<span class="p_del">-	CASE_SET_AR(KR1);</span>
<span class="p_del">-	CASE_SET_AR(KR2);</span>
<span class="p_del">-	CASE_SET_AR(KR3);</span>
<span class="p_del">-	CASE_SET_AR(KR4);</span>
<span class="p_del">-	CASE_SET_AR(KR5);</span>
<span class="p_del">-	CASE_SET_AR(KR6);</span>
<span class="p_del">-	CASE_SET_AR(KR7);</span>
<span class="p_del">-	CASE_SET_AR(RSC);</span>
<span class="p_del">-	CASE_SET_AR(BSP);</span>
<span class="p_del">-	CASE_SET_AR(BSPSTORE);</span>
<span class="p_del">-	CASE_SET_AR(RNAT);</span>
<span class="p_del">-	CASE_SET_AR(FCR);</span>
<span class="p_del">-	CASE_SET_AR(EFLAG);</span>
<span class="p_del">-	CASE_SET_AR(CSD);</span>
<span class="p_del">-	CASE_SET_AR(SSD);</span>
<span class="p_del">-	CASE_SET_AR(CFLAG);</span>
<span class="p_del">-	CASE_SET_AR(FSR);</span>
<span class="p_del">-	CASE_SET_AR(FIR);</span>
<span class="p_del">-	CASE_SET_AR(FDR);</span>
<span class="p_del">-	CASE_SET_AR(CCV);</span>
<span class="p_del">-	CASE_SET_AR(UNAT);</span>
<span class="p_del">-	CASE_SET_AR(FPSR);</span>
<span class="p_del">-	CASE_SET_AR(ITC);</span>
<span class="p_del">-	CASE_SET_AR(PFS);</span>
<span class="p_del">-	CASE_SET_AR(LC);</span>
<span class="p_del">-	CASE_SET_AR(EC);</span>
<span class="p_del">-</span>
<span class="p_del">-	CASE_SET_CR(DCR);</span>
<span class="p_del">-	CASE_SET_CR(ITM);</span>
<span class="p_del">-	CASE_SET_CR(IVA);</span>
<span class="p_del">-	CASE_SET_CR(PTA);</span>
<span class="p_del">-	CASE_SET_CR(IPSR);</span>
<span class="p_del">-	CASE_SET_CR(ISR);</span>
<span class="p_del">-	CASE_SET_CR(IIP);</span>
<span class="p_del">-	CASE_SET_CR(IFA);</span>
<span class="p_del">-	CASE_SET_CR(ITIR);</span>
<span class="p_del">-	CASE_SET_CR(IIPA);</span>
<span class="p_del">-	CASE_SET_CR(IFS);</span>
<span class="p_del">-	CASE_SET_CR(IIM);</span>
<span class="p_del">-	CASE_SET_CR(IHA);</span>
<span class="p_del">-	CASE_SET_CR(LID);</span>
<span class="p_del">-	CASE_SET_CR(IVR);</span>
<span class="p_del">-	CASE_SET_CR(TPR);</span>
<span class="p_del">-	CASE_SET_CR(EOI);</span>
<span class="p_del">-	CASE_SET_CR(IRR0);</span>
<span class="p_del">-	CASE_SET_CR(IRR1);</span>
<span class="p_del">-	CASE_SET_CR(IRR2);</span>
<span class="p_del">-	CASE_SET_CR(IRR3);</span>
<span class="p_del">-	CASE_SET_CR(ITV);</span>
<span class="p_del">-	CASE_SET_CR(PMV);</span>
<span class="p_del">-	CASE_SET_CR(CMCV);</span>
<span class="p_del">-	CASE_SET_CR(LRR0);</span>
<span class="p_del">-	CASE_SET_CR(LRR1);</span>
<span class="p_del">-	default:</span>
<span class="p_del">-		printk(KERN_CRIT &quot;wrong setreg %d\n&quot;, regnum);</span>
<span class="p_del">-		break;</span>
<span class="p_del">-	}</span>
<span class="p_del">-}</span>
<span class="p_del">-#else</span>
<span class="p_del">-</span>
<span class="p_del">-#define __DEFINE_FUNC(name, code)					\</span>
<span class="p_del">-	extern const char ia64_native_ ## name ## _direct_start[];	\</span>
<span class="p_del">-	extern const char ia64_native_ ## name ## _direct_end[];	\</span>
<span class="p_del">-	asm (&quot;.align 32\n&quot;						\</span>
<span class="p_del">-	     &quot;.proc ia64_native_&quot; #name &quot;_func\n&quot;			\</span>
<span class="p_del">-	     &quot;ia64_native_&quot; #name &quot;_func:\n&quot;				\</span>
<span class="p_del">-	     &quot;ia64_native_&quot; #name &quot;_direct_start:\n&quot;			\</span>
<span class="p_del">-	     code							\</span>
<span class="p_del">-	     &quot;ia64_native_&quot; #name &quot;_direct_end:\n&quot;			\</span>
<span class="p_del">-	     &quot;br.cond.sptk.many b6\n&quot;					\</span>
<span class="p_del">-	     &quot;.endp ia64_native_&quot; #name &quot;_func\n&quot;)</span>
<span class="p_del">-</span>
<span class="p_del">-#define DEFINE_VOID_FUNC0(name, code)				\</span>
<span class="p_del">-	extern void						\</span>
<span class="p_del">-	ia64_native_ ## name ## _func(void);			\</span>
<span class="p_del">-	__DEFINE_FUNC(name, code)</span>
<span class="p_del">-</span>
<span class="p_del">-#define DEFINE_VOID_FUNC1(name, code)				\</span>
<span class="p_del">-	extern void						\</span>
<span class="p_del">-	ia64_native_ ## name ## _func(unsigned long arg);	\</span>
<span class="p_del">-	__DEFINE_FUNC(name, code)</span>
<span class="p_del">-</span>
<span class="p_del">-#define DEFINE_VOID_FUNC1_VOID(name, code)			\</span>
<span class="p_del">-	extern void						\</span>
<span class="p_del">-	ia64_native_ ## name ## _func(void *arg);		\</span>
<span class="p_del">-	__DEFINE_FUNC(name, code)</span>
<span class="p_del">-</span>
<span class="p_del">-#define DEFINE_VOID_FUNC2(name, code)				\</span>
<span class="p_del">-	extern void						\</span>
<span class="p_del">-	ia64_native_ ## name ## _func(unsigned long arg0,	\</span>
<span class="p_del">-				      unsigned long arg1);	\</span>
<span class="p_del">-	__DEFINE_FUNC(name, code)</span>
<span class="p_del">-</span>
<span class="p_del">-#define DEFINE_FUNC0(name, code)		\</span>
<span class="p_del">-	extern unsigned long			\</span>
<span class="p_del">-	ia64_native_ ## name ## _func(void);	\</span>
<span class="p_del">-	__DEFINE_FUNC(name, code)</span>
<span class="p_del">-</span>
<span class="p_del">-#define DEFINE_FUNC1(name, type, code)			\</span>
<span class="p_del">-	extern unsigned long				\</span>
<span class="p_del">-	ia64_native_ ## name ## _func(type arg);	\</span>
<span class="p_del">-	__DEFINE_FUNC(name, code)</span>
<span class="p_del">-</span>
<span class="p_del">-DEFINE_VOID_FUNC1_VOID(fc,</span>
<span class="p_del">-		       &quot;fc r8\n&quot;);</span>
<span class="p_del">-DEFINE_VOID_FUNC1(intrin_local_irq_restore,</span>
<span class="p_del">-		  &quot;;;\n&quot;</span>
<span class="p_del">-		  &quot;     cmp.ne p6, p7 = r8, r0\n&quot;</span>
<span class="p_del">-		  &quot;;;\n&quot;</span>
<span class="p_del">-		  &quot;(p6) ssm psr.i\n&quot;</span>
<span class="p_del">-		  &quot;(p7) rsm psr.i\n&quot;</span>
<span class="p_del">-		  &quot;;;\n&quot;</span>
<span class="p_del">-		  &quot;(p6) srlz.d\n&quot;);</span>
<span class="p_del">-</span>
<span class="p_del">-DEFINE_VOID_FUNC2(ptcga,</span>
<span class="p_del">-		  &quot;ptc.ga r8, r9\n&quot;);</span>
<span class="p_del">-DEFINE_VOID_FUNC2(set_rr,</span>
<span class="p_del">-		  &quot;mov rr[r8] = r9\n&quot;);</span>
<span class="p_del">-</span>
<span class="p_del">-/* ia64_native_getreg(_IA64_REG_PSR) &amp; IA64_PSR_I */</span>
<span class="p_del">-DEFINE_FUNC0(get_psr_i,</span>
<span class="p_del">-	     &quot;mov r2 = &quot; __stringify(1 &lt;&lt; IA64_PSR_I_BIT) &quot;\n&quot;</span>
<span class="p_del">-	     &quot;mov r8 = psr\n&quot;</span>
<span class="p_del">-	     &quot;;;\n&quot;</span>
<span class="p_del">-	     &quot;and r8 = r2, r8\n&quot;);</span>
<span class="p_del">-</span>
<span class="p_del">-DEFINE_FUNC1(thash, unsigned long,</span>
<span class="p_del">-	     &quot;thash r8 = r8\n&quot;);</span>
<span class="p_del">-DEFINE_FUNC1(get_cpuid, int,</span>
<span class="p_del">-	     &quot;mov r8 = cpuid[r8]\n&quot;);</span>
<span class="p_del">-DEFINE_FUNC1(get_pmd, int,</span>
<span class="p_del">-	     &quot;mov r8 = pmd[r8]\n&quot;);</span>
<span class="p_del">-DEFINE_FUNC1(get_rr, unsigned long,</span>
<span class="p_del">-	     &quot;mov r8 = rr[r8]\n&quot;);</span>
<span class="p_del">-</span>
<span class="p_del">-DEFINE_VOID_FUNC0(ssm_i,</span>
<span class="p_del">-		  &quot;ssm psr.i\n&quot;);</span>
<span class="p_del">-DEFINE_VOID_FUNC0(rsm_i,</span>
<span class="p_del">-		  &quot;rsm psr.i\n&quot;);</span>
<span class="p_del">-</span>
<span class="p_del">-extern void</span>
<span class="p_del">-ia64_native_set_rr0_to_rr4_func(unsigned long val0, unsigned long val1,</span>
<span class="p_del">-				unsigned long val2, unsigned long val3,</span>
<span class="p_del">-				unsigned long val4);</span>
<span class="p_del">-__DEFINE_FUNC(set_rr0_to_rr4,</span>
<span class="p_del">-	      &quot;mov rr[r0] = r8\n&quot;</span>
<span class="p_del">-	      &quot;movl r2 = 0x2000000000000000\n&quot;</span>
<span class="p_del">-	      &quot;;;\n&quot;</span>
<span class="p_del">-	      &quot;mov rr[r2] = r9\n&quot;</span>
<span class="p_del">-	      &quot;shl r3 = r2, 1\n&quot;	/* movl r3 = 0x4000000000000000 */</span>
<span class="p_del">-	      &quot;;;\n&quot;</span>
<span class="p_del">-	      &quot;add r2 = r2, r3\n&quot;	/* movl r2 = 0x6000000000000000 */</span>
<span class="p_del">-	      &quot;mov rr[r3] = r10\n&quot;</span>
<span class="p_del">-	      &quot;;;\n&quot;</span>
<span class="p_del">-	      &quot;mov rr[r2] = r11\n&quot;</span>
<span class="p_del">-	      &quot;shl r3 = r3, 1\n&quot;	/* movl r3 = 0x8000000000000000 */</span>
<span class="p_del">-	      &quot;;;\n&quot;</span>
<span class="p_del">-	      &quot;mov rr[r3] = r14\n&quot;);</span>
<span class="p_del">-</span>
<span class="p_del">-extern unsigned long ia64_native_getreg_func(int regnum);</span>
<span class="p_del">-asm(&quot;.global ia64_native_getreg_func\n&quot;);</span>
<span class="p_del">-#define __DEFINE_GET_REG(id, reg)			\</span>
<span class="p_del">-	&quot;mov r2 = &quot; __stringify(_IA64_REG_ ## id) &quot;\n&quot;	\</span>
<span class="p_del">-	&quot;;;\n&quot;						\</span>
<span class="p_del">-	&quot;cmp.eq p6, p0 = r2, r8\n&quot;			\</span>
<span class="p_del">-	&quot;;;\n&quot;						\</span>
<span class="p_del">-	&quot;(p6) mov r8 = &quot; #reg &quot;\n&quot;			\</span>
<span class="p_del">-	&quot;(p6) br.cond.sptk.many b6\n&quot;			\</span>
<span class="p_del">-	&quot;;;\n&quot;</span>
<span class="p_del">-#define __DEFINE_GET_AR(id, reg)	__DEFINE_GET_REG(AR_ ## id, ar.reg)</span>
<span class="p_del">-#define __DEFINE_GET_CR(id, reg)	__DEFINE_GET_REG(CR_ ## id, cr.reg)</span>
<span class="p_del">-</span>
<span class="p_del">-__DEFINE_FUNC(getreg,</span>
<span class="p_del">-	      __DEFINE_GET_REG(GP, gp)</span>
<span class="p_del">-	      /*__DEFINE_GET_REG(IP, ip)*/ /* returned ip value shouldn&#39;t be constant */</span>
<span class="p_del">-	      __DEFINE_GET_REG(PSR, psr)</span>
<span class="p_del">-	      __DEFINE_GET_REG(TP, tp)</span>
<span class="p_del">-	      __DEFINE_GET_REG(SP, sp)</span>
<span class="p_del">-</span>
<span class="p_del">-	      __DEFINE_GET_REG(AR_KR0, ar0)</span>
<span class="p_del">-	      __DEFINE_GET_REG(AR_KR1, ar1)</span>
<span class="p_del">-	      __DEFINE_GET_REG(AR_KR2, ar2)</span>
<span class="p_del">-	      __DEFINE_GET_REG(AR_KR3, ar3)</span>
<span class="p_del">-	      __DEFINE_GET_REG(AR_KR4, ar4)</span>
<span class="p_del">-	      __DEFINE_GET_REG(AR_KR5, ar5)</span>
<span class="p_del">-	      __DEFINE_GET_REG(AR_KR6, ar6)</span>
<span class="p_del">-	      __DEFINE_GET_REG(AR_KR7, ar7)</span>
<span class="p_del">-	      __DEFINE_GET_AR(RSC, rsc)</span>
<span class="p_del">-	      __DEFINE_GET_AR(BSP, bsp)</span>
<span class="p_del">-	      __DEFINE_GET_AR(BSPSTORE, bspstore)</span>
<span class="p_del">-	      __DEFINE_GET_AR(RNAT, rnat)</span>
<span class="p_del">-	      __DEFINE_GET_AR(FCR, fcr)</span>
<span class="p_del">-	      __DEFINE_GET_AR(EFLAG, eflag)</span>
<span class="p_del">-	      __DEFINE_GET_AR(CSD, csd)</span>
<span class="p_del">-	      __DEFINE_GET_AR(SSD, ssd)</span>
<span class="p_del">-	      __DEFINE_GET_REG(AR_CFLAG, ar27)</span>
<span class="p_del">-	      __DEFINE_GET_AR(FSR, fsr)</span>
<span class="p_del">-	      __DEFINE_GET_AR(FIR, fir)</span>
<span class="p_del">-	      __DEFINE_GET_AR(FDR, fdr)</span>
<span class="p_del">-	      __DEFINE_GET_AR(CCV, ccv)</span>
<span class="p_del">-	      __DEFINE_GET_AR(UNAT, unat)</span>
<span class="p_del">-	      __DEFINE_GET_AR(FPSR, fpsr)</span>
<span class="p_del">-	      __DEFINE_GET_AR(ITC, itc)</span>
<span class="p_del">-	      __DEFINE_GET_AR(PFS, pfs)</span>
<span class="p_del">-	      __DEFINE_GET_AR(LC, lc)</span>
<span class="p_del">-	      __DEFINE_GET_AR(EC, ec)</span>
<span class="p_del">-</span>
<span class="p_del">-	      __DEFINE_GET_CR(DCR, dcr)</span>
<span class="p_del">-	      __DEFINE_GET_CR(ITM, itm)</span>
<span class="p_del">-	      __DEFINE_GET_CR(IVA, iva)</span>
<span class="p_del">-	      __DEFINE_GET_CR(PTA, pta)</span>
<span class="p_del">-	      __DEFINE_GET_CR(IPSR, ipsr)</span>
<span class="p_del">-	      __DEFINE_GET_CR(ISR, isr)</span>
<span class="p_del">-	      __DEFINE_GET_CR(IIP, iip)</span>
<span class="p_del">-	      __DEFINE_GET_CR(IFA, ifa)</span>
<span class="p_del">-	      __DEFINE_GET_CR(ITIR, itir)</span>
<span class="p_del">-	      __DEFINE_GET_CR(IIPA, iipa)</span>
<span class="p_del">-	      __DEFINE_GET_CR(IFS, ifs)</span>
<span class="p_del">-	      __DEFINE_GET_CR(IIM, iim)</span>
<span class="p_del">-	      __DEFINE_GET_CR(IHA, iha)</span>
<span class="p_del">-	      __DEFINE_GET_CR(LID, lid)</span>
<span class="p_del">-	      __DEFINE_GET_CR(IVR, ivr)</span>
<span class="p_del">-	      __DEFINE_GET_CR(TPR, tpr)</span>
<span class="p_del">-	      __DEFINE_GET_CR(EOI, eoi)</span>
<span class="p_del">-	      __DEFINE_GET_CR(IRR0, irr0)</span>
<span class="p_del">-	      __DEFINE_GET_CR(IRR1, irr1)</span>
<span class="p_del">-	      __DEFINE_GET_CR(IRR2, irr2)</span>
<span class="p_del">-	      __DEFINE_GET_CR(IRR3, irr3)</span>
<span class="p_del">-	      __DEFINE_GET_CR(ITV, itv)</span>
<span class="p_del">-	      __DEFINE_GET_CR(PMV, pmv)</span>
<span class="p_del">-	      __DEFINE_GET_CR(CMCV, cmcv)</span>
<span class="p_del">-	      __DEFINE_GET_CR(LRR0, lrr0)</span>
<span class="p_del">-	      __DEFINE_GET_CR(LRR1, lrr1)</span>
<span class="p_del">-</span>
<span class="p_del">-	      &quot;mov r8 = -1\n&quot;	/* unsupported case */</span>
<span class="p_del">-	);</span>
<span class="p_del">-</span>
<span class="p_del">-extern void ia64_native_setreg_func(int regnum, unsigned long val);</span>
<span class="p_del">-asm(&quot;.global ia64_native_setreg_func\n&quot;);</span>
<span class="p_del">-#define __DEFINE_SET_REG(id, reg)			\</span>
<span class="p_del">-	&quot;mov r2 = &quot; __stringify(_IA64_REG_ ## id) &quot;\n&quot;	\</span>
<span class="p_del">-	&quot;;;\n&quot;						\</span>
<span class="p_del">-	&quot;cmp.eq p6, p0 = r2, r9\n&quot;			\</span>
<span class="p_del">-	&quot;;;\n&quot;						\</span>
<span class="p_del">-	&quot;(p6) mov &quot; #reg &quot; = r8\n&quot;			\</span>
<span class="p_del">-	&quot;(p6) br.cond.sptk.many b6\n&quot;			\</span>
<span class="p_del">-	&quot;;;\n&quot;</span>
<span class="p_del">-#define __DEFINE_SET_AR(id, reg)	__DEFINE_SET_REG(AR_ ## id, ar.reg)</span>
<span class="p_del">-#define __DEFINE_SET_CR(id, reg)	__DEFINE_SET_REG(CR_ ## id, cr.reg)</span>
<span class="p_del">-__DEFINE_FUNC(setreg,</span>
<span class="p_del">-	      &quot;mov r2 = &quot; __stringify(_IA64_REG_PSR_L) &quot;\n&quot;</span>
<span class="p_del">-	      &quot;;;\n&quot;</span>
<span class="p_del">-	      &quot;cmp.eq p6, p0 = r2, r9\n&quot;</span>
<span class="p_del">-	      &quot;;;\n&quot;</span>
<span class="p_del">-	      &quot;(p6) mov psr.l = r8\n&quot;</span>
<span class="p_del">-#ifdef HAVE_SERIALIZE_DIRECTIVE</span>
<span class="p_del">-	      &quot;.serialize.data\n&quot;</span>
<span class="p_del">-#endif</span>
<span class="p_del">-	      &quot;(p6) br.cond.sptk.many b6\n&quot;</span>
<span class="p_del">-	      __DEFINE_SET_REG(GP, gp)</span>
<span class="p_del">-	      __DEFINE_SET_REG(SP, sp)</span>
<span class="p_del">-</span>
<span class="p_del">-	      __DEFINE_SET_REG(AR_KR0, ar0)</span>
<span class="p_del">-	      __DEFINE_SET_REG(AR_KR1, ar1)</span>
<span class="p_del">-	      __DEFINE_SET_REG(AR_KR2, ar2)</span>
<span class="p_del">-	      __DEFINE_SET_REG(AR_KR3, ar3)</span>
<span class="p_del">-	      __DEFINE_SET_REG(AR_KR4, ar4)</span>
<span class="p_del">-	      __DEFINE_SET_REG(AR_KR5, ar5)</span>
<span class="p_del">-	      __DEFINE_SET_REG(AR_KR6, ar6)</span>
<span class="p_del">-	      __DEFINE_SET_REG(AR_KR7, ar7)</span>
<span class="p_del">-	      __DEFINE_SET_AR(RSC, rsc)</span>
<span class="p_del">-	      __DEFINE_SET_AR(BSP, bsp)</span>
<span class="p_del">-	      __DEFINE_SET_AR(BSPSTORE, bspstore)</span>
<span class="p_del">-	      __DEFINE_SET_AR(RNAT, rnat)</span>
<span class="p_del">-	      __DEFINE_SET_AR(FCR, fcr)</span>
<span class="p_del">-	      __DEFINE_SET_AR(EFLAG, eflag)</span>
<span class="p_del">-	      __DEFINE_SET_AR(CSD, csd)</span>
<span class="p_del">-	      __DEFINE_SET_AR(SSD, ssd)</span>
<span class="p_del">-	      __DEFINE_SET_REG(AR_CFLAG, ar27)</span>
<span class="p_del">-	      __DEFINE_SET_AR(FSR, fsr)</span>
<span class="p_del">-	      __DEFINE_SET_AR(FIR, fir)</span>
<span class="p_del">-	      __DEFINE_SET_AR(FDR, fdr)</span>
<span class="p_del">-	      __DEFINE_SET_AR(CCV, ccv)</span>
<span class="p_del">-	      __DEFINE_SET_AR(UNAT, unat)</span>
<span class="p_del">-	      __DEFINE_SET_AR(FPSR, fpsr)</span>
<span class="p_del">-	      __DEFINE_SET_AR(ITC, itc)</span>
<span class="p_del">-	      __DEFINE_SET_AR(PFS, pfs)</span>
<span class="p_del">-	      __DEFINE_SET_AR(LC, lc)</span>
<span class="p_del">-	      __DEFINE_SET_AR(EC, ec)</span>
<span class="p_del">-</span>
<span class="p_del">-	      __DEFINE_SET_CR(DCR, dcr)</span>
<span class="p_del">-	      __DEFINE_SET_CR(ITM, itm)</span>
<span class="p_del">-	      __DEFINE_SET_CR(IVA, iva)</span>
<span class="p_del">-	      __DEFINE_SET_CR(PTA, pta)</span>
<span class="p_del">-	      __DEFINE_SET_CR(IPSR, ipsr)</span>
<span class="p_del">-	      __DEFINE_SET_CR(ISR, isr)</span>
<span class="p_del">-	      __DEFINE_SET_CR(IIP, iip)</span>
<span class="p_del">-	      __DEFINE_SET_CR(IFA, ifa)</span>
<span class="p_del">-	      __DEFINE_SET_CR(ITIR, itir)</span>
<span class="p_del">-	      __DEFINE_SET_CR(IIPA, iipa)</span>
<span class="p_del">-	      __DEFINE_SET_CR(IFS, ifs)</span>
<span class="p_del">-	      __DEFINE_SET_CR(IIM, iim)</span>
<span class="p_del">-	      __DEFINE_SET_CR(IHA, iha)</span>
<span class="p_del">-	      __DEFINE_SET_CR(LID, lid)</span>
<span class="p_del">-	      __DEFINE_SET_CR(IVR, ivr)</span>
<span class="p_del">-	      __DEFINE_SET_CR(TPR, tpr)</span>
<span class="p_del">-	      __DEFINE_SET_CR(EOI, eoi)</span>
<span class="p_del">-	      __DEFINE_SET_CR(IRR0, irr0)</span>
<span class="p_del">-	      __DEFINE_SET_CR(IRR1, irr1)</span>
<span class="p_del">-	      __DEFINE_SET_CR(IRR2, irr2)</span>
<span class="p_del">-	      __DEFINE_SET_CR(IRR3, irr3)</span>
<span class="p_del">-	      __DEFINE_SET_CR(ITV, itv)</span>
<span class="p_del">-	      __DEFINE_SET_CR(PMV, pmv)</span>
<span class="p_del">-	      __DEFINE_SET_CR(CMCV, cmcv)</span>
<span class="p_del">-	      __DEFINE_SET_CR(LRR0, lrr0)</span>
<span class="p_del">-	      __DEFINE_SET_CR(LRR1, lrr1)</span>
<span class="p_del">-	);</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
<span class="p_del">-struct pv_cpu_ops pv_cpu_ops = {</span>
<span class="p_del">-	.fc		= ia64_native_fc_func,</span>
<span class="p_del">-	.thash		= ia64_native_thash_func,</span>
<span class="p_del">-	.get_cpuid	= ia64_native_get_cpuid_func,</span>
<span class="p_del">-	.get_pmd	= ia64_native_get_pmd_func,</span>
<span class="p_del">-	.ptcga		= ia64_native_ptcga_func,</span>
<span class="p_del">-	.get_rr		= ia64_native_get_rr_func,</span>
<span class="p_del">-	.set_rr		= ia64_native_set_rr_func,</span>
<span class="p_del">-	.set_rr0_to_rr4	= ia64_native_set_rr0_to_rr4_func,</span>
<span class="p_del">-	.ssm_i		= ia64_native_ssm_i_func,</span>
<span class="p_del">-	.getreg		= ia64_native_getreg_func,</span>
<span class="p_del">-	.setreg		= ia64_native_setreg_func,</span>
<span class="p_del">-	.rsm_i		= ia64_native_rsm_i_func,</span>
<span class="p_del">-	.get_psr_i	= ia64_native_get_psr_i_func,</span>
<span class="p_del">-	.intrin_local_irq_restore</span>
<span class="p_del">-			= ia64_native_intrin_local_irq_restore_func,</span>
<span class="p_del">-};</span>
<span class="p_del">-EXPORT_SYMBOL(pv_cpu_ops);</span>
<span class="p_del">-</span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * replacement of hand written assembly codes.</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-void</span>
<span class="p_del">-paravirt_cpu_asm_init(const struct pv_cpu_asm_switch *cpu_asm_switch)</span>
<span class="p_del">-{</span>
<span class="p_del">-	extern unsigned long paravirt_switch_to_targ;</span>
<span class="p_del">-	extern unsigned long paravirt_leave_syscall_targ;</span>
<span class="p_del">-	extern unsigned long paravirt_work_processed_syscall_targ;</span>
<span class="p_del">-	extern unsigned long paravirt_leave_kernel_targ;</span>
<span class="p_del">-</span>
<span class="p_del">-	paravirt_switch_to_targ = cpu_asm_switch-&gt;switch_to;</span>
<span class="p_del">-	paravirt_leave_syscall_targ = cpu_asm_switch-&gt;leave_syscall;</span>
<span class="p_del">-	paravirt_work_processed_syscall_targ =</span>
<span class="p_del">-		cpu_asm_switch-&gt;work_processed_syscall;</span>
<span class="p_del">-	paravirt_leave_kernel_targ = cpu_asm_switch-&gt;leave_kernel;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-/***************************************************************************</span>
<span class="p_del">- * pv_iosapic_ops</span>
<span class="p_del">- * iosapic read/write hooks.</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-static unsigned int</span>
<span class="p_del">-ia64_native_iosapic_read(char __iomem *iosapic, unsigned int reg)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return __ia64_native_iosapic_read(iosapic, reg);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static void</span>
<span class="p_del">-ia64_native_iosapic_write(char __iomem *iosapic, unsigned int reg, u32 val)</span>
<span class="p_del">-{</span>
<span class="p_del">-	__ia64_native_iosapic_write(iosapic, reg, val);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-struct pv_iosapic_ops pv_iosapic_ops = {</span>
<span class="p_del">-	.pcat_compat_init = ia64_native_iosapic_pcat_compat_init,</span>
<span class="p_del">-	.__get_irq_chip = ia64_native_iosapic_get_irq_chip,</span>
<span class="p_del">-</span>
<span class="p_del">-	.__read = ia64_native_iosapic_read,</span>
<span class="p_del">-	.__write = ia64_native_iosapic_write,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-/***************************************************************************</span>
<span class="p_del">- * pv_irq_ops</span>
<span class="p_del">- * irq operations</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-struct pv_irq_ops pv_irq_ops = {</span>
<span class="p_del">-	.register_ipi = ia64_native_register_ipi,</span>
<span class="p_del">-</span>
<span class="p_del">-	.assign_irq_vector = ia64_native_assign_irq_vector,</span>
<span class="p_del">-	.free_irq_vector = ia64_native_free_irq_vector,</span>
<span class="p_del">-	.register_percpu_irq = ia64_native_register_percpu_irq,</span>
<span class="p_del">-</span>
<span class="p_del">-	.resend_irq = ia64_native_resend_irq,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-/***************************************************************************</span>
<span class="p_del">- * pv_time_ops</span>
<span class="p_del">- * time operations</span>
<span class="p_del">- */</span>
<span class="p_del">-struct static_key paravirt_steal_enabled;</span>
<span class="p_del">-struct static_key paravirt_steal_rq_enabled;</span>
<span class="p_del">-</span>
<span class="p_del">-static int</span>
<span class="p_del">-ia64_native_do_steal_accounting(unsigned long *new_itm)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-struct pv_time_ops pv_time_ops = {</span>
<span class="p_del">-	.do_steal_accounting = ia64_native_do_steal_accounting,</span>
<span class="p_del">-	.sched_clock = ia64_native_sched_clock,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-/***************************************************************************</span>
<span class="p_del">- * binary pacthing</span>
<span class="p_del">- * pv_init_ops.patch_bundle</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef ASM_SUPPORTED</span>
<span class="p_del">-#define IA64_NATIVE_PATCH_DEFINE_GET_REG(name, reg)	\</span>
<span class="p_del">-	__DEFINE_FUNC(get_ ## name,			\</span>
<span class="p_del">-		      &quot;;;\n&quot;				\</span>
<span class="p_del">-		      &quot;mov r8 = &quot; #reg &quot;\n&quot;		\</span>
<span class="p_del">-		      &quot;;;\n&quot;)</span>
<span class="p_del">-</span>
<span class="p_del">-#define IA64_NATIVE_PATCH_DEFINE_SET_REG(name, reg)	\</span>
<span class="p_del">-	__DEFINE_FUNC(set_ ## name,			\</span>
<span class="p_del">-		      &quot;;;\n&quot;				\</span>
<span class="p_del">-		      &quot;mov &quot; #reg &quot; = r8\n&quot;		\</span>
<span class="p_del">-		      &quot;;;\n&quot;)</span>
<span class="p_del">-</span>
<span class="p_del">-#define IA64_NATIVE_PATCH_DEFINE_REG(name, reg)		\</span>
<span class="p_del">-	IA64_NATIVE_PATCH_DEFINE_GET_REG(name, reg);	\</span>
<span class="p_del">-	IA64_NATIVE_PATCH_DEFINE_SET_REG(name, reg)	\</span>
<span class="p_del">-</span>
<span class="p_del">-#define IA64_NATIVE_PATCH_DEFINE_AR(name, reg)			\</span>
<span class="p_del">-	IA64_NATIVE_PATCH_DEFINE_REG(ar_ ## name, ar.reg)</span>
<span class="p_del">-</span>
<span class="p_del">-#define IA64_NATIVE_PATCH_DEFINE_CR(name, reg)			\</span>
<span class="p_del">-	IA64_NATIVE_PATCH_DEFINE_REG(cr_ ## name, cr.reg)</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_GET_REG(psr, psr);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_GET_REG(tp, tp);</span>
<span class="p_del">-</span>
<span class="p_del">-/* IA64_NATIVE_PATCH_DEFINE_SET_REG(psr_l, psr.l); */</span>
<span class="p_del">-__DEFINE_FUNC(set_psr_l,</span>
<span class="p_del">-	      &quot;;;\n&quot;</span>
<span class="p_del">-	      &quot;mov psr.l = r8\n&quot;</span>
<span class="p_del">-#ifdef HAVE_SERIALIZE_DIRECTIVE</span>
<span class="p_del">-	      &quot;.serialize.data\n&quot;</span>
<span class="p_del">-#endif</span>
<span class="p_del">-	      &quot;;;\n&quot;);</span>
<span class="p_del">-</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_REG(gp, gp);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_REG(sp, sp);</span>
<span class="p_del">-</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_REG(kr0, ar0);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_REG(kr1, ar1);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_REG(kr2, ar2);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_REG(kr3, ar3);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_REG(kr4, ar4);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_REG(kr5, ar5);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_REG(kr6, ar6);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_REG(kr7, ar7);</span>
<span class="p_del">-</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(rsc, rsc);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(bsp, bsp);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(bspstore, bspstore);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(rnat, rnat);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(fcr, fcr);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(eflag, eflag);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(csd, csd);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(ssd, ssd);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_REG(ar27, ar27);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(fsr, fsr);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(fir, fir);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(fdr, fdr);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(ccv, ccv);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(unat, unat);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(fpsr, fpsr);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(itc, itc);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(pfs, pfs);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(lc, lc);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_AR(ec, ec);</span>
<span class="p_del">-</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(dcr, dcr);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(itm, itm);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(iva, iva);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(pta, pta);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(ipsr, ipsr);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(isr, isr);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(iip, iip);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(ifa, ifa);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(itir, itir);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(iipa, iipa);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(ifs, ifs);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(iim, iim);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(iha, iha);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(lid, lid);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(ivr, ivr);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(tpr, tpr);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(eoi, eoi);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(irr0, irr0);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(irr1, irr1);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(irr2, irr2);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(irr3, irr3);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(itv, itv);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(pmv, pmv);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(cmcv, cmcv);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(lrr0, lrr0);</span>
<span class="p_del">-IA64_NATIVE_PATCH_DEFINE_CR(lrr1, lrr1);</span>
<span class="p_del">-</span>
<span class="p_del">-static const struct paravirt_patch_bundle_elem ia64_native_patch_bundle_elems[]</span>
<span class="p_del">-__initdata_or_module =</span>
<span class="p_del">-{</span>
<span class="p_del">-#define IA64_NATIVE_PATCH_BUNDLE_ELEM(name, type)		\</span>
<span class="p_del">-	{							\</span>
<span class="p_del">-		(void*)ia64_native_ ## name ## _direct_start,	\</span>
<span class="p_del">-		(void*)ia64_native_ ## name ## _direct_end,	\</span>
<span class="p_del">-		PARAVIRT_PATCH_TYPE_ ## type,			\</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM(fc, FC),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM(thash, THASH),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM(get_cpuid, GET_CPUID),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM(get_pmd, GET_PMD),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM(ptcga, PTCGA),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM(get_rr, GET_RR),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM(set_rr, SET_RR),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM(set_rr0_to_rr4, SET_RR0_TO_RR4),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM(ssm_i, SSM_I),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM(rsm_i, RSM_I),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM(get_psr_i, GET_PSR_I),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM(intrin_local_irq_restore,</span>
<span class="p_del">-				      INTRIN_LOCAL_IRQ_RESTORE),</span>
<span class="p_del">-</span>
<span class="p_del">-#define IA64_NATIVE_PATCH_BUNDLE_ELEM_GETREG(name, reg)			\</span>
<span class="p_del">-	{								\</span>
<span class="p_del">-		(void*)ia64_native_get_ ## name ## _direct_start,	\</span>
<span class="p_del">-		(void*)ia64_native_get_ ## name ## _direct_end,		\</span>
<span class="p_del">-		PARAVIRT_PATCH_TYPE_GETREG + _IA64_REG_ ## reg,		\</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-#define IA64_NATIVE_PATCH_BUNDLE_ELEM_SETREG(name, reg)			\</span>
<span class="p_del">-	{								\</span>
<span class="p_del">-		(void*)ia64_native_set_ ## name ## _direct_start,	\</span>
<span class="p_del">-		(void*)ia64_native_set_ ## name ## _direct_end,		\</span>
<span class="p_del">-		PARAVIRT_PATCH_TYPE_SETREG + _IA64_REG_ ## reg,		\</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-#define IA64_NATIVE_PATCH_BUNDLE_ELEM_REG(name, reg)		\</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_GETREG(name, reg),	\</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_SETREG(name, reg)		\</span>
<span class="p_del">-</span>
<span class="p_del">-#define IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(name, reg)		\</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_REG(ar_ ## name, AR_ ## reg)</span>
<span class="p_del">-</span>
<span class="p_del">-#define IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(name, reg)		\</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_REG(cr_ ## name, CR_ ## reg)</span>
<span class="p_del">-</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_GETREG(psr, PSR),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_GETREG(tp, TP),</span>
<span class="p_del">-</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_SETREG(psr_l, PSR_L),</span>
<span class="p_del">-</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_REG(gp, GP),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_REG(sp, SP),</span>
<span class="p_del">-</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_REG(kr0, AR_KR0),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_REG(kr1, AR_KR1),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_REG(kr2, AR_KR2),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_REG(kr3, AR_KR3),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_REG(kr4, AR_KR4),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_REG(kr5, AR_KR5),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_REG(kr6, AR_KR6),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_REG(kr7, AR_KR7),</span>
<span class="p_del">-</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(rsc, RSC),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(bsp, BSP),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(bspstore, BSPSTORE),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(rnat, RNAT),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(fcr, FCR),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(eflag, EFLAG),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(csd, CSD),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(ssd, SSD),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_REG(ar27, AR_CFLAG),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(fsr, FSR),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(fir, FIR),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(fdr, FDR),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(ccv, CCV),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(unat, UNAT),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(fpsr, FPSR),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(itc, ITC),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(pfs, PFS),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(lc, LC),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_AR(ec, EC),</span>
<span class="p_del">-</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(dcr, DCR),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(itm, ITM),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(iva, IVA),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(pta, PTA),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(ipsr, IPSR),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(isr, ISR),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(iip, IIP),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(ifa, IFA),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(itir, ITIR),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(iipa, IIPA),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(ifs, IFS),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(iim, IIM),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(iha, IHA),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(lid, LID),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(ivr, IVR),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(tpr, TPR),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(eoi, EOI),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(irr0, IRR0),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(irr1, IRR1),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(irr2, IRR2),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(irr3, IRR3),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(itv, ITV),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(pmv, PMV),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(cmcv, CMCV),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(lrr0, LRR0),</span>
<span class="p_del">-	IA64_NATIVE_PATCH_BUNDLE_ELEM_CR(lrr1, LRR1),</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-unsigned long __init_or_module</span>
<span class="p_del">-ia64_native_patch_bundle(void *sbundle, void *ebundle, unsigned long type)</span>
<span class="p_del">-{</span>
<span class="p_del">-	const unsigned long nelems = sizeof(ia64_native_patch_bundle_elems) /</span>
<span class="p_del">-		sizeof(ia64_native_patch_bundle_elems[0]);</span>
<span class="p_del">-</span>
<span class="p_del">-	return __paravirt_patch_apply_bundle(sbundle, ebundle, type,</span>
<span class="p_del">-					      ia64_native_patch_bundle_elems,</span>
<span class="p_del">-					      nelems, NULL);</span>
<span class="p_del">-}</span>
<span class="p_del">-#endif /* ASM_SUPPOTED */</span>
<span class="p_del">-</span>
<span class="p_del">-extern const char ia64_native_switch_to[];</span>
<span class="p_del">-extern const char ia64_native_leave_syscall[];</span>
<span class="p_del">-extern const char ia64_native_work_processed_syscall[];</span>
<span class="p_del">-extern const char ia64_native_leave_kernel[];</span>
<span class="p_del">-</span>
<span class="p_del">-const struct paravirt_patch_branch_target ia64_native_branch_target[]</span>
<span class="p_del">-__initconst = {</span>
<span class="p_del">-#define PARAVIRT_BR_TARGET(name, type)			\</span>
<span class="p_del">-	{						\</span>
<span class="p_del">-		ia64_native_ ## name,			\</span>
<span class="p_del">-		PARAVIRT_PATCH_TYPE_BR_ ## type,	\</span>
<span class="p_del">-	}</span>
<span class="p_del">-	PARAVIRT_BR_TARGET(switch_to, SWITCH_TO),</span>
<span class="p_del">-	PARAVIRT_BR_TARGET(leave_syscall, LEAVE_SYSCALL),</span>
<span class="p_del">-	PARAVIRT_BR_TARGET(work_processed_syscall, WORK_PROCESSED_SYSCALL),</span>
<span class="p_del">-	PARAVIRT_BR_TARGET(leave_kernel, LEAVE_KERNEL),</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-static void __init</span>
<span class="p_del">-ia64_native_patch_branch(unsigned long tag, unsigned long type)</span>
<span class="p_del">-{</span>
<span class="p_del">-	const unsigned long nelem =</span>
<span class="p_del">-		sizeof(ia64_native_branch_target) /</span>
<span class="p_del">-		sizeof(ia64_native_branch_target[0]);</span>
<span class="p_del">-	__paravirt_patch_apply_branch(tag, type,</span>
<span class="p_del">-				      ia64_native_branch_target, nelem);</span>
<span class="p_del">-}</span>
<span class="p_header">diff --git a/arch/ia64/kernel/paravirt_inst.h b/arch/ia64/kernel/paravirt_inst.h</span>
deleted file mode 100644
<span class="p_header">index 1ad7512..0000000</span>
<span class="p_header">--- a/arch/ia64/kernel/paravirt_inst.h</span>
<span class="p_header">+++ /dev/null</span>
<span class="p_chunk">@@ -1,28 +0,0 @@</span> <span class="p_context"></span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * linux/arch/ia64/xen/paravirt_inst.h</span>
<span class="p_del">- *</span>
<span class="p_del">- * Copyright (c) 2008 Isaku Yamahata &lt;yamahata at valinux co jp&gt;</span>
<span class="p_del">- *                    VA Linux Systems Japan K.K.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is free software; you can redistribute it and/or modify</span>
<span class="p_del">- * it under the terms of the GNU General Public License as published by</span>
<span class="p_del">- * the Free Software Foundation; either version 2 of the License, or</span>
<span class="p_del">- * (at your option) any later version.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is distributed in the hope that it will be useful,</span>
<span class="p_del">- * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<span class="p_del">- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<span class="p_del">- * GNU General Public License for more details.</span>
<span class="p_del">- *</span>
<span class="p_del">- * You should have received a copy of the GNU General Public License</span>
<span class="p_del">- * along with this program; if not, write to the Free Software</span>
<span class="p_del">- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>
<span class="p_del">- *</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef __IA64_ASM_PARAVIRTUALIZED_PVCHECK</span>
<span class="p_del">-#include &lt;asm/native/pvchk_inst.h&gt;</span>
<span class="p_del">-#else</span>
<span class="p_del">-#include &lt;asm/native/inst.h&gt;</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
<span class="p_header">diff --git a/arch/ia64/kernel/paravirt_patch.c b/arch/ia64/kernel/paravirt_patch.c</span>
deleted file mode 100644
<span class="p_header">index bfdfef1..0000000</span>
<span class="p_header">--- a/arch/ia64/kernel/paravirt_patch.c</span>
<span class="p_header">+++ /dev/null</span>
<span class="p_chunk">@@ -1,514 +0,0 @@</span> <span class="p_context"></span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * linux/arch/ia64/xen/paravirt_patch.c</span>
<span class="p_del">- *</span>
<span class="p_del">- * Copyright (c) 2008 Isaku Yamahata &lt;yamahata at valinux co jp&gt;</span>
<span class="p_del">- *                    VA Linux Systems Japan K.K.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is free software; you can redistribute it and/or modify</span>
<span class="p_del">- * it under the terms of the GNU General Public License as published by</span>
<span class="p_del">- * the Free Software Foundation; either version 2 of the License, or</span>
<span class="p_del">- * (at your option) any later version.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is distributed in the hope that it will be useful,</span>
<span class="p_del">- * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<span class="p_del">- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<span class="p_del">- * GNU General Public License for more details.</span>
<span class="p_del">- *</span>
<span class="p_del">- * You should have received a copy of the GNU General Public License</span>
<span class="p_del">- * along with this program; if not, write to the Free Software</span>
<span class="p_del">- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>
<span class="p_del">- *</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-#include &lt;linux/init.h&gt;</span>
<span class="p_del">-#include &lt;asm/intrinsics.h&gt;</span>
<span class="p_del">-#include &lt;asm/kprobes.h&gt;</span>
<span class="p_del">-#include &lt;asm/paravirt.h&gt;</span>
<span class="p_del">-#include &lt;asm/paravirt_patch.h&gt;</span>
<span class="p_del">-</span>
<span class="p_del">-typedef union ia64_inst {</span>
<span class="p_del">-        struct {</span>
<span class="p_del">-		unsigned long long qp : 6;</span>
<span class="p_del">-		unsigned long long : 31;</span>
<span class="p_del">-		unsigned long long opcode : 4;</span>
<span class="p_del">-		unsigned long long reserved : 23;</span>
<span class="p_del">-        } generic;</span>
<span class="p_del">-        unsigned long long l;</span>
<span class="p_del">-} ia64_inst_t;</span>
<span class="p_del">-</span>
<span class="p_del">-/*</span>
<span class="p_del">- * flush_icache_range() can&#39;t be used here.</span>
<span class="p_del">- * we are here before cpu_init() which initializes</span>
<span class="p_del">- * ia64_i_cache_stride_shift. flush_icache_range() uses it.</span>
<span class="p_del">- */</span>
<span class="p_del">-void __init_or_module</span>
<span class="p_del">-paravirt_flush_i_cache_range(const void *instr, unsigned long size)</span>
<span class="p_del">-{</span>
<span class="p_del">-	extern void paravirt_fc_i(const void *addr);</span>
<span class="p_del">-	unsigned long i;</span>
<span class="p_del">-</span>
<span class="p_del">-	for (i = 0; i &lt; size; i += sizeof(bundle_t))</span>
<span class="p_del">-		paravirt_fc_i(instr + i);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-bundle_t* __init_or_module</span>
<span class="p_del">-paravirt_get_bundle(unsigned long tag)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return (bundle_t *)(tag &amp; ~3UL);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-unsigned long __init_or_module</span>
<span class="p_del">-paravirt_get_slot(unsigned long tag)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return tag &amp; 3UL;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-unsigned long __init_or_module</span>
<span class="p_del">-paravirt_get_num_inst(unsigned long stag, unsigned long etag)</span>
<span class="p_del">-{</span>
<span class="p_del">-	bundle_t *sbundle = paravirt_get_bundle(stag);</span>
<span class="p_del">-	unsigned long sslot = paravirt_get_slot(stag);</span>
<span class="p_del">-	bundle_t *ebundle = paravirt_get_bundle(etag);</span>
<span class="p_del">-	unsigned long eslot = paravirt_get_slot(etag);</span>
<span class="p_del">-</span>
<span class="p_del">-	return (ebundle - sbundle) * 3 + eslot - sslot + 1;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-unsigned long __init_or_module</span>
<span class="p_del">-paravirt_get_next_tag(unsigned long tag)</span>
<span class="p_del">-{</span>
<span class="p_del">-	unsigned long slot = paravirt_get_slot(tag);</span>
<span class="p_del">-</span>
<span class="p_del">-	switch (slot) {</span>
<span class="p_del">-	case 0:</span>
<span class="p_del">-	case 1:</span>
<span class="p_del">-		return tag + 1;</span>
<span class="p_del">-	case 2: {</span>
<span class="p_del">-		bundle_t *bundle = paravirt_get_bundle(tag);</span>
<span class="p_del">-		return (unsigned long)(bundle + 1);</span>
<span class="p_del">-	}</span>
<span class="p_del">-	default:</span>
<span class="p_del">-		BUG();</span>
<span class="p_del">-	}</span>
<span class="p_del">-	/* NOTREACHED */</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-ia64_inst_t __init_or_module</span>
<span class="p_del">-paravirt_read_slot0(const bundle_t *bundle)</span>
<span class="p_del">-{</span>
<span class="p_del">-	ia64_inst_t inst;</span>
<span class="p_del">-	inst.l = bundle-&gt;quad0.slot0;</span>
<span class="p_del">-	return inst;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-ia64_inst_t __init_or_module</span>
<span class="p_del">-paravirt_read_slot1(const bundle_t *bundle)</span>
<span class="p_del">-{</span>
<span class="p_del">-	ia64_inst_t inst;</span>
<span class="p_del">-	inst.l = bundle-&gt;quad0.slot1_p0 |</span>
<span class="p_del">-		((unsigned long long)bundle-&gt;quad1.slot1_p1 &lt;&lt; 18UL);</span>
<span class="p_del">-	return inst;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-ia64_inst_t __init_or_module</span>
<span class="p_del">-paravirt_read_slot2(const bundle_t *bundle)</span>
<span class="p_del">-{</span>
<span class="p_del">-	ia64_inst_t inst;</span>
<span class="p_del">-	inst.l = bundle-&gt;quad1.slot2;</span>
<span class="p_del">-	return inst;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-ia64_inst_t __init_or_module</span>
<span class="p_del">-paravirt_read_inst(unsigned long tag)</span>
<span class="p_del">-{</span>
<span class="p_del">-	bundle_t *bundle = paravirt_get_bundle(tag);</span>
<span class="p_del">-	unsigned long slot = paravirt_get_slot(tag);</span>
<span class="p_del">-</span>
<span class="p_del">-	switch (slot) {</span>
<span class="p_del">-	case 0:</span>
<span class="p_del">-		return paravirt_read_slot0(bundle);</span>
<span class="p_del">-	case 1:</span>
<span class="p_del">-		return paravirt_read_slot1(bundle);</span>
<span class="p_del">-	case 2:</span>
<span class="p_del">-		return paravirt_read_slot2(bundle);</span>
<span class="p_del">-	default:</span>
<span class="p_del">-		BUG();</span>
<span class="p_del">-	}</span>
<span class="p_del">-	/* NOTREACHED */</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-void __init_or_module</span>
<span class="p_del">-paravirt_write_slot0(bundle_t *bundle, ia64_inst_t inst)</span>
<span class="p_del">-{</span>
<span class="p_del">-	bundle-&gt;quad0.slot0 = inst.l;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-void __init_or_module</span>
<span class="p_del">-paravirt_write_slot1(bundle_t *bundle, ia64_inst_t inst)</span>
<span class="p_del">-{</span>
<span class="p_del">-	bundle-&gt;quad0.slot1_p0 = inst.l;</span>
<span class="p_del">-	bundle-&gt;quad1.slot1_p1 = inst.l &gt;&gt; 18UL;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-void __init_or_module</span>
<span class="p_del">-paravirt_write_slot2(bundle_t *bundle, ia64_inst_t inst)</span>
<span class="p_del">-{</span>
<span class="p_del">-	bundle-&gt;quad1.slot2 = inst.l;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-void __init_or_module</span>
<span class="p_del">-paravirt_write_inst(unsigned long tag, ia64_inst_t inst)</span>
<span class="p_del">-{</span>
<span class="p_del">-	bundle_t *bundle = paravirt_get_bundle(tag);</span>
<span class="p_del">-	unsigned long slot = paravirt_get_slot(tag);</span>
<span class="p_del">-</span>
<span class="p_del">-	switch (slot) {</span>
<span class="p_del">-	case 0:</span>
<span class="p_del">-		paravirt_write_slot0(bundle, inst);</span>
<span class="p_del">-		break;</span>
<span class="p_del">-	case 1:</span>
<span class="p_del">-		paravirt_write_slot1(bundle, inst);</span>
<span class="p_del">-		break;</span>
<span class="p_del">-	case 2:</span>
<span class="p_del">-		paravirt_write_slot2(bundle, inst);</span>
<span class="p_del">-		break;</span>
<span class="p_del">-	default:</span>
<span class="p_del">-		BUG();</span>
<span class="p_del">-		break;</span>
<span class="p_del">-	}</span>
<span class="p_del">-	paravirt_flush_i_cache_range(bundle, sizeof(*bundle));</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-/* for debug */</span>
<span class="p_del">-void</span>
<span class="p_del">-paravirt_print_bundle(const bundle_t *bundle)</span>
<span class="p_del">-{</span>
<span class="p_del">-	const unsigned long *quad = (const unsigned long *)bundle;</span>
<span class="p_del">-	ia64_inst_t slot0 = paravirt_read_slot0(bundle);</span>
<span class="p_del">-	ia64_inst_t slot1 = paravirt_read_slot1(bundle);</span>
<span class="p_del">-	ia64_inst_t slot2 = paravirt_read_slot2(bundle);</span>
<span class="p_del">-</span>
<span class="p_del">-	printk(KERN_DEBUG</span>
<span class="p_del">-	       &quot;bundle 0x%p 0x%016lx 0x%016lx\n&quot;, bundle, quad[0], quad[1]);</span>
<span class="p_del">-	printk(KERN_DEBUG</span>
<span class="p_del">-	       &quot;bundle template 0x%x\n&quot;,</span>
<span class="p_del">-	       bundle-&gt;quad0.template);</span>
<span class="p_del">-	printk(KERN_DEBUG</span>
<span class="p_del">-	       &quot;slot0 0x%lx slot1_p0 0x%lx slot1_p1 0x%lx slot2 0x%lx\n&quot;,</span>
<span class="p_del">-	       (unsigned long)bundle-&gt;quad0.slot0,</span>
<span class="p_del">-	       (unsigned long)bundle-&gt;quad0.slot1_p0,</span>
<span class="p_del">-	       (unsigned long)bundle-&gt;quad1.slot1_p1,</span>
<span class="p_del">-	       (unsigned long)bundle-&gt;quad1.slot2);</span>
<span class="p_del">-	printk(KERN_DEBUG</span>
<span class="p_del">-	       &quot;slot0 0x%016llx slot1 0x%016llx slot2 0x%016llx\n&quot;,</span>
<span class="p_del">-	       slot0.l, slot1.l, slot2.l);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static int noreplace_paravirt __init_or_module = 0;</span>
<span class="p_del">-</span>
<span class="p_del">-static int __init setup_noreplace_paravirt(char *str)</span>
<span class="p_del">-{</span>
<span class="p_del">-	noreplace_paravirt = 1;</span>
<span class="p_del">-	return 1;</span>
<span class="p_del">-}</span>
<span class="p_del">-__setup(&quot;noreplace-paravirt&quot;, setup_noreplace_paravirt);</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef ASM_SUPPORTED</span>
<span class="p_del">-static void __init_or_module</span>
<span class="p_del">-fill_nop_bundle(void *sbundle, void *ebundle)</span>
<span class="p_del">-{</span>
<span class="p_del">-	extern const char paravirt_nop_bundle[];</span>
<span class="p_del">-	extern const unsigned long paravirt_nop_bundle_size;</span>
<span class="p_del">-</span>
<span class="p_del">-	void *bundle = sbundle;</span>
<span class="p_del">-</span>
<span class="p_del">-	BUG_ON((((unsigned long)sbundle) % sizeof(bundle_t)) != 0);</span>
<span class="p_del">-	BUG_ON((((unsigned long)ebundle) % sizeof(bundle_t)) != 0);</span>
<span class="p_del">-</span>
<span class="p_del">-	while (bundle &lt; ebundle) {</span>
<span class="p_del">-		memcpy(bundle, paravirt_nop_bundle, paravirt_nop_bundle_size);</span>
<span class="p_del">-</span>
<span class="p_del">-		bundle += paravirt_nop_bundle_size;</span>
<span class="p_del">-	}</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-/* helper function */</span>
<span class="p_del">-unsigned long __init_or_module</span>
<span class="p_del">-__paravirt_patch_apply_bundle(void *sbundle, void *ebundle, unsigned long type,</span>
<span class="p_del">-			      const struct paravirt_patch_bundle_elem *elems,</span>
<span class="p_del">-			      unsigned long nelems,</span>
<span class="p_del">-			      const struct paravirt_patch_bundle_elem **found)</span>
<span class="p_del">-{</span>
<span class="p_del">-	unsigned long used = 0;</span>
<span class="p_del">-	unsigned long i;</span>
<span class="p_del">-</span>
<span class="p_del">-	BUG_ON((((unsigned long)sbundle) % sizeof(bundle_t)) != 0);</span>
<span class="p_del">-	BUG_ON((((unsigned long)ebundle) % sizeof(bundle_t)) != 0);</span>
<span class="p_del">-</span>
<span class="p_del">-	found = NULL;</span>
<span class="p_del">-	for (i = 0; i &lt; nelems; i++) {</span>
<span class="p_del">-		const struct paravirt_patch_bundle_elem *p = &amp;elems[i];</span>
<span class="p_del">-		if (p-&gt;type == type) {</span>
<span class="p_del">-			unsigned long need = p-&gt;ebundle - p-&gt;sbundle;</span>
<span class="p_del">-			unsigned long room = ebundle - sbundle;</span>
<span class="p_del">-</span>
<span class="p_del">-			if (found != NULL)</span>
<span class="p_del">-				*found = p;</span>
<span class="p_del">-</span>
<span class="p_del">-			if (room &lt; need) {</span>
<span class="p_del">-				/* no room to replace. skip it */</span>
<span class="p_del">-				printk(KERN_DEBUG</span>
<span class="p_del">-				       &quot;the space is too small to put &quot;</span>
<span class="p_del">-				       &quot;bundles. type %ld need %ld room %ld\n&quot;,</span>
<span class="p_del">-				       type, need, room);</span>
<span class="p_del">-				break;</span>
<span class="p_del">-			}</span>
<span class="p_del">-</span>
<span class="p_del">-			used = need;</span>
<span class="p_del">-			memcpy(sbundle, p-&gt;sbundle, used);</span>
<span class="p_del">-			break;</span>
<span class="p_del">-		}</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	return used;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-void __init_or_module</span>
<span class="p_del">-paravirt_patch_apply_bundle(const struct paravirt_patch_site_bundle *start,</span>
<span class="p_del">-			    const struct paravirt_patch_site_bundle *end)</span>
<span class="p_del">-{</span>
<span class="p_del">-	const struct paravirt_patch_site_bundle *p;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (noreplace_paravirt)</span>
<span class="p_del">-		return;</span>
<span class="p_del">-	if (pv_init_ops.patch_bundle == NULL)</span>
<span class="p_del">-		return;</span>
<span class="p_del">-</span>
<span class="p_del">-	for (p = start; p &lt; end; p++) {</span>
<span class="p_del">-		unsigned long used;</span>
<span class="p_del">-</span>
<span class="p_del">-		used = (*pv_init_ops.patch_bundle)(p-&gt;sbundle, p-&gt;ebundle,</span>
<span class="p_del">-						   p-&gt;type);</span>
<span class="p_del">-		if (used == 0)</span>
<span class="p_del">-			continue;</span>
<span class="p_del">-</span>
<span class="p_del">-		fill_nop_bundle(p-&gt;sbundle + used, p-&gt;ebundle);</span>
<span class="p_del">-		paravirt_flush_i_cache_range(p-&gt;sbundle,</span>
<span class="p_del">-					     p-&gt;ebundle - p-&gt;sbundle);</span>
<span class="p_del">-	}</span>
<span class="p_del">-	ia64_sync_i();</span>
<span class="p_del">-	ia64_srlz_i();</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-/*</span>
<span class="p_del">- * nop.i, nop.m, nop.f instruction are same format.</span>
<span class="p_del">- * but nop.b has differennt format.</span>
<span class="p_del">- * This doesn&#39;t support nop.b for now.</span>
<span class="p_del">- */</span>
<span class="p_del">-static void __init_or_module</span>
<span class="p_del">-fill_nop_inst(unsigned long stag, unsigned long etag)</span>
<span class="p_del">-{</span>
<span class="p_del">-	extern const bundle_t paravirt_nop_mfi_inst_bundle[];</span>
<span class="p_del">-	unsigned long tag;</span>
<span class="p_del">-	const ia64_inst_t nop_inst =</span>
<span class="p_del">-		paravirt_read_slot0(paravirt_nop_mfi_inst_bundle);</span>
<span class="p_del">-</span>
<span class="p_del">-	for (tag = stag; tag &lt; etag; tag = paravirt_get_next_tag(tag))</span>
<span class="p_del">-		paravirt_write_inst(tag, nop_inst);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-void __init_or_module</span>
<span class="p_del">-paravirt_patch_apply_inst(const struct paravirt_patch_site_inst *start,</span>
<span class="p_del">-			  const struct paravirt_patch_site_inst *end)</span>
<span class="p_del">-{</span>
<span class="p_del">-	const struct paravirt_patch_site_inst *p;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (noreplace_paravirt)</span>
<span class="p_del">-		return;</span>
<span class="p_del">-	if (pv_init_ops.patch_inst == NULL)</span>
<span class="p_del">-		return;</span>
<span class="p_del">-</span>
<span class="p_del">-	for (p = start; p &lt; end; p++) {</span>
<span class="p_del">-		unsigned long tag;</span>
<span class="p_del">-		bundle_t *sbundle;</span>
<span class="p_del">-		bundle_t *ebundle;</span>
<span class="p_del">-</span>
<span class="p_del">-		tag = (*pv_init_ops.patch_inst)(p-&gt;stag, p-&gt;etag, p-&gt;type);</span>
<span class="p_del">-		if (tag == p-&gt;stag)</span>
<span class="p_del">-			continue;</span>
<span class="p_del">-</span>
<span class="p_del">-		fill_nop_inst(tag, p-&gt;etag);</span>
<span class="p_del">-		sbundle = paravirt_get_bundle(p-&gt;stag);</span>
<span class="p_del">-		ebundle = paravirt_get_bundle(p-&gt;etag) + 1;</span>
<span class="p_del">-		paravirt_flush_i_cache_range(sbundle, (ebundle - sbundle) *</span>
<span class="p_del">-					     sizeof(bundle_t));</span>
<span class="p_del">-	}</span>
<span class="p_del">-	ia64_sync_i();</span>
<span class="p_del">-	ia64_srlz_i();</span>
<span class="p_del">-}</span>
<span class="p_del">-#endif /* ASM_SUPPOTED */</span>
<span class="p_del">-</span>
<span class="p_del">-/* brl.cond.sptk.many &lt;target64&gt; X3 */</span>
<span class="p_del">-typedef union inst_x3_op {</span>
<span class="p_del">-	ia64_inst_t inst;</span>
<span class="p_del">-	struct {</span>
<span class="p_del">-		unsigned long qp: 6;</span>
<span class="p_del">-		unsigned long btyp: 3;</span>
<span class="p_del">-		unsigned long unused: 3;</span>
<span class="p_del">-		unsigned long p: 1;</span>
<span class="p_del">-		unsigned long imm20b: 20;</span>
<span class="p_del">-		unsigned long wh: 2;</span>
<span class="p_del">-		unsigned long d: 1;</span>
<span class="p_del">-		unsigned long i: 1;</span>
<span class="p_del">-		unsigned long opcode: 4;</span>
<span class="p_del">-	};</span>
<span class="p_del">-	unsigned long l;</span>
<span class="p_del">-} inst_x3_op_t;</span>
<span class="p_del">-</span>
<span class="p_del">-typedef union inst_x3_imm {</span>
<span class="p_del">-	ia64_inst_t inst;</span>
<span class="p_del">-	struct {</span>
<span class="p_del">-		unsigned long unused: 2;</span>
<span class="p_del">-		unsigned long imm39: 39;</span>
<span class="p_del">-	};</span>
<span class="p_del">-	unsigned long l;</span>
<span class="p_del">-} inst_x3_imm_t;</span>
<span class="p_del">-</span>
<span class="p_del">-void __init_or_module</span>
<span class="p_del">-paravirt_patch_reloc_brl(unsigned long tag, const void *target)</span>
<span class="p_del">-{</span>
<span class="p_del">-	unsigned long tag_op = paravirt_get_next_tag(tag);</span>
<span class="p_del">-	unsigned long tag_imm = tag;</span>
<span class="p_del">-	bundle_t *bundle = paravirt_get_bundle(tag);</span>
<span class="p_del">-</span>
<span class="p_del">-	ia64_inst_t inst_op = paravirt_read_inst(tag_op);</span>
<span class="p_del">-	ia64_inst_t inst_imm = paravirt_read_inst(tag_imm);</span>
<span class="p_del">-</span>
<span class="p_del">-	inst_x3_op_t inst_x3_op = { .l = inst_op.l };</span>
<span class="p_del">-	inst_x3_imm_t inst_x3_imm = { .l = inst_imm.l };</span>
<span class="p_del">-</span>
<span class="p_del">-	unsigned long imm60 =</span>
<span class="p_del">-		((unsigned long)target - (unsigned long)bundle) &gt;&gt; 4;</span>
<span class="p_del">-</span>
<span class="p_del">-	BUG_ON(paravirt_get_slot(tag) != 1); /* MLX */</span>
<span class="p_del">-	BUG_ON(((unsigned long)target &amp; (sizeof(bundle_t) - 1)) != 0);</span>
<span class="p_del">-</span>
<span class="p_del">-	/* imm60[59] 1bit */</span>
<span class="p_del">-	inst_x3_op.i = (imm60 &gt;&gt; 59) &amp; 1;</span>
<span class="p_del">-	/* imm60[19:0] 20bit */</span>
<span class="p_del">-	inst_x3_op.imm20b = imm60 &amp; ((1UL &lt;&lt; 20) - 1);</span>
<span class="p_del">-	/* imm60[58:20] 39bit */</span>
<span class="p_del">-	inst_x3_imm.imm39 = (imm60 &gt;&gt; 20) &amp; ((1UL &lt;&lt; 39) - 1);</span>
<span class="p_del">-</span>
<span class="p_del">-	inst_op.l = inst_x3_op.l;</span>
<span class="p_del">-	inst_imm.l = inst_x3_imm.l;</span>
<span class="p_del">-</span>
<span class="p_del">-	paravirt_write_inst(tag_op, inst_op);</span>
<span class="p_del">-	paravirt_write_inst(tag_imm, inst_imm);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-/* br.cond.sptk.many &lt;target25&gt;	B1 */</span>
<span class="p_del">-typedef union inst_b1 {</span>
<span class="p_del">-	ia64_inst_t inst;</span>
<span class="p_del">-	struct {</span>
<span class="p_del">-		unsigned long qp: 6;</span>
<span class="p_del">-		unsigned long btype: 3;</span>
<span class="p_del">-		unsigned long unused: 3;</span>
<span class="p_del">-		unsigned long p: 1;</span>
<span class="p_del">-		unsigned long imm20b: 20;</span>
<span class="p_del">-		unsigned long wh: 2;</span>
<span class="p_del">-		unsigned long d: 1;</span>
<span class="p_del">-		unsigned long s: 1;</span>
<span class="p_del">-		unsigned long opcode: 4;</span>
<span class="p_del">-	};</span>
<span class="p_del">-	unsigned long l;</span>
<span class="p_del">-} inst_b1_t;</span>
<span class="p_del">-</span>
<span class="p_del">-void __init</span>
<span class="p_del">-paravirt_patch_reloc_br(unsigned long tag, const void *target)</span>
<span class="p_del">-{</span>
<span class="p_del">-	bundle_t *bundle = paravirt_get_bundle(tag);</span>
<span class="p_del">-	ia64_inst_t inst = paravirt_read_inst(tag);</span>
<span class="p_del">-	unsigned long target25 = (unsigned long)target - (unsigned long)bundle;</span>
<span class="p_del">-	inst_b1_t inst_b1;</span>
<span class="p_del">-</span>
<span class="p_del">-	BUG_ON(((unsigned long)target &amp; (sizeof(bundle_t) - 1)) != 0);</span>
<span class="p_del">-</span>
<span class="p_del">-	inst_b1.l = inst.l;</span>
<span class="p_del">-	if (target25 &amp; (1UL &lt;&lt; 63))</span>
<span class="p_del">-		inst_b1.s = 1;</span>
<span class="p_del">-	else</span>
<span class="p_del">-		inst_b1.s = 0;</span>
<span class="p_del">-</span>
<span class="p_del">-	inst_b1.imm20b = target25 &gt;&gt; 4;</span>
<span class="p_del">-	inst.l = inst_b1.l;</span>
<span class="p_del">-</span>
<span class="p_del">-	paravirt_write_inst(tag, inst);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-void __init</span>
<span class="p_del">-__paravirt_patch_apply_branch(</span>
<span class="p_del">-	unsigned long tag, unsigned long type,</span>
<span class="p_del">-	const struct paravirt_patch_branch_target *entries,</span>
<span class="p_del">-	unsigned int nr_entries)</span>
<span class="p_del">-{</span>
<span class="p_del">-	unsigned int i;</span>
<span class="p_del">-	for (i = 0; i &lt; nr_entries; i++) {</span>
<span class="p_del">-		if (entries[i].type == type) {</span>
<span class="p_del">-			paravirt_patch_reloc_br(tag, entries[i].entry);</span>
<span class="p_del">-			break;</span>
<span class="p_del">-		}</span>
<span class="p_del">-	}</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static void __init</span>
<span class="p_del">-paravirt_patch_apply_branch(const struct paravirt_patch_site_branch *start,</span>
<span class="p_del">-			    const struct paravirt_patch_site_branch *end)</span>
<span class="p_del">-{</span>
<span class="p_del">-	const struct paravirt_patch_site_branch *p;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (noreplace_paravirt)</span>
<span class="p_del">-		return;</span>
<span class="p_del">-	if (pv_init_ops.patch_branch == NULL)</span>
<span class="p_del">-		return;</span>
<span class="p_del">-</span>
<span class="p_del">-	for (p = start; p &lt; end; p++)</span>
<span class="p_del">-		(*pv_init_ops.patch_branch)(p-&gt;tag, p-&gt;type);</span>
<span class="p_del">-</span>
<span class="p_del">-	ia64_sync_i();</span>
<span class="p_del">-	ia64_srlz_i();</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-void __init</span>
<span class="p_del">-paravirt_patch_apply(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	extern const char __start_paravirt_bundles[];</span>
<span class="p_del">-	extern const char __stop_paravirt_bundles[];</span>
<span class="p_del">-	extern const char __start_paravirt_insts[];</span>
<span class="p_del">-	extern const char __stop_paravirt_insts[];</span>
<span class="p_del">-	extern const char __start_paravirt_branches[];</span>
<span class="p_del">-	extern const char __stop_paravirt_branches[];</span>
<span class="p_del">-</span>
<span class="p_del">-	paravirt_patch_apply_bundle((const struct paravirt_patch_site_bundle *)</span>
<span class="p_del">-				    __start_paravirt_bundles,</span>
<span class="p_del">-				    (const struct paravirt_patch_site_bundle *)</span>
<span class="p_del">-				    __stop_paravirt_bundles);</span>
<span class="p_del">-	paravirt_patch_apply_inst((const struct paravirt_patch_site_inst *)</span>
<span class="p_del">-				  __start_paravirt_insts,</span>
<span class="p_del">-				  (const struct paravirt_patch_site_inst *)</span>
<span class="p_del">-				  __stop_paravirt_insts);</span>
<span class="p_del">-	paravirt_patch_apply_branch((const struct paravirt_patch_site_branch *)</span>
<span class="p_del">-				    __start_paravirt_branches,</span>
<span class="p_del">-				    (const struct paravirt_patch_site_branch *)</span>
<span class="p_del">-				    __stop_paravirt_branches);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-/*</span>
<span class="p_del">- * Local variables:</span>
<span class="p_del">- * mode: C</span>
<span class="p_del">- * c-set-style: &quot;linux&quot;</span>
<span class="p_del">- * c-basic-offset: 8</span>
<span class="p_del">- * tab-width: 8</span>
<span class="p_del">- * indent-tabs-mode: t</span>
<span class="p_del">- * End:</span>
<span class="p_del">- */</span>
<span class="p_header">diff --git a/arch/ia64/kernel/paravirt_patchlist.c b/arch/ia64/kernel/paravirt_patchlist.c</span>
deleted file mode 100644
<span class="p_header">index 0a70720..0000000</span>
<span class="p_header">--- a/arch/ia64/kernel/paravirt_patchlist.c</span>
<span class="p_header">+++ /dev/null</span>
<span class="p_chunk">@@ -1,81 +0,0 @@</span> <span class="p_context"></span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * Copyright (c) 2008 Isaku Yamahata &lt;yamahata at valinux co jp&gt;</span>
<span class="p_del">- *                    VA Linux Systems Japan K.K.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is free software; you can redistribute it and/or modify</span>
<span class="p_del">- * it under the terms of the GNU General Public License as published by</span>
<span class="p_del">- * the Free Software Foundation; either version 2 of the License, or</span>
<span class="p_del">- * (at your option) any later version.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is distributed in the hope that it will be useful,</span>
<span class="p_del">- * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<span class="p_del">- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<span class="p_del">- * GNU General Public License for more details.</span>
<span class="p_del">- *</span>
<span class="p_del">- * You should have received a copy of the GNU General Public License</span>
<span class="p_del">- * along with this program; if not, write to the Free Software</span>
<span class="p_del">- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>
<span class="p_del">- *</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-#include &lt;linux/bug.h&gt;</span>
<span class="p_del">-#include &lt;linux/init.h&gt;</span>
<span class="p_del">-#include &lt;linux/kernel.h&gt;</span>
<span class="p_del">-#include &lt;asm/paravirt.h&gt;</span>
<span class="p_del">-</span>
<span class="p_del">-#define DECLARE(name)						\</span>
<span class="p_del">-	extern unsigned long					\</span>
<span class="p_del">-		__ia64_native_start_gate_##name##_patchlist[];	\</span>
<span class="p_del">-	extern unsigned long					\</span>
<span class="p_del">-		__ia64_native_end_gate_##name##_patchlist[]</span>
<span class="p_del">-</span>
<span class="p_del">-DECLARE(fsyscall);</span>
<span class="p_del">-DECLARE(brl_fsys_bubble_down);</span>
<span class="p_del">-DECLARE(vtop);</span>
<span class="p_del">-DECLARE(mckinley_e9);</span>
<span class="p_del">-</span>
<span class="p_del">-extern unsigned long __start_gate_section[];</span>
<span class="p_del">-</span>
<span class="p_del">-#define ASSIGN(name)							    \</span>
<span class="p_del">-	.start_##name##_patchlist =					    \</span>
<span class="p_del">-		(unsigned long)__ia64_native_start_gate_##name##_patchlist, \</span>
<span class="p_del">-	.end_##name##_patchlist =					    \</span>
<span class="p_del">-		(unsigned long)__ia64_native_end_gate_##name##_patchlist</span>
<span class="p_del">-</span>
<span class="p_del">-struct pv_patchdata pv_patchdata __initdata = {</span>
<span class="p_del">-	ASSIGN(fsyscall),</span>
<span class="p_del">-	ASSIGN(brl_fsys_bubble_down),</span>
<span class="p_del">-	ASSIGN(vtop),</span>
<span class="p_del">-	ASSIGN(mckinley_e9),</span>
<span class="p_del">-</span>
<span class="p_del">-	.gate_section = (void*)__start_gate_section,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
<span class="p_del">-unsigned long __init</span>
<span class="p_del">-paravirt_get_gate_patchlist(enum pv_gate_patchlist type)</span>
<span class="p_del">-{</span>
<span class="p_del">-</span>
<span class="p_del">-#define CASE(NAME, name)					\</span>
<span class="p_del">-	case PV_GATE_START_##NAME:				\</span>
<span class="p_del">-		return pv_patchdata.start_##name##_patchlist;	\</span>
<span class="p_del">-	case PV_GATE_END_##NAME:				\</span>
<span class="p_del">-		return pv_patchdata.end_##name##_patchlist;	\</span>
<span class="p_del">-</span>
<span class="p_del">-	switch (type) {</span>
<span class="p_del">-		CASE(FSYSCALL, fsyscall);</span>
<span class="p_del">-		CASE(BRL_FSYS_BUBBLE_DOWN, brl_fsys_bubble_down);</span>
<span class="p_del">-		CASE(VTOP, vtop);</span>
<span class="p_del">-		CASE(MCKINLEY_E9, mckinley_e9);</span>
<span class="p_del">-	default:</span>
<span class="p_del">-		BUG();</span>
<span class="p_del">-		break;</span>
<span class="p_del">-	}</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-void * __init</span>
<span class="p_del">-paravirt_get_gate_section(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return pv_patchdata.gate_section;</span>
<span class="p_del">-}</span>
<span class="p_header">diff --git a/arch/ia64/kernel/paravirt_patchlist.h b/arch/ia64/kernel/paravirt_patchlist.h</span>
deleted file mode 100644
<span class="p_header">index 67cffc3..0000000</span>
<span class="p_header">--- a/arch/ia64/kernel/paravirt_patchlist.h</span>
<span class="p_header">+++ /dev/null</span>
<span class="p_chunk">@@ -1,24 +0,0 @@</span> <span class="p_context"></span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * linux/arch/ia64/xen/paravirt_patchlist.h</span>
<span class="p_del">- *</span>
<span class="p_del">- * Copyright (c) 2008 Isaku Yamahata &lt;yamahata at valinux co jp&gt;</span>
<span class="p_del">- *                    VA Linux Systems Japan K.K.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is free software; you can redistribute it and/or modify</span>
<span class="p_del">- * it under the terms of the GNU General Public License as published by</span>
<span class="p_del">- * the Free Software Foundation; either version 2 of the License, or</span>
<span class="p_del">- * (at your option) any later version.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is distributed in the hope that it will be useful,</span>
<span class="p_del">- * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<span class="p_del">- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<span class="p_del">- * GNU General Public License for more details.</span>
<span class="p_del">- *</span>
<span class="p_del">- * You should have received a copy of the GNU General Public License</span>
<span class="p_del">- * along with this program; if not, write to the Free Software</span>
<span class="p_del">- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>
<span class="p_del">- *</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-#include &lt;asm/native/patchlist.h&gt;</span>
<span class="p_del">-</span>
<span class="p_header">diff --git a/arch/ia64/kernel/paravirtentry.S b/arch/ia64/kernel/paravirtentry.S</span>
deleted file mode 100644
<span class="p_header">index 92d880c..0000000</span>
<span class="p_header">--- a/arch/ia64/kernel/paravirtentry.S</span>
<span class="p_header">+++ /dev/null</span>
<span class="p_chunk">@@ -1,121 +0,0 @@</span> <span class="p_context"></span>
<span class="p_del">-/******************************************************************************</span>
<span class="p_del">- * linux/arch/ia64/xen/paravirtentry.S</span>
<span class="p_del">- *</span>
<span class="p_del">- * Copyright (c) 2008 Isaku Yamahata &lt;yamahata at valinux co jp&gt;</span>
<span class="p_del">- *                    VA Linux Systems Japan K.K.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is free software; you can redistribute it and/or modify</span>
<span class="p_del">- * it under the terms of the GNU General Public License as published by</span>
<span class="p_del">- * the Free Software Foundation; either version 2 of the License, or</span>
<span class="p_del">- * (at your option) any later version.</span>
<span class="p_del">- *</span>
<span class="p_del">- * This program is distributed in the hope that it will be useful,</span>
<span class="p_del">- * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<span class="p_del">- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<span class="p_del">- * GNU General Public License for more details.</span>
<span class="p_del">- *</span>
<span class="p_del">- * You should have received a copy of the GNU General Public License</span>
<span class="p_del">- * along with this program; if not, write to the Free Software</span>
<span class="p_del">- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</span>
<span class="p_del">- *</span>
<span class="p_del">- */</span>
<span class="p_del">-</span>
<span class="p_del">-#include &lt;linux/init.h&gt;</span>
<span class="p_del">-#include &lt;asm/asmmacro.h&gt;</span>
<span class="p_del">-#include &lt;asm/asm-offsets.h&gt;</span>
<span class="p_del">-#include &lt;asm/paravirt_privop.h&gt;</span>
<span class="p_del">-#include &lt;asm/paravirt_patch.h&gt;</span>
<span class="p_del">-#include &quot;entry.h&quot;</span>
<span class="p_del">-</span>
<span class="p_del">-#define DATA8(sym, init_value)			\</span>
<span class="p_del">-	.pushsection .data..read_mostly ;	\</span>
<span class="p_del">-	.align 8 ;				\</span>
<span class="p_del">-	.global sym ;				\</span>
<span class="p_del">-	sym: ;					\</span>
<span class="p_del">-	data8 init_value ;			\</span>
<span class="p_del">-	.popsection</span>
<span class="p_del">-</span>
<span class="p_del">-#define BRANCH(targ, reg, breg, type)					\</span>
<span class="p_del">-	PARAVIRT_PATCH_SITE_BR(PARAVIRT_PATCH_TYPE_BR_ ## type) ;	\</span>
<span class="p_del">-	;;								\</span>
<span class="p_del">-	movl reg=targ ;							\</span>
<span class="p_del">-	;;								\</span>
<span class="p_del">-	ld8 reg=[reg] ;							\</span>
<span class="p_del">-	;;								\</span>
<span class="p_del">-	mov breg=reg ;							\</span>
<span class="p_del">-	br.cond.sptk.many breg</span>
<span class="p_del">-</span>
<span class="p_del">-#define BRANCH_PROC(sym, reg, breg, type)				\</span>
<span class="p_del">-	DATA8(paravirt_ ## sym ## _targ, ia64_native_ ## sym) ;		\</span>
<span class="p_del">-	GLOBAL_ENTRY(paravirt_ ## sym) ;				\</span>
<span class="p_del">-		BRANCH(paravirt_ ## sym ## _targ, reg, breg, type) ;	\</span>
<span class="p_del">-	END(paravirt_ ## sym)</span>
<span class="p_del">-</span>
<span class="p_del">-#define BRANCH_PROC_UNWINFO(sym, reg, breg, type)			\</span>
<span class="p_del">-	DATA8(paravirt_ ## sym ## _targ, ia64_native_ ## sym) ;		\</span>
<span class="p_del">-	GLOBAL_ENTRY(paravirt_ ## sym) ;				\</span>
<span class="p_del">-		PT_REGS_UNWIND_INFO(0) ;				\</span>
<span class="p_del">-		BRANCH(paravirt_ ## sym ## _targ, reg, breg, type) ;	\</span>
<span class="p_del">-	END(paravirt_ ## sym)</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
<span class="p_del">-BRANCH_PROC(switch_to, r22, b7, SWITCH_TO)</span>
<span class="p_del">-BRANCH_PROC_UNWINFO(leave_syscall, r22, b7, LEAVE_SYSCALL)</span>
<span class="p_del">-BRANCH_PROC(work_processed_syscall, r2, b7, WORK_PROCESSED_SYSCALL)</span>
<span class="p_del">-BRANCH_PROC_UNWINFO(leave_kernel, r22, b7, LEAVE_KERNEL)</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef CONFIG_MODULES</span>
<span class="p_del">-#define __INIT_OR_MODULE	.text</span>
<span class="p_del">-#define __INITDATA_OR_MODULE	.data</span>
<span class="p_del">-#else</span>
<span class="p_del">-#define __INIT_OR_MODULE	__INIT</span>
<span class="p_del">-#define __INITDATA_OR_MODULE	__INITDATA</span>
<span class="p_del">-#endif /* CONFIG_MODULES */</span>
<span class="p_del">-</span>
<span class="p_del">-	__INIT_OR_MODULE</span>
<span class="p_del">-	GLOBAL_ENTRY(paravirt_fc_i)</span>
<span class="p_del">-	fc.i r32</span>
<span class="p_del">-	br.ret.sptk.many rp</span>
<span class="p_del">-	END(paravirt_fc_i)</span>
<span class="p_del">-	__FINIT</span>
<span class="p_del">-</span>
<span class="p_del">-	__INIT_OR_MODULE</span>
<span class="p_del">-	.align 32</span>
<span class="p_del">-	GLOBAL_ENTRY(paravirt_nop_b_inst_bundle)</span>
<span class="p_del">-	{</span>
<span class="p_del">-		nop.b 0</span>
<span class="p_del">-		nop.b 0</span>
<span class="p_del">-		nop.b 0</span>
<span class="p_del">-	}</span>
<span class="p_del">-	END(paravirt_nop_b_inst_bundle)</span>
<span class="p_del">-	__FINIT</span>
<span class="p_del">-</span>
<span class="p_del">-	/* NOTE: nop.[mfi] has same format */</span>
<span class="p_del">-	__INIT_OR_MODULE</span>
<span class="p_del">-	GLOBAL_ENTRY(paravirt_nop_mfi_inst_bundle)</span>
<span class="p_del">-	{</span>
<span class="p_del">-		nop.m 0</span>
<span class="p_del">-		nop.f 0</span>
<span class="p_del">-		nop.i 0</span>
<span class="p_del">-	}</span>
<span class="p_del">-	END(paravirt_nop_mfi_inst_bundle)</span>
<span class="p_del">-	__FINIT</span>
<span class="p_del">-</span>
<span class="p_del">-	__INIT_OR_MODULE</span>
<span class="p_del">-	GLOBAL_ENTRY(paravirt_nop_bundle)</span>
<span class="p_del">-paravirt_nop_bundle_start:</span>
<span class="p_del">-	{</span>
<span class="p_del">-		nop 0</span>
<span class="p_del">-		nop 0</span>
<span class="p_del">-		nop 0</span>
<span class="p_del">-	}</span>
<span class="p_del">-paravirt_nop_bundle_end:</span>
<span class="p_del">-	END(paravirt_nop_bundle)</span>
<span class="p_del">-	__FINIT</span>
<span class="p_del">-</span>
<span class="p_del">-	__INITDATA_OR_MODULE</span>
<span class="p_del">-	.align 8</span>
<span class="p_del">-	.global paravirt_nop_bundle_size</span>
<span class="p_del">-paravirt_nop_bundle_size:</span>
<span class="p_del">-	data8	paravirt_nop_bundle_end - paravirt_nop_bundle_start</span>
<span class="p_header">diff --git a/arch/ia64/kernel/patch.c b/arch/ia64/kernel/patch.c</span>
<span class="p_header">index 1cf0917..944a8e2 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/patch.c</span>
<span class="p_header">+++ b/arch/ia64/kernel/patch.c</span>
<span class="p_chunk">@@ -7,7 +7,6 @@</span> <span class="p_context"></span>
 #include &lt;linux/init.h&gt;
 #include &lt;linux/string.h&gt;
 
<span class="p_del">-#include &lt;asm/paravirt.h&gt;</span>
 #include &lt;asm/patch.h&gt;
 #include &lt;asm/processor.h&gt;
 #include &lt;asm/sections.h&gt;
<span class="p_chunk">@@ -169,35 +168,16 @@</span> <span class="p_context"> ia64_patch_mckinley_e9 (unsigned long start, unsigned long end)</span>
 	ia64_srlz_i();
 }
 
<span class="p_del">-extern unsigned long ia64_native_fsyscall_table[NR_syscalls];</span>
<span class="p_del">-extern char ia64_native_fsys_bubble_down[];</span>
<span class="p_del">-struct pv_fsys_data pv_fsys_data __initdata = {</span>
<span class="p_del">-	.fsyscall_table = (unsigned long *)ia64_native_fsyscall_table,</span>
<span class="p_del">-	.fsys_bubble_down = (void *)ia64_native_fsys_bubble_down,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-unsigned long * __init</span>
<span class="p_del">-paravirt_get_fsyscall_table(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return pv_fsys_data.fsyscall_table;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-char * __init</span>
<span class="p_del">-paravirt_get_fsys_bubble_down(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return pv_fsys_data.fsys_bubble_down;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static void __init
 patch_fsyscall_table (unsigned long start, unsigned long end)
 {
<span class="p_del">-	u64 fsyscall_table = (u64)paravirt_get_fsyscall_table();</span>
<span class="p_add">+	extern unsigned long fsyscall_table[NR_syscalls];</span>
 	s32 *offp = (s32 *) start;
 	u64 ip;
 
 	while (offp &lt; (s32 *) end) {
 		ip = (u64) ia64_imva((char *) offp + *offp);
<span class="p_del">-		ia64_patch_imm64(ip, fsyscall_table);</span>
<span class="p_add">+		ia64_patch_imm64(ip, (u64) fsyscall_table);</span>
 		ia64_fc((void *) ip);
 		++offp;
 	}
<span class="p_chunk">@@ -208,7 +188,7 @@</span> <span class="p_context"> patch_fsyscall_table (unsigned long start, unsigned long end)</span>
 static void __init
 patch_brl_fsys_bubble_down (unsigned long start, unsigned long end)
 {
<span class="p_del">-	u64 fsys_bubble_down = (u64)paravirt_get_fsys_bubble_down();</span>
<span class="p_add">+	extern char fsys_bubble_down[];</span>
 	s32 *offp = (s32 *) start;
 	u64 ip;
 
<span class="p_chunk">@@ -226,13 +206,13 @@</span> <span class="p_context"> patch_brl_fsys_bubble_down (unsigned long start, unsigned long end)</span>
 void __init
 ia64_patch_gate (void)
 {
<span class="p_del">-#	define START(name)	paravirt_get_gate_patchlist(PV_GATE_START_##name)</span>
<span class="p_del">-#	define END(name)	paravirt_get_gate_patchlist(PV_GATE_END_##name)</span>
<span class="p_add">+#	define START(name)	((unsigned long) __start_gate_##name##_patchlist)</span>
<span class="p_add">+#	define END(name)	((unsigned long)__end_gate_##name##_patchlist)</span>
 
<span class="p_del">-	patch_fsyscall_table(START(FSYSCALL), END(FSYSCALL));</span>
<span class="p_del">-	patch_brl_fsys_bubble_down(START(BRL_FSYS_BUBBLE_DOWN), END(BRL_FSYS_BUBBLE_DOWN));</span>
<span class="p_del">-	ia64_patch_vtop(START(VTOP), END(VTOP));</span>
<span class="p_del">-	ia64_patch_mckinley_e9(START(MCKINLEY_E9), END(MCKINLEY_E9));</span>
<span class="p_add">+	patch_fsyscall_table(START(fsyscall), END(fsyscall));</span>
<span class="p_add">+	patch_brl_fsys_bubble_down(START(brl_fsys_bubble_down), END(brl_fsys_bubble_down));</span>
<span class="p_add">+	ia64_patch_vtop(START(vtop), END(vtop));</span>
<span class="p_add">+	ia64_patch_mckinley_e9(START(mckinley_e9), END(mckinley_e9));</span>
 }
 
 void ia64_patch_phys_stack_reg(unsigned long val)
<span class="p_header">diff --git a/arch/ia64/kernel/setup.c b/arch/ia64/kernel/setup.c</span>
<span class="p_header">index b976138..4f118b0 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/setup.c</span>
<span class="p_header">+++ b/arch/ia64/kernel/setup.c</span>
<span class="p_chunk">@@ -50,8 +50,6 @@</span> <span class="p_context"></span>
 #include &lt;asm/mca.h&gt;
 #include &lt;asm/meminit.h&gt;
 #include &lt;asm/page.h&gt;
<span class="p_del">-#include &lt;asm/paravirt.h&gt;</span>
<span class="p_del">-#include &lt;asm/paravirt_patch.h&gt;</span>
 #include &lt;asm/patch.h&gt;
 #include &lt;asm/pgtable.h&gt;
 #include &lt;asm/processor.h&gt;
<span class="p_chunk">@@ -360,8 +358,6 @@</span> <span class="p_context"> reserve_memory (void)</span>
 	rsvd_region[n].end   = (unsigned long) ia64_imva(_end);
 	n++;
 
<span class="p_del">-	n += paravirt_reserve_memory(&amp;rsvd_region[n]);</span>
<span class="p_del">-</span>
 #ifdef CONFIG_BLK_DEV_INITRD
 	if (ia64_boot_param-&gt;initrd_start) {
 		rsvd_region[n].start = (unsigned long)__va(ia64_boot_param-&gt;initrd_start);
<span class="p_chunk">@@ -528,10 +524,7 @@</span> <span class="p_context"> setup_arch (char **cmdline_p)</span>
 {
 	unw_init();
 
<span class="p_del">-	paravirt_arch_setup_early();</span>
<span class="p_del">-</span>
 	ia64_patch_vtop((u64) __start___vtop_patchlist, (u64) __end___vtop_patchlist);
<span class="p_del">-	paravirt_patch_apply();</span>
 
 	*cmdline_p = __va(ia64_boot_param-&gt;command_line);
 	strlcpy(boot_command_line, *cmdline_p, COMMAND_LINE_SIZE);
<span class="p_chunk">@@ -594,9 +587,6 @@</span> <span class="p_context"> setup_arch (char **cmdline_p)</span>
 	cpu_init();	/* initialize the bootstrap CPU */
 	mmu_context_init();	/* initialize context_id bitmap */
 
<span class="p_del">-	paravirt_banner();</span>
<span class="p_del">-	paravirt_arch_setup_console(cmdline_p);</span>
<span class="p_del">-</span>
 #ifdef CONFIG_VT
 	if (!conswitchp) {
 # if defined(CONFIG_DUMMY_CONSOLE)
<span class="p_chunk">@@ -616,8 +606,6 @@</span> <span class="p_context"> setup_arch (char **cmdline_p)</span>
 #endif
 
 	/* enable IA-64 Machine Check Abort Handling unless disabled */
<span class="p_del">-	if (paravirt_arch_setup_nomca())</span>
<span class="p_del">-		nomca = 1;</span>
 	if (!nomca)
 		ia64_mca_init();
 
<span class="p_header">diff --git a/arch/ia64/kernel/smpboot.c b/arch/ia64/kernel/smpboot.c</span>
<span class="p_header">index 15051e9..213a7a5 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/smpboot.c</span>
<span class="p_header">+++ b/arch/ia64/kernel/smpboot.c</span>
<span class="p_chunk">@@ -49,7 +49,6 @@</span> <span class="p_context"></span>
 #include &lt;asm/machvec.h&gt;
 #include &lt;asm/mca.h&gt;
 #include &lt;asm/page.h&gt;
<span class="p_del">-#include &lt;asm/paravirt.h&gt;</span>
 #include &lt;asm/pgalloc.h&gt;
 #include &lt;asm/pgtable.h&gt;
 #include &lt;asm/processor.h&gt;
<span class="p_chunk">@@ -568,7 +567,6 @@</span> <span class="p_context"> void smp_prepare_boot_cpu(void)</span>
 	cpumask_set_cpu(smp_processor_id(), &amp;cpu_callin_map);
 	set_numa_node(cpu_to_node_map[smp_processor_id()]);
 	per_cpu(cpu_state, smp_processor_id()) = CPU_ONLINE;
<span class="p_del">-	paravirt_post_smp_prepare_boot_cpu();</span>
 }
 
 #ifdef CONFIG_HOTPLUG_CPU
<span class="p_header">diff --git a/arch/ia64/kernel/time.c b/arch/ia64/kernel/time.c</span>
<span class="p_header">index 9a0104a..c8dbe2a 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/time.c</span>
<span class="p_header">+++ b/arch/ia64/kernel/time.c</span>
<span class="p_chunk">@@ -25,7 +25,6 @@</span> <span class="p_context"></span>
 #include &lt;asm/machvec.h&gt;
 #include &lt;asm/delay.h&gt;
 #include &lt;asm/hw_irq.h&gt;
<span class="p_del">-#include &lt;asm/paravirt.h&gt;</span>
 #include &lt;asm/ptrace.h&gt;
 #include &lt;asm/sal.h&gt;
 #include &lt;asm/sections.h&gt;
<span class="p_chunk">@@ -47,33 +46,12 @@</span> <span class="p_context"> EXPORT_SYMBOL(last_cli_ip);</span>
 
 #endif
 
<span class="p_del">-#ifdef CONFIG_PARAVIRT</span>
<span class="p_del">-/* We need to define a real function for sched_clock, to override the</span>
<span class="p_del">-   weak default version */</span>
<span class="p_del">-unsigned long long sched_clock(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-        return paravirt_sched_clock();</span>
<span class="p_del">-}</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
<span class="p_del">-#ifdef CONFIG_PARAVIRT</span>
<span class="p_del">-static void</span>
<span class="p_del">-paravirt_clocksource_resume(struct clocksource *cs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (pv_time_ops.clocksource_resume)</span>
<span class="p_del">-		pv_time_ops.clocksource_resume();</span>
<span class="p_del">-}</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
 static struct clocksource clocksource_itc = {
 	.name           = &quot;itc&quot;,
 	.rating         = 350,
 	.read           = itc_get_cycles,
 	.mask           = CLOCKSOURCE_MASK(64),
 	.flags          = CLOCK_SOURCE_IS_CONTINUOUS,
<span class="p_del">-#ifdef CONFIG_PARAVIRT</span>
<span class="p_del">-	.resume		= paravirt_clocksource_resume,</span>
<span class="p_del">-#endif</span>
 };
 static struct clocksource *itc_clocksource;
 
<span class="p_chunk">@@ -164,9 +142,6 @@</span> <span class="p_context"> timer_interrupt (int irq, void *dev_id)</span>
 
 	profile_tick(CPU_PROFILING);
 
<span class="p_del">-	if (paravirt_do_steal_accounting(&amp;new_itm))</span>
<span class="p_del">-		goto skip_process_time_accounting;</span>
<span class="p_del">-</span>
 	while (1) {
 		update_process_times(user_mode(get_irq_regs()));
 
<span class="p_chunk">@@ -187,8 +162,6 @@</span> <span class="p_context"> timer_interrupt (int irq, void *dev_id)</span>
 		local_irq_disable();
 	}
 
<span class="p_del">-skip_process_time_accounting:</span>
<span class="p_del">-</span>
 	do {
 		/*
 		 * If we&#39;re too close to the next clock tick for
<span class="p_chunk">@@ -337,8 +310,6 @@</span> <span class="p_context"> void ia64_init_itm(void)</span>
 		 */
 		clocksource_itc.rating = 50;
 
<span class="p_del">-	paravirt_init_missing_ticks_accounting(smp_processor_id());</span>
<span class="p_del">-</span>
 	/* avoid softlock up message when cpu is unplug and plugged again. */
 	touch_softlockup_watchdog();
 
<span class="p_header">diff --git a/arch/ia64/kernel/vmlinux.lds.S b/arch/ia64/kernel/vmlinux.lds.S</span>
<span class="p_header">index 84f8a52..dc506b0 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/vmlinux.lds.S</span>
<span class="p_header">+++ b/arch/ia64/kernel/vmlinux.lds.S</span>
<span class="p_chunk">@@ -136,27 +136,6 @@</span> <span class="p_context"> SECTIONS {</span>
 		__end___mckinley_e9_bundles = .;
 	}
 
<span class="p_del">-#if defined(CONFIG_PARAVIRT)</span>
<span class="p_del">-	. = ALIGN(16);</span>
<span class="p_del">-	.paravirt_bundles : AT(ADDR(.paravirt_bundles) - LOAD_OFFSET) {</span>
<span class="p_del">-		__start_paravirt_bundles = .;</span>
<span class="p_del">-		*(.paravirt_bundles)</span>
<span class="p_del">-		__stop_paravirt_bundles = .;</span>
<span class="p_del">-	}</span>
<span class="p_del">-	. = ALIGN(16);</span>
<span class="p_del">-	.paravirt_insts : AT(ADDR(.paravirt_insts) - LOAD_OFFSET) {</span>
<span class="p_del">-		__start_paravirt_insts = .;</span>
<span class="p_del">-		*(.paravirt_insts)</span>
<span class="p_del">-		__stop_paravirt_insts = .;</span>
<span class="p_del">-	}</span>
<span class="p_del">-	. = ALIGN(16);</span>
<span class="p_del">-	.paravirt_branches : AT(ADDR(.paravirt_branches) - LOAD_OFFSET) {</span>
<span class="p_del">-		__start_paravirt_branches = .;</span>
<span class="p_del">-		*(.paravirt_branches)</span>
<span class="p_del">-		__stop_paravirt_branches = .;</span>
<span class="p_del">-	}</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
 #if defined(CONFIG_IA64_GENERIC)
 	/* Machine Vector */
 	. = ALIGN(16);
<span class="p_header">diff --git a/arch/ia64/mm/init.c b/arch/ia64/mm/init.c</span>
<span class="p_header">index a9b65cf..7f30289 100644</span>
<span class="p_header">--- a/arch/ia64/mm/init.c</span>
<span class="p_header">+++ b/arch/ia64/mm/init.c</span>
<span class="p_chunk">@@ -34,7 +34,6 @@</span> <span class="p_context"></span>
 #include &lt;asm/uaccess.h&gt;
 #include &lt;asm/unistd.h&gt;
 #include &lt;asm/mca.h&gt;
<span class="p_del">-#include &lt;asm/paravirt.h&gt;</span>
 
 extern void ia64_tlb_init (void);
 
<span class="p_chunk">@@ -244,7 +243,6 @@</span> <span class="p_context"> put_kernel_page (struct page *page, unsigned long address, pgprot_t pgprot)</span>
 static void __init
 setup_gate (void)
 {
<span class="p_del">-	void *gate_section;</span>
 	struct page *page;
 
 	/*
<span class="p_chunk">@@ -252,11 +250,10 @@</span> <span class="p_context"> setup_gate (void)</span>
 	 * headers etc. and once execute-only page to enable
 	 * privilege-promotion via &quot;epc&quot;:
 	 */
<span class="p_del">-	gate_section = paravirt_get_gate_section();</span>
<span class="p_del">-	page = virt_to_page(ia64_imva(gate_section));</span>
<span class="p_add">+	page = virt_to_page(ia64_imva(__start_gate_section));</span>
 	put_kernel_page(page, GATE_ADDR, PAGE_READONLY);
 #ifdef HAVE_BUGGY_SEGREL
<span class="p_del">-	page = virt_to_page(ia64_imva(gate_section + PAGE_SIZE));</span>
<span class="p_add">+	page = virt_to_page(ia64_imva(__start_gate_section + PAGE_SIZE));</span>
 	put_kernel_page(page, GATE_ADDR + PAGE_SIZE, PAGE_GATE);
 #else
 	put_kernel_page(page, GATE_ADDR + PERCPU_PAGE_SIZE, PAGE_GATE);
<span class="p_chunk">@@ -642,8 +639,8 @@</span> <span class="p_context"> mem_init (void)</span>
 	 * code can tell them apart.
 	 */
 	for (i = 0; i &lt; NR_syscalls; ++i) {
<span class="p_add">+		extern unsigned long fsyscall_table[NR_syscalls];</span>
 		extern unsigned long sys_call_table[NR_syscalls];
<span class="p_del">-		unsigned long *fsyscall_table = paravirt_get_fsyscall_table();</span>
 
 		if (!fsyscall_table[i] || nolwsys)
 			fsyscall_table[i] = sys_call_table[i] | 1;
<span class="p_header">diff --git a/arch/ia64/scripts/pvcheck.sed b/arch/ia64/scripts/pvcheck.sed</span>
deleted file mode 100644
<span class="p_header">index e59809a..0000000</span>
<span class="p_header">--- a/arch/ia64/scripts/pvcheck.sed</span>
<span class="p_header">+++ /dev/null</span>
<span class="p_chunk">@@ -1,33 +0,0 @@</span> <span class="p_context"></span>
<span class="p_del">-#</span>
<span class="p_del">-# Checker for paravirtualizations of privileged operations.</span>
<span class="p_del">-#</span>
<span class="p_del">-s/ssm.*psr\.ic.*/.warning \&quot;ssm psr.ic should not be used directly\&quot;/g</span>
<span class="p_del">-s/rsm.*psr\.ic.*/.warning \&quot;rsm psr.ic should not be used directly\&quot;/g</span>
<span class="p_del">-s/ssm.*psr\.i.*/.warning \&quot;ssm psr.i should not be used directly\&quot;/g</span>
<span class="p_del">-s/rsm.*psr\.i.*/.warning \&quot;rsm psr.i should not be used directly\&quot;/g</span>
<span class="p_del">-s/ssm.*psr\.dt.*/.warning \&quot;ssm psr.dt should not be used directly\&quot;/g</span>
<span class="p_del">-s/rsm.*psr\.dt.*/.warning \&quot;rsm psr.dt should not be used directly\&quot;/g</span>
<span class="p_del">-s/mov.*=.*cr\.ifa/.warning \&quot;cr.ifa should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*=.*cr\.itir/.warning \&quot;cr.itir should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*=.*cr\.isr/.warning \&quot;cr.isr should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*=.*cr\.iha/.warning \&quot;cr.iha should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*=.*cr\.ipsr/.warning \&quot;cr.ipsr should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*=.*cr\.iim/.warning \&quot;cr.iim should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*=.*cr\.iip/.warning \&quot;cr.iip should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*=.*cr\.ivr/.warning \&quot;cr.ivr should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*=[^\.]*psr/.warning \&quot;psr should not used directly\&quot;/g	# avoid ar.fpsr</span>
<span class="p_del">-s/mov.*=.*ar\.eflags/.warning \&quot;ar.eflags should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*=.*ar\.itc.*/.warning \&quot;ar.itc should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*cr\.ifa.*=.*/.warning \&quot;cr.ifa should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*cr\.itir.*=.*/.warning \&quot;cr.itir should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*cr\.iha.*=.*/.warning \&quot;cr.iha should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*cr\.ipsr.*=.*/.warning \&quot;cr.ipsr should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*cr\.ifs.*=.*/.warning \&quot;cr.ifs should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*cr\.iip.*=.*/.warning \&quot;cr.iip should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*cr\.kr.*=.*/.warning \&quot;cr.kr should not used directly\&quot;/g</span>
<span class="p_del">-s/mov.*ar\.eflags.*=.*/.warning \&quot;ar.eflags should not used directly\&quot;/g</span>
<span class="p_del">-s/itc\.i.*/.warning \&quot;itc.i should not be used directly.\&quot;/g</span>
<span class="p_del">-s/itc\.d.*/.warning \&quot;itc.d should not be used directly.\&quot;/g</span>
<span class="p_del">-s/bsw\.0/.warning \&quot;bsw.0 should not be used directly.\&quot;/g</span>
<span class="p_del">-s/bsw\.1/.warning \&quot;bsw.1 should not be used directly.\&quot;/g</span>
<span class="p_del">-s/ptc\.ga.*/.warning \&quot;ptc.ga should not be used directly.\&quot;/g</span>

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



