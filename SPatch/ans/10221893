
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.15,023/202,Variant,3/Meltdown] arm64: mm: Invalidate both kernel and user ASIDs when performing TLBI - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.15,023/202,Variant,3/Meltdown] arm64: mm: Invalidate both kernel and user ASIDs when performing TLBI</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 15, 2018, 3:15 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180215151714.135182487@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10221893/mbox/"
   >mbox</a>
|
   <a href="/patch/10221893/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10221893/">/patch/10221893/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	664C7601D7 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 15 Feb 2018 15:39:42 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 56CBF28971
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 15 Feb 2018 15:39:42 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 4B93D29423; Thu, 15 Feb 2018 15:39:42 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E937628971
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 15 Feb 2018 15:39:41 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1423557AbeBOPjg (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 15 Feb 2018 10:39:36 -0500
Received: from mail.linuxfoundation.org ([140.211.169.12]:59778 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1423502AbeBOPjb (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 15 Feb 2018 10:39:31 -0500
Received: from localhost (LFbn-1-12258-90.w90-92.abo.wanadoo.fr
	[90.92.71.90])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id E52E610F0;
	Thu, 15 Feb 2018 15:39:30 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, Mark Rutland &lt;mark.rutland@arm.com&gt;,
	Laura Abbott &lt;labbott@redhat.com&gt;,
	Shanker Donthineni &lt;shankerd@codeaurora.org&gt;,
	Will Deacon &lt;will.deacon@arm.com&gt;
Subject: [PATCH 4.15 023/202] [Variant 3/Meltdown] arm64: mm: Invalidate
	both kernel and user ASIDs when performing TLBI
Date: Thu, 15 Feb 2018 16:15:23 +0100
Message-Id: &lt;20180215151714.135182487@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.16.1
In-Reply-To: &lt;20180215151712.768794354@linuxfoundation.org&gt;
References: &lt;20180215151712.768794354@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Feb. 15, 2018, 3:15 p.m.</div>
<pre class="content">
4.15-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: Will Deacon &lt;will.deacon@arm.com&gt;</span>


Commit 9b0de864b5bc upstream.

Since an mm has both a kernel and a user ASID, we need to ensure that
broadcast TLB maintenance targets both address spaces so that things
like CoW continue to work with the uaccess primitives in the kernel.
<span class="reviewed-by">
Reviewed-by: Mark Rutland &lt;mark.rutland@arm.com&gt;</span>
<span class="tested-by">Tested-by: Laura Abbott &lt;labbott@redhat.com&gt;</span>
<span class="tested-by">Tested-by: Shanker Donthineni &lt;shankerd@codeaurora.org&gt;</span>
<span class="signed-off-by">Signed-off-by: Will Deacon &lt;will.deacon@arm.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>
---
 arch/arm64/include/asm/tlbflush.h |   16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/arm64/include/asm/tlbflush.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/tlbflush.h</span>
<span class="p_chunk">@@ -23,6 +23,7 @@</span> <span class="p_context"></span>
 
 #include &lt;linux/sched.h&gt;
 #include &lt;asm/cputype.h&gt;
<span class="p_add">+#include &lt;asm/mmu.h&gt;</span>
 
 /*
  * Raw TLBI operations.
<span class="p_chunk">@@ -54,6 +55,11 @@</span> <span class="p_context"></span>
 
 #define __tlbi(op, ...)		__TLBI_N(op, ##__VA_ARGS__, 1, 0)
 
<span class="p_add">+#define __tlbi_user(op, arg) do {						\</span>
<span class="p_add">+	if (arm64_kernel_unmapped_at_el0())					\</span>
<span class="p_add">+		__tlbi(op, (arg) | USER_ASID_FLAG);				\</span>
<span class="p_add">+} while (0)</span>
<span class="p_add">+</span>
 /*
  *	TLB Management
  *	==============
<span class="p_chunk">@@ -115,6 +121,7 @@</span> <span class="p_context"> static inline void flush_tlb_mm(struct m</span>
 
 	dsb(ishst);
 	__tlbi(aside1is, asid);
<span class="p_add">+	__tlbi_user(aside1is, asid);</span>
 	dsb(ish);
 }
 
<span class="p_chunk">@@ -125,6 +132,7 @@</span> <span class="p_context"> static inline void flush_tlb_page(struct</span>
 
 	dsb(ishst);
 	__tlbi(vale1is, addr);
<span class="p_add">+	__tlbi_user(vale1is, addr);</span>
 	dsb(ish);
 }
 
<span class="p_chunk">@@ -151,10 +159,13 @@</span> <span class="p_context"> static inline void __flush_tlb_range(str</span>
 
 	dsb(ishst);
 	for (addr = start; addr &lt; end; addr += 1 &lt;&lt; (PAGE_SHIFT - 12)) {
<span class="p_del">-		if (last_level)</span>
<span class="p_add">+		if (last_level) {</span>
 			__tlbi(vale1is, addr);
<span class="p_del">-		else</span>
<span class="p_add">+			__tlbi_user(vale1is, addr);</span>
<span class="p_add">+		} else {</span>
 			__tlbi(vae1is, addr);
<span class="p_add">+			__tlbi_user(vae1is, addr);</span>
<span class="p_add">+		}</span>
 	}
 	dsb(ish);
 }
<span class="p_chunk">@@ -194,6 +205,7 @@</span> <span class="p_context"> static inline void __flush_tlb_pgtable(s</span>
 	unsigned long addr = uaddr &gt;&gt; 12 | (ASID(mm) &lt;&lt; 48);
 
 	__tlbi(vae1is, addr);
<span class="p_add">+	__tlbi_user(vae1is, addr);</span>
 	dsb(ish);
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



