
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,07/18] arm64: mm: Allocate ASIDs in pairs - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,07/18] arm64: mm: Allocate ASIDs in pairs</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=7096">Will Deacon</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 30, 2017, 4:39 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1512059986-21325-8-git-send-email-will.deacon@arm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10085361/mbox/"
   >mbox</a>
|
   <a href="/patch/10085361/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10085361/">/patch/10085361/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	5A55360234 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 30 Nov 2017 16:52:01 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E06FE2A208
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 30 Nov 2017 16:52:00 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D559F2A20E; Thu, 30 Nov 2017 16:52:00 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id CE98E2A208
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 30 Nov 2017 16:51:59 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753616AbdK3QqL (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 30 Nov 2017 11:46:11 -0500
Received: from foss.arm.com ([217.140.101.70]:57496 &quot;EHLO foss.arm.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753336AbdK3Qjp (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 30 Nov 2017 11:39:45 -0500
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
	by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 64F13165D;
	Thu, 30 Nov 2017 08:39:45 -0800 (PST)
Received: from edgewater-inn.cambridge.arm.com
	(usa-sjc-imap-foss1.foss.arm.com [10.72.51.249])
	by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id
	35F823F5B7; Thu, 30 Nov 2017 08:39:45 -0800 (PST)
Received: by edgewater-inn.cambridge.arm.com (Postfix, from userid 1000)
	id E5B5B1AE3D5D; Thu, 30 Nov 2017 16:39:47 +0000 (GMT)
From: Will Deacon &lt;will.deacon@arm.com&gt;
To: linux-arm-kernel@lists.infradead.org
Cc: linux-kernel@vger.kernel.org, catalin.marinas@arm.com,
	mark.rutland@arm.com, ard.biesheuvel@linaro.org,
	sboyd@codeaurora.org, dave.hansen@linux.intel.com,
	keescook@chromium.org, msalter@redhat.com, labbott@redhat.com,
	tglx@linutronix.de, Will Deacon &lt;will.deacon@arm.com&gt;
Subject: [PATCH v2 07/18] arm64: mm: Allocate ASIDs in pairs
Date: Thu, 30 Nov 2017 16:39:35 +0000
Message-Id: &lt;1512059986-21325-8-git-send-email-will.deacon@arm.com&gt;
X-Mailer: git-send-email 2.1.4
In-Reply-To: &lt;1512059986-21325-1-git-send-email-will.deacon@arm.com&gt;
References: &lt;1512059986-21325-1-git-send-email-will.deacon@arm.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7096">Will Deacon</a> - Nov. 30, 2017, 4:39 p.m.</div>
<pre class="content">
In preparation for separate kernel/user ASIDs, allocate them in pairs
for each mm_struct. The bottom bit distinguishes the two: if it is set,
then the ASID will map only userspace.
<span class="signed-off-by">
Signed-off-by: Will Deacon &lt;will.deacon@arm.com&gt;</span>
---
 arch/arm64/include/asm/mmu.h |  1 +
 arch/arm64/mm/context.c      | 25 +++++++++++++++++--------
 2 files changed, 18 insertions(+), 8 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/include/asm/mmu.h b/arch/arm64/include/asm/mmu.h</span>
<span class="p_header">index 0d34bf0a89c7..01bfb184f2a8 100644</span>
<span class="p_header">--- a/arch/arm64/include/asm/mmu.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/mmu.h</span>
<span class="p_chunk">@@ -17,6 +17,7 @@</span> <span class="p_context"></span>
 #define __ASM_MMU_H
 
 #define MMCF_AARCH32	0x1	/* mm context flag for AArch32 executables */
<span class="p_add">+#define USER_ASID_FLAG	(UL(1) &lt;&lt; 48)</span>
 
 typedef struct {
 	atomic64_t	id;
<span class="p_header">diff --git a/arch/arm64/mm/context.c b/arch/arm64/mm/context.c</span>
<span class="p_header">index 78816e476491..db28958d9e4f 100644</span>
<span class="p_header">--- a/arch/arm64/mm/context.c</span>
<span class="p_header">+++ b/arch/arm64/mm/context.c</span>
<span class="p_chunk">@@ -39,7 +39,16 @@</span> <span class="p_context"> static cpumask_t tlb_flush_pending;</span>
 
 #define ASID_MASK		(~GENMASK(asid_bits - 1, 0))
 #define ASID_FIRST_VERSION	(1UL &lt;&lt; asid_bits)
<span class="p_del">-#define NUM_USER_ASIDS		ASID_FIRST_VERSION</span>
<span class="p_add">+</span>
<span class="p_add">+#ifdef CONFIG_UNMAP_KERNEL_AT_EL0</span>
<span class="p_add">+#define NUM_USER_ASIDS		(ASID_FIRST_VERSION &gt;&gt; 1)</span>
<span class="p_add">+#define asid2idx(asid)		(((asid) &amp; ~ASID_MASK) &gt;&gt; 1)</span>
<span class="p_add">+#define idx2asid(idx)		(((idx) &lt;&lt; 1) &amp; ~ASID_MASK)</span>
<span class="p_add">+#else</span>
<span class="p_add">+#define NUM_USER_ASIDS		(ASID_FIRST_VERSION)</span>
<span class="p_add">+#define asid2idx(asid)		((asid) &amp; ~ASID_MASK)</span>
<span class="p_add">+#define idx2asid(idx)		asid2idx(idx)</span>
<span class="p_add">+#endif</span>
 
 /* Get the ASIDBits supported by the current CPU */
 static u32 get_cpu_asid_bits(void)
<span class="p_chunk">@@ -104,7 +113,7 @@</span> <span class="p_context"> static void flush_context(unsigned int cpu)</span>
 		 */
 		if (asid == 0)
 			asid = per_cpu(reserved_asids, i);
<span class="p_del">-		__set_bit(asid &amp; ~ASID_MASK, asid_map);</span>
<span class="p_add">+		__set_bit(asid2idx(asid), asid_map);</span>
 		per_cpu(reserved_asids, i) = asid;
 	}
 
<span class="p_chunk">@@ -156,16 +165,16 @@</span> <span class="p_context"> static u64 new_context(struct mm_struct *mm, unsigned int cpu)</span>
 		 * We had a valid ASID in a previous life, so try to re-use
 		 * it if possible.
 		 */
<span class="p_del">-		asid &amp;= ~ASID_MASK;</span>
<span class="p_del">-		if (!__test_and_set_bit(asid, asid_map))</span>
<span class="p_add">+		if (!__test_and_set_bit(asid2idx(asid), asid_map))</span>
 			return newasid;
 	}
 
 	/*
 	 * Allocate a free ASID. If we can&#39;t find one, take a note of the
<span class="p_del">-	 * currently active ASIDs and mark the TLBs as requiring flushes.</span>
<span class="p_del">-	 * We always count from ASID #1, as we use ASID #0 when setting a</span>
<span class="p_del">-	 * reserved TTBR0 for the init_mm.</span>
<span class="p_add">+	 * currently active ASIDs and mark the TLBs as requiring flushes.  We</span>
<span class="p_add">+	 * always count from ASID #2 (index 1), as we use ASID #0 when setting</span>
<span class="p_add">+	 * a reserved TTBR0 for the init_mm and we allocate ASIDs in even/odd</span>
<span class="p_add">+	 * pairs.</span>
 	 */
 	asid = find_next_zero_bit(asid_map, NUM_USER_ASIDS, cur_idx);
 	if (asid != NUM_USER_ASIDS)
<span class="p_chunk">@@ -182,7 +191,7 @@</span> <span class="p_context"> static u64 new_context(struct mm_struct *mm, unsigned int cpu)</span>
 set_asid:
 	__set_bit(asid, asid_map);
 	cur_idx = asid;
<span class="p_del">-	return asid | generation;</span>
<span class="p_add">+	return idx2asid(asid) | generation;</span>
 }
 
 void check_and_switch_context(struct mm_struct *mm, unsigned int cpu)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



