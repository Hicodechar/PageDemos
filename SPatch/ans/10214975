
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v4,3/3] KVM: X86: Don&#39;t use PV TLB flush with dedicated vCPUs and steal time disabled - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v4,3/3] KVM: X86: Don&#39;t use PV TLB flush with dedicated vCPUs and steal time disabled</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=104371">Wanpeng Li</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 13, 2018, 1:05 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1518483942-14741-4-git-send-email-wanpengli@tencent.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10214975/mbox/"
   >mbox</a>
|
   <a href="/patch/10214975/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10214975/">/patch/10214975/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	BB53A60329 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 13 Feb 2018 01:06:01 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id AF46428E1C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 13 Feb 2018 01:06:01 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A322428E23; Tue, 13 Feb 2018 01:06:01 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, FREEMAIL_FROM,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 034EB28E1C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 13 Feb 2018 01:06:01 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S933185AbeBMBF5 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 12 Feb 2018 20:05:57 -0500
Received: from mail-pg0-f67.google.com ([74.125.83.67]:41914 &quot;EHLO
	mail-pg0-f67.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S933093AbeBMBFy (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 12 Feb 2018 20:05:54 -0500
Received: by mail-pg0-f67.google.com with SMTP id t4so7661039pgp.8;
	Mon, 12 Feb 2018 17:05:53 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=from:to:cc:subject:date:message-id:in-reply-to:references
	:mime-version:content-transfer-encoding;
	bh=n1ayQ0jiCj6HzGDj3QlRhd7zZXtCBxW0SxG4RxM4IGo=;
	b=KPiufV5uIuvEpN4NONVKsLT+FT/Ag3DN5KJ8CCQBgOhpeQDafuAsuweEbNJulXuMS1
	HgDoJ0q+hfD1RhojnOVNqDGgSBFzldRISdXrHA7Lw+xi0jBOTF3HUA+yUjpb0hT182Th
	Rf+ydtoJ01jT/hnB89ppKIJU/32acibhIBZH0/0yj+zIAsg5Pg5jQ2zQRILz8HAp5JgC
	R1N4HKrBJ9iNcUQiLcaJCJeqF64Wy0oSnSWacoJMrSkADqgYfQP8aUbzOTReGPwkHgDY
	F0Do73RSU1ACcUJj6fHAEnc4mTpHPUlhVDT5QjeAZZRyXjqlVkvR2GirGWzvhmdVAjU9
	e/dg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references:mime-version:content-transfer-encoding;
	bh=n1ayQ0jiCj6HzGDj3QlRhd7zZXtCBxW0SxG4RxM4IGo=;
	b=Kpb6dMxaDknwwzhPnVtM83/iia8F4ySCV7dfkk0lG4Wkv/D+TDiZblGDkPgJno1Ot6
	Bx95Ln6h0TJFQOFyfyBFBoZXD91Ni9dnlUf3eDnVVL14Mh+7wwxcQIBDCOGzjhnRkNNO
	ZE9fFJgGmmXomzjO4JWgzcs8Ae1UnD7j6zU/C0kRB26sEDAjvOZBgMcO/Fava/wVgey7
	DG2xOeiZ3TmG0sceLTq6Dv6aTghd/4TfgaiLw45ns/AESTWOJayCUF6dzn2AiPSDpZxh
	vMCo4YjIx5ps/ePHrEYkjSA3VFSK6TxswPN9U9SKxkld69Rh0guh8WTzcDWdcUWi6zxJ
	NDRA==
X-Gm-Message-State: APf1xPBgpmQT7+F/tN3zMt3jnFUokkxjKhWnrDAomDHQHKAnbkItki8S
	9uMFJ0LnH6S87WbiRybEy9EtQg==
X-Google-Smtp-Source: AH8x2268XRr+lc+S9RUObxHNlvJiQhPAyYSNzr9dgR7GTKezFkXKpubL+QpKf7d3RvYCAMWPFK6/PQ==
X-Received: by 10.98.29.137 with SMTP id d131mr105569pfd.51.1518483953435;
	Mon, 12 Feb 2018 17:05:53 -0800 (PST)
Received: from localhost.localdomain ([203.205.141.123])
	by smtp.googlemail.com with ESMTPSA id
	p4sm24500416pgn.81.2018.02.12.17.05.51
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Mon, 12 Feb 2018 17:05:52 -0800 (PST)
From: Wanpeng Li &lt;kernellwp@gmail.com&gt;
X-Google-Original-From: Wanpeng Li &lt;wanpengli@tencent.com&gt;
To: linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: Paolo Bonzini &lt;pbonzini@redhat.com&gt;,
	=?UTF-8?q?Radim=20Kr=C4=8Dm=C3=A1=C5=99?= &lt;rkrcmar@redhat.com&gt;,
	Eduardo Habkost &lt;ehabkost@redhat.com&gt;
Subject: [PATCH v4 3/3] KVM: X86: Don&#39;t use PV TLB flush with dedicated
	vCPUs and steal time disabled
Date: Tue, 13 Feb 2018 09:05:42 +0800
Message-Id: &lt;1518483942-14741-4-git-send-email-wanpengli@tencent.com&gt;
X-Mailer: git-send-email 2.7.4
In-Reply-To: &lt;1518483942-14741-1-git-send-email-wanpengli@tencent.com&gt;
References: &lt;1518483942-14741-1-git-send-email-wanpengli@tencent.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=104371">Wanpeng Li</a> - Feb. 13, 2018, 1:05 a.m.</div>
<pre class="content">
<span class="from">From: Wanpeng Li &lt;wanpengli@tencent.com&gt;</span>

vCPUs are very unlikely to get preempted when they are the only task
running on a CPU.  PV TLB flush is slower that the native flush in that
case. In addition, avoid traversing all the cpus for pv tlb flush when
steal time is disabled since pv tlb flush depends on the field in steal
time for shared data.

Cc: Paolo Bonzini &lt;pbonzini@redhat.com&gt;
Cc: Radim Krčmář &lt;rkrcmar@redhat.com&gt;
Cc: Eduardo Habkost &lt;ehabkost@redhat.com&gt;
<span class="signed-off-by">Signed-off-by: Wanpeng Li &lt;wanpengli@tencent.com&gt;</span>
---
 arch/x86/kernel/kvm.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2536">Paolo Bonzini</a> - Feb. 13, 2018, 4:12 p.m.</div>
<pre class="content">
On 13/02/2018 02:05, Wanpeng Li wrote:
<span class="quote">&gt; From: Wanpeng Li &lt;wanpengli@tencent.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; vCPUs are very unlikely to get preempted when they are the only task</span>
<span class="quote">&gt; running on a CPU.  PV TLB flush is slower that the native flush in that</span>
<span class="quote">&gt; case. In addition, avoid traversing all the cpus for pv tlb flush when</span>
<span class="quote">&gt; steal time is disabled since pv tlb flush depends on the field in steal</span>
<span class="quote">&gt; time for shared data.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Cc: Paolo Bonzini &lt;pbonzini@redhat.com&gt;</span>
<span class="quote">&gt; Cc: Radim Krčmář &lt;rkrcmar@redhat.com&gt;</span>
<span class="quote">&gt; Cc: Eduardo Habkost &lt;ehabkost@redhat.com&gt;</span>
<span class="quote">&gt; Signed-off-by: Wanpeng Li &lt;wanpengli@tencent.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/x86/kernel/kvm.c | 8 ++++++--</span>
<span class="quote">&gt;  1 file changed, 6 insertions(+), 2 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/arch/x86/kernel/kvm.c b/arch/x86/kernel/kvm.c</span>
<span class="quote">&gt; index c5566d9..285822f 100644</span>
<span class="quote">&gt; --- a/arch/x86/kernel/kvm.c</span>
<span class="quote">&gt; +++ b/arch/x86/kernel/kvm.c</span>
<span class="quote">&gt; @@ -545,7 +545,9 @@ static void __init kvm_guest_init(void)</span>
<span class="quote">&gt;  		pv_time_ops.steal_clock = kvm_steal_clock;</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -	if (kvm_para_has_feature(KVM_FEATURE_PV_TLB_FLUSH))</span>
<span class="quote">&gt; +	if (kvm_para_has_feature(KVM_FEATURE_PV_TLB_FLUSH) &amp;&amp;</span>
<span class="quote">&gt; +		!kvm_para_has_feature(KVM_HINTS_DEDICATED) &amp;&amp;</span>
<span class="quote">&gt; +		!kvm_para_has_feature(KVM_FEATURE_STEAL_TIME))</span>
<span class="quote">&gt;  		pv_mmu_ops.flush_tlb_others = kvm_flush_tlb_others;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	if (kvm_para_has_feature(KVM_FEATURE_PV_EOI))</span>
<span class="quote">&gt; @@ -638,7 +640,9 @@ static __init int kvm_setup_pv_tlb_flush(void)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	int cpu;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -	if (kvm_para_has_feature(KVM_FEATURE_PV_TLB_FLUSH)) {</span>
<span class="quote">&gt; +	if (kvm_para_has_feature(KVM_FEATURE_PV_TLB_FLUSH) &amp;&amp;</span>
<span class="quote">&gt; +		!kvm_para_has_feature(KVM_HINTS_DEDICATED) &amp;&amp;</span>

This should have checked the hints word.

In general, I&#39;m going to change in the whole series
kvm_hint_has_feature with kvm_para_has_hint, and kvm_arch_hint_features
with kvm_arch_para_hints.  But apart from this small naming issue, the
series looks good, and I&#39;m applying it to kvm/queue.

Paolo
<span class="quote">
&gt; +		!kvm_para_has_feature(KVM_FEATURE_STEAL_TIME)) {</span>
<span class="quote">&gt;  		for_each_possible_cpu(cpu) {</span>
<span class="quote">&gt;  			zalloc_cpumask_var_node(per_cpu_ptr(&amp;__pv_tlb_mask, cpu),</span>
<span class="quote">&gt;  				GFP_KERNEL, cpu_to_node(cpu));</span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=104371">Wanpeng Li</a> - Feb. 14, 2018, 3:03 a.m.</div>
<pre class="content">
2018-02-14 0:12 GMT+08:00 Paolo Bonzini &lt;pbonzini@redhat.com&gt;:
<span class="quote">&gt; On 13/02/2018 02:05, Wanpeng Li wrote:</span>
<span class="quote">&gt;&gt; From: Wanpeng Li &lt;wanpengli@tencent.com&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; vCPUs are very unlikely to get preempted when they are the only task</span>
<span class="quote">&gt;&gt; running on a CPU.  PV TLB flush is slower that the native flush in that</span>
<span class="quote">&gt;&gt; case. In addition, avoid traversing all the cpus for pv tlb flush when</span>
<span class="quote">&gt;&gt; steal time is disabled since pv tlb flush depends on the field in steal</span>
<span class="quote">&gt;&gt; time for shared data.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Cc: Paolo Bonzini &lt;pbonzini@redhat.com&gt;</span>
<span class="quote">&gt;&gt; Cc: Radim Krčmář &lt;rkrcmar@redhat.com&gt;</span>
<span class="quote">&gt;&gt; Cc: Eduardo Habkost &lt;ehabkost@redhat.com&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Wanpeng Li &lt;wanpengli@tencent.com&gt;</span>
<span class="quote">&gt;&gt; ---</span>
<span class="quote">&gt;&gt;  arch/x86/kernel/kvm.c | 8 ++++++--</span>
<span class="quote">&gt;&gt;  1 file changed, 6 insertions(+), 2 deletions(-)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; diff --git a/arch/x86/kernel/kvm.c b/arch/x86/kernel/kvm.c</span>
<span class="quote">&gt;&gt; index c5566d9..285822f 100644</span>
<span class="quote">&gt;&gt; --- a/arch/x86/kernel/kvm.c</span>
<span class="quote">&gt;&gt; +++ b/arch/x86/kernel/kvm.c</span>
<span class="quote">&gt;&gt; @@ -545,7 +545,9 @@ static void __init kvm_guest_init(void)</span>
<span class="quote">&gt;&gt;               pv_time_ops.steal_clock = kvm_steal_clock;</span>
<span class="quote">&gt;&gt;       }</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; -     if (kvm_para_has_feature(KVM_FEATURE_PV_TLB_FLUSH))</span>
<span class="quote">&gt;&gt; +     if (kvm_para_has_feature(KVM_FEATURE_PV_TLB_FLUSH) &amp;&amp;</span>
<span class="quote">&gt;&gt; +             !kvm_para_has_feature(KVM_HINTS_DEDICATED) &amp;&amp;</span>
<span class="quote">&gt;&gt; +             !kvm_para_has_feature(KVM_FEATURE_STEAL_TIME))</span>
<span class="quote">&gt;&gt;               pv_mmu_ops.flush_tlb_others = kvm_flush_tlb_others;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;       if (kvm_para_has_feature(KVM_FEATURE_PV_EOI))</span>
<span class="quote">&gt;&gt; @@ -638,7 +640,9 @@ static __init int kvm_setup_pv_tlb_flush(void)</span>
<span class="quote">&gt;&gt;  {</span>
<span class="quote">&gt;&gt;       int cpu;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; -     if (kvm_para_has_feature(KVM_FEATURE_PV_TLB_FLUSH)) {</span>
<span class="quote">&gt;&gt; +     if (kvm_para_has_feature(KVM_FEATURE_PV_TLB_FLUSH) &amp;&amp;</span>
<span class="quote">&gt;&gt; +             !kvm_para_has_feature(KVM_HINTS_DEDICATED) &amp;&amp;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; This should have checked the hints word.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; In general, I&#39;m going to change in the whole series</span>
<span class="quote">&gt; kvm_hint_has_feature with kvm_para_has_hint, and kvm_arch_hint_features</span>
<span class="quote">&gt; with kvm_arch_para_hints.  But apart from this small naming issue, the</span>
<span class="quote">&gt; series looks good, and I&#39;m applying it to kvm/queue.</span>

Thanks Paolo.

Regards,
Wanpeng Li
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/kernel/kvm.c b/arch/x86/kernel/kvm.c</span>
<span class="p_header">index c5566d9..285822f 100644</span>
<span class="p_header">--- a/arch/x86/kernel/kvm.c</span>
<span class="p_header">+++ b/arch/x86/kernel/kvm.c</span>
<span class="p_chunk">@@ -545,7 +545,9 @@</span> <span class="p_context"> static void __init kvm_guest_init(void)</span>
 		pv_time_ops.steal_clock = kvm_steal_clock;
 	}
 
<span class="p_del">-	if (kvm_para_has_feature(KVM_FEATURE_PV_TLB_FLUSH))</span>
<span class="p_add">+	if (kvm_para_has_feature(KVM_FEATURE_PV_TLB_FLUSH) &amp;&amp;</span>
<span class="p_add">+		!kvm_para_has_feature(KVM_HINTS_DEDICATED) &amp;&amp;</span>
<span class="p_add">+		!kvm_para_has_feature(KVM_FEATURE_STEAL_TIME))</span>
 		pv_mmu_ops.flush_tlb_others = kvm_flush_tlb_others;
 
 	if (kvm_para_has_feature(KVM_FEATURE_PV_EOI))
<span class="p_chunk">@@ -638,7 +640,9 @@</span> <span class="p_context"> static __init int kvm_setup_pv_tlb_flush(void)</span>
 {
 	int cpu;
 
<span class="p_del">-	if (kvm_para_has_feature(KVM_FEATURE_PV_TLB_FLUSH)) {</span>
<span class="p_add">+	if (kvm_para_has_feature(KVM_FEATURE_PV_TLB_FLUSH) &amp;&amp;</span>
<span class="p_add">+		!kvm_para_has_feature(KVM_HINTS_DEDICATED) &amp;&amp;</span>
<span class="p_add">+		!kvm_para_has_feature(KVM_FEATURE_STEAL_TIME)) {</span>
 		for_each_possible_cpu(cpu) {
 			zalloc_cpumask_var_node(per_cpu_ptr(&amp;__pv_tlb_mask, cpu),
 				GFP_KERNEL, cpu_to_node(cpu));

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



