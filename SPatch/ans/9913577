
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>vhost: fix end of range for access_ok - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    vhost: fix end of range for access_ok</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=1984">Michael S. Tsirkin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 21, 2017, 7:45 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1503344576-8141-1-git-send-email-mst@redhat.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9913577/mbox/"
   >mbox</a>
|
   <a href="/patch/9913577/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9913577/">/patch/9913577/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	C0600603FA for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 21 Aug 2017 19:45:13 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B16A227FA1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 21 Aug 2017 19:45:13 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A60C328685; Mon, 21 Aug 2017 19:45:13 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 352C427FA1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 21 Aug 2017 19:45:12 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753810AbdHUTpK (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 21 Aug 2017 15:45:10 -0400
Received: from mx1.redhat.com ([209.132.183.28]:36592 &quot;EHLO mx1.redhat.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753479AbdHUTpJ (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 21 Aug 2017 15:45:09 -0400
Received: from smtp.corp.redhat.com
	(int-mx05.intmail.prod.int.phx2.redhat.com [10.5.11.15])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id B972481E0E;
	Mon, 21 Aug 2017 19:45:08 +0000 (UTC)
DMARC-Filter: OpenDMARC Filter v1.3.2 mx1.redhat.com B972481E0E
Authentication-Results: ext-mx01.extmail.prod.ext.phx2.redhat.com;
	dmarc=none (p=none dis=none) header.from=redhat.com
Authentication-Results: ext-mx01.extmail.prod.ext.phx2.redhat.com;
	spf=fail smtp.mailfrom=mst@redhat.com
Received: from redhat.com (ovpn-120-34.rdu2.redhat.com [10.10.120.34])
	by smtp.corp.redhat.com (Postfix) with SMTP id 27116627DE;
	Mon, 21 Aug 2017 19:45:07 +0000 (UTC)
Date: Mon, 21 Aug 2017 22:45:07 +0300
From: &quot;Michael S. Tsirkin&quot; &lt;mst@redhat.com&gt;
To: linux-kernel@vger.kernel.org
Cc: Koichiro Den &lt;den@klaipeden.com&gt;, Jason Wang &lt;jasowang@redhat.com&gt;,
	kvm@vger.kernel.org, virtualization@lists.linux-foundation.org,
	netdev@vger.kernel.org, David Miller &lt;davem@davemloft.net&gt;
Subject: [PATCH] vhost: fix end of range for access_ok
Message-ID: &lt;1503344576-8141-1-git-send-email-mst@redhat.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
X-Mutt-Fcc: =sent
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.15
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.25]);
	Mon, 21 Aug 2017 19:45:09 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1984">Michael S. Tsirkin</a> - Aug. 21, 2017, 7:45 p.m.</div>
<pre class="content">
During access_ok checks, addr increases as we iterate over the data
structure, thus addr + len - 1 will point beyond the end of region we
are translating.  Harmless since we then verify that the region covers
addr, but let&#39;s not waste cpu cycles.

Reported-by: Koichiro Den &lt;den@klaipeden.com&gt;
<span class="signed-off-by">Signed-off-by: Michael S. Tsirkin &lt;mst@redhat.com&gt;</span>
---

Lightly tested, would appreciate an ack from reporter.

 drivers/vhost/vhost.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=175631">K. Den</a> - Aug. 22, 2017, 2:49 p.m.</div>
<pre class="content">
On Mon, 2017-08-21 at 22:45 +0300, Michael S. Tsirkin wrote:
<span class="quote">&gt; During access_ok checks, addr increases as we iterate over the data</span>
<span class="quote">&gt; structure, thus addr + len - 1 will point beyond the end of region we</span>
<span class="quote">&gt; are translating.  Harmless since we then verify that the region covers</span>
<span class="quote">&gt; addr, but let&#39;s not waste cpu cycles.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Reported-by: Koichiro Den &lt;den@klaipeden.com&gt;</span>
<span class="quote">&gt; Signed-off-by: Michael S. Tsirkin &lt;mst@redhat.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Lightly tested, would appreciate an ack from reporter.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  drivers/vhost/vhost.c | 4 ++--</span>
<span class="quote">&gt;  1 file changed, 2 insertions(+), 2 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c</span>
<span class="quote">&gt; index e4613a3..ecd70e4 100644</span>
<span class="quote">&gt; --- a/drivers/vhost/vhost.c</span>
<span class="quote">&gt; +++ b/drivers/vhost/vhost.c</span>
<span class="quote">&gt; @@ -1176,7 +1176,7 @@ static int iotlb_access_ok(struct vhost_virtqueue *vq,</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	const struct vhost_umem_node *node;</span>
<span class="quote">&gt;  	struct vhost_umem *umem = vq-&gt;iotlb;</span>
<span class="quote">&gt; -	u64 s = 0, size, orig_addr = addr;</span>
<span class="quote">&gt; +	u64 s = 0, size, orig_addr = addr, last = addr + len - 1;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	if (vhost_vq_meta_fetch(vq, addr, len, type))</span>
<span class="quote">&gt;  		return true;</span>
<span class="quote">&gt; @@ -1184,7 +1184,7 @@ static int iotlb_access_ok(struct vhost_virtqueue *vq,</span>
<span class="quote">&gt;  	while (len &gt; s) {</span>
<span class="quote">&gt;  		node = vhost_umem_interval_tree_iter_first(&amp;umem-&gt;umem_tree,</span>
<span class="quote">&gt;  							   addr,</span>
<span class="quote">&gt; -							   addr + len - 1);</span>
<span class="quote">&gt; +							   last);</span>
<span class="quote">&gt;  		if (node == NULL || node-&gt;start &gt; addr) {</span>
<span class="quote">&gt;  			vhost_iotlb_miss(vq, addr, access);</span>
<span class="quote">&gt;  			return false;</span>

Michael, Thank you for this one.
<span class="acked-by">
Acked-by: Koichiro Den &lt;den@klaipeden.com&gt;</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c</span>
<span class="p_header">index e4613a3..ecd70e4 100644</span>
<span class="p_header">--- a/drivers/vhost/vhost.c</span>
<span class="p_header">+++ b/drivers/vhost/vhost.c</span>
<span class="p_chunk">@@ -1176,7 +1176,7 @@</span> <span class="p_context"> static int iotlb_access_ok(struct vhost_virtqueue *vq,</span>
 {
 	const struct vhost_umem_node *node;
 	struct vhost_umem *umem = vq-&gt;iotlb;
<span class="p_del">-	u64 s = 0, size, orig_addr = addr;</span>
<span class="p_add">+	u64 s = 0, size, orig_addr = addr, last = addr + len - 1;</span>
 
 	if (vhost_vq_meta_fetch(vq, addr, len, type))
 		return true;
<span class="p_chunk">@@ -1184,7 +1184,7 @@</span> <span class="p_context"> static int iotlb_access_ok(struct vhost_virtqueue *vq,</span>
 	while (len &gt; s) {
 		node = vhost_umem_interval_tree_iter_first(&amp;umem-&gt;umem_tree,
 							   addr,
<span class="p_del">-							   addr + len - 1);</span>
<span class="p_add">+							   last);</span>
 		if (node == NULL || node-&gt;start &gt; addr) {
 			vhost_iotlb_miss(vq, addr, access);
 			return false;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



