
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2] x86/platform/uv: Disable UV BAU by default - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2] x86/platform/uv: Disable UV BAU by default</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=66171">athorlton@sgi.com</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 31, 2016, 7:18 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1459451909-121845-1-git-send-email-athorlton@sgi.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8715721/mbox/"
   >mbox</a>
|
   <a href="/patch/8715721/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8715721/">/patch/8715721/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 9AEA8C0553
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 31 Mar 2016 19:18:38 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id D7012202E9
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 31 Mar 2016 19:18:37 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 0CC71202E5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 31 Mar 2016 19:18:37 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1756777AbcCaTSe (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 31 Mar 2016 15:18:34 -0400
Received: from relay1.sgi.com ([192.48.180.66]:42016 &quot;EHLO relay.sgi.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752446AbcCaTSc (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 31 Mar 2016 15:18:32 -0400
Received: from stormcage.americas.sgi.com (stormcage.americas.sgi.com
	[128.162.236.70])
	by relay1.corp.sgi.com (Postfix) with ESMTP id 99CA18F8033;
	Thu, 31 Mar 2016 12:18:29 -0700 (PDT)
Received: by stormcage.americas.sgi.com (Postfix, from userid 48426)
	id 5A0BD20162464; Thu, 31 Mar 2016 14:18:29 -0500 (CDT)
From: Alex Thorlton &lt;athorlton@sgi.com&gt;
To: linux-kernel@vger.kernel.org
Cc: Alex Thorlton &lt;athorlton@sgi.com&gt;, Hedi Berriche &lt;hedi@sgi.com&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;, Jonathan Corbet &lt;corbet@lwn.net&gt;,
	x86@kernel.org
Subject: [PATCH v2] x86/platform/uv: Disable UV BAU by default
Date: Thu, 31 Mar 2016 14:18:29 -0500
Message-Id: &lt;1459451909-121845-1-git-send-email-athorlton@sgi.com&gt;
X-Mailer: git-send-email 1.8.5.6
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=66171">athorlton@sgi.com</a> - March 31, 2016, 7:18 p.m.</div>
<pre class="content">
For several years, the common practice has been to boot UVs with the
&quot;nobau&quot; parameter on the command line, to disable the BAU.  We&#39;ve
decided that it makes more sense to just disable the BAU by default in
the kernel, and provide the option to turn it on, if desired.

For now, having the on/off switch doesn&#39;t buy us any more than just
reversing the logic would, but we&#39;re working towards having the BAU
enabled by default on UV4.  When those changes are in place, having the
on/off switch will make more sense than an enable flag, since the
default behavior will be different depending on the system version.

I&#39;ve also added a bit of documentation for the new parameter to
Documentation/kernel-parameters.txt.
<span class="signed-off-by">
Signed-off-by: Alex Thorlton &lt;athorlton@sgi.com&gt;</span>
<span class="reviewed-by">Reviewed-by: Hedi Berriche &lt;hedi@sgi.com&gt;</span>
Cc: Hedi Berriche &lt;hedi@sgi.com&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Cc: Ingo Molnar &lt;mingo@redhat.com&gt;
Cc: &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;
Cc: Jonathan Corbet &lt;corbet@lwn.net&gt;
Cc: x86@kernel.org
---
 Documentation/kernel-parameters.txt |  8 ++++++++
 arch/x86/include/asm/uv/uv_bau.h    |  2 +-
 arch/x86/platform/uv/tlb_uv.c       | 35 +++++++++++++++++++++++++----------
 3 files changed, 34 insertions(+), 11 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/Documentation/kernel-parameters.txt b/Documentation/kernel-parameters.txt</span>
<span class="p_header">index def4791..611247b 100644</span>
<span class="p_header">--- a/Documentation/kernel-parameters.txt</span>
<span class="p_header">+++ b/Documentation/kernel-parameters.txt</span>
<span class="p_chunk">@@ -131,6 +131,7 @@</span> <span class="p_context"> parameter is applicable:</span>
 			More X86-64 boot options can be found in
 			Documentation/x86/x86_64/boot-options.txt .
 	X86	Either 32-bit or 64-bit x86 (same as X86-32+X86-64)
<span class="p_add">+	X86_UV	SGI UV support is enabled.</span>
 	XEN	Xen support is enabled
 
 In addition, the following text indicates that the option:
<span class="p_chunk">@@ -542,6 +543,13 @@</span> <span class="p_context"> bytes respectively. Such letter suffixes can also be entirely omitted.</span>
 			Format: &lt;int&gt; (must be &gt;=0)
 			Default: 64
 
<span class="p_add">+	bau=		[X86_UV] Enable the BAU on SGI UV.  The default</span>
<span class="p_add">+			behavior is to disable the BAU (i.e. bau=0).</span>
<span class="p_add">+			Format: { &quot;0&quot; | &quot;1&quot; }</span>
<span class="p_add">+			0 - Disable the BAU.</span>
<span class="p_add">+			1 - Enable the BAU.</span>
<span class="p_add">+			unset - Disable the BAU.</span>
<span class="p_add">+</span>
 	baycom_epp=	[HW,AX25]
 			Format: &lt;io&gt;,&lt;mode&gt;
 
<span class="p_header">diff --git a/arch/x86/include/asm/uv/uv_bau.h b/arch/x86/include/asm/uv/uv_bau.h</span>
<span class="p_header">index fc808b8..cc44d92 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/uv/uv_bau.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/uv/uv_bau.h</span>
<span class="p_chunk">@@ -598,7 +598,7 @@</span> <span class="p_context"> struct bau_control {</span>
 	int			timeout_tries;
 	int			ipi_attempts;
 	int			conseccompletes;
<span class="p_del">-	short			nobau;</span>
<span class="p_add">+	bool			nobau;</span>
 	short			baudisabled;
 	short			cpu;
 	short			osnode;
<span class="p_header">diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">index 3b6ec42..534ab94 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_chunk">@@ -37,7 +37,7 @@</span> <span class="p_context"> static int timeout_base_ns[] = {</span>
 };
 
 static int timeout_us;
<span class="p_del">-static int nobau;</span>
<span class="p_add">+static bool nobau = true;</span>
 static int nobau_perm;
 static cycles_t congested_cycles;
 
<span class="p_chunk">@@ -106,13 +106,28 @@</span> <span class="p_context"> static char *stat_description[] = {</span>
 	&quot;enable:   number times use of the BAU was re-enabled&quot;
 };
 
<span class="p_del">-static int __init</span>
<span class="p_del">-setup_nobau(char *arg)</span>
<span class="p_add">+static int __init setup_bau(char *arg)</span>
 {
<span class="p_del">-	nobau = 1;</span>
<span class="p_add">+	int result;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (!arg)</span>
<span class="p_add">+		return -EINVAL;</span>
<span class="p_add">+</span>
<span class="p_add">+	result = strtobool(arg, &amp;nobau);</span>
<span class="p_add">+	if (result)</span>
<span class="p_add">+		return result;</span>
<span class="p_add">+</span>
<span class="p_add">+	/* we need to flip the logic here, so that bau=y sets nobau to false */</span>
<span class="p_add">+	nobau = !nobau;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (!nobau)</span>
<span class="p_add">+		pr_info(&quot;UV BAU Enabled\n&quot;);</span>
<span class="p_add">+	else</span>
<span class="p_add">+		pr_info(&quot;UV BAU Disabled\n&quot;);</span>
<span class="p_add">+</span>
 	return 0;
 }
<span class="p_del">-early_param(&quot;nobau&quot;, setup_nobau);</span>
<span class="p_add">+early_param(&quot;bau&quot;, setup_bau);</span>
 
 /* base pnode in this partition */
 static int uv_base_pnode __read_mostly;
<span class="p_chunk">@@ -131,10 +146,10 @@</span> <span class="p_context"> set_bau_on(void)</span>
 		pr_info(&quot;BAU not initialized; cannot be turned on\n&quot;);
 		return;
 	}
<span class="p_del">-	nobau = 0;</span>
<span class="p_add">+	nobau = false;</span>
 	for_each_present_cpu(cpu) {
 		bcp = &amp;per_cpu(bau_control, cpu);
<span class="p_del">-		bcp-&gt;nobau = 0;</span>
<span class="p_add">+		bcp-&gt;nobau = false;</span>
 	}
 	pr_info(&quot;BAU turned on\n&quot;);
 	return;
<span class="p_chunk">@@ -146,10 +161,10 @@</span> <span class="p_context"> set_bau_off(void)</span>
 	int cpu;
 	struct bau_control *bcp;
 
<span class="p_del">-	nobau = 1;</span>
<span class="p_add">+	nobau = true;</span>
 	for_each_present_cpu(cpu) {
 		bcp = &amp;per_cpu(bau_control, cpu);
<span class="p_del">-		bcp-&gt;nobau = 1;</span>
<span class="p_add">+		bcp-&gt;nobau = true;</span>
 	}
 	pr_info(&quot;BAU turned off\n&quot;);
 	return;
<span class="p_chunk">@@ -1886,7 +1901,7 @@</span> <span class="p_context"> static void __init init_per_cpu_tunables(void)</span>
 		bcp = &amp;per_cpu(bau_control, cpu);
 		bcp-&gt;baudisabled		= 0;
 		if (nobau)
<span class="p_del">-			bcp-&gt;nobau		= 1;</span>
<span class="p_add">+			bcp-&gt;nobau		= true;</span>
 		bcp-&gt;statp			= &amp;per_cpu(ptcstats, cpu);
 		/* time interval to catch a hardware stay-busy bug */
 		bcp-&gt;timeout_interval		= usec_2_cycles(2*timeout_us);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



