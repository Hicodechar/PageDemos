
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[GIT,PULL] x86 kdump changes - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [GIT,PULL] x86 kdump changes</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 22, 2015, 8:33 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20150622083340.GA9789@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6654241/mbox/"
   >mbox</a>
|
   <a href="/patch/6654241/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6654241/">/patch/6654241/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 9DE14C05AC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 22 Jun 2015 08:34:05 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id A7ED020641
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 22 Jun 2015 08:34:04 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 9C4702063E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 22 Jun 2015 08:34:03 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S933214AbbFVIdy (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 22 Jun 2015 04:33:54 -0400
Received: from mail-wi0-f179.google.com ([209.85.212.179]:35808 &quot;EHLO
	mail-wi0-f179.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753307AbbFVIdp (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 22 Jun 2015 04:33:45 -0400
Received: by wiga1 with SMTP id a1so69278955wig.0
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Mon, 22 Jun 2015 01:33:44 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=sender:date:from:to:cc:subject:message-id:mime-version:content-type
	:content-disposition:user-agent;
	bh=h8xpVF49572ifkS9AbJv218+Na0Tw+BZS4jn/AAn2Oo=;
	b=stbHiUJkQo7NwdNfBfPk87YM6SxCEfWSa6lWdLZLCy4Uvy0C/TtdxeE+eoWHy7dHF1
	7tV5djNtOR4g2tbvUFhk4ljBNXnQsM11w0PpteoDnFa50JzY7+sx67/Jvr7FANNvGa5s
	9wph2twLoXPCRra3F6WZaL0Hccn+HUlj/9oQCxjJGNWlH/NCOkECdy9o75mLo4K+HLzb
	YMniJYndgb12DRZ/jM/BAI9jmOcaaIYIfeCBrymt3sB+D9hA+v9RA22mwZwUEBs0WYgW
	xj0b/q5rX8B7LtqmU+5i6mDWMnDDfT3vE44VtGawQj7fTrbWyfjWKNHKVgw9xTOvMH+g
	IUPw==
X-Received: by 10.180.99.166 with SMTP id er6mr29715910wib.58.1434962024117; 
	Mon, 22 Jun 2015 01:33:44 -0700 (PDT)
Received: from gmail.com (54033495.catv.pool.telekom.hu. [84.3.52.149])
	by mx.google.com with ESMTPSA id
	di7sm16039538wib.23.2015.06.22.01.33.42
	(version=TLSv1.2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Mon, 22 Jun 2015 01:33:43 -0700 (PDT)
Date: Mon, 22 Jun 2015 10:33:40 +0200
From: Ingo Molnar &lt;mingo@kernel.org&gt;
To: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: linux-kernel@vger.kernel.org, Borislav Petkov &lt;bp@alien8.de&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;, &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;
Subject: [GIT PULL] x86 kdump changes
Message-ID: &lt;20150622083340.GA9789@gmail.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.23 (2014-03-12)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-8.2 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,RP_MATCHES_RCVD,T_DKIM_INVALID,UNPARSEABLE_RELAY
	autolearn=ham version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a> - June 22, 2015, 8:33 a.m.</div>
<pre class="content">
Linus,

Please pull the latest x86-kdump-for-linus git tree from:

   git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git x86-kdump-for-linus

   # HEAD: 94fb9334182284e8e7e4bcb9125c25dc33af19d4 x86/crash: Allocate enough low memory when crashkernel=high

Three kdump robustness related improvements. (Joerg Roedel)

  out-of-topic modifications in x86-kdump-for-linus:
  ----------------------------------------------------
  lib/swiotlb.c                      # 94cc81f9a8f9: swiotlb: Warn on allocation 

 Thanks,

	Ingo

------------------&gt;
Joerg Roedel (3):
      swiotlb: Warn on allocation failure in swiotlb_alloc_coherent()
      x86/swiotlb: Try coherent allocations with __GFP_NOWARN
      x86/crash: Allocate enough low memory when crashkernel=high


 arch/x86/kernel/pci-swiotlb.c |  7 +++++++
 arch/x86/kernel/setup.c       | 12 +++++++-----
 lib/swiotlb.c                 | 11 +++++++++--
 3 files changed, 23 insertions(+), 7 deletions(-)

--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/kernel/pci-swiotlb.c b/arch/x86/kernel/pci-swiotlb.c</span>
<span class="p_header">index 77dd0ad58be4..adf0392d549a 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-swiotlb.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-swiotlb.c</span>
<span class="p_chunk">@@ -20,6 +20,13 @@</span> <span class="p_context"> void *x86_swiotlb_alloc_coherent(struct device *hwdev, size_t size,</span>
 {
 	void *vaddr;
 
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Don&#39;t print a warning when the first allocation attempt fails.</span>
<span class="p_add">+	 * swiotlb_alloc_coherent() will print a warning when the DMA</span>
<span class="p_add">+	 * memory allocation ultimately failed.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	flags |= __GFP_NOWARN;</span>
<span class="p_add">+</span>
 	vaddr = dma_generic_alloc_coherent(hwdev, size, dma_handle, flags,
 					   attrs);
 	if (vaddr)
<span class="p_header">diff --git a/arch/x86/kernel/setup.c b/arch/x86/kernel/setup.c</span>
<span class="p_header">index d74ac33290ae..cba828892790 100644</span>
<span class="p_header">--- a/arch/x86/kernel/setup.c</span>
<span class="p_header">+++ b/arch/x86/kernel/setup.c</span>
<span class="p_chunk">@@ -531,12 +531,14 @@</span> <span class="p_context"> static void __init reserve_crashkernel_low(void)</span>
 	if (ret != 0) {
 		/*
 		 * two parts from lib/swiotlb.c:
<span class="p_del">-		 *	swiotlb size: user specified with swiotlb= or default.</span>
<span class="p_del">-		 *	swiotlb overflow buffer: now is hardcoded to 32k.</span>
<span class="p_del">-		 *		We round it to 8M for other buffers that</span>
<span class="p_del">-		 *		may need to stay low too.</span>
<span class="p_add">+		 * -swiotlb size: user-specified with swiotlb= or default.</span>
<span class="p_add">+		 *</span>
<span class="p_add">+		 * -swiotlb overflow buffer: now hardcoded to 32k. We round it</span>
<span class="p_add">+		 * to 8M for other buffers that may need to stay low too. Also</span>
<span class="p_add">+		 * make sure we allocate enough extra low memory so that we</span>
<span class="p_add">+		 * don&#39;t run out of DMA buffers for 32-bit devices.</span>
 		 */
<span class="p_del">-		low_size = swiotlb_size_or_default() + (8UL&lt;&lt;20);</span>
<span class="p_add">+		low_size = max(swiotlb_size_or_default() + (8UL&lt;&lt;20), 256UL&lt;&lt;20);</span>
 		auto_set = true;
 	} else {
 		/* passed with crashkernel=0,low ? */
<span class="p_header">diff --git a/lib/swiotlb.c b/lib/swiotlb.c</span>
<span class="p_header">index 3c365ab6cf5f..42e192decbfd 100644</span>
<span class="p_header">--- a/lib/swiotlb.c</span>
<span class="p_header">+++ b/lib/swiotlb.c</span>
<span class="p_chunk">@@ -656,7 +656,7 @@</span> <span class="p_context"> swiotlb_alloc_coherent(struct device *hwdev, size_t size,</span>
 		 */
 		phys_addr_t paddr = map_single(hwdev, 0, size, DMA_FROM_DEVICE);
 		if (paddr == SWIOTLB_MAP_ERROR)
<span class="p_del">-			return NULL;</span>
<span class="p_add">+			goto err_warn;</span>
 
 		ret = phys_to_virt(paddr);
 		dev_addr = phys_to_dma(hwdev, paddr);
<span class="p_chunk">@@ -670,7 +670,7 @@</span> <span class="p_context"> swiotlb_alloc_coherent(struct device *hwdev, size_t size,</span>
 			/* DMA_TO_DEVICE to avoid memcpy in unmap_single */
 			swiotlb_tbl_unmap_single(hwdev, paddr,
 						 size, DMA_TO_DEVICE);
<span class="p_del">-			return NULL;</span>
<span class="p_add">+			goto err_warn;</span>
 		}
 	}
 
<span class="p_chunk">@@ -678,6 +678,13 @@</span> <span class="p_context"> swiotlb_alloc_coherent(struct device *hwdev, size_t size,</span>
 	memset(ret, 0, size);
 
 	return ret;
<span class="p_add">+</span>
<span class="p_add">+err_warn:</span>
<span class="p_add">+	pr_warn(&quot;swiotlb: coherent allocation failed for device %s size=%zu\n&quot;,</span>
<span class="p_add">+		dev_name(hwdev), size);</span>
<span class="p_add">+	dump_stack();</span>
<span class="p_add">+</span>
<span class="p_add">+	return NULL;</span>
 }
 EXPORT_SYMBOL(swiotlb_alloc_coherent);
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



