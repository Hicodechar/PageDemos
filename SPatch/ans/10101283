
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v6,net-next,mips,3/7] MIPS: Octeon: Automatically provision CVMSEG space. - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v6,net-next,mips,3/7] MIPS: Octeon: Automatically provision CVMSEG space.</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=31592">David Daney</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 8, 2017, 12:09 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171208000934.6554-4-david.daney@cavium.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10101283/mbox/"
   >mbox</a>
|
   <a href="/patch/10101283/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10101283/">/patch/10101283/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	E38B160329 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  8 Dec 2017 00:12:27 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D3B3828623
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  8 Dec 2017 00:12:27 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id C7477288BD; Fri,  8 Dec 2017 00:12:27 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B643928623
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  8 Dec 2017 00:12:26 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752751AbdLHAMR (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 7 Dec 2017 19:12:17 -0500
Received: from mail-bn3nam01on0076.outbound.protection.outlook.com
	([104.47.33.76]:41307
	&quot;EHLO NAM01-BN3-obe.outbound.protection.outlook.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1752471AbdLHAKA (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 7 Dec 2017 19:10:00 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=CAVIUMNETWORKS.onmicrosoft.com; s=selector1-cavium-com;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version;
	bh=E9Bi8jCDNzD7m378iOWee6PVoWMIEDtV4oXfyK403As=;
	b=fWRhW1o/KbSw1tAGK8iK//ZUHaq6L0ZLm2R/q54i/F6gaXNaEvBNBi4RMzf9TvnU4ERqMJ1Vy+j6WEvI+rWRgb72DEa5FhxT3KBmnjX/RsryAgGz5EuJABuLJrIIHOkpRNTeEuu5ksQFP60C4Ad/j+y2/TvB5XoBcqrVW+84FhU=
Authentication-Results: spf=none (sender IP is )
	smtp.mailfrom=David.Daney@cavium.com; 
Received: from ddl.caveonetworks.com (50.233.148.156) by
	MWHPR07MB3504.namprd07.prod.outlook.com (10.164.192.31) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P256) id
	15.20.302.9; Fri, 8 Dec 2017 00:09:56 +0000
From: David Daney &lt;david.daney@cavium.com&gt;
To: linux-mips@linux-mips.org, ralf@linux-mips.org,
	James Hogan &lt;james.hogan@mips.com&gt;, netdev@vger.kernel.org,
	&quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;,
	Rob Herring &lt;robh+dt@kernel.org&gt;, Mark Rutland &lt;mark.rutland@arm.com&gt;
Cc: linux-kernel@vger.kernel.org, &quot;Steven J. Hill&quot; &lt;steven.hill@cavium.com&gt;,
	devicetree@vger.kernel.org, Andrew Lunn &lt;andrew@lunn.ch&gt;,
	Florian Fainelli &lt;f.fainelli@gmail.com&gt;,
	Philippe Ombredanne &lt;pombredanne@nexb.com&gt;,
	David Daney &lt;david.daney@cavium.com&gt;,
	Carlos Munoz &lt;cmunoz@caviumnetworks.com&gt;
Subject: [PATCH v6 net-next,
	mips 3/7] MIPS: Octeon: Automatically provision CVMSEG space.
Date: Thu,  7 Dec 2017 16:09:30 -0800
Message-Id: &lt;20171208000934.6554-4-david.daney@cavium.com&gt;
X-Mailer: git-send-email 2.14.3
In-Reply-To: &lt;20171208000934.6554-1-david.daney@cavium.com&gt;
References: &lt;20171208000934.6554-1-david.daney@cavium.com&gt;
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [50.233.148.156]
X-ClientProxiedBy: CO2PR07CA0068.namprd07.prod.outlook.com (10.174.192.36) To
	MWHPR07MB3504.namprd07.prod.outlook.com (10.164.192.31)
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 3424e2d8-657a-4e74-8ad6-08d53dd00393
X-Microsoft-Antispam: UriScan:; BCL:0; PCL:0;
	RULEID:(5600026)(4604075)(4534020)(4602075)(4627115)(201703031133081)(201702281549075)(2017052603307);
	SRVR:MWHPR07MB3504; 
X-Microsoft-Exchange-Diagnostics: 1; MWHPR07MB3504;
	3:QGQymkZ0VWQCleFE2MChlFQ84y/wQjo87tNKsPVLPF0c8MmQ2vYGS/NRtwC4//pHK4MuyYP7G9rIdLeoqjW7BvD8XOp40DzkgrgQPLkw/Cbrt09Ql4b3G6hjlee2wiYwwZnX2io/7FB8v1AYbbBRyvTPJJvRGKTCiqPu4gKnD3rI8W2RrJ/MT2pBeazqrMS2EofvF0vsynKvPZKkkkEbIHboHZ3u4Yt480tfV5SOtFQuulCmy4jghXMIAPVUI6ry;
	25:Ny0IQI7TriwIyPTlEXeGkcFO+FCj23Nh6dOL1CfiGIGH+TYeUGX9mUiNOHWzML0qz8kjz7LQMVmQTLgdLc4pgYxcu1+LDeYoNzOZI+/YkeFxstMDO9PgcdAg9clR9wSWCCbgyzbd8RupwOgFu8ExJhCf6q2UOoCmjEAPocsuLp0MSPpTGH9OLrkmWLJq3VgwMO+UZ0Q8RmZDJQ/ycekEmgiV72aRIHYDs9OjjFWdgABdOY7ebtgPHr5THI9BlsyH9H6EzcJ6XfOu4Cml5POrocrGwAZrzGW/SceDjyXhWA0MbCU/MdTjYzeRJQ/cq0yCePe//cgSf464p6/1HPD9rA==;
	31:cExYAVl4wRBIAYbV4zqzyVx5tNoDhVxgK1wXXFH8NjDS0hoVwuyfSPIO3FdP2P8TPXVDLSNSqeRz6hgtj4ewMTIlr2sRo57+1mdejyEYlsWXz8MHWpdc4+2G/JKuxT2Y5HN+gX04OfySdXXEQFN4XJ3favILBKIrvZ7J3PNu323tbkwCTWvYJfs6SecVN4ln8eLHJf/w8Pry8tYD5oFM7j/79lJ3VssH/9/f0ZwA6Xw=
X-MS-TrafficTypeDiagnostic: MWHPR07MB3504:
X-Microsoft-Exchange-Diagnostics: 1; MWHPR07MB3504;
	20:sQf1+CjMUc56eipwwRKHDIDcWGkoACGqpm7njWG0LpjMn9L9JUKCxfvYBJdoMwXHoMPTrcq4UAE9My8bZNoBD/8LRkUt1nDybcMc0zb09vn8SBheiBBPIUvS008oSMH5let+irvPNpzk5Ayi41BAXzDQzfxMWzaPtVL0ITLIGKKjOb/z8+oGxykSoGbSXD+jeEyaHNR5hMZ8LYlTRB2DugbpGk7HP3o0qhx+3sgW5EcxhDWJKkR3Zv+wWzVvn0Bn60T81hL84vnCJ/n8guhAiGnT35YJgK7OcIMiNPQBSF8/aDaYEX5XvoTffdHGrO1vQi7ZEGnKe2s7//7K661N5H5UoqbojaRSE4Jsvc/arSSTSLpXqc4yzYd0JJvrfrm2mO7WM1XPkqBpB6h4ojcnu1coyInzE7B7L58uZvZ9felmwoC1lmOSd/r3PfAx0QTWTKRmRoY9IgAWA5tjBI2U+GOWpehEKZDjSKApl89ytwgBg/xFy30+K9fuiT1ntABx;
	4:HpIjaxCgT3G4GOvww7Ajzbvppj9WU3oLKU9vYOsKb+DxRoFVSweGPSr8Mj9Rx7l6s12dXqAxWyMnFze8CEpj6sMkj/DyWyA8K5rtiLWzhgNZUMLQrMj425Go+LXd3MvfJOgHPX4ux1XM240l4cDbCsAcFyydCCEIKGEeoneY6VQ8U2Q3hj5icrlfUmwHz9K2wa+PhGWxW8LPj3TdatgWDYNt/WFVpKW8XSrDkBYggMmm4u74Zx4snCUac8YNAsRdyz9FDod39D3EmiVgjk1m5w==
X-Microsoft-Antispam-PRVS: &lt;MWHPR07MB35043AB8DC7CEE11ECD2B72497300@MWHPR07MB3504.namprd07.prod.outlook.com&gt;
X-Exchange-Antispam-Report-Test: UriScan:;
X-Exchange-Antispam-Report-CFA-Test: BCL:0; PCL:0;
	RULEID:(6040450)(2401047)(8121501046)(5005006)(10201501046)(3231022)(93006095)(93001095)(3002001)(6041248)(201703131423075)(201702281528075)(201703061421075)(201703061406153)(20161123564025)(20161123558100)(20161123555025)(20161123562025)(20161123560025)(6072148)(201708071742011);
	SRVR:MWHPR07MB3504; BCL:0; PCL:0;
	RULEID:(100000803101)(100110400095); SRVR:MWHPR07MB3504; 
X-Forefront-PRVS: 0515208626
X-Forefront-Antispam-Report: SFV:NSPM;
	SFS:(10009020)(366004)(346002)(376002)(199004)(189003)(86362001)(105586002)(106356001)(81166006)(81156014)(8676002)(69596002)(6512007)(47776003)(107886003)(66066001)(48376002)(4326008)(39060400002)(7736002)(50466002)(305945005)(53416004)(53936002)(51416003)(52116002)(68736007)(36756003)(76176011)(6486002)(6506006)(8936002)(50226002)(478600001)(33646002)(72206003)(16526018)(25786009)(3846002)(6116002)(97736004)(16586007)(316002)(2906002)(7416002)(1076002)(54906003)(110136005)(6666003)(5660300001)(2950100002)(142933001);
	DIR:OUT; SFP:1101; SCL:1; SRVR:MWHPR07MB3504;
	H:ddl.caveonetworks.com; FPR:; SPF:None; PTR:InfoNoRecords;
	A:1; MX:1; LANG:en; 
Received-SPF: None (protection.outlook.com: cavium.com does not designate
	permitted sender hosts)
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1; MWHPR07MB3504;
	23:9Et+rHTYH0vYgaFyD51sgumRXGbQ6hVCq+Mne3wBA?=
	=?us-ascii?Q?fFaK0aCA1DDEnDzJPEo75LOXNxVBGVKGoBAedL2XkfNn8At3vbqUdiBFOUTt?=
	=?us-ascii?Q?iN9aH8z19kmiQXLlrJW4VsftsnKvPrgGgGujizgnvCydmcX+3GZm/AynwApn?=
	=?us-ascii?Q?faLr2cCnu1Q7bnK0pQ1iQw0/AbVT/+CiwUxV3x7aqoki1C3pUWBATU4OqL5J?=
	=?us-ascii?Q?H7aNkyBmHrg4CUeTrdkJF64aOWpBSgUJQQVoNXb5Pbz6whytVon+1oO93xvs?=
	=?us-ascii?Q?c/gHRQvZu2Dce/344F/aBswdB/nrYOVragIAAboG9r1QxD60Uz4D86EPgJQs?=
	=?us-ascii?Q?gTnLVZ1QuLuGZNWxoMKXPK7asl3x3nmukzQnB68u0/jxb9qrkyugszVyeC5a?=
	=?us-ascii?Q?8xlrEDIpeZkBQTCZQres5R1ZbZjNuWasjQiy90HurRlLnVkOEAV79P8tAlcL?=
	=?us-ascii?Q?lo7WGJdHFSpjBVlfT3jhv0FUpIDYhCY+xsKG94hLdJJ07Erz4SiZkwFKLMbQ?=
	=?us-ascii?Q?CdOcBHVe6UTYdBXDBeK0h5Tp+zkarwZGQ2iQwwl6HLwQ6Q1Orahe9Xvb3KfF?=
	=?us-ascii?Q?ZZaCCaPLnowynbekjwBu3JSNyMDlhwciISCua8DEb16HBXUSn5Iz5PFKyOaW?=
	=?us-ascii?Q?CmmY9kJF0ccGO7B6kBIwlpGN1Eo7mj12OYaM/0KTtAIe55zFxme/wyhkqqGS?=
	=?us-ascii?Q?8GRcUITNc7+dSAgzZZn4T3mHLUTQo9S816x3Ldi/NBWUMQh2TudZqjpBOqwb?=
	=?us-ascii?Q?KpmLaSxzBF8PN0aFKC8wwlFeW34B3X2sZiacRY0dYJXL8LgLe1I/mSwprrf4?=
	=?us-ascii?Q?DArmQ/bsZ0eI2qVVRfH8QHu/JrQLJ7MvwRCRZ0jATpcy66PC/baMrzAEEqUN?=
	=?us-ascii?Q?lxjZxQS4MW046LNelx/O5cvUNEbnjh9GASwwCwwA3IF/5EJ45YpVVl2eFjqx?=
	=?us-ascii?Q?1IibR8BNWjRx1Gqysi4aefH9eMIL1BO34Xw9DKnWK+LAEj23y8j9IvlFikux?=
	=?us-ascii?Q?b53NgBfytT2r9j4sZUUIxd7d+Z/qi4GgN2Bznr7v7eRpZ6nEvcW1JKa8R9jp?=
	=?us-ascii?Q?XRfrrXwPnqjGmePGcsH9c2lg9SDn1GVYYdbOiqHcBiDaGqVjagjtuUqcWgq7?=
	=?us-ascii?Q?W+G4OwSkQVXmQwaKYUxSqVvm1EMPM093u+0big/MuvK10ikbKUlj3s5Gzhdg?=
	=?us-ascii?Q?9nefX9xaxr8v5s6ZQ8nUZkNwC+6lRCYgHZM?=
X-Microsoft-Exchange-Diagnostics: 1; MWHPR07MB3504;
	6:SKvI+xQ1z1Zz3puvj82CpP/VbTX2ULcrtwlcqwrhMy3//Dwm40myYlJhHjrwc4j79FFd6a5YGHR5q7uI5QnQv/RA8KRaHPaxag56tpHpON0SfZwaB7NxmmKWwTMEfECsD9Yi15kTG9poHFvRxegd9/b1Qw1Dq20HZthzDyN4FDxn6VqcKGrapA/he2oXesbjRomqVtqV/TdI4Dp7CmAc4GemO4vThOM8XaOM1fDHw3isZycsO0Ke42DwSKmzdsm+Xm/L1E3pQSSlBK5rqL5TO/buIpEOkGkI228NSkpG0ly6VjLtlwoc2xWyi+pMfWz8NbN7ZmJ+nfS60QLK13vkhcuXEBmua8rKyaseaR+RDkw=;
	5:Fo2kUC1dNEhBWNEauLxbPMyHZBxUXTHvN7488noqqZRcb8JXuYEjonLMNCi+rcGHH9dUhluHlfrUPUCU6FRKHZ0VXpk2RmVIGpNtCoRlOiysrBZyyh+KEhwoUVdYNA+Dgw/NpkQpKjUv6QxF5XwDzDIGganm5GRE05W+VxO8ldU=;
	24:e82uBvwomqkHy/2imXUxgusUlknclaEmg1M5H09Eor3ddCDf4xL+2t/X1iOYDGWdgnivrikW+/cG2ezon5iR5nnpApvb/JjHtCdmkm9Yp8A=;
	7:y7pAZww947lt5wPqUGnqEMVkxRda24BFLl1IfKYAulxDCIz6uDJqkB+3X+M3H+j473K65/E6UUU/TqElLNgZqjtDk9W7DwXsXOXkbzV/1e5BRF0IMol3MydHP1e5P4VhaNlqUT8cphfwnEfd4MWqihYrIG8JC0baTA0RB2YNhWvsywHgeJeqTlf34+QU1WqvkbGsuEOI9n24ZyoT3bZbat14qH6LhfDwXkUzDoBCJ0BtulCIcQJ4cWgBsmZ4uNE9
SpamDiagnosticOutput: 1:99
SpamDiagnosticMetadata: NSPM
X-OriginatorOrg: cavium.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 08 Dec 2017 00:09:56.0911
	(UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 3424e2d8-657a-4e74-8ad6-08d53dd00393
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 711e4ccf-2e9b-4bcf-a551-4094005b6194
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MWHPR07MB3504
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=31592">David Daney</a> - Dec. 8, 2017, 12:09 a.m.</div>
<pre class="content">
Remove CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE and automatically calculate
the amount of CVMSEG space needed.

1st 128-bytes: Use by IOBDMA
2nd 128-bytes: Reserved by kernel for scratch/TLS emulation.
3rd 128-bytes: OCTEON-III LMTLINE

New config variable CONFIG_CAVIUM_OCTEON_EXTRA_CVMSEG provisions
additional lines, defaults to zero.
<span class="signed-off-by">
Signed-off-by: David Daney &lt;david.daney@cavium.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Carlos Munoz &lt;cmunoz@caviumnetworks.com&gt;</span>
---
 arch/mips/cavium-octeon/Kconfig                    | 27 ++++++++++++--------
 arch/mips/cavium-octeon/setup.c                    | 16 ++++++------
 .../asm/mach-cavium-octeon/kernel-entry-init.h     | 20 +++++++++------
 arch/mips/include/asm/mipsregs.h                   |  2 ++
 arch/mips/include/asm/octeon/octeon.h              |  2 ++
 arch/mips/include/asm/processor.h                  |  2 +-
 arch/mips/kernel/octeon_switch.S                   |  2 --
 arch/mips/mm/tlbex.c                               | 29 ++++++----------------
 drivers/staging/octeon/ethernet-defines.h          |  2 +-
 9 files changed, 50 insertions(+), 52 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/mips/cavium-octeon/Kconfig b/arch/mips/cavium-octeon/Kconfig</span>
<span class="p_header">index 204a1670fd9b..a50d1aa5863b 100644</span>
<span class="p_header">--- a/arch/mips/cavium-octeon/Kconfig</span>
<span class="p_header">+++ b/arch/mips/cavium-octeon/Kconfig</span>
<span class="p_chunk">@@ -11,21 +11,26 @@</span> <span class="p_context"> config CAVIUM_CN63XXP1</span>
 	  non-CN63XXP1 hardware, so it is recommended to select &quot;n&quot;
 	  unless it is known the workarounds are needed.
 
<span class="p_del">-config CAVIUM_OCTEON_CVMSEG_SIZE</span>
<span class="p_del">-	int &quot;Number of L1 cache lines reserved for CVMSEG memory&quot;</span>
<span class="p_del">-	range 0 54</span>
<span class="p_del">-	default 1</span>
<span class="p_del">-	help</span>
<span class="p_del">-	  CVMSEG LM is a segment that accesses portions of the dcache as a</span>
<span class="p_del">-	  local memory; the larger CVMSEG is, the smaller the cache is.</span>
<span class="p_del">-	  This selects the size of CVMSEG LM, which is in cache blocks. The</span>
<span class="p_del">-	  legally range is from zero to 54 cache blocks (i.e. CVMSEG LM is</span>
<span class="p_del">-	  between zero and 6192 bytes).</span>
<span class="p_del">-</span>
 endif # CPU_CAVIUM_OCTEON
 
 if CAVIUM_OCTEON_SOC
 
<span class="p_add">+config CAVIUM_OCTEON_EXTRA_CVMSEG</span>
<span class="p_add">+	int &quot;Number of extra L1 cache lines reserved for CVMSEG memory&quot;</span>
<span class="p_add">+	range 0 50</span>
<span class="p_add">+	default 0</span>
<span class="p_add">+	help</span>
<span class="p_add">+	  CVMSEG LM is a segment that accesses portions of the dcache</span>
<span class="p_add">+	  as a local memory; the larger CVMSEG is, the smaller the</span>
<span class="p_add">+	  cache is.  The kernel uses two or three blocks (one for TLB</span>
<span class="p_add">+	  exception handlers, one for driver IOBDMA operations, and on</span>
<span class="p_add">+	  models that need it, one for LMTDMA operations). This</span>
<span class="p_add">+	  selects an optional extra number of CVMSEG lines for use by</span>
<span class="p_add">+	  other software.</span>
<span class="p_add">+</span>
<span class="p_add">+	  Normally no extra lines are required, and this parameter</span>
<span class="p_add">+	  should be set to zero.</span>
<span class="p_add">+</span>
 config CAVIUM_OCTEON_LOCK_L2
 	bool &quot;Lock often used kernel code in the L2&quot;
 	default &quot;y&quot;
<span class="p_header">diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c</span>
<span class="p_header">index 99e6a68bc652..51c4d3c3cada 100644</span>
<span class="p_header">--- a/arch/mips/cavium-octeon/setup.c</span>
<span class="p_header">+++ b/arch/mips/cavium-octeon/setup.c</span>
<span class="p_chunk">@@ -68,6 +68,12 @@</span> <span class="p_context"> extern void pci_console_init(const char *arg);</span>
 static unsigned long long max_memory = ULLONG_MAX;
 static unsigned long long reserve_low_mem;
 
<span class="p_add">+/*</span>
<span class="p_add">+ * modified in hernel-entry-init.h, must have an initial value to keep</span>
<span class="p_add">+ * it from being clobbered when bss is zeroed.</span>
<span class="p_add">+ */</span>
<span class="p_add">+u32 octeon_cvmseg_lines = 2;</span>
<span class="p_add">+</span>
 DEFINE_SEMAPHORE(octeon_bootbus_sem);
 EXPORT_SYMBOL(octeon_bootbus_sem);
 
<span class="p_chunk">@@ -604,11 +610,7 @@</span> <span class="p_context"> void octeon_user_io_init(void)</span>
 
 	/* R/W If set, CVMSEG is available for loads/stores in
 	 * kernel/debug mode. */
<span class="p_del">-#if CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0</span>
 	cvmmemctl.s.cvmsegenak = 1;
<span class="p_del">-#else</span>
<span class="p_del">-	cvmmemctl.s.cvmsegenak = 0;</span>
<span class="p_del">-#endif</span>
 	if (OCTEON_IS_OCTEON3()) {
 		/* Enable LMTDMA */
 		cvmmemctl.s.lmtena = 1;
<span class="p_chunk">@@ -626,9 +628,9 @@</span> <span class="p_context"> void octeon_user_io_init(void)</span>
 
 	/* Setup of CVMSEG is done in kernel-entry-init.h */
 	if (smp_processor_id() == 0)
<span class="p_del">-		pr_notice(&quot;CVMSEG size: %d cache lines (%d bytes)\n&quot;,</span>
<span class="p_del">-			  CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE,</span>
<span class="p_del">-			  CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE * 128);</span>
<span class="p_add">+		pr_notice(&quot;CVMSEG size: %u cache lines (%u bytes)\n&quot;,</span>
<span class="p_add">+			  octeon_cvmseg_lines,</span>
<span class="p_add">+			  octeon_cvmseg_lines * 128);</span>
 
 	if (octeon_has_feature(OCTEON_FEATURE_FAU)) {
 		union cvmx_iob_fau_timeout fau_timeout;
<span class="p_header">diff --git a/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h b/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h</span>
<span class="p_header">index c38b38ce5a3d..cdcca60978a2 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h</span>
<span class="p_chunk">@@ -26,11 +26,18 @@</span> <span class="p_context"></span>
 	# a3 = address of boot descriptor block
 	.set push
 	.set arch=octeon
<span class="p_add">+	mfc0	v1, CP0_PRID_REG</span>
<span class="p_add">+	andi	v1, 0xff00</span>
<span class="p_add">+	li	v0, 0x9500		# cn78XX or later</span>
<span class="p_add">+	subu	v1, v1, v0</span>
<span class="p_add">+	li	t2, 2 + CONFIG_CAVIUM_OCTEON_EXTRA_CVMSEG</span>
<span class="p_add">+	bltz	v1, 1f</span>
<span class="p_add">+	addiu	t2, 1			# t2 has cvmseg_size</span>
<span class="p_add">+1:</span>
 	# Read the cavium mem control register
 	dmfc0	v0, CP0_CVMMEMCTL_REG
 	# Clear the lower 6 bits, the CVMSEG size
<span class="p_del">-	dins	v0, $0, 0, 6</span>
<span class="p_del">-	ori	v0, CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE</span>
<span class="p_add">+	dins	v0, t2, 0, 6</span>
 	dmtc0	v0, CP0_CVMMEMCTL_REG	# Write the cavium mem control register
 	dmfc0	v0, CP0_CVMCTL_REG	# Read the cavium control register
 	# Disable unaligned load/store support but leave HW fixup enabled
<span class="p_chunk">@@ -70,7 +77,7 @@</span> <span class="p_context"></span>
 	# Flush dcache after config change
 	cache	9, 0($0)
 	# Zero all of CVMSEG to make sure parity is correct
<span class="p_del">-	dli	v0, CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE</span>
<span class="p_add">+	move	v0, t2</span>
 	dsll	v0, 7
 	beqz	v0, 2f
 1:	dsubu	v0, 8
<span class="p_chunk">@@ -126,12 +133,7 @@</span> <span class="p_context"></span>
 	LONG_L	sp, (t0)
 	# Set the SP global variable to zero so the master knows we&#39;ve started
 	LONG_S	zero, (t0)
<span class="p_del">-#ifdef __OCTEON__</span>
<span class="p_del">-	syncw</span>
<span class="p_del">-	syncw</span>
<span class="p_del">-#else</span>
 	sync
<span class="p_del">-#endif</span>
 	# Jump to the normal Linux SMP entry point
 	j   smp_bootstrap
 	nop
<span class="p_chunk">@@ -148,6 +150,8 @@</span> <span class="p_context"></span>
 
 #endif /* CONFIG_SMP */
 octeon_main_processor:
<span class="p_add">+	dla	v0, octeon_cvmseg_lines</span>
<span class="p_add">+	sw	t2, 0(v0)</span>
 	.set pop
 .endm
 
<span class="p_header">diff --git a/arch/mips/include/asm/mipsregs.h b/arch/mips/include/asm/mipsregs.h</span>
<span class="p_header">index 6b1f1ad0542c..0b588640b65a 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/mipsregs.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/mipsregs.h</span>
<span class="p_chunk">@@ -1126,6 +1126,8 @@</span> <span class="p_context"></span>
 #define FPU_CSR_RD	0x3	/* towards -Infinity */
 
 
<span class="p_add">+#define CAVIUM_OCTEON_SCRATCH_OFFSET (2 * 128 - 16 - 32768)</span>
<span class="p_add">+</span>
 #ifndef __ASSEMBLY__
 
 /*
<span class="p_header">diff --git a/arch/mips/include/asm/octeon/octeon.h b/arch/mips/include/asm/octeon/octeon.h</span>
<span class="p_header">index 92a17d67c1fa..f01af2469874 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/octeon/octeon.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/octeon/octeon.h</span>
<span class="p_chunk">@@ -359,6 +359,8 @@</span> <span class="p_context"> static inline uint32_t octeon_npi_read32(uint64_t address)</span>
 
 extern struct cvmx_bootinfo *octeon_bootinfo;
 
<span class="p_add">+extern u32 octeon_cvmseg_lines;</span>
<span class="p_add">+</span>
 extern uint64_t octeon_bootloader_entry_addr;
 
 extern void (*octeon_irq_setup_secondary)(void);
<span class="p_header">diff --git a/arch/mips/include/asm/processor.h b/arch/mips/include/asm/processor.h</span>
<span class="p_header">index af34afbc32d9..1a20f9c5509f 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/processor.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/processor.h</span>
<span class="p_chunk">@@ -216,7 +216,7 @@</span> <span class="p_context"> struct octeon_cop2_state {</span>
 	.cp2			= {0,},
 
 struct octeon_cvmseg_state {
<span class="p_del">-	unsigned long cvmseg[CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE]</span>
<span class="p_add">+	unsigned long cvmseg[CONFIG_CAVIUM_OCTEON_EXTRA_CVMSEG + 3]</span>
 			    [cpu_dcache_line_size() / sizeof(unsigned long)];
 };
 
<span class="p_header">diff --git a/arch/mips/kernel/octeon_switch.S b/arch/mips/kernel/octeon_switch.S</span>
<span class="p_header">index e42113fe2762..4f56902d5ee7 100644</span>
<span class="p_header">--- a/arch/mips/kernel/octeon_switch.S</span>
<span class="p_header">+++ b/arch/mips/kernel/octeon_switch.S</span>
<span class="p_chunk">@@ -29,7 +29,6 @@</span> <span class="p_context"></span>
 	cpu_save_nonscratch a0
 	LONG_S	ra, THREAD_REG31(a0)
 
<span class="p_del">-#if CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0</span>
 	/* Check if we need to store CVMSEG state */
 	dmfc0	t0, $11,7	/* CvmMemCtl */
 	bbit0	t0, 6, 3f	/* Is user access enabled? */
<span class="p_chunk">@@ -58,7 +57,6 @@</span> <span class="p_context"></span>
 	dmfc0	t0, $11,7	/* CvmMemCtl */
 	xori	t0, t0, 0x40	/* Bit 6 is CVMSEG user enable */
 	dmtc0	t0, $11,7	/* CvmMemCtl */
<span class="p_del">-#endif</span>
 3:
 
 #if defined(CONFIG_CC_STACKPROTECTOR) &amp;&amp; !defined(CONFIG_SMP)
<span class="p_header">diff --git a/arch/mips/mm/tlbex.c b/arch/mips/mm/tlbex.c</span>
<span class="p_header">index 79b9f2ad3ff5..3d3dfba465ae 100644</span>
<span class="p_header">--- a/arch/mips/mm/tlbex.c</span>
<span class="p_header">+++ b/arch/mips/mm/tlbex.c</span>
<span class="p_chunk">@@ -115,33 +115,17 @@</span> <span class="p_context"> static int use_lwx_insns(void)</span>
 		return 0;
 	}
 }
<span class="p_del">-#if defined(CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE) &amp;&amp; \</span>
<span class="p_del">-    CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0</span>
<span class="p_del">-static bool scratchpad_available(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return true;</span>
<span class="p_del">-}</span>
<span class="p_del">-static int scratchpad_offset(int i)</span>
<span class="p_del">-{</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * CVMSEG starts at address -32768 and extends for</span>
<span class="p_del">-	 * CAVIUM_OCTEON_CVMSEG_SIZE 128 byte cache lines.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	i += 1; /* Kernel use starts at the top and works down. */</span>
<span class="p_del">-	return CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE * 128 - (8 * i) - 32768;</span>
<span class="p_del">-}</span>
<span class="p_del">-#else</span>
<span class="p_del">-static bool scratchpad_available(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return false;</span>
<span class="p_del">-}</span>
<span class="p_add">+</span>
 static int scratchpad_offset(int i)
 {
<span class="p_add">+	if (IS_ENABLED(CONFIG_CPU_CAVIUM_OCTEON))</span>
<span class="p_add">+		return (CAVIUM_OCTEON_SCRATCH_OFFSET - (8 * i));</span>
<span class="p_add">+</span>
 	BUG();
 	/* Really unreachable, but evidently some GCC want this. */
 	return 0;
 }
<span class="p_del">-#endif</span>
<span class="p_add">+</span>
 /*
  * Found by experiment: At least some revisions of the 4kc throw under
  * some circumstances a machine check exception, triggered by invalid
<span class="p_chunk">@@ -1302,7 +1286,8 @@</span> <span class="p_context"> static void build_r4000_tlb_refill_handler(void)</span>
 	memset(relocs, 0, sizeof(relocs));
 	memset(final_handler, 0, sizeof(final_handler));
 
<span class="p_del">-	if (IS_ENABLED(CONFIG_64BIT) &amp;&amp; (scratch_reg &gt;= 0 || scratchpad_available()) &amp;&amp; use_bbit_insns()) {</span>
<span class="p_add">+	if (IS_ENABLED(CONFIG_64BIT) &amp;&amp; use_bbit_insns() &amp;&amp;</span>
<span class="p_add">+	   (scratch_reg &gt;= 0 || IS_ENABLED(CONFIG_CPU_CAVIUM_OCTEON))) {</span>
 		htlb_info = build_fast_tlb_refill_handler(&amp;p, &amp;l, &amp;r, K0, K1,
 							  scratch_reg);
 		vmalloc_mode = refill_scratch;
<span class="p_header">diff --git a/drivers/staging/octeon/ethernet-defines.h b/drivers/staging/octeon/ethernet-defines.h</span>
<span class="p_header">index 07bd2b87f6a0..e898df25b87f 100644</span>
<span class="p_header">--- a/drivers/staging/octeon/ethernet-defines.h</span>
<span class="p_header">+++ b/drivers/staging/octeon/ethernet-defines.h</span>
<span class="p_chunk">@@ -32,7 +32,7 @@</span> <span class="p_context"></span>
 #define REUSE_SKBUFFS_WITHOUT_FREE  1
 #endif
 
<span class="p_del">-#define USE_ASYNC_IOBDMA            (CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0)</span>
<span class="p_add">+#define USE_ASYNC_IOBDMA	1</span>
 
 /* Maximum number of SKBs to try to free per xmit packet. */
 #define MAX_OUT_QUEUE_DEPTH 1000

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



