
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[GIT,pull] x86 fixes for 4.8 - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [GIT,pull] x86 fixes for 4.8</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=107">Thomas Gleixner</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 2, 2016, 9:04 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;alpine.DEB.2.20.1610021056440.5258@nanos&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9359571/mbox/"
   >mbox</a>
|
   <a href="/patch/9359571/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9359571/">/patch/9359571/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	EA18F60459 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun,  2 Oct 2016 09:07:11 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id CB94228B21
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun,  2 Oct 2016 09:07:11 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id AA9B028B39; Sun,  2 Oct 2016 09:07:11 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D602228B21
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun,  2 Oct 2016 09:07:10 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751628AbcJBJHD (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 2 Oct 2016 05:07:03 -0400
Received: from Galois.linutronix.de ([146.0.238.70]:60648 &quot;EHLO
	Galois.linutronix.de&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751006AbcJBJHB (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 2 Oct 2016 05:07:01 -0400
Received: from localhost ([127.0.0.1]) by Galois.linutronix.de with esmtps
	(TLS1.2:DHE_RSA_AES_256_CBC_SHA256:256) (Exim 4.80)
	(envelope-from &lt;tglx@linutronix.de&gt;)
	id 1bqcjE-0008F0-Ny; Sun, 02 Oct 2016 11:06:36 +0200
Date: Sun, 2 Oct 2016 11:04:30 +0200 (CEST)
From: Thomas Gleixner &lt;tglx@linutronix.de&gt;
To: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
cc: LKML &lt;linux-kernel@vger.kernel.org&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Ingo Molnar &lt;mingo@kernel.org&gt;, &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;
Subject: [GIT pull] x86 fixes for 4.8
Message-ID: &lt;alpine.DEB.2.20.1610021056440.5258@nanos&gt;
User-Agent: Alpine 2.20 (DEB 67 2015-01-07)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=107">Thomas Gleixner</a> - Oct. 2, 2016, 9:04 a.m.</div>
<pre class="content">
Linus,

please pull the latest x86-urgent-for-linus git tree from:

   git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git x86-urgent-for-linus

The last regression fixes for 4.8 final:

    - Two patches addressing the fallout of the CR4 optimizations which
      caused CR4-less machines to fail.
 
    - Fix the VDSO build on big endian machines

    - Take care of FPU initialization if no CPUID is available otherwise
      task struct size ends up being zero

    - Fix up context tracking in case load_gs_index fails

Thanks,

	tglx

------------------&gt;
Andy Lutomirski (3):
      x86/init: Fix cr4_init_shadow() on CR4-less machines
      x86/boot: Fix another __read_cr4() case on 486
      x86/boot: Initialize FPU and X86_FEATURE_ALWAYS even if we don&#39;t have CPUID

Segher Boessenkool (1):
      x86/vdso: Fix building on big endian host

Wanpeng Li (1):
      x86/entry/64: Fix context tracking state warning when load_gs_index fails


 arch/x86/entry/entry_64.S       |  4 ++--
 arch/x86/entry/vdso/vdso2c.h    |  2 +-
 arch/x86/include/asm/tlbflush.h |  2 +-
 arch/x86/kernel/cpu/common.c    | 23 +++++++++++------------
 arch/x86/kernel/setup.c         |  4 +---
 5 files changed, 16 insertions(+), 19 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/entry/entry_64.S b/arch/x86/entry/entry_64.S</span>
<span class="p_header">index d172c619c449..02fff3ebfb87 100644</span>
<span class="p_header">--- a/arch/x86/entry/entry_64.S</span>
<span class="p_header">+++ b/arch/x86/entry/entry_64.S</span>
<span class="p_chunk">@@ -1002,7 +1002,6 @@</span> <span class="p_context"> ENTRY(error_entry)</span>
 	testb	$3, CS+8(%rsp)
 	jz	.Lerror_kernelspace
 
<span class="p_del">-.Lerror_entry_from_usermode_swapgs:</span>
 	/*
 	 * We entered from user mode or we&#39;re pretending to have entered
 	 * from user mode due to an IRET fault.
<span class="p_chunk">@@ -1045,7 +1044,8 @@</span> <span class="p_context"> ENTRY(error_entry)</span>
 	 * gsbase and proceed.  We&#39;ll fix up the exception and land in
 	 * .Lgs_change&#39;s error handler with kernel gsbase.
 	 */
<span class="p_del">-	jmp	.Lerror_entry_from_usermode_swapgs</span>
<span class="p_add">+	SWAPGS</span>
<span class="p_add">+	jmp .Lerror_entry_done</span>
 
 .Lbstep_iret:
 	/* Fix truncated RIP */
<span class="p_header">diff --git a/arch/x86/entry/vdso/vdso2c.h b/arch/x86/entry/vdso/vdso2c.h</span>
<span class="p_header">index 4f741192846d..3dab75f2a673 100644</span>
<span class="p_header">--- a/arch/x86/entry/vdso/vdso2c.h</span>
<span class="p_header">+++ b/arch/x86/entry/vdso/vdso2c.h</span>
<span class="p_chunk">@@ -22,7 +22,7 @@</span> <span class="p_context"> static void BITSFUNC(go)(void *raw_addr, size_t raw_len,</span>
 
 	ELF(Phdr) *pt = (ELF(Phdr) *)(raw_addr + GET_LE(&amp;hdr-&gt;e_phoff));
 
<span class="p_del">-	if (hdr-&gt;e_type != ET_DYN)</span>
<span class="p_add">+	if (GET_LE(&amp;hdr-&gt;e_type) != ET_DYN)</span>
 		fail(&quot;input is not a shared object\n&quot;);
 
 	/* Walk the segment table. */
<span class="p_header">diff --git a/arch/x86/include/asm/tlbflush.h b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">index 6fa85944af83..dee8a70382ba 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_chunk">@@ -81,7 +81,7 @@</span> <span class="p_context"> DECLARE_PER_CPU_SHARED_ALIGNED(struct tlb_state, cpu_tlbstate);</span>
 /* Initialize cr4 shadow for this CPU. */
 static inline void cr4_init_shadow(void)
 {
<span class="p_del">-	this_cpu_write(cpu_tlbstate.cr4, __read_cr4());</span>
<span class="p_add">+	this_cpu_write(cpu_tlbstate.cr4, __read_cr4_safe());</span>
 }
 
 /* Set in this cpu&#39;s CR4. */
<span class="p_header">diff --git a/arch/x86/kernel/cpu/common.c b/arch/x86/kernel/cpu/common.c</span>
<span class="p_header">index 809eda03c527..bcc9ccc220c9 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/common.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/common.c</span>
<span class="p_chunk">@@ -804,21 +804,20 @@</span> <span class="p_context"> static void __init early_identify_cpu(struct cpuinfo_x86 *c)</span>
 		identify_cpu_without_cpuid(c);
 
 	/* cyrix could have cpuid enabled via c_identify()*/
<span class="p_del">-	if (!have_cpuid_p())</span>
<span class="p_del">-		return;</span>
<span class="p_add">+	if (have_cpuid_p()) {</span>
<span class="p_add">+		cpu_detect(c);</span>
<span class="p_add">+		get_cpu_vendor(c);</span>
<span class="p_add">+		get_cpu_cap(c);</span>
 
<span class="p_del">-	cpu_detect(c);</span>
<span class="p_del">-	get_cpu_vendor(c);</span>
<span class="p_del">-	get_cpu_cap(c);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (this_cpu-&gt;c_early_init)</span>
<span class="p_del">-		this_cpu-&gt;c_early_init(c);</span>
<span class="p_add">+		if (this_cpu-&gt;c_early_init)</span>
<span class="p_add">+			this_cpu-&gt;c_early_init(c);</span>
 
<span class="p_del">-	c-&gt;cpu_index = 0;</span>
<span class="p_del">-	filter_cpuid_features(c, false);</span>
<span class="p_add">+		c-&gt;cpu_index = 0;</span>
<span class="p_add">+		filter_cpuid_features(c, false);</span>
 
<span class="p_del">-	if (this_cpu-&gt;c_bsp_init)</span>
<span class="p_del">-		this_cpu-&gt;c_bsp_init(c);</span>
<span class="p_add">+		if (this_cpu-&gt;c_bsp_init)</span>
<span class="p_add">+			this_cpu-&gt;c_bsp_init(c);</span>
<span class="p_add">+	}</span>
 
 	setup_force_cpu_cap(X86_FEATURE_ALWAYS);
 	fpu__init_system(c);
<span class="p_header">diff --git a/arch/x86/kernel/setup.c b/arch/x86/kernel/setup.c</span>
<span class="p_header">index 0fa60f5f5a16..98c9cd6f3b5d 100644</span>
<span class="p_header">--- a/arch/x86/kernel/setup.c</span>
<span class="p_header">+++ b/arch/x86/kernel/setup.c</span>
<span class="p_chunk">@@ -1137,9 +1137,7 @@</span> <span class="p_context"> void __init setup_arch(char **cmdline_p)</span>
 	 * auditing all the early-boot CR4 manipulation would be needed to
 	 * rule it out.
 	 */
<span class="p_del">-	if (boot_cpu_data.cpuid_level &gt;= 0)</span>
<span class="p_del">-		/* A CPU has %cr4 if and only if it has CPUID. */</span>
<span class="p_del">-		mmu_cr4_features = __read_cr4();</span>
<span class="p_add">+	mmu_cr4_features = __read_cr4_safe();</span>
 
 	memblock_set_current_limit(get_max_mapped());
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



