
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,1/5] mm: add tlb_flush_mmu_free_batches - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,1/5] mm: add tlb_flush_mmu_free_batches</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=45931">Aaron Lu</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 15, 2017, 9 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1489568404-7817-2-git-send-email-aaron.lu@intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9625069/mbox/"
   >mbox</a>
|
   <a href="/patch/9625069/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9625069/">/patch/9625069/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	BA8DD60244 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 15 Mar 2017 09:00:11 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id ABDA027FAD
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 15 Mar 2017 09:00:11 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 9D1F228536; Wed, 15 Mar 2017 09:00:11 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 04F5627FAD
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 15 Mar 2017 09:00:11 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751463AbdCOJAA (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 15 Mar 2017 05:00:00 -0400
Received: from mga05.intel.com ([192.55.52.43]:30134 &quot;EHLO mga05.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751477AbdCOI75 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 15 Mar 2017 04:59:57 -0400
Received: from orsmga004.jf.intel.com ([10.7.209.38])
	by fmsmga105.fm.intel.com with ESMTP; 15 Mar 2017 01:59:57 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.36,168,1486454400&quot;; d=&quot;scan&#39;208&quot;;a=&quot;67566355&quot;
Received: from aaronlu.sh.intel.com ([10.239.13.136])
	by orsmga004.jf.intel.com with ESMTP; 15 Mar 2017 01:59:55 -0700
From: Aaron Lu &lt;aaron.lu@intel.com&gt;
To: linux-mm@kvack.org, linux-kernel@vger.kernel.org
Cc: Dave Hansen &lt;dave.hansen@intel.com&gt;, Tim Chen &lt;tim.c.chen@intel.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Ying Huang &lt;ying.huang@intel.com&gt;, Aaron Lu &lt;aaron.lu@intel.com&gt;
Subject: [PATCH v2 1/5] mm: add tlb_flush_mmu_free_batches
Date: Wed, 15 Mar 2017 17:00:00 +0800
Message-Id: &lt;1489568404-7817-2-git-send-email-aaron.lu@intel.com&gt;
X-Mailer: git-send-email 2.7.4
In-Reply-To: &lt;1489568404-7817-1-git-send-email-aaron.lu@intel.com&gt;
References: &lt;1489568404-7817-1-git-send-email-aaron.lu@intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=45931">Aaron Lu</a> - March 15, 2017, 9 a.m.</div>
<pre class="content">
There are two places doing page free related to struct mmu_gather_batch:
1 in tlb_flush_mmu_free, where pages gathered in mmu_gather_batch list
  are freed;
2 in tlb_flush_mmu_finish, where pages for the mmu_gather_batch
  structure(let&#39;s call it the batch page) are freed.

There will be yet another place in the parallel free worker thread
introduced in the following patch to free both the pages pointed to by
the mmu_gather_batch list and the batch pages themselves. To avoid code
duplication, add a new function named tlb_flush_mmu_free_batches for
this purpose.

Another reason to add this function is that after the following patch,
cond_resched will need to be added at places where more than 10K pages
can be freed, i.e. in tlb_flush_mmu_free and the worker function.
Instead of adding cond_resched at multiple places, using a single
function to reduce code duplication.

There should be no functionality change.
<span class="signed-off-by">
Signed-off-by: Aaron Lu &lt;aaron.lu@intel.com&gt;</span>
---
 mm/memory.c | 28 +++++++++++++++++-----------
 1 file changed, 17 insertions(+), 11 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/memory.c b/mm/memory.c</span>
<span class="p_header">index 14fc0b40f0bb..cdb2a53f251f 100644</span>
<span class="p_header">--- a/mm/memory.c</span>
<span class="p_header">+++ b/mm/memory.c</span>
<span class="p_chunk">@@ -250,14 +250,25 @@</span> <span class="p_context"> static void tlb_flush_mmu_tlbonly(struct mmu_gather *tlb)</span>
 	__tlb_reset_range(tlb);
 }
 
<span class="p_del">-static void tlb_flush_mmu_free(struct mmu_gather *tlb)</span>
<span class="p_add">+static void tlb_flush_mmu_free_batches(struct mmu_gather_batch *batch_start,</span>
<span class="p_add">+				       bool free_batch_page)</span>
 {
<span class="p_del">-	struct mmu_gather_batch *batch;</span>
<span class="p_add">+	struct mmu_gather_batch *batch, *next;</span>
 
<span class="p_del">-	for (batch = &amp;tlb-&gt;local; batch &amp;&amp; batch-&gt;nr; batch = batch-&gt;next) {</span>
<span class="p_del">-		free_pages_and_swap_cache(batch-&gt;pages, batch-&gt;nr);</span>
<span class="p_del">-		batch-&gt;nr = 0;</span>
<span class="p_add">+	for (batch = batch_start; batch; batch = next) {</span>
<span class="p_add">+		next = batch-&gt;next;</span>
<span class="p_add">+		if (batch-&gt;nr) {</span>
<span class="p_add">+			free_pages_and_swap_cache(batch-&gt;pages, batch-&gt;nr);</span>
<span class="p_add">+			batch-&gt;nr = 0;</span>
<span class="p_add">+		}</span>
<span class="p_add">+		if (free_batch_page)</span>
<span class="p_add">+			free_pages((unsigned long)batch, 0);</span>
 	}
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static void tlb_flush_mmu_free(struct mmu_gather *tlb)</span>
<span class="p_add">+{</span>
<span class="p_add">+	tlb_flush_mmu_free_batches(&amp;tlb-&gt;local, false);</span>
 	tlb-&gt;active = &amp;tlb-&gt;local;
 }
 
<span class="p_chunk">@@ -273,17 +284,12 @@</span> <span class="p_context"> void tlb_flush_mmu(struct mmu_gather *tlb)</span>
  */
 void tlb_finish_mmu(struct mmu_gather *tlb, unsigned long start, unsigned long end)
 {
<span class="p_del">-	struct mmu_gather_batch *batch, *next;</span>
<span class="p_del">-</span>
 	tlb_flush_mmu(tlb);
 
 	/* keep the page table cache within bounds */
 	check_pgt_cache();
 
<span class="p_del">-	for (batch = tlb-&gt;local.next; batch; batch = next) {</span>
<span class="p_del">-		next = batch-&gt;next;</span>
<span class="p_del">-		free_pages((unsigned long)batch, 0);</span>
<span class="p_del">-	}</span>
<span class="p_add">+	tlb_flush_mmu_free_batches(tlb-&gt;local.next, true);</span>
 	tlb-&gt;local.next = NULL;
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



