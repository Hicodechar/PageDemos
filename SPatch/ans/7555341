
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[3/8] mm: page_counter: let page_counter_try_charge() return bool - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [3/8] mm: page_counter: let page_counter_try_charge() return bool</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=45">Johannes Weiner</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 4, 2015, 10:22 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1446675734-25671-4-git-send-email-hannes@cmpxchg.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7555341/mbox/"
   >mbox</a>
|
   <a href="/patch/7555341/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7555341/">/patch/7555341/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 265839F2F7
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  4 Nov 2015 22:22:51 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 36383206D5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  4 Nov 2015 22:22:50 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 3621C206BE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  4 Nov 2015 22:22:49 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1031507AbbKDWWm (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 4 Nov 2015 17:22:42 -0500
Received: from gum.cmpxchg.org ([85.214.110.215]:41678 &quot;EHLO gum.cmpxchg.org&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1031201AbbKDWWh (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 4 Nov 2015 17:22:37 -0500
From: Johannes Weiner &lt;hannes@cmpxchg.org&gt;
To: David Miller &lt;davem@davemloft.net&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Michal Hocko &lt;mhocko@suse.cz&gt;, Vladimir Davydov &lt;vdavydov@virtuozzo.com&gt;,
	Tejun Heo &lt;tj@kernel.org&gt;, netdev@vger.kernel.org,
	linux-mm@kvack.org, cgroups@vger.kernel.org,
	linux-kernel@vger.kernel.org, kernel-team@fb.com
Subject: [PATCH 3/8] mm: page_counter: let page_counter_try_charge() return
	bool
Date: Wed,  4 Nov 2015 17:22:09 -0500
Message-Id: &lt;1446675734-25671-4-git-send-email-hannes@cmpxchg.org&gt;
X-Mailer: git-send-email 2.6.2
In-Reply-To: &lt;1446675734-25671-1-git-send-email-hannes@cmpxchg.org&gt;
References: &lt;1446675734-25671-1-git-send-email-hannes@cmpxchg.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=45">Johannes Weiner</a> - Nov. 4, 2015, 10:22 p.m.</div>
<pre class="content">
page_counter_try_charge() currently returns 0 on success and -ENOMEM
on failure, which is surprising behavior given the function name.

Make it follow the expected pattern of try_stuff() functions that
return a boolean true to indicate success, or false for failure.
<span class="signed-off-by">
Signed-off-by: Johannes Weiner &lt;hannes@cmpxchg.org&gt;</span>
<span class="acked-by">Acked-by: Michal Hocko &lt;mhocko@suse.com&gt;</span>
---
 include/linux/page_counter.h |  6 +++---
 mm/hugetlb_cgroup.c          |  3 ++-
 mm/memcontrol.c              | 11 +++++------
 mm/page_counter.c            | 14 +++++++-------
 4 files changed, 17 insertions(+), 17 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/linux/page_counter.h b/include/linux/page_counter.h</span>
<span class="p_header">index 17fa4f8..7e62920 100644</span>
<span class="p_header">--- a/include/linux/page_counter.h</span>
<span class="p_header">+++ b/include/linux/page_counter.h</span>
<span class="p_chunk">@@ -36,9 +36,9 @@</span> <span class="p_context"> static inline unsigned long page_counter_read(struct page_counter *counter)</span>
 
 void page_counter_cancel(struct page_counter *counter, unsigned long nr_pages);
 void page_counter_charge(struct page_counter *counter, unsigned long nr_pages);
<span class="p_del">-int page_counter_try_charge(struct page_counter *counter,</span>
<span class="p_del">-			    unsigned long nr_pages,</span>
<span class="p_del">-			    struct page_counter **fail);</span>
<span class="p_add">+bool page_counter_try_charge(struct page_counter *counter,</span>
<span class="p_add">+			     unsigned long nr_pages,</span>
<span class="p_add">+			     struct page_counter **fail);</span>
 void page_counter_uncharge(struct page_counter *counter, unsigned long nr_pages);
 int page_counter_limit(struct page_counter *counter, unsigned long limit);
 int page_counter_memparse(const char *buf, const char *max,
<span class="p_header">diff --git a/mm/hugetlb_cgroup.c b/mm/hugetlb_cgroup.c</span>
<span class="p_header">index 6a44263..d8fb10d 100644</span>
<span class="p_header">--- a/mm/hugetlb_cgroup.c</span>
<span class="p_header">+++ b/mm/hugetlb_cgroup.c</span>
<span class="p_chunk">@@ -186,7 +186,8 @@</span> <span class="p_context"> again:</span>
 	}
 	rcu_read_unlock();
 
<span class="p_del">-	ret = page_counter_try_charge(&amp;h_cg-&gt;hugepage[idx], nr_pages, &amp;counter);</span>
<span class="p_add">+	if (!page_counter_try_charge(&amp;h_cg-&gt;hugepage[idx], nr_pages, &amp;counter))</span>
<span class="p_add">+		ret = -ENOMEM;</span>
 	css_put(&amp;h_cg-&gt;css);
 done:
 	*ptr = h_cg;
<span class="p_header">diff --git a/mm/memcontrol.c b/mm/memcontrol.c</span>
<span class="p_header">index 7049e55..e54f434 100644</span>
<span class="p_header">--- a/mm/memcontrol.c</span>
<span class="p_header">+++ b/mm/memcontrol.c</span>
<span class="p_chunk">@@ -2018,8 +2018,8 @@</span> <span class="p_context"> retry:</span>
 		return 0;
 
 	if (!do_swap_account ||
<span class="p_del">-	    !page_counter_try_charge(&amp;memcg-&gt;memsw, batch, &amp;counter)) {</span>
<span class="p_del">-		if (!page_counter_try_charge(&amp;memcg-&gt;memory, batch, &amp;counter))</span>
<span class="p_add">+	    page_counter_try_charge(&amp;memcg-&gt;memsw, batch, &amp;counter)) {</span>
<span class="p_add">+		if (page_counter_try_charge(&amp;memcg-&gt;memory, batch, &amp;counter))</span>
 			goto done_restock;
 		if (do_swap_account)
 			page_counter_uncharge(&amp;memcg-&gt;memsw, batch);
<span class="p_chunk">@@ -2383,14 +2383,13 @@</span> <span class="p_context"> int __memcg_kmem_charge_memcg(struct page *page, gfp_t gfp, int order,</span>
 {
 	unsigned int nr_pages = 1 &lt;&lt; order;
 	struct page_counter *counter;
<span class="p_del">-	int ret = 0;</span>
<span class="p_add">+	int ret;</span>
 
 	if (!memcg_kmem_is_active(memcg))
 		return 0;
 
<span class="p_del">-	ret = page_counter_try_charge(&amp;memcg-&gt;kmem, nr_pages, &amp;counter);</span>
<span class="p_del">-	if (ret)</span>
<span class="p_del">-		return ret;</span>
<span class="p_add">+	if (!page_counter_try_charge(&amp;memcg-&gt;kmem, nr_pages, &amp;counter))</span>
<span class="p_add">+		return -ENOMEM;</span>
 
 	ret = try_charge(memcg, gfp, nr_pages);
 	if (ret) {
<span class="p_header">diff --git a/mm/page_counter.c b/mm/page_counter.c</span>
<span class="p_header">index 11b4bed..7c6a63d 100644</span>
<span class="p_header">--- a/mm/page_counter.c</span>
<span class="p_header">+++ b/mm/page_counter.c</span>
<span class="p_chunk">@@ -56,12 +56,12 @@</span> <span class="p_context"> void page_counter_charge(struct page_counter *counter, unsigned long nr_pages)</span>
  * @nr_pages: number of pages to charge
  * @fail: points first counter to hit its limit, if any
  *
<span class="p_del">- * Returns 0 on success, or -ENOMEM and @fail if the counter or one of</span>
<span class="p_del">- * its ancestors has hit its configured limit.</span>
<span class="p_add">+ * Returns %true on success, or %false and @fail if the counter or one</span>
<span class="p_add">+ * of its ancestors has hit its configured limit.</span>
  */
<span class="p_del">-int page_counter_try_charge(struct page_counter *counter,</span>
<span class="p_del">-			    unsigned long nr_pages,</span>
<span class="p_del">-			    struct page_counter **fail)</span>
<span class="p_add">+bool page_counter_try_charge(struct page_counter *counter,</span>
<span class="p_add">+			     unsigned long nr_pages,</span>
<span class="p_add">+			     struct page_counter **fail)</span>
 {
 	struct page_counter *c;
 
<span class="p_chunk">@@ -99,13 +99,13 @@</span> <span class="p_context"> int page_counter_try_charge(struct page_counter *counter,</span>
 		if (new &gt; c-&gt;watermark)
 			c-&gt;watermark = new;
 	}
<span class="p_del">-	return 0;</span>
<span class="p_add">+	return true;</span>
 
 failed:
 	for (c = counter; c != *fail; c = c-&gt;parent)
 		page_counter_cancel(c, nr_pages);
 
<span class="p_del">-	return -ENOMEM;</span>
<span class="p_add">+	return false;</span>
 }
 
 /**

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



