
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.9,21/75] x86/mm: Enable CR4.PCIDE on supported systems - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.9,21/75] x86/mm: Enable CR4.PCIDE on supported systems</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 1, 2018, 2:31 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180101140059.950536297@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10139143/mbox/"
   >mbox</a>
|
   <a href="/patch/10139143/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10139143/">/patch/10139143/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	0778A6035E for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  1 Jan 2018 15:22:29 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id ED5A228417
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  1 Jan 2018 15:22:28 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id E2362288E6; Mon,  1 Jan 2018 15:22:28 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4B4C928417
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  1 Jan 2018 15:22:28 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753296AbeAAPWZ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 1 Jan 2018 10:22:25 -0500
Received: from mail.linuxfoundation.org ([140.211.169.12]:43278 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753122AbeAAOdx (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 1 Jan 2018 09:33:53 -0500
Received: from localhost (LFbn-1-12258-90.w90-92.abo.wanadoo.fr
	[90.92.71.90])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id 728909F0;
	Mon,  1 Jan 2018 14:33:52 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, Andy Lutomirski &lt;luto@kernel.org&gt;,
	Nadav Amit &lt;nadav.amit@gmail.com&gt;,
	Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Arjan van de Ven &lt;arjan@linux.intel.com&gt;, Borislav Petkov &lt;bp@alien8.de&gt;,
	Dave Hansen &lt;dave.hansen@intel.com&gt;, Juergen Gross &lt;jgross@suse.com&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Mel Gorman &lt;mgorman@suse.de&gt;, Peter Zijlstra &lt;peterz@infradead.org&gt;,
	Rik van Riel &lt;riel@redhat.com&gt;, linux-mm@kvack.org,
	Ingo Molnar &lt;mingo@kernel.org&gt;, Hugh Dickins &lt;hughd@google.com&gt;
Subject: [PATCH 4.9 21/75] x86/mm: Enable CR4.PCIDE on supported systems
Date: Mon,  1 Jan 2018 15:31:58 +0100
Message-Id: &lt;20180101140059.950536297@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.15.1
In-Reply-To: &lt;20180101140056.475827799@linuxfoundation.org&gt;
References: &lt;20180101140056.475827799@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Jan. 1, 2018, 2:31 p.m.</div>
<pre class="content">
4.9-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: Andy Lutomirski &lt;luto@kernel.org&gt;</span>

commit 660da7c9228f685b2ebe664f9fd69aaddcc420b5 upstream.

We can use PCID if the CPU has PCID and PGE and we&#39;re not on Xen.

By itself, this has no effect. A followup patch will start using PCID.
<span class="signed-off-by">
Signed-off-by: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
<span class="reviewed-by">Reviewed-by: Nadav Amit &lt;nadav.amit@gmail.com&gt;</span>
<span class="reviewed-by">Reviewed-by: Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;</span>
<span class="reviewed-by">Reviewed-by: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Arjan van de Ven &lt;arjan@linux.intel.com&gt;
Cc: Borislav Petkov &lt;bp@alien8.de&gt;
Cc: Dave Hansen &lt;dave.hansen@intel.com&gt;
Cc: Juergen Gross &lt;jgross@suse.com&gt;
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Mel Gorman &lt;mgorman@suse.de&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: Rik van Riel &lt;riel@redhat.com&gt;
Cc: linux-mm@kvack.org
Link: http://lkml.kernel.org/r/6327ecd907b32f79d5aa0d466f04503bbec5df88.1498751203.git.luto@kernel.org
<span class="signed-off-by">Signed-off-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
Cc: Hugh Dickins &lt;hughd@google.com&gt;
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>

---
 arch/x86/include/asm/tlbflush.h |    8 ++++++++
 arch/x86/kernel/cpu/common.c    |   22 ++++++++++++++++++++++
 arch/x86/xen/enlighten.c        |    6 ++++++
 3 files changed, 36 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_chunk">@@ -191,6 +191,14 @@</span> <span class="p_context"> static inline void __flush_tlb_all(void)</span>
 		__flush_tlb_global();
 	else
 		__flush_tlb();
<span class="p_add">+</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Note: if we somehow had PCID but not PGE, then this wouldn&#39;t work --</span>
<span class="p_add">+	 * we&#39;d end up flushing kernel translations for the current ASID but</span>
<span class="p_add">+	 * we might fail to flush kernel translations for other cached ASIDs.</span>
<span class="p_add">+	 *</span>
<span class="p_add">+	 * To avoid this issue, we force PCID off if PGE is off.</span>
<span class="p_add">+	 */</span>
 }
 
 static inline void __flush_tlb_one(unsigned long addr)
<span class="p_header">--- a/arch/x86/kernel/cpu/common.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/common.c</span>
<span class="p_chunk">@@ -324,6 +324,25 @@</span> <span class="p_context"> static __always_inline void setup_smap(s</span>
 	}
 }
 
<span class="p_add">+static void setup_pcid(struct cpuinfo_x86 *c)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if (cpu_has(c, X86_FEATURE_PCID)) {</span>
<span class="p_add">+		if (cpu_has(c, X86_FEATURE_PGE)) {</span>
<span class="p_add">+			cr4_set_bits(X86_CR4_PCIDE);</span>
<span class="p_add">+		} else {</span>
<span class="p_add">+			/*</span>
<span class="p_add">+			 * flush_tlb_all(), as currently implemented, won&#39;t</span>
<span class="p_add">+			 * work if PCID is on but PGE is not.  Since that</span>
<span class="p_add">+			 * combination doesn&#39;t exist on real hardware, there&#39;s</span>
<span class="p_add">+			 * no reason to try to fully support it, but it&#39;s</span>
<span class="p_add">+			 * polite to avoid corrupting data if we&#39;re on</span>
<span class="p_add">+			 * an improperly configured VM.</span>
<span class="p_add">+			 */</span>
<span class="p_add">+			clear_cpu_cap(c, X86_FEATURE_PCID);</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 /*
  * Protection Keys are not available in 32-bit mode.
  */
<span class="p_chunk">@@ -1082,6 +1101,9 @@</span> <span class="p_context"> static void identify_cpu(struct cpuinfo_</span>
 	setup_smep(c);
 	setup_smap(c);
 
<span class="p_add">+	/* Set up PCID */</span>
<span class="p_add">+	setup_pcid(c);</span>
<span class="p_add">+</span>
 	/*
 	 * The vendor-specific functions might have changed features.
 	 * Now we do &quot;generic changes.&quot;
<span class="p_header">--- a/arch/x86/xen/enlighten.c</span>
<span class="p_header">+++ b/arch/x86/xen/enlighten.c</span>
<span class="p_chunk">@@ -444,6 +444,12 @@</span> <span class="p_context"> static void __init xen_init_cpuid_mask(v</span>
 		~((1 &lt;&lt; X86_FEATURE_MTRR) |  /* disable MTRR */
 		  (1 &lt;&lt; X86_FEATURE_ACC));   /* thermal monitoring */
 
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Xen PV would need some work to support PCID: CR3 handling as well</span>
<span class="p_add">+	 * as xen_flush_tlb_others() would need updating.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	cpuid_leaf1_ecx_mask &amp;= ~(1 &lt;&lt; (X86_FEATURE_PCID % 32));  /* disable PCID */</span>
<span class="p_add">+</span>
 	if (!xen_initial_domain())
 		cpuid_leaf1_edx_mask &amp;=
 			~((1 &lt;&lt; X86_FEATURE_ACPI));  /* disable ACPI */

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



