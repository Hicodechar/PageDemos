
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4/4] x86/mm/32: Load a sane CR3 before cpu_init() on secondary CPUs - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4/4] x86/mm/32: Load a sane CR3 before cpu_init() on secondary CPUs</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=125831">Andrew Lutomirski</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 17, 2017, 4:03 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;30cdfea504682ba3b9012e77717800a91c22097f.1505663533.git.luto@kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9954909/mbox/"
   >mbox</a>
|
   <a href="/patch/9954909/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9954909/">/patch/9954909/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	CA3E86028A for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 17 Sep 2017 16:04:50 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id BD91B212E8
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 17 Sep 2017 16:04:50 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id B276E28ADC; Sun, 17 Sep 2017 16:04:50 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5E18E28B16
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 17 Sep 2017 16:04:45 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751860AbdIQQEQ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 17 Sep 2017 12:04:16 -0400
Received: from mail.kernel.org ([198.145.29.99]:58902 &quot;EHLO mail.kernel.org&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751785AbdIQQD5 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 17 Sep 2017 12:03:57 -0400
Received: from localhost (cpe-172-91-152-205.socal.res.rr.com
	[172.91.152.205])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256
	bits)) (No client certificate requested)
	by mail.kernel.org (Postfix) with ESMTPSA id 61FF821456;
	Sun, 17 Sep 2017 16:03:57 +0000 (UTC)
DMARC-Filter: OpenDMARC Filter v1.3.2 mail.kernel.org 61FF821456
Authentication-Results: mail.kernel.org;
	dmarc=none (p=none dis=none) header.from=kernel.org
Authentication-Results: mail.kernel.org;
	spf=none smtp.mailfrom=luto@kernel.org
From: Andy Lutomirski &lt;luto@kernel.org&gt;
To: X86 ML &lt;x86@kernel.org&gt;
Cc: Borislav Petkov &lt;bpetkov@suse.de&gt;,
	&quot;linux-kernel@vger.kernel.org&quot; &lt;linux-kernel@vger.kernel.org&gt;,
	Andy Lutomirski &lt;luto@kernel.org&gt;, Borislav Petkov &lt;bp@alien8.de&gt;
Subject: [PATCH 4/4] x86/mm/32: Load a sane CR3 before cpu_init() on
	secondary CPUs
Date: Sun, 17 Sep 2017 09:03:51 -0700
Message-Id: &lt;30cdfea504682ba3b9012e77717800a91c22097f.1505663533.git.luto@kernel.org&gt;
X-Mailer: git-send-email 2.13.5
In-Reply-To: &lt;cover.1505663533.git.luto@kernel.org&gt;
References: &lt;cover.1505663533.git.luto@kernel.org&gt;
In-Reply-To: &lt;cover.1505663533.git.luto@kernel.org&gt;
References: &lt;cover.1505663533.git.luto@kernel.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=125831">Andrew Lutomirski</a> - Sept. 17, 2017, 4:03 p.m.</div>
<pre class="content">
For unknown historical reasons (i.e. Borislav doesn&#39;t recall),
32-bit kernels invoke cpu_init() on secondary CPUs with
intiial_page_table loaded into CR3.  Then they set
current-&gt;active_mm to &amp;init_mm and call enter_lazy_tlb() before
fixing CR3.  This means that the x86 TLB code gets invoked while CR3
is inconsistent, and, with the improved PCID sanity checks I added,
we warn.

Fix it by loading swapper_pg_dir (i.e. init_mm.pgd) earlier.

Cc: Borislav Petkov &lt;bp@alien8.de&gt;
Reported-by: Paul Menzel &lt;pmenzel@molgen.mpg.de&gt;
Reported-by: Pavel Machek &lt;pavel@ucw.cz&gt;
Fixes: 72c0098d92ce (&quot;x86/mm: Reinitialize TLB state on hotplug and resume&quot;)
<span class="signed-off-by">Signed-off-by: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
---
 arch/x86/kernel/smpboot.c | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/kernel/smpboot.c b/arch/x86/kernel/smpboot.c</span>
<span class="p_header">index 0854ff169274..ad59edd84de7 100644</span>
<span class="p_header">--- a/arch/x86/kernel/smpboot.c</span>
<span class="p_header">+++ b/arch/x86/kernel/smpboot.c</span>
<span class="p_chunk">@@ -232,12 +232,6 @@</span> <span class="p_context"> static void notrace start_secondary(void *unused)</span>
 	 */
 	if (boot_cpu_has(X86_FEATURE_PCID))
 		__write_cr4(__read_cr4() | X86_CR4_PCIDE);
<span class="p_del">-	cpu_init();</span>
<span class="p_del">-	x86_cpuinit.early_percpu_clock_init();</span>
<span class="p_del">-	preempt_disable();</span>
<span class="p_del">-	smp_callin();</span>
<span class="p_del">-</span>
<span class="p_del">-	enable_start_cpu0 = 0;</span>
 
 #ifdef CONFIG_X86_32
 	/* switch away from the initial page table */
<span class="p_chunk">@@ -245,6 +239,13 @@</span> <span class="p_context"> static void notrace start_secondary(void *unused)</span>
 	__flush_tlb_all();
 #endif
 
<span class="p_add">+	cpu_init();</span>
<span class="p_add">+	x86_cpuinit.early_percpu_clock_init();</span>
<span class="p_add">+	preempt_disable();</span>
<span class="p_add">+	smp_callin();</span>
<span class="p_add">+</span>
<span class="p_add">+	enable_start_cpu0 = 0;</span>
<span class="p_add">+</span>
 	/* otherwise gcc will move up smp_processor_id before the cpu_init */
 	barrier();
 	/*

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



