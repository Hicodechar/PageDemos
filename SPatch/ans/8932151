
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[34/40] x86/efi: Move to generic {__,}efi_call_virt - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [34/40] x86/efi: Move to generic {__,}efi_call_virt</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=119821">Matt Fleming</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>April 25, 2016, 8:07 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1461614832-17633-35-git-send-email-matt@codeblueprint.co.uk&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8932151/mbox/"
   >mbox</a>
|
   <a href="/patch/8932151/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8932151/">/patch/8932151/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 751829F441
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 25 Apr 2016 20:10:46 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id BADF420138
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 25 Apr 2016 20:10:45 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id E02DA2013A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 25 Apr 2016 20:10:44 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S965058AbcDYUKl (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 25 Apr 2016 16:10:41 -0400
Received: from mail-wm0-f53.google.com ([74.125.82.53]:38867 &quot;EHLO
	mail-wm0-f53.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S964773AbcDYUIX (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 25 Apr 2016 16:08:23 -0400
Received: by mail-wm0-f53.google.com with SMTP id u206so145172609wme.1
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Mon, 25 Apr 2016 13:08:22 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=codeblueprint-co-uk.20150623.gappssmtp.com; s=20150623;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=4Mil9BYKiX6Od3H3HysypTOy/qpsB1zCLJEiTlpn19g=;
	b=Tj7D/lRf/sOr3W3bb0OaMfu0Oqi+ZLPLjV3pGAGep4i77ZH7/9kJ2bFVRyRV9G4rcw
	baqpfKzsvya7mx4KCDkhh1ZeDHhb6WL8n84y2MrzFl4h4WgozK3M4DJYEBfa6yve8eEL
	bG9ePPVxAqgP94JCg4dJrILZzZ2feun/Xi/+whRSWEU4mP9gSPD1FJzBp1rti7Lq2CK8
	cTIPoyJZ6raZW1Ea863h+iYV3vWBUfzbxUwhqo8coCi3z7m7OhOC5EsVZ+WxTvZWD/1P
	Y2p4ivZdt2bS2pbBCKYWYQZuce+drXKNdmHiKdbJWx6k+AbV8Yc3Y3WPdBf9istXffEB
	vLUQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20130820;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=4Mil9BYKiX6Od3H3HysypTOy/qpsB1zCLJEiTlpn19g=;
	b=gcMmL4kboswSbyi1toxUhluZge7VWSfpXRMLoao7JwprPFFHal3fXpoThNv8NLXFkW
	LKUStd4zOZFpBgsFkXBFEINT+rSZUy136Hutkbf2gzN250z9KfWYHJ8ZiI09D6IhKMFU
	IAsjn1HlaceCOoIHhXgNzwIwOyEWhqprNMTWe9WXk7E7OFZyF8oW4/mQ4VjlxuMdeljg
	60x3OEnPMHs5oOKxTF2wUiqAVhpDWp/4SjCwxYutg87145VE8g79a0H7u5rfWs1Mnh0u
	dyzarWS2PXV0IwQDzDXPMHxV37a2vpW9+iKP+w+eJAHxYcaP0zxD040Xl3ae7GMaDaF0
	FBiA==
X-Gm-Message-State: AOPr4FVPPT+OtP9D9EWMaffRhUOqLZmgECJ1nUsvWLTXoL1EzVi/TpbXy0YIJ8i5LqRXvg==
X-Received: by 10.28.130.133 with SMTP id e127mr15248025wmd.48.1461614901802;
	Mon, 25 Apr 2016 13:08:21 -0700 (PDT)
Received: from localhost (bcdc58e5.skybroadband.com. [188.220.88.229])
	by smtp.gmail.com with ESMTPSA id
	ry15sm25201233wjb.19.2016.04.25.13.08.20
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Mon, 25 Apr 2016 13:08:21 -0700 (PDT)
From: Matt Fleming &lt;matt@codeblueprint.co.uk&gt;
To: Ingo Molnar &lt;mingo@kernel.org&gt;, Thomas Gleixner &lt;tglx@linutronix.de&gt;,
	&quot;H . Peter Anvin&quot; &lt;hpa@zytor.com&gt;
Cc: Mark Rutland &lt;mark.rutland@arm.com&gt;,
	Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt;,
	linux-kernel@vger.kernel.org, linux-efi@vger.kernel.org,
	Matt Fleming &lt;matt@codeblueprint.co.uk&gt;,
	Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	Ingo Molnar &lt;mingo@redhat.com&gt;, Leif Lindholm &lt;leif.lindholm@linaro.org&gt;,
	Ricardo Neri &lt;ricardo.neri-calderon@linux.intel.com&gt;,
	Russell King &lt;linux@arm.linux.org.uk&gt;, Will Deacon &lt;will.deacon@arm.com&gt;
Subject: [PATCH 34/40] x86/efi: Move to generic {__,}efi_call_virt
Date: Mon, 25 Apr 2016 21:07:06 +0100
Message-Id: &lt;1461614832-17633-35-git-send-email-matt@codeblueprint.co.uk&gt;
X-Mailer: git-send-email 2.7.3
In-Reply-To: &lt;1461614832-17633-1-git-send-email-matt@codeblueprint.co.uk&gt;
References: &lt;1461614832-17633-1-git-send-email-matt@codeblueprint.co.uk&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.9 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_HI,RP_MATCHES_RCVD,UNPARSEABLE_RELAY
	autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=119821">Matt Fleming</a> - April 25, 2016, 8:07 p.m.</div>
<pre class="content">
<span class="from">From: Mark Rutland &lt;mark.rutland@arm.com&gt;</span>

Now there&#39;s a common template for {__,}efi_call_virt, remove the
duplicate logic from the x86 efi code.
<span class="signed-off-by">
Signed-off-by: Mark Rutland &lt;mark.rutland@arm.com&gt;</span>
Cc: &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;
Cc: Ingo Molnar &lt;mingo@redhat.com&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Cc: linux-efi@vger.kernel.org
Cc: linux-kernel@vger.kernel.org
Cc: Ard Biesheuvel &lt;ard.biesheuvel@linaro.org&gt;
Cc: Catalin Marinas &lt;catalin.marinas@arm.com&gt;
Cc: Leif Lindholm &lt;leif.lindholm@linaro.org&gt;
Cc: Russell King &lt;linux@arm.linux.org.uk&gt;
Cc: Will Deacon &lt;will.deacon@arm.com&gt;
Cc: Ricardo Neri &lt;ricardo.neri-calderon@linux.intel.com&gt;
<span class="signed-off-by">Signed-off-by: Matt Fleming &lt;matt@codeblueprint.co.uk&gt;</span>
---
 arch/x86/include/asm/efi.h | 41 ++++++++++++-----------------------------
 1 file changed, 12 insertions(+), 29 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/efi.h b/arch/x86/include/asm/efi.h</span>
<span class="p_header">index 8747abe8872f..fb085ce00bd2 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/efi.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/efi.h</span>
<span class="p_chunk">@@ -33,28 +33,16 @@</span> <span class="p_context"></span>
 
 extern unsigned long asmlinkage efi_call_phys(void *, ...);
 
<span class="p_add">+#define arch_efi_call_virt_setup()	kernel_fpu_begin()</span>
<span class="p_add">+#define arch_efi_call_virt_teardown()	kernel_fpu_end()</span>
<span class="p_add">+</span>
 /*
  * Wrap all the virtual calls in a way that forces the parameters on the stack.
  */
<span class="p_del">-</span>
<span class="p_del">-/* Use this macro if your virtual returns a non-void value */</span>
<span class="p_del">-#define efi_call_virt(f, args...) \</span>
<span class="p_del">-({									\</span>
<span class="p_del">-	efi_status_t __s;						\</span>
<span class="p_del">-	kernel_fpu_begin();						\</span>
<span class="p_del">-	__s = ((efi_##f##_t __attribute__((regparm(0)))*)		\</span>
<span class="p_del">-		efi.systab-&gt;runtime-&gt;f)(args);				\</span>
<span class="p_del">-	kernel_fpu_end();						\</span>
<span class="p_del">-	__s;								\</span>
<span class="p_del">-})</span>
<span class="p_del">-</span>
<span class="p_del">-/* Use this macro if your virtual call does not return any value */</span>
<span class="p_del">-#define __efi_call_virt(f, args...) \</span>
<span class="p_add">+#define arch_efi_call_virt(f, args...)					\</span>
 ({									\
<span class="p_del">-	kernel_fpu_begin();						\</span>
 	((efi_##f##_t __attribute__((regparm(0)))*)			\
 		efi.systab-&gt;runtime-&gt;f)(args);				\
<span class="p_del">-	kernel_fpu_end();						\</span>
 })
 
 #define efi_ioremap(addr, size, type, attr)	ioremap_cache(addr, size)
<span class="p_chunk">@@ -78,10 +66,8 @@</span> <span class="p_context"> struct efi_scratch {</span>
 	u64	phys_stack;
 } __packed;
 
<span class="p_del">-#define efi_call_virt(f, ...)						\</span>
<span class="p_add">+#define arch_efi_call_virt_setup()					\</span>
 ({									\
<span class="p_del">-	efi_status_t __s;						\</span>
<span class="p_del">-									\</span>
 	efi_sync_low_kernel_mappings();					\
 	preempt_disable();						\
 	__kernel_fpu_begin();						\
<span class="p_chunk">@@ -91,9 +77,13 @@</span> <span class="p_context"> struct efi_scratch {</span>
 		write_cr3((unsigned long)efi_scratch.efi_pgt);		\
 		__flush_tlb_all();					\
 	}								\
<span class="p_del">-									\</span>
<span class="p_del">-	__s = efi_call((void *)efi.systab-&gt;runtime-&gt;f, __VA_ARGS__);	\</span>
<span class="p_del">-									\</span>
<span class="p_add">+})</span>
<span class="p_add">+</span>
<span class="p_add">+#define arch_efi_call_virt(f, args...)					\</span>
<span class="p_add">+	efi_call((void *)efi.systab-&gt;runtime-&gt;f, args)			\</span>
<span class="p_add">+</span>
<span class="p_add">+#define arch_efi_call_virt_teardown()					\</span>
<span class="p_add">+({									\</span>
 	if (efi_scratch.use_pgd) {					\
 		write_cr3(efi_scratch.prev_cr3);			\
 		__flush_tlb_all();					\
<span class="p_chunk">@@ -101,15 +91,8 @@</span> <span class="p_context"> struct efi_scratch {</span>
 									\
 	__kernel_fpu_end();						\
 	preempt_enable();						\
<span class="p_del">-	__s;								\</span>
 })
 
<span class="p_del">-/*</span>
<span class="p_del">- * All X86_64 virt calls return non-void values. Thus, use non-void call for</span>
<span class="p_del">- * virt calls that would be void on X86_32.</span>
<span class="p_del">- */</span>
<span class="p_del">-#define __efi_call_virt(f, args...) efi_call_virt(f, args)</span>
<span class="p_del">-</span>
 extern void __iomem *__init efi_ioremap(unsigned long addr, unsigned long size,
 					u32 type, u64 attribute);
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



