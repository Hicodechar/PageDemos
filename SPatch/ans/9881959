
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/2] mm,fork: introduce MADV_WIPEONFORK - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/2] mm,fork: introduce MADV_WIPEONFORK</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=181">Rik van Riel</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 4, 2017, 7:01 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170804190110.17087-3-riel@redhat.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9881959/mbox/"
   >mbox</a>
|
   <a href="/patch/9881959/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9881959/">/patch/9881959/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	371F360375 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  4 Aug 2017 19:01:51 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 28A02289E1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  4 Aug 2017 19:01:51 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 1CC65289E6; Fri,  4 Aug 2017 19:01:51 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 54BB8289E1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  4 Aug 2017 19:01:50 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752081AbdHDTBo (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 4 Aug 2017 15:01:44 -0400
Received: from shelob.surriel.com ([96.67.55.147]:44793 &quot;EHLO
	shelob.surriel.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751216AbdHDTBR (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 4 Aug 2017 15:01:17 -0400
Received: from [2603:3005:d05:2b00:224:e8ff:fe38:995c]
	(helo=annuminas.surriel.com)
	by shelob.surriel.com with esmtps (TLSv1:AES256-SHA:256)
	(Exim 4.63) (envelope-from &lt;riel@redhat.com&gt;)
	id 1ddhqT-0002My-3t; Fri, 04 Aug 2017 15:01:13 -0400
Received: from annuminas.surriel.com (localhost.localdomain [127.0.0.1])
	by annuminas.surriel.com (8.15.2/8.14.5) with ESMTP id v74J1C00017285;
	Fri, 4 Aug 2017 15:01:12 -0400
Received: (from riel@localhost)
	by annuminas.surriel.com (8.15.2/8.15.2/Submit) id v74J1Cxn017284;
	Fri, 4 Aug 2017 15:01:12 -0400
X-Authentication-Warning: annuminas.surriel.com: riel set sender to
	riel@redhat.com using -f
From: riel@redhat.com
To: linux-kernel@vger.kernel.org
Cc: linux-mm@kvack.org, fweimer@redhat.com, colm@allcosts.net,
	akpm@linux-foundation.org, rppt@linux.vnet.ibm.com,
	keescook@chromium.org, luto@amacapital.net, wad@chromium.org,
	mingo@kernel.org
Subject: [PATCH 2/2] mm,fork: introduce MADV_WIPEONFORK
Date: Fri,  4 Aug 2017 15:01:10 -0400
Message-Id: &lt;20170804190110.17087-3-riel@redhat.com&gt;
X-Mailer: git-send-email 2.9.4
In-Reply-To: &lt;20170804190110.17087-1-riel@redhat.com&gt;
References: &lt;20170804190110.17087-1-riel@redhat.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=181">Rik van Riel</a> - Aug. 4, 2017, 7:01 p.m.</div>
<pre class="content">
<span class="from">From: Rik van Riel &lt;riel@redhat.com&gt;</span>

Introduce MADV_WIPEONFORK semantics, which result in a VMA being
empty in the child process after fork. This differs from MADV_DONTFORK
in one important way.

If a child process accesses memory that was MADV_WIPEONFORK, it
will get zeroes. The address ranges are still valid, they are just empty.

If a child process accesses memory that was MADV_DONTFORK, it will
get a segmentation fault, since those address ranges are no longer
valid in the child after fork.

Since MADV_DONTFORK also seems to be used to allow very large
programs to fork in systems with strict memory overcommit restrictions,
changing the semantics of MADV_DONTFORK might break existing programs.

The use case is libraries that store or cache information, and
want to know that they need to regenerate it in the child process
after fork.

Examples of this would be:
- systemd/pulseaudio API checks (fail after fork)
  (replacing a getpid check, which is too slow without a PID cache)
- PKCS#11 API reinitialization check (mandated by specification)
- glibc&#39;s upcoming PRNG (reseed after fork)
- OpenSSL PRNG (reseed after fork)

The security benefits of a forking server having a re-inialized
PRNG in every child process are pretty obvious. However, due to
libraries having all kinds of internal state, and programs getting
compiled with many different versions of each library, it is
unreasonable to expect calling programs to re-initialize everything
manually after fork.

A further complication is the proliferation of clone flags,
programs bypassing glibc&#39;s functions to call clone directly,
and programs calling unshare, causing the glibc pthread_atfork
hook to not get called.

It would be better to have the kernel take care of this automatically.

This is similar to the OpenBSD minherit syscall with MAP_INHERIT_ZERO:

    https://man.openbsd.org/minherit.2

Reported-by: Florian Weimer &lt;fweimer@redhat.com&gt;
Reported-by: Colm MacCÃ¡rtaigh &lt;colm@allcosts.net&gt;
<span class="signed-off-by">Signed-off-by: Rik van Riel &lt;riel@redhat.com&gt;</span>
---
 arch/alpha/include/uapi/asm/mman.h     |  3 +++
 arch/mips/include/uapi/asm/mman.h      |  3 +++
 arch/parisc/include/uapi/asm/mman.h    |  3 +++
 arch/xtensa/include/uapi/asm/mman.h    |  3 +++
 fs/proc/task_mmu.c                     |  1 +
 include/linux/mm.h                     |  2 +-
 include/uapi/asm-generic/mman-common.h |  3 +++
 kernel/fork.c                          |  8 ++++++--
 mm/madvise.c                           |  8 ++++++++
 mm/memory.c                            | 10 ++++++++++
 10 files changed, 41 insertions(+), 3 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=143191">kbuild test robot</a> - Aug. 5, 2017, 6:46 p.m.</div>
<pre class="content">
Hi Rik,

[auto build test ERROR on linus/master]
[also build test ERROR on v4.13-rc3 next-20170804]
[if your patch is applied to the wrong git tree, please drop us a note to help improve the system]

url:    https://github.com/0day-ci/linux/commits/riel-redhat-com/x86-mpx-make-mpx-depend-on-x86-64-to-free-up-VMA-flag/20170806-011851
config: xtensa-allmodconfig (attached as .config)
compiler: xtensa-linux-gcc (GCC) 4.9.0
reproduce:
        wget https://raw.githubusercontent.com/01org/lkp-tests/master/sbin/make.cross -O ~/bin/make.cross
        chmod +x ~/bin/make.cross
        # save the attached .config to linux build tree
        make.cross ARCH=xtensa 

All error/warnings (new ones prefixed by &gt;&gt;):

   In file included from mm/debug.c:12:0:
<span class="quote">&gt;&gt; include/trace/events/mmflags.h:131:31: error: &#39;VM_ARCH_2&#39; undeclared here (not in a function)</span>
    #define __VM_ARCH_SPECIFIC_2 {VM_ARCH_2, &quot;arch_2&quot; }
                                  ^
<span class="quote">&gt;&gt; include/trace/events/mmflags.h:165:2: note: in expansion of macro &#39;__VM_ARCH_SPECIFIC_2&#39;</span>
     __VM_ARCH_SPECIFIC_2    ,  \
     ^
<span class="quote">&gt;&gt; mm/debug.c:39:2: note: in expansion of macro &#39;__def_vmaflag_names&#39;</span>
     __def_vmaflag_names,
     ^

vim +/VM_ARCH_2 +131 include/trace/events/mmflags.h

bcf669179 Kirill A. Shutemov 2016-03-17  127  
bcf669179 Kirill A. Shutemov 2016-03-17  128  #if defined(CONFIG_X86)
bcf669179 Kirill A. Shutemov 2016-03-17  129  #define __VM_ARCH_SPECIFIC_2 {VM_MPX,		&quot;mpx&quot;		}
bcf669179 Kirill A. Shutemov 2016-03-17  130  #else
bcf669179 Kirill A. Shutemov 2016-03-17 @131  #define __VM_ARCH_SPECIFIC_2 {VM_ARCH_2,	&quot;arch_2&quot;	}
420adbe9f Vlastimil Babka    2016-03-15  132  #endif
420adbe9f Vlastimil Babka    2016-03-15  133  
420adbe9f Vlastimil Babka    2016-03-15  134  #ifdef CONFIG_MEM_SOFT_DIRTY
420adbe9f Vlastimil Babka    2016-03-15  135  #define IF_HAVE_VM_SOFTDIRTY(flag,name) {flag, name },
420adbe9f Vlastimil Babka    2016-03-15  136  #else
420adbe9f Vlastimil Babka    2016-03-15  137  #define IF_HAVE_VM_SOFTDIRTY(flag,name)
420adbe9f Vlastimil Babka    2016-03-15  138  #endif
420adbe9f Vlastimil Babka    2016-03-15  139  
420adbe9f Vlastimil Babka    2016-03-15  140  #define __def_vmaflag_names						\
420adbe9f Vlastimil Babka    2016-03-15  141  	{VM_READ,			&quot;read&quot;		},		\
420adbe9f Vlastimil Babka    2016-03-15  142  	{VM_WRITE,			&quot;write&quot;		},		\
420adbe9f Vlastimil Babka    2016-03-15  143  	{VM_EXEC,			&quot;exec&quot;		},		\
420adbe9f Vlastimil Babka    2016-03-15  144  	{VM_SHARED,			&quot;shared&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  145  	{VM_MAYREAD,			&quot;mayread&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  146  	{VM_MAYWRITE,			&quot;maywrite&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  147  	{VM_MAYEXEC,			&quot;mayexec&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  148  	{VM_MAYSHARE,			&quot;mayshare&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  149  	{VM_GROWSDOWN,			&quot;growsdown&quot;	},		\
bcf669179 Kirill A. Shutemov 2016-03-17  150  	{VM_UFFD_MISSING,		&quot;uffd_missing&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  151  	{VM_PFNMAP,			&quot;pfnmap&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  152  	{VM_DENYWRITE,			&quot;denywrite&quot;	},		\
bcf669179 Kirill A. Shutemov 2016-03-17  153  	{VM_UFFD_WP,			&quot;uffd_wp&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  154  	{VM_LOCKED,			&quot;locked&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  155  	{VM_IO,				&quot;io&quot;		},		\
420adbe9f Vlastimil Babka    2016-03-15  156  	{VM_SEQ_READ,			&quot;seqread&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  157  	{VM_RAND_READ,			&quot;randread&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  158  	{VM_DONTCOPY,			&quot;dontcopy&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  159  	{VM_DONTEXPAND,			&quot;dontexpand&quot;	},		\
bcf669179 Kirill A. Shutemov 2016-03-17  160  	{VM_LOCKONFAULT,		&quot;lockonfault&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  161  	{VM_ACCOUNT,			&quot;account&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  162  	{VM_NORESERVE,			&quot;noreserve&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  163  	{VM_HUGETLB,			&quot;hugetlb&quot;	},		\
bcf669179 Kirill A. Shutemov 2016-03-17  164  	__VM_ARCH_SPECIFIC_1				,		\
bcf669179 Kirill A. Shutemov 2016-03-17 @165  	__VM_ARCH_SPECIFIC_2				,		\
420adbe9f Vlastimil Babka    2016-03-15  166  	{VM_DONTDUMP,			&quot;dontdump&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  167  IF_HAVE_VM_SOFTDIRTY(VM_SOFTDIRTY,	&quot;softdirty&quot;	)		\
420adbe9f Vlastimil Babka    2016-03-15  168  	{VM_MIXEDMAP,			&quot;mixedmap&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  169  	{VM_HUGEPAGE,			&quot;hugepage&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  170  	{VM_NOHUGEPAGE,			&quot;nohugepage&quot;	},		\
420adbe9f Vlastimil Babka    2016-03-15  171  	{VM_MERGEABLE,			&quot;mergeable&quot;	}		\
420adbe9f Vlastimil Babka    2016-03-15  172  

:::::: The code at line 131 was first introduced by commit
:::::: bcf6691797f425b301f629bb783b7ff2d0bcfa5a mm, tracing: refresh __def_vmaflag_names

:::::: TO: Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt;
:::::: CC: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;

---
0-DAY kernel test infrastructure                Open Source Technology Center
https://lists.01.org/pipermail/kbuild-all                   Intel Corporation
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=143191">kbuild test robot</a> - Aug. 5, 2017, 7:33 p.m.</div>
<pre class="content">
Hi Rik,

[auto build test ERROR on linus/master]
[also build test ERROR on v4.13-rc3 next-20170804]
[if your patch is applied to the wrong git tree, please drop us a note to help improve the system]

url:    https://github.com/0day-ci/linux/commits/riel-redhat-com/x86-mpx-make-mpx-depend-on-x86-64-to-free-up-VMA-flag/20170806-011851
config: tile-allmodconfig (attached as .config)
compiler: tilegx-linux-gcc (GCC) 4.6.2
reproduce:
        wget https://raw.githubusercontent.com/01org/lkp-tests/master/sbin/make.cross -O ~/bin/make.cross
        chmod +x ~/bin/make.cross
        # save the attached .config to linux build tree
        make.cross ARCH=tile 

All errors (new ones prefixed by &gt;&gt;):
<span class="quote">
&gt;&gt; mm/debug.c:39:2: error: &#39;VM_ARCH_2&#39; undeclared here (not in a function)</span>

vim +/VM_ARCH_2 +39 mm/debug.c

420adbe9f Vlastimil Babka 2016-03-15  37  
edf14cdbf Vlastimil Babka 2016-03-15  38  const struct trace_print_flags vmaflag_names[] = {
edf14cdbf Vlastimil Babka 2016-03-15 @39  	__def_vmaflag_names,
edf14cdbf Vlastimil Babka 2016-03-15  40  	{0, NULL}
82742a3a5 Sasha Levin     2014-10-09  41  };
82742a3a5 Sasha Levin     2014-10-09  42  

:::::: The code at line 39 was first introduced by commit
:::::: edf14cdbf9a0e5ab52698ca66d07a76ade0d5c46 mm, printk: introduce new format string for flags

:::::: TO: Vlastimil Babka &lt;vbabka@suse.cz&gt;
:::::: CC: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;

---
0-DAY kernel test infrastructure                Open Source Technology Center
https://lists.01.org/pipermail/kbuild-all                   Intel Corporation
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/alpha/include/uapi/asm/mman.h b/arch/alpha/include/uapi/asm/mman.h</span>
<span class="p_header">index 02760f6e6ca4..2a708a792882 100644</span>
<span class="p_header">--- a/arch/alpha/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/alpha/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -64,6 +64,9 @@</span> <span class="p_context"></span>
 					   overrides the coredump filter bits */
 #define MADV_DODUMP	17		/* Clear the MADV_NODUMP flag */
 
<span class="p_add">+#define MADV_WIPEONFORK 18		/* Zero memory on fork, child only */</span>
<span class="p_add">+#define MADV_KEEPONFORK 19		/* Undo MADV_WIPEONFORK */</span>
<span class="p_add">+</span>
 /* compatibility flags */
 #define MAP_FILE	0
 
<span class="p_header">diff --git a/arch/mips/include/uapi/asm/mman.h b/arch/mips/include/uapi/asm/mman.h</span>
<span class="p_header">index 655e2fb5395b..d59c57d60d7d 100644</span>
<span class="p_header">--- a/arch/mips/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/mips/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -91,6 +91,9 @@</span> <span class="p_context"></span>
 					   overrides the coredump filter bits */
 #define MADV_DODUMP	17		/* Clear the MADV_NODUMP flag */
 
<span class="p_add">+#define MADV_WIPEONFORK 18		/* Zero memory on fork, child only */</span>
<span class="p_add">+#define MADV_KEEPONFORK 19		/* Undo MADV_WIPEONFORK */</span>
<span class="p_add">+</span>
 /* compatibility flags */
 #define MAP_FILE	0
 
<span class="p_header">diff --git a/arch/parisc/include/uapi/asm/mman.h b/arch/parisc/include/uapi/asm/mman.h</span>
<span class="p_header">index 5979745815a5..e205e0179642 100644</span>
<span class="p_header">--- a/arch/parisc/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/parisc/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -60,6 +60,9 @@</span> <span class="p_context"></span>
 					   overrides the coredump filter bits */
 #define MADV_DODUMP	70		/* Clear the MADV_NODUMP flag */
 
<span class="p_add">+#define MADV_WIPEONFORK 71		/* Zero memory on fork, child only */</span>
<span class="p_add">+#define MADV_KEEPONFORK 72		/* Undo MADV_WIPEONFORK */</span>
<span class="p_add">+</span>
 /* compatibility flags */
 #define MAP_FILE	0
 #define MAP_VARIABLE	0
<span class="p_header">diff --git a/arch/xtensa/include/uapi/asm/mman.h b/arch/xtensa/include/uapi/asm/mman.h</span>
<span class="p_header">index 24365b30aae9..ed23e0a1b30d 100644</span>
<span class="p_header">--- a/arch/xtensa/include/uapi/asm/mman.h</span>
<span class="p_header">+++ b/arch/xtensa/include/uapi/asm/mman.h</span>
<span class="p_chunk">@@ -103,6 +103,9 @@</span> <span class="p_context"></span>
 					   overrides the coredump filter bits */
 #define MADV_DODUMP	17		/* Clear the MADV_NODUMP flag */
 
<span class="p_add">+#define MADV_WIPEONFORK 18		/* Zero memory on fork, child only */</span>
<span class="p_add">+#define MADV_KEEPONFORK 19		/* Undo MADV_WIPEONFORK */</span>
<span class="p_add">+</span>
 /* compatibility flags */
 #define MAP_FILE	0
 
<span class="p_header">diff --git a/fs/proc/task_mmu.c b/fs/proc/task_mmu.c</span>
<span class="p_header">index b836fd61ed87..2591e70216ff 100644</span>
<span class="p_header">--- a/fs/proc/task_mmu.c</span>
<span class="p_header">+++ b/fs/proc/task_mmu.c</span>
<span class="p_chunk">@@ -651,6 +651,7 @@</span> <span class="p_context"> static void show_smap_vma_flags(struct seq_file *m, struct vm_area_struct *vma)</span>
 		[ilog2(VM_NORESERVE)]	= &quot;nr&quot;,
 		[ilog2(VM_HUGETLB)]	= &quot;ht&quot;,
 		[ilog2(VM_ARCH_1)]	= &quot;ar&quot;,
<span class="p_add">+		[ilog2(VM_WIPEONFORK)]	= &quot;wf&quot;,</span>
 		[ilog2(VM_DONTDUMP)]	= &quot;dd&quot;,
 #ifdef CONFIG_MEM_SOFT_DIRTY
 		[ilog2(VM_SOFTDIRTY)]	= &quot;sd&quot;,
<span class="p_header">diff --git a/include/linux/mm.h b/include/linux/mm.h</span>
<span class="p_header">index 7550eeb06ccf..58788c1b9e9d 100644</span>
<span class="p_header">--- a/include/linux/mm.h</span>
<span class="p_header">+++ b/include/linux/mm.h</span>
<span class="p_chunk">@@ -189,7 +189,7 @@</span> <span class="p_context"> extern unsigned int kobjsize(const void *objp);</span>
 #define VM_NORESERVE	0x00200000	/* should the VM suppress accounting */
 #define VM_HUGETLB	0x00400000	/* Huge TLB Page VM */
 #define VM_ARCH_1	0x01000000	/* Architecture-specific flag */
<span class="p_del">-#define VM_ARCH_2	0x02000000</span>
<span class="p_add">+#define VM_WIPEONFORK	0x02000000	/* Wipe VMA contents in child. */</span>
 #define VM_DONTDUMP	0x04000000	/* Do not include in the core dump */
 
 #ifdef CONFIG_MEM_SOFT_DIRTY
<span class="p_header">diff --git a/include/uapi/asm-generic/mman-common.h b/include/uapi/asm-generic/mman-common.h</span>
<span class="p_header">index 8c27db0c5c08..49e2b1d78093 100644</span>
<span class="p_header">--- a/include/uapi/asm-generic/mman-common.h</span>
<span class="p_header">+++ b/include/uapi/asm-generic/mman-common.h</span>
<span class="p_chunk">@@ -58,6 +58,9 @@</span> <span class="p_context"></span>
 					   overrides the coredump filter bits */
 #define MADV_DODUMP	17		/* Clear the MADV_DONTDUMP flag */
 
<span class="p_add">+#define MADV_WIPEONFORK 18		/* Zero memory on fork, child only */</span>
<span class="p_add">+#define MADV_KEEPONFORK 19		/* Undo MADV_WIPEONFORK */</span>
<span class="p_add">+</span>
 /* compatibility flags */
 #define MAP_FILE	0
 
<span class="p_header">diff --git a/kernel/fork.c b/kernel/fork.c</span>
<span class="p_header">index 17921b0390b4..2dd0d0cae3bb 100644</span>
<span class="p_header">--- a/kernel/fork.c</span>
<span class="p_header">+++ b/kernel/fork.c</span>
<span class="p_chunk">@@ -628,7 +628,7 @@</span> <span class="p_context"> static __latent_entropy int dup_mmap(struct mm_struct *mm,</span>
 
 	prev = NULL;
 	for (mpnt = oldmm-&gt;mmap; mpnt; mpnt = mpnt-&gt;vm_next) {
<span class="p_del">-		struct file *file;</span>
<span class="p_add">+		struct file *file = NULL;</span>
 
 		if (mpnt-&gt;vm_flags &amp; VM_DONTCOPY) {
 			vm_stat_account(mm, mpnt-&gt;vm_flags, -vma_pages(mpnt));
<span class="p_chunk">@@ -658,7 +658,11 @@</span> <span class="p_context"> static __latent_entropy int dup_mmap(struct mm_struct *mm,</span>
 			goto fail_nomem_anon_vma_fork;
 		tmp-&gt;vm_flags &amp;= ~(VM_LOCKED | VM_LOCKONFAULT);
 		tmp-&gt;vm_next = tmp-&gt;vm_prev = NULL;
<span class="p_del">-		file = tmp-&gt;vm_file;</span>
<span class="p_add">+</span>
<span class="p_add">+		/* With VM_WIPEONFORK, the child gets an empty VMA. */</span>
<span class="p_add">+		if (!(tmp-&gt;vm_flags &amp; VM_WIPEONFORK))</span>
<span class="p_add">+			file = tmp-&gt;vm_file;</span>
<span class="p_add">+</span>
 		if (file) {
 			struct inode *inode = file_inode(file);
 			struct address_space *mapping = file-&gt;f_mapping;
<span class="p_header">diff --git a/mm/madvise.c b/mm/madvise.c</span>
<span class="p_header">index 9976852f1e1c..9e644c0ed4dc 100644</span>
<span class="p_header">--- a/mm/madvise.c</span>
<span class="p_header">+++ b/mm/madvise.c</span>
<span class="p_chunk">@@ -80,6 +80,12 @@</span> <span class="p_context"> static long madvise_behavior(struct vm_area_struct *vma,</span>
 		}
 		new_flags &amp;= ~VM_DONTCOPY;
 		break;
<span class="p_add">+	case MADV_WIPEONFORK:</span>
<span class="p_add">+		new_flags |= VM_WIPEONFORK;</span>
<span class="p_add">+		break;</span>
<span class="p_add">+	case MADV_KEEPONFORK:</span>
<span class="p_add">+		new_flags &amp;= ~VM_WIPEONFORK;</span>
<span class="p_add">+		break;</span>
 	case MADV_DONTDUMP:
 		new_flags |= VM_DONTDUMP;
 		break;
<span class="p_chunk">@@ -689,6 +695,8 @@</span> <span class="p_context"> madvise_behavior_valid(int behavior)</span>
 #endif
 	case MADV_DONTDUMP:
 	case MADV_DODUMP:
<span class="p_add">+	case MADV_WIPEONFORK:</span>
<span class="p_add">+	case MADV_KEEPONFORK:</span>
 #ifdef CONFIG_MEMORY_FAILURE
 	case MADV_SOFT_OFFLINE:
 	case MADV_HWPOISON:
<span class="p_header">diff --git a/mm/memory.c b/mm/memory.c</span>
<span class="p_header">index 0e517be91a89..f9b0ad7feb57 100644</span>
<span class="p_header">--- a/mm/memory.c</span>
<span class="p_header">+++ b/mm/memory.c</span>
<span class="p_chunk">@@ -1134,6 +1134,16 @@</span> <span class="p_context"> int copy_page_range(struct mm_struct *dst_mm, struct mm_struct *src_mm,</span>
 			!vma-&gt;anon_vma)
 		return 0;
 
<span class="p_add">+	/*</span>
<span class="p_add">+	 * With VM_WIPEONFORK, the child inherits the VMA from the</span>
<span class="p_add">+	 * parent, but not its contents.</span>
<span class="p_add">+	 *</span>
<span class="p_add">+	 * A child accessing VM_WIPEONFORK memory will see all zeroes;</span>
<span class="p_add">+	 * a child accessing VM_DONTCOPY memory receives a segfault.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	if (vma-&gt;vm_flags &amp; VM_WIPEONFORK)</span>
<span class="p_add">+		return 0;</span>
<span class="p_add">+</span>
 	if (is_vm_hugetlb_page(vma))
 		return copy_hugetlb_page_range(dst_mm, src_mm, vma);
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



