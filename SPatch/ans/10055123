
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>mm/hugetlb: Implement ASLR and topdown for hugetlb mappings - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    mm/hugetlb: Implement ASLR and topdown for hugetlb mappings</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=175993">Zhang, Shile (NSB - CN/Hangzhou)</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 13, 2017, 5:32 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;VI1PR0701MB2846C892037A515D0B3F4EF8A12B0@VI1PR0701MB2846.eurprd07.prod.outlook.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10055123/mbox/"
   >mbox</a>
|
   <a href="/patch/10055123/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10055123/">/patch/10055123/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	D542F60586 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 13 Nov 2017 05:32:34 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C84762917C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 13 Nov 2017 05:32:34 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id BC0122917E; Mon, 13 Nov 2017 05:32:34 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5B5932917C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 13 Nov 2017 05:32:33 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751951AbdKMFcb (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 13 Nov 2017 00:32:31 -0500
Received: from mail-he1eur01on0111.outbound.protection.outlook.com
	([104.47.0.111]:61750
	&quot;EHLO EUR01-HE1-obe.outbound.protection.outlook.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1751887AbdKMFca (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 13 Nov 2017 00:32:30 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nokia.onmicrosoft.com;
	s=selector2-nokia-onmicrosoft-com;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version;
	bh=imjKQ3QEmRkisik9zjRe9e5Coz4Oldw0DLW8LamUWBc=;
	b=NK538Orf6itfIQHJQx/0auOKl4gfP0IH2UxC+qwIWWarH+GZ96KFc5z6ZTxF43KhSOdlS1eupVPsYU0LlsVFJmUz8+oX5XFypFyVUVZcCG8vx2PZCLK9i2TSXxu8l7TQrn3uG9HVoYR56eb8NeT7TJeKeYWqXleQjYiajrIB1Sg=
Received: from VI1PR0701MB2846.eurprd07.prod.outlook.com (10.173.71.141) by
	VI1PR0701MB2847.eurprd07.prod.outlook.com (10.173.71.142) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P384) id
	15.20.239.4; Mon, 13 Nov 2017 05:32:26 +0000
Received: from VI1PR0701MB2846.eurprd07.prod.outlook.com
	([fe80::f4f7:c06e:f85a:cf7a]) by
	VI1PR0701MB2846.eurprd07.prod.outlook.com
	([fe80::f4f7:c06e:f85a:cf7a%15]) with mapi id 15.20.0239.004;
	Mon, 13 Nov 2017 05:32:26 +0000
From: &quot;Zhang, Shile (NSB - CN/Hangzhou)&quot; &lt;shile.zhang@nokia-sbell.com&gt;
To: Russell King &lt;linux@armlinux.org.uk&gt;
CC: &quot;linux-kernel@vger.kernel.org&quot; &lt;linux-kernel@vger.kernel.org&gt;,
	&quot;linux-arm-kernel@lists.infradead.org&quot; 
	&lt;linux-arm-kernel@lists.infradead.org&gt;
Subject: RE: [PATCH] mm/hugetlb: Implement ASLR and topdown for hugetlb
	mappings
Thread-Topic: [PATCH] mm/hugetlb: Implement ASLR and topdown for hugetlb
	mappings
Thread-Index: AQHTVIT81tf+ySpvtUyIfKL/J47BkaMR1yPA
Date: Mon, 13 Nov 2017 05:32:26 +0000
Message-ID: &lt;VI1PR0701MB2846C892037A515D0B3F4EF8A12B0@VI1PR0701MB2846.eurprd07.prod.outlook.com&gt;
References: &lt;1509700757-34420-1-git-send-email-shile.zhang@nokia-sbell.com&gt;
In-Reply-To: &lt;1509700757-34420-1-git-send-email-shile.zhang@nokia-sbell.com&gt;
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
authentication-results: spf=none (sender IP is )
	smtp.mailfrom=shile.zhang@nokia-sbell.com; 
x-originating-ip: [131.228.32.182]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 1; VI1PR0701MB2847;
	6:Bmq3MoE+i1ntMZ4/mXacY+JMnxj4iOgvDJ4zdKPhqnFyCZ51SyhCHzMFqTX0Akl1q2sJWbzXSLDHu3GL+6DSsgQwObrWx+1NI6FJeMdCYbnZLaB8jgZc04isIuEpmvMLPhuyGSmV2LN5kSppXSA4MmKhdMBn80u1FKukEj3fufyeg/tl9XC0cZ6e4br64R906hZqmGwZWjlQfkhidZHGhWU1ea3ORTFwKM+7zjhQtm0sFYRyTbvJdauwjG9aSZ4YrckgjCAhRytnxn5MoP/9E08pqFhrfpG3QlhV/il56zQn7D8hQH8lNlq3DEBk0tVj5x1qo2s9CysS7QGL5yhxw0emsga7seeTLGKC3Z0iuWA=;
	5:Tl/gr6USSfCcFG2p5trq5mFnc1iiONvmsWD3+jXqqrELtXs/3FVimlut/8U33ZLFiAr6viBrwxLSvr69pkOiOciNCGbG6Asu5yUREUEzB0La+tbsljwkYRH7yk11suGk7fDwSjDkNNh+DIujAHF35xQY1ZApkNgSkH1HH52LqHw=;
	24:oPsu0pGoRcB5qKV0iivnuiAs2yruZ2Ed7tFfhKein+3maxe+LtmCzPc+R1oflzS550DsuPYfNMtk4Mocnp8mIhxQ+qZjHtdYi8Yfl+6o9vQ=;
	7:UTlzqECbKSjAV/ewki6R5QYq+ZarXM1aWWok52ap5bj3ekW+Um5OlDv5YC8vwGhtcKTIqB2HfesSN1N+LNVKFYe3noZrGF0ThKyQtPtU1Jk99XTAuTjqVB65wWyLXLySUmm2brfdfhHNXRIVUmSlL2Xz5ua+JE0DRVSNi8m4lJFI3QDYGtTpGlzrlGhynVaXY3ECB+R9GqOtZnLdEUcv6zyc+aECEMoRUJgJv9g5XLffBiK7J4NOSYeG/pPT27LQ
x-ms-exchange-antispam-srfa-diagnostics: SSOS;
x-ms-office365-filtering-correlation-id: 69990bca-27f7-4c71-4545-08d52a57ecf8
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: UriScan:; BCL:0; PCL:0;
	RULEID:(22001)(48565401081)(4534020)(4602075)(4627115)(201703031133081)(201702281549075)(2017052603199);
	SRVR:VI1PR0701MB2847; 
x-ms-traffictypediagnostic: VI1PR0701MB2847:
x-microsoft-antispam-prvs: &lt;VI1PR0701MB28479CA092D0AFC11AEA2802A12B0@VI1PR0701MB2847.eurprd07.prod.outlook.com&gt;
x-exchange-antispam-report-test: UriScan:(9452136761055);
x-exchange-antispam-report-cfa-test: BCL:0; PCL:0;
	RULEID:(100000700101)(100105000095)(100000701101)(100105300095)(100000702101)(100105100095)(6040450)(2401047)(5005006)(8121501046)(10201501046)(100000703101)(100105400095)(93006095)(93001095)(3231022)(3002001)(6055026)(6041248)(20161123564025)(20161123560025)(201703131423075)(201702281528075)(201703061421075)(201703061406153)(20161123558100)(20161123562025)(20161123555025)(6072148)(201708071742011)(100000704101)(100105200095)(100000705101)(100105500095);
	SRVR:VI1PR0701MB2847; BCL:0; PCL:0;
	RULEID:(100000800101)(100110000095)(100000801101)(100110300095)(100000802101)(100110100095)(100000803101)(100110400095)(100000804101)(100110200095)(100000805101)(100110500095);
	SRVR:VI1PR0701MB2847; 
x-forefront-prvs: 0490BBA1F0
x-forefront-antispam-report: SFV:NSPM;
	SFS:(10019020)(6009001)(346002)(376002)(39860400002)(199003)(13464003)(189002)(7696004)(7736002)(2950100002)(3660700001)(2906002)(5250100002)(8936002)(9686003)(66066001)(55016002)(105586002)(6916009)(8676002)(6116002)(3846002)(50986999)(54356999)(76176999)(81166006)(81156014)(6246003)(106356001)(53936002)(102836003)(25786009)(3280700002)(4326008)(189998001)(101416001)(99286004)(575784001)(86362001)(14454004)(97736004)(478600001)(6506006)(6436002)(74316002)(54906003)(316002)(53546010)(305945005)(68736007)(33656002)(2900100001)(229853002)(5660300001);
	DIR:OUT; SFP:1102; SCL:1; SRVR:VI1PR0701MB2847;
	H:VI1PR0701MB2846.eurprd07.prod.outlook.com; FPR:; SPF:None;
	PTR:InfoNoRecords; A:0; MX:1; LANG:en; 
received-spf: None (protection.outlook.com: nokia-sbell.com does not
	designate permitted sender hosts)
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset=&quot;us-ascii&quot;
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-OriginatorOrg: nokia-sbell.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 69990bca-27f7-4c71-4545-08d52a57ecf8
X-MS-Exchange-CrossTenant-originalarrivaltime: 13 Nov 2017 05:32:26.7289
	(UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 5d471751-9675-428d-917b-70f44f9630b0
X-MS-Exchange-Transport-CrossTenantHeadersStamped: VI1PR0701MB2847
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=175993">Zhang, Shile (NSB - CN/Hangzhou)</a> - Nov. 13, 2017, 5:32 a.m.</div>
<pre class="content">
Hi, Russell,

Have you any time to check this patch?
I found this issue/missing in my works, the application cannot mmap big hugepage (about 360MB) due to no more contiguous vm from the default &quot;TASK_UNMMAPPED_AREA&quot; by legacy bottom-up.
We need this patch to fix this issue.

Could you please help check this patch?

Thanks!

BR, Shile

-----Original Message-----
<span class="from">From: Shile Zhang [mailto:shile.zhang@nokia-sbell.com] </span>
Sent: Friday, November 03, 2017 5:19 PM
To: Russell King &lt;linux@armlinux.org.uk&gt;
Cc: linux-kernel@vger.kernel.org; Zhang, Shile (NSB - CN/Hangzhou) &lt;shile.zhang@nokia-sbell.com&gt;
Subject: [PATCH] mm/hugetlb: Implement ASLR and topdown for hugetlb mappings

merge from arch/x86
<span class="signed-off-by">
Signed-off-by: Shile Zhang &lt;shile.zhang@nokia-sbell.com&gt;</span>
---
 arch/arm/include/asm/page.h |  1 +
 arch/arm/mm/hugetlbpage.c   | 85 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 86 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm/include/asm/page.h b/arch/arm/include/asm/page.h</span>
<span class="p_header">index 4355f0e..994630f 100644</span>
<span class="p_header">--- a/arch/arm/include/asm/page.h</span>
<span class="p_header">+++ b/arch/arm/include/asm/page.h</span>
<span class="p_chunk">@@ -144,6 +144,7 @@</span> <span class="p_context"> extern void copy_page(void *to, const void *from);</span>
 
 #ifdef CONFIG_KUSER_HELPERS
 #define __HAVE_ARCH_GATE_AREA 1
<span class="p_add">+#define HAVE_ARCH_HUGETLB_UNMAPPED_AREA</span>
 #endif
 
 #ifdef CONFIG_ARM_LPAE
<span class="p_header">diff --git a/arch/arm/mm/hugetlbpage.c b/arch/arm/mm/hugetlbpage.c</span>
<span class="p_header">index fcafb52..46ed0c8 100644</span>
<span class="p_header">--- a/arch/arm/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/arm/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -45,3 +45,88 @@</span> <span class="p_context"> int pmd_huge(pmd_t pmd)</span>
 {
 	return pmd_val(pmd) &amp;&amp; !(pmd_val(pmd) &amp; PMD_TABLE_BIT);
 }
<span class="p_add">+</span>
<span class="p_add">+#ifdef CONFIG_HUGETLB_PAGE</span>
<span class="p_add">+static unsigned long hugetlb_get_unmapped_area_bottomup(struct file *file,</span>
<span class="p_add">+		unsigned long addr, unsigned long len,</span>
<span class="p_add">+		unsigned long pgoff, unsigned long flags)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct hstate *h = hstate_file(file);</span>
<span class="p_add">+	struct vm_unmapped_area_info info;</span>
<span class="p_add">+</span>
<span class="p_add">+	info.flags = 0;</span>
<span class="p_add">+	info.length = len;</span>
<span class="p_add">+	info.low_limit = current-&gt;mm-&gt;mmap_legacy_base;</span>
<span class="p_add">+	info.high_limit = TASK_SIZE;</span>
<span class="p_add">+	info.align_mask = PAGE_MASK &amp; ~huge_page_mask(h);</span>
<span class="p_add">+	info.align_offset = 0;</span>
<span class="p_add">+	return vm_unmapped_area(&amp;info);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static unsigned long hugetlb_get_unmapped_area_topdown(struct file *file,</span>
<span class="p_add">+		unsigned long addr0, unsigned long len,</span>
<span class="p_add">+		unsigned long pgoff, unsigned long flags)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct hstate *h = hstate_file(file);</span>
<span class="p_add">+	struct vm_unmapped_area_info info;</span>
<span class="p_add">+	unsigned long addr;</span>
<span class="p_add">+</span>
<span class="p_add">+	info.flags = VM_UNMAPPED_AREA_TOPDOWN;</span>
<span class="p_add">+	info.length = len;</span>
<span class="p_add">+	info.low_limit = PAGE_SIZE;</span>
<span class="p_add">+	info.high_limit = current-&gt;mm-&gt;mmap_base;</span>
<span class="p_add">+	info.align_mask = PAGE_MASK &amp; ~huge_page_mask(h);</span>
<span class="p_add">+	info.align_offset = 0;</span>
<span class="p_add">+	addr = vm_unmapped_area(&amp;info);</span>
<span class="p_add">+</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * A failed mmap() very likely causes application failure,</span>
<span class="p_add">+	 * so fall back to the bottom-up function here. This scenario</span>
<span class="p_add">+	 * can happen with large stack limits and large mmap()</span>
<span class="p_add">+	 * allocations.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	if (addr &amp; ~PAGE_MASK) {</span>
<span class="p_add">+		VM_BUG_ON(addr != -ENOMEM);</span>
<span class="p_add">+		info.flags = 0;</span>
<span class="p_add">+		info.low_limit = TASK_UNMAPPED_BASE;</span>
<span class="p_add">+		info.high_limit = TASK_SIZE;</span>
<span class="p_add">+		addr = vm_unmapped_area(&amp;info);</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	return addr;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+unsigned long</span>
<span class="p_add">+hugetlb_get_unmapped_area(struct file *file, unsigned long addr,</span>
<span class="p_add">+		unsigned long len, unsigned long pgoff, unsigned long flags)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct hstate *h = hstate_file(file);</span>
<span class="p_add">+	struct mm_struct *mm = current-&gt;mm;</span>
<span class="p_add">+	struct vm_area_struct *vma;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (len &amp; ~huge_page_mask(h))</span>
<span class="p_add">+		return -EINVAL;</span>
<span class="p_add">+	if (len &gt; TASK_SIZE)</span>
<span class="p_add">+		return -ENOMEM;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (flags &amp; MAP_FIXED) {</span>
<span class="p_add">+		if (prepare_hugepage_range(file, addr, len))</span>
<span class="p_add">+			return -EINVAL;</span>
<span class="p_add">+		return addr;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	if (addr) {</span>
<span class="p_add">+		addr = ALIGN(addr, huge_page_size(h));</span>
<span class="p_add">+		vma = find_vma(mm, addr);</span>
<span class="p_add">+		if (TASK_SIZE - len &gt;= addr &amp;&amp;</span>
<span class="p_add">+		    (!vma || addr + len &lt;= vma-&gt;vm_start))</span>
<span class="p_add">+			return addr;</span>
<span class="p_add">+	}</span>
<span class="p_add">+	if (mm-&gt;get_unmapped_area == arch_get_unmapped_area)</span>
<span class="p_add">+		return hugetlb_get_unmapped_area_bottomup(file, addr, len,</span>
<span class="p_add">+				pgoff, flags);</span>
<span class="p_add">+	else</span>
<span class="p_add">+		return hugetlb_get_unmapped_area_topdown(file, addr, len,</span>
<span class="p_add">+				pgoff, flags);</span>
<span class="p_add">+}</span>
<span class="p_add">+#endif /* CONFIG_HUGETLB_PAGE */</span>

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



