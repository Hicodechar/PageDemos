
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[tip:x86/microcode] x86/microcode/intel: Rename mc_intel variable to mc - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [tip:x86/microcode] x86/microcode/intel: Rename mc_intel variable to mc</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 9, 2016, 12:23 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;tip-de778275c295825e6638f3f74103f40642d45caa@git.kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8261341/mbox/"
   >mbox</a>
|
   <a href="/patch/8261341/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8261341/">/patch/8261341/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 4CD69BEEE5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  9 Feb 2016 12:24:01 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 4A31B2025A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  9 Feb 2016 12:24:00 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 18C4D20260
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  9 Feb 2016 12:23:59 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1757024AbcBIMX4 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 9 Feb 2016 07:23:56 -0500
Received: from terminus.zytor.com ([198.137.202.10]:36202 &quot;EHLO
	terminus.zytor.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1756999AbcBIMXx (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 9 Feb 2016 07:23:53 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
	by terminus.zytor.com (8.14.8/8.14.7) with ESMTP id u19CNI8e018351;
	Tue, 9 Feb 2016 04:23:23 -0800
Received: (from tipbot@localhost)
	by terminus.zytor.com (8.14.8/8.14.7/Submit) id u19CNIgu018348;
	Tue, 9 Feb 2016 04:23:18 -0800
Date: Tue, 9 Feb 2016 04:23:18 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to
	tipbot@zytor.com using -f
From: tip-bot for Borislav Petkov &lt;tipbot@zytor.com&gt;
Message-ID: &lt;tip-de778275c295825e6638f3f74103f40642d45caa@git.kernel.org&gt;
Cc: torvalds@linux-foundation.org, tglx@linutronix.de,
	linux-kernel@vger.kernel.org, peterz@infradead.org, bp@suse.de,
	mingo@kernel.org, tv@lio96.de, hpa@zytor.com
Reply-To: tv@lio96.de, hpa@zytor.com, mingo@kernel.org,
	linux-kernel@vger.kernel.org, peterz@infradead.org,
	tglx@linutronix.de, bp@suse.de, torvalds@linux-foundation.org
In-Reply-To: &lt;1454499225-21544-10-git-send-email-bp@alien8.de&gt;
References: &lt;1454499225-21544-10-git-send-email-bp@alien8.de&gt;
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/microcode] x86/microcode/intel:
	Rename mc_intel variable to mc
Git-Commit-ID: de778275c295825e6638f3f74103f40642d45caa
X-Mailer: tip-git-log-daemon
Robot-ID: &lt;tip-bot.git.kernel.org&gt;
Robot-Unsubscribe: Contact &lt;mailto:hpa@kernel.org&gt;
	to get blacklisted from these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=-7.2 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a> - Feb. 9, 2016, 12:23 p.m.</div>
<pre class="content">
Commit-ID:  de778275c295825e6638f3f74103f40642d45caa
Gitweb:     http://git.kernel.org/tip/de778275c295825e6638f3f74103f40642d45caa
Author:     Borislav Petkov &lt;bp@suse.de&gt;
AuthorDate: Wed, 3 Feb 2016 12:33:37 +0100
Committer:  Ingo Molnar &lt;mingo@kernel.org&gt;
CommitDate: Tue, 9 Feb 2016 11:41:17 +0100

x86/microcode/intel: Rename mc_intel variable to mc

Well, it is apparent what it points to - microcode. And since it is the
intel loader, no need for the &quot;_intel&quot; suffix. Use &quot;!&quot; for the 0/NULL
checks, while at it.

No functionality change.
<span class="tested-by">
Tested-by: Thomas Voegtle &lt;tv@lio96.de&gt;</span>
<span class="signed-off-by">Signed-off-by: Borislav Petkov &lt;bp@suse.de&gt;</span>
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Link: http://lkml.kernel.org/r/1454499225-21544-10-git-send-email-bp@alien8.de
<span class="signed-off-by">Signed-off-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
---
 arch/x86/kernel/cpu/microcode/intel.c | 58 +++++++++++++++++------------------
 1 file changed, 29 insertions(+), 29 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/kernel/cpu/microcode/intel.c b/arch/x86/kernel/cpu/microcode/intel.c</span>
<span class="p_header">index 9f5fe72..d1b2f58 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/microcode/intel.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/microcode/intel.c</span>
<span class="p_chunk">@@ -601,19 +601,19 @@</span> <span class="p_context"> void show_ucode_info_early(void)</span>
  */
 static void print_ucode(struct ucode_cpu_info *uci)
 {
<span class="p_del">-	struct microcode_intel *mc_intel;</span>
<span class="p_add">+	struct microcode_intel *mc;</span>
 	int *delay_ucode_info_p;
 	int *current_mc_date_p;
 
<span class="p_del">-	mc_intel = uci-&gt;mc;</span>
<span class="p_del">-	if (mc_intel == NULL)</span>
<span class="p_add">+	mc = uci-&gt;mc;</span>
<span class="p_add">+	if (!mc)</span>
 		return;
 
 	delay_ucode_info_p = (int *)__pa_nodebug(&amp;delay_ucode_info);
 	current_mc_date_p = (int *)__pa_nodebug(&amp;current_mc_date);
 
 	*delay_ucode_info_p = 1;
<span class="p_del">-	*current_mc_date_p = mc_intel-&gt;hdr.date;</span>
<span class="p_add">+	*current_mc_date_p = mc-&gt;hdr.date;</span>
 }
 #else
 
<span class="p_chunk">@@ -628,29 +628,29 @@</span> <span class="p_context"> static inline void flush_tlb_early(void)</span>
 
 static inline void print_ucode(struct ucode_cpu_info *uci)
 {
<span class="p_del">-	struct microcode_intel *mc_intel;</span>
<span class="p_add">+	struct microcode_intel *mc;</span>
 
<span class="p_del">-	mc_intel = uci-&gt;mc;</span>
<span class="p_del">-	if (mc_intel == NULL)</span>
<span class="p_add">+	mc = uci-&gt;mc;</span>
<span class="p_add">+	if (!mc)</span>
 		return;
 
<span class="p_del">-	print_ucode_info(uci, mc_intel-&gt;hdr.date);</span>
<span class="p_add">+	print_ucode_info(uci, mc-&gt;hdr.date);</span>
 }
 #endif
 
 static int apply_microcode_early(struct ucode_cpu_info *uci, bool early)
 {
<span class="p_del">-	struct microcode_intel *mc_intel;</span>
<span class="p_add">+	struct microcode_intel *mc;</span>
 	unsigned int val[2];
 
<span class="p_del">-	mc_intel = uci-&gt;mc;</span>
<span class="p_del">-	if (mc_intel == NULL)</span>
<span class="p_add">+	mc = uci-&gt;mc;</span>
<span class="p_add">+	if (!mc)</span>
 		return 0;
 
 	/* write microcode via MSR 0x79 */
 	native_wrmsr(MSR_IA32_UCODE_WRITE,
<span class="p_del">-	      (unsigned long) mc_intel-&gt;bits,</span>
<span class="p_del">-	      (unsigned long) mc_intel-&gt;bits &gt;&gt; 16 &gt;&gt; 16);</span>
<span class="p_add">+	      (unsigned long)mc-&gt;bits,</span>
<span class="p_add">+	      (unsigned long)mc-&gt;bits &gt;&gt; 16 &gt;&gt; 16);</span>
 	native_wrmsr(MSR_IA32_UCODE_REV, 0, 0);
 
 	/* As documented in the SDM: Do a CPUID 1 here */
<span class="p_chunk">@@ -658,7 +658,7 @@</span> <span class="p_context"> static int apply_microcode_early(struct ucode_cpu_info *uci, bool early)</span>
 
 	/* get the current revision from MSR 0x8B */
 	native_rdmsr(MSR_IA32_UCODE_REV, val[0], val[1]);
<span class="p_del">-	if (val[1] != mc_intel-&gt;hdr.rev)</span>
<span class="p_add">+	if (val[1] != mc-&gt;hdr.rev)</span>
 		return -1;
 
 #ifdef CONFIG_X86_64
<span class="p_chunk">@@ -670,7 +670,7 @@</span> <span class="p_context"> static int apply_microcode_early(struct ucode_cpu_info *uci, bool early)</span>
 	if (early)
 		print_ucode(uci);
 	else
<span class="p_del">-		print_ucode_info(uci, mc_intel-&gt;hdr.date);</span>
<span class="p_add">+		print_ucode_info(uci, mc-&gt;hdr.date);</span>
 
 	return 0;
 }
<span class="p_chunk">@@ -821,7 +821,7 @@</span> <span class="p_context"> static int collect_cpu_info(int cpu_num, struct cpu_signature *csig)</span>
  * return 0 - no update found
  * return 1 - found update
  */
<span class="p_del">-static int get_matching_mc(struct microcode_intel *mc_intel, int cpu)</span>
<span class="p_add">+static int get_matching_mc(struct microcode_intel *mc, int cpu)</span>
 {
 	struct cpu_signature cpu_sig;
 	unsigned int csig, cpf, crev;
<span class="p_chunk">@@ -832,38 +832,38 @@</span> <span class="p_context"> static int get_matching_mc(struct microcode_intel *mc_intel, int cpu)</span>
 	cpf = cpu_sig.pf;
 	crev = cpu_sig.rev;
 
<span class="p_del">-	return has_newer_microcode(mc_intel, csig, cpf, crev);</span>
<span class="p_add">+	return has_newer_microcode(mc, csig, cpf, crev);</span>
 }
 
 static int apply_microcode_intel(int cpu)
 {
<span class="p_del">-	struct microcode_intel *mc_intel;</span>
<span class="p_add">+	struct microcode_intel *mc;</span>
 	struct ucode_cpu_info *uci;
 	unsigned int val[2];
 	int cpu_num = raw_smp_processor_id();
 	struct cpuinfo_x86 *c = &amp;cpu_data(cpu_num);
 
 	uci = ucode_cpu_info + cpu;
<span class="p_del">-	mc_intel = uci-&gt;mc;</span>
<span class="p_add">+	mc = uci-&gt;mc;</span>
 
 	/* We should bind the task to the CPU */
 	BUG_ON(cpu_num != cpu);
 
<span class="p_del">-	if (mc_intel == NULL)</span>
<span class="p_add">+	if (!mc)</span>
 		return 0;
 
 	/*
 	 * Microcode on this CPU could be updated earlier. Only apply the
<span class="p_del">-	 * microcode patch in mc_intel when it is newer than the one on this</span>
<span class="p_add">+	 * microcode patch in mc when it is newer than the one on this</span>
 	 * CPU.
 	 */
<span class="p_del">-	if (get_matching_mc(mc_intel, cpu) == 0)</span>
<span class="p_add">+	if (!get_matching_mc(mc, cpu))</span>
 		return 0;
 
 	/* write microcode via MSR 0x79 */
 	wrmsr(MSR_IA32_UCODE_WRITE,
<span class="p_del">-	      (unsigned long) mc_intel-&gt;bits,</span>
<span class="p_del">-	      (unsigned long) mc_intel-&gt;bits &gt;&gt; 16 &gt;&gt; 16);</span>
<span class="p_add">+	      (unsigned long) mc-&gt;bits,</span>
<span class="p_add">+	      (unsigned long) mc-&gt;bits &gt;&gt; 16 &gt;&gt; 16);</span>
 	wrmsr(MSR_IA32_UCODE_REV, 0, 0);
 
 	/* As documented in the SDM: Do a CPUID 1 here */
<span class="p_chunk">@@ -872,16 +872,16 @@</span> <span class="p_context"> static int apply_microcode_intel(int cpu)</span>
 	/* get the current revision from MSR 0x8B */
 	rdmsr(MSR_IA32_UCODE_REV, val[0], val[1]);
 
<span class="p_del">-	if (val[1] != mc_intel-&gt;hdr.rev) {</span>
<span class="p_add">+	if (val[1] != mc-&gt;hdr.rev) {</span>
 		pr_err(&quot;CPU%d update to revision 0x%x failed\n&quot;,
<span class="p_del">-		       cpu_num, mc_intel-&gt;hdr.rev);</span>
<span class="p_add">+		       cpu_num, mc-&gt;hdr.rev);</span>
 		return -1;
 	}
 	pr_info(&quot;CPU%d updated to revision 0x%x, date = %04x-%02x-%02x\n&quot;,
 		cpu_num, val[1],
<span class="p_del">-		mc_intel-&gt;hdr.date &amp; 0xffff,</span>
<span class="p_del">-		mc_intel-&gt;hdr.date &gt;&gt; 24,</span>
<span class="p_del">-		(mc_intel-&gt;hdr.date &gt;&gt; 16) &amp; 0xff);</span>
<span class="p_add">+		mc-&gt;hdr.date &amp; 0xffff,</span>
<span class="p_add">+		mc-&gt;hdr.date &gt;&gt; 24,</span>
<span class="p_add">+		(mc-&gt;hdr.date &gt;&gt; 16) &amp; 0xff);</span>
 
 	uci-&gt;cpu_sig.rev = val[1];
 	c-&gt;microcode = val[1];

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



