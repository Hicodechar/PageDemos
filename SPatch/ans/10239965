
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[09/10] iommu/amd: declare irq_remap_table&#39;s and amd_iommu&#39;s lock as a raw_spin_lock - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [09/10] iommu/amd: declare irq_remap_table&#39;s and amd_iommu&#39;s lock as a raw_spin_lock</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=481">Sebastian Andrzej Siewior</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 23, 2018, 10:27 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180223222736.18542-10-bigeasy@linutronix.de&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10239965/mbox/"
   >mbox</a>
|
   <a href="/patch/10239965/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10239965/">/patch/10239965/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	E903160225 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 23 Feb 2018 22:28:26 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id BD016296C7
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 23 Feb 2018 22:28:26 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id B19C5296CF; Fri, 23 Feb 2018 22:28:26 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id EFC24296C7
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 23 Feb 2018 22:28:25 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752576AbeBWW2X (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 23 Feb 2018 17:28:23 -0500
Received: from Galois.linutronix.de ([146.0.238.70]:41821 &quot;EHLO
	Galois.linutronix.de&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752418AbeBWW2T (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 23 Feb 2018 17:28:19 -0500
Received: from localhost ([127.0.0.1] helo=bazinga.breakpoint.cc)
	by Galois.linutronix.de with esmtp (Exim 4.80)
	(envelope-from &lt;bigeasy@linutronix.de&gt;)
	id 1epLln-0005dd-BN; Fri, 23 Feb 2018 23:24:47 +0100
From: Sebastian Andrzej Siewior &lt;bigeasy@linutronix.de&gt;
To: iommu@lists.linux-foundation.org
Cc: linux-kernel@vger.kernel.org, Joerg Roedel &lt;joro@8bytes.org&gt;,
	tglx@linutronix.de, Sebastian Andrzej Siewior &lt;bigeasy@linutronix.de&gt;
Subject: [PATCH 09/10] iommu/amd: declare irq_remap_table&#39;s and amd_iommu&#39;s
	lock as a raw_spin_lock
Date: Fri, 23 Feb 2018 23:27:35 +0100
Message-Id: &lt;20180223222736.18542-10-bigeasy@linutronix.de&gt;
X-Mailer: git-send-email 2.16.1
In-Reply-To: &lt;20180223222736.18542-1-bigeasy@linutronix.de&gt;
References: &lt;20180223222736.18542-1-bigeasy@linutronix.de&gt;
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=481">Sebastian Andrzej Siewior</a> - Feb. 23, 2018, 10:27 p.m.</div>
<pre class="content">
The irq affinity setting is called while desc-&gt;lock is held. The
desc-&gt;lock is a raw_spin_lock called with interrupts disabled. The
call chain involves modify_irte_ga() which needs to take the
irq_remap_table-&gt;lock in order to update the entry and later iommu-&gt;lock
in order to update and flush the iommu.
The latter is also required during table allocation.

I currently don&#39;t see a feasible way of getting this done without
turning both locks raw so here it is.
<span class="signed-off-by">
Signed-off-by: Sebastian Andrzej Siewior &lt;bigeasy@linutronix.de&gt;</span>
---
 drivers/iommu/amd_iommu.c       | 30 +++++++++++++++---------------
 drivers/iommu/amd_iommu_init.c  |  2 +-
 drivers/iommu/amd_iommu_types.h |  4 ++--
 3 files changed, 18 insertions(+), 18 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/iommu/amd_iommu.c b/drivers/iommu/amd_iommu.c</span>
<span class="p_header">index de6cc41d6cd2..04b7d263523f 100644</span>
<span class="p_header">--- a/drivers/iommu/amd_iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/amd_iommu.c</span>
<span class="p_chunk">@@ -1052,9 +1052,9 @@</span> <span class="p_context"> static int iommu_queue_command_sync(struct amd_iommu *iommu,</span>
 	unsigned long flags;
 	int ret;
 
<span class="p_del">-	spin_lock_irqsave(&amp;iommu-&gt;lock, flags);</span>
<span class="p_add">+	raw_spin_lock_irqsave(&amp;iommu-&gt;lock, flags);</span>
 	ret = __iommu_queue_command_sync(iommu, cmd, sync);
<span class="p_del">-	spin_unlock_irqrestore(&amp;iommu-&gt;lock, flags);</span>
<span class="p_add">+	raw_spin_unlock_irqrestore(&amp;iommu-&gt;lock, flags);</span>
 
 	return ret;
 }
<span class="p_chunk">@@ -1080,7 +1080,7 @@</span> <span class="p_context"> static int iommu_completion_wait(struct amd_iommu *iommu)</span>
 
 	build_completion_wait(&amp;cmd, (u64)&amp;iommu-&gt;cmd_sem);
 
<span class="p_del">-	spin_lock_irqsave(&amp;iommu-&gt;lock, flags);</span>
<span class="p_add">+	raw_spin_lock_irqsave(&amp;iommu-&gt;lock, flags);</span>
 
 	iommu-&gt;cmd_sem = 0;
 
<span class="p_chunk">@@ -1091,7 +1091,7 @@</span> <span class="p_context"> static int iommu_completion_wait(struct amd_iommu *iommu)</span>
 	ret = wait_on_sem(&amp;iommu-&gt;cmd_sem);
 
 out_unlock:
<span class="p_del">-	spin_unlock_irqrestore(&amp;iommu-&gt;lock, flags);</span>
<span class="p_add">+	raw_spin_unlock_irqrestore(&amp;iommu-&gt;lock, flags);</span>
 
 	return ret;
 }
<span class="p_chunk">@@ -3601,7 +3601,7 @@</span> <span class="p_context"> static struct irq_remap_table *alloc_irq_table(void)</span>
 		kfree(table);
 		return NULL;
 	}
<span class="p_del">-	spin_lock_init(&amp;table-&gt;lock);</span>
<span class="p_add">+	raw_spin_lock_init(&amp;table-&gt;lock);</span>
 
 	if (!AMD_IOMMU_GUEST_IR_GA(amd_iommu_guest_ir))
 		memset(table-&gt;table, 0,
<span class="p_chunk">@@ -3700,7 +3700,7 @@</span> <span class="p_context"> static int alloc_irq_index(u16 devid, int count, bool align)</span>
 	if (align)
 		alignment = roundup_pow_of_two(count);
 
<span class="p_del">-	spin_lock_irqsave(&amp;table-&gt;lock, flags);</span>
<span class="p_add">+	raw_spin_lock_irqsave(&amp;table-&gt;lock, flags);</span>
 
 	/* Scan table for free entries */
 	for (index = ALIGN(table-&gt;min_index, alignment), c = 0;
<span class="p_chunk">@@ -3727,7 +3727,7 @@</span> <span class="p_context"> static int alloc_irq_index(u16 devid, int count, bool align)</span>
 	index = -ENOSPC;
 
 out:
<span class="p_del">-	spin_unlock_irqrestore(&amp;table-&gt;lock, flags);</span>
<span class="p_add">+	raw_spin_unlock_irqrestore(&amp;table-&gt;lock, flags);</span>
 
 	return index;
 }
<span class="p_chunk">@@ -3748,7 +3748,7 @@</span> <span class="p_context"> static int modify_irte_ga(u16 devid, int index, struct irte_ga *irte,</span>
 	if (!table)
 		return -ENOMEM;
 
<span class="p_del">-	spin_lock_irqsave(&amp;table-&gt;lock, flags);</span>
<span class="p_add">+	raw_spin_lock_irqsave(&amp;table-&gt;lock, flags);</span>
 
 	entry = (struct irte_ga *)table-&gt;table;
 	entry = &amp;entry[index];
<span class="p_chunk">@@ -3759,7 +3759,7 @@</span> <span class="p_context"> static int modify_irte_ga(u16 devid, int index, struct irte_ga *irte,</span>
 	if (data)
 		data-&gt;ref = entry;
 
<span class="p_del">-	spin_unlock_irqrestore(&amp;table-&gt;lock, flags);</span>
<span class="p_add">+	raw_spin_unlock_irqrestore(&amp;table-&gt;lock, flags);</span>
 
 	iommu_flush_irt(iommu, devid);
 	iommu_completion_wait(iommu);
<span class="p_chunk">@@ -3781,9 +3781,9 @@</span> <span class="p_context"> static int modify_irte(u16 devid, int index, union irte *irte)</span>
 	if (!table)
 		return -ENOMEM;
 
<span class="p_del">-	spin_lock_irqsave(&amp;table-&gt;lock, flags);</span>
<span class="p_add">+	raw_spin_lock_irqsave(&amp;table-&gt;lock, flags);</span>
 	table-&gt;table[index] = irte-&gt;val;
<span class="p_del">-	spin_unlock_irqrestore(&amp;table-&gt;lock, flags);</span>
<span class="p_add">+	raw_spin_unlock_irqrestore(&amp;table-&gt;lock, flags);</span>
 
 	iommu_flush_irt(iommu, devid);
 	iommu_completion_wait(iommu);
<span class="p_chunk">@@ -3805,9 +3805,9 @@</span> <span class="p_context"> static void free_irte(u16 devid, int index)</span>
 	if (!table)
 		return;
 
<span class="p_del">-	spin_lock_irqsave(&amp;table-&gt;lock, flags);</span>
<span class="p_add">+	raw_spin_lock_irqsave(&amp;table-&gt;lock, flags);</span>
 	iommu-&gt;irte_ops-&gt;clear_allocated(table, index);
<span class="p_del">-	spin_unlock_irqrestore(&amp;table-&gt;lock, flags);</span>
<span class="p_add">+	raw_spin_unlock_irqrestore(&amp;table-&gt;lock, flags);</span>
 
 	iommu_flush_irt(iommu, devid);
 	iommu_completion_wait(iommu);
<span class="p_chunk">@@ -4424,7 +4424,7 @@</span> <span class="p_context"> int amd_iommu_update_ga(int cpu, bool is_run, void *data)</span>
 	if (!table)
 		return -ENODEV;
 
<span class="p_del">-	spin_lock_irqsave(&amp;table-&gt;lock, flags);</span>
<span class="p_add">+	raw_spin_lock_irqsave(&amp;table-&gt;lock, flags);</span>
 
 	if (ref-&gt;lo.fields_vapic.guest_mode) {
 		if (cpu &gt;= 0)
<span class="p_chunk">@@ -4433,7 +4433,7 @@</span> <span class="p_context"> int amd_iommu_update_ga(int cpu, bool is_run, void *data)</span>
 		barrier();
 	}
 
<span class="p_del">-	spin_unlock_irqrestore(&amp;table-&gt;lock, flags);</span>
<span class="p_add">+	raw_spin_unlock_irqrestore(&amp;table-&gt;lock, flags);</span>
 
 	iommu_flush_irt(iommu, devid);
 	iommu_completion_wait(iommu);
<span class="p_header">diff --git a/drivers/iommu/amd_iommu_init.c b/drivers/iommu/amd_iommu_init.c</span>
<span class="p_header">index 4e4a615bf13f..904c575d1677 100644</span>
<span class="p_header">--- a/drivers/iommu/amd_iommu_init.c</span>
<span class="p_header">+++ b/drivers/iommu/amd_iommu_init.c</span>
<span class="p_chunk">@@ -1474,7 +1474,7 @@</span> <span class="p_context"> static int __init init_iommu_one(struct amd_iommu *iommu, struct ivhd_header *h)</span>
 {
 	int ret;
 
<span class="p_del">-	spin_lock_init(&amp;iommu-&gt;lock);</span>
<span class="p_add">+	raw_spin_lock_init(&amp;iommu-&gt;lock);</span>
 
 	/* Add IOMMU to internal data structures */
 	list_add_tail(&amp;iommu-&gt;list, &amp;amd_iommu_list);
<span class="p_header">diff --git a/drivers/iommu/amd_iommu_types.h b/drivers/iommu/amd_iommu_types.h</span>
<span class="p_header">index 62d6f42b57c9..1c9b080276c9 100644</span>
<span class="p_header">--- a/drivers/iommu/amd_iommu_types.h</span>
<span class="p_header">+++ b/drivers/iommu/amd_iommu_types.h</span>
<span class="p_chunk">@@ -408,7 +408,7 @@</span> <span class="p_context"> extern bool amd_iommu_iotlb_sup;</span>
 #define IRQ_TABLE_ALIGNMENT	128
 
 struct irq_remap_table {
<span class="p_del">-	spinlock_t lock;</span>
<span class="p_add">+	raw_spinlock_t lock;</span>
 	unsigned min_index;
 	u32 *table;
 };
<span class="p_chunk">@@ -490,7 +490,7 @@</span> <span class="p_context"> struct amd_iommu {</span>
 	int index;
 
 	/* locks the accesses to the hardware */
<span class="p_del">-	spinlock_t lock;</span>
<span class="p_add">+	raw_spinlock_t lock;</span>
 
 	/* Pointer to PCI device of this IOMMU */
 	struct pci_dev *dev;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



