
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>Linux 3.18.77 - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    Linux 3.18.77</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 22, 2017, 6:01 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171022180151.GA19398@kroah.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10021739/mbox/"
   >mbox</a>
|
   <a href="/patch/10021739/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10021739/">/patch/10021739/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	5D47C60381 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 22 Oct 2017 18:02:12 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4BFC928703
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 22 Oct 2017 18:02:12 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 40CCD2870B; Sun, 22 Oct 2017 18:02:12 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id A673F28703
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 22 Oct 2017 18:02:10 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932121AbdJVSBv (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 22 Oct 2017 14:01:51 -0400
Received: from mail.linuxfoundation.org ([140.211.169.12]:59626 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932065AbdJVSBr (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 22 Oct 2017 14:01:47 -0400
Received: from localhost (unknown [62.168.35.106])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id 0F36F8D4;
	Sun, 22 Oct 2017 18:01:45 +0000 (UTC)
Date: Sun, 22 Oct 2017 20:01:51 +0200
From: Greg KH &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org, Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	torvalds@linux-foundation.org, stable@vger.kernel.org
Cc: lwn@lwn.net, Jiri Slaby &lt;jslaby@suse.cz&gt;
Subject: Re: Linux 3.18.77
Message-ID: &lt;20171022180151.GA19398@kroah.com&gt;
References: &lt;20171022180142.GA19317@kroah.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: &lt;20171022180142.GA19317@kroah.com&gt;
User-Agent: Mutt/1.9.1 (2017-09-22)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Oct. 22, 2017, 6:01 p.m.</div>
<pre class="content">

</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/Makefile b/Makefile</span>
<span class="p_header">index 22c320078a98..6f71303316d5 100644</span>
<span class="p_header">--- a/Makefile</span>
<span class="p_header">+++ b/Makefile</span>
<span class="p_chunk">@@ -1,6 +1,6 @@</span> <span class="p_context"></span>
 VERSION = 3
 PATCHLEVEL = 18
<span class="p_del">-SUBLEVEL = 76</span>
<span class="p_add">+SUBLEVEL = 77</span>
 EXTRAVERSION =
 NAME = Diseased Newt
 
<span class="p_header">diff --git a/arch/x86/include/asm/tlbflush.h b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">index 7e459b7ee708..ac56615c14f2 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_chunk">@@ -86,7 +86,14 @@</span> <span class="p_context"> static inline void cr4_set_bits_and_update_boot(unsigned long mask)</span>
 
 static inline void __native_flush_tlb(void)
 {
<span class="p_add">+	/*</span>
<span class="p_add">+	 * If current-&gt;mm == NULL then we borrow a mm which may change during a</span>
<span class="p_add">+	 * task switch and therefore we must not be preempted while we write CR3</span>
<span class="p_add">+	 * back:</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	preempt_disable();</span>
 	native_write_cr3(native_read_cr3());
<span class="p_add">+	preempt_enable();</span>
 }
 
 static inline void __native_flush_tlb_global_irq_disabled(void)
<span class="p_header">diff --git a/block/bsg-lib.c b/block/bsg-lib.c</span>
<span class="p_header">index 341b8d858e67..650f427d915b 100644</span>
<span class="p_header">--- a/block/bsg-lib.c</span>
<span class="p_header">+++ b/block/bsg-lib.c</span>
<span class="p_chunk">@@ -147,6 +147,7 @@</span> <span class="p_context"> static int bsg_create_job(struct device *dev, struct request *req)</span>
 failjob_rls_rqst_payload:
 	kfree(job-&gt;request_payload.sg_list);
 failjob_rls_job:
<span class="p_add">+	kfree(job);</span>
 	return -ENOMEM;
 }
 
<span class="p_header">diff --git a/crypto/Kconfig b/crypto/Kconfig</span>
<span class="p_header">index 87bbc9c1e681..7bd153fd68fe 100644</span>
<span class="p_header">--- a/crypto/Kconfig</span>
<span class="p_header">+++ b/crypto/Kconfig</span>
<span class="p_chunk">@@ -290,6 +290,7 @@</span> <span class="p_context"> config CRYPTO_XTS</span>
 	select CRYPTO_BLKCIPHER
 	select CRYPTO_MANAGER
 	select CRYPTO_GF128MUL
<span class="p_add">+	select CRYPTO_ECB</span>
 	help
 	  XTS: IEEE1619/D16 narrow block cipher use with aes-xts-plain,
 	  key size 256, 384 or 512 bits. This implementation currently
<span class="p_header">diff --git a/drivers/gpu/drm/drm_dp_mst_topology.c b/drivers/gpu/drm/drm_dp_mst_topology.c</span>
<span class="p_header">index e8075400fc1b..7113c95f5ad0 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/drm_dp_mst_topology.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/drm_dp_mst_topology.c</span>
<span class="p_chunk">@@ -1707,6 +1707,7 @@</span> <span class="p_context"> int drm_dp_update_payload_part1(struct drm_dp_mst_topology_mgr *mgr)</span>
 				return -EINVAL;
 			}
 			req_payload.num_slots = mgr-&gt;proposed_vcpis[i]-&gt;num_slots;
<span class="p_add">+			req_payload.vcpi = mgr-&gt;proposed_vcpis[i]-&gt;vcpi;</span>
 		} else {
 			port = NULL;
 			req_payload.num_slots = 0;
<span class="p_chunk">@@ -1722,6 +1723,7 @@</span> <span class="p_context"> int drm_dp_update_payload_part1(struct drm_dp_mst_topology_mgr *mgr)</span>
 			if (req_payload.num_slots) {
 				drm_dp_create_payload_step1(mgr, mgr-&gt;proposed_vcpis[i]-&gt;vcpi, &amp;req_payload);
 				mgr-&gt;payloads[i].num_slots = req_payload.num_slots;
<span class="p_add">+				mgr-&gt;payloads[i].vcpi = req_payload.vcpi;</span>
 			} else if (mgr-&gt;payloads[i].num_slots) {
 				mgr-&gt;payloads[i].num_slots = 0;
 				drm_dp_destroy_payload_step1(mgr, port, port-&gt;vcpi.vcpi, &amp;mgr-&gt;payloads[i]);
<span class="p_header">diff --git a/drivers/iio/adc/xilinx-xadc-core.c b/drivers/iio/adc/xilinx-xadc-core.c</span>
<span class="p_header">index ce93bd8e3f68..a483747cdc9b 100644</span>
<span class="p_header">--- a/drivers/iio/adc/xilinx-xadc-core.c</span>
<span class="p_header">+++ b/drivers/iio/adc/xilinx-xadc-core.c</span>
<span class="p_chunk">@@ -1223,7 +1223,7 @@</span> <span class="p_context"> static int xadc_probe(struct platform_device *pdev)</span>
 
 	ret = xadc-&gt;ops-&gt;setup(pdev, indio_dev, irq);
 	if (ret)
<span class="p_del">-		goto err_free_samplerate_trigger;</span>
<span class="p_add">+		goto err_clk_disable_unprepare;</span>
 
 	ret = request_threaded_irq(irq, xadc-&gt;ops-&gt;interrupt_handler,
 				xadc-&gt;ops-&gt;threaded_interrupt_handler,
<span class="p_chunk">@@ -1284,6 +1284,8 @@</span> <span class="p_context"> static int xadc_probe(struct platform_device *pdev)</span>
 
 err_free_irq:
 	free_irq(irq, indio_dev);
<span class="p_add">+err_clk_disable_unprepare:</span>
<span class="p_add">+	clk_disable_unprepare(xadc-&gt;clk);</span>
 err_free_samplerate_trigger:
 	if (xadc-&gt;ops-&gt;flags &amp; XADC_FLAGS_BUFFERED)
 		iio_trigger_free(xadc-&gt;samplerate_trigger);
<span class="p_chunk">@@ -1293,8 +1295,6 @@</span> <span class="p_context"> err_free_convst_trigger:</span>
 err_triggered_buffer_cleanup:
 	if (xadc-&gt;ops-&gt;flags &amp; XADC_FLAGS_BUFFERED)
 		iio_triggered_buffer_cleanup(indio_dev);
<span class="p_del">-err_clk_disable_unprepare:</span>
<span class="p_del">-	clk_disable_unprepare(xadc-&gt;clk);</span>
 err_device_free:
 	kfree(indio_dev-&gt;channels);
 
<span class="p_header">diff --git a/drivers/irqchip/irq-crossbar.c b/drivers/irqchip/irq-crossbar.c</span>
<span class="p_header">index bbbaf5de65d2..c03773bf02c7 100644</span>
<span class="p_header">--- a/drivers/irqchip/irq-crossbar.c</span>
<span class="p_header">+++ b/drivers/irqchip/irq-crossbar.c</span>
<span class="p_chunk">@@ -175,7 +175,8 @@</span> <span class="p_context"> static const struct irq_domain_ops routable_irq_domain_ops = {</span>
 
 static int __init crossbar_of_init(struct device_node *node)
 {
<span class="p_del">-	int i, size, max = 0, reserved = 0, entry;</span>
<span class="p_add">+	int i, size, reserved = 0;</span>
<span class="p_add">+	u32 max = 0, entry;</span>
 	const __be32 *irqsr;
 	int ret = -ENOMEM;
 
<span class="p_header">diff --git a/drivers/isdn/i4l/isdn_ppp.c b/drivers/isdn/i4l/isdn_ppp.c</span>
<span class="p_header">index bf3fbd00a091..64b586458d3d 100644</span>
<span class="p_header">--- a/drivers/isdn/i4l/isdn_ppp.c</span>
<span class="p_header">+++ b/drivers/isdn/i4l/isdn_ppp.c</span>
<span class="p_chunk">@@ -828,7 +828,6 @@</span> <span class="p_context"> isdn_ppp_write(int min, struct file *file, const char __user *buf, int count)</span>
 	isdn_net_local *lp;
 	struct ippp_struct *is;
 	int proto;
<span class="p_del">-	unsigned char protobuf[4];</span>
 
 	is = file-&gt;private_data;
 
<span class="p_chunk">@@ -842,24 +841,28 @@</span> <span class="p_context"> isdn_ppp_write(int min, struct file *file, const char __user *buf, int count)</span>
 	if (!lp)
 		printk(KERN_DEBUG &quot;isdn_ppp_write: lp == NULL\n&quot;);
 	else {
<span class="p_del">-		/*</span>
<span class="p_del">-		 * Don&#39;t reset huptimer for</span>
<span class="p_del">-		 * LCP packets. (Echo requests).</span>
<span class="p_del">-		 */</span>
<span class="p_del">-		if (copy_from_user(protobuf, buf, 4))</span>
<span class="p_del">-			return -EFAULT;</span>
<span class="p_del">-		proto = PPP_PROTOCOL(protobuf);</span>
<span class="p_del">-		if (proto != PPP_LCP)</span>
<span class="p_del">-			lp-&gt;huptimer = 0;</span>
<span class="p_add">+		if (lp-&gt;isdn_device &lt; 0 || lp-&gt;isdn_channel &lt; 0) {</span>
<span class="p_add">+			unsigned char protobuf[4];</span>
<span class="p_add">+			/*</span>
<span class="p_add">+			 * Don&#39;t reset huptimer for</span>
<span class="p_add">+			 * LCP packets. (Echo requests).</span>
<span class="p_add">+			 */</span>
<span class="p_add">+			if (copy_from_user(protobuf, buf, 4))</span>
<span class="p_add">+				return -EFAULT;</span>
<span class="p_add">+</span>
<span class="p_add">+			proto = PPP_PROTOCOL(protobuf);</span>
<span class="p_add">+			if (proto != PPP_LCP)</span>
<span class="p_add">+				lp-&gt;huptimer = 0;</span>
 
<span class="p_del">-		if (lp-&gt;isdn_device &lt; 0 || lp-&gt;isdn_channel &lt; 0)</span>
 			return 0;
<span class="p_add">+		}</span>
 
 		if ((dev-&gt;drv[lp-&gt;isdn_device]-&gt;flags &amp; DRV_FLAG_RUNNING) &amp;&amp;
 		    lp-&gt;dialstate == 0 &amp;&amp;
 		    (lp-&gt;flags &amp; ISDN_NET_CONNECTED)) {
 			unsigned short hl;
 			struct sk_buff *skb;
<span class="p_add">+			unsigned char *cpy_buf;</span>
 			/*
 			 * we need to reserve enough space in front of
 			 * sk_buff. old call to dev_alloc_skb only reserved
<span class="p_chunk">@@ -872,11 +875,21 @@</span> <span class="p_context"> isdn_ppp_write(int min, struct file *file, const char __user *buf, int count)</span>
 				return count;
 			}
 			skb_reserve(skb, hl);
<span class="p_del">-			if (copy_from_user(skb_put(skb, count), buf, count))</span>
<span class="p_add">+			cpy_buf = skb_put(skb, count);</span>
<span class="p_add">+			if (copy_from_user(cpy_buf, buf, count))</span>
 			{
 				kfree_skb(skb);
 				return -EFAULT;
 			}
<span class="p_add">+</span>
<span class="p_add">+			/*</span>
<span class="p_add">+			 * Don&#39;t reset huptimer for</span>
<span class="p_add">+			 * LCP packets. (Echo requests).</span>
<span class="p_add">+			 */</span>
<span class="p_add">+			proto = PPP_PROTOCOL(cpy_buf);</span>
<span class="p_add">+			if (proto != PPP_LCP)</span>
<span class="p_add">+				lp-&gt;huptimer = 0;</span>
<span class="p_add">+</span>
 			if (is-&gt;debug &amp; 0x40) {
 				printk(KERN_DEBUG &quot;ppp xmit: len %d\n&quot;, (int) skb-&gt;len);
 				isdn_ppp_frame_log(&quot;xmit&quot;, skb-&gt;data, skb-&gt;len, 32, is-&gt;unit, lp-&gt;ppp_slot);
<span class="p_header">diff --git a/drivers/net/ethernet/mellanox/mlx4/main.c b/drivers/net/ethernet/mellanox/mlx4/main.c</span>
<span class="p_header">index 90de6e1ad06e..7fea86c06783 100644</span>
<span class="p_header">--- a/drivers/net/ethernet/mellanox/mlx4/main.c</span>
<span class="p_header">+++ b/drivers/net/ethernet/mellanox/mlx4/main.c</span>
<span class="p_chunk">@@ -648,8 +648,6 @@</span> <span class="p_context"> static int mlx4_slave_cap(struct mlx4_dev *dev)</span>
 		return -ENOSYS;
 	}
 
<span class="p_del">-	mlx4_log_num_mgm_entry_size = hca_param.log_mc_entry_sz;</span>
<span class="p_del">-</span>
 	dev-&gt;caps.hca_core_clock = hca_param.hca_core_clock;
 
 	memset(&amp;dev_cap, 0, sizeof(dev_cap));
<span class="p_header">diff --git a/drivers/scsi/device_handler/scsi_dh_emc.c b/drivers/scsi/device_handler/scsi_dh_emc.c</span>
<span class="p_header">index 84765384c47c..d03f0568bfda 100644</span>
<span class="p_header">--- a/drivers/scsi/device_handler/scsi_dh_emc.c</span>
<span class="p_header">+++ b/drivers/scsi/device_handler/scsi_dh_emc.c</span>
<span class="p_chunk">@@ -464,7 +464,7 @@</span> <span class="p_context"> static int clariion_prep_fn(struct scsi_device *sdev, struct request *req)</span>
 static int clariion_std_inquiry(struct scsi_device *sdev,
 				struct clariion_dh_data *csdev)
 {
<span class="p_del">-	int err;</span>
<span class="p_add">+	int err = SCSI_DH_OK;</span>
 	char *sp_model;
 
 	err = send_inquiry_cmd(sdev, 0, csdev);
<span class="p_header">diff --git a/drivers/target/iscsi/iscsi_target_erl0.c b/drivers/target/iscsi/iscsi_target_erl0.c</span>
<span class="p_header">index f900de64e267..b58c97ab1f8e 100644</span>
<span class="p_header">--- a/drivers/target/iscsi/iscsi_target_erl0.c</span>
<span class="p_header">+++ b/drivers/target/iscsi/iscsi_target_erl0.c</span>
<span class="p_chunk">@@ -45,10 +45,8 @@</span> <span class="p_context"> void iscsit_set_dataout_sequence_values(</span>
 	 */
 	if (cmd-&gt;unsolicited_data) {
 		cmd-&gt;seq_start_offset = cmd-&gt;write_data_done;
<span class="p_del">-		cmd-&gt;seq_end_offset = (cmd-&gt;write_data_done +</span>
<span class="p_del">-			((cmd-&gt;se_cmd.data_length &gt;</span>
<span class="p_del">-			  conn-&gt;sess-&gt;sess_ops-&gt;FirstBurstLength) ?</span>
<span class="p_del">-			 conn-&gt;sess-&gt;sess_ops-&gt;FirstBurstLength : cmd-&gt;se_cmd.data_length));</span>
<span class="p_add">+		cmd-&gt;seq_end_offset = min(cmd-&gt;se_cmd.data_length,</span>
<span class="p_add">+					conn-&gt;sess-&gt;sess_ops-&gt;FirstBurstLength);</span>
 		return;
 	}
 
<span class="p_header">diff --git a/drivers/tty/goldfish.c b/drivers/tty/goldfish.c</span>
<span class="p_header">index beb3142a1414..09495f515fa9 100644</span>
<span class="p_header">--- a/drivers/tty/goldfish.c</span>
<span class="p_header">+++ b/drivers/tty/goldfish.c</span>
<span class="p_chunk">@@ -295,7 +295,7 @@</span> <span class="p_context"> static int goldfish_tty_probe(struct platform_device *pdev)</span>
 
 	tty_unregister_device(goldfish_tty_driver, i);
 err_tty_register_device_failed:
<span class="p_del">-	free_irq(irq, qtty);</span>
<span class="p_add">+	free_irq(irq, pdev);</span>
 err_request_irq_failed:
 	goldfish_tty_current_line_count--;
 	if (goldfish_tty_current_line_count == 0)
<span class="p_header">diff --git a/drivers/watchdog/kempld_wdt.c b/drivers/watchdog/kempld_wdt.c</span>
<span class="p_header">index d9c1a1601926..e88d1346be5c 100644</span>
<span class="p_header">--- a/drivers/watchdog/kempld_wdt.c</span>
<span class="p_header">+++ b/drivers/watchdog/kempld_wdt.c</span>
<span class="p_chunk">@@ -140,12 +140,19 @@</span> <span class="p_context"> static int kempld_wdt_set_stage_timeout(struct kempld_wdt_data *wdt_data,</span>
 					unsigned int timeout)
 {
 	struct kempld_device_data *pld = wdt_data-&gt;pld;
<span class="p_del">-	u32 prescaler = kempld_prescaler[PRESCALER_21];</span>
<span class="p_add">+	u32 prescaler;</span>
 	u64 stage_timeout64;
 	u32 stage_timeout;
 	u32 remainder;
 	u8 stage_cfg;
 
<span class="p_add">+#if GCC_VERSION &lt; 40400</span>
<span class="p_add">+	/* work around a bug compiling do_div() */</span>
<span class="p_add">+	prescaler = READ_ONCE(kempld_prescaler[PRESCALER_21]);</span>
<span class="p_add">+#else</span>
<span class="p_add">+	prescaler = kempld_prescaler[PRESCALER_21];</span>
<span class="p_add">+#endif</span>
<span class="p_add">+</span>
 	if (!stage)
 		return -EINVAL;
 
<span class="p_header">diff --git a/fs/btrfs/send.c b/fs/btrfs/send.c</span>
<span class="p_header">index 3cc2d1dfd7bf..fc2472ef5011 100644</span>
<span class="p_header">--- a/fs/btrfs/send.c</span>
<span class="p_header">+++ b/fs/btrfs/send.c</span>
<span class="p_chunk">@@ -1640,6 +1640,9 @@</span> <span class="p_context"> static int is_inode_existent(struct send_ctx *sctx, u64 ino, u64 gen)</span>
 {
 	int ret;
 
<span class="p_add">+	if (ino == BTRFS_FIRST_FREE_OBJECTID)</span>
<span class="p_add">+		return 1;</span>
<span class="p_add">+</span>
 	ret = get_cur_inode_state(sctx, ino, gen);
 	if (ret &lt; 0)
 		goto out;
<span class="p_chunk">@@ -1825,7 +1828,7 @@</span> <span class="p_context"> static int will_overwrite_ref(struct send_ctx *sctx, u64 dir, u64 dir_gen,</span>
 	 * not delted and then re-created, if it was then we have no overwrite
 	 * and we can just unlink this entry.
 	 */
<span class="p_del">-	if (sctx-&gt;parent_root) {</span>
<span class="p_add">+	if (sctx-&gt;parent_root &amp;&amp; dir != BTRFS_FIRST_FREE_OBJECTID) {</span>
 		ret = get_inode_info(sctx-&gt;parent_root, dir, NULL, &amp;gen, NULL,
 				     NULL, NULL, NULL);
 		if (ret &lt; 0 &amp;&amp; ret != -ENOENT)
<span class="p_header">diff --git a/fs/ext4/inode.c b/fs/ext4/inode.c</span>
<span class="p_header">index a9117695da6c..c2434d72681e 100644</span>
<span class="p_header">--- a/fs/ext4/inode.c</span>
<span class="p_header">+++ b/fs/ext4/inode.c</span>
<span class="p_chunk">@@ -4895,8 +4895,6 @@</span> <span class="p_context"> int ext4_mark_inode_dirty(handle_t *handle, struct inode *inode)</span>
 						      sbi-&gt;s_want_extra_isize,
 						      iloc, handle);
 			if (ret) {
<span class="p_del">-				ext4_set_inode_state(inode,</span>
<span class="p_del">-						     EXT4_STATE_NO_EXPAND);</span>
 				if (mnt_count !=
 					le16_to_cpu(sbi-&gt;s_es-&gt;s_mnt_count)) {
 					ext4_warning(inode-&gt;i_sb,
<span class="p_header">diff --git a/fs/ext4/xattr.c b/fs/ext4/xattr.c</span>
<span class="p_header">index c71329f05b26..c57c83806fb9 100644</span>
<span class="p_header">--- a/fs/ext4/xattr.c</span>
<span class="p_header">+++ b/fs/ext4/xattr.c</span>
<span class="p_chunk">@@ -1291,11 +1291,13 @@</span> <span class="p_context"> int ext4_expand_extra_isize_ea(struct inode *inode, int new_extra_isize,</span>
 	int s_min_extra_isize = le16_to_cpu(EXT4_SB(inode-&gt;i_sb)-&gt;s_es-&gt;s_min_extra_isize);
 
 	down_write(&amp;EXT4_I(inode)-&gt;xattr_sem);
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Set EXT4_STATE_NO_EXPAND to avoid recursion when marking inode dirty</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	ext4_set_inode_state(inode, EXT4_STATE_NO_EXPAND);</span>
 retry:
<span class="p_del">-	if (EXT4_I(inode)-&gt;i_extra_isize &gt;= new_extra_isize) {</span>
<span class="p_del">-		up_write(&amp;EXT4_I(inode)-&gt;xattr_sem);</span>
<span class="p_del">-		return 0;</span>
<span class="p_del">-	}</span>
<span class="p_add">+	if (EXT4_I(inode)-&gt;i_extra_isize &gt;= new_extra_isize)</span>
<span class="p_add">+		goto out;</span>
 
 	header = IHDR(inode, raw_inode);
 	entry = IFIRST(header);
<span class="p_chunk">@@ -1324,8 +1326,7 @@</span> <span class="p_context"> retry:</span>
 				(void *)header, total_ino,
 				inode-&gt;i_sb-&gt;s_blocksize);
 		EXT4_I(inode)-&gt;i_extra_isize = new_extra_isize;
<span class="p_del">-		error = 0;</span>
<span class="p_del">-		goto cleanup;</span>
<span class="p_add">+		goto out;</span>
 	}
 
 	/*
<span class="p_chunk">@@ -1485,6 +1486,8 @@</span> <span class="p_context"> retry:</span>
 		kfree(bs);
 	}
 	brelse(bh);
<span class="p_add">+out:</span>
<span class="p_add">+	ext4_clear_inode_state(inode, EXT4_STATE_NO_EXPAND);</span>
 	up_write(&amp;EXT4_I(inode)-&gt;xattr_sem);
 	return 0;
 
<span class="p_chunk">@@ -1496,6 +1499,10 @@</span> <span class="p_context"> cleanup:</span>
 	kfree(is);
 	kfree(bs);
 	brelse(bh);
<span class="p_add">+	/*</span>
<span class="p_add">+	 * We deliberately leave EXT4_STATE_NO_EXPAND set here since inode</span>
<span class="p_add">+	 * size expansion failed.</span>
<span class="p_add">+	 */</span>
 	up_write(&amp;EXT4_I(inode)-&gt;xattr_sem);
 	return error;
 }
<span class="p_header">diff --git a/fs/ocfs2/dlmglue.c b/fs/ocfs2/dlmglue.c</span>
<span class="p_header">index 12fe56b2e870..2402353f290c 100644</span>
<span class="p_header">--- a/fs/ocfs2/dlmglue.c</span>
<span class="p_header">+++ b/fs/ocfs2/dlmglue.c</span>
<span class="p_chunk">@@ -531,6 +531,7 @@</span> <span class="p_context"> void ocfs2_lock_res_init_once(struct ocfs2_lock_res *res)</span>
 	init_waitqueue_head(&amp;res-&gt;l_event);
 	INIT_LIST_HEAD(&amp;res-&gt;l_blocked_list);
 	INIT_LIST_HEAD(&amp;res-&gt;l_mask_waiters);
<span class="p_add">+	INIT_LIST_HEAD(&amp;res-&gt;l_holders);</span>
 }
 
 void ocfs2_inode_lock_res_init(struct ocfs2_lock_res *res,
<span class="p_chunk">@@ -748,6 +749,50 @@</span> <span class="p_context"> void ocfs2_lock_res_free(struct ocfs2_lock_res *res)</span>
 	res-&gt;l_flags = 0UL;
 }
 
<span class="p_add">+/*</span>
<span class="p_add">+ * Keep a list of processes who have interest in a lockres.</span>
<span class="p_add">+ * Note: this is now only uesed for check recursive cluster locking.</span>
<span class="p_add">+ */</span>
<span class="p_add">+static inline void ocfs2_add_holder(struct ocfs2_lock_res *lockres,</span>
<span class="p_add">+				   struct ocfs2_lock_holder *oh)</span>
<span class="p_add">+{</span>
<span class="p_add">+	INIT_LIST_HEAD(&amp;oh-&gt;oh_list);</span>
<span class="p_add">+	oh-&gt;oh_owner_pid = get_pid(task_pid(current));</span>
<span class="p_add">+</span>
<span class="p_add">+	spin_lock(&amp;lockres-&gt;l_lock);</span>
<span class="p_add">+	list_add_tail(&amp;oh-&gt;oh_list, &amp;lockres-&gt;l_holders);</span>
<span class="p_add">+	spin_unlock(&amp;lockres-&gt;l_lock);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline void ocfs2_remove_holder(struct ocfs2_lock_res *lockres,</span>
<span class="p_add">+				       struct ocfs2_lock_holder *oh)</span>
<span class="p_add">+{</span>
<span class="p_add">+	spin_lock(&amp;lockres-&gt;l_lock);</span>
<span class="p_add">+	list_del(&amp;oh-&gt;oh_list);</span>
<span class="p_add">+	spin_unlock(&amp;lockres-&gt;l_lock);</span>
<span class="p_add">+</span>
<span class="p_add">+	put_pid(oh-&gt;oh_owner_pid);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static inline int ocfs2_is_locked_by_me(struct ocfs2_lock_res *lockres)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct ocfs2_lock_holder *oh;</span>
<span class="p_add">+	struct pid *pid;</span>
<span class="p_add">+</span>
<span class="p_add">+	/* look in the list of holders for one with the current task as owner */</span>
<span class="p_add">+	spin_lock(&amp;lockres-&gt;l_lock);</span>
<span class="p_add">+	pid = task_pid(current);</span>
<span class="p_add">+	list_for_each_entry(oh, &amp;lockres-&gt;l_holders, oh_list) {</span>
<span class="p_add">+		if (oh-&gt;oh_owner_pid == pid) {</span>
<span class="p_add">+			spin_unlock(&amp;lockres-&gt;l_lock);</span>
<span class="p_add">+			return 1;</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+	spin_unlock(&amp;lockres-&gt;l_lock);</span>
<span class="p_add">+</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static inline void ocfs2_inc_holders(struct ocfs2_lock_res *lockres,
 				     int level)
 {
<span class="p_chunk">@@ -2313,8 +2358,9 @@</span> <span class="p_context"> int ocfs2_inode_lock_full_nested(struct inode *inode,</span>
 		goto getbh;
 	}
 
<span class="p_del">-	if (ocfs2_mount_local(osb))</span>
<span class="p_del">-		goto local;</span>
<span class="p_add">+	if ((arg_flags &amp; OCFS2_META_LOCK_GETBH) ||</span>
<span class="p_add">+	    ocfs2_mount_local(osb))</span>
<span class="p_add">+		goto update;</span>
 
 	if (!(arg_flags &amp; OCFS2_META_LOCK_RECOVERY))
 		ocfs2_wait_for_recovery(osb);
<span class="p_chunk">@@ -2343,7 +2389,7 @@</span> <span class="p_context"> int ocfs2_inode_lock_full_nested(struct inode *inode,</span>
 	if (!(arg_flags &amp; OCFS2_META_LOCK_RECOVERY))
 		ocfs2_wait_for_recovery(osb);
 
<span class="p_del">-local:</span>
<span class="p_add">+update:</span>
 	/*
 	 * We only see this flag if we&#39;re being called from
 	 * ocfs2_read_locked_inode(). It means we&#39;re locking an inode
<span class="p_chunk">@@ -2485,6 +2531,59 @@</span> <span class="p_context"> void ocfs2_inode_unlock(struct inode *inode,</span>
 		ocfs2_cluster_unlock(OCFS2_SB(inode-&gt;i_sb), lockres, level);
 }
 
<span class="p_add">+/*</span>
<span class="p_add">+ * This _tracker variantes are introduced to deal with the recursive cluster</span>
<span class="p_add">+ * locking issue. The idea is to keep track of a lock holder on the stack of</span>
<span class="p_add">+ * the current process. If there&#39;s a lock holder on the stack, we know the</span>
<span class="p_add">+ * task context is already protected by cluster locking. Currently, they&#39;re</span>
<span class="p_add">+ * used in some VFS entry routines.</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * return &lt; 0 on error, return == 0 if there&#39;s no lock holder on the stack</span>
<span class="p_add">+ * before this call, return == 1 if this call would be a recursive locking.</span>
<span class="p_add">+ */</span>
<span class="p_add">+int ocfs2_inode_lock_tracker(struct inode *inode,</span>
<span class="p_add">+			     struct buffer_head **ret_bh,</span>
<span class="p_add">+			     int ex,</span>
<span class="p_add">+			     struct ocfs2_lock_holder *oh)</span>
<span class="p_add">+{</span>
<span class="p_add">+	int status;</span>
<span class="p_add">+	int arg_flags = 0, has_locked;</span>
<span class="p_add">+	struct ocfs2_lock_res *lockres;</span>
<span class="p_add">+</span>
<span class="p_add">+	lockres = &amp;OCFS2_I(inode)-&gt;ip_inode_lockres;</span>
<span class="p_add">+	has_locked = ocfs2_is_locked_by_me(lockres);</span>
<span class="p_add">+	/* Just get buffer head if the cluster lock has been taken */</span>
<span class="p_add">+	if (has_locked)</span>
<span class="p_add">+		arg_flags = OCFS2_META_LOCK_GETBH;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (likely(!has_locked || ret_bh)) {</span>
<span class="p_add">+		status = ocfs2_inode_lock_full(inode, ret_bh, ex, arg_flags);</span>
<span class="p_add">+		if (status &lt; 0) {</span>
<span class="p_add">+			if (status != -ENOENT)</span>
<span class="p_add">+				mlog_errno(status);</span>
<span class="p_add">+			return status;</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+	if (!has_locked)</span>
<span class="p_add">+		ocfs2_add_holder(lockres, oh);</span>
<span class="p_add">+</span>
<span class="p_add">+	return has_locked;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+void ocfs2_inode_unlock_tracker(struct inode *inode,</span>
<span class="p_add">+				int ex,</span>
<span class="p_add">+				struct ocfs2_lock_holder *oh,</span>
<span class="p_add">+				int had_lock)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct ocfs2_lock_res *lockres;</span>
<span class="p_add">+</span>
<span class="p_add">+	lockres = &amp;OCFS2_I(inode)-&gt;ip_inode_lockres;</span>
<span class="p_add">+	if (!had_lock) {</span>
<span class="p_add">+		ocfs2_remove_holder(lockres, oh);</span>
<span class="p_add">+		ocfs2_inode_unlock(inode, ex);</span>
<span class="p_add">+	}</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 int ocfs2_orphan_scan_lock(struct ocfs2_super *osb, u32 *seqno)
 {
 	struct ocfs2_lock_res *lockres;
<span class="p_header">diff --git a/fs/ocfs2/dlmglue.h b/fs/ocfs2/dlmglue.h</span>
<span class="p_header">index d293a22c32c5..a7fc18ba0dc1 100644</span>
<span class="p_header">--- a/fs/ocfs2/dlmglue.h</span>
<span class="p_header">+++ b/fs/ocfs2/dlmglue.h</span>
<span class="p_chunk">@@ -70,6 +70,11 @@</span> <span class="p_context"> struct ocfs2_orphan_scan_lvb {</span>
 	__be32	lvb_os_seqno;
 };
 
<span class="p_add">+struct ocfs2_lock_holder {</span>
<span class="p_add">+	struct list_head oh_list;</span>
<span class="p_add">+	struct pid *oh_owner_pid;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 /* ocfs2_inode_lock_full() &#39;arg_flags&#39; flags */
 /* don&#39;t wait on recovery. */
 #define OCFS2_META_LOCK_RECOVERY	(0x01)
<span class="p_chunk">@@ -77,6 +82,8 @@</span> <span class="p_context"> struct ocfs2_orphan_scan_lvb {</span>
 #define OCFS2_META_LOCK_NOQUEUE		(0x02)
 /* don&#39;t block waiting for the downconvert thread, instead return -EAGAIN */
 #define OCFS2_LOCK_NONBLOCK		(0x04)
<span class="p_add">+/* just get back disk inode bh if we&#39;ve got cluster lock. */</span>
<span class="p_add">+#define OCFS2_META_LOCK_GETBH		(0x08)</span>
 
 /* Locking subclasses of inode cluster lock */
 enum {
<span class="p_chunk">@@ -170,4 +177,15 @@</span> <span class="p_context"> void ocfs2_put_dlm_debug(struct ocfs2_dlm_debug *dlm_debug);</span>
 
 /* To set the locking protocol on module initialization */
 void ocfs2_set_locking_protocol(void);
<span class="p_add">+</span>
<span class="p_add">+/* The _tracker pair is used to avoid cluster recursive locking */</span>
<span class="p_add">+int ocfs2_inode_lock_tracker(struct inode *inode,</span>
<span class="p_add">+			     struct buffer_head **ret_bh,</span>
<span class="p_add">+			     int ex,</span>
<span class="p_add">+			     struct ocfs2_lock_holder *oh);</span>
<span class="p_add">+void ocfs2_inode_unlock_tracker(struct inode *inode,</span>
<span class="p_add">+				int ex,</span>
<span class="p_add">+				struct ocfs2_lock_holder *oh,</span>
<span class="p_add">+				int had_lock);</span>
<span class="p_add">+</span>
 #endif	/* DLMGLUE_H */
<span class="p_header">diff --git a/fs/ocfs2/ocfs2.h b/fs/ocfs2/ocfs2.h</span>
<span class="p_header">index bbec539230fd..6a90e364f648 100644</span>
<span class="p_header">--- a/fs/ocfs2/ocfs2.h</span>
<span class="p_header">+++ b/fs/ocfs2/ocfs2.h</span>
<span class="p_chunk">@@ -166,6 +166,7 @@</span> <span class="p_context"> struct ocfs2_lock_res {</span>
 
 	struct list_head         l_blocked_list;
 	struct list_head         l_mask_waiters;
<span class="p_add">+	struct list_head	 l_holders;</span>
 
 	unsigned long		 l_flags;
 	char                     l_name[OCFS2_LOCK_ID_MAX_LEN];
<span class="p_header">diff --git a/include/net/sctp/ulpevent.h b/include/net/sctp/ulpevent.h</span>
<span class="p_header">index cccdcfd14973..f348c736e6e0 100644</span>
<span class="p_header">--- a/include/net/sctp/ulpevent.h</span>
<span class="p_header">+++ b/include/net/sctp/ulpevent.h</span>
<span class="p_chunk">@@ -141,8 +141,12 @@</span> <span class="p_context"> __u16 sctp_ulpevent_get_notification_type(const struct sctp_ulpevent *event);</span>
 static inline int sctp_ulpevent_type_enabled(__u16 sn_type,
 					     struct sctp_event_subscribe *mask)
 {
<span class="p_add">+	int offset = sn_type - SCTP_SN_TYPE_BASE;</span>
 	char *amask = (char *) mask;
<span class="p_del">-	return amask[sn_type - SCTP_SN_TYPE_BASE];</span>
<span class="p_add">+</span>
<span class="p_add">+	if (offset &gt;= sizeof(struct sctp_event_subscribe))</span>
<span class="p_add">+		return 0;</span>
<span class="p_add">+	return amask[offset];</span>
 }
 
 /* Given an event subscription, is this event enabled? */
<span class="p_header">diff --git a/include/uapi/linux/mroute6.h b/include/uapi/linux/mroute6.h</span>
<span class="p_header">index ce91215cf7e6..e0b566dc72ef 100644</span>
<span class="p_header">--- a/include/uapi/linux/mroute6.h</span>
<span class="p_header">+++ b/include/uapi/linux/mroute6.h</span>
<span class="p_chunk">@@ -3,6 +3,7 @@</span> <span class="p_context"></span>
 
 #include &lt;linux/types.h&gt;
 #include &lt;linux/sockios.h&gt;
<span class="p_add">+#include &lt;linux/in6.h&gt;		/* For struct sockaddr_in6. */</span>
 
 /*
  *	Based on the MROUTING 3.5 defines primarily to keep
<span class="p_header">diff --git a/include/uapi/linux/rds.h b/include/uapi/linux/rds.h</span>
<span class="p_header">index 91950950aa59..25e865320288 100644</span>
<span class="p_header">--- a/include/uapi/linux/rds.h</span>
<span class="p_header">+++ b/include/uapi/linux/rds.h</span>
<span class="p_chunk">@@ -35,6 +35,7 @@</span> <span class="p_context"></span>
 #define _LINUX_RDS_H
 
 #include &lt;linux/types.h&gt;
<span class="p_add">+#include &lt;linux/socket.h&gt;		/* For __kernel_sockaddr_storage. */</span>
 
 #define RDS_IB_ABI_VERSION		0x301
 
<span class="p_chunk">@@ -213,7 +214,7 @@</span> <span class="p_context"> struct rds_get_mr_args {</span>
 };
 
 struct rds_get_mr_for_dest_args {
<span class="p_del">-	struct sockaddr_storage	dest_addr;</span>
<span class="p_add">+	struct __kernel_sockaddr_storage dest_addr;</span>
 	struct rds_iovec 	vec;
 	uint64_t		cookie_addr;
 	uint64_t		flags;
<span class="p_header">diff --git a/kernel/bpf/verifier.c b/kernel/bpf/verifier.c</span>
<span class="p_header">index eac45b688c08..76cd19dcb7f0 100644</span>
<span class="p_header">--- a/kernel/bpf/verifier.c</span>
<span class="p_header">+++ b/kernel/bpf/verifier.c</span>
<span class="p_chunk">@@ -932,7 +932,8 @@</span> <span class="p_context"> static int check_alu_op(struct reg_state *regs, struct bpf_insn *insn)</span>
 			}
 		} else {
 			if (insn-&gt;src_reg != BPF_REG_0 || insn-&gt;off != 0 ||
<span class="p_del">-			    (insn-&gt;imm != 16 &amp;&amp; insn-&gt;imm != 32 &amp;&amp; insn-&gt;imm != 64)) {</span>
<span class="p_add">+			    (insn-&gt;imm != 16 &amp;&amp; insn-&gt;imm != 32 &amp;&amp; insn-&gt;imm != 64) ||</span>
<span class="p_add">+			    BPF_CLASS(insn-&gt;code) == BPF_ALU64) {</span>
 				verbose(&quot;BPF_END uses reserved fields\n&quot;);
 				return -EINVAL;
 			}
<span class="p_header">diff --git a/kernel/locking/lockdep.c b/kernel/locking/lockdep.c</span>
<span class="p_header">index 88d0d4420ad2..3467618cc0ea 100644</span>
<span class="p_header">--- a/kernel/locking/lockdep.c</span>
<span class="p_header">+++ b/kernel/locking/lockdep.c</span>
<span class="p_chunk">@@ -3107,10 +3107,17 @@</span> <span class="p_context"> static int __lock_acquire(struct lockdep_map *lock, unsigned int subclass,</span>
 	if (depth) {
 		hlock = curr-&gt;held_locks + depth - 1;
 		if (hlock-&gt;class_idx == class_idx &amp;&amp; nest_lock) {
<span class="p_del">-			if (hlock-&gt;references)</span>
<span class="p_add">+			if (hlock-&gt;references) {</span>
<span class="p_add">+				/*</span>
<span class="p_add">+				 * Check: unsigned int references:12, overflow.</span>
<span class="p_add">+				 */</span>
<span class="p_add">+				if (DEBUG_LOCKS_WARN_ON(hlock-&gt;references == (1 &lt;&lt; 12)-1))</span>
<span class="p_add">+					return 0;</span>
<span class="p_add">+</span>
 				hlock-&gt;references++;
<span class="p_del">-			else</span>
<span class="p_add">+			} else {</span>
 				hlock-&gt;references = 2;
<span class="p_add">+			}</span>
 
 			return 1;
 		}
<span class="p_header">diff --git a/net/core/sock.c b/net/core/sock.c</span>
<span class="p_header">index 8c8fb6ab8a26..55f35765c6e0 100644</span>
<span class="p_header">--- a/net/core/sock.c</span>
<span class="p_header">+++ b/net/core/sock.c</span>
<span class="p_chunk">@@ -1488,6 +1488,8 @@</span> <span class="p_context"> struct sock *sk_clone_lock(const struct sock *sk, const gfp_t priority)</span>
 
 		sock_copy(newsk, sk);
 
<span class="p_add">+		newsk-&gt;sk_prot_creator = sk-&gt;sk_prot;</span>
<span class="p_add">+</span>
 		/* SANITY */
 		get_net(sock_net(newsk));
 		sk_node_init(&amp;newsk-&gt;sk_node);
<span class="p_header">diff --git a/net/ipv4/ip_vti.c b/net/ipv4/ip_vti.c</span>
<span class="p_header">index 15046aec8484..1b8a82f0f6ec 100644</span>
<span class="p_header">--- a/net/ipv4/ip_vti.c</span>
<span class="p_header">+++ b/net/ipv4/ip_vti.c</span>
<span class="p_chunk">@@ -156,6 +156,7 @@</span> <span class="p_context"> static netdev_tx_t vti_xmit(struct sk_buff *skb, struct net_device *dev,</span>
 	struct ip_tunnel_parm *parms = &amp;tunnel-&gt;parms;
 	struct dst_entry *dst = skb_dst(skb);
 	struct net_device *tdev;	/* Device to other host */
<span class="p_add">+	int pkt_len = skb-&gt;len;</span>
 	int err;
 
 	if (!dst) {
<span class="p_chunk">@@ -199,7 +200,7 @@</span> <span class="p_context"> static netdev_tx_t vti_xmit(struct sk_buff *skb, struct net_device *dev,</span>
 
 	err = dst_output(skb);
 	if (net_xmit_eval(err) == 0)
<span class="p_del">-		err = skb-&gt;len;</span>
<span class="p_add">+		err = pkt_len;</span>
 	iptunnel_xmit_stats(err, &amp;dev-&gt;stats, dev-&gt;tstats);
 	return NETDEV_TX_OK;
 
<span class="p_header">diff --git a/net/ipv6/ip6_vti.c b/net/ipv6/ip6_vti.c</span>
<span class="p_header">index 591e2355cc9e..a11083d37789 100644</span>
<span class="p_header">--- a/net/ipv6/ip6_vti.c</span>
<span class="p_header">+++ b/net/ipv6/ip6_vti.c</span>
<span class="p_chunk">@@ -416,6 +416,7 @@</span> <span class="p_context"> vti6_xmit(struct sk_buff *skb, struct net_device *dev, struct flowi *fl)</span>
 	struct net_device_stats *stats = &amp;t-&gt;dev-&gt;stats;
 	struct dst_entry *dst = skb_dst(skb);
 	struct net_device *tdev;
<span class="p_add">+	int pkt_len = skb-&gt;len;</span>
 	int err = -1;
 
 	if (!dst)
<span class="p_chunk">@@ -450,7 +451,7 @@</span> <span class="p_context"> vti6_xmit(struct sk_buff *skb, struct net_device *dev, struct flowi *fl)</span>
 		struct pcpu_sw_netstats *tstats = this_cpu_ptr(dev-&gt;tstats);
 
 		u64_stats_update_begin(&amp;tstats-&gt;syncp);
<span class="p_del">-		tstats-&gt;tx_bytes += skb-&gt;len;</span>
<span class="p_add">+		tstats-&gt;tx_bytes += pkt_len;</span>
 		tstats-&gt;tx_packets++;
 		u64_stats_update_end(&amp;tstats-&gt;syncp);
 	} else {
<span class="p_header">diff --git a/net/l2tp/l2tp_core.c b/net/l2tp/l2tp_core.c</span>
<span class="p_header">index 508154a04558..b5f3c175331c 100644</span>
<span class="p_header">--- a/net/l2tp/l2tp_core.c</span>
<span class="p_header">+++ b/net/l2tp/l2tp_core.c</span>
<span class="p_chunk">@@ -1317,6 +1317,9 @@</span> <span class="p_context"> static void l2tp_tunnel_del_work(struct work_struct *work)</span>
 	struct sock *sk = NULL;
 
 	tunnel = container_of(work, struct l2tp_tunnel, del_work);
<span class="p_add">+</span>
<span class="p_add">+	l2tp_tunnel_closeall(tunnel);</span>
<span class="p_add">+</span>
 	sk = l2tp_tunnel_sock_lookup(tunnel);
 	if (!sk)
 		goto out;
<span class="p_chunk">@@ -1639,15 +1642,12 @@</span> <span class="p_context"> EXPORT_SYMBOL_GPL(l2tp_tunnel_create);</span>
 
 /* This function is used by the netlink TUNNEL_DELETE command.
  */
<span class="p_del">-int l2tp_tunnel_delete(struct l2tp_tunnel *tunnel)</span>
<span class="p_add">+void l2tp_tunnel_delete(struct l2tp_tunnel *tunnel)</span>
 {
<span class="p_del">-	l2tp_tunnel_inc_refcount(tunnel);</span>
<span class="p_del">-	l2tp_tunnel_closeall(tunnel);</span>
<span class="p_del">-	if (false == queue_work(l2tp_wq, &amp;tunnel-&gt;del_work)) {</span>
<span class="p_del">-		l2tp_tunnel_dec_refcount(tunnel);</span>
<span class="p_del">-		return 1;</span>
<span class="p_add">+	if (!test_and_set_bit(0, &amp;tunnel-&gt;dead)) {</span>
<span class="p_add">+		l2tp_tunnel_inc_refcount(tunnel);</span>
<span class="p_add">+		queue_work(l2tp_wq, &amp;tunnel-&gt;del_work);</span>
 	}
<span class="p_del">-	return 0;</span>
 }
 EXPORT_SYMBOL_GPL(l2tp_tunnel_delete);
 
<span class="p_header">diff --git a/net/l2tp/l2tp_core.h b/net/l2tp/l2tp_core.h</span>
<span class="p_header">index e9ec7d2cc357..1c1a033a546a 100644</span>
<span class="p_header">--- a/net/l2tp/l2tp_core.h</span>
<span class="p_header">+++ b/net/l2tp/l2tp_core.h</span>
<span class="p_chunk">@@ -169,6 +169,9 @@</span> <span class="p_context"> struct l2tp_tunnel_cfg {</span>
 
 struct l2tp_tunnel {
 	int			magic;		/* Should be L2TP_TUNNEL_MAGIC */
<span class="p_add">+</span>
<span class="p_add">+	unsigned long		dead;</span>
<span class="p_add">+</span>
 	struct rcu_head rcu;
 	rwlock_t		hlist_lock;	/* protect session_hlist */
 	struct hlist_head	session_hlist[L2TP_HASH_SIZE];
<span class="p_chunk">@@ -252,7 +255,7 @@</span> <span class="p_context"> int l2tp_tunnel_create(struct net *net, int fd, int version, u32 tunnel_id,</span>
 		       u32 peer_tunnel_id, struct l2tp_tunnel_cfg *cfg,
 		       struct l2tp_tunnel **tunnelp);
 void l2tp_tunnel_closeall(struct l2tp_tunnel *tunnel);
<span class="p_del">-int l2tp_tunnel_delete(struct l2tp_tunnel *tunnel);</span>
<span class="p_add">+void l2tp_tunnel_delete(struct l2tp_tunnel *tunnel);</span>
 struct l2tp_session *l2tp_session_create(int priv_size,
 					 struct l2tp_tunnel *tunnel,
 					 u32 session_id, u32 peer_session_id,
<span class="p_header">diff --git a/net/netfilter/nf_conntrack_expect.c b/net/netfilter/nf_conntrack_expect.c</span>
<span class="p_header">index 26af45193ab7..7ebdd7ff8ec0 100644</span>
<span class="p_header">--- a/net/netfilter/nf_conntrack_expect.c</span>
<span class="p_header">+++ b/net/netfilter/nf_conntrack_expect.c</span>
<span class="p_chunk">@@ -392,7 +392,7 @@</span> <span class="p_context"> static inline int __nf_ct_expect_check(struct nf_conntrack_expect *expect)</span>
 	struct net *net = nf_ct_exp_net(expect);
 	struct hlist_node *next;
 	unsigned int h;
<span class="p_del">-	int ret = 1;</span>
<span class="p_add">+	int ret = 0;</span>
 
 	if (!master_help) {
 		ret = -ESHUTDOWN;
<span class="p_chunk">@@ -442,7 +442,7 @@</span> <span class="p_context"> int nf_ct_expect_related_report(struct nf_conntrack_expect *expect,</span>
 
 	spin_lock_bh(&amp;nf_conntrack_expect_lock);
 	ret = __nf_ct_expect_check(expect);
<span class="p_del">-	if (ret &lt;= 0)</span>
<span class="p_add">+	if (ret &lt; 0)</span>
 		goto out;
 
 	ret = nf_ct_expect_insert(expect);
<span class="p_header">diff --git a/net/packet/af_packet.c b/net/packet/af_packet.c</span>
<span class="p_header">index 7effa07c4491..dc474fd81d71 100644</span>
<span class="p_header">--- a/net/packet/af_packet.c</span>
<span class="p_header">+++ b/net/packet/af_packet.c</span>
<span class="p_chunk">@@ -1429,9 +1429,6 @@</span> <span class="p_context"> static int fanout_add(struct sock *sk, u16 id, u16 type_flags)</span>
 		return -EINVAL;
 	}
 
<span class="p_del">-	if (!po-&gt;running)</span>
<span class="p_del">-		return -EINVAL;</span>
<span class="p_del">-</span>
 	if (po-&gt;fanout)
 		return -EALREADY;
 
<span class="p_chunk">@@ -1469,7 +1466,10 @@</span> <span class="p_context"> static int fanout_add(struct sock *sk, u16 id, u16 type_flags)</span>
 		list_add(&amp;match-&gt;list, &amp;fanout_list);
 	}
 	err = -EINVAL;
<span class="p_del">-	if (match-&gt;type == type &amp;&amp;</span>
<span class="p_add">+</span>
<span class="p_add">+	spin_lock(&amp;po-&gt;bind_lock);</span>
<span class="p_add">+	if (po-&gt;running &amp;&amp;</span>
<span class="p_add">+	    match-&gt;type == type &amp;&amp;</span>
 	    match-&gt;prot_hook.type == po-&gt;prot_hook.type &amp;&amp;
 	    match-&gt;prot_hook.dev == po-&gt;prot_hook.dev) {
 		err = -ENOSPC;
<span class="p_chunk">@@ -1481,6 +1481,13 @@</span> <span class="p_context"> static int fanout_add(struct sock *sk, u16 id, u16 type_flags)</span>
 			err = 0;
 		}
 	}
<span class="p_add">+	spin_unlock(&amp;po-&gt;bind_lock);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (err &amp;&amp; !atomic_read(&amp;match-&gt;sk_ref)) {</span>
<span class="p_add">+		list_del(&amp;match-&gt;list);</span>
<span class="p_add">+		kfree(match);</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 out:
 	mutex_unlock(&amp;fanout_mutex);
 	return err;
<span class="p_chunk">@@ -2655,13 +2662,15 @@</span> <span class="p_context"> static int packet_do_bind(struct sock *sk, const char *name, int ifindex,</span>
 	int ret = 0;
 	bool unlisted = false;
 
<span class="p_del">-	if (po-&gt;fanout)</span>
<span class="p_del">-		return -EINVAL;</span>
<span class="p_del">-</span>
 	lock_sock(sk);
 	spin_lock(&amp;po-&gt;bind_lock);
 	rcu_read_lock();
 
<span class="p_add">+	if (po-&gt;fanout) {</span>
<span class="p_add">+		ret = -EINVAL;</span>
<span class="p_add">+		goto out_unlock;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	if (name) {
 		dev = dev_get_by_name_rcu(sock_net(sk), name);
 		if (!dev) {

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



