
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v3] treewide: Remove newlines inside DEFINE_PER_CPU() macros - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v3] treewide: Remove newlines inside DEFINE_PER_CPU() macros</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=86381">Michal Marek</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 1, 2016, 9:42 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1456868559-21741-1-git-send-email-mmarek@suse.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8470721/mbox/"
   >mbox</a>
|
   <a href="/patch/8470721/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8470721/">/patch/8470721/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 642949F2F0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  1 Mar 2016 21:42:58 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 6B88420351
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  1 Mar 2016 21:42:57 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 31DB02034E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  1 Mar 2016 21:42:56 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754013AbcCAVmx (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 1 Mar 2016 16:42:53 -0500
Received: from mx2.suse.de ([195.135.220.15]:34365 &quot;EHLO mx2.suse.de&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753842AbcCAVmr (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 1 Mar 2016 16:42:47 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (charybdis-ext.suse.de [195.135.220.254])
	by mx2.suse.de (Postfix) with ESMTP id F19D6ABB4;
	Tue,  1 Mar 2016 21:42:44 +0000 (UTC)
Received: by pobox.suse.cz (Postfix, from userid 10020)
	id E59C5C22A4; Tue,  1 Mar 2016 22:42:44 +0100 (CET)
From: Michal Marek &lt;mmarek@suse.com&gt;
To: linux-kbuild@vger.kernel.org
Cc: linux-kernel@vger.kernel.org, linux-ia64@vger.kernel.org,
	xen-devel@lists.xenproject.org, linux-acpi@vger.kernel.org,
	rds-devel@oss.oracle.com, netdev@vger.kernel.org
Subject: [PATCH v3] treewide: Remove newlines inside DEFINE_PER_CPU() macros
Date: Tue,  1 Mar 2016 22:42:39 +0100
Message-Id: &lt;1456868559-21741-1-git-send-email-mmarek@suse.com&gt;
X-Mailer: git-send-email 1.9.2
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD, UNPARSEABLE_RELAY autolearn=ham version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=86381">Michal Marek</a> - March 1, 2016, 9:42 p.m.</div>
<pre class="content">
Both Emacs etags and Exuberant ctags allow to specify regexp
replacements to help the tools understand some constructs used in the
source code. We use these replacements extensively in make tags,
however, the rules have some limitations, one of them being that they
only match single lines. Luckily, ctags prints a warning if a rule
seems to match except for the identifier we are looking for:

ctags: Warning: arch/ia64/kernel/smp.c:60: null expansion of name pattern &quot;\1&quot;
ctags: Warning: drivers/xen/events/events_2l.c:41: null expansion of name pattern &quot;\1&quot;
ctags: Warning: drivers/acpi/processor_idle.c:64: null expansion of name pattern &quot;\1&quot;
ctags: Warning: kernel/workqueue.c:307: null expansion of name pattern &quot;\1&quot;
ctags: Warning: kernel/rcu/rcutorture.c:133: null expansion of name pattern &quot;\1&quot;
ctags: Warning: kernel/rcu/rcutorture.c:135: null expansion of name pattern &quot;\1&quot;
ctags: Warning: kernel/locking/lockdep.c:153: null expansion of name pattern &quot;\1&quot;
ctags: Warning: net/rds/page.c:45: null expansion of name pattern &quot;\1&quot;
ctags: Warning: net/ipv6/syncookies.c:44: null expansion of name pattern &quot;\1&quot;
ctags: Warning: net/ipv4/syncookies.c:53: null expansion of name pattern &quot;\1&quot;

This patch removes the newlines in the DEFINE_PER_CPU, so that the
respective per-cpu variable definitions can be indexed.
<span class="signed-off-by">
Signed-off-by: Michal Marek &lt;mmarek@suse.com&gt;</span>
---
v2-&gt;v3: Rebased and improved changelog.

---
 arch/ia64/kernel/smp.c         | 3 +--
 drivers/acpi/processor_idle.c  | 3 +--
 drivers/xen/events/events_2l.c | 3 +--
 kernel/locking/lockdep.c       | 3 +--
 kernel/rcu/rcutorture.c        | 6 ++----
 kernel/workqueue.c             | 3 +--
 net/ipv4/syncookies.c          | 3 +--
 net/ipv6/syncookies.c          | 3 +--
 net/rds/page.c                 | 3 +--
 9 files changed, 10 insertions(+), 20 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/ia64/kernel/smp.c b/arch/ia64/kernel/smp.c</span>
<span class="p_header">index 7f706d4f84f7..1dcfe29d8a42 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/smp.c</span>
<span class="p_header">+++ b/arch/ia64/kernel/smp.c</span>
<span class="p_chunk">@@ -57,8 +57,7 @@</span> <span class="p_context"> static struct local_tlb_flush_counts {</span>
 	unsigned int count;
 } __attribute__((__aligned__(32))) local_tlb_flush_counts[NR_CPUS];
 
<span class="p_del">-static DEFINE_PER_CPU_SHARED_ALIGNED(unsigned short [NR_CPUS],</span>
<span class="p_del">-				     shadow_flush_counts);</span>
<span class="p_add">+static DEFINE_PER_CPU_SHARED_ALIGNED(unsigned short [NR_CPUS], shadow_flush_counts);</span>
 
 #define IPI_CALL_FUNC		0
 #define IPI_CPU_STOP		1
<span class="p_header">diff --git a/drivers/acpi/processor_idle.c b/drivers/acpi/processor_idle.c</span>
<span class="p_header">index 175c86bee3a9..16ca18547370 100644</span>
<span class="p_header">--- a/drivers/acpi/processor_idle.c</span>
<span class="p_header">+++ b/drivers/acpi/processor_idle.c</span>
<span class="p_chunk">@@ -61,8 +61,7 @@</span> <span class="p_context"> module_param(latency_factor, uint, 0644);</span>
 
 static DEFINE_PER_CPU(struct cpuidle_device *, acpi_cpuidle_device);
 
<span class="p_del">-static DEFINE_PER_CPU(struct acpi_processor_cx * [CPUIDLE_STATE_MAX],</span>
<span class="p_del">-								acpi_cstate);</span>
<span class="p_add">+static DEFINE_PER_CPU(struct acpi_processor_cx * [CPUIDLE_STATE_MAX], acpi_cstate);</span>
 
 static int disabled_by_idle_boot_param(void)
 {
<span class="p_header">diff --git a/drivers/xen/events/events_2l.c b/drivers/xen/events/events_2l.c</span>
<span class="p_header">index 7dd46312c180..7ffed4c62434 100644</span>
<span class="p_header">--- a/drivers/xen/events/events_2l.c</span>
<span class="p_header">+++ b/drivers/xen/events/events_2l.c</span>
<span class="p_chunk">@@ -38,8 +38,7 @@</span> <span class="p_context"></span>
 /* Find the first set bit in a evtchn mask */
 #define EVTCHN_FIRST_BIT(w) find_first_bit(BM(&amp;(w)), BITS_PER_EVTCHN_WORD)
 
<span class="p_del">-static DEFINE_PER_CPU(xen_ulong_t [EVTCHN_2L_NR_CHANNELS/BITS_PER_EVTCHN_WORD],</span>
<span class="p_del">-		      cpu_evtchn_mask);</span>
<span class="p_add">+static DEFINE_PER_CPU(xen_ulong_t [EVTCHN_2L_NR_CHANNELS/BITS_PER_EVTCHN_WORD], cpu_evtchn_mask);</span>
 
 static unsigned evtchn_2l_max_channels(void)
 {
<span class="p_header">diff --git a/kernel/locking/lockdep.c b/kernel/locking/lockdep.c</span>
<span class="p_header">index 60ace56618f6..96e5300fdf4b 100644</span>
<span class="p_header">--- a/kernel/locking/lockdep.c</span>
<span class="p_header">+++ b/kernel/locking/lockdep.c</span>
<span class="p_chunk">@@ -150,8 +150,7 @@</span> <span class="p_context"> static inline struct lock_class *hlock_class(struct held_lock *hlock)</span>
 }
 
 #ifdef CONFIG_LOCK_STAT
<span class="p_del">-static DEFINE_PER_CPU(struct lock_class_stats[MAX_LOCKDEP_KEYS],</span>
<span class="p_del">-		      cpu_lock_stats);</span>
<span class="p_add">+static DEFINE_PER_CPU(struct lock_class_stats[MAX_LOCKDEP_KEYS], cpu_lock_stats);</span>
 
 static inline u64 lockstat_clock(void)
 {
<span class="p_header">diff --git a/kernel/rcu/rcutorture.c b/kernel/rcu/rcutorture.c</span>
<span class="p_header">index d2988d047d66..4d5cc6aa7e1e 100644</span>
<span class="p_header">--- a/kernel/rcu/rcutorture.c</span>
<span class="p_header">+++ b/kernel/rcu/rcutorture.c</span>
<span class="p_chunk">@@ -130,10 +130,8 @@</span> <span class="p_context"> static struct rcu_torture __rcu *rcu_torture_current;</span>
 static unsigned long rcu_torture_current_version;
 static struct rcu_torture rcu_tortures[10 * RCU_TORTURE_PIPE_LEN];
 static DEFINE_SPINLOCK(rcu_torture_lock);
<span class="p_del">-static DEFINE_PER_CPU(long [RCU_TORTURE_PIPE_LEN + 1],</span>
<span class="p_del">-		      rcu_torture_count) = { 0 };</span>
<span class="p_del">-static DEFINE_PER_CPU(long [RCU_TORTURE_PIPE_LEN + 1],</span>
<span class="p_del">-		      rcu_torture_batch) = { 0 };</span>
<span class="p_add">+static DEFINE_PER_CPU(long [RCU_TORTURE_PIPE_LEN + 1], rcu_torture_count) = { 0 };</span>
<span class="p_add">+static DEFINE_PER_CPU(long [RCU_TORTURE_PIPE_LEN + 1], rcu_torture_batch) = { 0 };</span>
 static atomic_t rcu_torture_wcount[RCU_TORTURE_PIPE_LEN + 1];
 static atomic_t n_rcu_torture_alloc;
 static atomic_t n_rcu_torture_alloc_fail;
<span class="p_header">diff --git a/kernel/workqueue.c b/kernel/workqueue.c</span>
<span class="p_header">index 61a0264e28f9..00b0ff287f7a 100644</span>
<span class="p_header">--- a/kernel/workqueue.c</span>
<span class="p_header">+++ b/kernel/workqueue.c</span>
<span class="p_chunk">@@ -304,8 +304,7 @@</span> <span class="p_context"> static bool workqueue_freezing;		/* PL: have wqs started freezing? */</span>
 static cpumask_var_t wq_unbound_cpumask; /* PL: low level cpumask for all unbound wqs */
 
 /* the per-cpu worker pools */
<span class="p_del">-static DEFINE_PER_CPU_SHARED_ALIGNED(struct worker_pool [NR_STD_WORKER_POOLS],</span>
<span class="p_del">-				     cpu_worker_pools);</span>
<span class="p_add">+static DEFINE_PER_CPU_SHARED_ALIGNED(struct worker_pool [NR_STD_WORKER_POOLS], cpu_worker_pools);</span>
 
 static DEFINE_IDR(worker_pool_idr);	/* PR: idr of all pools */
 
<span class="p_header">diff --git a/net/ipv4/syncookies.c b/net/ipv4/syncookies.c</span>
<span class="p_header">index 643a86c49020..2d5589b61e9f 100644</span>
<span class="p_header">--- a/net/ipv4/syncookies.c</span>
<span class="p_header">+++ b/net/ipv4/syncookies.c</span>
<span class="p_chunk">@@ -50,8 +50,7 @@</span> <span class="p_context"> static u32 syncookie_secret[2][16-4+SHA_DIGEST_WORDS] __read_mostly;</span>
 #define TSBITS	6
 #define TSMASK	(((__u32)1 &lt;&lt; TSBITS) - 1)
 
<span class="p_del">-static DEFINE_PER_CPU(__u32 [16 + 5 + SHA_WORKSPACE_WORDS],</span>
<span class="p_del">-		      ipv4_cookie_scratch);</span>
<span class="p_add">+static DEFINE_PER_CPU(__u32 [16 + 5 + SHA_WORKSPACE_WORDS], ipv4_cookie_scratch);</span>
 
 static u32 cookie_hash(__be32 saddr, __be32 daddr, __be16 sport, __be16 dport,
 		       u32 count, int c)
<span class="p_header">diff --git a/net/ipv6/syncookies.c b/net/ipv6/syncookies.c</span>
<span class="p_header">index 2906ef20795e..aae3e5ca63ea 100644</span>
<span class="p_header">--- a/net/ipv6/syncookies.c</span>
<span class="p_header">+++ b/net/ipv6/syncookies.c</span>
<span class="p_chunk">@@ -41,8 +41,7 @@</span> <span class="p_context"> static __u16 const msstab[] = {</span>
 	9000 - 60,
 };
 
<span class="p_del">-static DEFINE_PER_CPU(__u32 [16 + 5 + SHA_WORKSPACE_WORDS],</span>
<span class="p_del">-		      ipv6_cookie_scratch);</span>
<span class="p_add">+static DEFINE_PER_CPU(__u32 [16 + 5 + SHA_WORKSPACE_WORDS], ipv6_cookie_scratch);</span>
 
 static u32 cookie_hash(const struct in6_addr *saddr, const struct in6_addr *daddr,
 		       __be16 sport, __be16 dport, u32 count, int c)
<span class="p_header">diff --git a/net/rds/page.c b/net/rds/page.c</span>
<span class="p_header">index 5a14e6d6a926..55da0a495267 100644</span>
<span class="p_header">--- a/net/rds/page.c</span>
<span class="p_header">+++ b/net/rds/page.c</span>
<span class="p_chunk">@@ -42,8 +42,7 @@</span> <span class="p_context"> struct rds_page_remainder {</span>
 	unsigned long	r_offset;
 };
 
<span class="p_del">-static DEFINE_PER_CPU_SHARED_ALIGNED(struct rds_page_remainder,</span>
<span class="p_del">-				     rds_page_remainders);</span>
<span class="p_add">+static DEFINE_PER_CPU_SHARED_ALIGNED(struct rds_page_remainder, rds_page_remainders);</span>
 
 /*
  * returns 0 on success or -errno on failure.

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



