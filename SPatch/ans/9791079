
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,3/3] rt: Check if the task needs to migrate when re-enabling migration - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,3/3] rt: Check if the task needs to migrate when re-enabling migration</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=95601">Daniel Bristot de Oliveira</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 16, 2017, 10:39 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;99de119c39e3af618efdb2f79bf30e60ca42a6ec.1497607974.git.bristot@redhat.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9791079/mbox/"
   >mbox</a>
|
   <a href="/patch/9791079/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9791079/">/patch/9791079/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	C335360325 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Jun 2017 10:40:22 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B46C728578
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Jun 2017 10:40:22 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A931628589; Fri, 16 Jun 2017 10:40:22 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 51D1428578
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 16 Jun 2017 10:40:22 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753280AbdFPKkQ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 16 Jun 2017 06:40:16 -0400
Received: from mx1.redhat.com ([209.132.183.28]:35768 &quot;EHLO mx1.redhat.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752651AbdFPKkO (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 16 Jun 2017 06:40:14 -0400
Received: from smtp.corp.redhat.com
	(int-mx04.intmail.prod.int.phx2.redhat.com [10.5.11.14])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 41ADD3D965;
	Fri, 16 Jun 2017 10:40:14 +0000 (UTC)
DMARC-Filter: OpenDMARC Filter v1.3.2 mx1.redhat.com 41ADD3D965
Authentication-Results: ext-mx06.extmail.prod.ext.phx2.redhat.com;
	dmarc=none (p=none dis=none) header.from=redhat.com
Authentication-Results: ext-mx06.extmail.prod.ext.phx2.redhat.com;
	spf=pass smtp.mailfrom=bristot@redhat.com
DKIM-Filter: OpenDKIM Filter v2.11.0 mx1.redhat.com 41ADD3D965
Received: from server2564.bristot.me (ovpn-116-124.phx2.redhat.com
	[10.3.116.124])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 30A4F8B141;
	Fri, 16 Jun 2017 10:40:12 +0000 (UTC)
From: Daniel Bristot de Oliveira &lt;bristot@redhat.com&gt;
To: linux-rt-users@vger.kernel.org
Cc: &quot;Luis Claudio R . Goncalves&quot; &lt;lgoncalv@redhat.com&gt;,
	Clark Williams &lt;williams@redhat.com&gt;,
	Luiz Capitulino &lt;lcapitulino@redhat.com&gt;,
	Sebastian Andrzej Siewior &lt;bigeasy@linutronix.de&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;,
	Steven Rostedt &lt;rostedt@goodmis.org&gt;,
	Peter Zijlstra &lt;peterz@infradead.org&gt;,
	LKML &lt;linux-kernel@vger.kernel.org&gt;
Subject: [RFC 3/3] rt: Check if the task needs to migrate when re-enabling
	migration
Date: Fri, 16 Jun 2017 12:39:48 +0200
Message-Id: &lt;99de119c39e3af618efdb2f79bf30e60ca42a6ec.1497607974.git.bristot@redhat.com&gt;
In-Reply-To: &lt;cover.1497607974.git.bristot@redhat.com&gt;
References: &lt;cover.1497607974.git.bristot@redhat.com&gt;
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.30]);
	Fri, 16 Jun 2017 10:40:14 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=95601">Daniel Bristot de Oliveira</a> - June 16, 2017, 10:39 a.m.</div>
<pre class="content">
In the case of an affinity change during a migrate_disable section,
__set_cpus_allowed_ptr will not try to move the task from a CPU
in which it cannot execute anymore.

So, after enabling migration, if the current task cannot execute in
the current CPU anymore, migrate it away.
<span class="signed-off-by">
Signed-off-by: Daniel Bristot de Oliveira &lt;bristot@redhat.com&gt;</span>
Cc: Luis Claudio R. Goncalves &lt;lgoncalv@redhat.com&gt;
Cc: Clark Williams &lt;williams@redhat.com&gt;
Cc: Luiz Capitulino &lt;lcapitulino@redhat.com&gt;
Cc: Sebastian Andrzej Siewior &lt;bigeasy@linutronix.de&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Cc: Steven Rostedt &lt;rostedt@goodmis.org&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: LKML &lt;linux-kernel@vger.kernel.org&gt;
Cc: linux-rt-users &lt;linux-rt-users@vger.kernel.org&gt;
---
 kernel/sched/core.c | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/kernel/sched/core.c b/kernel/sched/core.c</span>
<span class="p_header">index 0396bf2..207bc85 100644</span>
<span class="p_header">--- a/kernel/sched/core.c</span>
<span class="p_header">+++ b/kernel/sched/core.c</span>
<span class="p_chunk">@@ -3462,6 +3462,34 @@</span> <span class="p_context"> void migrate_enable(void)</span>
 			task_rq(p)-&gt;dl.dl_nr_migratory++;
 	}
 
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Check if the task can still run on this CPU. In the case of an</span>
<span class="p_add">+	 * affinity change during a migrate_disable section,</span>
<span class="p_add">+	 * __set_cpus_allowed_ptr will not try to move the task from a CPU</span>
<span class="p_add">+	 * that the task cannot execute anymore.</span>
<span class="p_add">+	 *</span>
<span class="p_add">+	 * So, if the current task cannot execute in the current CPU anymore,</span>
<span class="p_add">+	 * migrate it away.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	if (unlikely(!cpumask_test_cpu(task_cpu(p), &amp;p-&gt;cpus_allowed))) {</span>
<span class="p_add">+		const struct cpumask *cpu_mask = (p-&gt;flags &amp; PF_KTHREAD) ?</span>
<span class="p_add">+			cpu_online_mask : cpu_active_mask;</span>
<span class="p_add">+</span>
<span class="p_add">+		int dest_cpu = cpumask_any_and(cpu_mask, &amp;p-&gt;cpus_allowed);</span>
<span class="p_add">+		struct migration_arg arg = {p, dest_cpu};</span>
<span class="p_add">+</span>
<span class="p_add">+		/* Need help from migration thread: drop lock and wait. */</span>
<span class="p_add">+		task_rq_unlock(rq, p, &amp;rf);</span>
<span class="p_add">+		unpin_current_cpu();</span>
<span class="p_add">+		preempt_enable();</span>
<span class="p_add">+		preempt_lazy_enable();</span>
<span class="p_add">+</span>
<span class="p_add">+		stop_one_cpu(cpu_of(rq), migration_cpu_stop, &amp;arg);</span>
<span class="p_add">+		tlb_migrate_finish(p-&gt;mm);</span>
<span class="p_add">+</span>
<span class="p_add">+		return;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	task_rq_unlock(rq, p, &amp;rf);
 	unpin_current_cpu();
 	preempt_enable();

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



