
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[3.2,21/46] hugetlb: ensure hugepage access is denied if hugepages are not supported - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [3.2,21/46] hugetlb: ensure hugepage access is denied if hugepages are not supported</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=131">Ben Hutchings</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 12, 2016, 9:34 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;lsq.1465767282.389632529@decadent.org.uk&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9171737/mbox/"
   >mbox</a>
|
   <a href="/patch/9171737/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9171737/">/patch/9171737/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	79FCD604DB for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 12 Jun 2016 21:45:08 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 69EAC206AC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 12 Jun 2016 21:45:08 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 5CC8F25404; Sun, 12 Jun 2016 21:45:08 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C2CED206AC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 12 Jun 2016 21:45:07 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S933570AbcFLVpA (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 12 Jun 2016 17:45:00 -0400
Received: from shadbolt.e.decadent.org.uk ([88.96.1.126]:36750 &quot;EHLO
	shadbolt.e.decadent.org.uk&quot; rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S933068AbcFLVf4 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 12 Jun 2016 17:35:56 -0400
Received: from [2a02:8011:400e:2:6f00:88c8:c921:d332] (helo=deadeye)
	by shadbolt.decadent.org.uk with esmtps
	(TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256) (Exim 4.84_2)
	(envelope-from &lt;ben@decadent.org.uk&gt;)
	id 1bCD2w-00024P-21; Sun, 12 Jun 2016 22:35:54 +0100
Received: from ben by deadeye with local (Exim 4.87)
	(envelope-from &lt;ben@decadent.org.uk&gt;)
	id 1bCD2v-00071c-PC; Sun, 12 Jun 2016 22:35:53 +0100
Content-Type: text/plain; charset=&quot;UTF-8&quot;
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
MIME-Version: 1.0
From: Ben Hutchings &lt;ben@decadent.org.uk&gt;
To: linux-kernel@vger.kernel.org, stable@vger.kernel.org
CC: akpm@linux-foundation.org,
	&quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;,
	&quot;Linus Torvalds&quot; &lt;torvalds@linux-foundation.org&gt;,
	&quot;Randy Dunlap&quot; &lt;rdunlap@infradead.org&gt;,
	&quot;Nishanth Aravamudan&quot; &lt;nacc@linux.vnet.ibm.com&gt;,
	&quot;Mel Gorman&quot; &lt;mgorman@suse.de&gt;
Date: Sun, 12 Jun 2016 22:34:42 +0100
Message-ID: &lt;lsq.1465767282.389632529@decadent.org.uk&gt;
X-Mailer: LinuxStableQueue (scripts by bwh)
Subject: [PATCH 3.2 21/46] hugetlb: ensure hugepage access is denied if
	hugepages are not supported
In-Reply-To: &lt;lsq.1465767281.501580564@decadent.org.uk&gt;
X-SA-Exim-Connect-IP: 2a02:8011:400e:2:6f00:88c8:c921:d332
X-SA-Exim-Mail-From: ben@decadent.org.uk
X-SA-Exim-Scanned: No (on shadbolt.decadent.org.uk);
	SAEximRunCond expanded to false
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=131">Ben Hutchings</a> - June 12, 2016, 9:34 p.m.</div>
<pre class="content">
3.2.81-rc1 review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: Nishanth Aravamudan &lt;nacc@linux.vnet.ibm.com&gt;</span>

commit 457c1b27ed56ec472d202731b12417bff023594a upstream.

Currently, I am seeing the following when I `mount -t hugetlbfs /none
/dev/hugetlbfs`, and then simply do a `ls /dev/hugetlbfs`.  I think it&#39;s
related to the fact that hugetlbfs is properly not correctly setting
itself up in this state?:

  Unable to handle kernel paging request for data at address 0x00000031
  Faulting instruction address: 0xc000000000245710
  Oops: Kernel access of bad area, sig: 11 [#1]
  SMP NR_CPUS=2048 NUMA pSeries
  ....

In KVM guests on Power, in a guest not backed by hugepages, we see the
following:

  AnonHugePages:         0 kB
  HugePages_Total:       0
  HugePages_Free:        0
  HugePages_Rsvd:        0
  HugePages_Surp:        0
  Hugepagesize:         64 kB

HPAGE_SHIFT == 0 in this configuration, which indicates that hugepages
are not supported at boot-time, but this is only checked in
hugetlb_init().  Extract the check to a helper function, and use it in a
few relevant places.

This does make hugetlbfs not supported (not registered at all) in this
environment.  I believe this is fine, as there are no valid hugepages
and that won&#39;t change at runtime.

[akpm@linux-foundation.org: use pr_info(), per Mel]
[akpm@linux-foundation.org: fix build when HPAGE_SHIFT is undefined]
<span class="signed-off-by">Signed-off-by: Nishanth Aravamudan &lt;nacc@linux.vnet.ibm.com&gt;</span>
<span class="reviewed-by">Reviewed-by: Aneesh Kumar K.V &lt;aneesh.kumar@linux.vnet.ibm.com&gt;</span>
<span class="acked-by">Acked-by: Mel Gorman &lt;mgorman@suse.de&gt;</span>
Cc: Randy Dunlap &lt;rdunlap@infradead.org&gt;
<span class="signed-off-by">Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;</span>
<span class="signed-off-by">Signed-off-by: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;</span>
[bwh: Backported to 3.2:
 - Drop changes to hugetlb_show_meminfo()
 - Adjust context]
<span class="signed-off-by">Signed-off-by: Ben Hutchings &lt;ben@decadent.org.uk&gt;</span>
---
 fs/hugetlbfs/inode.c    |  5 +++++
 include/linux/hugetlb.h | 10 ++++++++++
 mm/hugetlb.c            | 19 ++++++++++++++-----
 3 files changed, 29 insertions(+), 5 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/fs/hugetlbfs/inode.c</span>
<span class="p_header">+++ b/fs/hugetlbfs/inode.c</span>
<span class="p_chunk">@@ -979,6 +979,11 @@</span> <span class="p_context"> static int __init init_hugetlbfs_fs(void</span>
 	int error;
 	struct vfsmount *vfsmount;
 
<span class="p_add">+	if (!hugepages_supported()) {</span>
<span class="p_add">+		pr_info(&quot;hugetlbfs: disabling because there are no supported hugepage sizes\n&quot;);</span>
<span class="p_add">+		return -ENOTSUPP;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	error = bdi_init(&amp;hugetlbfs_backing_dev_info);
 	if (error)
 		return error;
<span class="p_header">--- a/include/linux/hugetlb.h</span>
<span class="p_header">+++ b/include/linux/hugetlb.h</span>
<span class="p_chunk">@@ -344,6 +344,16 @@</span> <span class="p_context"> static inline pgoff_t basepage_index(str</span>
 	return __basepage_index(page);
 }
 
<span class="p_add">+static inline bool hugepages_supported(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Some platform decide whether they support huge pages at boot</span>
<span class="p_add">+	 * time. On these, such as powerpc, HPAGE_SHIFT is set to 0 when</span>
<span class="p_add">+	 * there is no such support</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	return HPAGE_SHIFT != 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 #else
 struct hstate {};
 #define alloc_huge_page_node(h, nid) NULL
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -1889,11 +1889,7 @@</span> <span class="p_context"> module_exit(hugetlb_exit);</span>
 
 static int __init hugetlb_init(void)
 {
<span class="p_del">-	/* Some platform decide whether they support huge pages at boot</span>
<span class="p_del">-	 * time. On these, such as powerpc, HPAGE_SHIFT is set to 0 when</span>
<span class="p_del">-	 * there is no such support</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	if (HPAGE_SHIFT == 0)</span>
<span class="p_add">+	if (!hugepages_supported())</span>
 		return 0;
 
 	if (!size_to_hstate(default_hstate_size)) {
<span class="p_chunk">@@ -2010,6 +2006,9 @@</span> <span class="p_context"> static int hugetlb_sysctl_handler_common</span>
 	unsigned long tmp;
 	int ret;
 
<span class="p_add">+	if (!hugepages_supported())</span>
<span class="p_add">+		return -ENOTSUPP;</span>
<span class="p_add">+</span>
 	tmp = h-&gt;max_huge_pages;
 
 	if (write &amp;&amp; h-&gt;order &gt;= MAX_ORDER)
<span class="p_chunk">@@ -2075,6 +2074,9 @@</span> <span class="p_context"> int hugetlb_overcommit_handler(struct ct</span>
 	unsigned long tmp;
 	int ret;
 
<span class="p_add">+	if (!hugepages_supported())</span>
<span class="p_add">+		return -ENOTSUPP;</span>
<span class="p_add">+</span>
 	tmp = h-&gt;nr_overcommit_huge_pages;
 
 	if (write &amp;&amp; h-&gt;order &gt;= MAX_ORDER)
<span class="p_chunk">@@ -2100,6 +2102,8 @@</span> <span class="p_context"> out:</span>
 void hugetlb_report_meminfo(struct seq_file *m)
 {
 	struct hstate *h = &amp;default_hstate;
<span class="p_add">+	if (!hugepages_supported())</span>
<span class="p_add">+		return;</span>
 	seq_printf(m,
 			&quot;HugePages_Total:   %5lu\n&quot;
 			&quot;HugePages_Free:    %5lu\n&quot;
<span class="p_chunk">@@ -2116,6 +2120,8 @@</span> <span class="p_context"> void hugetlb_report_meminfo(struct seq_f</span>
 int hugetlb_report_node_meminfo(int nid, char *buf)
 {
 	struct hstate *h = &amp;default_hstate;
<span class="p_add">+	if (!hugepages_supported())</span>
<span class="p_add">+		return 0;</span>
 	return sprintf(buf,
 		&quot;Node %d HugePages_Total: %5u\n&quot;
 		&quot;Node %d HugePages_Free:  %5u\n&quot;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



