
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,5/5] mm: Remove the page size change check in tlb_remove_page - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,5/5] mm: Remove the page size change check in tlb_remove_page</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=1141">Aneesh Kumar K.V</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 11, 2016, 5:31 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161011173121.17545-5-aneesh.kumar@linux.vnet.ibm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9371551/mbox/"
   >mbox</a>
|
   <a href="/patch/9371551/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9371551/">/patch/9371551/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	3C4C060865 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 11 Oct 2016 18:04:43 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 33AE729036
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 11 Oct 2016 18:04:43 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 2848029037; Tue, 11 Oct 2016 18:04:43 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 714E129041
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 11 Oct 2016 18:04:42 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754372AbcJKSEh (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 11 Oct 2016 14:04:37 -0400
Received: from mx0b-001b2d01.pphosted.com ([148.163.158.5]:40717 &quot;EHLO
	mx0a-001b2d01.pphosted.com&quot; rhost-flags-OK-OK-OK-FAIL)
	by vger.kernel.org with ESMTP id S1754147AbcJKRbx (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 11 Oct 2016 13:31:53 -0400
Received: from pps.filterd (m0098420.ppops.net [127.0.0.1])
	by mx0b-001b2d01.pphosted.com (8.16.0.17/8.16.0.17) with SMTP id
	u9BHTQKG057924
	for &lt;linux-kernel@vger.kernel.org&gt;; Tue, 11 Oct 2016 13:31:48 -0400
Received: from e35.co.us.ibm.com (e35.co.us.ibm.com [32.97.110.153])
	by mx0b-001b2d01.pphosted.com with ESMTP id 2610au4um1-1
	(version=TLSv1.2 cipher=AES256-SHA bits=256 verify=NOT)
	for &lt;linux-kernel@vger.kernel.org&gt;; Tue, 11 Oct 2016 13:31:47 -0400
Received: from localhost
	by e35.co.us.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use
	Only! Violators will be prosecuted
	for &lt;linux-kernel@vger.kernel.org&gt; from
	&lt;aneesh.kumar@linux.vnet.ibm.com&gt;; Tue, 11 Oct 2016 11:31:46 -0600
Received: from d03dlp03.boulder.ibm.com (9.17.202.179)
	by e35.co.us.ibm.com (192.168.1.135) with IBM ESMTP SMTP Gateway:
	Authorized Use Only! Violators will be prosecuted; 
	Tue, 11 Oct 2016 11:31:44 -0600
Received: from b03cxnp07029.gho.boulder.ibm.com
	(b03cxnp07029.gho.boulder.ibm.com [9.17.130.16])
	by d03dlp03.boulder.ibm.com (Postfix) with ESMTP id 3928819D8052;
	Tue, 11 Oct 2016 11:31:10 -0600 (MDT)
Received: from b03ledav006.gho.boulder.ibm.com
	(b03ledav006.gho.boulder.ibm.com [9.17.130.237])
	by b03cxnp07029.gho.boulder.ibm.com (8.14.9/8.14.9/NCO v10.0) with
	ESMTP id u9BHVB7215008000; Tue, 11 Oct 2016 10:31:43 -0700
Received: from b03ledav006.gho.boulder.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 1D061C6047;
	Tue, 11 Oct 2016 11:31:43 -0600 (MDT)
Received: from skywalker.in.ibm.com (unknown [9.199.57.10])
	by b03ledav006.gho.boulder.ibm.com (Postfix) with ESMTP id 1C324C6042;
	Tue, 11 Oct 2016 11:31:40 -0600 (MDT)
From: &quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;
To: akpm@linux-foundation.org
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
	linuxppc-dev@lists.ozlabs.org,
	&quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;
Subject: [RFC PATCH 5/5] mm: Remove the page size change check in
	tlb_remove_page
Date: Tue, 11 Oct 2016 23:01:21 +0530
X-Mailer: git-send-email 2.10.1
In-Reply-To: &lt;20161011173121.17545-1-aneesh.kumar@linux.vnet.ibm.com&gt;
References: &lt;20161011173121.17545-1-aneesh.kumar@linux.vnet.ibm.com&gt;
X-TM-AS-GCONF: 00
X-Content-Scanned: Fidelis XPS MAILER
x-cbid: 16101117-0012-0000-0000-000010DBDBE8
X-IBM-SpamModules-Scores: 
X-IBM-SpamModules-Versions: BY=3.00005893; HX=3.00000240; KW=3.00000007;
	PH=3.00000004; SC=3.00000186; SDB=6.00766992; UDB=6.00366927;
	IPR=6.00543135; 
	BA=6.00004801; NDR=6.00000001; ZLA=6.00000005; ZF=6.00000009;
	ZB=6.00000000; 
	ZP=6.00000000; ZH=6.00000000; ZU=6.00000002; MB=3.00012950;
	XFM=3.00000011; UTC=2016-10-11 17:31:45
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 16101117-0013-0000-0000-000046385B13
Message-Id: &lt;20161011173121.17545-5-aneesh.kumar@linux.vnet.ibm.com&gt;
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10432:, ,
	definitions=2016-10-11_09:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
	spamscore=0 suspectscore=3
	malwarescore=0 phishscore=0 adultscore=0 bulkscore=0 classifier=spam
	adjust=0 reason=mlx scancount=1 engine=8.0.1-1609300000
	definitions=main-1610110300
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1141">Aneesh Kumar K.V</a> - Oct. 11, 2016, 5:31 p.m.</div>
<pre class="content">
Now that we check for page size change early in the loop, we can
partially revert e9d55e157034a9efd99405c99c1565d64619d82b
(&quot;mm: change the interface for __tlb_remove_page&quot;).

This simplies the code much, by removing the need to track the last
address with which we adjusted the range. We also go back to the older
way of filling the mmu_gather array, ie, we add an entry and then
check whether the gather batch is full.
<span class="signed-off-by">
Signed-off-by: Aneesh Kumar K.V &lt;aneesh.kumar@linux.vnet.ibm.com&gt;</span>
---
 arch/arm/include/asm/tlb.h  | 13 +++----------
 arch/ia64/include/asm/tlb.h | 16 ++++------------
 arch/s390/include/asm/tlb.h |  6 ------
 arch/sh/include/asm/tlb.h   |  6 ------
 arch/um/include/asm/tlb.h   |  6 ------
 include/asm-generic/tlb.h   | 28 ++--------------------------
 mm/memory.c                 | 21 ++++++---------------
 7 files changed, 15 insertions(+), 81 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm/include/asm/tlb.h b/arch/arm/include/asm/tlb.h</span>
<span class="p_header">index a9d6de4746ea..3f2eb76243e3 100644</span>
<span class="p_header">--- a/arch/arm/include/asm/tlb.h</span>
<span class="p_header">+++ b/arch/arm/include/asm/tlb.h</span>
<span class="p_chunk">@@ -213,18 +213,17 @@</span> <span class="p_context"> tlb_end_vma(struct mmu_gather *tlb, struct vm_area_struct *vma)</span>
 
 static inline bool __tlb_remove_page(struct mmu_gather *tlb, struct page *page)
 {
<span class="p_add">+	tlb-&gt;pages[tlb-&gt;nr++] = page;</span>
<span class="p_add">+	VM_WARN_ON(tlb-&gt;nr &gt; tlb-&gt;max);</span>
 	if (tlb-&gt;nr == tlb-&gt;max)
 		return true;
<span class="p_del">-	tlb-&gt;pages[tlb-&gt;nr++] = page;</span>
 	return false;
 }
 
 static inline void tlb_remove_page(struct mmu_gather *tlb, struct page *page)
 {
<span class="p_del">-	if (__tlb_remove_page(tlb, page)) {</span>
<span class="p_add">+	if (__tlb_remove_page(tlb, page))</span>
 		tlb_flush_mmu(tlb);
<span class="p_del">-		__tlb_remove_page(tlb, page);</span>
<span class="p_del">-	}</span>
 }
 
 static inline bool __tlb_remove_page_size(struct mmu_gather *tlb,
<span class="p_chunk">@@ -233,12 +232,6 @@</span> <span class="p_context"> static inline bool __tlb_remove_page_size(struct mmu_gather *tlb,</span>
 	return __tlb_remove_page(tlb, page);
 }
 
<span class="p_del">-static inline bool __tlb_remove_pte_page(struct mmu_gather *tlb,</span>
<span class="p_del">-					 struct page *page)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return __tlb_remove_page(tlb, page);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline void tlb_remove_page_size(struct mmu_gather *tlb,
 					struct page *page, int page_size)
 {
<span class="p_header">diff --git a/arch/ia64/include/asm/tlb.h b/arch/ia64/include/asm/tlb.h</span>
<span class="p_header">index bfe6295aa746..fced197b9626 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/tlb.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/tlb.h</span>
<span class="p_chunk">@@ -207,15 +207,15 @@</span> <span class="p_context"> tlb_finish_mmu(struct mmu_gather *tlb, unsigned long start, unsigned long end)</span>
  */
 static inline bool __tlb_remove_page(struct mmu_gather *tlb, struct page *page)
 {
<span class="p_del">-	if (tlb-&gt;nr == tlb-&gt;max)</span>
<span class="p_del">-		return true;</span>
<span class="p_del">-</span>
 	tlb-&gt;need_flush = 1;
 
 	if (!tlb-&gt;nr &amp;&amp; tlb-&gt;pages == tlb-&gt;local)
 		__tlb_alloc_page(tlb);
 
 	tlb-&gt;pages[tlb-&gt;nr++] = page;
<span class="p_add">+	VM_WARN_ON(tlb-&gt;nr &gt; tlb-&gt;max);</span>
<span class="p_add">+	if (tlb-&gt;nr == tlb-&gt;max)</span>
<span class="p_add">+		return true;</span>
 	return false;
 }
 
<span class="p_chunk">@@ -236,10 +236,8 @@</span> <span class="p_context"> static inline void tlb_flush_mmu(struct mmu_gather *tlb)</span>
 
 static inline void tlb_remove_page(struct mmu_gather *tlb, struct page *page)
 {
<span class="p_del">-	if (__tlb_remove_page(tlb, page)) {</span>
<span class="p_add">+	if (__tlb_remove_page(tlb, page))</span>
 		tlb_flush_mmu(tlb);
<span class="p_del">-		__tlb_remove_page(tlb, page);</span>
<span class="p_del">-	}</span>
 }
 
 static inline bool __tlb_remove_page_size(struct mmu_gather *tlb,
<span class="p_chunk">@@ -248,12 +246,6 @@</span> <span class="p_context"> static inline bool __tlb_remove_page_size(struct mmu_gather *tlb,</span>
 	return __tlb_remove_page(tlb, page);
 }
 
<span class="p_del">-static inline bool __tlb_remove_pte_page(struct mmu_gather *tlb,</span>
<span class="p_del">-					 struct page *page)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return __tlb_remove_page(tlb, page);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline void tlb_remove_page_size(struct mmu_gather *tlb,
 					struct page *page, int page_size)
 {
<span class="p_header">diff --git a/arch/s390/include/asm/tlb.h b/arch/s390/include/asm/tlb.h</span>
<span class="p_header">index 28b159c87c38..853b2a3d8dee 100644</span>
<span class="p_header">--- a/arch/s390/include/asm/tlb.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/tlb.h</span>
<span class="p_chunk">@@ -104,12 +104,6 @@</span> <span class="p_context"> static inline bool __tlb_remove_page_size(struct mmu_gather *tlb,</span>
 	return __tlb_remove_page(tlb, page);
 }
 
<span class="p_del">-static inline bool __tlb_remove_pte_page(struct mmu_gather *tlb,</span>
<span class="p_del">-					 struct page *page)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return __tlb_remove_page(tlb, page);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline void tlb_remove_page_size(struct mmu_gather *tlb,
 					struct page *page, int page_size)
 {
<span class="p_header">diff --git a/arch/sh/include/asm/tlb.h b/arch/sh/include/asm/tlb.h</span>
<span class="p_header">index 0f988b3e484b..46e0d635e36f 100644</span>
<span class="p_header">--- a/arch/sh/include/asm/tlb.h</span>
<span class="p_header">+++ b/arch/sh/include/asm/tlb.h</span>
<span class="p_chunk">@@ -118,12 +118,6 @@</span> <span class="p_context"> static inline bool __tlb_remove_page_size(struct mmu_gather *tlb,</span>
 	return __tlb_remove_page(tlb, page);
 }
 
<span class="p_del">-static inline bool __tlb_remove_pte_page(struct mmu_gather *tlb,</span>
<span class="p_del">-					 struct page *page)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return __tlb_remove_page(tlb, page);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline void tlb_remove_page_size(struct mmu_gather *tlb,
 					struct page *page, int page_size)
 {
<span class="p_header">diff --git a/arch/um/include/asm/tlb.h b/arch/um/include/asm/tlb.h</span>
<span class="p_header">index 8258dd4bb13c..600a2e9bfee2 100644</span>
<span class="p_header">--- a/arch/um/include/asm/tlb.h</span>
<span class="p_header">+++ b/arch/um/include/asm/tlb.h</span>
<span class="p_chunk">@@ -116,12 +116,6 @@</span> <span class="p_context"> static inline bool __tlb_remove_page_size(struct mmu_gather *tlb,</span>
 	return __tlb_remove_page(tlb, page);
 }
 
<span class="p_del">-static inline bool __tlb_remove_pte_page(struct mmu_gather *tlb,</span>
<span class="p_del">-					 struct page *page)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return __tlb_remove_page(tlb, page);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline void tlb_remove_page_size(struct mmu_gather *tlb,
 					struct page *page, int page_size)
 {
<span class="p_header">diff --git a/include/asm-generic/tlb.h b/include/asm-generic/tlb.h</span>
<span class="p_header">index 256c9de71fdb..7eed8cf3130a 100644</span>
<span class="p_header">--- a/include/asm-generic/tlb.h</span>
<span class="p_header">+++ b/include/asm-generic/tlb.h</span>
<span class="p_chunk">@@ -107,11 +107,6 @@</span> <span class="p_context"> struct mmu_gather {</span>
 	struct mmu_gather_batch	local;
 	struct page		*__pages[MMU_GATHER_BUNDLE];
 	unsigned int		batch_count;
<span class="p_del">-	/*</span>
<span class="p_del">-	 * __tlb_adjust_range  will track the new addr here,</span>
<span class="p_del">-	 * that that we can adjust the range after the flush</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	unsigned long addr;</span>
 	int page_size;
 };
 
<span class="p_chunk">@@ -130,12 +125,6 @@</span> <span class="p_context"> static inline void __tlb_adjust_range(struct mmu_gather *tlb,</span>
 {
 	tlb-&gt;start = min(tlb-&gt;start, address);
 	tlb-&gt;end = max(tlb-&gt;end, address + range_size);
<span class="p_del">-	/*</span>
<span class="p_del">-	 * Track the last address with which we adjusted the range. This</span>
<span class="p_del">-	 * will be used later to adjust again after a mmu_flush due to</span>
<span class="p_del">-	 * failed __tlb_remove_page</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	tlb-&gt;addr = address;</span>
 }
 
 static inline void __tlb_reset_range(struct mmu_gather *tlb)
<span class="p_chunk">@@ -151,15 +140,11 @@</span> <span class="p_context"> static inline void __tlb_reset_range(struct mmu_gather *tlb)</span>
 static inline void tlb_remove_page_size(struct mmu_gather *tlb,
 					struct page *page, int page_size)
 {
<span class="p_del">-	if (__tlb_remove_page_size(tlb, page, page_size)) {</span>
<span class="p_add">+	if (__tlb_remove_page_size(tlb, page, page_size))</span>
 		tlb_flush_mmu(tlb);
<span class="p_del">-		tlb-&gt;page_size = page_size;</span>
<span class="p_del">-		__tlb_adjust_range(tlb, tlb-&gt;addr, page_size);</span>
<span class="p_del">-		__tlb_remove_page_size(tlb, page, page_size);</span>
<span class="p_del">-	}</span>
 }
 
<span class="p_del">-static bool __tlb_remove_page(struct mmu_gather *tlb, struct page *page)</span>
<span class="p_add">+static inline bool __tlb_remove_page(struct mmu_gather *tlb, struct page *page)</span>
 {
 	return __tlb_remove_page_size(tlb, page, PAGE_SIZE);
 }
<span class="p_chunk">@@ -173,15 +158,6 @@</span> <span class="p_context"> static inline void tlb_remove_page(struct mmu_gather *tlb, struct page *page)</span>
 	return tlb_remove_page_size(tlb, page, PAGE_SIZE);
 }
 
<span class="p_del">-static inline bool __tlb_remove_pte_page(struct mmu_gather *tlb, struct page *page)</span>
<span class="p_del">-{</span>
<span class="p_del">-	/* active-&gt;nr should be zero when we call this */</span>
<span class="p_del">-	VM_BUG_ON_PAGE(tlb-&gt;active-&gt;nr, page);</span>
<span class="p_del">-	tlb-&gt;page_size = PAGE_SIZE;</span>
<span class="p_del">-	__tlb_adjust_range(tlb, tlb-&gt;addr, PAGE_SIZE);</span>
<span class="p_del">-	return __tlb_remove_page(tlb, page);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 #ifndef tlb_remove_check_page_size_change
 #define tlb_remove_check_page_size_change tlb_remove_check_page_size_change
 static inline void tlb_remove_check_page_size_change(struct mmu_gather *tlb,
<span class="p_header">diff --git a/mm/memory.c b/mm/memory.c</span>
<span class="p_header">index 0ab75fd2514e..26d1ba8c87e6 100644</span>
<span class="p_header">--- a/mm/memory.c</span>
<span class="p_header">+++ b/mm/memory.c</span>
<span class="p_chunk">@@ -300,15 +300,14 @@</span> <span class="p_context"> bool __tlb_remove_page_size(struct mmu_gather *tlb, struct page *page, int page_</span>
 	struct mmu_gather_batch *batch;
 
 	VM_BUG_ON(!tlb-&gt;end);
<span class="p_del">-</span>
<span class="p_del">-	if (!tlb-&gt;page_size)</span>
<span class="p_del">-		tlb-&gt;page_size = page_size;</span>
<span class="p_del">-	else {</span>
<span class="p_del">-		if (page_size != tlb-&gt;page_size)</span>
<span class="p_del">-			return true;</span>
<span class="p_del">-	}</span>
<span class="p_add">+	VM_WARN_ON(tlb-&gt;page_size != page_size);</span>
 
 	batch = tlb-&gt;active;
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Add the page and check if we are full. If so</span>
<span class="p_add">+	 * force a flush.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	batch-&gt;pages[batch-&gt;nr++] = page;</span>
 	if (batch-&gt;nr == batch-&gt;max) {
 		if (!tlb_next_batch(tlb))
 			return true;
<span class="p_chunk">@@ -316,7 +315,6 @@</span> <span class="p_context"> bool __tlb_remove_page_size(struct mmu_gather *tlb, struct page *page, int page_</span>
 	}
 	VM_BUG_ON_PAGE(batch-&gt;nr &gt; batch-&gt;max, page);
 
<span class="p_del">-	batch-&gt;pages[batch-&gt;nr++] = page;</span>
 	return false;
 }
 
<span class="p_chunk">@@ -1118,7 +1116,6 @@</span> <span class="p_context"> static unsigned long zap_pte_range(struct mmu_gather *tlb,</span>
 	pte_t *start_pte;
 	pte_t *pte;
 	swp_entry_t entry;
<span class="p_del">-	struct page *pending_page = NULL;</span>
 
 	tlb_remove_check_page_size_change(tlb, PAGE_SIZE);
 again:
<span class="p_chunk">@@ -1173,7 +1170,6 @@</span> <span class="p_context"> again:</span>
 				print_bad_pte(vma, addr, ptent, page);
 			if (unlikely(__tlb_remove_page(tlb, page))) {
 				force_flush = 1;
<span class="p_del">-				pending_page = page;</span>
 				addr += PAGE_SIZE;
 				break;
 			}
<span class="p_chunk">@@ -1214,11 +1210,6 @@</span> <span class="p_context"> again:</span>
 	if (force_flush) {
 		force_flush = 0;
 		tlb_flush_mmu_free(tlb);
<span class="p_del">-		if (pending_page) {</span>
<span class="p_del">-			/* remove the page with new size */</span>
<span class="p_del">-			__tlb_remove_pte_page(tlb, pending_page);</span>
<span class="p_del">-			pending_page = NULL;</span>
<span class="p_del">-		}</span>
 		if (addr != end)
 			goto again;
 	}

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



