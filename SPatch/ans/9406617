
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[8/8] x86/fpu: Remove clts() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [8/8] x86/fpu: Remove clts()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=125831">Andrew Lutomirski</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 31, 2016, 10:18 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;3d3c8ca62f17579b9849a013d71e59a4d5d1b079.1477951965.git.luto@kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9406617/mbox/"
   >mbox</a>
|
   <a href="/patch/9406617/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9406617/">/patch/9406617/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	41C3860722 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 31 Oct 2016 22:20:22 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3356328BEC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 31 Oct 2016 22:20:22 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 22DBB28D6F; Mon, 31 Oct 2016 22:20:22 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 85E5528B37
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 31 Oct 2016 22:20:21 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S947606AbcJaWT6 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 31 Oct 2016 18:19:58 -0400
Received: from mail.kernel.org ([198.145.29.136]:39326 &quot;EHLO mail.kernel.org&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S947513AbcJaWTN (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 31 Oct 2016 18:19:13 -0400
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 1029C20383;
	Mon, 31 Oct 2016 22:19:12 +0000 (UTC)
Received: from localhost (70-90-202-86-Albuquerque.hfc.comcastbusiness.net
	[70.90.202.86])
	(using TLSv1.2 with cipher AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by mail.kernel.org (Postfix) with ESMTPSA id BA4E720357;
	Mon, 31 Oct 2016 22:19:10 +0000 (UTC)
From: Andy Lutomirski &lt;luto@kernel.org&gt;
To: x86@kernel.org
Cc: Borislav Petkov &lt;bp@alien8.de&gt;, linux-kernel@vger.kernel.org,
	Rusty Russell &lt;rusty@rustcorp.com.au&gt;,
	Paolo Bonzini &lt;pbonzini@redhat.com&gt;, Rik van Riel &lt;riel@redhat.com&gt;,
	kvm list &lt;kvm@vger.kernel.org&gt;, Andy Lutomirski &lt;luto@kernel.org&gt;
Subject: [PATCH 8/8] x86/fpu: Remove clts()
Date: Mon, 31 Oct 2016 15:18:49 -0700
Message-Id: &lt;3d3c8ca62f17579b9849a013d71e59a4d5d1b079.1477951965.git.luto@kernel.org&gt;
X-Mailer: git-send-email 2.7.4
In-Reply-To: &lt;cover.1477951965.git.luto@kernel.org&gt;
References: &lt;cover.1477951965.git.luto@kernel.org&gt;
In-Reply-To: &lt;cover.1477951965.git.luto@kernel.org&gt;
References: &lt;cover.1477951965.git.luto@kernel.org&gt;
X-Virus-Scanned: ClamAV using ClamSMTP
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=125831">Andrew Lutomirski</a> - Oct. 31, 2016, 10:18 p.m.</div>
<pre class="content">
The kernel doesn&#39;t use clts() any more.  Remove it and all of its
paravirt infrastructure.

A careful reader may notice that xen_clts() appears to have been
buggy -- it didn&#39;t update xen_cr0_value.
<span class="signed-off-by">
Signed-off-by: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
---
 arch/x86/include/asm/paravirt.h       |  5 -----
 arch/x86/include/asm/paravirt_types.h |  2 --
 arch/x86/include/asm/special_insns.h  | 11 -----------
 arch/x86/kernel/paravirt.c            |  1 -
 arch/x86/kernel/paravirt_patch_32.c   |  2 --
 arch/x86/kernel/paravirt_patch_64.c   |  2 --
 arch/x86/lguest/boot.c                | 12 ------------
 arch/x86/xen/enlighten.c              | 13 -------------
 8 files changed, 48 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/paravirt.h b/arch/x86/include/asm/paravirt.h</span>
<span class="p_header">index ce932812f142..f1fb4dbe9a3e 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/paravirt.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/paravirt.h</span>
<span class="p_chunk">@@ -41,11 +41,6 @@</span> <span class="p_context"> static inline void set_debugreg(unsigned long val, int reg)</span>
 	PVOP_VCALL2(pv_cpu_ops.set_debugreg, reg, val);
 }
 
<span class="p_del">-static inline void clts(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	PVOP_VCALL0(pv_cpu_ops.clts);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static inline unsigned long read_cr0(void)
 {
 	return PVOP_CALL0(unsigned long, pv_cpu_ops.read_cr0);
<span class="p_header">diff --git a/arch/x86/include/asm/paravirt_types.h b/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_header">index 0f400c0e4979..545426aa61ef 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_chunk">@@ -103,8 +103,6 @@</span> <span class="p_context"> struct pv_cpu_ops {</span>
 	unsigned long (*get_debugreg)(int regno);
 	void (*set_debugreg)(int regno, unsigned long value);
 
<span class="p_del">-	void (*clts)(void);</span>
<span class="p_del">-</span>
 	unsigned long (*read_cr0)(void);
 	void (*write_cr0)(unsigned long);
 
<span class="p_header">diff --git a/arch/x86/include/asm/special_insns.h b/arch/x86/include/asm/special_insns.h</span>
<span class="p_header">index 29b417bd8a68..12af3e35edfa 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/special_insns.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/special_insns.h</span>
<span class="p_chunk">@@ -6,11 +6,6 @@</span> <span class="p_context"></span>
 
 #include &lt;asm/nops.h&gt;
 
<span class="p_del">-static inline void native_clts(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	asm volatile(&quot;clts&quot;);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 /*
  * Volatile isn&#39;t enough to prevent the compiler from reordering the
  * read/write functions for the control registers and messing everything up.
<span class="p_chunk">@@ -208,12 +203,6 @@</span> <span class="p_context"> static inline void load_gs_index(unsigned selector)</span>
 
 #endif
 
<span class="p_del">-/* Clear the &#39;TS&#39; bit */</span>
<span class="p_del">-static inline void clts(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	native_clts();</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 #endif/* CONFIG_PARAVIRT */
 
 static inline void clflush(volatile void *__p)
<span class="p_header">diff --git a/arch/x86/kernel/paravirt.c b/arch/x86/kernel/paravirt.c</span>
<span class="p_header">index bbf3d5933eaa..a1bfba0f7234 100644</span>
<span class="p_header">--- a/arch/x86/kernel/paravirt.c</span>
<span class="p_header">+++ b/arch/x86/kernel/paravirt.c</span>
<span class="p_chunk">@@ -328,7 +328,6 @@</span> <span class="p_context"> __visible struct pv_cpu_ops pv_cpu_ops = {</span>
 	.cpuid = native_cpuid,
 	.get_debugreg = native_get_debugreg,
 	.set_debugreg = native_set_debugreg,
<span class="p_del">-	.clts = native_clts,</span>
 	.read_cr0 = native_read_cr0,
 	.write_cr0 = native_write_cr0,
 	.read_cr4 = native_read_cr4,
<span class="p_header">diff --git a/arch/x86/kernel/paravirt_patch_32.c b/arch/x86/kernel/paravirt_patch_32.c</span>
<span class="p_header">index 920c6ae08592..d3f7f14bb328 100644</span>
<span class="p_header">--- a/arch/x86/kernel/paravirt_patch_32.c</span>
<span class="p_header">+++ b/arch/x86/kernel/paravirt_patch_32.c</span>
<span class="p_chunk">@@ -8,7 +8,6 @@</span> <span class="p_context"> DEF_NATIVE(pv_cpu_ops, iret, &quot;iret&quot;);</span>
 DEF_NATIVE(pv_mmu_ops, read_cr2, &quot;mov %cr2, %eax&quot;);
 DEF_NATIVE(pv_mmu_ops, write_cr3, &quot;mov %eax, %cr3&quot;);
 DEF_NATIVE(pv_mmu_ops, read_cr3, &quot;mov %cr3, %eax&quot;);
<span class="p_del">-DEF_NATIVE(pv_cpu_ops, clts, &quot;clts&quot;);</span>
 
 #if defined(CONFIG_PARAVIRT_SPINLOCKS)
 DEF_NATIVE(pv_lock_ops, queued_spin_unlock, &quot;movb $0, (%eax)&quot;);
<span class="p_chunk">@@ -48,7 +47,6 @@</span> <span class="p_context"> unsigned native_patch(u8 type, u16 clobbers, void *ibuf,</span>
 		PATCH_SITE(pv_mmu_ops, read_cr2);
 		PATCH_SITE(pv_mmu_ops, read_cr3);
 		PATCH_SITE(pv_mmu_ops, write_cr3);
<span class="p_del">-		PATCH_SITE(pv_cpu_ops, clts);</span>
 #if defined(CONFIG_PARAVIRT_SPINLOCKS)
 		case PARAVIRT_PATCH(pv_lock_ops.queued_spin_unlock):
 			if (pv_is_native_spin_unlock()) {
<span class="p_header">diff --git a/arch/x86/kernel/paravirt_patch_64.c b/arch/x86/kernel/paravirt_patch_64.c</span>
<span class="p_header">index bb3840cedb4f..915a4c0b217c 100644</span>
<span class="p_header">--- a/arch/x86/kernel/paravirt_patch_64.c</span>
<span class="p_header">+++ b/arch/x86/kernel/paravirt_patch_64.c</span>
<span class="p_chunk">@@ -10,7 +10,6 @@</span> <span class="p_context"> DEF_NATIVE(pv_mmu_ops, read_cr2, &quot;movq %cr2, %rax&quot;);</span>
 DEF_NATIVE(pv_mmu_ops, read_cr3, &quot;movq %cr3, %rax&quot;);
 DEF_NATIVE(pv_mmu_ops, write_cr3, &quot;movq %rdi, %cr3&quot;);
 DEF_NATIVE(pv_mmu_ops, flush_tlb_single, &quot;invlpg (%rdi)&quot;);
<span class="p_del">-DEF_NATIVE(pv_cpu_ops, clts, &quot;clts&quot;);</span>
 DEF_NATIVE(pv_cpu_ops, wbinvd, &quot;wbinvd&quot;);
 
 DEF_NATIVE(pv_cpu_ops, usergs_sysret64, &quot;swapgs; sysretq&quot;);
<span class="p_chunk">@@ -58,7 +57,6 @@</span> <span class="p_context"> unsigned native_patch(u8 type, u16 clobbers, void *ibuf,</span>
 		PATCH_SITE(pv_mmu_ops, read_cr2);
 		PATCH_SITE(pv_mmu_ops, read_cr3);
 		PATCH_SITE(pv_mmu_ops, write_cr3);
<span class="p_del">-		PATCH_SITE(pv_cpu_ops, clts);</span>
 		PATCH_SITE(pv_mmu_ops, flush_tlb_single);
 		PATCH_SITE(pv_cpu_ops, wbinvd);
 #if defined(CONFIG_PARAVIRT_SPINLOCKS)
<span class="p_header">diff --git a/arch/x86/lguest/boot.c b/arch/x86/lguest/boot.c</span>
<span class="p_header">index d74afcdbc580..4ca0d78adcf0 100644</span>
<span class="p_header">--- a/arch/x86/lguest/boot.c</span>
<span class="p_header">+++ b/arch/x86/lguest/boot.c</span>
<span class="p_chunk">@@ -518,17 +518,6 @@</span> <span class="p_context"> static unsigned long lguest_read_cr0(void)</span>
 }
 
 /*
<span class="p_del">- * Intel provided a special instruction to clear the TS bit for people too cool</span>
<span class="p_del">- * to use write_cr0() to do it.  This &quot;clts&quot; instruction is faster, because all</span>
<span class="p_del">- * the vowels have been optimized out.</span>
<span class="p_del">- */</span>
<span class="p_del">-static void lguest_clts(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	lazy_hcall1(LHCALL_TS, 0);</span>
<span class="p_del">-	current_cr0 &amp;= ~X86_CR0_TS;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-/*</span>
  * cr2 is the virtual address of the last page fault, which the Guest only ever
  * reads.  The Host kindly writes this into our &quot;struct lguest_data&quot;, so we
  * just read it out of there.
<span class="p_chunk">@@ -1429,7 +1418,6 @@</span> <span class="p_context"> __init void lguest_init(void)</span>
 	pv_cpu_ops.load_tls = lguest_load_tls;
 	pv_cpu_ops.get_debugreg = lguest_get_debugreg;
 	pv_cpu_ops.set_debugreg = lguest_set_debugreg;
<span class="p_del">-	pv_cpu_ops.clts = lguest_clts;</span>
 	pv_cpu_ops.read_cr0 = lguest_read_cr0;
 	pv_cpu_ops.write_cr0 = lguest_write_cr0;
 	pv_cpu_ops.read_cr4 = lguest_read_cr4;
<span class="p_header">diff --git a/arch/x86/xen/enlighten.c b/arch/x86/xen/enlighten.c</span>
<span class="p_header">index c0fdd57da7aa..69f22f7e80ed 100644</span>
<span class="p_header">--- a/arch/x86/xen/enlighten.c</span>
<span class="p_header">+++ b/arch/x86/xen/enlighten.c</span>
<span class="p_chunk">@@ -980,17 +980,6 @@</span> <span class="p_context"> static void xen_io_delay(void)</span>
 {
 }
 
<span class="p_del">-static void xen_clts(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct multicall_space mcs;</span>
<span class="p_del">-</span>
<span class="p_del">-	mcs = xen_mc_entry(0);</span>
<span class="p_del">-</span>
<span class="p_del">-	MULTI_fpu_taskswitch(mcs.mc, 0);</span>
<span class="p_del">-</span>
<span class="p_del">-	xen_mc_issue(PARAVIRT_LAZY_CPU);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static DEFINE_PER_CPU(unsigned long, xen_cr0_value);
 
 static unsigned long xen_read_cr0(void)
<span class="p_chunk">@@ -1233,8 +1222,6 @@</span> <span class="p_context"> static const struct pv_cpu_ops xen_cpu_ops __initconst = {</span>
 	.set_debugreg = xen_set_debugreg,
 	.get_debugreg = xen_get_debugreg,
 
<span class="p_del">-	.clts = xen_clts,</span>
<span class="p_del">-</span>
 	.read_cr0 = xen_read_cr0,
 	.write_cr0 = xen_write_cr0,
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



