
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.11,084/115] mm/hugetlb: report -EHWPOISON not -EFAULT when FOLL_HWPOISON is specified - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.11,084/115] mm/hugetlb: report -EHWPOISON not -EFAULT when FOLL_HWPOISON is specified</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 5, 2017, 4:17 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170605153100.805627066@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9766735/mbox/"
   >mbox</a>
|
   <a href="/patch/9766735/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9766735/">/patch/9766735/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	B87C360353 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  5 Jun 2017 16:32:47 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id AB2C82785D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  5 Jun 2017 16:32:47 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 9FAD527DCD; Mon,  5 Jun 2017 16:32:47 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 049532785D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  5 Jun 2017 16:32:47 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754362AbdFEQcn (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 5 Jun 2017 12:32:43 -0400
Received: from mail.linuxfoundation.org ([140.211.169.12]:60858 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753953AbdFEQcf (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 5 Jun 2017 12:32:35 -0400
Received: from localhost (LFbn-1-12060-104.w90-92.abo.wanadoo.fr
	[90.92.122.104])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id CCF21B78;
	Mon,  5 Jun 2017 16:32:34 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, James Morse &lt;james.morse@arm.com&gt;,
	Punit Agrawal &lt;punit.agrawal@arm.com&gt;,
	Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;,
	&quot;Kirill A . Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Subject: [PATCH 4.11 084/115] mm/hugetlb: report -EHWPOISON not -EFAULT when
	FOLL_HWPOISON is specified
Date: Mon,  5 Jun 2017 18:17:57 +0200
Message-Id: &lt;20170605153100.805627066@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.13.0
In-Reply-To: &lt;20170605153056.650217313@linuxfoundation.org&gt;
References: &lt;20170605153056.650217313@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - June 5, 2017, 4:17 p.m.</div>
<pre class="content">
4.11-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: James Morse &lt;james.morse@arm.com&gt;</span>

commit 9a291a7c9428155e8e623e4a3989f8be47134df5 upstream.

KVM uses get_user_pages() to resolve its stage2 faults.  KVM sets the
FOLL_HWPOISON flag causing faultin_page() to return -EHWPOISON when it
finds a VM_FAULT_HWPOISON.  KVM handles these hwpoison pages as a
special case.  (check_user_page_hwpoison())

When huge pages are involved, this doesn&#39;t work so well.
get_user_pages() calls follow_hugetlb_page(), which stops early if it
receives VM_FAULT_HWPOISON from hugetlb_fault(), eventually returning
-EFAULT to the caller.  The step to map this to -EHWPOISON based on the
FOLL_ flags is missing.  The hwpoison special case is skipped, and
-EFAULT is returned to user-space, causing Qemu or kvmtool to exit.

Instead, move this VM_FAULT_ to errno mapping code into a header file
and use it from faultin_page() and follow_hugetlb_page().

With this, KVM works as expected.

This isn&#39;t a problem for arm64 today as we haven&#39;t enabled
MEMORY_FAILURE, but I can&#39;t see any reason this doesn&#39;t happen on x86
too, so I think this should be a fix.  This doesn&#39;t apply earlier than
stable&#39;s v4.11.1 due to all sorts of cleanup.

[james.morse@arm.com: add vm_fault_to_errno() call to faultin_page()]
suggested.
  Link: http://lkml.kernel.org/r/20170525171035.16359-1-james.morse@arm.com
[akpm@linux-foundation.org: coding-style fixes]
Link: http://lkml.kernel.org/r/20170524160900.28786-1-james.morse@arm.com
<span class="signed-off-by">Signed-off-by: James Morse &lt;james.morse@arm.com&gt;</span>
<span class="acked-by">Acked-by: Punit Agrawal &lt;punit.agrawal@arm.com&gt;</span>
<span class="acked-by">Acked-by: Naoya Horiguchi &lt;n-horiguchi@ah.jp.nec.com&gt;</span>
Cc: &quot;Kirill A . Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
<span class="signed-off-by">Signed-off-by: Andrew Morton &lt;akpm@linux-foundation.org&gt;</span>
<span class="signed-off-by">Signed-off-by: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>

---
 include/linux/mm.h |   11 +++++++++++
 mm/gup.c           |   20 ++++++++------------
 mm/hugetlb.c       |    5 +++++
 3 files changed, 24 insertions(+), 12 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/include/linux/mm.h</span>
<span class="p_header">+++ b/include/linux/mm.h</span>
<span class="p_chunk">@@ -2315,6 +2315,17 @@</span> <span class="p_context"> static inline struct page *follow_page(s</span>
 #define FOLL_REMOTE	0x2000	/* we are working on non-current tsk/mm */
 #define FOLL_COW	0x4000	/* internal GUP flag */
 
<span class="p_add">+static inline int vm_fault_to_errno(int vm_fault, int foll_flags)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if (vm_fault &amp; VM_FAULT_OOM)</span>
<span class="p_add">+		return -ENOMEM;</span>
<span class="p_add">+	if (vm_fault &amp; (VM_FAULT_HWPOISON | VM_FAULT_HWPOISON_LARGE))</span>
<span class="p_add">+		return (foll_flags &amp; FOLL_HWPOISON) ? -EHWPOISON : -EFAULT;</span>
<span class="p_add">+	if (vm_fault &amp; (VM_FAULT_SIGBUS | VM_FAULT_SIGSEGV))</span>
<span class="p_add">+		return -EFAULT;</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 typedef int (*pte_fn_t)(pte_t *pte, pgtable_t token, unsigned long addr,
 			void *data);
 extern int apply_to_page_range(struct mm_struct *mm, unsigned long address,
<span class="p_header">--- a/mm/gup.c</span>
<span class="p_header">+++ b/mm/gup.c</span>
<span class="p_chunk">@@ -407,12 +407,10 @@</span> <span class="p_context"> static int faultin_page(struct task_stru</span>
 
 	ret = handle_mm_fault(vma, address, fault_flags);
 	if (ret &amp; VM_FAULT_ERROR) {
<span class="p_del">-		if (ret &amp; VM_FAULT_OOM)</span>
<span class="p_del">-			return -ENOMEM;</span>
<span class="p_del">-		if (ret &amp; (VM_FAULT_HWPOISON | VM_FAULT_HWPOISON_LARGE))</span>
<span class="p_del">-			return *flags &amp; FOLL_HWPOISON ? -EHWPOISON : -EFAULT;</span>
<span class="p_del">-		if (ret &amp; (VM_FAULT_SIGBUS | VM_FAULT_SIGSEGV))</span>
<span class="p_del">-			return -EFAULT;</span>
<span class="p_add">+		int err = vm_fault_to_errno(ret, *flags);</span>
<span class="p_add">+</span>
<span class="p_add">+		if (err)</span>
<span class="p_add">+			return err;</span>
 		BUG();
 	}
 
<span class="p_chunk">@@ -723,12 +721,10 @@</span> <span class="p_context"> retry:</span>
 	ret = handle_mm_fault(vma, address, fault_flags);
 	major |= ret &amp; VM_FAULT_MAJOR;
 	if (ret &amp; VM_FAULT_ERROR) {
<span class="p_del">-		if (ret &amp; VM_FAULT_OOM)</span>
<span class="p_del">-			return -ENOMEM;</span>
<span class="p_del">-		if (ret &amp; (VM_FAULT_HWPOISON | VM_FAULT_HWPOISON_LARGE))</span>
<span class="p_del">-			return -EHWPOISON;</span>
<span class="p_del">-		if (ret &amp; (VM_FAULT_SIGBUS | VM_FAULT_SIGSEGV))</span>
<span class="p_del">-			return -EFAULT;</span>
<span class="p_add">+		int err = vm_fault_to_errno(ret, 0);</span>
<span class="p_add">+</span>
<span class="p_add">+		if (err)</span>
<span class="p_add">+			return err;</span>
 		BUG();
 	}
 
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -4170,6 +4170,11 @@</span> <span class="p_context"> long follow_hugetlb_page(struct mm_struc</span>
 			}
 			ret = hugetlb_fault(mm, vma, vaddr, fault_flags);
 			if (ret &amp; VM_FAULT_ERROR) {
<span class="p_add">+				int err = vm_fault_to_errno(ret, flags);</span>
<span class="p_add">+</span>
<span class="p_add">+				if (err)</span>
<span class="p_add">+					return err;</span>
<span class="p_add">+</span>
 				remainder = 0;
 				break;
 			}

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



