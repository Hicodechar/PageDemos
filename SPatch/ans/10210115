
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,1/2] mm, hugetlbfs: introduce -&gt;pagesize() to vm_operations_struct - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,1/2] mm, hugetlbfs: introduce -&gt;pagesize() to vm_operations_struct</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=32902">Dave Jiang</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 10, 2018, 12:38 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;151822310695.52376.2707461327280470402.stgit@djiang5-desk3.ch.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10210115/mbox/"
   >mbox</a>
|
   <a href="/patch/10210115/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10210115/">/patch/10210115/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	81C7E602D8 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 10 Feb 2018 00:38:36 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 76F9E28112
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 10 Feb 2018 00:38:36 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 6C0AE299C9; Sat, 10 Feb 2018 00:38:36 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D520928112
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 10 Feb 2018 00:38:35 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753385AbeBJAib (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 9 Feb 2018 19:38:31 -0500
Received: from mga09.intel.com ([134.134.136.24]:49515 &quot;EHLO mga09.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753300AbeBJAi2 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 9 Feb 2018 19:38:28 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from fmsmga004.fm.intel.com ([10.253.24.48])
	by orsmga102.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
	09 Feb 2018 16:38:27 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.46,486,1511856000&quot;; d=&quot;scan&#39;208&quot;;a=&quot;28879002&quot;
Received: from djiang5-desk3.ch.intel.com ([143.182.136.93])
	by fmsmga004.fm.intel.com with ESMTP; 09 Feb 2018 16:38:27 -0800
Subject: [PATCH v2 1/2] mm,
	hugetlbfs: introduce -&gt;pagesize() to vm_operations_struct
From: Dave Jiang &lt;dave.jiang@intel.com&gt;
To: akpm@linux-foundation.org
Cc: Jane Chu &lt;jane.chu@oracle.com&gt;, linux-nvdimm@lists.01.org,
	Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;,
	linux-kernel@vger.kernel.org, mhocko@kernel.org,
	linux-mm@kvack.org, Paul Mackerras &lt;paulus@samba.org&gt;,
	Michael Ellerman &lt;mpe@ellerman.id.au&gt;, dan.j.williams@intel.com
Date: Fri, 09 Feb 2018 17:38:27 -0700
Message-ID: &lt;151822310695.52376.2707461327280470402.stgit@djiang5-desk3.ch.intel.com&gt;
In-Reply-To: &lt;151822289999.52376.4998780583577188804.stgit@djiang5-desk3.ch.intel.com&gt;
References: &lt;151822289999.52376.4998780583577188804.stgit@djiang5-desk3.ch.intel.com&gt;
User-Agent: StGit/0.17.1-dirty
MIME-Version: 1.0
Content-Type: text/plain; charset=&quot;utf-8&quot;
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=32902">Dave Jiang</a> - Feb. 10, 2018, 12:38 a.m.</div>
<pre class="content">
<span class="from">From: Dan Williams &lt;dan.j.williams@intel.com&gt;</span>

When device-dax is operating in huge-page mode we want it to behave like
hugetlbfs and report the MMU page mapping size that is being enforced by
the vma. Similar to commit 31383c6865a5 &quot;mm, hugetlbfs: introduce
-&gt;split() to vm_operations_struct&quot; it would be messy to teach
vma_mmu_pagesize() about device-dax page mapping sizes in the same
(hstate) way that hugetlbfs communicates this attribute.  Instead, these
patches introduce a new -&gt;pagesize() vm operation.

Cc: Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;
Cc: Paul Mackerras &lt;paulus@samba.org&gt;
Cc: Michael Ellerman &lt;mpe@ellerman.id.au&gt;
Reported-by: Jane Chu &lt;jane.chu@oracle.com&gt;
<span class="signed-off-by">Signed-off-by: Dan Williams &lt;dan.j.williams@intel.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Dave Jiang &lt;dave.jiang@intel.com&gt;</span>
---
 arch/powerpc/mm/hugetlbpage.c |    5 +----
 include/linux/mm.h            |    1 +
 mm/hugetlb.c                  |   23 ++++++++++++-----------
 3 files changed, 14 insertions(+), 15 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/powerpc/mm/hugetlbpage.c b/arch/powerpc/mm/hugetlbpage.c</span>
<span class="p_header">index a9b9083c5e49..c6a2e577e842 100644</span>
<span class="p_header">--- a/arch/powerpc/mm/hugetlbpage.c</span>
<span class="p_header">+++ b/arch/powerpc/mm/hugetlbpage.c</span>
<span class="p_chunk">@@ -568,10 +568,7 @@</span> <span class="p_context"> unsigned long vma_mmu_pagesize(struct vm_area_struct *vma)</span>
 	if (!radix_enabled())
 		return 1UL &lt;&lt; mmu_psize_to_shift(psize);
 #endif
<span class="p_del">-	if (!is_vm_hugetlb_page(vma))</span>
<span class="p_del">-		return PAGE_SIZE;</span>
<span class="p_del">-</span>
<span class="p_del">-	return huge_page_size(hstate_vma(vma));</span>
<span class="p_add">+	return vma_kernel_pagesize(vma);</span>
 }
 
 static inline bool is_power_of_4(unsigned long x)
<span class="p_header">diff --git a/include/linux/mm.h b/include/linux/mm.h</span>
<span class="p_header">index ea818ff739cd..37b9aef91ec7 100644</span>
<span class="p_header">--- a/include/linux/mm.h</span>
<span class="p_header">+++ b/include/linux/mm.h</span>
<span class="p_chunk">@@ -383,6 +383,7 @@</span> <span class="p_context"> struct vm_operations_struct {</span>
 	int (*huge_fault)(struct vm_fault *vmf, enum page_entry_size pe_size);
 	void (*map_pages)(struct vm_fault *vmf,
 			pgoff_t start_pgoff, pgoff_t end_pgoff);
<span class="p_add">+	unsigned long (*pagesize)(struct vm_area_struct * area);</span>
 
 	/* notification that a previously read-only page is about to become
 	 * writable, if an error is returned it will cause a SIGBUS */
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 9a334f5fb730..8fa069b5cb4d 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -637,14 +637,9 @@</span> <span class="p_context"> EXPORT_SYMBOL_GPL(linear_hugepage_index);</span>
  */
 unsigned long vma_kernel_pagesize(struct vm_area_struct *vma)
 {
<span class="p_del">-	struct hstate *hstate;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (!is_vm_hugetlb_page(vma))</span>
<span class="p_del">-		return PAGE_SIZE;</span>
<span class="p_del">-</span>
<span class="p_del">-	hstate = hstate_vma(vma);</span>
<span class="p_del">-</span>
<span class="p_del">-	return 1UL &lt;&lt; huge_page_shift(hstate);</span>
<span class="p_add">+	if (vma-&gt;vm_ops &amp;&amp; vma-&gt;vm_ops-&gt;pagesize)</span>
<span class="p_add">+		return vma-&gt;vm_ops-&gt;pagesize(vma);</span>
<span class="p_add">+	return PAGE_SIZE;</span>
 }
 EXPORT_SYMBOL_GPL(vma_kernel_pagesize);
 
<span class="p_chunk">@@ -654,12 +649,10 @@</span> <span class="p_context"> EXPORT_SYMBOL_GPL(vma_kernel_pagesize);</span>
  * architectures where it differs, an architecture-specific version of this
  * function is required.
  */
<span class="p_del">-#ifndef vma_mmu_pagesize</span>
<span class="p_del">-unsigned long vma_mmu_pagesize(struct vm_area_struct *vma)</span>
<span class="p_add">+__weak unsigned long vma_mmu_pagesize(struct vm_area_struct *vma)</span>
 {
 	return vma_kernel_pagesize(vma);
 }
<span class="p_del">-#endif</span>
 
 /*
  * Flags for MAP_PRIVATE reservations.  These are stored in the bottom
<span class="p_chunk">@@ -3132,6 +3125,13 @@</span> <span class="p_context"> static int hugetlb_vm_op_split(struct vm_area_struct *vma, unsigned long addr)</span>
 	return 0;
 }
 
<span class="p_add">+static unsigned long hugetlb_vm_op_pagesize(struct vm_area_struct *vma)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct hstate *hstate = hstate_vma(vma);</span>
<span class="p_add">+</span>
<span class="p_add">+	return 1UL &lt;&lt; huge_page_shift(hstate);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 /*
  * We cannot handle pagefaults against hugetlb pages at all.  They cause
  * handle_mm_fault() to try to instantiate regular-sized pages in the
<span class="p_chunk">@@ -3149,6 +3149,7 @@</span> <span class="p_context"> const struct vm_operations_struct hugetlb_vm_ops = {</span>
 	.open = hugetlb_vm_op_open,
 	.close = hugetlb_vm_op_close,
 	.split = hugetlb_vm_op_split,
<span class="p_add">+	.pagesize = hugetlb_vm_op_pagesize,</span>
 };
 
 static pte_t make_huge_pte(struct vm_area_struct *vma, struct page *page,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



