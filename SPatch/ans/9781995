
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.4,17/90] sparc64: delete old wrap code - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.4,17/90] sparc64: delete old wrap code</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 12, 2017, 3:25 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170612152557.116132868@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9781995/mbox/"
   >mbox</a>
|
   <a href="/patch/9781995/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9781995/">/patch/9781995/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	9707260244 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 12 Jun 2017 16:17:09 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 8BAD527CAF
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 12 Jun 2017 16:17:09 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 805DD28510; Mon, 12 Jun 2017 16:17:09 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C716B27CAF
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 12 Jun 2017 16:17:08 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755045AbdFLQRC (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 12 Jun 2017 12:17:02 -0400
Received: from mail.linuxfoundation.org ([140.211.169.12]:42148 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754987AbdFLPiJ (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 12 Jun 2017 11:38:09 -0400
Received: from localhost (LFbn-1-12060-104.w90-92.abo.wanadoo.fr
	[90.92.122.104])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id B9A92BA9;
	Mon, 12 Jun 2017 15:38:03 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, Pavel Tatashin &lt;pasha.tatashin@oracle.com&gt;,
	Bob Picco &lt;bob.picco@oracle.com&gt;,
	Steven Sistare &lt;steven.sistare@oracle.com&gt;,
	&quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;
Subject: [PATCH 4.4 17/90] sparc64: delete old wrap code
Date: Mon, 12 Jun 2017 17:25:23 +0200
Message-Id: &lt;20170612152557.116132868@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.13.1
In-Reply-To: &lt;20170612152556.133240249@linuxfoundation.org&gt;
References: &lt;20170612152556.133240249@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - June 12, 2017, 3:25 p.m.</div>
<pre class="content">
4.4-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: Pavel Tatashin &lt;pasha.tatashin@oracle.com&gt;</span>


[ Upstream commit 0197e41ce70511dc3b71f7fefa1a676e2b5cd60b ]

The old method that is using xcall and softint to get new context id is
deleted, as it is replaced by a method of using per_cpu_secondary_mm
without xcall to perform the context wrap.
<span class="signed-off-by">
Signed-off-by: Pavel Tatashin &lt;pasha.tatashin@oracle.com&gt;</span>
<span class="reviewed-by">Reviewed-by: Bob Picco &lt;bob.picco@oracle.com&gt;</span>
<span class="reviewed-by">Reviewed-by: Steven Sistare &lt;steven.sistare@oracle.com&gt;</span>
<span class="signed-off-by">Signed-off-by: David S. Miller &lt;davem@davemloft.net&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>
---
 arch/sparc/include/asm/mmu_context_64.h |    6 ------
 arch/sparc/include/asm/pil.h            |    1 -
 arch/sparc/kernel/kernel.h              |    1 -
 arch/sparc/kernel/smp_64.c              |   31 -------------------------------
 arch/sparc/kernel/ttable_64.S           |    2 +-
 arch/sparc/mm/ultra.S                   |    5 -----
 6 files changed, 1 insertion(+), 45 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/sparc/include/asm/mmu_context_64.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/mmu_context_64.h</span>
<span class="p_chunk">@@ -19,12 +19,6 @@</span> <span class="p_context"> extern unsigned long mmu_context_bmap[];</span>
 
 DECLARE_PER_CPU(struct mm_struct *, per_cpu_secondary_mm);
 void get_new_mmu_context(struct mm_struct *mm);
<span class="p_del">-#ifdef CONFIG_SMP</span>
<span class="p_del">-void smp_new_mmu_context_version(void);</span>
<span class="p_del">-#else</span>
<span class="p_del">-#define smp_new_mmu_context_version() do { } while (0)</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
 int init_new_context(struct task_struct *tsk, struct mm_struct *mm);
 void destroy_context(struct mm_struct *mm);
 
<span class="p_header">--- a/arch/sparc/include/asm/pil.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/pil.h</span>
<span class="p_chunk">@@ -20,7 +20,6 @@</span> <span class="p_context"></span>
 #define PIL_SMP_CALL_FUNC	1
 #define PIL_SMP_RECEIVE_SIGNAL	2
 #define PIL_SMP_CAPTURE		3
<span class="p_del">-#define PIL_SMP_CTX_NEW_VERSION	4</span>
 #define PIL_DEVICE_IRQ		5
 #define PIL_SMP_CALL_FUNC_SNGL	6
 #define PIL_DEFERRED_PCR_WORK	7
<span class="p_header">--- a/arch/sparc/kernel/kernel.h</span>
<span class="p_header">+++ b/arch/sparc/kernel/kernel.h</span>
<span class="p_chunk">@@ -37,7 +37,6 @@</span> <span class="p_context"> void handle_stdfmna(struct pt_regs *regs</span>
 /* smp_64.c */
 void __irq_entry smp_call_function_client(int irq, struct pt_regs *regs);
 void __irq_entry smp_call_function_single_client(int irq, struct pt_regs *regs);
<span class="p_del">-void __irq_entry smp_new_mmu_context_version_client(int irq, struct pt_regs *regs);</span>
 void __irq_entry smp_penguin_jailcell(int irq, struct pt_regs *regs);
 void __irq_entry smp_receive_signal_client(int irq, struct pt_regs *regs);
 
<span class="p_header">--- a/arch/sparc/kernel/smp_64.c</span>
<span class="p_header">+++ b/arch/sparc/kernel/smp_64.c</span>
<span class="p_chunk">@@ -959,37 +959,6 @@</span> <span class="p_context"> void flush_dcache_page_all(struct mm_str</span>
 	preempt_enable();
 }
 
<span class="p_del">-void __irq_entry smp_new_mmu_context_version_client(int irq, struct pt_regs *regs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct mm_struct *mm;</span>
<span class="p_del">-	unsigned long flags;</span>
<span class="p_del">-</span>
<span class="p_del">-	clear_softint(1 &lt;&lt; irq);</span>
<span class="p_del">-</span>
<span class="p_del">-	/* See if we need to allocate a new TLB context because</span>
<span class="p_del">-	 * the version of the one we are using is now out of date.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	mm = current-&gt;active_mm;</span>
<span class="p_del">-	if (unlikely(!mm || (mm == &amp;init_mm)))</span>
<span class="p_del">-		return;</span>
<span class="p_del">-</span>
<span class="p_del">-	spin_lock_irqsave(&amp;mm-&gt;context.lock, flags);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (unlikely(!CTX_VALID(mm-&gt;context)))</span>
<span class="p_del">-		get_new_mmu_context(mm);</span>
<span class="p_del">-</span>
<span class="p_del">-	spin_unlock_irqrestore(&amp;mm-&gt;context.lock, flags);</span>
<span class="p_del">-</span>
<span class="p_del">-	load_secondary_context(mm);</span>
<span class="p_del">-	__flush_tlb_mm(CTX_HWBITS(mm-&gt;context),</span>
<span class="p_del">-		       SECONDARY_CONTEXT);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-void smp_new_mmu_context_version(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	smp_cross_call(&amp;xcall_new_mmu_context_version, 0, 0, 0);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 #ifdef CONFIG_KGDB
 void kgdb_roundup_cpus(unsigned long flags)
 {
<span class="p_header">--- a/arch/sparc/kernel/ttable_64.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/ttable_64.S</span>
<span class="p_chunk">@@ -50,7 +50,7 @@</span> <span class="p_context"> tl0_resv03e:	BTRAP(0x3e) BTRAP(0x3f) BTR</span>
 tl0_irq1:	TRAP_IRQ(smp_call_function_client, 1)
 tl0_irq2:	TRAP_IRQ(smp_receive_signal_client, 2)
 tl0_irq3:	TRAP_IRQ(smp_penguin_jailcell, 3)
<span class="p_del">-tl0_irq4:	TRAP_IRQ(smp_new_mmu_context_version_client, 4)</span>
<span class="p_add">+tl0_irq4:       BTRAP(0x44)</span>
 #else
 tl0_irq1:	BTRAP(0x41)
 tl0_irq2:	BTRAP(0x42)
<span class="p_header">--- a/arch/sparc/mm/ultra.S</span>
<span class="p_header">+++ b/arch/sparc/mm/ultra.S</span>
<span class="p_chunk">@@ -971,11 +971,6 @@</span> <span class="p_context"> xcall_capture:</span>
 	wr		%g0, (1 &lt;&lt; PIL_SMP_CAPTURE), %set_softint
 	retry
 
<span class="p_del">-	.globl		xcall_new_mmu_context_version</span>
<span class="p_del">-xcall_new_mmu_context_version:</span>
<span class="p_del">-	wr		%g0, (1 &lt;&lt; PIL_SMP_CTX_NEW_VERSION), %set_softint</span>
<span class="p_del">-	retry</span>
<span class="p_del">-</span>
 #ifdef CONFIG_KGDB
 	.globl		xcall_kgdb_capture
 xcall_kgdb_capture:

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



