
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.4,02/16] parisc: Purge TLB before setting PTE - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.4,02/16] parisc: Purge TLB before setting PTE</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 13, 2016, 5:15 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161213171519.082318651@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9472805/mbox/"
   >mbox</a>
|
   <a href="/patch/9472805/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9472805/">/patch/9472805/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	355D56021C for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 13 Dec 2016 17:26:29 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 24AEB2860F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 13 Dec 2016 17:26:29 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 1878C28639; Tue, 13 Dec 2016 17:26:29 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 916422860F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 13 Dec 2016 17:26:28 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S936148AbcLMR0W (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 13 Dec 2016 12:26:22 -0500
Received: from mail.linuxfoundation.org ([140.211.169.12]:56868 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S935812AbcLMRQH (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 13 Dec 2016 12:16:07 -0500
Received: from localhost (64-21-215-7.static-ip.telepacific.net
	[64.21.215.7])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id C5DAABBF;
	Tue, 13 Dec 2016 17:16:06 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, John David Anglin &lt;dave.anglin@bell.net&gt;,
	Helge Deller &lt;deller@gmx.de&gt;
Subject: [PATCH 4.4 02/16] parisc: Purge TLB before setting PTE
Date: Tue, 13 Dec 2016 09:15:48 -0800
Message-Id: &lt;20161213171519.082318651@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.10.2
In-Reply-To: &lt;20161213171518.862135257@linuxfoundation.org&gt;
References: &lt;20161213171518.862135257@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Dec. 13, 2016, 5:15 p.m.</div>
<pre class="content">
4.4-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: John David Anglin &lt;dave.anglin@bell.net&gt;</span>

commit c78e710c1c9fbeff43dddc0aa3d0ff458e70b0cc upstream.

The attached change interchanges the order of purging the TLB and
setting the corresponding page table entry.  TLB purges are strongly
ordered.  It occurred to me one night that setting the PTE first might
have subtle ordering issues on SMP machines and cause random memory
corruption.

A TLB lock guards the insertion of user TLB entries.  So after the TLB
is purged, a new entry can&#39;t be inserted until the lock is released.
This ensures that the new PTE value is used when the lock is released.

Since making this change, no random segmentation faults have been
observed on the Debian hppa buildd servers.
<span class="signed-off-by">
Signed-off-by: John David Anglin  &lt;dave.anglin@bell.net&gt;</span>
<span class="signed-off-by">Signed-off-by: Helge Deller &lt;deller@gmx.de&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>

---
 arch/parisc/include/asm/pgtable.h |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/parisc/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/parisc/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -65,9 +65,9 @@</span> <span class="p_context"> static inline void purge_tlb_entries(str</span>
 		unsigned long flags;				\
 		spin_lock_irqsave(&amp;pa_tlb_lock, flags);		\
 		old_pte = *ptep;				\
<span class="p_del">-		set_pte(ptep, pteval);				\</span>
 		if (pte_inserted(old_pte))			\
 			purge_tlb_entries(mm, addr);		\
<span class="p_add">+		set_pte(ptep, pteval);				\</span>
 		spin_unlock_irqrestore(&amp;pa_tlb_lock, flags);	\
 	} while (0)
 
<span class="p_chunk">@@ -478,8 +478,8 @@</span> <span class="p_context"> static inline int ptep_test_and_clear_yo</span>
 		spin_unlock_irqrestore(&amp;pa_tlb_lock, flags);
 		return 0;
 	}
<span class="p_del">-	set_pte(ptep, pte_mkold(pte));</span>
 	purge_tlb_entries(vma-&gt;vm_mm, addr);
<span class="p_add">+	set_pte(ptep, pte_mkold(pte));</span>
 	spin_unlock_irqrestore(&amp;pa_tlb_lock, flags);
 	return 1;
 }
<span class="p_chunk">@@ -492,9 +492,9 @@</span> <span class="p_context"> static inline pte_t ptep_get_and_clear(s</span>
 
 	spin_lock_irqsave(&amp;pa_tlb_lock, flags);
 	old_pte = *ptep;
<span class="p_del">-	set_pte(ptep, __pte(0));</span>
 	if (pte_inserted(old_pte))
 		purge_tlb_entries(mm, addr);
<span class="p_add">+	set_pte(ptep, __pte(0));</span>
 	spin_unlock_irqrestore(&amp;pa_tlb_lock, flags);
 
 	return old_pte;
<span class="p_chunk">@@ -504,8 +504,8 @@</span> <span class="p_context"> static inline void ptep_set_wrprotect(st</span>
 {
 	unsigned long flags;
 	spin_lock_irqsave(&amp;pa_tlb_lock, flags);
<span class="p_del">-	set_pte(ptep, pte_wrprotect(*ptep));</span>
 	purge_tlb_entries(mm, addr);
<span class="p_add">+	set_pte(ptep, pte_wrprotect(*ptep));</span>
 	spin_unlock_irqrestore(&amp;pa_tlb_lock, flags);
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



