
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,1/9] topology: rename topology_thread_cpumask() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,1/9] topology: rename topology_thread_cpumask()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=115851">Bartosz Golaszewski</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>May 4, 2015, 10:28 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1430735304-14866-2-git-send-email-bgolaszewski@baylibre.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6324991/mbox/"
   >mbox</a>
|
   <a href="/patch/6324991/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6324991/">/patch/6324991/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id D54329F374
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  4 May 2015 10:30:13 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 7C0A9202C8
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  4 May 2015 10:30:12 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id E429B202EB
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  4 May 2015 10:30:10 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752826AbbEDKaD (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 4 May 2015 06:30:03 -0400
Received: from mail-wi0-f174.google.com ([209.85.212.174]:37980 &quot;EHLO
	mail-wi0-f174.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752080AbbEDK2c (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 4 May 2015 06:28:32 -0400
Received: by wiun10 with SMTP id n10so105036332wiu.1
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Mon, 04 May 2015 03:28:31 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20130820;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=fdcyFh94shx+tLomx7z82NuoCo8Wy42eO0MIRORFFRg=;
	b=hzzAxSXES1y+xHhZaP259G8ZzYEH0xtrqdJ9k8PwvNW4prEjw+2fWgLk06AJAQTL8j
	NgRjlCeN0WZn+GosKu3tPI+AKDXxj6Jmmghhz074q4dNr8pUZDkD0YtfqXhlr33wCdnQ
	Z+DDZ2B2I4dzaRmcrUl+BPjWl0KwahwL17k/OkUflBfv1YzYcSe8wKibRXM7YmodhRnk
	I9utXKkyljMWronFqbPv7xcRj6w0U+CYInYORj5PHOqndSvLI8gTyw9dxsoZreEBcLHg
	revnjB9VnV4jgy+JwOna3hbudr8X2Avdm2V/wJ2mQaXAdbTK9dlE1Nq5lffufHXZvflR
	OINQ==
X-Gm-Message-State: ALoCoQmK0IxdJzVNTW/TK+OEaSTbW1aw8o3/GeD6TchaFUyg4XtNOGdQCg9S6kvyZuVanGMj70Us
X-Received: by 10.180.219.42 with SMTP id pl10mr18422648wic.70.1430735311389;
	Mon, 04 May 2015 03:28:31 -0700 (PDT)
Received: from bgdev-debian.home
	(LPoitiers-656-1-62-228.w90-63.abo.wanadoo.fr. [90.63.143.228])
	by mx.google.com with ESMTPSA id
	j1sm7561916wia.22.2015.05.04.03.28.29
	(version=TLSv1.2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Mon, 04 May 2015 03:28:30 -0700 (PDT)
From: Bartosz Golaszewski &lt;bgolaszewski@baylibre.com&gt;
To: LKML &lt;linux-kernel@vger.kernel.org&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;, x86@kernel.org,
	&quot;Rafael J. Wysocki&quot; &lt;rjw@rjwysocki.net&gt;,
	Viresh Kumar &lt;viresh.kumar@linaro.org&gt;,
	Guenter Roeck &lt;linux@roeck-us.net&gt;, Jean Delvare &lt;jdelvare@suse.de&gt;,
	Fenghua Yu &lt;fenghua.yu@intel.com&gt;,
	Benoit Cousson &lt;bcousson@baylibre.com&gt;, Jonathan Corbet &lt;corbet@lwn.net&gt;,
	Oleg Drokin &lt;oleg.drokin@intel.com&gt;,
	Russell King &lt;linux@arm.linux.org.uk&gt;,
	Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	Bartosz Golaszewski &lt;bgolaszewski@baylibre.com&gt;
Subject: [PATCH v2 1/9] topology: rename topology_thread_cpumask()
Date: Mon,  4 May 2015 12:28:16 +0200
Message-Id: &lt;1430735304-14866-2-git-send-email-bgolaszewski@baylibre.com&gt;
X-Mailer: git-send-email 2.1.4
In-Reply-To: &lt;1430735304-14866-1-git-send-email-bgolaszewski@baylibre.com&gt;
References: &lt;1430735304-14866-1-git-send-email-bgolaszewski@baylibre.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	T_RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=115851">Bartosz Golaszewski</a> - May 4, 2015, 10:28 a.m.</div>
<pre class="content">
Rename topology_thread_cpumask() to topology_sibling_cpumask() for
more consistency with scheduler code.
<span class="signed-off-by">
Signed-off-by: Bartosz Golaszewski &lt;bgolaszewski@baylibre.com&gt;</span>
---
 Documentation/cputopology.txt                          | 2 +-
 arch/arm/include/asm/topology.h                        | 2 +-
 arch/arm64/include/asm/topology.h                      | 2 +-
 arch/ia64/include/asm/topology.h                       | 2 +-
 arch/mips/include/asm/topology.h                       | 2 +-
 arch/powerpc/include/asm/topology.h                    | 2 +-
 arch/powerpc/mm/tlb_nohash.c                           | 2 +-
 arch/s390/include/asm/topology.h                       | 3 ++-
 arch/sparc/include/asm/topology_64.h                   | 2 +-
 arch/tile/include/asm/topology.h                       | 2 +-
 arch/x86/include/asm/topology.h                        | 2 +-
 arch/x86/kernel/cpu/perf_event_intel.c                 | 6 +++---
 block/blk-mq-cpumap.c                                  | 2 +-
 drivers/acpi/acpi_pad.c                                | 2 +-
 drivers/base/topology.c                                | 2 +-
 drivers/net/ethernet/sfc/efx.c                         | 2 +-
 drivers/staging/lustre/lustre/libcfs/linux/linux-cpu.c | 2 +-
 drivers/staging/lustre/lustre/ptlrpc/service.c         | 4 ++--
 include/linux/topology.h                               | 6 +++---
 lib/cpu_rmap.c                                         | 2 +-
 20 files changed, 26 insertions(+), 25 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=709">Russell King - ARM Linux</a> - May 6, 2015, 11:27 a.m.</div>
<pre class="content">
On Mon, May 04, 2015 at 12:28:16PM +0200, Bartosz Golaszewski wrote:
<span class="quote">&gt; Rename topology_thread_cpumask() to topology_sibling_cpumask() for</span>
<span class="quote">&gt; more consistency with scheduler code.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Bartosz Golaszewski &lt;bgolaszewski@baylibre.com&gt;</span>
<span class="acked-by">
Acked-by: Russell King &lt;rmk+kernel@arm.linux.org.uk&gt;</span>

for:
<span class="quote">
&gt;  arch/arm/include/asm/topology.h                        | 2 +-</span>
<span class="quote">
&gt; diff --git a/arch/arm/include/asm/topology.h b/arch/arm/include/asm/topology.h</span>
<span class="quote">&gt; index 2fe85ff..370f7a7 100644</span>
<span class="quote">&gt; --- a/arch/arm/include/asm/topology.h</span>
<span class="quote">&gt; +++ b/arch/arm/include/asm/topology.h</span>
<span class="quote">&gt; @@ -18,7 +18,7 @@ extern struct cputopo_arm cpu_topology[NR_CPUS];</span>
<span class="quote">&gt;  #define topology_physical_package_id(cpu)	(cpu_topology[cpu].socket_id)</span>
<span class="quote">&gt;  #define topology_core_id(cpu)		(cpu_topology[cpu].core_id)</span>
<span class="quote">&gt;  #define topology_core_cpumask(cpu)	(&amp;cpu_topology[cpu].core_sibling)</span>
<span class="quote">&gt; -#define topology_thread_cpumask(cpu)	(&amp;cpu_topology[cpu].thread_sibling)</span>
<span class="quote">&gt; +#define topology_sibling_cpumask(cpu)	(&amp;cpu_topology[cpu].thread_sibling)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  void init_cpu_topology(void);</span>
<span class="quote">&gt;  void store_cpu_topology(unsigned int cpuid);</span>

Thanks.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/Documentation/cputopology.txt b/Documentation/cputopology.txt</span>
<span class="p_header">index 0aad6de..428a961 100644</span>
<span class="p_header">--- a/Documentation/cputopology.txt</span>
<span class="p_header">+++ b/Documentation/cputopology.txt</span>
<span class="p_chunk">@@ -44,7 +44,7 @@</span> <span class="p_context"> these macros in include/asm-XXX/topology.h:</span>
 #define topology_physical_package_id(cpu)
 #define topology_core_id(cpu)
 #define topology_book_id(cpu)
<span class="p_del">-#define topology_thread_cpumask(cpu)</span>
<span class="p_add">+#define topology_sibling_cpumask(cpu)</span>
 #define topology_core_cpumask(cpu)
 #define topology_book_cpumask(cpu)
 
<span class="p_header">diff --git a/arch/arm/include/asm/topology.h b/arch/arm/include/asm/topology.h</span>
<span class="p_header">index 2fe85ff..370f7a7 100644</span>
<span class="p_header">--- a/arch/arm/include/asm/topology.h</span>
<span class="p_header">+++ b/arch/arm/include/asm/topology.h</span>
<span class="p_chunk">@@ -18,7 +18,7 @@</span> <span class="p_context"> extern struct cputopo_arm cpu_topology[NR_CPUS];</span>
 #define topology_physical_package_id(cpu)	(cpu_topology[cpu].socket_id)
 #define topology_core_id(cpu)		(cpu_topology[cpu].core_id)
 #define topology_core_cpumask(cpu)	(&amp;cpu_topology[cpu].core_sibling)
<span class="p_del">-#define topology_thread_cpumask(cpu)	(&amp;cpu_topology[cpu].thread_sibling)</span>
<span class="p_add">+#define topology_sibling_cpumask(cpu)	(&amp;cpu_topology[cpu].thread_sibling)</span>
 
 void init_cpu_topology(void);
 void store_cpu_topology(unsigned int cpuid);
<span class="p_header">diff --git a/arch/arm64/include/asm/topology.h b/arch/arm64/include/asm/topology.h</span>
<span class="p_header">index 7ebcd31..225ec35 100644</span>
<span class="p_header">--- a/arch/arm64/include/asm/topology.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/topology.h</span>
<span class="p_chunk">@@ -18,7 +18,7 @@</span> <span class="p_context"> extern struct cpu_topology cpu_topology[NR_CPUS];</span>
 #define topology_physical_package_id(cpu)	(cpu_topology[cpu].cluster_id)
 #define topology_core_id(cpu)		(cpu_topology[cpu].core_id)
 #define topology_core_cpumask(cpu)	(&amp;cpu_topology[cpu].core_sibling)
<span class="p_del">-#define topology_thread_cpumask(cpu)	(&amp;cpu_topology[cpu].thread_sibling)</span>
<span class="p_add">+#define topology_sibling_cpumask(cpu)	(&amp;cpu_topology[cpu].thread_sibling)</span>
 
 void init_cpu_topology(void);
 void store_cpu_topology(unsigned int cpuid);
<span class="p_header">diff --git a/arch/ia64/include/asm/topology.h b/arch/ia64/include/asm/topology.h</span>
<span class="p_header">index 6437ca2..3ad8f69 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/topology.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/topology.h</span>
<span class="p_chunk">@@ -53,7 +53,7 @@</span> <span class="p_context"> void build_cpu_to_node_map(void);</span>
 #define topology_physical_package_id(cpu)	(cpu_data(cpu)-&gt;socket_id)
 #define topology_core_id(cpu)			(cpu_data(cpu)-&gt;core_id)
 #define topology_core_cpumask(cpu)		(&amp;cpu_core_map[cpu])
<span class="p_del">-#define topology_thread_cpumask(cpu)		(&amp;per_cpu(cpu_sibling_map, cpu))</span>
<span class="p_add">+#define topology_sibling_cpumask(cpu)		(&amp;per_cpu(cpu_sibling_map, cpu))</span>
 #endif
 
 extern void arch_fix_phys_package_id(int num, u32 slot);
<span class="p_header">diff --git a/arch/mips/include/asm/topology.h b/arch/mips/include/asm/topology.h</span>
<span class="p_header">index 3e307ec..7afda41 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/topology.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/topology.h</span>
<span class="p_chunk">@@ -15,7 +15,7 @@</span> <span class="p_context"></span>
 #define topology_physical_package_id(cpu)	(cpu_data[cpu].package)
 #define topology_core_id(cpu)			(cpu_data[cpu].core)
 #define topology_core_cpumask(cpu)		(&amp;cpu_core_map[cpu])
<span class="p_del">-#define topology_thread_cpumask(cpu)		(&amp;cpu_sibling_map[cpu])</span>
<span class="p_add">+#define topology_sibling_cpumask(cpu)		(&amp;cpu_sibling_map[cpu])</span>
 #endif
 
 #endif /* __ASM_TOPOLOGY_H */
<span class="p_header">diff --git a/arch/powerpc/include/asm/topology.h b/arch/powerpc/include/asm/topology.h</span>
<span class="p_header">index 5f1048e..8b3b46b 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/topology.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/topology.h</span>
<span class="p_chunk">@@ -87,7 +87,7 @@</span> <span class="p_context"> static inline int prrn_is_enabled(void)</span>
 #include &lt;asm/smp.h&gt;
 
 #define topology_physical_package_id(cpu)	(cpu_to_chip_id(cpu))
<span class="p_del">-#define topology_thread_cpumask(cpu)	(per_cpu(cpu_sibling_map, cpu))</span>
<span class="p_add">+#define topology_sibling_cpumask(cpu)	(per_cpu(cpu_sibling_map, cpu))</span>
 #define topology_core_cpumask(cpu)	(per_cpu(cpu_core_map, cpu))
 #define topology_core_id(cpu)		(cpu_to_core_id(cpu))
 #endif
<span class="p_header">diff --git a/arch/powerpc/mm/tlb_nohash.c b/arch/powerpc/mm/tlb_nohash.c</span>
<span class="p_header">index cbd3d06..723a099 100644</span>
<span class="p_header">--- a/arch/powerpc/mm/tlb_nohash.c</span>
<span class="p_header">+++ b/arch/powerpc/mm/tlb_nohash.c</span>
<span class="p_chunk">@@ -217,7 +217,7 @@</span> <span class="p_context"> static DEFINE_RAW_SPINLOCK(tlbivax_lock);</span>
 static int mm_is_core_local(struct mm_struct *mm)
 {
 	return cpumask_subset(mm_cpumask(mm),
<span class="p_del">-			      topology_thread_cpumask(smp_processor_id()));</span>
<span class="p_add">+			      topology_sibling_cpumask(smp_processor_id()));</span>
 }
 
 struct tlb_flush_param {
<span class="p_header">diff --git a/arch/s390/include/asm/topology.h b/arch/s390/include/asm/topology.h</span>
<span class="p_header">index b1453a2..4990f6c 100644</span>
<span class="p_header">--- a/arch/s390/include/asm/topology.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/topology.h</span>
<span class="p_chunk">@@ -22,7 +22,8 @@</span> <span class="p_context"> DECLARE_PER_CPU(struct cpu_topology_s390, cpu_topology);</span>
 
 #define topology_physical_package_id(cpu) (per_cpu(cpu_topology, cpu).socket_id)
 #define topology_thread_id(cpu)		  (per_cpu(cpu_topology, cpu).thread_id)
<span class="p_del">-#define topology_thread_cpumask(cpu)	  (&amp;per_cpu(cpu_topology, cpu).thread_mask)</span>
<span class="p_add">+#define topology_sibling_cpumask(cpu) \</span>
<span class="p_add">+		(&amp;per_cpu(cpu_topology, cpu).thread_mask)</span>
 #define topology_core_id(cpu)		  (per_cpu(cpu_topology, cpu).core_id)
 #define topology_core_cpumask(cpu)	  (&amp;per_cpu(cpu_topology, cpu).core_mask)
 #define topology_book_id(cpu)		  (per_cpu(cpu_topology, cpu).book_id)
<span class="p_header">diff --git a/arch/sparc/include/asm/topology_64.h b/arch/sparc/include/asm/topology_64.h</span>
<span class="p_header">index ed8f071..9a928fc 100644</span>
<span class="p_header">--- a/arch/sparc/include/asm/topology_64.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/topology_64.h</span>
<span class="p_chunk">@@ -41,7 +41,7 @@</span> <span class="p_context"> static inline int pcibus_to_node(struct pci_bus *pbus)</span>
 #define topology_physical_package_id(cpu)	(cpu_data(cpu).proc_id)
 #define topology_core_id(cpu)			(cpu_data(cpu).core_id)
 #define topology_core_cpumask(cpu)		(&amp;cpu_core_map[cpu])
<span class="p_del">-#define topology_thread_cpumask(cpu)		(&amp;per_cpu(cpu_sibling_map, cpu))</span>
<span class="p_add">+#define topology_sibling_cpumask(cpu)		(&amp;per_cpu(cpu_sibling_map, cpu))</span>
 #endif /* CONFIG_SMP */
 
 extern cpumask_t cpu_core_map[NR_CPUS];
<span class="p_header">diff --git a/arch/tile/include/asm/topology.h b/arch/tile/include/asm/topology.h</span>
<span class="p_header">index 9383118..76b0d0e 100644</span>
<span class="p_header">--- a/arch/tile/include/asm/topology.h</span>
<span class="p_header">+++ b/arch/tile/include/asm/topology.h</span>
<span class="p_chunk">@@ -55,7 +55,7 @@</span> <span class="p_context"> static inline const struct cpumask *cpumask_of_node(int node)</span>
 #define topology_physical_package_id(cpu)       ((void)(cpu), 0)
 #define topology_core_id(cpu)                   (cpu)
 #define topology_core_cpumask(cpu)              ((void)(cpu), cpu_online_mask)
<span class="p_del">-#define topology_thread_cpumask(cpu)            cpumask_of(cpu)</span>
<span class="p_add">+#define topology_sibling_cpumask(cpu)           cpumask_of(cpu)</span>
 #endif
 
 #endif /* _ASM_TILE_TOPOLOGY_H */
<span class="p_header">diff --git a/arch/x86/include/asm/topology.h b/arch/x86/include/asm/topology.h</span>
<span class="p_header">index 0e8f04f..5a77593f 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/topology.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/topology.h</span>
<span class="p_chunk">@@ -124,7 +124,7 @@</span> <span class="p_context"> extern const struct cpumask *cpu_coregroup_mask(int cpu);</span>
 
 #ifdef ENABLE_TOPO_DEFINES
 #define topology_core_cpumask(cpu)		(per_cpu(cpu_core_map, cpu))
<span class="p_del">-#define topology_thread_cpumask(cpu)		(per_cpu(cpu_sibling_map, cpu))</span>
<span class="p_add">+#define topology_sibling_cpumask(cpu)		(per_cpu(cpu_sibling_map, cpu))</span>
 #endif
 
 static inline void arch_fix_phys_package_id(int num, u32 slot)
<span class="p_header">diff --git a/arch/x86/kernel/cpu/perf_event_intel.c b/arch/x86/kernel/cpu/perf_event_intel.c</span>
<span class="p_header">index 219d3fb..1b176ff 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/perf_event_intel.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/perf_event_intel.c</span>
<span class="p_chunk">@@ -2650,7 +2650,7 @@</span> <span class="p_context"> static void intel_pmu_cpu_starting(int cpu)</span>
 	if (!(x86_pmu.flags &amp; PMU_FL_NO_HT_SHARING)) {
 		void **onln = &amp;cpuc-&gt;kfree_on_online[X86_PERF_KFREE_SHARED];
 
<span class="p_del">-		for_each_cpu(i, topology_thread_cpumask(cpu)) {</span>
<span class="p_add">+		for_each_cpu(i, topology_sibling_cpumask(cpu)) {</span>
 			struct intel_shared_regs *pc;
 
 			pc = per_cpu(cpu_hw_events, i).shared_regs;
<span class="p_chunk">@@ -2670,7 +2670,7 @@</span> <span class="p_context"> static void intel_pmu_cpu_starting(int cpu)</span>
 	if (x86_pmu.flags &amp; PMU_FL_EXCL_CNTRS) {
 		int h = x86_pmu.num_counters &gt;&gt; 1;
 
<span class="p_del">-		for_each_cpu(i, topology_thread_cpumask(cpu)) {</span>
<span class="p_add">+		for_each_cpu(i, topology_sibling_cpumask(cpu)) {</span>
 			struct intel_excl_cntrs *c;
 
 			c = per_cpu(cpu_hw_events, i).excl_cntrs;
<span class="p_chunk">@@ -3394,7 +3394,7 @@</span> <span class="p_context"> static __init int fixup_ht_bug(void)</span>
 	if (!(x86_pmu.flags &amp; PMU_FL_EXCL_ENABLED))
 		return 0;
 
<span class="p_del">-	w = cpumask_weight(topology_thread_cpumask(cpu));</span>
<span class="p_add">+	w = cpumask_weight(topology_sibling_cpumask(cpu));</span>
 	if (w &gt; 1) {
 		pr_info(&quot;PMU erratum BJ122, BV98, HSD29 worked around, HT is on\n&quot;);
 		return 0;
<span class="p_header">diff --git a/block/blk-mq-cpumap.c b/block/blk-mq-cpumap.c</span>
<span class="p_header">index 5f13f4d..1e28ddb 100644</span>
<span class="p_header">--- a/block/blk-mq-cpumap.c</span>
<span class="p_header">+++ b/block/blk-mq-cpumap.c</span>
<span class="p_chunk">@@ -24,7 +24,7 @@</span> <span class="p_context"> static int get_first_sibling(unsigned int cpu)</span>
 {
 	unsigned int ret;
 
<span class="p_del">-	ret = cpumask_first(topology_thread_cpumask(cpu));</span>
<span class="p_add">+	ret = cpumask_first(topology_sibling_cpumask(cpu));</span>
 	if (ret &lt; nr_cpu_ids)
 		return ret;
 
<span class="p_header">diff --git a/drivers/acpi/acpi_pad.c b/drivers/acpi/acpi_pad.c</span>
<span class="p_header">index 6bc9cbc..00b3980 100644</span>
<span class="p_header">--- a/drivers/acpi/acpi_pad.c</span>
<span class="p_header">+++ b/drivers/acpi/acpi_pad.c</span>
<span class="p_chunk">@@ -105,7 +105,7 @@</span> <span class="p_context"> static void round_robin_cpu(unsigned int tsk_index)</span>
 	mutex_lock(&amp;round_robin_lock);
 	cpumask_clear(tmp);
 	for_each_cpu(cpu, pad_busy_cpus)
<span class="p_del">-		cpumask_or(tmp, tmp, topology_thread_cpumask(cpu));</span>
<span class="p_add">+		cpumask_or(tmp, tmp, topology_sibling_cpumask(cpu));</span>
 	cpumask_andnot(tmp, cpu_online_mask, tmp);
 	/* avoid HT sibilings if possible */
 	if (cpumask_empty(tmp))
<span class="p_header">diff --git a/drivers/base/topology.c b/drivers/base/topology.c</span>
<span class="p_header">index 6491f45..8b7d7f8 100644</span>
<span class="p_header">--- a/drivers/base/topology.c</span>
<span class="p_header">+++ b/drivers/base/topology.c</span>
<span class="p_chunk">@@ -61,7 +61,7 @@</span> <span class="p_context"> static DEVICE_ATTR_RO(physical_package_id);</span>
 define_id_show_func(core_id);
 static DEVICE_ATTR_RO(core_id);
 
<span class="p_del">-define_siblings_show_func(thread_siblings, thread_cpumask);</span>
<span class="p_add">+define_siblings_show_func(thread_siblings, sibling_cpumask);</span>
 static DEVICE_ATTR_RO(thread_siblings);
 static DEVICE_ATTR_RO(thread_siblings_list);
 
<span class="p_header">diff --git a/drivers/net/ethernet/sfc/efx.c b/drivers/net/ethernet/sfc/efx.c</span>
<span class="p_header">index 4b00545..65944dd 100644</span>
<span class="p_header">--- a/drivers/net/ethernet/sfc/efx.c</span>
<span class="p_header">+++ b/drivers/net/ethernet/sfc/efx.c</span>
<span class="p_chunk">@@ -1304,7 +1304,7 @@</span> <span class="p_context"> static unsigned int efx_wanted_parallelism(struct efx_nic *efx)</span>
 			if (!cpumask_test_cpu(cpu, thread_mask)) {
 				++count;
 				cpumask_or(thread_mask, thread_mask,
<span class="p_del">-					   topology_thread_cpumask(cpu));</span>
<span class="p_add">+					   topology_sibling_cpumask(cpu));</span>
 			}
 		}
 
<span class="p_header">diff --git a/drivers/staging/lustre/lustre/libcfs/linux/linux-cpu.c b/drivers/staging/lustre/lustre/libcfs/linux/linux-cpu.c</span>
<span class="p_header">index cc3ab35..f926224 100644</span>
<span class="p_header">--- a/drivers/staging/lustre/lustre/libcfs/linux/linux-cpu.c</span>
<span class="p_header">+++ b/drivers/staging/lustre/lustre/libcfs/linux/linux-cpu.c</span>
<span class="p_chunk">@@ -87,7 +87,7 @@</span> <span class="p_context"> static void cfs_cpu_core_siblings(int cpu, cpumask_t *mask)</span>
 /* return cpumask of HTs in the same core */
 static void cfs_cpu_ht_siblings(int cpu, cpumask_t *mask)
 {
<span class="p_del">-	cpumask_copy(mask, topology_thread_cpumask(cpu));</span>
<span class="p_add">+	cpumask_copy(mask, topology_sibling_cpumask(cpu));</span>
 }
 
 static void cfs_node_to_cpumask(int node, cpumask_t *mask)
<span class="p_header">diff --git a/drivers/staging/lustre/lustre/ptlrpc/service.c b/drivers/staging/lustre/lustre/ptlrpc/service.c</span>
<span class="p_header">index 8e61421..344189a 100644</span>
<span class="p_header">--- a/drivers/staging/lustre/lustre/ptlrpc/service.c</span>
<span class="p_header">+++ b/drivers/staging/lustre/lustre/ptlrpc/service.c</span>
<span class="p_chunk">@@ -557,7 +557,7 @@</span> <span class="p_context"> ptlrpc_server_nthreads_check(struct ptlrpc_service *svc,</span>
 		 * there are.
 		 */
 		/* weight is # of HTs */
<span class="p_del">-		if (cpumask_weight(topology_thread_cpumask(0)) &gt; 1) {</span>
<span class="p_add">+		if (cpumask_weight(topology_sibling_cpumask(0)) &gt; 1) {</span>
 			/* depress thread factor for hyper-thread */
 			factor = factor - (factor &gt;&gt; 1) + (factor &gt;&gt; 3);
 		}
<span class="p_chunk">@@ -2768,7 +2768,7 @@</span> <span class="p_context"> int ptlrpc_hr_init(void)</span>
 
 	init_waitqueue_head(&amp;ptlrpc_hr.hr_waitq);
 
<span class="p_del">-	weight = cpumask_weight(topology_thread_cpumask(0));</span>
<span class="p_add">+	weight = cpumask_weight(topology_sibling_cpumask(0));</span>
 
 	cfs_percpt_for_each(hrp, i, ptlrpc_hr.hr_partitions) {
 		hrp-&gt;hrp_cpt = i;
<span class="p_header">diff --git a/include/linux/topology.h b/include/linux/topology.h</span>
<span class="p_header">index 909b6e4..73ddad1 100644</span>
<span class="p_header">--- a/include/linux/topology.h</span>
<span class="p_header">+++ b/include/linux/topology.h</span>
<span class="p_chunk">@@ -191,8 +191,8 @@</span> <span class="p_context"> static inline int cpu_to_mem(int cpu)</span>
 #ifndef topology_core_id
 #define topology_core_id(cpu)			((void)(cpu), 0)
 #endif
<span class="p_del">-#ifndef topology_thread_cpumask</span>
<span class="p_del">-#define topology_thread_cpumask(cpu)		cpumask_of(cpu)</span>
<span class="p_add">+#ifndef topology_sibling_cpumask</span>
<span class="p_add">+#define topology_sibling_cpumask(cpu)		cpumask_of(cpu)</span>
 #endif
 #ifndef topology_core_cpumask
 #define topology_core_cpumask(cpu)		cpumask_of(cpu)
<span class="p_chunk">@@ -201,7 +201,7 @@</span> <span class="p_context"> static inline int cpu_to_mem(int cpu)</span>
 #ifdef CONFIG_SCHED_SMT
 static inline const struct cpumask *cpu_smt_mask(int cpu)
 {
<span class="p_del">-	return topology_thread_cpumask(cpu);</span>
<span class="p_add">+	return topology_sibling_cpumask(cpu);</span>
 }
 #endif
 
<span class="p_header">diff --git a/lib/cpu_rmap.c b/lib/cpu_rmap.c</span>
<span class="p_header">index 4f134d8..f610b2a 100644</span>
<span class="p_header">--- a/lib/cpu_rmap.c</span>
<span class="p_header">+++ b/lib/cpu_rmap.c</span>
<span class="p_chunk">@@ -191,7 +191,7 @@</span> <span class="p_context"> int cpu_rmap_update(struct cpu_rmap *rmap, u16 index,</span>
 	/* Update distances based on topology */
 	for_each_cpu(cpu, update_mask) {
 		if (cpu_rmap_copy_neigh(rmap, cpu,
<span class="p_del">-					topology_thread_cpumask(cpu), 1))</span>
<span class="p_add">+					topology_sibling_cpumask(cpu), 1))</span>
 			continue;
 		if (cpu_rmap_copy_neigh(rmap, cpu,
 					topology_core_cpumask(cpu), 2))

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



