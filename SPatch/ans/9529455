
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v3,04/37] treewide: Consolidate get_dma_ops() implementations - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v3,04/37] treewide: Consolidate get_dma_ops() implementations</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=119921">Bart Van Assche</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 20, 2017, 9:04 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170120210437.26389-5-bart.vanassche@sandisk.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9529455/mbox/"
   >mbox</a>
|
   <a href="/patch/9529455/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9529455/">/patch/9529455/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	C92076020B for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 20 Jan 2017 21:21:03 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B669C286D3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 20 Jan 2017 21:21:03 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A9E36286D5; Fri, 20 Jan 2017 21:21:03 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 50DFC286D3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 20 Jan 2017 21:21:02 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752209AbdATVUz (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 20 Jan 2017 16:20:55 -0500
Received: from mail-bn3nam01on0065.outbound.protection.outlook.com
	([104.47.33.65]:65152
	&quot;EHLO NAM01-BN3-obe.outbound.protection.outlook.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1752000AbdATVUn (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 20 Jan 2017 16:20:43 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=sandiskcorp.onmicrosoft.com; s=selector1-sandisk-com;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version;
	bh=zKU44O1FycMn1GJXX98wbbva15al3+8CXzorI5wPQno=;
	b=RbqvNVpalY7w8XmlHcNAGzLE2Ed/N7hUNDK3Ysw+ZYUqAlOVW0m0kUKyH9ENkaUi6TIUuA693fZVEmypOZMtXU8WjbzyADNPNn3KxoAF1gxqa9anPtmFKZYP5OIz/oh40BKDC1DhtxzsJXRJZEnjnap3Mezmn914KWJwONHo55I=
Received: from BY2PR02CA0048.namprd02.prod.outlook.com (10.141.216.38) by
	DM2PR02MB1289.namprd02.prod.outlook.com (10.161.142.153) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P384) id
	15.1.845.12; Fri, 20 Jan 2017 21:04:45 +0000
Received: from BY2FFO11FD045.protection.gbl (2a01:111:f400:7c0c::149) by
	BY2PR02CA0048.outlook.office365.com (2a01:111:e400:2c40::38) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P384) id 15.1.860.13 via
	Frontend Transport; Fri, 20 Jan 2017 21:04:45 +0000
Authentication-Results: spf=pass (sender IP is 63.163.107.21)
	smtp.mailfrom=sandisk.com; redhat.com; dkim=none (message not signed)
	header.d=none;redhat.com; dmarc=bestguesspass action=none
	header.from=sandisk.com;
Received-SPF: Pass (protection.outlook.com: domain of sandisk.com designates
	63.163.107.21 as permitted sender)
	receiver=protection.outlook.com; 
	client-ip=63.163.107.21; helo=milsmgep15.sandisk.com;
Received: from milsmgep15.sandisk.com (63.163.107.21) by
	BY2FFO11FD045.mail.protection.outlook.com (10.1.15.177) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P384) id
	15.1.803.8 via Frontend Transport; Fri, 20 Jan 2017 21:04:44 +0000
Received: from MILHUBIP04.sdcorp.global.sandisk.com (Unknown_Domain
	[10.201.67.162])
	(using TLS with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(Client did not present a certificate)
	by  (Symantec Messaging Gateway) with SMTP id 94.B8.65426.BA872885;
	Fri, 20 Jan 2017 12:52:59 -0800 (PST)
Received: from milsmgip11.sandisk.com (10.177.9.6) by
	MILHUBIP04.sdcorp.global.sandisk.com (10.177.9.97) with Microsoft
	SMTP Server id 14.3.319.2; Fri, 20 Jan 2017 13:04:40 -0800
X-AuditID: 0ac94369-b62949800001ff92-20-588278ab3d4e
Received: from exp-402881.sdcorp.global.sandisk.com ( [10.177.8.100])   by
	(Symantec Messaging Gateway) with SMTP id F6.33.16817.86B72885;
	Fri, 20 Jan 2017 13:04:40 -0800 (PST)
From: Bart Van Assche &lt;bart.vanassche@sandisk.com&gt;
To: Doug Ledford &lt;dledford@redhat.com&gt;
CC: &lt;linux-rdma@vger.kernel.org&gt;,
	Bart Van Assche &lt;bart.vanassche@sandisk.com&gt;,
	Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;,
	Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;,
	David Woodhouse &lt;dwmw2@infradead.org&gt;, Juergen Gross &lt;jgross@suse.com&gt;,
	&quot;H . Peter Anvin&quot; &lt;hpa@zytor.com&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	&lt;linux-arch@vger.kernel.org&gt;, &lt;linux-kernel@vger.kernel.org&gt;,
	Russell King &lt;linux@armlinux.org.uk&gt;, &lt;x86@kernel.org&gt;
Subject: [PATCH v3 04/37] treewide: Consolidate get_dma_ops() implementations
Date: Fri, 20 Jan 2017 13:04:04 -0800
Message-ID: &lt;20170120210437.26389-5-bart.vanassche@sandisk.com&gt;
X-Mailer: git-send-email 2.11.0
In-Reply-To: &lt;20170120210437.26389-1-bart.vanassche@sandisk.com&gt;
References: &lt;20170120210437.26389-1-bart.vanassche@sandisk.com&gt;
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFprGIsWRmVeSWpSXmKPExsXCddJ5ke7qiqYIg5PdChYfmlqZLS5Ob2Wx
	eHn+A6vFxJWTmS2mbRS3mHPTyKJj11cWi8u75rBZPDvUy2JxaOpeRotLBxYwWfzY8JjVgcfj
	8rWLzB6bV2h59LxpYfXYtKqTzePj01ssHu/3XWXzWL/lKovH501yHidavrAGcEZx2aSk5mSW
	pRbp2yVwZZyfdZKpYMY8xorLTzkaGDe1M3YxcnJICJhILFrVwwJiCwksZZK4v9Ohi5ELyN7G
	KPF/7ly4ounNt9kgEpsZJd69fMwEkmATMJL49n4mWLeIgJrEpleL2EGKmAX2MEvM2P0frEhY
	wFei70o/K4jNIqAq8XhqA9hUXgF7iZX7W9khNshL7Gq7CFbDKeAg8elyHyPESfYSxy8/BRsq
	IfCUVWL+re9MEM2CEidnPgHbzCwgIXHwxQtmiAZ1iZNL5jNNYBSahaRsFpKyBYxMqxjFcjNz
	inPTUwsMTfWKE/NSMouz9ZLzczcxQmIrcwfj3SfehxgFOBiVeHgVApoihFgTy4orcw8xSnAw
	K4nwvq4ECvGmJFZWpRblxxeV5qQWH2KU5mBREud1u/clTEggPbEkNTs1tSC1CCbLxMEp1cC4
	esnZTdfbpx8KNL0te923OET8T2ngClGb6hLn3ZcZLilN+aPNWZP3oXqTu6SewpRntw7+ksra
	8MeFt1EoM/b5R7v7AvP5vt2Yfa+h98EXdaFQU9a2P1siKv/EyV16dOrJ5oALSaYhgYqbItX1
	StQ2PXzMrD/hWeQ9NRdb9zcv/PiYOExLeiYosRRnJBpqMRcVJwIAPMc0/akCAAA=
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFnrGJMWRmVeSWpSXmKPExsXCtZEjRTejuinC4PFEKYuDP9sYLT40tTJb
	XJzeymLx8vwHVouJKyczW0zbKG4x56aRRceurywWl3fNYbN4dqiXxeLQ1L2MFpcOLGCy+LHh
	MasDr8flaxeZPTav0PLoedPC6rFpVSebx8ent1g83u+7yuYxbc15Jo/1W66yeHzeJOdxouUL
	awBXFJdNSmpOZllqkb5dAlfG+VknmQpmzGOsuPyUo4FxUztjFyMnh4SAicT05ttsXYxcHEIC
	GxklVt66AJZgEzCS+PZ+JguILSKgJrHp1SJ2kCJmgX3MEivbPjCDJIQFfCX6rvSzgtgsAqoS
	j6c2gDXzCthLXFu4lhlig7zErraLYDWcAg4Sny73gdUIAdUcv/yUfQIj9wJGhlWMYrmZOcW5
	6ZkFhoZ6xYl5KZnF2XrJ+bmbGMEhyRm5g/HpRPNDjEwcnFINjE7ZE1o3t2dOUNXPOb6R+cTv
	7Hq1nf47GcqtA/2FJY/x9zu1Ztsl/9999sL1Bz6J2a15K7Zna0+RObg2i+tWzlztRfENHmkc
	9UKz9gbv45kyLTWQ12ba0Zk3jzxevkLRS3FZvceyrc8WuHy8KbPz9tPbRexSubPn7RK7MJHx
	4ZZ8luZ5+4vXPlZiKc5INNRiLipOBAA5kuIp+QEAAA==
MIME-Version: 1.0
Content-Type: text/plain
X-EOPAttributedMessage: 0
X-MS-Office365-Filtering-HT: Tenant
X-Forefront-Antispam-Report: CIP:63.163.107.21; IPV:NLI; CTRY:US; EFV:NLI;
	SFV:NSPM;
	SFS:(10009020)(6009001)(7916002)(39410400002)(39450400003)(39840400002)(39850400002)(39860400002)(2980300002)(438002)(189002)(199003)(7416002)(2950100002)(77096006)(53936002)(6916009)(50466002)(8936002)(69596002)(356003)(33646002)(36756003)(1076002)(106466001)(626004)(48376002)(5003940100001)(50226002)(189998001)(54906002)(47776003)(110136003)(38730400001)(76176999)(86362001)(5660300001)(8676002)(575784001)(97736004)(92566002)(2906002)(81156014)(6666003)(81166006)(305945005)(2270400002)(50986999)(68736007)(4326007);
	DIR:OUT; SFP:1101; SCL:1; SRVR:DM2PR02MB1289;
	H:milsmgep15.sandisk.com; FPR:; SPF:Pass;
	PTR:InfoDomainNonexistent; MX:1; A:1; LANG:en; 
X-Microsoft-Exchange-Diagnostics: 1; BY2FFO11FD045;
	1:lkr+igfmQVjXDqO/KV2GFqHDPBA8HkbWBRzYairrAr+lpoimPaSDP6e5SvmtqxkVhi57KeGc65wJiytluuhZ4iemfGDaROIDCGd+OS5dHuZopWcALr22vhwAnLa5ROC0dTbl3/tnqYkexiAEogTGi+ABAw1HdjXkPtxfdLRpxibxTAxP1P1OOsdBl3KRPNkup2KUEPSvqMLrSiDA0n8+Q3LTOwXB43tvhJ9Ve5w5vyGa6XFzsgiuBKCWnufLr0dd6Sdu3Upi3yHdxG6T9PAje1J/lubZ1f8uIStXrVEXqd/f/ERbgT3N/PKsafmhq44vaava1b+A3PImnhY4DTxJ6NOwmtGvZsxxnpBTZd6KcB50GzhRhkZNPhoDdW7Pbh2J0XrrvoaK98VaRye9JRSxJlpsmL+P6iOYJGqaF4vLyEZ1sqQnvu8XWoYPSrlnMCwo9Bq/m8+nxdPaTf5yFtweDw==
X-MS-Office365-Filtering-Correlation-Id: d2f32f14-e013-49c0-1e19-08d44177f5ca
X-Microsoft-Antispam: UriScan:; BCL:0; PCL:0; RULEID:(22001)(8251501002);
	SRVR:DM2PR02MB1289; 
X-Microsoft-Exchange-Diagnostics: 1; DM2PR02MB1289;
	3:0oqglQrZJ+BHoodlzqINmpf8OfyFKVHquER40TVb+NGKWwsGQFqPGR2Xsd/I/ACFkghWaOLaun3HepVLOujv+FxpaTYgSTx2GA1NDiqnBPjHK4azkSR4xcl+CH8Zh98I4VhpMnkbnTYrlm4uBRqjhyiJ6bsJb/tqeSwLZE5cbx+8LJDfL74sAnqTdqZq3+KlFzLNDkc+K+3kGOGIVgO2Sl8aLykd91U0i9gPVj2reJjmyQkno/Wrhv5CU7AK4AXMKkpZkP61BwUDkhuA0c/tn2ji3/4gJ5VPP93ri+KrEEsnE392kxa3ReONdeUmLhpH+j/wCW0fQVcl6DHbSvAQFh2FdVIuALQb9qr7uAXLQwKlrd43lzPoNbHxdXzosWhDc2tDwayENvn/JEkT8FYU5w==
X-Microsoft-Exchange-Diagnostics: 1; DM2PR02MB1289;
	25:rc6KMJ9pzG88N8V0MykDkquNI5B2BXt5OqoS9KqM6TKL3pHhNUyc2XIvKV+8b9w6FvA7BQ5YbV3/P6PmFPTmkN1pkPFNvNRiK2LcUKtdn02rBnlG4KUM4cokiROsDjf51l4UoKqBP8CN7tCvdkG2bHp1QKwO47z3I0npGPsNB/vXSJWTUNiLI7pesmMLx8skkdf3iw6ElD0zRNnRzgd9qjBGKEzzz18z8Nv+v254w67Vxf7OKMo9Un72Ux/TIX56Nqi9pY6It0Fs0c1CY1QnSfrpq4QD0LJI3R0Hs+njSX8slz1LO0SooJVR1dk/npQilkSh5N48/Pb+eTXtvORE3xJxsr6w7ZhMHTsilLL5/o28HlRONMgK3YgZzEcl1LDMw08QDehkAIhCNqSZKbkPINw5pXV0iTICFSEHVGWYSF50PNNZNBHKtS8gvOhOoC7pYNoAiVLtLz2Q1xzk3GOsEyirNPVNlu7vMtFdjStcYKmCdNI1nyu81vO7mB3Jo5SmToGQlHS1FBsg/dGvB+MOL4I48CYo2ZZOBMvaBEy7M0xfKlCuHnhunDecszguSMSr/zXhBxCKx36DhY8Jakb0SXMLI9aH9EuPxJ7Zd0BHEllivOyLL8f+OXg+ALfJhnWpx0DZXTb2Dev3owXOuwjiXHMHkg3I8NAF/wc1Dad5LAvTLGWE9O7SYf6Peg9TK/eTC5txfjqtMNb3WgcAXSNB9ibl8bflXrd/Z7K6Xg57JNHyd9Rl9dI20ttyn+14ViVc9UHLhKLvuJNZ+sr0gPTnLne3E0HihlqBS3xfCU19of/0OG3HCpTOdXIigNFMsT+8nS21Nr9hUWmuBkbat9QcUw==
X-Microsoft-Exchange-Diagnostics: 1; DM2PR02MB1289;
	31:zN3fXJUmEX4Z2Ds1AqnpZhf73imKFf52HYE2CI+ySekB8C5hwlexZjsFMMYhMnUvGXK6RBnuHX+KnCv/Ymjp8GV1+HIUG9U+fNUHPh30i/EKet8pqk7jdVOAxJeuX/Z5Hk7AkgMOydlWa4bYurHgkgmAaH4rSb3m9iNdFLu9BcXu8j+deQdAqcb+daFdWHRUhTwoMWKH6d4PxwOidIvHqVtnV2sV/nhHE1khDgdoRx3rpvcjjWEUX6JOcvNmCchm/+Mg6UMy7BMlkU8GETJD+g==;
	20:10sPHk+PH21+JpyUKAPQhzhJPnUSziGwKVNiME2Zs+YuJZJp8md45LK/hnGnNSdZP/UjBOXzdzm1OFDxq16syu8i5QiwTBwm1iCc2cv6H1mx7/u0caKt1avsDwnB8YtxucSuYubSA9SxO9gre4E1RgWsJV1Ps5qXCWmwzONXZh2zdEgofuMwni2Eg0Q8D6CACU7zIYrQ6++Xc1pUN1E84g5c/no8B/7W7075Ee3p841Jrb/Mmh7gMLFYC4sUIbju2tjzXwMlVouEph+zwefSI7S2aMyRhUs2jI1/WuU48U6Mw3nkUDnXo30WLwBTQy3B9kRDZ5X4PzHeLUrvhGNVfDXT2/0tdxDdWr0QckxidzuLraWC1866TfUkrQHA+ed7evYp8qzcXssZ7xqhA7/KS42Wi/rk1SJbZJArjo4Y3zRCwI05s1SoBcbV2U35lvc8RAwfb6Yida53MC/+NktaccydosffXr+IQIMQK7XufUW/8qh/yuhTsdL+2iLFcavx
X-Microsoft-Antispam-PRVS: &lt;DM2PR02MB12896F87C3200BC580D5CFE481710@DM2PR02MB1289.namprd02.prod.outlook.com&gt;
X-Exchange-Antispam-Report-Test: UriScan:(9452136761055)(146099531331640)(42932892334569); 
X-Exchange-Antispam-Report-CFA-Test: BCL:0; PCL:0;
	RULEID:(6040375)(601004)(2401047)(13016025)(8121501046)(5005006)(13018025)(10201501046)(3002001)(6055026)(6041248)(20161123562025)(20161123558021)(20161123555025)(20161123560025)(20161123564025)(6072148);
	SRVR:DM2PR02MB1289; BCL:0; PCL:0; RULEID:; SRVR:DM2PR02MB1289;
X-Microsoft-Exchange-Diagnostics: 1; DM2PR02MB1289;
	4:1GFg+Y5oM4tV8H6a8fiXxQNcFh9eUqmYMsPy5u5AH6o6oFl4Y/nbxW00oBgKm86rFvXqVtraAH/OnIXYVEyHdrylQkRwZqfb2aJxel/VGuKcJHFOc2KEmFf8ltpHlfYOVI3DfPqI53iw5wPC4YOo7bZxCTSHqivQDZHU0H8/K7KH1gdEToHwPyKf1MPETebPydVfCMPr6TI9FMMVYQOdWrBXXNbuTNYFUehvvKEpBEj8H51Rw2cCzGdFJzV5uj2AAQ0Tp1C5IiT3HqNXEn+NbGQeDzxP3Jwd4q7C4A98CqObwP/16A9mn7M4YBg9+2ULLdgJKTrg+x/juyW7tWoM0GtSdB0AfJqT/T1v0fJIhz+XXdbf1i2Uqt2KyaLem8di/OzwTWm2geXgNve7yfsaix63qkinJ0aHVEdwWBdgGSLWQu+lw1Sdo/sW9niYzPEqEGYc/XGSeJ5kKqp91AWFhh76trW8m2RgdQoipxRGYPVYqpqOyO1MUzxJjGuLTOcaFrtl9yjLB0BE0GfFSHG1AQmCY4SMLNwLt+76Vv9YIV57sgeKqh46wyrM0qU+9aWg1qM5A1VG6YzF0w5zPRjTsKpPbHn9XxmhpnAkvsha0mNGd6866c9Bhm/5ETWu2osNQdBe1z7TjwP+MnjyDhDwTQqVcS/yj8Djgw5CYkvR4lUySLLQ1AomGwX8YH56o0NrBTDx2/ySfewHKEh+bTx8Oa3liukyPNe1j+Z+FZqWMFVE0INokRazh7S05eGkVxoCyVVezCyTzK47nTCu1/9TIQ==
X-Forefront-PRVS: 01930B2BA8
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1; DM2PR02MB1289;
	23:pd9+xjOQHIYhWLI4jKwDVGwVf/OrelVnSqBuFSlA+?=
	=?us-ascii?Q?qNHOCgLgnu+oTzWpZJRGIocDiKa44HP6KPMmQQjdPu+AuFkiCZP1Fn2ENZ7s?=
	=?us-ascii?Q?JEd0Ca+miQTQ5U+BOudSPTbmW/2i1nxZDfUSE0LhLGNgh2vpkIczNOFkgTsQ?=
	=?us-ascii?Q?5uL3MTaxvoynbmwL7BAiFxJRNEMkY85Q1k7xSNwidXCpqPgiLYzEjrpfjVkR?=
	=?us-ascii?Q?VRcqBUToJFdR6i+Wl/Ek8W3T92RWHJsqyZJKDMc/ZEIDhIF19D22+0cL/8LW?=
	=?us-ascii?Q?BlSgVfdarjjsQ+FVf5k3Nvh+QCAF17iGhC4tJTTbAhtviPdvS7HCrKwJLrg3?=
	=?us-ascii?Q?RtR8CVr1xf6oHMHgSx4k26bp3QaBwdPwVuU8ssrlrTEw3Cs5AaORqtkzXfRp?=
	=?us-ascii?Q?cBoc87+JRmxkQvyDorJRWGbAtuUkGujCuuilDBS3LYQ3FaxuyqoKfXsoR8/i?=
	=?us-ascii?Q?ofzkReyzUpQgCC9GmYNjwjkN+uiUV7XIIm5tea5P3DxRqa19jpMwo7PSHy78?=
	=?us-ascii?Q?U8r9EygK8JvDI5lUsrj/IrMQqQu7fdGy70gX3ir7WnV1XnYlzhHzmeGTZ5xt?=
	=?us-ascii?Q?2ls8Yk46jjk7PPSlZBz8koujQdeX/E7TmL7Yz6s14vbPtHeGA8WXHd5Ajt8t?=
	=?us-ascii?Q?mzeGSaY8oTzZSfdwm+H4g/xdloqlMYs/wGDgx4Cq3oK15/oEfdyWK4RFzHVm?=
	=?us-ascii?Q?l/57I4BrtOsFEP64TaBTb4x9vRvoOYyArKHSK43bJOK2TSnvyEYGxQBHgasQ?=
	=?us-ascii?Q?c2ldct8KtPSU9kGQpF1hE1W4byeCKWMo+s/kCZ/xwtC42PlEr1j3IRZ+SnlR?=
	=?us-ascii?Q?6MRYH5wd9zMTnXMYJisn6PtEbL5JVik+2g16C36ee0CgVmymSQSFIeRlVKJe?=
	=?us-ascii?Q?/03iMoDDzcPcgyHibjpBjcYAsv10Q8X1MrD9vF3J7LZqhW+5gBW+aY9Sn1ko?=
	=?us-ascii?Q?ZPeSBKIsneeM1Ft7qRfwmCJ7UiQ1v9bJH+diJ108wTlS252PtRBJPD0MpyUd?=
	=?us-ascii?Q?m4GIXm+AElkClASATh3F5Odq5ND6CDflI91HL1AHBoboNRo+Op0o/HQDDTdY?=
	=?us-ascii?Q?CHvljmxMJc5uW4k2IVrjUCHDmgJseWBE1Irpzx/Ih3H8N/rHNqh1irrye0KM?=
	=?us-ascii?Q?t4mQ7vhPIbcDREfHQymwrnhHGU/vpIsxwisc0HX+bbkxOdtDmqzND48955WK?=
	=?us-ascii?Q?ta06ejbPjndalpU5eLRaKLV2ZZzyJHDc7py?=
X-Microsoft-Exchange-Diagnostics: 1; DM2PR02MB1289;
	6:fM4bsDGhm6yhZgVPnArWvfynX6DJHOBh4mYVddH7UjlDMz8BvMpA74IHTFnl7TWL5c0kdu6cXAwYd2IQcFxTCni8GJGL49XScG9Ea3/7mF4zJWbhiExna5XwANOCI1mbs5ER+QLwcP2xcUL+TBaX3ZV7zIDNO/56VPIN8Wb0ArkN8SOxHWkhd0CuGkXOZd6Qsfo+djIHpaWRY/G89TVllNfJlskAwSd35ptLzI6lszGZF/wR8SzX/ugeDu4HlFYvnpPVUJSHCsRs3l/zEs+nyAoULlyhQw9mcJyKSO1ExvIGRHEVr9FhTLqB6iKupjowp0c7pT/A38KARZ8/wugL31tLFKAPL5/sgiF2IQ2hsyq25yDzlwOMMeatfJy6NK4Cq3WnnEn3dQDjLmfDleCoKd9A7bxc7Mr3ymA0o+l/+XDr2WoqrBuk59Gr7I8kiYTH437cyYJ2A2MvWWFdXs8TgQ==;
	5:F8mFJxBxJDFP8b2J4HbD+EIy4mGZLkRAClzdQ/lcPGlS5We5PtQgaY6Fj5kz26BIW4U4541/kI9ZFeTejPq55/IsaKka1qbxcvYFQ/zjJt9L+vCHpRVIuegRKwWDvr6UW1MrjIfIwSFNk+py2YblGg==;
	24:m3PIYkxAPbUYEVtBUXpbQdvzVv3+rRYpxZVeY7BVEfcctZMBfGinI0VQvwdJdEiI46S5VuiTRiH4y2wErHMXYHWLqvopY9ebqs2eDeDd4Go=
SpamDiagnosticOutput: 1:99
SpamDiagnosticMetadata: NSPM
X-Microsoft-Exchange-Diagnostics: 1; DM2PR02MB1289;
	7:3v6iPXHNiqvkgmUZ8MjsnBZFWzZAIxe7ym3vchBUXShAczCThP1AUpctOvZm3G+OzPpjjnD4/xPjuQasSMKiIy/C1E22ZpdvsMU7vF1aaZ96nNguAZyZQSdoZc+uOaaYH5OfjwNPfrcVpLqhLznNHGWeA21Xo/1T6IXA+MOzrrwxn0RjXl+KL7Ppe/gxzOn6yAcm+sybIAhaWVH3/fGItk6jNORD0DaQGHfpCkqqIsJovOyhRHkUIkm0i39VpgeLlQvwPpY0n6dvB68Jq34W8hSjOS+vdggKeHXoiNXWtOFTzoxu5UvUaHRqNOh7CR62C+hvjCcDFS+JpYkoxQnvT0ho2sIvUscZwyzIbHp4kOy/oxfN6tJi1TecbCHkMNPwFGBLHtZNRwdVD58yrVO75xbYFHpdmMWRurZqJ5gpOk9lSW94O5Rs0DPDCvp0SGDqFIjF5x9Gp4qAM6q1XFqmZA==
X-OriginatorOrg: sandisk.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 20 Jan 2017 21:04:44.5568
	(UTC)
X-MS-Exchange-CrossTenant-Id: fcd9ea9c-ae8c-460c-ab3c-3db42d7ac64d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=fcd9ea9c-ae8c-460c-ab3c-3db42d7ac64d;
	Ip=[63.163.107.21]; Helo=[milsmgep15.sandisk.com]
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM2PR02MB1289
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=119921">Bart Van Assche</a> - Jan. 20, 2017, 9:04 p.m.</div>
<pre class="content">
Introduce a new architecture-specific get_arch_dma_ops() function
that takes a struct bus_type * argument. Add get_dma_ops() in
&lt;linux/dma-mapping.h&gt;.
<span class="signed-off-by">
Signed-off-by: Bart Van Assche &lt;bart.vanassche@sandisk.com&gt;</span>
Cc: Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;
Cc: Boris Ostrovsky &lt;boris.ostrovsky@oracle.com&gt;
Cc: David Woodhouse &lt;dwmw2@infradead.org&gt;
Cc: Juergen Gross &lt;jgross@suse.com&gt;
Cc: H. Peter Anvin &lt;hpa@zytor.com&gt;
Cc: Ingo Molnar &lt;mingo@redhat.com&gt;
Cc: linux-arch@vger.kernel.org
Cc: linux-kernel@vger.kernel.org
Cc: Russell King &lt;linux@armlinux.org.uk&gt;
Cc: x86@kernel.org
---
 arch/alpha/include/asm/dma-mapping.h      | 2 +-
 arch/arc/include/asm/dma-mapping.h        | 2 +-
 arch/arm/include/asm/dma-mapping.h        | 4 ++--
 arch/arm64/include/asm/dma-mapping.h      | 4 ++--
 arch/avr32/include/asm/dma-mapping.h      | 2 +-
 arch/blackfin/include/asm/dma-mapping.h   | 2 +-
 arch/c6x/include/asm/dma-mapping.h        | 2 +-
 arch/cris/include/asm/dma-mapping.h       | 4 ++--
 arch/frv/include/asm/dma-mapping.h        | 2 +-
 arch/h8300/include/asm/dma-mapping.h      | 2 +-
 arch/hexagon/include/asm/dma-mapping.h    | 5 +----
 arch/ia64/include/asm/dma-mapping.h       | 5 ++++-
 arch/m32r/include/asm/dma-mapping.h       | 4 +---
 arch/m68k/include/asm/dma-mapping.h       | 2 +-
 arch/metag/include/asm/dma-mapping.h      | 2 +-
 arch/microblaze/include/asm/dma-mapping.h | 2 +-
 arch/mips/include/asm/dma-mapping.h       | 7 ++-----
 arch/mn10300/include/asm/dma-mapping.h    | 2 +-
 arch/nios2/include/asm/dma-mapping.h      | 2 +-
 arch/openrisc/include/asm/dma-mapping.h   | 2 +-
 arch/parisc/include/asm/dma-mapping.h     | 2 +-
 arch/powerpc/include/asm/dma-mapping.h    | 7 ++-----
 arch/powerpc/include/asm/ps3.h            | 2 +-
 arch/s390/include/asm/dma-mapping.h       | 4 +---
 arch/sh/include/asm/dma-mapping.h         | 2 +-
 arch/sparc/include/asm/dma-mapping.h      | 4 ++--
 arch/tile/include/asm/dma-mapping.h       | 7 ++-----
 arch/unicore32/include/asm/dma-mapping.h  | 2 +-
 arch/x86/include/asm/dma-mapping.h        | 9 +--------
 arch/xtensa/include/asm/dma-mapping.h     | 7 ++-----
 include/linux/dma-mapping.h               | 7 +++++++
 31 files changed, 48 insertions(+), 64 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/alpha/include/asm/dma-mapping.h b/arch/alpha/include/asm/dma-mapping.h</span>
<span class="p_header">index d3480562411d..5d53666935e6 100644</span>
<span class="p_header">--- a/arch/alpha/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/alpha/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -3,7 +3,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops *dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return dma_ops;
 }
<span class="p_header">diff --git a/arch/arc/include/asm/dma-mapping.h b/arch/arc/include/asm/dma-mapping.h</span>
<span class="p_header">index fdff3aa60052..94285031c4fb 100644</span>
<span class="p_header">--- a/arch/arc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/arc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -20,7 +20,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops arc_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;arc_dma_ops;
 }
<span class="p_header">diff --git a/arch/arm/include/asm/dma-mapping.h b/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_header">index c7432d647e53..716656925975 100644</span>
<span class="p_header">--- a/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/arm/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -23,12 +23,12 @@</span> <span class="p_context"> static inline const struct dma_map_ops *__generic_dma_ops(struct device *dev)</span>
 	return &amp;arm_dma_ops;
 }
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	if (xen_initial_domain())
 		return xen_dma_ops;
 	else
<span class="p_del">-		return __generic_dma_ops(dev);</span>
<span class="p_add">+		return __generic_dma_ops(NULL);</span>
 }
 
 #define HAVE_ARCH_DMA_SUPPORTED 1
<span class="p_header">diff --git a/arch/arm64/include/asm/dma-mapping.h b/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_header">index 58ae36cc3b60..505756cdc67a 100644</span>
<span class="p_header">--- a/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -39,12 +39,12 @@</span> <span class="p_context"> static inline const struct dma_map_ops *__generic_dma_ops(struct device *dev)</span>
 	return &amp;dummy_dma_ops;
 }
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	if (xen_initial_domain())
 		return xen_dma_ops;
 	else
<span class="p_del">-		return __generic_dma_ops(dev);</span>
<span class="p_add">+		return __generic_dma_ops(NULL);</span>
 }
 
 void arch_setup_dma_ops(struct device *dev, u64 dma_base, u64 size,
<span class="p_header">diff --git a/arch/avr32/include/asm/dma-mapping.h b/arch/avr32/include/asm/dma-mapping.h</span>
<span class="p_header">index b2b43c0e0774..7388451f9905 100644</span>
<span class="p_header">--- a/arch/avr32/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/avr32/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -6,7 +6,7 @@</span> <span class="p_context"> extern void dma_cache_sync(struct device *dev, void *vaddr, size_t size,</span>
 
 extern const struct dma_map_ops avr32_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;avr32_dma_ops;
 }
<span class="p_header">diff --git a/arch/blackfin/include/asm/dma-mapping.h b/arch/blackfin/include/asm/dma-mapping.h</span>
<span class="p_header">index 320fb50fbd41..04254ac36bed 100644</span>
<span class="p_header">--- a/arch/blackfin/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/blackfin/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -38,7 +38,7 @@</span> <span class="p_context"> _dma_sync(dma_addr_t addr, size_t size, enum dma_data_direction dir)</span>
 
 extern const struct dma_map_ops bfin_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;bfin_dma_ops;
 }
<span class="p_header">diff --git a/arch/c6x/include/asm/dma-mapping.h b/arch/c6x/include/asm/dma-mapping.h</span>
<span class="p_header">index 88258b9ebc8e..aca9f755e4f8 100644</span>
<span class="p_header">--- a/arch/c6x/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/c6x/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -19,7 +19,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops c6x_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;c6x_dma_ops;
 }
<span class="p_header">diff --git a/arch/cris/include/asm/dma-mapping.h b/arch/cris/include/asm/dma-mapping.h</span>
<span class="p_header">index aae4fbc0a656..256169de3743 100644</span>
<span class="p_header">--- a/arch/cris/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/cris/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -4,12 +4,12 @@</span> <span class="p_context"></span>
 #ifdef CONFIG_PCI
 extern const struct dma_map_ops v32_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;v32_dma_ops;
 }
 #else
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	BUG();
 	return NULL;
<span class="p_header">diff --git a/arch/frv/include/asm/dma-mapping.h b/arch/frv/include/asm/dma-mapping.h</span>
<span class="p_header">index 150cc00544a8..354900917585 100644</span>
<span class="p_header">--- a/arch/frv/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/frv/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -9,7 +9,7 @@</span> <span class="p_context"> extern unsigned long __nongprelbss dma_coherent_mem_end;</span>
 
 extern const struct dma_map_ops frv_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;frv_dma_ops;
 }
<span class="p_header">diff --git a/arch/h8300/include/asm/dma-mapping.h b/arch/h8300/include/asm/dma-mapping.h</span>
<span class="p_header">index f804bca4c13f..847c7562e046 100644</span>
<span class="p_header">--- a/arch/h8300/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/h8300/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -3,7 +3,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops h8300_dma_map_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;h8300_dma_map_ops;
 }
<span class="p_header">diff --git a/arch/hexagon/include/asm/dma-mapping.h b/arch/hexagon/include/asm/dma-mapping.h</span>
<span class="p_header">index b812e917cd95..d3a87bd9b686 100644</span>
<span class="p_header">--- a/arch/hexagon/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/hexagon/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -34,11 +34,8 @@</span> <span class="p_context"> extern int bad_dma_address;</span>
 
 extern const struct dma_map_ops *dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
<span class="p_del">-	if (unlikely(dev == NULL))</span>
<span class="p_del">-		return NULL;</span>
<span class="p_del">-</span>
 	return dma_ops;
 }
 
<span class="p_header">diff --git a/arch/ia64/include/asm/dma-mapping.h b/arch/ia64/include/asm/dma-mapping.h</span>
<span class="p_header">index 05e467d56d86..73ec3c6f4cfe 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -23,7 +23,10 @@</span> <span class="p_context"> extern void machvec_dma_sync_single(struct device *, dma_addr_t, size_t,</span>
 extern void machvec_dma_sync_sg(struct device *, struct scatterlist *, int,
 				enum dma_data_direction);
 
<span class="p_del">-#define get_dma_ops(dev) platform_dma_get_ops(dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return platform_dma_get_ops(NULL);</span>
<span class="p_add">+}</span>
 
 static inline bool dma_capable(struct device *dev, dma_addr_t addr, size_t size)
 {
<span class="p_header">diff --git a/arch/m32r/include/asm/dma-mapping.h b/arch/m32r/include/asm/dma-mapping.h</span>
<span class="p_header">index 27b1597ac563..c01d9f52d228 100644</span>
<span class="p_header">--- a/arch/m32r/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/m32r/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -10,10 +10,8 @@</span> <span class="p_context"></span>
 
 #define DMA_ERROR_CODE (~(dma_addr_t)0x0)
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_del">-		return dev-&gt;dma_ops;</span>
 	return &amp;dma_noop_ops;
 }
 
<span class="p_header">diff --git a/arch/m68k/include/asm/dma-mapping.h b/arch/m68k/include/asm/dma-mapping.h</span>
<span class="p_header">index 863509939d5a..9210e470771b 100644</span>
<span class="p_header">--- a/arch/m68k/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/m68k/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -3,7 +3,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops m68k_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
         return &amp;m68k_dma_ops;
 }
<span class="p_header">diff --git a/arch/metag/include/asm/dma-mapping.h b/arch/metag/include/asm/dma-mapping.h</span>
<span class="p_header">index c156a7ac732f..fad3dc3cb210 100644</span>
<span class="p_header">--- a/arch/metag/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/metag/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -3,7 +3,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops metag_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;metag_dma_ops;
 }
<span class="p_header">diff --git a/arch/microblaze/include/asm/dma-mapping.h b/arch/microblaze/include/asm/dma-mapping.h</span>
<span class="p_header">index c7faf2fb51d6..3fad5e722a66 100644</span>
<span class="p_header">--- a/arch/microblaze/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/microblaze/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -38,7 +38,7 @@</span> <span class="p_context"></span>
  */
 extern const struct dma_map_ops dma_direct_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;dma_direct_ops;
 }
<span class="p_header">diff --git a/arch/mips/include/asm/dma-mapping.h b/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_header">index dad3b09fe993..aba71385f9d1 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -11,12 +11,9 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops *mips_dma_map_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_del">-		return dev-&gt;dma_ops;</span>
<span class="p_del">-	else</span>
<span class="p_del">-		return mips_dma_map_ops;</span>
<span class="p_add">+	return mips_dma_map_ops;</span>
 }
 
 static inline bool dma_capable(struct device *dev, dma_addr_t addr, size_t size)
<span class="p_header">diff --git a/arch/mn10300/include/asm/dma-mapping.h b/arch/mn10300/include/asm/dma-mapping.h</span>
<span class="p_header">index 564e3927e005..737ef574b3ea 100644</span>
<span class="p_header">--- a/arch/mn10300/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/mn10300/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -16,7 +16,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops mn10300_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;mn10300_dma_ops;
 }
<span class="p_header">diff --git a/arch/nios2/include/asm/dma-mapping.h b/arch/nios2/include/asm/dma-mapping.h</span>
<span class="p_header">index aa00d839a64b..7b3c6f280293 100644</span>
<span class="p_header">--- a/arch/nios2/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/nios2/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -12,7 +12,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops nios2_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;nios2_dma_ops;
 }
<span class="p_header">diff --git a/arch/openrisc/include/asm/dma-mapping.h b/arch/openrisc/include/asm/dma-mapping.h</span>
<span class="p_header">index 88acbedb4947..0c0075f17145 100644</span>
<span class="p_header">--- a/arch/openrisc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/openrisc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -30,7 +30,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops or1k_dma_map_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;or1k_dma_map_ops;
 }
<span class="p_header">diff --git a/arch/parisc/include/asm/dma-mapping.h b/arch/parisc/include/asm/dma-mapping.h</span>
<span class="p_header">index 1749073e44fc..5404c6a726b2 100644</span>
<span class="p_header">--- a/arch/parisc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/parisc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -27,7 +27,7 @@</span> <span class="p_context"> extern const struct dma_map_ops pcx_dma_ops;</span>
 
 extern const struct dma_map_ops *hppa_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return hppa_dma_ops;
 }
<span class="p_header">diff --git a/arch/powerpc/include/asm/dma-mapping.h b/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_header">index 8275603ba4d5..181a095468e4 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -78,17 +78,14 @@</span> <span class="p_context"> extern struct dma_map_ops dma_iommu_ops;</span>
 #endif
 extern const struct dma_map_ops dma_direct_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	/* We don&#39;t handle the NULL dev case for ISA for now. We could
 	 * do it via an out of line call but it is not needed for now. The
 	 * only ISA DMA device we support is the floppy and we have a hack
 	 * in the floppy driver directly to get a device for us.
 	 */
<span class="p_del">-	if (unlikely(dev == NULL))</span>
<span class="p_del">-		return NULL;</span>
<span class="p_del">-</span>
<span class="p_del">-	return dev-&gt;dma_ops;</span>
<span class="p_add">+	return NULL;</span>
 }
 
 /*
<span class="p_header">diff --git a/arch/powerpc/include/asm/ps3.h b/arch/powerpc/include/asm/ps3.h</span>
<span class="p_header">index a19f831a4cc9..17ee719e799f 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/ps3.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/ps3.h</span>
<span class="p_chunk">@@ -435,7 +435,7 @@</span> <span class="p_context"> static inline void *ps3_system_bus_get_drvdata(</span>
 	return dev_get_drvdata(&amp;dev-&gt;core);
 }
 
<span class="p_del">-/* These two need global scope for get_dma_ops(). */</span>
<span class="p_add">+/* These two need global scope for get_arch_dma_ops(). */</span>
 
 extern struct bus_type ps3_system_bus_type;
 
<span class="p_header">diff --git a/arch/s390/include/asm/dma-mapping.h b/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_header">index a872027d0c1b..3108b8dbe266 100644</span>
<span class="p_header">--- a/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -12,10 +12,8 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops s390_pci_dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_del">-		return dev-&gt;dma_ops;</span>
 	return &amp;dma_noop_ops;
 }
 
<span class="p_header">diff --git a/arch/sh/include/asm/dma-mapping.h b/arch/sh/include/asm/dma-mapping.h</span>
<span class="p_header">index a7382c34c241..d99008af5f73 100644</span>
<span class="p_header">--- a/arch/sh/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/sh/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -4,7 +4,7 @@</span> <span class="p_context"></span>
 extern const struct dma_map_ops *dma_ops;
 extern void no_iommu_init(void);
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return dma_ops;
 }
<span class="p_header">diff --git a/arch/sparc/include/asm/dma-mapping.h b/arch/sparc/include/asm/dma-mapping.h</span>
<span class="p_header">index 3d2babc0c4c6..69cc627779f2 100644</span>
<span class="p_header">--- a/arch/sparc/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -24,14 +24,14 @@</span> <span class="p_context"> extern const struct dma_map_ops pci32_dma_ops;</span>
 
 extern struct bus_type pci_bus_type;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 #ifdef CONFIG_SPARC_LEON
 	if (sparc_cpu_model == sparc_leon)
 		return leon_dma_ops;
 #endif
 #if defined(CONFIG_SPARC32) &amp;&amp; defined(CONFIG_PCI)
<span class="p_del">-	if (dev-&gt;bus == &amp;pci_bus_type)</span>
<span class="p_add">+	if (bus == &amp;pci_bus_type)</span>
 		return &amp;pci32_dma_ops;
 #endif
 	return dma_ops;
<span class="p_header">diff --git a/arch/tile/include/asm/dma-mapping.h b/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_header">index 2562995a6ac9..bbc71a29b2c6 100644</span>
<span class="p_header">--- a/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/tile/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -29,12 +29,9 @@</span> <span class="p_context"> extern const struct dma_map_ops *gx_pci_dma_map_ops;</span>
 extern const struct dma_map_ops *gx_legacy_pci_dma_map_ops;
 extern const struct dma_map_ops *gx_hybrid_pci_dma_map_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_del">-		return dev-&gt;dma_ops;</span>
<span class="p_del">-	else</span>
<span class="p_del">-		return tile_dma_map_ops;</span>
<span class="p_add">+	return tile_dma_map_ops;</span>
 }
 
 static inline dma_addr_t get_dma_offset(struct device *dev)
<span class="p_header">diff --git a/arch/unicore32/include/asm/dma-mapping.h b/arch/unicore32/include/asm/dma-mapping.h</span>
<span class="p_header">index 14d7729c7b73..518ba5848dd6 100644</span>
<span class="p_header">--- a/arch/unicore32/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/unicore32/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -23,7 +23,7 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops swiotlb_dma_map_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
 	return &amp;swiotlb_dma_map_ops;
 }
<span class="p_header">diff --git a/arch/x86/include/asm/dma-mapping.h b/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_header">index 94b5b96966cb..08a0838b83fb 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -27,16 +27,9 @@</span> <span class="p_context"> extern int panic_on_overflow;</span>
 
 extern const struct dma_map_ops *dma_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
<span class="p_del">-#ifndef CONFIG_X86_DEV_DMA_OPS</span>
 	return dma_ops;
<span class="p_del">-#else</span>
<span class="p_del">-	if (unlikely(!dev) || !dev-&gt;dma_ops)</span>
<span class="p_del">-		return dma_ops;</span>
<span class="p_del">-	else</span>
<span class="p_del">-		return dev-&gt;dma_ops;</span>
<span class="p_del">-#endif</span>
 }
 
 bool arch_dma_alloc_attrs(struct device **dev, gfp_t *gfp);
<span class="p_header">diff --git a/arch/xtensa/include/asm/dma-mapping.h b/arch/xtensa/include/asm/dma-mapping.h</span>
<span class="p_header">index 9eecfc3c5dc4..c6140fa8c0be 100644</span>
<span class="p_header">--- a/arch/xtensa/include/asm/dma-mapping.h</span>
<span class="p_header">+++ b/arch/xtensa/include/asm/dma-mapping.h</span>
<span class="p_chunk">@@ -20,12 +20,9 @@</span> <span class="p_context"></span>
 
 extern const struct dma_map_ops xtensa_dma_map_ops;
 
<span class="p_del">-static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)</span>
 {
<span class="p_del">-	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_del">-		return dev-&gt;dma_ops;</span>
<span class="p_del">-	else</span>
<span class="p_del">-		return &amp;xtensa_dma_map_ops;</span>
<span class="p_add">+	return &amp;xtensa_dma_map_ops;</span>
 }
 
 void dma_cache_sync(struct device *dev, void *vaddr, size_t size,
<span class="p_header">diff --git a/include/linux/dma-mapping.h b/include/linux/dma-mapping.h</span>
<span class="p_header">index e97f23e8b2d9..ab8710888ddf 100644</span>
<span class="p_header">--- a/include/linux/dma-mapping.h</span>
<span class="p_header">+++ b/include/linux/dma-mapping.h</span>
<span class="p_chunk">@@ -164,6 +164,13 @@</span> <span class="p_context"> int dma_mmap_from_coherent(struct device *dev, struct vm_area_struct *vma,</span>
 
 #ifdef CONFIG_HAS_DMA
 #include &lt;asm/dma-mapping.h&gt;
<span class="p_add">+static inline const struct dma_map_ops *get_dma_ops(struct device *dev)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if (dev &amp;&amp; dev-&gt;dma_ops)</span>
<span class="p_add">+		return dev-&gt;dma_ops;</span>
<span class="p_add">+	return get_arch_dma_ops(dev ? dev-&gt;bus : NULL);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static inline void set_dma_ops(struct device *dev,
 			       const struct dma_map_ops *dma_ops)
 {

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



