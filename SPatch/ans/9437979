
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.4,27/37] sparc64: Delete __ret_efault. - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.4,27/37] sparc64: Delete __ret_efault.</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 19, 2016, 9:20 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161119092011.370230452@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9437979/mbox/"
   >mbox</a>
|
   <a href="/patch/9437979/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9437979/">/patch/9437979/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	31FF260756 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 19 Nov 2016 09:22:33 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1BDB529775
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 19 Nov 2016 09:22:33 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 110A129779; Sat, 19 Nov 2016 09:22:33 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5338B2977E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 19 Nov 2016 09:22:32 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932308AbcKSJW0 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sat, 19 Nov 2016 04:22:26 -0500
Received: from mail.linuxfoundation.org ([140.211.169.12]:58078 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932255AbcKSJWX (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sat, 19 Nov 2016 04:22:23 -0500
Received: from localhost (pes75-3-78-192-101-3.fbxo.proxad.net
	[78.192.101.3])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id 113EF305;
	Sat, 19 Nov 2016 09:22:21 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, &quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;
Subject: [PATCH 4.4 27/37] sparc64: Delete __ret_efault.
Date: Sat, 19 Nov 2016 10:20:43 +0100
Message-Id: &lt;20161119092011.370230452@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.10.2
In-Reply-To: &lt;20161119092010.016555184@linuxfoundation.org&gt;
References: &lt;20161119092010.016555184@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Nov. 19, 2016, 9:20 a.m.</div>
<pre class="content">
4.4-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: &quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;</span>


[ Upstream commit aa95ce361ed95c72ac42dcb315166bce5cf1a014 ]

It is completely unused.
<span class="signed-off-by">
Signed-off-by: David S. Miller &lt;davem@davemloft.net&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>
---
 arch/sparc/include/asm/uaccess_64.h |   41 ------------------------------------
 arch/sparc/kernel/head_64.S         |    7 ------
 arch/sparc/kernel/sparc_ksyms_64.c  |    1 
 3 files changed, 1 insertion(+), 48 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/sparc/include/asm/uaccess_64.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/uaccess_64.h</span>
<span class="p_chunk">@@ -98,7 +98,6 @@</span> <span class="p_context"> struct exception_table_entry {</span>
         unsigned int insn, fixup;
 };
 
<span class="p_del">-void __ret_efault(void);</span>
 void __retl_efault(void);
 
 /* Uh, these should become the main single-value transfer routines..
<span class="p_chunk">@@ -179,20 +178,6 @@</span> <span class="p_context"> int __put_user_bad(void);</span>
 	 __gu_ret;							     \
 })
 
<span class="p_del">-#define __get_user_nocheck_ret(data, addr, size, type, retval) ({	\</span>
<span class="p_del">-	register unsigned long __gu_val __asm__ (&quot;l1&quot;);			\</span>
<span class="p_del">-	switch (size) {							\</span>
<span class="p_del">-	case 1: __get_user_asm_ret(__gu_val, ub, addr, retval); break;	\</span>
<span class="p_del">-	case 2: __get_user_asm_ret(__gu_val, uh, addr, retval); break;	\</span>
<span class="p_del">-	case 4: __get_user_asm_ret(__gu_val, uw, addr, retval); break;	\</span>
<span class="p_del">-	case 8: __get_user_asm_ret(__gu_val, x, addr, retval); break;	\</span>
<span class="p_del">-	default:							\</span>
<span class="p_del">-		if (__get_user_bad())					\</span>
<span class="p_del">-			return retval;					\</span>
<span class="p_del">-	}								\</span>
<span class="p_del">-	data = (__force type) __gu_val;					\</span>
<span class="p_del">-})</span>
<span class="p_del">-</span>
 #define __get_user_asm(x, size, addr, ret)				\
 __asm__ __volatile__(							\
 		&quot;/* Get user asm, inline. */\n&quot;				\
<span class="p_chunk">@@ -214,32 +199,6 @@</span> <span class="p_context"> __asm__ __volatile__(							\</span>
 	       : &quot;=r&quot; (ret), &quot;=r&quot; (x) : &quot;r&quot; (__m(addr)),		\
 		 &quot;i&quot; (-EFAULT))
 
<span class="p_del">-#define __get_user_asm_ret(x, size, addr, retval)			\</span>
<span class="p_del">-if (__builtin_constant_p(retval) &amp;&amp; retval == -EFAULT)			\</span>
<span class="p_del">-	__asm__ __volatile__(						\</span>
<span class="p_del">-		&quot;/* Get user asm ret, inline. */\n&quot;			\</span>
<span class="p_del">-	&quot;1:\t&quot;	&quot;ld&quot;#size &quot;a [%1] %%asi, %0\n\n\t&quot;			\</span>
<span class="p_del">-		&quot;.section __ex_table,\&quot;a\&quot;\n\t&quot;				\</span>
<span class="p_del">-		&quot;.align	4\n\t&quot;						\</span>
<span class="p_del">-		&quot;.word	1b,__ret_efault\n\n\t&quot;				\</span>
<span class="p_del">-		&quot;.previous\n\t&quot;						\</span>
<span class="p_del">-	       : &quot;=r&quot; (x) : &quot;r&quot; (__m(addr)));				\</span>
<span class="p_del">-else									\</span>
<span class="p_del">-	__asm__ __volatile__(						\</span>
<span class="p_del">-		&quot;/* Get user asm ret, inline. */\n&quot;			\</span>
<span class="p_del">-	&quot;1:\t&quot;	&quot;ld&quot;#size &quot;a [%1] %%asi, %0\n\n\t&quot;			\</span>
<span class="p_del">-		&quot;.section .fixup,#alloc,#execinstr\n\t&quot;			\</span>
<span class="p_del">-		&quot;.align	4\n&quot;						\</span>
<span class="p_del">-	&quot;3:\n\t&quot;							\</span>
<span class="p_del">-		&quot;ret\n\t&quot;						\</span>
<span class="p_del">-		&quot; restore %%g0, %2, %%o0\n\n\t&quot;				\</span>
<span class="p_del">-		&quot;.previous\n\t&quot;						\</span>
<span class="p_del">-		&quot;.section __ex_table,\&quot;a\&quot;\n\t&quot;				\</span>
<span class="p_del">-		&quot;.align	4\n\t&quot;						\</span>
<span class="p_del">-		&quot;.word	1b, 3b\n\n\t&quot;					\</span>
<span class="p_del">-		&quot;.previous\n\t&quot;						\</span>
<span class="p_del">-	       : &quot;=r&quot; (x) : &quot;r&quot; (__m(addr)), &quot;i&quot; (retval))</span>
<span class="p_del">-</span>
 int __get_user_bad(void);
 
 unsigned long __must_check ___copy_from_user(void *to,
<span class="p_header">--- a/arch/sparc/kernel/head_64.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/head_64.S</span>
<span class="p_chunk">@@ -922,12 +922,7 @@</span> <span class="p_context"> prom_tba:	.xword	0</span>
 tlb_type:	.word	0	/* Must NOT end up in BSS */
 	.section	&quot;.fixup&quot;,#alloc,#execinstr
 
<span class="p_del">-	.globl	__ret_efault, __retl_efault, __ret_one, __retl_one</span>
<span class="p_del">-ENTRY(__ret_efault)</span>
<span class="p_del">-	ret</span>
<span class="p_del">-	 restore %g0, -EFAULT, %o0</span>
<span class="p_del">-ENDPROC(__ret_efault)</span>
<span class="p_del">-</span>
<span class="p_add">+	.globl	__retl_efault, __ret_one, __retl_one</span>
 ENTRY(__retl_efault)
 	retl
 	 mov	-EFAULT, %o0
<span class="p_header">--- a/arch/sparc/kernel/sparc_ksyms_64.c</span>
<span class="p_header">+++ b/arch/sparc/kernel/sparc_ksyms_64.c</span>
<span class="p_chunk">@@ -27,7 +27,6 @@</span> <span class="p_context"> EXPORT_SYMBOL(__flushw_user);</span>
 EXPORT_SYMBOL_GPL(real_hard_smp_processor_id);
 
 /* from head_64.S */
<span class="p_del">-EXPORT_SYMBOL(__ret_efault);</span>
 EXPORT_SYMBOL(tlb_type);
 EXPORT_SYMBOL(sun4v_chip_type);
 EXPORT_SYMBOL(prom_root_node);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



