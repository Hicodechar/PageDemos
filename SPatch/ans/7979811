
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[V2,3/8] perf tools: add sort option phys_daddr - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [V2,3/8] perf tools: add sort option phys_daddr</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=101641">kan.liang@intel.com</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 7, 2016, 1:30 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1452173440-10697-3-git-send-email-kan.liang@intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7979811/mbox/"
   >mbox</a>
|
   <a href="/patch/7979811/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7979811/">/patch/7979811/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 1B6FF9F1CC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  7 Jan 2016 20:50:42 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 52F73201CD
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  7 Jan 2016 20:50:41 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 65999201CE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  7 Jan 2016 20:50:40 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753456AbcAGUtU (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 7 Jan 2016 15:49:20 -0500
Received: from mga03.intel.com ([134.134.136.65]:20330 &quot;EHLO mga03.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752721AbcAGUtO (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 7 Jan 2016 15:49:14 -0500
Received: from orsmga002.jf.intel.com ([10.7.209.21])
	by orsmga103.jf.intel.com with ESMTP; 07 Jan 2016 12:49:12 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.20,534,1444719600&quot;; d=&quot;scan&#39;208&quot;;a=&quot;885968010&quot;
Received: from otc-grantly-02.jf.intel.com ([10.54.30.28])
	by orsmga002.jf.intel.com with ESMTP; 07 Jan 2016 12:49:12 -0800
From: kan.liang@intel.com
To: peterz@infradead.org, acme@kernel.org
Cc: eranian@google.com, ak@linux.intel.com, jolsa@kernel.org,
	namhyung@kernel.org, linux-kernel@vger.kernel.org,
	Kan Liang &lt;kan.liang@intel.com&gt;
Subject: [PATCH V2 3/8] perf tools: add sort option phys_daddr
Date: Thu,  7 Jan 2016 08:30:35 -0500
Message-Id: &lt;1452173440-10697-3-git-send-email-kan.liang@intel.com&gt;
X-Mailer: git-send-email 1.8.3.1
In-Reply-To: &lt;1452173440-10697-1-git-send-email-kan.liang@intel.com&gt;
References: &lt;1452173440-10697-1-git-send-email-kan.liang@intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-5.4 required=5.0 tests=BAYES_00, DATE_IN_PAST_06_12,
	RCVD_IN_DNSWL_HI, RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=101641">kan.liang@intel.com</a> - Jan. 7, 2016, 1:30 p.m.</div>
<pre class="content">
<span class="from">From: Kan Liang &lt;kan.liang@intel.com&gt;</span>

Add a new sort option phys_daddr for --mem-mode sort. With this option
applied, perf can sort and report by sample&#39;s physical address.
<span class="signed-off-by">
Signed-off-by: Kan Liang &lt;kan.liang@intel.com&gt;</span>
---
 tools/perf/Documentation/perf-report.txt |  1 +
 tools/perf/util/hist.c                   |  3 +++
 tools/perf/util/hist.h                   |  1 +
 tools/perf/util/machine.c                |  7 ++++--
 tools/perf/util/sort.c                   | 42 ++++++++++++++++++++++++++++++++
 tools/perf/util/sort.h                   |  1 +
 tools/perf/util/symbol.h                 |  1 +
 7 files changed, 54 insertions(+), 2 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/tools/perf/Documentation/perf-report.txt b/tools/perf/Documentation/perf-report.txt</span>
<span class="p_header">index 8a301f6..91c387e 100644</span>
<span class="p_header">--- a/tools/perf/Documentation/perf-report.txt</span>
<span class="p_header">+++ b/tools/perf/Documentation/perf-report.txt</span>
<span class="p_chunk">@@ -163,6 +163,7 @@</span> <span class="p_context"> OPTIONS</span>
 	- mem: type of memory access for the data at the time of sample
 	- snoop: type of snoop (if any) for the data at the time of sample
 	- dcacheline: the cacheline the data address is on at the time of sample
<span class="p_add">+	- phys_daddr: physical address of data being executed on at the time of sample</span>
 
 	And default sort keys are changed to local_weight, mem, sym, dso,
 	symbol_daddr, dso_daddr, snoop, tlb, locked, see &#39;--mem-mode&#39;.
<span class="p_header">diff --git a/tools/perf/util/hist.c b/tools/perf/util/hist.c</span>
<span class="p_header">index afc9b8f..3051f15 100644</span>
<span class="p_header">--- a/tools/perf/util/hist.c</span>
<span class="p_header">+++ b/tools/perf/util/hist.c</span>
<span class="p_chunk">@@ -152,6 +152,9 @@</span> <span class="p_context"> void hists__calc_col_len(struct hists *hists, struct hist_entry *h)</span>
 			symlen = unresolved_col_width + 4 + 2;
 			hists__set_unres_dso_col_len(hists, HISTC_MEM_DADDR_DSO);
 		}
<span class="p_add">+</span>
<span class="p_add">+		hists__new_col_len(hists, HISTC_MEM_PHYS_DADDR, unresolved_col_width + 4 + 2);</span>
<span class="p_add">+</span>
 	} else {
 		symlen = unresolved_col_width + 4 + 2;
 		hists__new_col_len(hists, HISTC_MEM_DADDR_SYMBOL, symlen);
<span class="p_header">diff --git a/tools/perf/util/hist.h b/tools/perf/util/hist.h</span>
<span class="p_header">index cb8f373..3bb574a 100644</span>
<span class="p_header">--- a/tools/perf/util/hist.h</span>
<span class="p_header">+++ b/tools/perf/util/hist.h</span>
<span class="p_chunk">@@ -44,6 +44,7 @@</span> <span class="p_context"> enum hist_column {</span>
 	HISTC_GLOBAL_WEIGHT,
 	HISTC_MEM_DADDR_SYMBOL,
 	HISTC_MEM_DADDR_DSO,
<span class="p_add">+	HISTC_MEM_PHYS_DADDR,</span>
 	HISTC_MEM_LOCKED,
 	HISTC_MEM_TLB,
 	HISTC_MEM_LVL,
<span class="p_header">diff --git a/tools/perf/util/machine.c b/tools/perf/util/machine.c</span>
<span class="p_header">index ad79297..6a516cc 100644</span>
<span class="p_header">--- a/tools/perf/util/machine.c</span>
<span class="p_header">+++ b/tools/perf/util/machine.c</span>
<span class="p_chunk">@@ -1560,10 +1560,12 @@</span> <span class="p_context"> static void ip__resolve_ams(struct thread *thread,</span>
 	ams-&gt;al_addr = al.addr;
 	ams-&gt;sym = al.sym;
 	ams-&gt;map = al.map;
<span class="p_add">+	ams-&gt;phys_addr = 0;</span>
 }
 
 static void ip__resolve_data(struct thread *thread,
<span class="p_del">-			     u8 m, struct addr_map_symbol *ams, u64 addr)</span>
<span class="p_add">+			     u8 m, struct addr_map_symbol *ams,</span>
<span class="p_add">+			     u64 addr, u64 phys_addr)</span>
 {
 	struct addr_location al;
 
<span class="p_chunk">@@ -1583,6 +1585,7 @@</span> <span class="p_context"> static void ip__resolve_data(struct thread *thread,</span>
 	ams-&gt;al_addr = al.addr;
 	ams-&gt;sym = al.sym;
 	ams-&gt;map = al.map;
<span class="p_add">+	ams-&gt;phys_addr = phys_addr;</span>
 }
 
 struct mem_info *sample__resolve_mem(struct perf_sample *sample,
<span class="p_chunk">@@ -1594,7 +1597,7 @@</span> <span class="p_context"> struct mem_info *sample__resolve_mem(struct perf_sample *sample,</span>
 		return NULL;
 
 	ip__resolve_ams(al-&gt;thread, &amp;mi-&gt;iaddr, sample-&gt;ip);
<span class="p_del">-	ip__resolve_data(al-&gt;thread, al-&gt;cpumode, &amp;mi-&gt;daddr, sample-&gt;addr);</span>
<span class="p_add">+	ip__resolve_data(al-&gt;thread, al-&gt;cpumode, &amp;mi-&gt;daddr, sample-&gt;addr, sample-&gt;phys_addr);</span>
 	mi-&gt;data_src.val = sample-&gt;data_src;
 
 	return mi;
<span class="p_header">diff --git a/tools/perf/util/sort.c b/tools/perf/util/sort.c</span>
<span class="p_header">index a8a9588..4ce6827 100644</span>
<span class="p_header">--- a/tools/perf/util/sort.c</span>
<span class="p_header">+++ b/tools/perf/util/sort.c</span>
<span class="p_chunk">@@ -832,6 +832,40 @@</span> <span class="p_context"> sort__tlb_cmp(struct hist_entry *left, struct hist_entry *right)</span>
 	return (int64_t)(data_src_r.mem_dtlb - data_src_l.mem_dtlb);
 }
 
<span class="p_add">+static int64_t</span>
<span class="p_add">+sort__phys_daddr_cmp(struct hist_entry *left, struct hist_entry *right)</span>
<span class="p_add">+{</span>
<span class="p_add">+	uint64_t l = 0, r = 0;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (left-&gt;mem_info)</span>
<span class="p_add">+		l = left-&gt;mem_info-&gt;daddr.phys_addr;</span>
<span class="p_add">+	if (right-&gt;mem_info)</span>
<span class="p_add">+		r = right-&gt;mem_info-&gt;daddr.phys_addr;</span>
<span class="p_add">+</span>
<span class="p_add">+	return (int64_t)(r - l);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static int hist_entry__phys_daddr_snprintf(struct hist_entry *he, char *bf,</span>
<span class="p_add">+				    size_t size, unsigned int width)</span>
<span class="p_add">+{</span>
<span class="p_add">+	uint64_t addr = 0;</span>
<span class="p_add">+	size_t ret = 0;</span>
<span class="p_add">+	size_t len = BITS_PER_LONG / 4;</span>
<span class="p_add">+</span>
<span class="p_add">+	addr = he-&gt;mem_info-&gt;daddr.phys_addr;</span>
<span class="p_add">+</span>
<span class="p_add">+	ret += repsep_snprintf(bf + ret, size - ret, &quot;[%c] &quot;, he-&gt;level);</span>
<span class="p_add">+</span>
<span class="p_add">+	ret += repsep_snprintf(bf + ret, size - ret, &quot;%-#.*llx&quot;, len, addr);</span>
<span class="p_add">+</span>
<span class="p_add">+	ret += repsep_snprintf(bf + ret, size - ret, &quot;%-*s&quot;, width - ret, &quot;&quot;);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (ret &gt; width)</span>
<span class="p_add">+		bf[width] = &#39;\0&#39;;</span>
<span class="p_add">+</span>
<span class="p_add">+	return width;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static const char * const tlb_access[] = {
 	&quot;N/A&quot;,
 	&quot;HIT&quot;,
<span class="p_chunk">@@ -1222,6 +1256,13 @@</span> <span class="p_context"> struct sort_entry sort_mem_dcacheline = {</span>
 	.se_width_idx	= HISTC_MEM_DCACHELINE,
 };
 
<span class="p_add">+struct sort_entry sort_mem_phys_daddr = {</span>
<span class="p_add">+	.se_header	= &quot;Data Physical Address&quot;,</span>
<span class="p_add">+	.se_cmp		= sort__phys_daddr_cmp,</span>
<span class="p_add">+	.se_snprintf	= hist_entry__phys_daddr_snprintf,</span>
<span class="p_add">+	.se_width_idx	= HISTC_MEM_PHYS_DADDR,</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 static int64_t
 sort__abort_cmp(struct hist_entry *left, struct hist_entry *right)
 {
<span class="p_chunk">@@ -1410,6 +1451,7 @@</span> <span class="p_context"> static struct sort_dimension memory_sort_dimensions[] = {</span>
 	DIM(SORT_MEM_LVL, &quot;mem&quot;, sort_mem_lvl),
 	DIM(SORT_MEM_SNOOP, &quot;snoop&quot;, sort_mem_snoop),
 	DIM(SORT_MEM_DCACHELINE, &quot;dcacheline&quot;, sort_mem_dcacheline),
<span class="p_add">+	DIM(SORT_MEM_PHYS_DADDR, &quot;phys_daddr&quot;, sort_mem_phys_daddr),</span>
 };
 
 #undef DIM
<span class="p_header">diff --git a/tools/perf/util/sort.h b/tools/perf/util/sort.h</span>
<span class="p_header">index dec536b..f6e1781 100644</span>
<span class="p_header">--- a/tools/perf/util/sort.h</span>
<span class="p_header">+++ b/tools/perf/util/sort.h</span>
<span class="p_chunk">@@ -207,6 +207,7 @@</span> <span class="p_context"> enum sort_type {</span>
 	SORT_MEM_SNOOP,
 	SORT_MEM_DCACHELINE,
 	SORT_MEM_IADDR_SYMBOL,
<span class="p_add">+	SORT_MEM_PHYS_DADDR,</span>
 };
 
 /*
<span class="p_header">diff --git a/tools/perf/util/symbol.h b/tools/perf/util/symbol.h</span>
<span class="p_header">index ccd1caa..c35c3f0 100644</span>
<span class="p_header">--- a/tools/perf/util/symbol.h</span>
<span class="p_header">+++ b/tools/perf/util/symbol.h</span>
<span class="p_chunk">@@ -170,6 +170,7 @@</span> <span class="p_context"> struct addr_map_symbol {</span>
 	struct symbol *sym;
 	u64	      addr;
 	u64	      al_addr;
<span class="p_add">+	u64	      phys_addr;</span>
 };
 
 struct branch_info {

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



