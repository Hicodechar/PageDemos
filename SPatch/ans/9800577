
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>PATCH v3 Convert multiple netdev_info messages to netdev_dbg - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    PATCH v3 Convert multiple netdev_info messages to netdev_dbg</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=174791">Michael Dilmore</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 21, 2017, 2:08 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1498010934-27703-1-git-send-email-michael.j.dilmore@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9800577/mbox/"
   >mbox</a>
|
   <a href="/patch/9800577/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9800577/">/patch/9800577/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	AAD3D6086C for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 21 Jun 2017 02:09:48 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9127628511
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 21 Jun 2017 02:09:48 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 8579928514; Wed, 21 Jun 2017 02:09:48 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, FREEMAIL_FROM,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9D11228511
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 21 Jun 2017 02:09:47 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753139AbdFUCJn (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 20 Jun 2017 22:09:43 -0400
Received: from mail-wr0-f193.google.com ([209.85.128.193]:32836 &quot;EHLO
	mail-wr0-f193.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752922AbdFUCJl (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 20 Jun 2017 22:09:41 -0400
Received: by mail-wr0-f193.google.com with SMTP id x23so22389564wrb.0;
	Tue, 20 Jun 2017 19:09:40 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=from:to:cc:subject:date:message-id;
	bh=s1GIaqW0cTqhwXOM1cRedkqAHwltJ6LUmccq2aQhlZE=;
	b=b09bRF/kTyPqO0rvBWKwFRvBmJ/PGkXbLOs3Ww9dqF1ejtR6Wv+1B/AIpbIKWDYXek
	oDPeFmHbq2Puq59CqnGGKtRHHdz81H3AuFXXFAC+Z5DqtMyhzXTTYX9GfzBZp9qogDcy
	aU/FWOu5VLemddfUAGdHvvhPWL04jaW6yNczXDvJn8h5Wy1oJXp2ckDg+ZW5+PiPr7B5
	df/jjNu+iHK10kZ8blTCZyPq/jPfUGiY49cYIKD/ReqMd8irqnVoCkw+mxi+dDakaT2I
	p2XCooMSCKngLguZs0D/qOtP/o7CLm99Y8b41c+8sS0tLKRwYiSR5CtG2n1IndEKdlI7
	iUeA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id;
	bh=s1GIaqW0cTqhwXOM1cRedkqAHwltJ6LUmccq2aQhlZE=;
	b=r0ouYsjsJjt/VykdAkfsL0X4YJbmoga0FLJQRxVQp8iYf4Fo4tjFyOvGO4NHjsubUE
	f+KtbhdpK7Jxs6vxVE9lwsRIM+ETpePWy/XoCIVZJt/jpSPDY1bEUau3qc8ZupzoMO5L
	ICy6r74AiAMFy4bFRMS8h7+VGSd8GzOOj1EBsBD3lw3M3m+iW4Q3F6X6WQeNWgfQXoPg
	56iFmkLlR2OfmcJY+sxWCDu61NFFtGqXwptAJlGerAB/cErl8jcOOjpZTBMLvAiRhX5z
	VvCyCwJLJWMAUja8MZIA6EvwMFMkmltjb1lLNY/0Q17VMnfqdy7HoQTxmNOV/7+359tT
	3WnA==
X-Gm-Message-State: AKS2vOyWiNHgONq+pqMFT7HaUddA5UDcbsR4jAkvZN2VMnl/oITN5EeN
	8sKLlXTgxWggAA==
X-Received: by 10.223.175.200 with SMTP id y8mr18700242wrd.163.1498010979552;
	Tue, 20 Jun 2017 19:09:39 -0700 (PDT)
Received: from localhost.localdomain
	(host217-46-125-86.range217-46.btcentralplus.com. [217.46.125.86])
	by smtp.gmail.com with ESMTPSA id
	18sm12822087wmt.6.2017.06.20.19.09.38
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Tue, 20 Jun 2017 19:09:39 -0700 (PDT)
From: Michael J Dilmore &lt;michael.j.dilmore@gmail.com&gt;
To: j.vosburgh@gmail.com
Cc: vfalico@gmail.com, andy@greyhouse.net, netdev@vger.kernel.org,
	linux-kernel@vger.kernel.org, joe@perches.com,
	Michael J Dilmore &lt;michael.j.dilmore@gmail.com&gt;
Subject: [PATCH] PATCH v3 Convert multiple netdev_info messages to netdev_dbg
Date: Wed, 21 Jun 2017 03:08:54 +0100
Message-Id: &lt;1498010934-27703-1-git-send-email-michael.j.dilmore@gmail.com&gt;
X-Mailer: git-send-email 2.7.4
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=174791">Michael Dilmore</a> - June 21, 2017, 2:08 a.m.</div>
<pre class="content">
The bond_options.c file contains multiple netdev_info messages that
clutter kernel output. This patches replaces these with netdev_dbg messages
and adds a netdev_dbg for packets for slave.
<span class="signed-off-by">
Signed-off-by: Michael J Dilmore &lt;michael.j.dilmore@gmail.com&gt;</span>
Suggested-by: Joe Perches &lt;joe@perches.com&gt;
---
 drivers/net/bonding/bond_options.c | 54 +++++++++++++++++++-------------------
 1 file changed, 27 insertions(+), 27 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=129">David Miller</a> - June 23, 2017, 5:33 p.m.</div>
<pre class="content">
<span class="from">From: Michael J Dilmore &lt;michael.j.dilmore@gmail.com&gt;</span>
Date: Wed, 21 Jun 2017 03:08:54 +0100
<span class="quote">
&gt; The bond_options.c file contains multiple netdev_info messages that</span>
<span class="quote">&gt; clutter kernel output. This patches replaces these with netdev_dbg messages</span>
<span class="quote">&gt; and adds a netdev_dbg for packets for slave.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Michael J Dilmore &lt;michael.j.dilmore@gmail.com&gt;</span>
<span class="quote">&gt; Suggested-by: Joe Perches &lt;joe@perches.com&gt;</span>

This falls under the category of &quot;very low quality patch submission&quot;
I&#39;m afraid.

First of all your Subject lines need to be done more properly.

Puting &quot;PATCH&quot; twice in there is pointless, just once inside of the
brackets is enough.  The &quot;v3&quot; belongs inside of the brackets too.

Seriously, just look at how other developer format their Subject lines
on this mailing list, and you are less likely to go wrong.  Doing thing
your own unique way is asking for trouble.

But more importantly, your commit log message says you are converting
netdev_info calls into netdev_dbg ones, but that is not at all what
this patch does.
<span class="quote">
&gt;  		netdev_dbg(bond-&gt;dev, &quot;%s mode is incompatible with arp monitoring, start mii monitoring\n&quot;,</span>
<span class="quote">&gt; -			    newval-&gt;string);</span>
<span class="quote">&gt; +			   newval-&gt;string);</span>

You&#39;re simply adjusting indentation of the code.

There are no &quot;conversions&quot; going on here at all.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/net/bonding/bond_options.c b/drivers/net/bonding/bond_options.c</span>
<span class="p_header">index e3a9af6..9110e5b 100644</span>
<span class="p_header">--- a/drivers/net/bonding/bond_options.c</span>
<span class="p_header">+++ b/drivers/net/bonding/bond_options.c</span>
<span class="p_chunk">@@ -722,13 +722,13 @@</span> <span class="p_context"> static int bond_option_mode_set(struct bonding *bond,</span>
 {
 	if (!bond_mode_uses_arp(newval-&gt;value) &amp;&amp; bond-&gt;params.arp_interval) {
 		netdev_dbg(bond-&gt;dev, &quot;%s mode is incompatible with arp monitoring, start mii monitoring\n&quot;,
<span class="p_del">-			    newval-&gt;string);</span>
<span class="p_add">+			   newval-&gt;string);</span>
 		/* disable arp monitoring */
 		bond-&gt;params.arp_interval = 0;
 		/* set miimon to default value */
 		bond-&gt;params.miimon = BOND_DEFAULT_MIIMON;
 		netdev_dbg(bond-&gt;dev, &quot;Setting MII monitoring interval to %d\n&quot;,
<span class="p_del">-			    bond-&gt;params.miimon);</span>
<span class="p_add">+			   bond-&gt;params.miimon);</span>
 	}
 
 	/* don&#39;t cache arp_validate between modes */
<span class="p_chunk">@@ -783,12 +783,12 @@</span> <span class="p_context"> static int bond_option_active_slave_set(struct bonding *bond,</span>
 		if (new_active == old_active) {
 			/* do nothing */
 			netdev_dbg(bond-&gt;dev, &quot;%s is already the current active slave\n&quot;,
<span class="p_del">-				    new_active-&gt;dev-&gt;name);</span>
<span class="p_add">+				   new_active-&gt;dev-&gt;name);</span>
 		} else {
 			if (old_active &amp;&amp; (new_active-&gt;link == BOND_LINK_UP) &amp;&amp;
 			    bond_slave_is_up(new_active)) {
 				netdev_dbg(bond-&gt;dev, &quot;Setting %s as active slave\n&quot;,
<span class="p_del">-					    new_active-&gt;dev-&gt;name);</span>
<span class="p_add">+					   new_active-&gt;dev-&gt;name);</span>
 				bond_change_active_slave(bond, new_active);
 			} else {
 				netdev_err(bond-&gt;dev, &quot;Could not set %s as active slave; either %s is down or the link is down\n&quot;,
<span class="p_chunk">@@ -811,14 +811,14 @@</span> <span class="p_context"> static int bond_option_miimon_set(struct bonding *bond,</span>
 				  const struct bond_opt_value *newval)
 {
 	netdev_dbg(bond-&gt;dev, &quot;Setting MII monitoring interval to %llu\n&quot;,
<span class="p_del">-		    newval-&gt;value);</span>
<span class="p_add">+		   newval-&gt;value);</span>
 	bond-&gt;params.miimon = newval-&gt;value;
 	if (bond-&gt;params.updelay)
 		netdev_dbg(bond-&gt;dev, &quot;Note: Updating updelay (to %d) since it is a multiple of the miimon value\n&quot;,
<span class="p_del">-			bond-&gt;params.updelay * bond-&gt;params.miimon);</span>
<span class="p_add">+			   bond-&gt;params.updelay * bond-&gt;params.miimon);</span>
 	if (bond-&gt;params.downdelay)
 		netdev_dbg(bond-&gt;dev, &quot;Note: Updating downdelay (to %d) since it is a multiple of the miimon value\n&quot;,
<span class="p_del">-			    bond-&gt;params.downdelay * bond-&gt;params.miimon);</span>
<span class="p_add">+			   bond-&gt;params.downdelay * bond-&gt;params.miimon);</span>
 	if (newval-&gt;value &amp;&amp; bond-&gt;params.arp_interval) {
 		netdev_dbg(bond-&gt;dev, &quot;MII monitoring cannot be used with ARP monitoring - disabling ARP monitoring...\n&quot;);
 		bond-&gt;params.arp_interval = 0;
<span class="p_chunk">@@ -863,7 +863,7 @@</span> <span class="p_context"> static int bond_option_updelay_set(struct bonding *bond,</span>
 	}
 	bond-&gt;params.updelay = value / bond-&gt;params.miimon;
 	netdev_dbg(bond-&gt;dev, &quot;Setting up delay to %d\n&quot;,
<span class="p_del">-		    bond-&gt;params.updelay * bond-&gt;params.miimon);</span>
<span class="p_add">+		   bond-&gt;params.updelay * bond-&gt;params.miimon);</span>
 
 	return 0;
 }
<span class="p_chunk">@@ -885,7 +885,7 @@</span> <span class="p_context"> static int bond_option_downdelay_set(struct bonding *bond,</span>
 	}
 	bond-&gt;params.downdelay = value / bond-&gt;params.miimon;
 	netdev_dbg(bond-&gt;dev, &quot;Setting down delay to %d\n&quot;,
<span class="p_del">-		    bond-&gt;params.downdelay * bond-&gt;params.miimon);</span>
<span class="p_add">+		   bond-&gt;params.downdelay * bond-&gt;params.miimon);</span>
 
 	return 0;
 }
<span class="p_chunk">@@ -894,7 +894,7 @@</span> <span class="p_context"> static int bond_option_use_carrier_set(struct bonding *bond,</span>
 				       const struct bond_opt_value *newval)
 {
 	netdev_dbg(bond-&gt;dev, &quot;Setting use_carrier to %llu\n&quot;,
<span class="p_del">-		    newval-&gt;value);</span>
<span class="p_add">+		   newval-&gt;value);</span>
 	bond-&gt;params.use_carrier = newval-&gt;value;
 
 	return 0;
<span class="p_chunk">@@ -908,7 +908,7 @@</span> <span class="p_context"> static int bond_option_arp_interval_set(struct bonding *bond,</span>
 					const struct bond_opt_value *newval)
 {
 	netdev_dbg(bond-&gt;dev, &quot;Setting ARP monitoring interval to %llu\n&quot;,
<span class="p_del">-		    newval-&gt;value);</span>
<span class="p_add">+		   newval-&gt;value);</span>
 	bond-&gt;params.arp_interval = newval-&gt;value;
 	if (newval-&gt;value) {
 		if (bond-&gt;params.miimon) {
<span class="p_chunk">@@ -1066,7 +1066,7 @@</span> <span class="p_context"> static int bond_option_arp_validate_set(struct bonding *bond,</span>
 					const struct bond_opt_value *newval)
 {
 	netdev_dbg(bond-&gt;dev, &quot;Setting arp_validate to %s (%llu)\n&quot;,
<span class="p_del">-		    newval-&gt;string, newval-&gt;value);</span>
<span class="p_add">+		   newval-&gt;string, newval-&gt;value);</span>
 
 	if (bond-&gt;dev-&gt;flags &amp; IFF_UP) {
 		if (!newval-&gt;value)
<span class="p_chunk">@@ -1083,7 +1083,7 @@</span> <span class="p_context"> static int bond_option_arp_all_targets_set(struct bonding *bond,</span>
 					   const struct bond_opt_value *newval)
 {
 	netdev_dbg(bond-&gt;dev, &quot;Setting arp_all_targets to %s (%llu)\n&quot;,
<span class="p_del">-		    newval-&gt;string, newval-&gt;value);</span>
<span class="p_add">+		   newval-&gt;string, newval-&gt;value);</span>
 	bond-&gt;params.arp_all_targets = newval-&gt;value;
 
 	return 0;
<span class="p_chunk">@@ -1113,7 +1113,7 @@</span> <span class="p_context"> static int bond_option_primary_set(struct bonding *bond,</span>
 	bond_for_each_slave(bond, slave, iter) {
 		if (strncmp(slave-&gt;dev-&gt;name, primary, IFNAMSIZ) == 0) {
 			netdev_dbg(bond-&gt;dev, &quot;Setting %s as primary slave\n&quot;,
<span class="p_del">-				    slave-&gt;dev-&gt;name);</span>
<span class="p_add">+				   slave-&gt;dev-&gt;name);</span>
 			rcu_assign_pointer(bond-&gt;primary_slave, slave);
 			strcpy(bond-&gt;params.primary, slave-&gt;dev-&gt;name);
 			bond_select_active_slave(bond);
<span class="p_chunk">@@ -1130,7 +1130,7 @@</span> <span class="p_context"> static int bond_option_primary_set(struct bonding *bond,</span>
 	bond-&gt;params.primary[IFNAMSIZ - 1] = 0;
 
 	netdev_dbg(bond-&gt;dev, &quot;Recording %s as primary, but it has not been enslaved to %s yet\n&quot;,
<span class="p_del">-		    primary, bond-&gt;dev-&gt;name);</span>
<span class="p_add">+		   primary, bond-&gt;dev-&gt;name);</span>
 
 out:
 	unblock_netpoll_tx();
<span class="p_chunk">@@ -1142,7 +1142,7 @@</span> <span class="p_context"> static int bond_option_primary_reselect_set(struct bonding *bond,</span>
 					    const struct bond_opt_value *newval)
 {
 	netdev_dbg(bond-&gt;dev, &quot;Setting primary_reselect to %s (%llu)\n&quot;,
<span class="p_del">-		    newval-&gt;string, newval-&gt;value);</span>
<span class="p_add">+		   newval-&gt;string, newval-&gt;value);</span>
 	bond-&gt;params.primary_reselect = newval-&gt;value;
 
 	block_netpoll_tx();
<span class="p_chunk">@@ -1156,7 +1156,7 @@</span> <span class="p_context"> static int bond_option_fail_over_mac_set(struct bonding *bond,</span>
 					 const struct bond_opt_value *newval)
 {
 	netdev_dbg(bond-&gt;dev, &quot;Setting fail_over_mac to %s (%llu)\n&quot;,
<span class="p_del">-		    newval-&gt;string, newval-&gt;value);</span>
<span class="p_add">+		   newval-&gt;string, newval-&gt;value);</span>
 	bond-&gt;params.fail_over_mac = newval-&gt;value;
 
 	return 0;
<span class="p_chunk">@@ -1166,7 +1166,7 @@</span> <span class="p_context"> static int bond_option_xmit_hash_policy_set(struct bonding *bond,</span>
 					    const struct bond_opt_value *newval)
 {
 	netdev_dbg(bond-&gt;dev, &quot;Setting xmit hash policy to %s (%llu)\n&quot;,
<span class="p_del">-		    newval-&gt;string, newval-&gt;value);</span>
<span class="p_add">+		   newval-&gt;string, newval-&gt;value);</span>
 	bond-&gt;params.xmit_policy = newval-&gt;value;
 
 	return 0;
<span class="p_chunk">@@ -1176,7 +1176,7 @@</span> <span class="p_context"> static int bond_option_resend_igmp_set(struct bonding *bond,</span>
 				       const struct bond_opt_value *newval)
 {
 	netdev_dbg(bond-&gt;dev, &quot;Setting resend_igmp to %llu\n&quot;,
<span class="p_del">-		    newval-&gt;value);</span>
<span class="p_add">+		   newval-&gt;value);</span>
 	bond-&gt;params.resend_igmp = newval-&gt;value;
 
 	return 0;
<span class="p_chunk">@@ -1215,7 +1215,7 @@</span> <span class="p_context"> static int bond_option_min_links_set(struct bonding *bond,</span>
 				     const struct bond_opt_value *newval)
 {
 	netdev_dbg(bond-&gt;dev, &quot;Setting min links value to %llu\n&quot;,
<span class="p_del">-		    newval-&gt;value);</span>
<span class="p_add">+		   newval-&gt;value);</span>
 	bond-&gt;params.min_links = newval-&gt;value;
 	bond_set_carrier(bond);
 
<span class="p_chunk">@@ -1233,7 +1233,7 @@</span> <span class="p_context"> static int bond_option_lp_interval_set(struct bonding *bond,</span>
 static int bond_option_pps_set(struct bonding *bond,
 			       const struct bond_opt_value *newval)
 {	netdev_dbg(bond-&gt;dev, &quot;Setting packets per slave value to %llu\n&quot;,
<span class="p_del">-		    	newval-&gt;value);</span>
<span class="p_add">+		   newval-&gt;value);</span>
 	bond-&gt;params.packets_per_slave = newval-&gt;value;
 	if (newval-&gt;value &gt; 0) {
 		bond-&gt;params.reciprocal_packets_per_slave =
<span class="p_chunk">@@ -1253,7 +1253,7 @@</span> <span class="p_context"> static int bond_option_lacp_rate_set(struct bonding *bond,</span>
 				     const struct bond_opt_value *newval)
 {
 	netdev_dbg(bond-&gt;dev, &quot;Setting LACP rate to %s (%llu)\n&quot;,
<span class="p_del">-		    newval-&gt;string, newval-&gt;value);</span>
<span class="p_add">+		   newval-&gt;string, newval-&gt;value);</span>
 	bond-&gt;params.lacp_fast = newval-&gt;value;
 	bond_3ad_update_lacp_rate(bond);
 
<span class="p_chunk">@@ -1264,7 +1264,7 @@</span> <span class="p_context"> static int bond_option_ad_select_set(struct bonding *bond,</span>
 				     const struct bond_opt_value *newval)
 {
 	netdev_dbg(bond-&gt;dev, &quot;Setting ad_select to %s (%llu)\n&quot;,
<span class="p_del">-		    newval-&gt;string, newval-&gt;value);</span>
<span class="p_add">+		   newval-&gt;string, newval-&gt;value);</span>
 	bond-&gt;params.ad_select = newval-&gt;value;
 
 	return 0;
<span class="p_chunk">@@ -1348,7 +1348,7 @@</span> <span class="p_context"> static int bond_option_slaves_set(struct bonding *bond,</span>
 	dev = __dev_get_by_name(dev_net(bond-&gt;dev), ifname);
 	if (!dev) {
 		netdev_dbg(bond-&gt;dev, &quot;interface %s does not exist!\n&quot;,
<span class="p_del">-			    ifname);</span>
<span class="p_add">+			   ifname);</span>
 		ret = -ENODEV;
 		goto out;
 	}
<span class="p_chunk">@@ -1381,7 +1381,7 @@</span> <span class="p_context"> static int bond_option_tlb_dynamic_lb_set(struct bonding *bond,</span>
 					  const struct bond_opt_value *newval)
 {
 	netdev_dbg(bond-&gt;dev, &quot;Setting dynamic-lb to %s (%llu)\n&quot;,
<span class="p_del">-		    newval-&gt;string, newval-&gt;value);</span>
<span class="p_add">+		   newval-&gt;string, newval-&gt;value);</span>
 	bond-&gt;params.tlb_dynamic_lb = newval-&gt;value;
 
 	return 0;
<span class="p_chunk">@@ -1391,7 +1391,7 @@</span> <span class="p_context"> static int bond_option_ad_actor_sys_prio_set(struct bonding *bond,</span>
 					     const struct bond_opt_value *newval)
 {
 	netdev_dbg(bond-&gt;dev, &quot;Setting ad_actor_sys_prio to %llu\n&quot;,
<span class="p_del">-		    newval-&gt;value);</span>
<span class="p_add">+		   newval-&gt;value);</span>
 
 	bond-&gt;params.ad_actor_sys_prio = newval-&gt;value;
 	bond_3ad_update_ad_actor_settings(bond);
<span class="p_chunk">@@ -1435,7 +1435,7 @@</span> <span class="p_context"> static int bond_option_ad_user_port_key_set(struct bonding *bond,</span>
 					    const struct bond_opt_value *newval)
 {
 	netdev_dbg(bond-&gt;dev, &quot;Setting ad_user_port_key to %llu\n&quot;,
<span class="p_del">-		    newval-&gt;value);</span>
<span class="p_add">+		   newval-&gt;value);</span>
 
 	bond-&gt;params.ad_user_port_key = newval-&gt;value;
 	return 0;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



