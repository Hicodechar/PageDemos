
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>x86/mm: drop unused argument sync_global_pgds() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    x86/mm: drop unused argument sync_global_pgds()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=40781">Kirill A. Shutemov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 12, 2016, 1:57 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161212135731.196255-1-kirill.shutemov@linux.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9470747/mbox/"
   >mbox</a>
|
   <a href="/patch/9470747/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9470747/">/patch/9470747/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	4524960760 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 12 Dec 2016 13:57:53 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 31A41282EC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 12 Dec 2016 13:57:53 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 22D02283BA; Mon, 12 Dec 2016 13:57:53 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 89C55282EC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 12 Dec 2016 13:57:52 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752580AbcLLN5r (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 12 Dec 2016 08:57:47 -0500
Received: from mga09.intel.com ([134.134.136.24]:27647 &quot;EHLO mga09.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751975AbcLLN5q (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 12 Dec 2016 08:57:46 -0500
Received: from orsmga001.jf.intel.com ([10.7.209.18])
	by orsmga102.jf.intel.com with ESMTP; 12 Dec 2016 05:57:40 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.33,336,1477983600&quot;; d=&quot;scan&#39;208&quot;;a=&quot;1071087587&quot;
Received: from black.fi.intel.com ([10.237.72.28])
	by orsmga001.jf.intel.com with ESMTP; 12 Dec 2016 05:57:38 -0800
Received: by black.fi.intel.com (Postfix, from userid 1000)
	id 8C18D111; Mon, 12 Dec 2016 15:57:37 +0200 (EET)
From: &quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
To: Thomas Gleixner &lt;tglx@linutronix.de&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;, x86@kernel.org
Cc: Andy Lutomirski &lt;luto@kernel.org&gt;, linux-kernel@vger.kernel.org,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
Subject: [PATCH] x86/mm: drop unused argument sync_global_pgds()
Date: Mon, 12 Dec 2016 16:57:31 +0300
Message-Id: &lt;20161212135731.196255-1-kirill.shutemov@linux.intel.com&gt;
X-Mailer: git-send-email 2.10.2
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=40781">Kirill A. Shutemov</a> - Dec. 12, 2016, 1:57 p.m.</div>
<pre class="content">
There&#39;s no users that wants sync_global_pgd(.remove=1) sinc af2cf278ef4f
(&quot;x86/mm/hotplug: Don&#39;t remove PGD entries in remove_pagetable()&quot;).

Let&#39;s drop &#39;remove&#39;.
<span class="signed-off-by">
Signed-off-by: Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt;</span>
---
 arch/x86/include/asm/pgtable_64.h |  3 +--
 arch/x86/mm/fault.c               |  2 +-
 arch/x86/mm/init_64.c             | 25 ++++++-------------------
 3 files changed, 8 insertions(+), 22 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=107">Thomas Gleixner</a> - Dec. 14, 2016, 10:07 p.m.</div>
<pre class="content">
On Mon, 12 Dec 2016, Kirill A. Shutemov wrote:
<span class="quote">
&gt; There&#39;s no users that wants sync_global_pgd(.remove=1) sinc af2cf278ef4f</span>
<span class="quote">&gt; (&quot;x86/mm/hotplug: Don&#39;t remove PGD entries in remove_pagetable()&quot;).</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Let&#39;s drop &#39;remove&#39;.</span>

The argument is named &#39;removed&#39; ....
<span class="quote">
&gt;  /*</span>
<span class="quote">&gt; - * When memory was added/removed make sure all the processes MM have</span>
<span class="quote">&gt; + * When memory was added make sure all the processes MM have</span>
<span class="quote">&gt;   * suitable PGD entries in the local PGD level page.</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; -void sync_global_pgds(unsigned long start, unsigned long end, int removed)</span>
<span class="quote">&gt; +void sync_global_pgds(unsigned long start, unsigned long end)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	unsigned long address;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; @@ -100,14 +100,6 @@ void sync_global_pgds(unsigned long start, unsigned long end, int removed)</span>
<span class="quote">&gt;  		const pgd_t *pgd_ref = pgd_offset_k(address);</span>
<span class="quote">&gt;  		struct page *page;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -		/*</span>
<span class="quote">&gt; -		 * When it is called after memory hot remove, pgd_none()</span>
<span class="quote">&gt; -		 * returns true. In this case (removed == 1), we must clear</span>
<span class="quote">&gt; -		 * the PGD entries in the local PGD level page.</span>
<span class="quote">&gt; -		 */</span>
<span class="quote">&gt; -		if (pgd_none(*pgd_ref) &amp;&amp; !removed)</span>
<span class="quote">&gt; -			continue;</span>
<span class="quote">&gt; -</span>

Errm. This continues, when pgd_none(*pgd_ref) is true AND removed is false,
i.e. that is NOT the removed == true case which you are aiming to drop.
<span class="quote">
&gt; +                        if (pgd_none(*pgd))</span>
<span class="quote">&gt; +                            set_pgd(pgd, *pgd_ref);</span>

This is whitespace damaged in several ways.

Thanks,

	tglx
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/pgtable_64.h b/arch/x86/include/asm/pgtable_64.h</span>
<span class="p_header">index 1cc82ece9ac1..62b775926045 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/pgtable_64.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/pgtable_64.h</span>
<span class="p_chunk">@@ -116,8 +116,7 @@</span> <span class="p_context"> static inline void native_pgd_clear(pgd_t *pgd)</span>
 	native_set_pgd(pgd, native_make_pgd(0));
 }
 
<span class="p_del">-extern void sync_global_pgds(unsigned long start, unsigned long end,</span>
<span class="p_del">-			     int removed);</span>
<span class="p_add">+extern void sync_global_pgds(unsigned long start, unsigned long end);</span>
 
 /*
  * Conversion functions: convert a page and protection to a page entry,
<span class="p_header">diff --git a/arch/x86/mm/fault.c b/arch/x86/mm/fault.c</span>
<span class="p_header">index dc8023060456..7e316a0e7fc9 100644</span>
<span class="p_header">--- a/arch/x86/mm/fault.c</span>
<span class="p_header">+++ b/arch/x86/mm/fault.c</span>
<span class="p_chunk">@@ -413,7 +413,7 @@</span> <span class="p_context"> out:</span>
 
 void vmalloc_sync_all(void)
 {
<span class="p_del">-	sync_global_pgds(VMALLOC_START &amp; PGDIR_MASK, VMALLOC_END, 0);</span>
<span class="p_add">+	sync_global_pgds(VMALLOC_START &amp; PGDIR_MASK, VMALLOC_END);</span>
 }
 
 /*
<span class="p_header">diff --git a/arch/x86/mm/init_64.c b/arch/x86/mm/init_64.c</span>
<span class="p_header">index 14b9dd71d9e8..164a478fd349 100644</span>
<span class="p_header">--- a/arch/x86/mm/init_64.c</span>
<span class="p_header">+++ b/arch/x86/mm/init_64.c</span>
<span class="p_chunk">@@ -89,10 +89,10 @@</span> <span class="p_context"> static int __init nonx32_setup(char *str)</span>
 __setup(&quot;noexec32=&quot;, nonx32_setup);
 
 /*
<span class="p_del">- * When memory was added/removed make sure all the processes MM have</span>
<span class="p_add">+ * When memory was added make sure all the processes MM have</span>
  * suitable PGD entries in the local PGD level page.
  */
<span class="p_del">-void sync_global_pgds(unsigned long start, unsigned long end, int removed)</span>
<span class="p_add">+void sync_global_pgds(unsigned long start, unsigned long end)</span>
 {
 	unsigned long address;
 
<span class="p_chunk">@@ -100,14 +100,6 @@</span> <span class="p_context"> void sync_global_pgds(unsigned long start, unsigned long end, int removed)</span>
 		const pgd_t *pgd_ref = pgd_offset_k(address);
 		struct page *page;
 
<span class="p_del">-		/*</span>
<span class="p_del">-		 * When it is called after memory hot remove, pgd_none()</span>
<span class="p_del">-		 * returns true. In this case (removed == 1), we must clear</span>
<span class="p_del">-		 * the PGD entries in the local PGD level page.</span>
<span class="p_del">-		 */</span>
<span class="p_del">-		if (pgd_none(*pgd_ref) &amp;&amp; !removed)</span>
<span class="p_del">-			continue;</span>
<span class="p_del">-</span>
 		spin_lock(&amp;pgd_lock);
 		list_for_each_entry(page, &amp;pgd_list, lru) {
 			pgd_t *pgd;
<span class="p_chunk">@@ -122,13 +114,8 @@</span> <span class="p_context"> void sync_global_pgds(unsigned long start, unsigned long end, int removed)</span>
 				BUG_ON(pgd_page_vaddr(*pgd)
 				       != pgd_page_vaddr(*pgd_ref));
 
<span class="p_del">-			if (removed) {</span>
<span class="p_del">-				if (pgd_none(*pgd_ref) &amp;&amp; !pgd_none(*pgd))</span>
<span class="p_del">-					pgd_clear(pgd);</span>
<span class="p_del">-			} else {</span>
<span class="p_del">-				if (pgd_none(*pgd))</span>
<span class="p_del">-					set_pgd(pgd, *pgd_ref);</span>
<span class="p_del">-			}</span>
<span class="p_add">+                        if (pgd_none(*pgd))</span>
<span class="p_add">+                            set_pgd(pgd, *pgd_ref);</span>
 
 			spin_unlock(pgt_lock);
 		}
<span class="p_chunk">@@ -596,7 +583,7 @@</span> <span class="p_context"> kernel_physical_mapping_init(unsigned long paddr_start,</span>
 	}
 
 	if (pgd_changed)
<span class="p_del">-		sync_global_pgds(vaddr_start, vaddr_end - 1, 0);</span>
<span class="p_add">+		sync_global_pgds(vaddr_start, vaddr_end - 1);</span>
 
 	__flush_tlb_all();
 
<span class="p_chunk">@@ -1239,7 +1226,7 @@</span> <span class="p_context"> int __meminit vmemmap_populate(unsigned long start, unsigned long end, int node)</span>
 	} else
 		err = vmemmap_populate_basepages(start, end, node);
 	if (!err)
<span class="p_del">-		sync_global_pgds(start, end - 1, 0);</span>
<span class="p_add">+		sync_global_pgds(start, end - 1);</span>
 	return err;
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



