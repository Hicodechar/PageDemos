
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[02/10] arch/x86/platform/uv: BAU cleanup: update printks - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [02/10] arch/x86/platform/uv: BAU cleanup: update printks</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=148501">Andrew Banman</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 21, 2016, 4:09 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1474474161-265604-3-git-send-email-abanman@sgi.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9343803/mbox/"
   >mbox</a>
|
   <a href="/patch/9343803/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9343803/">/patch/9343803/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	75B77607D4 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 21 Sep 2016 16:10:09 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 564682A7F0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 21 Sep 2016 16:10:09 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 496192A7F6; Wed, 21 Sep 2016 16:10:09 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 327192A7F0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 21 Sep 2016 16:10:08 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S934235AbcIUQJs (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 21 Sep 2016 12:09:48 -0400
Received: from relay3.sgi.com ([192.48.152.1]:48634 &quot;EHLO relay.sgi.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1756569AbcIUQJp (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 21 Sep 2016 12:09:45 -0400
Received: from stormcage.americas.sgi.com (stormcage.americas.sgi.com
	[128.162.236.70])
	by relay3.corp.sgi.com (Postfix) with ESMTP id 58C14AC005;
	Wed, 21 Sep 2016 09:09:44 -0700 (PDT)
Received: by stormcage.americas.sgi.com (Postfix, from userid 200151)
	id 2E8BE2056DAD0; Wed, 21 Sep 2016 11:09:44 -0500 (CDT)
From: Andrew Banman &lt;abanman@sgi.com&gt;
To: mingo@redhat.com
Cc: akpm@linux-foundation.org, tglx@linutronix.de, hpa@zytor.com,
	travis@sgi.com, rja@sgi.com, sivanich@sgi.com, x86@kernel.org,
	linux-kernel@vger.kernel.org, abanman@sgi.com
Subject: [PATCH 02/10] arch/x86/platform/uv: BAU cleanup: update printks
Date: Wed, 21 Sep 2016 11:09:13 -0500
Message-Id: &lt;1474474161-265604-3-git-send-email-abanman@sgi.com&gt;
X-Mailer: git-send-email 1.8.5.6
In-Reply-To: &lt;1474474161-265604-1-git-send-email-abanman@sgi.com&gt;
References: &lt;1474410720-82890-1-git-send-email-abanman@sgi.com&gt;
	&lt;1474474161-265604-1-git-send-email-abanman@sgi.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=148501">Andrew Banman</a> - Sept. 21, 2016, 4:09 p.m.</div>
<pre class="content">
Replace all uses of printk with the appropriate pr_* function.
<span class="signed-off-by">
Signed-off-by: Andrew Banman &lt;abanman@sgi.com&gt;</span>
<span class="acked-by">Acked-by: Mike Travis &lt;travis@sgi.com&gt;</span>
<span class="acked-by">Acked-by: Dimitri Sivanich &lt;sivanich@sgi.com&gt;</span>
<span class="acked-by">Acked-by: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>
---
 arch/x86/platform/uv/tlb_uv.c | 26 +++++++++++++-------------
 1 file changed, 13 insertions(+), 13 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">index b84c2a2..8462fd1 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_chunk">@@ -1497,16 +1497,16 @@</span> <span class="p_context"> static ssize_t ptc_proc_write(struct file *file, const char __user *user,</span>
 	}
 
 	if (kstrtol(optstr, 10, &amp;input_arg) &lt; 0) {
<span class="p_del">-		printk(KERN_DEBUG &quot;%s is invalid\n&quot;, optstr);</span>
<span class="p_add">+		pr_debug(&quot;%s is invalid\n&quot;, optstr);</span>
 		return -EINVAL;
 	}
 
 	if (input_arg == 0) {
 		elements = ARRAY_SIZE(stat_description);
<span class="p_del">-		printk(KERN_DEBUG &quot;# cpu:      cpu number\n&quot;);</span>
<span class="p_del">-		printk(KERN_DEBUG &quot;Sender statistics:\n&quot;);</span>
<span class="p_add">+		pr_debug(&quot;# cpu:      cpu number\n&quot;);</span>
<span class="p_add">+		pr_debug(&quot;Sender statistics:\n&quot;);</span>
 		for (i = 0; i &lt; elements; i++)
<span class="p_del">-			printk(KERN_DEBUG &quot;%s\n&quot;, stat_description[i]);</span>
<span class="p_add">+			pr_debug(&quot;%s\n&quot;, stat_description[i]);</span>
 	} else if (input_arg == -1) {
 		for_each_present_cpu(cpu) {
 			stat = &amp;per_cpu(ptcstats, cpu);
<span class="p_chunk">@@ -1554,7 +1554,7 @@</span> <span class="p_context"> static int parse_tunables_write(struct bau_control *bcp, char *instr,</span>
 			break;
 	}
 	if (cnt != e) {
<span class="p_del">-		printk(KERN_INFO &quot;bau tunable error: should be %d values\n&quot;, e);</span>
<span class="p_add">+		pr_info(&quot;bau tunable error: should be %d values\n&quot;, e);</span>
 		return -EINVAL;
 	}
 
<span class="p_chunk">@@ -1571,7 +1571,7 @@</span> <span class="p_context"> static int parse_tunables_write(struct bau_control *bcp, char *instr,</span>
 				continue;
 			}
 			if (val &lt; 1 || val &gt; bcp-&gt;cpus_in_uvhub) {
<span class="p_del">-				printk(KERN_DEBUG</span>
<span class="p_add">+				pr_debug(</span>
 				&quot;Error: BAU max concurrent %d is invalid\n&quot;,
 				val);
 				return -EINVAL;
<span class="p_chunk">@@ -1676,21 +1676,21 @@</span> <span class="p_context"> static int __init uv_ptc_init(void)</span>
 	proc_uv_ptc = proc_create(UV_PTC_BASENAME, 0444, NULL,
 				  &amp;proc_uv_ptc_operations);
 	if (!proc_uv_ptc) {
<span class="p_del">-		printk(KERN_ERR &quot;unable to create %s proc entry\n&quot;,</span>
<span class="p_add">+		pr_err(&quot;unable to create %s proc entry\n&quot;,</span>
 		       UV_PTC_BASENAME);
 		return -EINVAL;
 	}
 
 	tunables_dir = debugfs_create_dir(UV_BAU_TUNABLES_DIR, NULL);
 	if (!tunables_dir) {
<span class="p_del">-		printk(KERN_ERR &quot;unable to create debugfs directory %s\n&quot;,</span>
<span class="p_add">+		pr_err(&quot;unable to create debugfs directory %s\n&quot;,</span>
 		       UV_BAU_TUNABLES_DIR);
 		return -EINVAL;
 	}
 	tunables_file = debugfs_create_file(UV_BAU_TUNABLES_FILE, 0600,
 					tunables_dir, NULL, &amp;tunables_fops);
 	if (!tunables_file) {
<span class="p_del">-		printk(KERN_ERR &quot;unable to create debugfs file %s\n&quot;,</span>
<span class="p_add">+		pr_err(&quot;unable to create debugfs file %s\n&quot;,</span>
 		       UV_BAU_TUNABLES_FILE);
 		return -EINVAL;
 	}
<span class="p_chunk">@@ -1944,7 +1944,7 @@</span> <span class="p_context"> static int __init get_cpu_topology(int base_pnode,</span>
 
 		pnode = uv_cpu_hub_info(cpu)-&gt;pnode;
 		if ((pnode - base_pnode) &gt;= UV_DISTRIBUTION_SIZE) {
<span class="p_del">-			printk(KERN_EMERG</span>
<span class="p_add">+			pr_emerg(</span>
 				&quot;cpu %d pnode %d-%d beyond %d; BAU disabled\n&quot;,
 				cpu, pnode, base_pnode, UV_DISTRIBUTION_SIZE);
 			return 1;
<span class="p_chunk">@@ -1969,7 +1969,7 @@</span> <span class="p_context"> static int __init get_cpu_topology(int base_pnode,</span>
 		sdp-&gt;cpu_number[sdp-&gt;num_cpus] = cpu;
 		sdp-&gt;num_cpus++;
 		if (sdp-&gt;num_cpus &gt; MAX_CPUS_PER_SOCKET) {
<span class="p_del">-			printk(KERN_EMERG &quot;%d cpus per socket invalid\n&quot;,</span>
<span class="p_add">+			pr_emerg(&quot;%d cpus per socket invalid\n&quot;,</span>
 				sdp-&gt;num_cpus);
 			return 1;
 		}
<span class="p_chunk">@@ -2036,14 +2036,14 @@</span> <span class="p_context"> static int scan_sock(struct socket_desc *sdp, struct uvhub_desc *bdp,</span>
 		else if (is_uv3_hub())
 			bcp-&gt;uvhub_version = 3;
 		else {
<span class="p_del">-			printk(KERN_EMERG &quot;uvhub version not 1, 2 or 3\n&quot;);</span>
<span class="p_add">+			pr_emerg(&quot;uvhub version not 1, 2, or 3\n&quot;);</span>
 			return 1;
 		}
 		bcp-&gt;uvhub_master = *hmasterp;
 		bcp-&gt;uvhub_cpu = uv_cpu_blade_processor_id(cpu);
 
 		if (bcp-&gt;uvhub_cpu &gt;= MAX_CPUS_PER_UVHUB) {
<span class="p_del">-			printk(KERN_EMERG &quot;%d cpus per uvhub invalid\n&quot;,</span>
<span class="p_add">+			pr_emerg(&quot;%d cpus per uvhub invalid\n&quot;,</span>
 				bcp-&gt;uvhub_cpu);
 			return 1;
 		}

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



