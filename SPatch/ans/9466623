
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,PATCHv1,03/28] arch, mm: convert all architectures to use 5level-fixup.h - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,PATCHv1,03/28] arch, mm: convert all architectures to use 5level-fixup.h</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=40781">Kirill A. Shutemov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 8, 2016, 4:21 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161208162150.148763-5-kirill.shutemov@linux.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9466623/mbox/"
   >mbox</a>
|
   <a href="/patch/9466623/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9466623/">/patch/9466623/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	7F8A560459 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  8 Dec 2016 16:22:35 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6D6F0285BF
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  8 Dec 2016 16:22:35 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 6083C285CB; Thu,  8 Dec 2016 16:22:35 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 2108C285BF
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  8 Dec 2016 16:22:34 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754042AbcLHQWW (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 8 Dec 2016 11:22:22 -0500
Received: from mga02.intel.com ([134.134.136.20]:47622 &quot;EHLO mga02.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753370AbcLHQWU (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 8 Dec 2016 11:22:20 -0500
Received: from orsmga002.jf.intel.com ([10.7.209.21])
	by orsmga101.jf.intel.com with ESMTP; 08 Dec 2016 08:22:18 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.33,320,1477983600&quot;; d=&quot;scan&#39;208&quot;;a=&quot;15484947&quot;
Received: from black.fi.intel.com ([10.237.72.28])
	by orsmga002.jf.intel.com with ESMTP; 08 Dec 2016 08:22:14 -0800
Received: by black.fi.intel.com (Postfix, from userid 1000)
	id 2C4FA184; Thu,  8 Dec 2016 18:22:14 +0200 (EET)
From: &quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
To: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;, x86@kernel.org,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;,
	Ingo Molnar &lt;mingo@redhat.com&gt;, Arnd Bergmann &lt;arnd@arndb.de&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;
Cc: Andi Kleen &lt;ak@linux.intel.com&gt;, Dave Hansen &lt;dave.hansen@intel.com&gt;,
	Andy Lutomirski &lt;luto@amacapital.net&gt;,
	linux-arch@vger.kernel.org, linux-mm@kvack.org,
	linux-kernel@vger.kernel.org,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
Subject: [RFC, PATCHv1 03/28] arch,
	mm: convert all architectures to use 5level-fixup.h
Date: Thu,  8 Dec 2016 19:21:25 +0300
Message-Id: &lt;20161208162150.148763-5-kirill.shutemov@linux.intel.com&gt;
X-Mailer: git-send-email 2.10.2
In-Reply-To: &lt;20161208162150.148763-1-kirill.shutemov@linux.intel.com&gt;
References: &lt;20161208162150.148763-1-kirill.shutemov@linux.intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=40781">Kirill A. Shutemov</a> - Dec. 8, 2016, 4:21 p.m.</div>
<pre class="content">
If the architecture uses 4level-fixup.h we don&#39;t need to do anything as
it includes 5level-fixup.h.

If the architecture uses pgtable-nop*d.h, define __ARCH_USE_5LEVEL_HACK
before inclusion of the header. It makes asm-generic code to use
5level-fixup.h.

If the architecture has 4-level paging or folds levels on its own,
include 5level-fixup.h directly.
<span class="signed-off-by">
Signed-off-by: Kirill A. Shutemov &lt;kirill.shutemov@linux.intel.com&gt;</span>
---
 arch/arc/include/asm/hugepage.h                  | 1 +
 arch/arc/include/asm/pgtable.h                   | 1 +
 arch/arm/include/asm/pgtable.h                   | 1 +
 arch/arm64/include/asm/pgtable-types.h           | 4 ++++
 arch/avr32/include/asm/pgtable-2level.h          | 1 +
 arch/cris/include/asm/pgtable.h                  | 1 +
 arch/frv/include/asm/pgtable.h                   | 1 +
 arch/h8300/include/asm/pgtable.h                 | 1 +
 arch/hexagon/include/asm/pgtable.h               | 1 +
 arch/ia64/include/asm/pgtable.h                  | 2 ++
 arch/metag/include/asm/pgtable.h                 | 1 +
 arch/mips/include/asm/pgtable-32.h               | 1 +
 arch/mips/include/asm/pgtable-64.h               | 1 +
 arch/mn10300/include/asm/page.h                  | 1 +
 arch/nios2/include/asm/pgtable.h                 | 1 +
 arch/openrisc/include/asm/pgtable.h              | 1 +
 arch/powerpc/include/asm/book3s/32/pgtable.h     | 1 +
 arch/powerpc/include/asm/book3s/64/pgtable.h     | 2 ++
 arch/powerpc/include/asm/nohash/32/pgtable.h     | 1 +
 arch/powerpc/include/asm/nohash/64/pgtable-4k.h  | 3 +++
 arch/powerpc/include/asm/nohash/64/pgtable-64k.h | 1 +
 arch/s390/include/asm/pgtable.h                  | 1 +
 arch/score/include/asm/pgtable.h                 | 1 +
 arch/sh/include/asm/pgtable-2level.h             | 1 +
 arch/sh/include/asm/pgtable-3level.h             | 1 +
 arch/sparc/include/asm/pgtable_64.h              | 1 +
 arch/tile/include/asm/pgtable_32.h               | 1 +
 arch/tile/include/asm/pgtable_64.h               | 1 +
 arch/um/include/asm/pgtable-2level.h             | 1 +
 arch/um/include/asm/pgtable-3level.h             | 1 +
 arch/unicore32/include/asm/pgtable.h             | 1 +
 arch/x86/include/asm/pgtable_types.h             | 4 ++++
 arch/xtensa/include/asm/pgtable.h                | 1 +
 33 files changed, 43 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arc/include/asm/hugepage.h b/arch/arc/include/asm/hugepage.h</span>
<span class="p_header">index 317ff773e1ca..b18fcb606908 100644</span>
<span class="p_header">--- a/arch/arc/include/asm/hugepage.h</span>
<span class="p_header">+++ b/arch/arc/include/asm/hugepage.h</span>
<span class="p_chunk">@@ -11,6 +11,7 @@</span> <span class="p_context"></span>
 #define _ASM_ARC_HUGEPAGE_H
 
 #include &lt;linux/types.h&gt;
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 
 static inline pte_t pmd_pte(pmd_t pmd)
<span class="p_header">diff --git a/arch/arc/include/asm/pgtable.h b/arch/arc/include/asm/pgtable.h</span>
<span class="p_header">index 89eeb3720051..233a92795c37 100644</span>
<span class="p_header">--- a/arch/arc/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/arc/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -37,6 +37,7 @@</span> <span class="p_context"></span>
 
 #include &lt;asm/page.h&gt;
 #include &lt;asm/mmu.h&gt;
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 #include &lt;linux/const.h&gt;
 
<span class="p_header">diff --git a/arch/arm/include/asm/pgtable.h b/arch/arm/include/asm/pgtable.h</span>
<span class="p_header">index a8d656d9aec7..1c462381c225 100644</span>
<span class="p_header">--- a/arch/arm/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/arm/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -20,6 +20,7 @@</span> <span class="p_context"></span>
 
 #else
 
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopud.h&gt;
 #include &lt;asm/memory.h&gt;
 #include &lt;asm/pgtable-hwdef.h&gt;
<span class="p_header">diff --git a/arch/arm64/include/asm/pgtable-types.h b/arch/arm64/include/asm/pgtable-types.h</span>
<span class="p_header">index 69b2fd41503c..345a072b5856 100644</span>
<span class="p_header">--- a/arch/arm64/include/asm/pgtable-types.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/pgtable-types.h</span>
<span class="p_chunk">@@ -55,9 +55,13 @@</span> <span class="p_context"> typedef struct { pteval_t pgprot; } pgprot_t;</span>
 #define __pgprot(x)	((pgprot_t) { (x) } )
 
 #if CONFIG_PGTABLE_LEVELS == 2
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 #elif CONFIG_PGTABLE_LEVELS == 3
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopud.h&gt;
<span class="p_add">+#elif CONFIG_PGTABLE_LEVELS == 4</span>
<span class="p_add">+#include &lt;asm-generic/5level-fixup.h&gt;</span>
 #endif
 
 #endif	/* __ASM_PGTABLE_TYPES_H */
<span class="p_header">diff --git a/arch/avr32/include/asm/pgtable-2level.h b/arch/avr32/include/asm/pgtable-2level.h</span>
<span class="p_header">index 425dd567b5b9..d5b1c63993ec 100644</span>
<span class="p_header">--- a/arch/avr32/include/asm/pgtable-2level.h</span>
<span class="p_header">+++ b/arch/avr32/include/asm/pgtable-2level.h</span>
<span class="p_chunk">@@ -8,6 +8,7 @@</span> <span class="p_context"></span>
 #ifndef __ASM_AVR32_PGTABLE_2LEVEL_H
 #define __ASM_AVR32_PGTABLE_2LEVEL_H
 
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 
 /*
<span class="p_header">diff --git a/arch/cris/include/asm/pgtable.h b/arch/cris/include/asm/pgtable.h</span>
<span class="p_header">index ceefc314d64d..5dcdb7d014e5 100644</span>
<span class="p_header">--- a/arch/cris/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/cris/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -6,6 +6,7 @@</span> <span class="p_context"></span>
 #define _CRIS_PGTABLE_H
 
 #include &lt;asm/page.h&gt;
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 
 #ifndef __ASSEMBLY__
<span class="p_header">diff --git a/arch/frv/include/asm/pgtable.h b/arch/frv/include/asm/pgtable.h</span>
<span class="p_header">index 07d7a7ef8bd5..847bcb14bf66 100644</span>
<span class="p_header">--- a/arch/frv/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/frv/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -16,6 +16,7 @@</span> <span class="p_context"></span>
 #ifndef _ASM_PGTABLE_H
 #define _ASM_PGTABLE_H
 
<span class="p_add">+#include &lt;asm-generic/5level-fixup.h&gt;</span>
 #include &lt;asm/mem-layout.h&gt;
 #include &lt;asm/setup.h&gt;
 #include &lt;asm/processor.h&gt;
<span class="p_header">diff --git a/arch/h8300/include/asm/pgtable.h b/arch/h8300/include/asm/pgtable.h</span>
<span class="p_header">index 8341db67821d..7d265d28ba5e 100644</span>
<span class="p_header">--- a/arch/h8300/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/h8300/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -1,5 +1,6 @@</span> <span class="p_context"></span>
 #ifndef _H8300_PGTABLE_H
 #define _H8300_PGTABLE_H
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopud.h&gt;
 #include &lt;asm-generic/pgtable.h&gt;
 #define pgtable_cache_init()   do { } while (0)
<span class="p_header">diff --git a/arch/hexagon/include/asm/pgtable.h b/arch/hexagon/include/asm/pgtable.h</span>
<span class="p_header">index 49eab8136ec3..24a9177fb897 100644</span>
<span class="p_header">--- a/arch/hexagon/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/hexagon/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -26,6 +26,7 @@</span> <span class="p_context"></span>
  */
 #include &lt;linux/swap.h&gt;
 #include &lt;asm/page.h&gt;
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 
 /* A handy thing to have if one has the RAM. Declared in head.S */
<span class="p_header">diff --git a/arch/ia64/include/asm/pgtable.h b/arch/ia64/include/asm/pgtable.h</span>
<span class="p_header">index 9f3ed9ee8f13..53d97cd5fab9 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -587,8 +587,10 @@</span> <span class="p_context"> extern struct page *zero_page_memmap_ptr;</span>
 
 
 #if CONFIG_PGTABLE_LEVELS == 3
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopud.h&gt;
 #endif
<span class="p_add">+#include &lt;asm-genenic/5level-fixup.h&gt;</span>
 #include &lt;asm-generic/pgtable.h&gt;
 
 #endif /* _ASM_IA64_PGTABLE_H */
<span class="p_header">diff --git a/arch/metag/include/asm/pgtable.h b/arch/metag/include/asm/pgtable.h</span>
<span class="p_header">index ffa3a3a2ecad..0c151e5af079 100644</span>
<span class="p_header">--- a/arch/metag/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/metag/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -6,6 +6,7 @@</span> <span class="p_context"></span>
 #define _METAG_PGTABLE_H
 
 #include &lt;asm/pgtable-bits.h&gt;
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 
 /* Invalid regions on Meta: 0x00000000-0x001FFFFF and 0xFFFF0000-0xFFFFFFFF */
<span class="p_header">diff --git a/arch/mips/include/asm/pgtable-32.h b/arch/mips/include/asm/pgtable-32.h</span>
<span class="p_header">index d21f3da7bdb6..6f94bed571c4 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/pgtable-32.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/pgtable-32.h</span>
<span class="p_chunk">@@ -16,6 +16,7 @@</span> <span class="p_context"></span>
 #include &lt;asm/cachectl.h&gt;
 #include &lt;asm/fixmap.h&gt;
 
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 
 extern int temp_tlb_entry;
<span class="p_header">diff --git a/arch/mips/include/asm/pgtable-64.h b/arch/mips/include/asm/pgtable-64.h</span>
<span class="p_header">index 514cbc0a6a67..130a2a6c1531 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/pgtable-64.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/pgtable-64.h</span>
<span class="p_chunk">@@ -17,6 +17,7 @@</span> <span class="p_context"></span>
 #include &lt;asm/cachectl.h&gt;
 #include &lt;asm/fixmap.h&gt;
 
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #if defined(CONFIG_PAGE_SIZE_64KB) &amp;&amp; !defined(CONFIG_MIPS_VA_BITS_48)
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 #else
<span class="p_header">diff --git a/arch/mn10300/include/asm/page.h b/arch/mn10300/include/asm/page.h</span>
<span class="p_header">index 3810a6f740fd..dfe730a5ede0 100644</span>
<span class="p_header">--- a/arch/mn10300/include/asm/page.h</span>
<span class="p_header">+++ b/arch/mn10300/include/asm/page.h</span>
<span class="p_chunk">@@ -57,6 +57,7 @@</span> <span class="p_context"> typedef struct page *pgtable_t;</span>
 #define __pgd(x)	((pgd_t) { (x) })
 #define __pgprot(x)	((pgprot_t) { (x) })
 
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 
 #endif /* !__ASSEMBLY__ */
<span class="p_header">diff --git a/arch/nios2/include/asm/pgtable.h b/arch/nios2/include/asm/pgtable.h</span>
<span class="p_header">index 298393c3cb42..db4f7d179220 100644</span>
<span class="p_header">--- a/arch/nios2/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/nios2/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -22,6 +22,7 @@</span> <span class="p_context"></span>
 #include &lt;asm/tlbflush.h&gt;
 
 #include &lt;asm/pgtable-bits.h&gt;
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 
 #define FIRST_USER_ADDRESS	0UL
<span class="p_header">diff --git a/arch/openrisc/include/asm/pgtable.h b/arch/openrisc/include/asm/pgtable.h</span>
<span class="p_header">index 69c7df0e1420..2c98e6dabcfe 100644</span>
<span class="p_header">--- a/arch/openrisc/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/openrisc/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -25,6 +25,7 @@</span> <span class="p_context"></span>
 #ifndef __ASM_OPENRISC_PGTABLE_H
 #define __ASM_OPENRISC_PGTABLE_H
 
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 
 #ifndef __ASSEMBLY__
<span class="p_header">diff --git a/arch/powerpc/include/asm/book3s/32/pgtable.h b/arch/powerpc/include/asm/book3s/32/pgtable.h</span>
<span class="p_header">index 38b33dcfcc9d..ac53e7182387 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/book3s/32/pgtable.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/book3s/32/pgtable.h</span>
<span class="p_chunk">@@ -1,6 +1,7 @@</span> <span class="p_context"></span>
 #ifndef _ASM_POWERPC_BOOK3S_32_PGTABLE_H
 #define _ASM_POWERPC_BOOK3S_32_PGTABLE_H
 
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 
 #include &lt;asm/book3s/32/hash.h&gt;
<span class="p_header">diff --git a/arch/powerpc/include/asm/book3s/64/pgtable.h b/arch/powerpc/include/asm/book3s/64/pgtable.h</span>
<span class="p_header">index 263bf39ced40..e0be442aaacb 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/book3s/64/pgtable.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/book3s/64/pgtable.h</span>
<span class="p_chunk">@@ -1,6 +1,8 @@</span> <span class="p_context"></span>
 #ifndef _ASM_POWERPC_BOOK3S_64_PGTABLE_H_
 #define _ASM_POWERPC_BOOK3S_64_PGTABLE_H_
 
<span class="p_add">+#include &lt;asm-generic/5level-fixup.h&gt;</span>
<span class="p_add">+</span>
 /*
  * Common bits between hash and Radix page table
  */
<span class="p_header">diff --git a/arch/powerpc/include/asm/nohash/32/pgtable.h b/arch/powerpc/include/asm/nohash/32/pgtable.h</span>
<span class="p_header">index 780847597514..c4a3bd9e5c7f 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/nohash/32/pgtable.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/nohash/32/pgtable.h</span>
<span class="p_chunk">@@ -1,6 +1,7 @@</span> <span class="p_context"></span>
 #ifndef _ASM_POWERPC_NOHASH_32_PGTABLE_H
 #define _ASM_POWERPC_NOHASH_32_PGTABLE_H
 
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 
 #ifndef __ASSEMBLY__
<span class="p_header">diff --git a/arch/powerpc/include/asm/nohash/64/pgtable-4k.h b/arch/powerpc/include/asm/nohash/64/pgtable-4k.h</span>
<span class="p_header">index fc7d51753f81..2ab403514c07 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/nohash/64/pgtable-4k.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/nohash/64/pgtable-4k.h</span>
<span class="p_chunk">@@ -1,5 +1,8 @@</span> <span class="p_context"></span>
 #ifndef _ASM_POWERPC_NOHASH_64_PGTABLE_4K_H
 #define _ASM_POWERPC_NOHASH_64_PGTABLE_4K_H
<span class="p_add">+</span>
<span class="p_add">+#include &lt;asm-generic/5level-fixup.h&gt;</span>
<span class="p_add">+</span>
 /*
  * Entries per page directory level.  The PTE level must use a 64b record
  * for each page table entry.  The PMD and PGD level use a 32b record for
<span class="p_header">diff --git a/arch/powerpc/include/asm/nohash/64/pgtable-64k.h b/arch/powerpc/include/asm/nohash/64/pgtable-64k.h</span>
<span class="p_header">index 908324574f77..f18752da5965 100644</span>
<span class="p_header">--- a/arch/powerpc/include/asm/nohash/64/pgtable-64k.h</span>
<span class="p_header">+++ b/arch/powerpc/include/asm/nohash/64/pgtable-64k.h</span>
<span class="p_chunk">@@ -1,6 +1,7 @@</span> <span class="p_context"></span>
 #ifndef _ASM_POWERPC_NOHASH_64_PGTABLE_64K_H
 #define _ASM_POWERPC_NOHASH_64_PGTABLE_64K_H
 
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopud.h&gt;
 
 
<span class="p_header">diff --git a/arch/s390/include/asm/pgtable.h b/arch/s390/include/asm/pgtable.h</span>
<span class="p_header">index 72c7f60bfe83..738a49934fc0 100644</span>
<span class="p_header">--- a/arch/s390/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/s390/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -24,6 +24,7 @@</span> <span class="p_context"></span>
  * the S390 page table tree.
  */
 #ifndef __ASSEMBLY__
<span class="p_add">+#include &lt;asm-generic/5level-fixup.h&gt;</span>
 #include &lt;linux/sched.h&gt;
 #include &lt;linux/mm_types.h&gt;
 #include &lt;linux/page-flags.h&gt;
<span class="p_header">diff --git a/arch/score/include/asm/pgtable.h b/arch/score/include/asm/pgtable.h</span>
<span class="p_header">index 0553e5cd5985..46ff8fd678a7 100644</span>
<span class="p_header">--- a/arch/score/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/score/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -2,6 +2,7 @@</span> <span class="p_context"></span>
 #define _ASM_SCORE_PGTABLE_H
 
 #include &lt;linux/const.h&gt;
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 
 #include &lt;asm/fixmap.h&gt;
<span class="p_header">diff --git a/arch/sh/include/asm/pgtable-2level.h b/arch/sh/include/asm/pgtable-2level.h</span>
<span class="p_header">index 19bd89db17e7..f75cf4387257 100644</span>
<span class="p_header">--- a/arch/sh/include/asm/pgtable-2level.h</span>
<span class="p_header">+++ b/arch/sh/include/asm/pgtable-2level.h</span>
<span class="p_chunk">@@ -1,6 +1,7 @@</span> <span class="p_context"></span>
 #ifndef __ASM_SH_PGTABLE_2LEVEL_H
 #define __ASM_SH_PGTABLE_2LEVEL_H
 
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 
 /*
<span class="p_header">diff --git a/arch/sh/include/asm/pgtable-3level.h b/arch/sh/include/asm/pgtable-3level.h</span>
<span class="p_header">index 249a985d9648..9b1e776eca31 100644</span>
<span class="p_header">--- a/arch/sh/include/asm/pgtable-3level.h</span>
<span class="p_header">+++ b/arch/sh/include/asm/pgtable-3level.h</span>
<span class="p_chunk">@@ -1,6 +1,7 @@</span> <span class="p_context"></span>
 #ifndef __ASM_SH_PGTABLE_3LEVEL_H
 #define __ASM_SH_PGTABLE_3LEVEL_H
 
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopud.h&gt;
 
 /*
<span class="p_header">diff --git a/arch/sparc/include/asm/pgtable_64.h b/arch/sparc/include/asm/pgtable_64.h</span>
<span class="p_header">index 1fb317fbc0b3..4a0ae4b542fd 100644</span>
<span class="p_header">--- a/arch/sparc/include/asm/pgtable_64.h</span>
<span class="p_header">+++ b/arch/sparc/include/asm/pgtable_64.h</span>
<span class="p_chunk">@@ -12,6 +12,7 @@</span> <span class="p_context"></span>
  * the SpitFire page tables.
  */
 
<span class="p_add">+#include &lt;asm-generic/5level-fixup.h&gt;</span>
 #include &lt;linux/compiler.h&gt;
 #include &lt;linux/const.h&gt;
 #include &lt;asm/types.h&gt;
<span class="p_header">diff --git a/arch/tile/include/asm/pgtable_32.h b/arch/tile/include/asm/pgtable_32.h</span>
<span class="p_header">index d26a42279036..5f8c615cb5e9 100644</span>
<span class="p_header">--- a/arch/tile/include/asm/pgtable_32.h</span>
<span class="p_header">+++ b/arch/tile/include/asm/pgtable_32.h</span>
<span class="p_chunk">@@ -74,6 +74,7 @@</span> <span class="p_context"> extern unsigned long VMALLOC_RESERVE /* = CONFIG_VMALLOC_RESERVE */;</span>
 #define MAXMEM		(_VMALLOC_START - PAGE_OFFSET)
 
 /* We have no pmd or pud since we are strictly a two-level page table */
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 
 static inline int pud_huge_page(pud_t pud)	{ return 0; }
<span class="p_header">diff --git a/arch/tile/include/asm/pgtable_64.h b/arch/tile/include/asm/pgtable_64.h</span>
<span class="p_header">index e96cec52f6d8..96fe58b45118 100644</span>
<span class="p_header">--- a/arch/tile/include/asm/pgtable_64.h</span>
<span class="p_header">+++ b/arch/tile/include/asm/pgtable_64.h</span>
<span class="p_chunk">@@ -59,6 +59,7 @@</span> <span class="p_context"></span>
 #ifndef __ASSEMBLY__
 
 /* We have no pud since we are a three-level page table. */
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopud.h&gt;
 
 /*
<span class="p_header">diff --git a/arch/um/include/asm/pgtable-2level.h b/arch/um/include/asm/pgtable-2level.h</span>
<span class="p_header">index cfbe59752469..179c0ea87a0c 100644</span>
<span class="p_header">--- a/arch/um/include/asm/pgtable-2level.h</span>
<span class="p_header">+++ b/arch/um/include/asm/pgtable-2level.h</span>
<span class="p_chunk">@@ -8,6 +8,7 @@</span> <span class="p_context"></span>
 #ifndef __UM_PGTABLE_2LEVEL_H
 #define __UM_PGTABLE_2LEVEL_H
 
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 
 /* PGDIR_SHIFT determines what a third-level page table entry can map */
<span class="p_header">diff --git a/arch/um/include/asm/pgtable-3level.h b/arch/um/include/asm/pgtable-3level.h</span>
<span class="p_header">index bae8523a162f..c4d876dfb9ac 100644</span>
<span class="p_header">--- a/arch/um/include/asm/pgtable-3level.h</span>
<span class="p_header">+++ b/arch/um/include/asm/pgtable-3level.h</span>
<span class="p_chunk">@@ -7,6 +7,7 @@</span> <span class="p_context"></span>
 #ifndef __UM_PGTABLE_3LEVEL_H
 #define __UM_PGTABLE_3LEVEL_H
 
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopud.h&gt;
 
 /* PGDIR_SHIFT determines what a third-level page table entry can map */
<span class="p_header">diff --git a/arch/unicore32/include/asm/pgtable.h b/arch/unicore32/include/asm/pgtable.h</span>
<span class="p_header">index 818d0f5598e3..a4f2bef37e70 100644</span>
<span class="p_header">--- a/arch/unicore32/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/unicore32/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -12,6 +12,7 @@</span> <span class="p_context"></span>
 #ifndef __UNICORE_PGTABLE_H__
 #define __UNICORE_PGTABLE_H__
 
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 #include &lt;asm/cpu-single.h&gt;
 
<span class="p_header">diff --git a/arch/x86/include/asm/pgtable_types.h b/arch/x86/include/asm/pgtable_types.h</span>
<span class="p_header">index f1218f512f62..3187bec1b79a 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/pgtable_types.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/pgtable_types.h</span>
<span class="p_chunk">@@ -273,6 +273,8 @@</span> <span class="p_context"> static inline pgdval_t pgd_flags(pgd_t pgd)</span>
 }
 
 #if CONFIG_PGTABLE_LEVELS &gt; 3
<span class="p_add">+#include &lt;asm-generic/5level-fixup.h&gt;</span>
<span class="p_add">+</span>
 typedef struct { pudval_t pud; } pud_t;
 
 static inline pud_t native_make_pud(pmdval_t val)
<span class="p_chunk">@@ -285,6 +287,7 @@</span> <span class="p_context"> static inline pudval_t native_pud_val(pud_t pud)</span>
 	return pud.pud;
 }
 #else
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopud.h&gt;
 
 static inline pudval_t native_pud_val(pud_t pud)
<span class="p_chunk">@@ -306,6 +309,7 @@</span> <span class="p_context"> static inline pmdval_t native_pmd_val(pmd_t pmd)</span>
 	return pmd.pmd;
 }
 #else
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 
 static inline pmdval_t native_pmd_val(pmd_t pmd)
<span class="p_header">diff --git a/arch/xtensa/include/asm/pgtable.h b/arch/xtensa/include/asm/pgtable.h</span>
<span class="p_header">index fb02fdc5ecee..91c530761f1e 100644</span>
<span class="p_header">--- a/arch/xtensa/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/xtensa/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -11,6 +11,7 @@</span> <span class="p_context"></span>
 #ifndef _XTENSA_PGTABLE_H
 #define _XTENSA_PGTABLE_H
 
<span class="p_add">+#define __ARCH_USE_5LEVEL_HACK</span>
 #include &lt;asm-generic/pgtable-nopmd.h&gt;
 #include &lt;asm/page.h&gt;
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



