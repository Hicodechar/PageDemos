
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4/4] powerpc/mm/radix: Implement tlb mmu gather flush efficiently - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4/4] powerpc/mm/radix: Implement tlb mmu gather flush efficiently</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=41">Andrew Morton</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 2, 2016, 8:12 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20160602131250.e4d43401e7eade277bc4476a@linux-foundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9151143/mbox/"
   >mbox</a>
|
   <a href="/patch/9151143/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9151143/">/patch/9151143/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	E2A5360467 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  2 Jun 2016 20:12:57 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B944E2656B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  2 Jun 2016 20:12:57 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id AE3C628328; Thu,  2 Jun 2016 20:12:57 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5B7742656B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  2 Jun 2016 20:12:57 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1030216AbcFBUMx (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 2 Jun 2016 16:12:53 -0400
Received: from mail.linuxfoundation.org ([140.211.169.12]:50720 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751336AbcFBUMv (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 2 Jun 2016 16:12:51 -0400
Received: from akpm3.mtv.corp.google.com (unknown [104.132.1.65])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id E0E528F5;
	Thu,  2 Jun 2016 20:12:50 +0000 (UTC)
Date: Thu, 2 Jun 2016 13:12:50 -0700
From: Andrew Morton &lt;akpm@linux-foundation.org&gt;
To: &quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;
Cc: mpe@ellerman.id.au, linux-mm@kvack.org, linux-kernel@vger.kernel.org,
	Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;
Subject: Re: [PATCH 4/4] powerpc/mm/radix: Implement tlb mmu gather flush
	efficiently
Message-Id: &lt;20160602131250.e4d43401e7eade277bc4476a@linux-foundation.org&gt;
In-Reply-To: &lt;1464860389-29019-4-git-send-email-aneesh.kumar@linux.vnet.ibm.com&gt;
References: &lt;1464860389-29019-1-git-send-email-aneesh.kumar@linux.vnet.ibm.com&gt;
	&lt;1464860389-29019-4-git-send-email-aneesh.kumar@linux.vnet.ibm.com&gt;
X-Mailer: Sylpheed 3.4.1 (GTK+ 2.24.23; x86_64-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41">Andrew Morton</a> - June 2, 2016, 8:12 p.m.</div>
<pre class="content">
On Thu,  2 Jun 2016 15:09:49 +0530 &quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt; wrote:
<span class="quote">
&gt; Now that we track page size in mmu_gather, we can use address based</span>
<span class="quote">&gt; tlbie format when doing a tlb_flush(). We don&#39;t do this if we are</span>
<span class="quote">&gt; invalidating the full address space.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; ...</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;  void radix__tlb_flush(struct mmu_gather *tlb)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; +	int psize = 0;</span>
<span class="quote">&gt;  	struct mm_struct *mm = tlb-&gt;mm;</span>
<span class="quote">&gt; -	radix__flush_tlb_mm(mm);</span>
<span class="quote">&gt; +	int page_size = tlb-&gt;page_size;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	psize = radix_get_mmu_psize(page_size);</span>
<span class="quote">&gt; +	if (psize == -1)</span>
<span class="quote">&gt; +		/* unknown page size */</span>
<span class="quote">&gt; +		goto flush_mm;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +	if (!tlb-&gt;fullmm &amp;&amp; !tlb-&gt;need_flush_all)</span>
<span class="quote">&gt; +		radix__flush_tlb_range_psize(mm, tlb-&gt;start, tlb-&gt;end, psize);</span>
<span class="quote">&gt; +	else</span>
<span class="quote">&gt; +flush_mm:</span>
<span class="quote">&gt; +		radix__flush_tlb_mm(mm);</span>

That&#39;s kinda ugly.  What about

void radix__tlb_flush(struct mmu_gather *tlb)
{
	int psize = 0;
	struct mm_struct *mm = tlb-&gt;mm;
	int page_size = tlb-&gt;page_size;

	psize = radix_get_mmu_psize(page_size);

	if (psize != -1 &amp;&amp; !tlb-&gt;fullmm &amp;&amp; !tlb-&gt;need_flush_all)
		radix__flush_tlb_range_psize(mm, tlb-&gt;start, tlb-&gt;end, psize);
	else
		radix__flush_tlb_mm(mm);
}

?

We lost the comment, but that can be neatly addressed by documenting
radix_get_mmu_psize() (of course!).  Please send along a comment to do
this and I&#39;ll add it in.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1141">Aneesh Kumar K.V</a> - June 3, 2016, 2:56 a.m.</div>
<pre class="content">
Andrew Morton &lt;akpm@linux-foundation.org&gt; writes:
<span class="quote">
&gt; On Thu,  2 Jun 2016 15:09:49 +0530 &quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt; wrote:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; Now that we track page size in mmu_gather, we can use address based</span>
<span class="quote">&gt;&gt; tlbie format when doing a tlb_flush(). We don&#39;t do this if we are</span>
<span class="quote">&gt;&gt; invalidating the full address space.</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; ...</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;  void radix__tlb_flush(struct mmu_gather *tlb)</span>
<span class="quote">&gt;&gt;  {</span>
<span class="quote">&gt;&gt; +	int psize = 0;</span>
<span class="quote">&gt;&gt;  	struct mm_struct *mm = tlb-&gt;mm;</span>
<span class="quote">&gt;&gt; -	radix__flush_tlb_mm(mm);</span>
<span class="quote">&gt;&gt; +	int page_size = tlb-&gt;page_size;</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +	psize = radix_get_mmu_psize(page_size);</span>
<span class="quote">&gt;&gt; +	if (psize == -1)</span>
<span class="quote">&gt;&gt; +		/* unknown page size */</span>
<span class="quote">&gt;&gt; +		goto flush_mm;</span>
<span class="quote">&gt;&gt; +</span>
<span class="quote">&gt;&gt; +	if (!tlb-&gt;fullmm &amp;&amp; !tlb-&gt;need_flush_all)</span>
<span class="quote">&gt;&gt; +		radix__flush_tlb_range_psize(mm, tlb-&gt;start, tlb-&gt;end, psize);</span>
<span class="quote">&gt;&gt; +	else</span>
<span class="quote">&gt;&gt; +flush_mm:</span>
<span class="quote">&gt;&gt; +		radix__flush_tlb_mm(mm);</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; That&#39;s kinda ugly.  What about</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; void radix__tlb_flush(struct mmu_gather *tlb)</span>
<span class="quote">&gt; {</span>
<span class="quote">&gt; 	int psize = 0;</span>
<span class="quote">&gt; 	struct mm_struct *mm = tlb-&gt;mm;</span>
<span class="quote">&gt; 	int page_size = tlb-&gt;page_size;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; 	psize = radix_get_mmu_psize(page_size);</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; 	if (psize != -1 &amp;&amp; !tlb-&gt;fullmm &amp;&amp; !tlb-&gt;need_flush_all)</span>
<span class="quote">&gt; 		radix__flush_tlb_range_psize(mm, tlb-&gt;start, tlb-&gt;end, psize);</span>
<span class="quote">&gt; 	else</span>
<span class="quote">&gt; 		radix__flush_tlb_mm(mm);</span>
<span class="quote">&gt; }</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; ?</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; We lost the comment, but that can be neatly addressed by documenting</span>
<span class="quote">&gt; radix_get_mmu_psize() (of course!).  Please send along a comment to do</span>
<span class="quote">&gt; this and I&#39;ll add it in.</span>


I will update the patch. But this patch (Patch 4) need to go through
powerpc tree because radix__flush_tlb_range_psize is not yet upstream.
As I mentioned in the previous thread, if you can take patch 1 to patch 3 that
will enable wider testing w.r.t other archs and ppc64 related changes can
go later via powerpc tree ?
<span class="quote">
&gt;</span>
<span class="quote">&gt; --- a/arch/powerpc/mm/tlb-radix.c~powerpc-mm-radix-implement-tlb-mmu-gather-flush-efficiently-fix</span>
<span class="quote">&gt; +++ a/arch/powerpc/mm/tlb-radix.c</span>
<span class="quote">&gt; @@ -265,13 +265,9 @@ void radix__tlb_flush(struct mmu_gather</span>
<span class="quote">&gt;  	int page_size = tlb-&gt;page_size;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;  	psize = radix_get_mmu_psize(page_size);</span>
<span class="quote">&gt; -	if (psize == -1)</span>
<span class="quote">&gt; -		/* unknown page size */</span>
<span class="quote">&gt; -		goto flush_mm;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; -	if (!tlb-&gt;fullmm &amp;&amp; !tlb-&gt;need_flush_all)</span>
<span class="quote">&gt; +	if (psize != -1 &amp;&amp; !tlb-&gt;fullmm &amp;&amp; !tlb-&gt;need_flush_all)</span>
<span class="quote">&gt;  		radix__flush_tlb_range_psize(mm, tlb-&gt;start, tlb-&gt;end, psize);</span>
<span class="quote">&gt;  	else</span>
<span class="quote">&gt; -flush_mm:</span>
<span class="quote">&gt;  		radix__flush_tlb_mm(mm);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; _</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; I&#39;ll await feedback from the other PPC developers before doing anything</span>
<span class="quote">&gt; further on this patchset.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; hm, no ppc mailing lists were cc&#39;ed.  Regrettable.</span>

I missed that. I can resend the series again adding ppc-devel to cc: ?

-aneesh
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/powerpc/mm/tlb-radix.c~powerpc-mm-radix-implement-tlb-mmu-gather-flush-efficiently-fix</span>
<span class="p_header">+++ a/arch/powerpc/mm/tlb-radix.c</span>
<span class="p_chunk">@@ -265,13 +265,9 @@</span> <span class="p_context"> void radix__tlb_flush(struct mmu_gather</span>
 	int page_size = tlb-&gt;page_size;
 
 	psize = radix_get_mmu_psize(page_size);
<span class="p_del">-	if (psize == -1)</span>
<span class="p_del">-		/* unknown page size */</span>
<span class="p_del">-		goto flush_mm;</span>
 
<span class="p_del">-	if (!tlb-&gt;fullmm &amp;&amp; !tlb-&gt;need_flush_all)</span>
<span class="p_add">+	if (psize != -1 &amp;&amp; !tlb-&gt;fullmm &amp;&amp; !tlb-&gt;need_flush_all)</span>
 		radix__flush_tlb_range_psize(mm, tlb-&gt;start, tlb-&gt;end, psize);
 	else
<span class="p_del">-flush_mm:</span>
 		radix__flush_tlb_mm(mm);
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



