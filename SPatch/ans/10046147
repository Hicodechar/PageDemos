
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[tip:x86/asm] x86/cpufeatures: Re-tabulate the X86_FEATURE definitions - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [tip:x86/asm] x86/cpufeatures: Re-tabulate the X86_FEATURE definitions</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 7, 2017, 10:04 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;tip-acbc845ffefd9fb70466182cd8555a26189462b2@git.kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10046147/mbox/"
   >mbox</a>
|
   <a href="/patch/10046147/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10046147/">/patch/10046147/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	1B9EA60360 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  7 Nov 2017 10:12:06 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 19B9429CA4
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  7 Nov 2017 10:12:06 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 0C6E129DC4; Tue,  7 Nov 2017 10:12:06 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4F36429CA4
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  7 Nov 2017 10:12:03 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S964842AbdKGKL4 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 7 Nov 2017 05:11:56 -0500
Received: from terminus.zytor.com ([65.50.211.136]:54215 &quot;EHLO
	terminus.zytor.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1756167AbdKGKLw (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 7 Nov 2017 05:11:52 -0500
Received: from terminus.zytor.com (localhost [127.0.0.1])
	by terminus.zytor.com (8.15.2/8.15.2) with ESMTP id vA7A4taV031701;
	Tue, 7 Nov 2017 02:04:55 -0800
Received: (from tipbot@localhost)
	by terminus.zytor.com (8.15.2/8.15.2/Submit) id vA7A4tCG031696;
	Tue, 7 Nov 2017 02:04:55 -0800
Date: Tue, 7 Nov 2017 02:04:55 -0800
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to
	tipbot@zytor.com using -f
From: tip-bot for Ingo Molnar &lt;tipbot@zytor.com&gt;
Message-ID: &lt;tip-acbc845ffefd9fb70466182cd8555a26189462b2@git.kernel.org&gt;
Cc: torvalds@linux-foundation.org, tglx@linutronix.de,
	peterz@infradead.org, luto@kernel.org, brgerst@gmail.com,
	linux-kernel@vger.kernel.org, hpa@zytor.com,
	akpm@linux-foundation.org, jpoimboe@redhat.com,
	luto@amacapital.net, dvlasenk@redhat.com, mingo@kernel.org, bp@alien8.de
Reply-To: mingo@kernel.org, jpoimboe@redhat.com, dvlasenk@redhat.com,
	luto@amacapital.net, bp@alien8.de, brgerst@gmail.com,
	peterz@infradead.org, luto@kernel.org,
	torvalds@linux-foundation.org, tglx@linutronix.de, hpa@zytor.com,
	akpm@linux-foundation.org, linux-kernel@vger.kernel.org
In-Reply-To: &lt;20171031121723.28524-3-mingo@kernel.org&gt;
References: &lt;20171031121723.28524-3-mingo@kernel.org&gt;
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/asm] x86/cpufeatures: Re-tabulate the X86_FEATURE
	definitions
Git-Commit-ID: acbc845ffefd9fb70466182cd8555a26189462b2
X-Mailer: tip-git-log-daemon
Robot-ID: &lt;tip-bot.git.kernel.org&gt;
Robot-Unsubscribe: Contact &lt;mailto:hpa@kernel.org&gt; to get blacklisted from
	these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a> - Nov. 7, 2017, 10:04 a.m.</div>
<pre class="content">
Commit-ID:  acbc845ffefd9fb70466182cd8555a26189462b2
Gitweb:     https://git.kernel.org/tip/acbc845ffefd9fb70466182cd8555a26189462b2
Author:     Ingo Molnar &lt;mingo@kernel.org&gt;
AuthorDate: Tue, 31 Oct 2017 13:17:22 +0100
Committer:  Ingo Molnar &lt;mingo@kernel.org&gt;
CommitDate: Tue, 7 Nov 2017 10:57:47 +0100

x86/cpufeatures: Re-tabulate the X86_FEATURE definitions

Over the years asm/cpufeatures.h has become somewhat of a mess: the original
tabulation style was too narrow, while x86 feature names also kept growing
in length, creating frequent field width overflows.

Re-tabulate it to make it wider and easier to read/modify. Also harmonize
the tabulation of the other defines in this file to match it.

Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Andy Lutomirski &lt;luto@amacapital.net&gt;
Cc: Andy Lutomirski &lt;luto@kernel.org&gt;
Cc: Borislav Petkov &lt;bp@alien8.de&gt;
Cc: Brian Gerst &lt;brgerst@gmail.com&gt;
Cc: Denys Vlasenko &lt;dvlasenk@redhat.com&gt;
Cc: Josh Poimboeuf &lt;jpoimboe@redhat.com&gt;
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Link: http://lkml.kernel.org/r/20171031121723.28524-3-mingo@kernel.org
<span class="signed-off-by">Signed-off-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
---
 arch/x86/include/asm/cpufeatures.h | 508 ++++++++++++++++++-------------------
 1 file changed, 254 insertions(+), 254 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/cpufeatures.h b/arch/x86/include/asm/cpufeatures.h</span>
<span class="p_header">index 7437073..ad1b835 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/cpufeatures.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/cpufeatures.h</span>
<span class="p_chunk">@@ -13,8 +13,8 @@</span> <span class="p_context"></span>
 /*
  * Defines x86 CPU feature bits
  */
<span class="p_del">-#define NCAPINTS	18	/* N 32-bit words worth of info */</span>
<span class="p_del">-#define NBUGINTS	1	/* N 32-bit bug flags */</span>
<span class="p_add">+#define NCAPINTS			18	   /* N 32-bit words worth of info */</span>
<span class="p_add">+#define NBUGINTS			1	   /* N 32-bit bug flags */</span>
 
 /*
  * Note: If the comment begins with a quoted string, that string is used
<span class="p_chunk">@@ -28,163 +28,163 @@</span> <span class="p_context"></span>
  */
 
 /* Intel-defined CPU features, CPUID level 0x00000001 (edx), word 0 */
<span class="p_del">-#define X86_FEATURE_FPU		( 0*32+ 0) /* Onboard FPU */</span>
<span class="p_del">-#define X86_FEATURE_VME		( 0*32+ 1) /* Virtual Mode Extensions */</span>
<span class="p_del">-#define X86_FEATURE_DE		( 0*32+ 2) /* Debugging Extensions */</span>
<span class="p_del">-#define X86_FEATURE_PSE		( 0*32+ 3) /* Page Size Extensions */</span>
<span class="p_del">-#define X86_FEATURE_TSC		( 0*32+ 4) /* Time Stamp Counter */</span>
<span class="p_del">-#define X86_FEATURE_MSR		( 0*32+ 5) /* Model-Specific Registers */</span>
<span class="p_del">-#define X86_FEATURE_PAE		( 0*32+ 6) /* Physical Address Extensions */</span>
<span class="p_del">-#define X86_FEATURE_MCE		( 0*32+ 7) /* Machine Check Exception */</span>
<span class="p_del">-#define X86_FEATURE_CX8		( 0*32+ 8) /* CMPXCHG8 instruction */</span>
<span class="p_del">-#define X86_FEATURE_APIC	( 0*32+ 9) /* Onboard APIC */</span>
<span class="p_del">-#define X86_FEATURE_SEP		( 0*32+11) /* SYSENTER/SYSEXIT */</span>
<span class="p_del">-#define X86_FEATURE_MTRR	( 0*32+12) /* Memory Type Range Registers */</span>
<span class="p_del">-#define X86_FEATURE_PGE		( 0*32+13) /* Page Global Enable */</span>
<span class="p_del">-#define X86_FEATURE_MCA		( 0*32+14) /* Machine Check Architecture */</span>
<span class="p_del">-#define X86_FEATURE_CMOV	( 0*32+15) /* CMOV instructions */</span>
<span class="p_add">+#define X86_FEATURE_FPU			( 0*32+ 0) /* Onboard FPU */</span>
<span class="p_add">+#define X86_FEATURE_VME			( 0*32+ 1) /* Virtual Mode Extensions */</span>
<span class="p_add">+#define X86_FEATURE_DE			( 0*32+ 2) /* Debugging Extensions */</span>
<span class="p_add">+#define X86_FEATURE_PSE			( 0*32+ 3) /* Page Size Extensions */</span>
<span class="p_add">+#define X86_FEATURE_TSC			( 0*32+ 4) /* Time Stamp Counter */</span>
<span class="p_add">+#define X86_FEATURE_MSR			( 0*32+ 5) /* Model-Specific Registers */</span>
<span class="p_add">+#define X86_FEATURE_PAE			( 0*32+ 6) /* Physical Address Extensions */</span>
<span class="p_add">+#define X86_FEATURE_MCE			( 0*32+ 7) /* Machine Check Exception */</span>
<span class="p_add">+#define X86_FEATURE_CX8			( 0*32+ 8) /* CMPXCHG8 instruction */</span>
<span class="p_add">+#define X86_FEATURE_APIC		( 0*32+ 9) /* Onboard APIC */</span>
<span class="p_add">+#define X86_FEATURE_SEP			( 0*32+11) /* SYSENTER/SYSEXIT */</span>
<span class="p_add">+#define X86_FEATURE_MTRR		( 0*32+12) /* Memory Type Range Registers */</span>
<span class="p_add">+#define X86_FEATURE_PGE			( 0*32+13) /* Page Global Enable */</span>
<span class="p_add">+#define X86_FEATURE_MCA			( 0*32+14) /* Machine Check Architecture */</span>
<span class="p_add">+#define X86_FEATURE_CMOV		( 0*32+15) /* CMOV instructions */</span>
 					  /* (plus FCMOVcc, FCOMI with FPU) */
<span class="p_del">-#define X86_FEATURE_PAT		( 0*32+16) /* Page Attribute Table */</span>
<span class="p_del">-#define X86_FEATURE_PSE36	( 0*32+17) /* 36-bit PSEs */</span>
<span class="p_del">-#define X86_FEATURE_PN		( 0*32+18) /* Processor serial number */</span>
<span class="p_del">-#define X86_FEATURE_CLFLUSH	( 0*32+19) /* CLFLUSH instruction */</span>
<span class="p_del">-#define X86_FEATURE_DS		( 0*32+21) /* &quot;dts&quot; Debug Store */</span>
<span class="p_del">-#define X86_FEATURE_ACPI	( 0*32+22) /* ACPI via MSR */</span>
<span class="p_del">-#define X86_FEATURE_MMX		( 0*32+23) /* Multimedia Extensions */</span>
<span class="p_del">-#define X86_FEATURE_FXSR	( 0*32+24) /* FXSAVE/FXRSTOR, CR4.OSFXSR */</span>
<span class="p_del">-#define X86_FEATURE_XMM		( 0*32+25) /* &quot;sse&quot; */</span>
<span class="p_del">-#define X86_FEATURE_XMM2	( 0*32+26) /* &quot;sse2&quot; */</span>
<span class="p_del">-#define X86_FEATURE_SELFSNOOP	( 0*32+27) /* &quot;ss&quot; CPU self snoop */</span>
<span class="p_del">-#define X86_FEATURE_HT		( 0*32+28) /* Hyper-Threading */</span>
<span class="p_del">-#define X86_FEATURE_ACC		( 0*32+29) /* &quot;tm&quot; Automatic clock control */</span>
<span class="p_del">-#define X86_FEATURE_IA64	( 0*32+30) /* IA-64 processor */</span>
<span class="p_del">-#define X86_FEATURE_PBE		( 0*32+31) /* Pending Break Enable */</span>
<span class="p_add">+#define X86_FEATURE_PAT			( 0*32+16) /* Page Attribute Table */</span>
<span class="p_add">+#define X86_FEATURE_PSE36		( 0*32+17) /* 36-bit PSEs */</span>
<span class="p_add">+#define X86_FEATURE_PN			( 0*32+18) /* Processor serial number */</span>
<span class="p_add">+#define X86_FEATURE_CLFLUSH		( 0*32+19) /* CLFLUSH instruction */</span>
<span class="p_add">+#define X86_FEATURE_DS			( 0*32+21) /* &quot;dts&quot; Debug Store */</span>
<span class="p_add">+#define X86_FEATURE_ACPI		( 0*32+22) /* ACPI via MSR */</span>
<span class="p_add">+#define X86_FEATURE_MMX			( 0*32+23) /* Multimedia Extensions */</span>
<span class="p_add">+#define X86_FEATURE_FXSR		( 0*32+24) /* FXSAVE/FXRSTOR, CR4.OSFXSR */</span>
<span class="p_add">+#define X86_FEATURE_XMM			( 0*32+25) /* &quot;sse&quot; */</span>
<span class="p_add">+#define X86_FEATURE_XMM2		( 0*32+26) /* &quot;sse2&quot; */</span>
<span class="p_add">+#define X86_FEATURE_SELFSNOOP		( 0*32+27) /* &quot;ss&quot; CPU self snoop */</span>
<span class="p_add">+#define X86_FEATURE_HT			( 0*32+28) /* Hyper-Threading */</span>
<span class="p_add">+#define X86_FEATURE_ACC			( 0*32+29) /* &quot;tm&quot; Automatic clock control */</span>
<span class="p_add">+#define X86_FEATURE_IA64		( 0*32+30) /* IA-64 processor */</span>
<span class="p_add">+#define X86_FEATURE_PBE			( 0*32+31) /* Pending Break Enable */</span>
 
 /* AMD-defined CPU features, CPUID level 0x80000001, word 1 */
 /* Don&#39;t duplicate feature flags which are redundant with Intel! */
<span class="p_del">-#define X86_FEATURE_SYSCALL	( 1*32+11) /* SYSCALL/SYSRET */</span>
<span class="p_del">-#define X86_FEATURE_MP		( 1*32+19) /* MP Capable. */</span>
<span class="p_del">-#define X86_FEATURE_NX		( 1*32+20) /* Execute Disable */</span>
<span class="p_del">-#define X86_FEATURE_MMXEXT	( 1*32+22) /* AMD MMX extensions */</span>
<span class="p_del">-#define X86_FEATURE_FXSR_OPT	( 1*32+25) /* FXSAVE/FXRSTOR optimizations */</span>
<span class="p_del">-#define X86_FEATURE_GBPAGES	( 1*32+26) /* &quot;pdpe1gb&quot; GB pages */</span>
<span class="p_del">-#define X86_FEATURE_RDTSCP	( 1*32+27) /* RDTSCP */</span>
<span class="p_del">-#define X86_FEATURE_LM		( 1*32+29) /* Long Mode (x86-64) */</span>
<span class="p_del">-#define X86_FEATURE_3DNOWEXT	( 1*32+30) /* AMD 3DNow! extensions */</span>
<span class="p_del">-#define X86_FEATURE_3DNOW	( 1*32+31) /* 3DNow! */</span>
<span class="p_add">+#define X86_FEATURE_SYSCALL		( 1*32+11) /* SYSCALL/SYSRET */</span>
<span class="p_add">+#define X86_FEATURE_MP			( 1*32+19) /* MP Capable. */</span>
<span class="p_add">+#define X86_FEATURE_NX			( 1*32+20) /* Execute Disable */</span>
<span class="p_add">+#define X86_FEATURE_MMXEXT		( 1*32+22) /* AMD MMX extensions */</span>
<span class="p_add">+#define X86_FEATURE_FXSR_OPT		( 1*32+25) /* FXSAVE/FXRSTOR optimizations */</span>
<span class="p_add">+#define X86_FEATURE_GBPAGES		( 1*32+26) /* &quot;pdpe1gb&quot; GB pages */</span>
<span class="p_add">+#define X86_FEATURE_RDTSCP		( 1*32+27) /* RDTSCP */</span>
<span class="p_add">+#define X86_FEATURE_LM			( 1*32+29) /* Long Mode (x86-64) */</span>
<span class="p_add">+#define X86_FEATURE_3DNOWEXT		( 1*32+30) /* AMD 3DNow! extensions */</span>
<span class="p_add">+#define X86_FEATURE_3DNOW		( 1*32+31) /* 3DNow! */</span>
 
 /* Transmeta-defined CPU features, CPUID level 0x80860001, word 2 */
<span class="p_del">-#define X86_FEATURE_RECOVERY	( 2*32+ 0) /* CPU in recovery mode */</span>
<span class="p_del">-#define X86_FEATURE_LONGRUN	( 2*32+ 1) /* Longrun power control */</span>
<span class="p_del">-#define X86_FEATURE_LRTI	( 2*32+ 3) /* LongRun table interface */</span>
<span class="p_add">+#define X86_FEATURE_RECOVERY		( 2*32+ 0) /* CPU in recovery mode */</span>
<span class="p_add">+#define X86_FEATURE_LONGRUN		( 2*32+ 1) /* Longrun power control */</span>
<span class="p_add">+#define X86_FEATURE_LRTI		( 2*32+ 3) /* LongRun table interface */</span>
 
 /* Other features, Linux-defined mapping, word 3 */
 /* This range is used for feature bits which conflict or are synthesized */
<span class="p_del">-#define X86_FEATURE_CXMMX	( 3*32+ 0) /* Cyrix MMX extensions */</span>
<span class="p_del">-#define X86_FEATURE_K6_MTRR	( 3*32+ 1) /* AMD K6 nonstandard MTRRs */</span>
<span class="p_del">-#define X86_FEATURE_CYRIX_ARR	( 3*32+ 2) /* Cyrix ARRs (= MTRRs) */</span>
<span class="p_del">-#define X86_FEATURE_CENTAUR_MCR	( 3*32+ 3) /* Centaur MCRs (= MTRRs) */</span>
<span class="p_add">+#define X86_FEATURE_CXMMX		( 3*32+ 0) /* Cyrix MMX extensions */</span>
<span class="p_add">+#define X86_FEATURE_K6_MTRR		( 3*32+ 1) /* AMD K6 nonstandard MTRRs */</span>
<span class="p_add">+#define X86_FEATURE_CYRIX_ARR		( 3*32+ 2) /* Cyrix ARRs (= MTRRs) */</span>
<span class="p_add">+#define X86_FEATURE_CENTAUR_MCR		( 3*32+ 3) /* Centaur MCRs (= MTRRs) */</span>
 /* cpu types for specific tunings: */
<span class="p_del">-#define X86_FEATURE_K8		( 3*32+ 4) /* &quot;&quot; Opteron, Athlon64 */</span>
<span class="p_del">-#define X86_FEATURE_K7		( 3*32+ 5) /* &quot;&quot; Athlon */</span>
<span class="p_del">-#define X86_FEATURE_P3		( 3*32+ 6) /* &quot;&quot; P3 */</span>
<span class="p_del">-#define X86_FEATURE_P4		( 3*32+ 7) /* &quot;&quot; P4 */</span>
<span class="p_del">-#define X86_FEATURE_CONSTANT_TSC ( 3*32+ 8) /* TSC ticks at a constant rate */</span>
<span class="p_del">-#define X86_FEATURE_UP		( 3*32+ 9) /* smp kernel running on up */</span>
<span class="p_del">-#define X86_FEATURE_ART		( 3*32+10) /* Platform has always running timer (ART) */</span>
<span class="p_del">-#define X86_FEATURE_ARCH_PERFMON ( 3*32+11) /* Intel Architectural PerfMon */</span>
<span class="p_del">-#define X86_FEATURE_PEBS	( 3*32+12) /* Precise-Event Based Sampling */</span>
<span class="p_del">-#define X86_FEATURE_BTS		( 3*32+13) /* Branch Trace Store */</span>
<span class="p_del">-#define X86_FEATURE_SYSCALL32	( 3*32+14) /* &quot;&quot; syscall in ia32 userspace */</span>
<span class="p_del">-#define X86_FEATURE_SYSENTER32	( 3*32+15) /* &quot;&quot; sysenter in ia32 userspace */</span>
<span class="p_del">-#define X86_FEATURE_REP_GOOD	( 3*32+16) /* rep microcode works well */</span>
<span class="p_del">-#define X86_FEATURE_MFENCE_RDTSC ( 3*32+17) /* &quot;&quot; Mfence synchronizes RDTSC */</span>
<span class="p_del">-#define X86_FEATURE_LFENCE_RDTSC ( 3*32+18) /* &quot;&quot; Lfence synchronizes RDTSC */</span>
<span class="p_del">-#define X86_FEATURE_ACC_POWER	( 3*32+19) /* AMD Accumulated Power Mechanism */</span>
<span class="p_del">-#define X86_FEATURE_NOPL	( 3*32+20) /* The NOPL (0F 1F) instructions */</span>
<span class="p_del">-#define X86_FEATURE_ALWAYS	( 3*32+21) /* &quot;&quot; Always-present feature */</span>
<span class="p_del">-#define X86_FEATURE_XTOPOLOGY	( 3*32+22) /* cpu topology enum extensions */</span>
<span class="p_del">-#define X86_FEATURE_TSC_RELIABLE ( 3*32+23) /* TSC is known to be reliable */</span>
<span class="p_del">-#define X86_FEATURE_NONSTOP_TSC	( 3*32+24) /* TSC does not stop in C states */</span>
<span class="p_del">-#define X86_FEATURE_CPUID	( 3*32+25) /* CPU has CPUID instruction itself */</span>
<span class="p_del">-#define X86_FEATURE_EXTD_APICID	( 3*32+26) /* has extended APICID (8 bits) */</span>
<span class="p_del">-#define X86_FEATURE_AMD_DCM     ( 3*32+27) /* multi-node processor */</span>
<span class="p_del">-#define X86_FEATURE_APERFMPERF	( 3*32+28) /* APERFMPERF */</span>
<span class="p_del">-#define X86_FEATURE_NONSTOP_TSC_S3 ( 3*32+30) /* TSC doesn&#39;t stop in S3 state */</span>
<span class="p_del">-#define X86_FEATURE_TSC_KNOWN_FREQ ( 3*32+31) /* TSC has known frequency */</span>
<span class="p_add">+#define X86_FEATURE_K8			( 3*32+ 4) /* &quot;&quot; Opteron, Athlon64 */</span>
<span class="p_add">+#define X86_FEATURE_K7			( 3*32+ 5) /* &quot;&quot; Athlon */</span>
<span class="p_add">+#define X86_FEATURE_P3			( 3*32+ 6) /* &quot;&quot; P3 */</span>
<span class="p_add">+#define X86_FEATURE_P4			( 3*32+ 7) /* &quot;&quot; P4 */</span>
<span class="p_add">+#define X86_FEATURE_CONSTANT_TSC	( 3*32+ 8) /* TSC ticks at a constant rate */</span>
<span class="p_add">+#define X86_FEATURE_UP			( 3*32+ 9) /* smp kernel running on up */</span>
<span class="p_add">+#define X86_FEATURE_ART			( 3*32+10) /* Platform has always running timer (ART) */</span>
<span class="p_add">+#define X86_FEATURE_ARCH_PERFMON	( 3*32+11) /* Intel Architectural PerfMon */</span>
<span class="p_add">+#define X86_FEATURE_PEBS		( 3*32+12) /* Precise-Event Based Sampling */</span>
<span class="p_add">+#define X86_FEATURE_BTS			( 3*32+13) /* Branch Trace Store */</span>
<span class="p_add">+#define X86_FEATURE_SYSCALL32		( 3*32+14) /* &quot;&quot; syscall in ia32 userspace */</span>
<span class="p_add">+#define X86_FEATURE_SYSENTER32		( 3*32+15) /* &quot;&quot; sysenter in ia32 userspace */</span>
<span class="p_add">+#define X86_FEATURE_REP_GOOD		( 3*32+16) /* rep microcode works well */</span>
<span class="p_add">+#define X86_FEATURE_MFENCE_RDTSC	( 3*32+17) /* &quot;&quot; Mfence synchronizes RDTSC */</span>
<span class="p_add">+#define X86_FEATURE_LFENCE_RDTSC	( 3*32+18) /* &quot;&quot; Lfence synchronizes RDTSC */</span>
<span class="p_add">+#define X86_FEATURE_ACC_POWER		( 3*32+19) /* AMD Accumulated Power Mechanism */</span>
<span class="p_add">+#define X86_FEATURE_NOPL		( 3*32+20) /* The NOPL (0F 1F) instructions */</span>
<span class="p_add">+#define X86_FEATURE_ALWAYS		( 3*32+21) /* &quot;&quot; Always-present feature */</span>
<span class="p_add">+#define X86_FEATURE_XTOPOLOGY		( 3*32+22) /* cpu topology enum extensions */</span>
<span class="p_add">+#define X86_FEATURE_TSC_RELIABLE	( 3*32+23) /* TSC is known to be reliable */</span>
<span class="p_add">+#define X86_FEATURE_NONSTOP_TSC		( 3*32+24) /* TSC does not stop in C states */</span>
<span class="p_add">+#define X86_FEATURE_CPUID		( 3*32+25) /* CPU has CPUID instruction itself */</span>
<span class="p_add">+#define X86_FEATURE_EXTD_APICID		( 3*32+26) /* has extended APICID (8 bits) */</span>
<span class="p_add">+#define X86_FEATURE_AMD_DCM		( 3*32+27) /* multi-node processor */</span>
<span class="p_add">+#define X86_FEATURE_APERFMPERF		( 3*32+28) /* APERFMPERF */</span>
<span class="p_add">+#define X86_FEATURE_NONSTOP_TSC_S3	( 3*32+30) /* TSC doesn&#39;t stop in S3 state */</span>
<span class="p_add">+#define X86_FEATURE_TSC_KNOWN_FREQ	( 3*32+31) /* TSC has known frequency */</span>
 
 /* Intel-defined CPU features, CPUID level 0x00000001 (ecx), word 4 */
<span class="p_del">-#define X86_FEATURE_XMM3	( 4*32+ 0) /* &quot;pni&quot; SSE-3 */</span>
<span class="p_del">-#define X86_FEATURE_PCLMULQDQ	( 4*32+ 1) /* PCLMULQDQ instruction */</span>
<span class="p_del">-#define X86_FEATURE_DTES64	( 4*32+ 2) /* 64-bit Debug Store */</span>
<span class="p_del">-#define X86_FEATURE_MWAIT	( 4*32+ 3) /* &quot;monitor&quot; Monitor/Mwait support */</span>
<span class="p_del">-#define X86_FEATURE_DSCPL	( 4*32+ 4) /* &quot;ds_cpl&quot; CPL Qual. Debug Store */</span>
<span class="p_del">-#define X86_FEATURE_VMX		( 4*32+ 5) /* Hardware virtualization */</span>
<span class="p_del">-#define X86_FEATURE_SMX		( 4*32+ 6) /* Safer mode */</span>
<span class="p_del">-#define X86_FEATURE_EST		( 4*32+ 7) /* Enhanced SpeedStep */</span>
<span class="p_del">-#define X86_FEATURE_TM2		( 4*32+ 8) /* Thermal Monitor 2 */</span>
<span class="p_del">-#define X86_FEATURE_SSSE3	( 4*32+ 9) /* Supplemental SSE-3 */</span>
<span class="p_del">-#define X86_FEATURE_CID		( 4*32+10) /* Context ID */</span>
<span class="p_del">-#define X86_FEATURE_SDBG	( 4*32+11) /* Silicon Debug */</span>
<span class="p_del">-#define X86_FEATURE_FMA		( 4*32+12) /* Fused multiply-add */</span>
<span class="p_del">-#define X86_FEATURE_CX16	( 4*32+13) /* CMPXCHG16B */</span>
<span class="p_del">-#define X86_FEATURE_XTPR	( 4*32+14) /* Send Task Priority Messages */</span>
<span class="p_del">-#define X86_FEATURE_PDCM	( 4*32+15) /* Performance Capabilities */</span>
<span class="p_del">-#define X86_FEATURE_PCID	( 4*32+17) /* Process Context Identifiers */</span>
<span class="p_del">-#define X86_FEATURE_DCA		( 4*32+18) /* Direct Cache Access */</span>
<span class="p_del">-#define X86_FEATURE_XMM4_1	( 4*32+19) /* &quot;sse4_1&quot; SSE-4.1 */</span>
<span class="p_del">-#define X86_FEATURE_XMM4_2	( 4*32+20) /* &quot;sse4_2&quot; SSE-4.2 */</span>
<span class="p_del">-#define X86_FEATURE_X2APIC	( 4*32+21) /* x2APIC */</span>
<span class="p_del">-#define X86_FEATURE_MOVBE	( 4*32+22) /* MOVBE instruction */</span>
<span class="p_del">-#define X86_FEATURE_POPCNT      ( 4*32+23) /* POPCNT instruction */</span>
<span class="p_add">+#define X86_FEATURE_XMM3		( 4*32+ 0) /* &quot;pni&quot; SSE-3 */</span>
<span class="p_add">+#define X86_FEATURE_PCLMULQDQ		( 4*32+ 1) /* PCLMULQDQ instruction */</span>
<span class="p_add">+#define X86_FEATURE_DTES64		( 4*32+ 2) /* 64-bit Debug Store */</span>
<span class="p_add">+#define X86_FEATURE_MWAIT		( 4*32+ 3) /* &quot;monitor&quot; Monitor/Mwait support */</span>
<span class="p_add">+#define X86_FEATURE_DSCPL		( 4*32+ 4) /* &quot;ds_cpl&quot; CPL Qual. Debug Store */</span>
<span class="p_add">+#define X86_FEATURE_VMX			( 4*32+ 5) /* Hardware virtualization */</span>
<span class="p_add">+#define X86_FEATURE_SMX			( 4*32+ 6) /* Safer mode */</span>
<span class="p_add">+#define X86_FEATURE_EST			( 4*32+ 7) /* Enhanced SpeedStep */</span>
<span class="p_add">+#define X86_FEATURE_TM2			( 4*32+ 8) /* Thermal Monitor 2 */</span>
<span class="p_add">+#define X86_FEATURE_SSSE3		( 4*32+ 9) /* Supplemental SSE-3 */</span>
<span class="p_add">+#define X86_FEATURE_CID			( 4*32+10) /* Context ID */</span>
<span class="p_add">+#define X86_FEATURE_SDBG		( 4*32+11) /* Silicon Debug */</span>
<span class="p_add">+#define X86_FEATURE_FMA			( 4*32+12) /* Fused multiply-add */</span>
<span class="p_add">+#define X86_FEATURE_CX16		( 4*32+13) /* CMPXCHG16B */</span>
<span class="p_add">+#define X86_FEATURE_XTPR		( 4*32+14) /* Send Task Priority Messages */</span>
<span class="p_add">+#define X86_FEATURE_PDCM		( 4*32+15) /* Performance Capabilities */</span>
<span class="p_add">+#define X86_FEATURE_PCID		( 4*32+17) /* Process Context Identifiers */</span>
<span class="p_add">+#define X86_FEATURE_DCA			( 4*32+18) /* Direct Cache Access */</span>
<span class="p_add">+#define X86_FEATURE_XMM4_1		( 4*32+19) /* &quot;sse4_1&quot; SSE-4.1 */</span>
<span class="p_add">+#define X86_FEATURE_XMM4_2		( 4*32+20) /* &quot;sse4_2&quot; SSE-4.2 */</span>
<span class="p_add">+#define X86_FEATURE_X2APIC		( 4*32+21) /* x2APIC */</span>
<span class="p_add">+#define X86_FEATURE_MOVBE		( 4*32+22) /* MOVBE instruction */</span>
<span class="p_add">+#define X86_FEATURE_POPCNT		( 4*32+23) /* POPCNT instruction */</span>
 #define X86_FEATURE_TSC_DEADLINE_TIMER	( 4*32+24) /* Tsc deadline timer */
<span class="p_del">-#define X86_FEATURE_AES		( 4*32+25) /* AES instructions */</span>
<span class="p_del">-#define X86_FEATURE_XSAVE	( 4*32+26) /* XSAVE/XRSTOR/XSETBV/XGETBV */</span>
<span class="p_del">-#define X86_FEATURE_OSXSAVE	( 4*32+27) /* &quot;&quot; XSAVE enabled in the OS */</span>
<span class="p_del">-#define X86_FEATURE_AVX		( 4*32+28) /* Advanced Vector Extensions */</span>
<span class="p_del">-#define X86_FEATURE_F16C	( 4*32+29) /* 16-bit fp conversions */</span>
<span class="p_del">-#define X86_FEATURE_RDRAND	( 4*32+30) /* The RDRAND instruction */</span>
<span class="p_del">-#define X86_FEATURE_HYPERVISOR	( 4*32+31) /* Running on a hypervisor */</span>
<span class="p_add">+#define X86_FEATURE_AES			( 4*32+25) /* AES instructions */</span>
<span class="p_add">+#define X86_FEATURE_XSAVE		( 4*32+26) /* XSAVE/XRSTOR/XSETBV/XGETBV */</span>
<span class="p_add">+#define X86_FEATURE_OSXSAVE		( 4*32+27) /* &quot;&quot; XSAVE enabled in the OS */</span>
<span class="p_add">+#define X86_FEATURE_AVX			( 4*32+28) /* Advanced Vector Extensions */</span>
<span class="p_add">+#define X86_FEATURE_F16C		( 4*32+29) /* 16-bit fp conversions */</span>
<span class="p_add">+#define X86_FEATURE_RDRAND		( 4*32+30) /* The RDRAND instruction */</span>
<span class="p_add">+#define X86_FEATURE_HYPERVISOR		( 4*32+31) /* Running on a hypervisor */</span>
 
 /* VIA/Cyrix/Centaur-defined CPU features, CPUID level 0xC0000001, word 5 */
<span class="p_del">-#define X86_FEATURE_XSTORE	( 5*32+ 2) /* &quot;rng&quot; RNG present (xstore) */</span>
<span class="p_del">-#define X86_FEATURE_XSTORE_EN	( 5*32+ 3) /* &quot;rng_en&quot; RNG enabled */</span>
<span class="p_del">-#define X86_FEATURE_XCRYPT	( 5*32+ 6) /* &quot;ace&quot; on-CPU crypto (xcrypt) */</span>
<span class="p_del">-#define X86_FEATURE_XCRYPT_EN	( 5*32+ 7) /* &quot;ace_en&quot; on-CPU crypto enabled */</span>
<span class="p_del">-#define X86_FEATURE_ACE2	( 5*32+ 8) /* Advanced Cryptography Engine v2 */</span>
<span class="p_del">-#define X86_FEATURE_ACE2_EN	( 5*32+ 9) /* ACE v2 enabled */</span>
<span class="p_del">-#define X86_FEATURE_PHE		( 5*32+10) /* PadLock Hash Engine */</span>
<span class="p_del">-#define X86_FEATURE_PHE_EN	( 5*32+11) /* PHE enabled */</span>
<span class="p_del">-#define X86_FEATURE_PMM		( 5*32+12) /* PadLock Montgomery Multiplier */</span>
<span class="p_del">-#define X86_FEATURE_PMM_EN	( 5*32+13) /* PMM enabled */</span>
<span class="p_add">+#define X86_FEATURE_XSTORE		( 5*32+ 2) /* &quot;rng&quot; RNG present (xstore) */</span>
<span class="p_add">+#define X86_FEATURE_XSTORE_EN		( 5*32+ 3) /* &quot;rng_en&quot; RNG enabled */</span>
<span class="p_add">+#define X86_FEATURE_XCRYPT		( 5*32+ 6) /* &quot;ace&quot; on-CPU crypto (xcrypt) */</span>
<span class="p_add">+#define X86_FEATURE_XCRYPT_EN		( 5*32+ 7) /* &quot;ace_en&quot; on-CPU crypto enabled */</span>
<span class="p_add">+#define X86_FEATURE_ACE2		( 5*32+ 8) /* Advanced Cryptography Engine v2 */</span>
<span class="p_add">+#define X86_FEATURE_ACE2_EN		( 5*32+ 9) /* ACE v2 enabled */</span>
<span class="p_add">+#define X86_FEATURE_PHE			( 5*32+10) /* PadLock Hash Engine */</span>
<span class="p_add">+#define X86_FEATURE_PHE_EN		( 5*32+11) /* PHE enabled */</span>
<span class="p_add">+#define X86_FEATURE_PMM			( 5*32+12) /* PadLock Montgomery Multiplier */</span>
<span class="p_add">+#define X86_FEATURE_PMM_EN		( 5*32+13) /* PMM enabled */</span>
 
 /* More extended AMD flags: CPUID level 0x80000001, ecx, word 6 */
<span class="p_del">-#define X86_FEATURE_LAHF_LM	( 6*32+ 0) /* LAHF/SAHF in long mode */</span>
<span class="p_del">-#define X86_FEATURE_CMP_LEGACY	( 6*32+ 1) /* If yes HyperThreading not valid */</span>
<span class="p_del">-#define X86_FEATURE_SVM		( 6*32+ 2) /* Secure virtual machine */</span>
<span class="p_del">-#define X86_FEATURE_EXTAPIC	( 6*32+ 3) /* Extended APIC space */</span>
<span class="p_del">-#define X86_FEATURE_CR8_LEGACY	( 6*32+ 4) /* CR8 in 32-bit mode */</span>
<span class="p_del">-#define X86_FEATURE_ABM		( 6*32+ 5) /* Advanced bit manipulation */</span>
<span class="p_del">-#define X86_FEATURE_SSE4A	( 6*32+ 6) /* SSE-4A */</span>
<span class="p_del">-#define X86_FEATURE_MISALIGNSSE ( 6*32+ 7) /* Misaligned SSE mode */</span>
<span class="p_del">-#define X86_FEATURE_3DNOWPREFETCH ( 6*32+ 8) /* 3DNow prefetch instructions */</span>
<span class="p_del">-#define X86_FEATURE_OSVW	( 6*32+ 9) /* OS Visible Workaround */</span>
<span class="p_del">-#define X86_FEATURE_IBS		( 6*32+10) /* Instruction Based Sampling */</span>
<span class="p_del">-#define X86_FEATURE_XOP		( 6*32+11) /* extended AVX instructions */</span>
<span class="p_del">-#define X86_FEATURE_SKINIT	( 6*32+12) /* SKINIT/STGI instructions */</span>
<span class="p_del">-#define X86_FEATURE_WDT		( 6*32+13) /* Watchdog timer */</span>
<span class="p_del">-#define X86_FEATURE_LWP		( 6*32+15) /* Light Weight Profiling */</span>
<span class="p_del">-#define X86_FEATURE_FMA4	( 6*32+16) /* 4 operands MAC instructions */</span>
<span class="p_del">-#define X86_FEATURE_TCE		( 6*32+17) /* translation cache extension */</span>
<span class="p_del">-#define X86_FEATURE_NODEID_MSR	( 6*32+19) /* NodeId MSR */</span>
<span class="p_del">-#define X86_FEATURE_TBM		( 6*32+21) /* trailing bit manipulations */</span>
<span class="p_del">-#define X86_FEATURE_TOPOEXT	( 6*32+22) /* topology extensions CPUID leafs */</span>
<span class="p_del">-#define X86_FEATURE_PERFCTR_CORE ( 6*32+23) /* core performance counter extensions */</span>
<span class="p_del">-#define X86_FEATURE_PERFCTR_NB  ( 6*32+24) /* NB performance counter extensions */</span>
<span class="p_del">-#define X86_FEATURE_BPEXT	(6*32+26) /* data breakpoint extension */</span>
<span class="p_del">-#define X86_FEATURE_PTSC	( 6*32+27) /* performance time-stamp counter */</span>
<span class="p_del">-#define X86_FEATURE_PERFCTR_LLC	( 6*32+28) /* Last Level Cache performance counter extensions */</span>
<span class="p_del">-#define X86_FEATURE_MWAITX	( 6*32+29) /* MWAIT extension (MONITORX/MWAITX) */</span>
<span class="p_add">+#define X86_FEATURE_LAHF_LM		( 6*32+ 0) /* LAHF/SAHF in long mode */</span>
<span class="p_add">+#define X86_FEATURE_CMP_LEGACY		( 6*32+ 1) /* If yes HyperThreading not valid */</span>
<span class="p_add">+#define X86_FEATURE_SVM			( 6*32+ 2) /* Secure virtual machine */</span>
<span class="p_add">+#define X86_FEATURE_EXTAPIC		( 6*32+ 3) /* Extended APIC space */</span>
<span class="p_add">+#define X86_FEATURE_CR8_LEGACY		( 6*32+ 4) /* CR8 in 32-bit mode */</span>
<span class="p_add">+#define X86_FEATURE_ABM			( 6*32+ 5) /* Advanced bit manipulation */</span>
<span class="p_add">+#define X86_FEATURE_SSE4A		( 6*32+ 6) /* SSE-4A */</span>
<span class="p_add">+#define X86_FEATURE_MISALIGNSSE		( 6*32+ 7) /* Misaligned SSE mode */</span>
<span class="p_add">+#define X86_FEATURE_3DNOWPREFETCH	( 6*32+ 8) /* 3DNow prefetch instructions */</span>
<span class="p_add">+#define X86_FEATURE_OSVW		( 6*32+ 9) /* OS Visible Workaround */</span>
<span class="p_add">+#define X86_FEATURE_IBS			( 6*32+10) /* Instruction Based Sampling */</span>
<span class="p_add">+#define X86_FEATURE_XOP			( 6*32+11) /* extended AVX instructions */</span>
<span class="p_add">+#define X86_FEATURE_SKINIT		( 6*32+12) /* SKINIT/STGI instructions */</span>
<span class="p_add">+#define X86_FEATURE_WDT			( 6*32+13) /* Watchdog timer */</span>
<span class="p_add">+#define X86_FEATURE_LWP			( 6*32+15) /* Light Weight Profiling */</span>
<span class="p_add">+#define X86_FEATURE_FMA4		( 6*32+16) /* 4 operands MAC instructions */</span>
<span class="p_add">+#define X86_FEATURE_TCE			( 6*32+17) /* translation cache extension */</span>
<span class="p_add">+#define X86_FEATURE_NODEID_MSR		( 6*32+19) /* NodeId MSR */</span>
<span class="p_add">+#define X86_FEATURE_TBM			( 6*32+21) /* trailing bit manipulations */</span>
<span class="p_add">+#define X86_FEATURE_TOPOEXT		( 6*32+22) /* topology extensions CPUID leafs */</span>
<span class="p_add">+#define X86_FEATURE_PERFCTR_CORE	( 6*32+23) /* core performance counter extensions */</span>
<span class="p_add">+#define X86_FEATURE_PERFCTR_NB		( 6*32+24) /* NB performance counter extensions */</span>
<span class="p_add">+#define X86_FEATURE_BPEXT		(6*32+26) /* data breakpoint extension */</span>
<span class="p_add">+#define X86_FEATURE_PTSC		( 6*32+27) /* performance time-stamp counter */</span>
<span class="p_add">+#define X86_FEATURE_PERFCTR_LLC		( 6*32+28) /* Last Level Cache performance counter extensions */</span>
<span class="p_add">+#define X86_FEATURE_MWAITX		( 6*32+29) /* MWAIT extension (MONITORX/MWAITX) */</span>
 
 /*
  * Auxiliary flags: Linux defined - For features scattered in various
<span class="p_chunk">@@ -192,152 +192,152 @@</span> <span class="p_context"></span>
  *
  * Reuse free bits when adding new feature flags!
  */
<span class="p_del">-#define X86_FEATURE_RING3MWAIT	( 7*32+ 0) /* Ring 3 MONITOR/MWAIT */</span>
<span class="p_del">-#define X86_FEATURE_CPUID_FAULT ( 7*32+ 1) /* Intel CPUID faulting */</span>
<span class="p_del">-#define X86_FEATURE_CPB		( 7*32+ 2) /* AMD Core Performance Boost */</span>
<span class="p_del">-#define X86_FEATURE_EPB		( 7*32+ 3) /* IA32_ENERGY_PERF_BIAS support */</span>
<span class="p_del">-#define X86_FEATURE_CAT_L3	( 7*32+ 4) /* Cache Allocation Technology L3 */</span>
<span class="p_del">-#define X86_FEATURE_CAT_L2	( 7*32+ 5) /* Cache Allocation Technology L2 */</span>
<span class="p_del">-#define X86_FEATURE_CDP_L3	( 7*32+ 6) /* Code and Data Prioritization L3 */</span>
<span class="p_add">+#define X86_FEATURE_RING3MWAIT		( 7*32+ 0) /* Ring 3 MONITOR/MWAIT */</span>
<span class="p_add">+#define X86_FEATURE_CPUID_FAULT		( 7*32+ 1) /* Intel CPUID faulting */</span>
<span class="p_add">+#define X86_FEATURE_CPB			( 7*32+ 2) /* AMD Core Performance Boost */</span>
<span class="p_add">+#define X86_FEATURE_EPB			( 7*32+ 3) /* IA32_ENERGY_PERF_BIAS support */</span>
<span class="p_add">+#define X86_FEATURE_CAT_L3		( 7*32+ 4) /* Cache Allocation Technology L3 */</span>
<span class="p_add">+#define X86_FEATURE_CAT_L2		( 7*32+ 5) /* Cache Allocation Technology L2 */</span>
<span class="p_add">+#define X86_FEATURE_CDP_L3		( 7*32+ 6) /* Code and Data Prioritization L3 */</span>
 
<span class="p_del">-#define X86_FEATURE_HW_PSTATE	( 7*32+ 8) /* AMD HW-PState */</span>
<span class="p_del">-#define X86_FEATURE_PROC_FEEDBACK ( 7*32+ 9) /* AMD ProcFeedbackInterface */</span>
<span class="p_del">-#define X86_FEATURE_SME		( 7*32+10) /* AMD Secure Memory Encryption */</span>
<span class="p_add">+#define X86_FEATURE_HW_PSTATE		( 7*32+ 8) /* AMD HW-PState */</span>
<span class="p_add">+#define X86_FEATURE_PROC_FEEDBACK	( 7*32+ 9) /* AMD ProcFeedbackInterface */</span>
<span class="p_add">+#define X86_FEATURE_SME			( 7*32+10) /* AMD Secure Memory Encryption */</span>
 
<span class="p_del">-#define X86_FEATURE_INTEL_PPIN	( 7*32+14) /* Intel Processor Inventory Number */</span>
<span class="p_del">-#define X86_FEATURE_INTEL_PT	( 7*32+15) /* Intel Processor Trace */</span>
<span class="p_del">-#define X86_FEATURE_AVX512_4VNNIW (7*32+16) /* AVX-512 Neural Network Instructions */</span>
<span class="p_del">-#define X86_FEATURE_AVX512_4FMAPS (7*32+17) /* AVX-512 Multiply Accumulation Single precision */</span>
<span class="p_add">+#define X86_FEATURE_INTEL_PPIN		( 7*32+14) /* Intel Processor Inventory Number */</span>
<span class="p_add">+#define X86_FEATURE_INTEL_PT		( 7*32+15) /* Intel Processor Trace */</span>
<span class="p_add">+#define X86_FEATURE_AVX512_4VNNIW	(7*32+16) /* AVX-512 Neural Network Instructions */</span>
<span class="p_add">+#define X86_FEATURE_AVX512_4FMAPS	(7*32+17) /* AVX-512 Multiply Accumulation Single precision */</span>
 
<span class="p_del">-#define X86_FEATURE_MBA         ( 7*32+18) /* Memory Bandwidth Allocation */</span>
<span class="p_add">+#define X86_FEATURE_MBA			( 7*32+18) /* Memory Bandwidth Allocation */</span>
 
 /* Virtualization flags: Linux defined, word 8 */
<span class="p_del">-#define X86_FEATURE_TPR_SHADOW  ( 8*32+ 0) /* Intel TPR Shadow */</span>
<span class="p_del">-#define X86_FEATURE_VNMI        ( 8*32+ 1) /* Intel Virtual NMI */</span>
<span class="p_del">-#define X86_FEATURE_FLEXPRIORITY ( 8*32+ 2) /* Intel FlexPriority */</span>
<span class="p_del">-#define X86_FEATURE_EPT         ( 8*32+ 3) /* Intel Extended Page Table */</span>
<span class="p_del">-#define X86_FEATURE_VPID        ( 8*32+ 4) /* Intel Virtual Processor ID */</span>
<span class="p_add">+#define X86_FEATURE_TPR_SHADOW		( 8*32+ 0) /* Intel TPR Shadow */</span>
<span class="p_add">+#define X86_FEATURE_VNMI		( 8*32+ 1) /* Intel Virtual NMI */</span>
<span class="p_add">+#define X86_FEATURE_FLEXPRIORITY	( 8*32+ 2) /* Intel FlexPriority */</span>
<span class="p_add">+#define X86_FEATURE_EPT			( 8*32+ 3) /* Intel Extended Page Table */</span>
<span class="p_add">+#define X86_FEATURE_VPID		( 8*32+ 4) /* Intel Virtual Processor ID */</span>
 
<span class="p_del">-#define X86_FEATURE_VMMCALL     ( 8*32+15) /* Prefer vmmcall to vmcall */</span>
<span class="p_del">-#define X86_FEATURE_XENPV       ( 8*32+16) /* &quot;&quot; Xen paravirtual guest */</span>
<span class="p_add">+#define X86_FEATURE_VMMCALL		( 8*32+15) /* Prefer vmmcall to vmcall */</span>
<span class="p_add">+#define X86_FEATURE_XENPV		( 8*32+16) /* &quot;&quot; Xen paravirtual guest */</span>
 
 
 /* Intel-defined CPU features, CPUID level 0x00000007:0 (ebx), word 9 */
<span class="p_del">-#define X86_FEATURE_FSGSBASE	( 9*32+ 0) /* {RD/WR}{FS/GS}BASE instructions*/</span>
<span class="p_del">-#define X86_FEATURE_TSC_ADJUST	( 9*32+ 1) /* TSC adjustment MSR 0x3b */</span>
<span class="p_del">-#define X86_FEATURE_BMI1	( 9*32+ 3) /* 1st group bit manipulation extensions */</span>
<span class="p_del">-#define X86_FEATURE_HLE		( 9*32+ 4) /* Hardware Lock Elision */</span>
<span class="p_del">-#define X86_FEATURE_AVX2	( 9*32+ 5) /* AVX2 instructions */</span>
<span class="p_del">-#define X86_FEATURE_SMEP	( 9*32+ 7) /* Supervisor Mode Execution Protection */</span>
<span class="p_del">-#define X86_FEATURE_BMI2	( 9*32+ 8) /* 2nd group bit manipulation extensions */</span>
<span class="p_del">-#define X86_FEATURE_ERMS	( 9*32+ 9) /* Enhanced REP MOVSB/STOSB */</span>
<span class="p_del">-#define X86_FEATURE_INVPCID	( 9*32+10) /* Invalidate Processor Context ID */</span>
<span class="p_del">-#define X86_FEATURE_RTM		( 9*32+11) /* Restricted Transactional Memory */</span>
<span class="p_del">-#define X86_FEATURE_CQM		( 9*32+12) /* Cache QoS Monitoring */</span>
<span class="p_del">-#define X86_FEATURE_MPX		( 9*32+14) /* Memory Protection Extension */</span>
<span class="p_del">-#define X86_FEATURE_RDT_A	( 9*32+15) /* Resource Director Technology Allocation */</span>
<span class="p_del">-#define X86_FEATURE_AVX512F	( 9*32+16) /* AVX-512 Foundation */</span>
<span class="p_del">-#define X86_FEATURE_AVX512DQ	( 9*32+17) /* AVX-512 DQ (Double/Quad granular) Instructions */</span>
<span class="p_del">-#define X86_FEATURE_RDSEED	( 9*32+18) /* The RDSEED instruction */</span>
<span class="p_del">-#define X86_FEATURE_ADX		( 9*32+19) /* The ADCX and ADOX instructions */</span>
<span class="p_del">-#define X86_FEATURE_SMAP	( 9*32+20) /* Supervisor Mode Access Prevention */</span>
<span class="p_del">-#define X86_FEATURE_AVX512IFMA  ( 9*32+21) /* AVX-512 Integer Fused Multiply-Add instructions */</span>
<span class="p_del">-#define X86_FEATURE_CLFLUSHOPT	( 9*32+23) /* CLFLUSHOPT instruction */</span>
<span class="p_del">-#define X86_FEATURE_CLWB	( 9*32+24) /* CLWB instruction */</span>
<span class="p_del">-#define X86_FEATURE_AVX512PF	( 9*32+26) /* AVX-512 Prefetch */</span>
<span class="p_del">-#define X86_FEATURE_AVX512ER	( 9*32+27) /* AVX-512 Exponential and Reciprocal */</span>
<span class="p_del">-#define X86_FEATURE_AVX512CD	( 9*32+28) /* AVX-512 Conflict Detection */</span>
<span class="p_del">-#define X86_FEATURE_SHA_NI	( 9*32+29) /* SHA1/SHA256 Instruction Extensions */</span>
<span class="p_del">-#define X86_FEATURE_AVX512BW	( 9*32+30) /* AVX-512 BW (Byte/Word granular) Instructions */</span>
<span class="p_del">-#define X86_FEATURE_AVX512VL	( 9*32+31) /* AVX-512 VL (128/256 Vector Length) Extensions */</span>
<span class="p_add">+#define X86_FEATURE_FSGSBASE		( 9*32+ 0) /* {RD/WR}{FS/GS}BASE instructions*/</span>
<span class="p_add">+#define X86_FEATURE_TSC_ADJUST		( 9*32+ 1) /* TSC adjustment MSR 0x3b */</span>
<span class="p_add">+#define X86_FEATURE_BMI1		( 9*32+ 3) /* 1st group bit manipulation extensions */</span>
<span class="p_add">+#define X86_FEATURE_HLE			( 9*32+ 4) /* Hardware Lock Elision */</span>
<span class="p_add">+#define X86_FEATURE_AVX2		( 9*32+ 5) /* AVX2 instructions */</span>
<span class="p_add">+#define X86_FEATURE_SMEP		( 9*32+ 7) /* Supervisor Mode Execution Protection */</span>
<span class="p_add">+#define X86_FEATURE_BMI2		( 9*32+ 8) /* 2nd group bit manipulation extensions */</span>
<span class="p_add">+#define X86_FEATURE_ERMS		( 9*32+ 9) /* Enhanced REP MOVSB/STOSB */</span>
<span class="p_add">+#define X86_FEATURE_INVPCID		( 9*32+10) /* Invalidate Processor Context ID */</span>
<span class="p_add">+#define X86_FEATURE_RTM			( 9*32+11) /* Restricted Transactional Memory */</span>
<span class="p_add">+#define X86_FEATURE_CQM			( 9*32+12) /* Cache QoS Monitoring */</span>
<span class="p_add">+#define X86_FEATURE_MPX			( 9*32+14) /* Memory Protection Extension */</span>
<span class="p_add">+#define X86_FEATURE_RDT_A		( 9*32+15) /* Resource Director Technology Allocation */</span>
<span class="p_add">+#define X86_FEATURE_AVX512F		( 9*32+16) /* AVX-512 Foundation */</span>
<span class="p_add">+#define X86_FEATURE_AVX512DQ		( 9*32+17) /* AVX-512 DQ (Double/Quad granular) Instructions */</span>
<span class="p_add">+#define X86_FEATURE_RDSEED		( 9*32+18) /* The RDSEED instruction */</span>
<span class="p_add">+#define X86_FEATURE_ADX			( 9*32+19) /* The ADCX and ADOX instructions */</span>
<span class="p_add">+#define X86_FEATURE_SMAP		( 9*32+20) /* Supervisor Mode Access Prevention */</span>
<span class="p_add">+#define X86_FEATURE_AVX512IFMA		( 9*32+21) /* AVX-512 Integer Fused Multiply-Add instructions */</span>
<span class="p_add">+#define X86_FEATURE_CLFLUSHOPT		( 9*32+23) /* CLFLUSHOPT instruction */</span>
<span class="p_add">+#define X86_FEATURE_CLWB		( 9*32+24) /* CLWB instruction */</span>
<span class="p_add">+#define X86_FEATURE_AVX512PF		( 9*32+26) /* AVX-512 Prefetch */</span>
<span class="p_add">+#define X86_FEATURE_AVX512ER		( 9*32+27) /* AVX-512 Exponential and Reciprocal */</span>
<span class="p_add">+#define X86_FEATURE_AVX512CD		( 9*32+28) /* AVX-512 Conflict Detection */</span>
<span class="p_add">+#define X86_FEATURE_SHA_NI		( 9*32+29) /* SHA1/SHA256 Instruction Extensions */</span>
<span class="p_add">+#define X86_FEATURE_AVX512BW		( 9*32+30) /* AVX-512 BW (Byte/Word granular) Instructions */</span>
<span class="p_add">+#define X86_FEATURE_AVX512VL		( 9*32+31) /* AVX-512 VL (128/256 Vector Length) Extensions */</span>
 
 /* Extended state features, CPUID level 0x0000000d:1 (eax), word 10 */
<span class="p_del">-#define X86_FEATURE_XSAVEOPT	(10*32+ 0) /* XSAVEOPT */</span>
<span class="p_del">-#define X86_FEATURE_XSAVEC	(10*32+ 1) /* XSAVEC */</span>
<span class="p_del">-#define X86_FEATURE_XGETBV1	(10*32+ 2) /* XGETBV with ECX = 1 */</span>
<span class="p_del">-#define X86_FEATURE_XSAVES	(10*32+ 3) /* XSAVES/XRSTORS */</span>
<span class="p_add">+#define X86_FEATURE_XSAVEOPT		(10*32+ 0) /* XSAVEOPT */</span>
<span class="p_add">+#define X86_FEATURE_XSAVEC		(10*32+ 1) /* XSAVEC */</span>
<span class="p_add">+#define X86_FEATURE_XGETBV1		(10*32+ 2) /* XGETBV with ECX = 1 */</span>
<span class="p_add">+#define X86_FEATURE_XSAVES		(10*32+ 3) /* XSAVES/XRSTORS */</span>
 
 /* Intel-defined CPU QoS Sub-leaf, CPUID level 0x0000000F:0 (edx), word 11 */
<span class="p_del">-#define X86_FEATURE_CQM_LLC	(11*32+ 1) /* LLC QoS if 1 */</span>
<span class="p_add">+#define X86_FEATURE_CQM_LLC		(11*32+ 1) /* LLC QoS if 1 */</span>
 
 /* Intel-defined CPU QoS Sub-leaf, CPUID level 0x0000000F:1 (edx), word 12 */
<span class="p_del">-#define X86_FEATURE_CQM_OCCUP_LLC (12*32+ 0) /* LLC occupancy monitoring if 1 */</span>
<span class="p_del">-#define X86_FEATURE_CQM_MBM_TOTAL (12*32+ 1) /* LLC Total MBM monitoring */</span>
<span class="p_del">-#define X86_FEATURE_CQM_MBM_LOCAL (12*32+ 2) /* LLC Local MBM monitoring */</span>
<span class="p_add">+#define X86_FEATURE_CQM_OCCUP_LLC	(12*32+ 0) /* LLC occupancy monitoring if 1 */</span>
<span class="p_add">+#define X86_FEATURE_CQM_MBM_TOTAL	(12*32+ 1) /* LLC Total MBM monitoring */</span>
<span class="p_add">+#define X86_FEATURE_CQM_MBM_LOCAL	(12*32+ 2) /* LLC Local MBM monitoring */</span>
 
 /* AMD-defined CPU features, CPUID level 0x80000008 (ebx), word 13 */
<span class="p_del">-#define X86_FEATURE_CLZERO	(13*32+0) /* CLZERO instruction */</span>
<span class="p_del">-#define X86_FEATURE_IRPERF	(13*32+1) /* Instructions Retired Count */</span>
<span class="p_add">+#define X86_FEATURE_CLZERO		(13*32+0) /* CLZERO instruction */</span>
<span class="p_add">+#define X86_FEATURE_IRPERF		(13*32+1) /* Instructions Retired Count */</span>
 
 /* Thermal and Power Management Leaf, CPUID level 0x00000006 (eax), word 14 */
<span class="p_del">-#define X86_FEATURE_DTHERM	(14*32+ 0) /* Digital Thermal Sensor */</span>
<span class="p_del">-#define X86_FEATURE_IDA		(14*32+ 1) /* Intel Dynamic Acceleration */</span>
<span class="p_del">-#define X86_FEATURE_ARAT	(14*32+ 2) /* Always Running APIC Timer */</span>
<span class="p_del">-#define X86_FEATURE_PLN		(14*32+ 4) /* Intel Power Limit Notification */</span>
<span class="p_del">-#define X86_FEATURE_PTS		(14*32+ 6) /* Intel Package Thermal Status */</span>
<span class="p_del">-#define X86_FEATURE_HWP		(14*32+ 7) /* Intel Hardware P-states */</span>
<span class="p_del">-#define X86_FEATURE_HWP_NOTIFY	(14*32+ 8) /* HWP Notification */</span>
<span class="p_del">-#define X86_FEATURE_HWP_ACT_WINDOW (14*32+ 9) /* HWP Activity Window */</span>
<span class="p_del">-#define X86_FEATURE_HWP_EPP	(14*32+10) /* HWP Energy Perf. Preference */</span>
<span class="p_del">-#define X86_FEATURE_HWP_PKG_REQ (14*32+11) /* HWP Package Level Request */</span>
<span class="p_add">+#define X86_FEATURE_DTHERM		(14*32+ 0) /* Digital Thermal Sensor */</span>
<span class="p_add">+#define X86_FEATURE_IDA			(14*32+ 1) /* Intel Dynamic Acceleration */</span>
<span class="p_add">+#define X86_FEATURE_ARAT		(14*32+ 2) /* Always Running APIC Timer */</span>
<span class="p_add">+#define X86_FEATURE_PLN			(14*32+ 4) /* Intel Power Limit Notification */</span>
<span class="p_add">+#define X86_FEATURE_PTS			(14*32+ 6) /* Intel Package Thermal Status */</span>
<span class="p_add">+#define X86_FEATURE_HWP			(14*32+ 7) /* Intel Hardware P-states */</span>
<span class="p_add">+#define X86_FEATURE_HWP_NOTIFY		(14*32+ 8) /* HWP Notification */</span>
<span class="p_add">+#define X86_FEATURE_HWP_ACT_WINDOW	(14*32+ 9) /* HWP Activity Window */</span>
<span class="p_add">+#define X86_FEATURE_HWP_EPP		(14*32+10) /* HWP Energy Perf. Preference */</span>
<span class="p_add">+#define X86_FEATURE_HWP_PKG_REQ		(14*32+11) /* HWP Package Level Request */</span>
 
 /* AMD SVM Feature Identification, CPUID level 0x8000000a (edx), word 15 */
<span class="p_del">-#define X86_FEATURE_NPT		(15*32+ 0) /* Nested Page Table support */</span>
<span class="p_del">-#define X86_FEATURE_LBRV	(15*32+ 1) /* LBR Virtualization support */</span>
<span class="p_del">-#define X86_FEATURE_SVML	(15*32+ 2) /* &quot;svm_lock&quot; SVM locking MSR */</span>
<span class="p_del">-#define X86_FEATURE_NRIPS	(15*32+ 3) /* &quot;nrip_save&quot; SVM next_rip save */</span>
<span class="p_del">-#define X86_FEATURE_TSCRATEMSR  (15*32+ 4) /* &quot;tsc_scale&quot; TSC scaling support */</span>
<span class="p_del">-#define X86_FEATURE_VMCBCLEAN   (15*32+ 5) /* &quot;vmcb_clean&quot; VMCB clean bits support */</span>
<span class="p_del">-#define X86_FEATURE_FLUSHBYASID (15*32+ 6) /* flush-by-ASID support */</span>
<span class="p_del">-#define X86_FEATURE_DECODEASSISTS (15*32+ 7) /* Decode Assists support */</span>
<span class="p_del">-#define X86_FEATURE_PAUSEFILTER (15*32+10) /* filtered pause intercept */</span>
<span class="p_del">-#define X86_FEATURE_PFTHRESHOLD (15*32+12) /* pause filter threshold */</span>
<span class="p_del">-#define X86_FEATURE_AVIC	(15*32+13) /* Virtual Interrupt Controller */</span>
<span class="p_del">-#define X86_FEATURE_V_VMSAVE_VMLOAD (15*32+15) /* Virtual VMSAVE VMLOAD */</span>
<span class="p_del">-#define X86_FEATURE_VGIF	(15*32+16) /* Virtual GIF */</span>
<span class="p_add">+#define X86_FEATURE_NPT			(15*32+ 0) /* Nested Page Table support */</span>
<span class="p_add">+#define X86_FEATURE_LBRV		(15*32+ 1) /* LBR Virtualization support */</span>
<span class="p_add">+#define X86_FEATURE_SVML		(15*32+ 2) /* &quot;svm_lock&quot; SVM locking MSR */</span>
<span class="p_add">+#define X86_FEATURE_NRIPS		(15*32+ 3) /* &quot;nrip_save&quot; SVM next_rip save */</span>
<span class="p_add">+#define X86_FEATURE_TSCRATEMSR		(15*32+ 4) /* &quot;tsc_scale&quot; TSC scaling support */</span>
<span class="p_add">+#define X86_FEATURE_VMCBCLEAN		(15*32+ 5) /* &quot;vmcb_clean&quot; VMCB clean bits support */</span>
<span class="p_add">+#define X86_FEATURE_FLUSHBYASID		(15*32+ 6) /* flush-by-ASID support */</span>
<span class="p_add">+#define X86_FEATURE_DECODEASSISTS	(15*32+ 7) /* Decode Assists support */</span>
<span class="p_add">+#define X86_FEATURE_PAUSEFILTER		(15*32+10) /* filtered pause intercept */</span>
<span class="p_add">+#define X86_FEATURE_PFTHRESHOLD		(15*32+12) /* pause filter threshold */</span>
<span class="p_add">+#define X86_FEATURE_AVIC		(15*32+13) /* Virtual Interrupt Controller */</span>
<span class="p_add">+#define X86_FEATURE_V_VMSAVE_VMLOAD	(15*32+15) /* Virtual VMSAVE VMLOAD */</span>
<span class="p_add">+#define X86_FEATURE_VGIF		(15*32+16) /* Virtual GIF */</span>
 
 /* Intel-defined CPU features, CPUID level 0x00000007:0 (ecx), word 16 */
<span class="p_del">-#define X86_FEATURE_AVX512VBMI  (16*32+ 1) /* AVX512 Vector Bit Manipulation instructions*/</span>
<span class="p_del">-#define X86_FEATURE_PKU		(16*32+ 3) /* Protection Keys for Userspace */</span>
<span class="p_del">-#define X86_FEATURE_OSPKE	(16*32+ 4) /* OS Protection Keys Enable */</span>
<span class="p_del">-#define X86_FEATURE_AVX512_VBMI2 (16*32+ 6) /* Additional AVX512 Vector Bit Manipulation Instructions */</span>
<span class="p_del">-#define X86_FEATURE_GFNI	(16*32+ 8) /* Galois Field New Instructions */</span>
<span class="p_del">-#define X86_FEATURE_VAES	(16*32+ 9) /* Vector AES */</span>
<span class="p_del">-#define X86_FEATURE_VPCLMULQDQ	(16*32+ 10) /* Carry-Less Multiplication Double Quadword */</span>
<span class="p_del">-#define X86_FEATURE_AVX512_VNNI (16*32+ 11) /* Vector Neural Network Instructions */</span>
<span class="p_del">-#define X86_FEATURE_AVX512_BITALG (16*32+12) /* Support for VPOPCNT[B,W] and VPSHUF-BITQMB */</span>
<span class="p_del">-#define X86_FEATURE_AVX512_VPOPCNTDQ (16*32+14) /* POPCNT for vectors of DW/QW */</span>
<span class="p_del">-#define X86_FEATURE_LA57	(16*32+16) /* 5-level page tables */</span>
<span class="p_del">-#define X86_FEATURE_RDPID	(16*32+22) /* RDPID instruction */</span>
<span class="p_add">+#define X86_FEATURE_AVX512VBMI		(16*32+ 1) /* AVX512 Vector Bit Manipulation instructions*/</span>
<span class="p_add">+#define X86_FEATURE_PKU			(16*32+ 3) /* Protection Keys for Userspace */</span>
<span class="p_add">+#define X86_FEATURE_OSPKE		(16*32+ 4) /* OS Protection Keys Enable */</span>
<span class="p_add">+#define X86_FEATURE_AVX512_VBMI2	(16*32+ 6) /* Additional AVX512 Vector Bit Manipulation Instructions */</span>
<span class="p_add">+#define X86_FEATURE_GFNI		(16*32+ 8) /* Galois Field New Instructions */</span>
<span class="p_add">+#define X86_FEATURE_VAES		(16*32+ 9) /* Vector AES */</span>
<span class="p_add">+#define X86_FEATURE_VPCLMULQDQ		(16*32+ 10) /* Carry-Less Multiplication Double Quadword */</span>
<span class="p_add">+#define X86_FEATURE_AVX512_VNNI		(16*32+ 11) /* Vector Neural Network Instructions */</span>
<span class="p_add">+#define X86_FEATURE_AVX512_BITALG	(16*32+12) /* Support for VPOPCNT[B,W] and VPSHUF-BITQMB */</span>
<span class="p_add">+#define X86_FEATURE_AVX512_VPOPCNTDQ	(16*32+14) /* POPCNT for vectors of DW/QW */</span>
<span class="p_add">+#define X86_FEATURE_LA57		(16*32+16) /* 5-level page tables */</span>
<span class="p_add">+#define X86_FEATURE_RDPID		(16*32+22) /* RDPID instruction */</span>
 
 /* AMD-defined CPU features, CPUID level 0x80000007 (ebx), word 17 */
<span class="p_del">-#define X86_FEATURE_OVERFLOW_RECOV (17*32+0) /* MCA overflow recovery support */</span>
<span class="p_del">-#define X86_FEATURE_SUCCOR	(17*32+1) /* Uncorrectable error containment and recovery */</span>
<span class="p_del">-#define X86_FEATURE_SMCA	(17*32+3) /* Scalable MCA */</span>
<span class="p_add">+#define X86_FEATURE_OVERFLOW_RECOV	(17*32+0) /* MCA overflow recovery support */</span>
<span class="p_add">+#define X86_FEATURE_SUCCOR		(17*32+1) /* Uncorrectable error containment and recovery */</span>
<span class="p_add">+#define X86_FEATURE_SMCA		(17*32+3) /* Scalable MCA */</span>
 
 /*
  * BUG word(s)
  */
<span class="p_del">-#define X86_BUG(x)		(NCAPINTS*32 + (x))</span>
<span class="p_add">+#define X86_BUG(x)			(NCAPINTS*32 + (x))</span>
 
<span class="p_del">-#define X86_BUG_F00F		X86_BUG(0) /* Intel F00F */</span>
<span class="p_del">-#define X86_BUG_FDIV		X86_BUG(1) /* FPU FDIV */</span>
<span class="p_del">-#define X86_BUG_COMA		X86_BUG(2) /* Cyrix 6x86 coma */</span>
<span class="p_del">-#define X86_BUG_AMD_TLB_MMATCH	X86_BUG(3) /* &quot;tlb_mmatch&quot; AMD Erratum 383 */</span>
<span class="p_del">-#define X86_BUG_AMD_APIC_C1E	X86_BUG(4) /* &quot;apic_c1e&quot; AMD Erratum 400 */</span>
<span class="p_del">-#define X86_BUG_11AP		X86_BUG(5) /* Bad local APIC aka 11AP */</span>
<span class="p_del">-#define X86_BUG_FXSAVE_LEAK	X86_BUG(6) /* FXSAVE leaks FOP/FIP/FOP */</span>
<span class="p_del">-#define X86_BUG_CLFLUSH_MONITOR	X86_BUG(7) /* AAI65, CLFLUSH required before MONITOR */</span>
<span class="p_del">-#define X86_BUG_SYSRET_SS_ATTRS	X86_BUG(8) /* SYSRET doesn&#39;t fix up SS attrs */</span>
<span class="p_add">+#define X86_BUG_F00F			X86_BUG(0) /* Intel F00F */</span>
<span class="p_add">+#define X86_BUG_FDIV			X86_BUG(1) /* FPU FDIV */</span>
<span class="p_add">+#define X86_BUG_COMA			X86_BUG(2) /* Cyrix 6x86 coma */</span>
<span class="p_add">+#define X86_BUG_AMD_TLB_MMATCH		X86_BUG(3) /* &quot;tlb_mmatch&quot; AMD Erratum 383 */</span>
<span class="p_add">+#define X86_BUG_AMD_APIC_C1E		X86_BUG(4) /* &quot;apic_c1e&quot; AMD Erratum 400 */</span>
<span class="p_add">+#define X86_BUG_11AP			X86_BUG(5) /* Bad local APIC aka 11AP */</span>
<span class="p_add">+#define X86_BUG_FXSAVE_LEAK		X86_BUG(6) /* FXSAVE leaks FOP/FIP/FOP */</span>
<span class="p_add">+#define X86_BUG_CLFLUSH_MONITOR		X86_BUG(7) /* AAI65, CLFLUSH required before MONITOR */</span>
<span class="p_add">+#define X86_BUG_SYSRET_SS_ATTRS		X86_BUG(8) /* SYSRET doesn&#39;t fix up SS attrs */</span>
 #ifdef CONFIG_X86_32
 /*
  * 64-bit kernels don&#39;t use X86_BUG_ESPFIX.  Make the define conditional
  * to avoid confusion.
  */
<span class="p_del">-#define X86_BUG_ESPFIX		X86_BUG(9) /* &quot;&quot; IRET to 16-bit SS corrupts ESP/RSP high bits */</span>
<span class="p_add">+#define X86_BUG_ESPFIX			X86_BUG(9) /* &quot;&quot; IRET to 16-bit SS corrupts ESP/RSP high bits */</span>
 #endif
<span class="p_del">-#define X86_BUG_NULL_SEG	X86_BUG(10) /* Nulling a selector preserves the base */</span>
<span class="p_del">-#define X86_BUG_SWAPGS_FENCE	X86_BUG(11) /* SWAPGS without input dep on GS */</span>
<span class="p_del">-#define X86_BUG_MONITOR		X86_BUG(12) /* IPI required to wake up remote CPU */</span>
<span class="p_del">-#define X86_BUG_AMD_E400	X86_BUG(13) /* CPU is among the affected by Erratum 400 */</span>
<span class="p_add">+#define X86_BUG_NULL_SEG		X86_BUG(10) /* Nulling a selector preserves the base */</span>
<span class="p_add">+#define X86_BUG_SWAPGS_FENCE		X86_BUG(11) /* SWAPGS without input dep on GS */</span>
<span class="p_add">+#define X86_BUG_MONITOR			X86_BUG(12) /* IPI required to wake up remote CPU */</span>
<span class="p_add">+#define X86_BUG_AMD_E400		X86_BUG(13) /* CPU is among the affected by Erratum 400 */</span>
 #endif /* _ASM_X86_CPUFEATURES_H */

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



