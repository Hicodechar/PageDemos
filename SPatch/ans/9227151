
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v6,28/46] ia64: dma-mapping: Use unsigned long for dma_attrs - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v6,28/46] ia64: dma-mapping: Use unsigned long for dma_attrs</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=72608">Krzysztof Kozlowski</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 13, 2016, 8:41 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1468399300-5399-28-git-send-email-k.kozlowski@samsung.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9227151/mbox/"
   >mbox</a>
|
   <a href="/patch/9227151/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9227151/">/patch/9227151/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	EF08F6075D for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 13 Jul 2016 08:44:34 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id DF0F6272AA
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 13 Jul 2016 08:44:34 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D375D27F96; Wed, 13 Jul 2016 08:44:34 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 343D8272AA
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 13 Jul 2016 08:44:34 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751236AbcGMIo0 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 13 Jul 2016 04:44:26 -0400
Received: from mailout1.w1.samsung.com ([210.118.77.11]:21825 &quot;EHLO
	mailout1.w1.samsung.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932278AbcGMInj (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 13 Jul 2016 04:43:39 -0400
Received: from eucpsbgm2.samsung.com (unknown [203.254.199.245])
	by mailout1.w1.samsung.com
	(Oracle Communications Messaging Server 7.0.5.31.0 64bit (built May 5
	2014))
	with ESMTP id &lt;0OA800F89W6Q9330@mailout1.w1.samsung.com&gt;; Wed,
	13 Jul 2016 09:42:26 +0100 (BST)
X-AuditID: cbfec7f5-f792a6d000001302-49-5785fef2a08b
Received: from eusync3.samsung.com ( [203.254.199.213])
	by eucpsbgm2.samsung.com (EUCPMTA) with SMTP id 7C.31.04866.2FEF5875;
	Wed, 13 Jul 2016 09:42:26 +0100 (BST)
Received: from AMDC2174.DIGITAL.local ([106.120.53.17])
	by eusync3.samsung.com (Oracle Communications Messaging Server
	7.0.5.31.0 64bit (built May  5 2014))
	with ESMTPA id &lt;0OA800KINW5J0E10@eusync3.samsung.com&gt;; Wed,
	13 Jul 2016 09:42:26 +0100 (BST)
From: Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: linux-kernel@vger.kernel.org, hch@infradead.org,
	Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;,
	Bartlomiej Zolnierkiewicz &lt;b.zolnierkie@samsung.com&gt;,
	Tony Luck &lt;tony.luck@intel.com&gt;, Fenghua Yu &lt;fenghua.yu@intel.com&gt;,
	Konrad Rzeszutek Wilk &lt;konrad.wilk@oracle.com&gt;,
	linux-ia64@vger.kernel.org
Subject: [PATCH v6 28/46] ia64: dma-mapping: Use unsigned long for dma_attrs
Date: Wed, 13 Jul 2016 10:41:19 +0200
Message-id: &lt;1468399300-5399-28-git-send-email-k.kozlowski@samsung.com&gt;
X-Mailer: git-send-email 1.9.1
In-reply-to: &lt;1468399300-5399-27-git-send-email-k.kozlowski@samsung.com&gt;
References: &lt;1468399167-28083-1-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-1-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-2-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-3-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-4-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-5-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-6-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-7-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-8-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-9-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-10-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-11-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-12-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-13-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-14-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-15-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-16-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-17-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-18-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-19-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-20-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-21-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-22-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-23-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-24-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-25-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-26-git-send-email-k.kozlowski@samsung.com&gt;
	&lt;1468399300-5399-27-git-send-email-k.kozlowski@samsung.com&gt;
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFlrALMWRmVeSWpSXmKPExsVy+t/xq7qf/rWGG3x8J2gxZ/0aNouNM9az
	WrRNc7Q4PWERk8XrF4YWyxY/ZbT40PGO1eLyrjlsFm8u3GNx4PTYvELLY/Gel0weJ2b8ZvH4
	+PQWi0ffllWMHp83yQWwRXHZpKTmZJalFunbJXBlvLp+iK1gsX3FtsvvmBoYjxl1MXJySAiY
	SDy9fZgFwhaTuHBvPVsXIxeHkMBSRolN604zQjiNTBIbF79lAqliEzCW2Lx8CRuILSKgK7Hq
	+S5mkCJmgQ1MEgffbwRLCAv4SDyb8YK1i5GDg0VAVeLCkRCQMK+Au8TPZV+gtslJnDw2GayE
	U8BD4tYnYYhdJ3glrk8+wT6BkXcBI8MqRtHU0uSC4qT0XCO94sTc4tK8dL3k/NxNjJBw+7qD
	cekxq0OMAhyMSjy8KwRbw4VYE8uKK3MPMUpwMCuJ8Jr+BArxpiRWVqUW5ccXleakFh9ilOZg
	URLnnbnrfYiQQHpiSWp2ampBahFMlomDU6qBUTSv9cRhOx2his8R/YqWUT4O197Pd0kxScpz
	s/HT072/bHeeuWXPs1pdo7zSIzmFbYwBPkYvGXwUV18KPfTT9eQBz7cX1shN+Ky3rsb8eesa
	M+GWnM0rl30vvee2s5s/6qbUOaHjeoIHPHcfSMsWtlPxYTm6LiBI0SIo79iCPv/9CwOtpi9R
	YinOSDTUYi4qTgQAO4SaSDMCAAA=
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72608">Krzysztof Kozlowski</a> - July 13, 2016, 8:41 a.m.</div>
<pre class="content">
Split out subsystem specific changes for easier reviews. This will be
squashed with main commit.
<span class="signed-off-by">
Signed-off-by: Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;</span>
---
 arch/ia64/hp/common/sba_iommu.c | 22 +++++++++++-----------
 arch/ia64/include/asm/machvec.h |  1 -
 arch/ia64/kernel/pci-swiotlb.c  |  4 ++--
 arch/ia64/sn/pci/pci_dma.c      | 12 ++++++------
 4 files changed, 19 insertions(+), 20 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/ia64/hp/common/sba_iommu.c b/arch/ia64/hp/common/sba_iommu.c</span>
<span class="p_header">index a6d6190c9d24..630ee8073899 100644</span>
<span class="p_header">--- a/arch/ia64/hp/common/sba_iommu.c</span>
<span class="p_header">+++ b/arch/ia64/hp/common/sba_iommu.c</span>
<span class="p_chunk">@@ -919,7 +919,7 @@</span> <span class="p_context"> sba_mark_invalid(struct ioc *ioc, dma_addr_t iova, size_t byte_cnt)</span>
 static dma_addr_t sba_map_page(struct device *dev, struct page *page,
 			       unsigned long poff, size_t size,
 			       enum dma_data_direction dir,
<span class="p_del">-			       struct dma_attrs *attrs)</span>
<span class="p_add">+			       unsigned long attrs)</span>
 {
 	struct ioc *ioc;
 	void *addr = page_address(page) + poff;
<span class="p_chunk">@@ -1005,7 +1005,7 @@</span> <span class="p_context"> static dma_addr_t sba_map_page(struct device *dev, struct page *page,</span>
 
 static dma_addr_t sba_map_single_attrs(struct device *dev, void *addr,
 				       size_t size, enum dma_data_direction dir,
<span class="p_del">-				       struct dma_attrs *attrs)</span>
<span class="p_add">+				       unsigned long attrs)</span>
 {
 	return sba_map_page(dev, virt_to_page(addr),
 			    (unsigned long)addr &amp; ~PAGE_MASK, size, dir, attrs);
<span class="p_chunk">@@ -1046,7 +1046,7 @@</span> <span class="p_context"> sba_mark_clean(struct ioc *ioc, dma_addr_t iova, size_t size)</span>
  * See Documentation/DMA-API-HOWTO.txt
  */
 static void sba_unmap_page(struct device *dev, dma_addr_t iova, size_t size,
<span class="p_del">-			   enum dma_data_direction dir, struct dma_attrs *attrs)</span>
<span class="p_add">+			   enum dma_data_direction dir, unsigned long attrs)</span>
 {
 	struct ioc *ioc;
 #if DELAYED_RESOURCE_CNT &gt; 0
<span class="p_chunk">@@ -1115,7 +1115,7 @@</span> <span class="p_context"> static void sba_unmap_page(struct device *dev, dma_addr_t iova, size_t size,</span>
 }
 
 void sba_unmap_single_attrs(struct device *dev, dma_addr_t iova, size_t size,
<span class="p_del">-			    enum dma_data_direction dir, struct dma_attrs *attrs)</span>
<span class="p_add">+			    enum dma_data_direction dir, unsigned long attrs)</span>
 {
 	sba_unmap_page(dev, iova, size, dir, attrs);
 }
<span class="p_chunk">@@ -1130,7 +1130,7 @@</span> <span class="p_context"> void sba_unmap_single_attrs(struct device *dev, dma_addr_t iova, size_t size,</span>
  */
 static void *
 sba_alloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle,
<span class="p_del">-		   gfp_t flags, struct dma_attrs *attrs)</span>
<span class="p_add">+		   gfp_t flags, unsigned long attrs)</span>
 {
 	struct ioc *ioc;
 	void *addr;
<span class="p_chunk">@@ -1175,7 +1175,7 @@</span> <span class="p_context"> sba_alloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle,</span>
 	 * device to map single to get an iova mapping.
 	 */
 	*dma_handle = sba_map_single_attrs(&amp;ioc-&gt;sac_only_dev-&gt;dev, addr,
<span class="p_del">-					   size, 0, NULL);</span>
<span class="p_add">+					   size, 0, 0);</span>
 
 	return addr;
 }
<span class="p_chunk">@@ -1191,9 +1191,9 @@</span> <span class="p_context"> sba_alloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle,</span>
  * See Documentation/DMA-API-HOWTO.txt
  */
 static void sba_free_coherent(struct device *dev, size_t size, void *vaddr,
<span class="p_del">-			      dma_addr_t dma_handle, struct dma_attrs *attrs)</span>
<span class="p_add">+			      dma_addr_t dma_handle, unsigned long attrs)</span>
 {
<span class="p_del">-	sba_unmap_single_attrs(dev, dma_handle, size, 0, NULL);</span>
<span class="p_add">+	sba_unmap_single_attrs(dev, dma_handle, size, 0, 0);</span>
 	free_pages((unsigned long) vaddr, get_order(size));
 }
 
<span class="p_chunk">@@ -1442,7 +1442,7 @@</span> <span class="p_context"> sba_coalesce_chunks(struct ioc *ioc, struct device *dev,</span>
 
 static void sba_unmap_sg_attrs(struct device *dev, struct scatterlist *sglist,
 			       int nents, enum dma_data_direction dir,
<span class="p_del">-			       struct dma_attrs *attrs);</span>
<span class="p_add">+			       unsigned long attrs);</span>
 /**
  * sba_map_sg - map Scatter/Gather list
  * @dev: instance of PCI owned by the driver that&#39;s asking.
<span class="p_chunk">@@ -1455,7 +1455,7 @@</span> <span class="p_context"> static void sba_unmap_sg_attrs(struct device *dev, struct scatterlist *sglist,</span>
  */
 static int sba_map_sg_attrs(struct device *dev, struct scatterlist *sglist,
 			    int nents, enum dma_data_direction dir,
<span class="p_del">-			    struct dma_attrs *attrs)</span>
<span class="p_add">+			    unsigned long attrs)</span>
 {
 	struct ioc *ioc;
 	int coalesced, filled = 0;
<span class="p_chunk">@@ -1551,7 +1551,7 @@</span> <span class="p_context"> static int sba_map_sg_attrs(struct device *dev, struct scatterlist *sglist,</span>
  */
 static void sba_unmap_sg_attrs(struct device *dev, struct scatterlist *sglist,
 			       int nents, enum dma_data_direction dir,
<span class="p_del">-			       struct dma_attrs *attrs)</span>
<span class="p_add">+			       unsigned long attrs)</span>
 {
 #ifdef ASSERT_PDIR_SANITY
 	struct ioc *ioc;
<span class="p_header">diff --git a/arch/ia64/include/asm/machvec.h b/arch/ia64/include/asm/machvec.h</span>
<span class="p_header">index 9c39bdfc2da8..ed7f09089f12 100644</span>
<span class="p_header">--- a/arch/ia64/include/asm/machvec.h</span>
<span class="p_header">+++ b/arch/ia64/include/asm/machvec.h</span>
<span class="p_chunk">@@ -22,7 +22,6 @@</span> <span class="p_context"> struct pci_bus;</span>
 struct task_struct;
 struct pci_dev;
 struct msi_desc;
<span class="p_del">-struct dma_attrs;</span>
 
 typedef void ia64_mv_setup_t (char **);
 typedef void ia64_mv_cpu_init_t (void);
<span class="p_header">diff --git a/arch/ia64/kernel/pci-swiotlb.c b/arch/ia64/kernel/pci-swiotlb.c</span>
<span class="p_header">index 939260aeac98..2933208c0285 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/pci-swiotlb.c</span>
<span class="p_header">+++ b/arch/ia64/kernel/pci-swiotlb.c</span>
<span class="p_chunk">@@ -16,7 +16,7 @@</span> <span class="p_context"> EXPORT_SYMBOL(swiotlb);</span>
 
 static void *ia64_swiotlb_alloc_coherent(struct device *dev, size_t size,
 					 dma_addr_t *dma_handle, gfp_t gfp,
<span class="p_del">-					 struct dma_attrs *attrs)</span>
<span class="p_add">+					 unsigned long attrs)</span>
 {
 	if (dev-&gt;coherent_dma_mask != DMA_BIT_MASK(64))
 		gfp |= GFP_DMA;
<span class="p_chunk">@@ -25,7 +25,7 @@</span> <span class="p_context"> static void *ia64_swiotlb_alloc_coherent(struct device *dev, size_t size,</span>
 
 static void ia64_swiotlb_free_coherent(struct device *dev, size_t size,
 				       void *vaddr, dma_addr_t dma_addr,
<span class="p_del">-				       struct dma_attrs *attrs)</span>
<span class="p_add">+				       unsigned long attrs)</span>
 {
 	swiotlb_free_coherent(dev, size, vaddr, dma_addr);
 }
<span class="p_header">diff --git a/arch/ia64/sn/pci/pci_dma.c b/arch/ia64/sn/pci/pci_dma.c</span>
<span class="p_header">index 8f59907007cb..6b78fc953c4b 100644</span>
<span class="p_header">--- a/arch/ia64/sn/pci/pci_dma.c</span>
<span class="p_header">+++ b/arch/ia64/sn/pci/pci_dma.c</span>
<span class="p_chunk">@@ -77,7 +77,7 @@</span> <span class="p_context"> EXPORT_SYMBOL(sn_dma_set_mask);</span>
  */
 static void *sn_dma_alloc_coherent(struct device *dev, size_t size,
 				   dma_addr_t * dma_handle, gfp_t flags,
<span class="p_del">-				   struct dma_attrs *attrs)</span>
<span class="p_add">+				   unsigned long attrs)</span>
 {
 	void *cpuaddr;
 	unsigned long phys_addr;
<span class="p_chunk">@@ -138,7 +138,7 @@</span> <span class="p_context"> static void *sn_dma_alloc_coherent(struct device *dev, size_t size,</span>
  * any associated IOMMU mappings.
  */
 static void sn_dma_free_coherent(struct device *dev, size_t size, void *cpu_addr,
<span class="p_del">-				 dma_addr_t dma_handle, struct dma_attrs *attrs)</span>
<span class="p_add">+				 dma_addr_t dma_handle, unsigned long attrs)</span>
 {
 	struct pci_dev *pdev = to_pci_dev(dev);
 	struct sn_pcibus_provider *provider = SN_PCIDEV_BUSPROVIDER(pdev);
<span class="p_chunk">@@ -176,7 +176,7 @@</span> <span class="p_context"> static void sn_dma_free_coherent(struct device *dev, size_t size, void *cpu_addr</span>
 static dma_addr_t sn_dma_map_page(struct device *dev, struct page *page,
 				  unsigned long offset, size_t size,
 				  enum dma_data_direction dir,
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_add">+				  unsigned long attrs)</span>
 {
 	void *cpu_addr = page_address(page) + offset;
 	dma_addr_t dma_addr;
<span class="p_chunk">@@ -218,7 +218,7 @@</span> <span class="p_context"> static dma_addr_t sn_dma_map_page(struct device *dev, struct page *page,</span>
  */
 static void sn_dma_unmap_page(struct device *dev, dma_addr_t dma_addr,
 			      size_t size, enum dma_data_direction dir,
<span class="p_del">-			      struct dma_attrs *attrs)</span>
<span class="p_add">+			      unsigned long attrs)</span>
 {
 	struct pci_dev *pdev = to_pci_dev(dev);
 	struct sn_pcibus_provider *provider = SN_PCIDEV_BUSPROVIDER(pdev);
<span class="p_chunk">@@ -240,7 +240,7 @@</span> <span class="p_context"> static void sn_dma_unmap_page(struct device *dev, dma_addr_t dma_addr,</span>
  */
 static void sn_dma_unmap_sg(struct device *dev, struct scatterlist *sgl,
 			    int nhwentries, enum dma_data_direction dir,
<span class="p_del">-			    struct dma_attrs *attrs)</span>
<span class="p_add">+			    unsigned long attrs)</span>
 {
 	int i;
 	struct pci_dev *pdev = to_pci_dev(dev);
<span class="p_chunk">@@ -273,7 +273,7 @@</span> <span class="p_context"> static void sn_dma_unmap_sg(struct device *dev, struct scatterlist *sgl,</span>
  */
 static int sn_dma_map_sg(struct device *dev, struct scatterlist *sgl,
 			 int nhwentries, enum dma_data_direction dir,
<span class="p_del">-			 struct dma_attrs *attrs)</span>
<span class="p_add">+			 unsigned long attrs)</span>
 {
 	unsigned long phys_addr;
 	struct scatterlist *saved_sg = sgl, *sg;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



