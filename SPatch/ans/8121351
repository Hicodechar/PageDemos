
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v4,06/14] mm, debug: replace dump_flags() with the new printk formats - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v4,06/14] mm, debug: replace dump_flags() with the new printk formats</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=72672">Vlastimil Babka</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 26, 2016, 12:45 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1453812353-26744-7-git-send-email-vbabka@suse.cz&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8121351/mbox/"
   >mbox</a>
|
   <a href="/patch/8121351/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8121351/">/patch/8121351/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 93EE5BEEE5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 26 Jan 2016 12:51:35 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id BD00020274
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 26 Jan 2016 12:51:31 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 57A5F20270
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 26 Jan 2016 12:51:28 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S965593AbcAZMvY (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 26 Jan 2016 07:51:24 -0500
Received: from mx2.suse.de ([195.135.220.15]:45968 &quot;EHLO mx2.suse.de&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S934186AbcAZMq3 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 26 Jan 2016 07:46:29 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (charybdis-ext.suse.de [195.135.220.254])
	by mx2.suse.de (Postfix) with ESMTP id 70CE6AD03;
	Tue, 26 Jan 2016 12:46:23 +0000 (UTC)
From: Vlastimil Babka &lt;vbabka@suse.cz&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: linux-kernel@vger.kernel.org, linux-mm@kvack.org,
	Vlastimil Babka &lt;vbabka@suse.cz&gt;, Steven Rostedt &lt;rostedt@goodmis.org&gt;,
	Peter Zijlstra &lt;peterz@infradead.org&gt;,
	Arnaldo Carvalho de Melo &lt;acme@kernel.org&gt;,
	Ingo Molnar &lt;mingo@redhat.com&gt;,
	Rasmus Villemoes &lt;linux@rasmusvillemoes.dk&gt;,
	Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;, Minchan Kim &lt;minchan@kernel.org&gt;,
	Sasha Levin &lt;sasha.levin@oracle.com&gt;,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Mel Gorman &lt;mgorman@suse.de&gt;, Michal Hocko &lt;mhocko@suse.com&gt;
Subject: [PATCH v4 06/14] mm,
	debug: replace dump_flags() with the new printk formats
Date: Tue, 26 Jan 2016 13:45:45 +0100
Message-Id: &lt;1453812353-26744-7-git-send-email-vbabka@suse.cz&gt;
X-Mailer: git-send-email 2.7.0
In-Reply-To: &lt;1453812353-26744-1-git-send-email-vbabka@suse.cz&gt;
References: &lt;1453812353-26744-1-git-send-email-vbabka@suse.cz&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72672">Vlastimil Babka</a> - Jan. 26, 2016, 12:45 p.m.</div>
<pre class="content">
With the new printk format strings for flags, we can get rid of dump_flags()
in mm/debug.c.

This also fixes dump_vma() which used dump_flags() for printing vma flags.
However dump_flags() did a page-flags specific filtering of bits higher than
NR_PAGEFLAGS in order to remove the zone id part. For dump_vma() this resulted
in removing several VM_* flags from the symbolic translation.
<span class="signed-off-by">
Signed-off-by: Vlastimil Babka &lt;vbabka@suse.cz&gt;</span>
Cc: Steven Rostedt &lt;rostedt@goodmis.org&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: Arnaldo Carvalho de Melo &lt;acme@kernel.org&gt;
Cc: Ingo Molnar &lt;mingo@redhat.com&gt;
Cc: Rasmus Villemoes &lt;linux@rasmusvillemoes.dk&gt;
Cc: Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;
Cc: Minchan Kim &lt;minchan@kernel.org&gt;
Cc: Sasha Levin &lt;sasha.levin@oracle.com&gt;
Cc: &quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;
Cc: Mel Gorman &lt;mgorman@suse.de&gt;
<span class="acked-by">Acked-by: Michal Hocko &lt;mhocko@suse.com&gt;</span>
---
 mm/debug.c | 60 ++++++++++++++----------------------------------------------
 1 file changed, 14 insertions(+), 46 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=579">David Rientjes</a> - Feb. 4, 2016, 12:04 a.m.</div>
<pre class="content">
On Tue, 26 Jan 2016, Vlastimil Babka wrote:
<span class="quote">
&gt; With the new printk format strings for flags, we can get rid of dump_flags()</span>
<span class="quote">&gt; in mm/debug.c.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This also fixes dump_vma() which used dump_flags() for printing vma flags.</span>
<span class="quote">&gt; However dump_flags() did a page-flags specific filtering of bits higher than</span>
<span class="quote">&gt; NR_PAGEFLAGS in order to remove the zone id part. For dump_vma() this resulted</span>
<span class="quote">&gt; in removing several VM_* flags from the symbolic translation.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Vlastimil Babka &lt;vbabka@suse.cz&gt;</span>
<span class="quote">&gt; Cc: Steven Rostedt &lt;rostedt@goodmis.org&gt;</span>
<span class="quote">&gt; Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;</span>
<span class="quote">&gt; Cc: Arnaldo Carvalho de Melo &lt;acme@kernel.org&gt;</span>
<span class="quote">&gt; Cc: Ingo Molnar &lt;mingo@redhat.com&gt;</span>
<span class="quote">&gt; Cc: Rasmus Villemoes &lt;linux@rasmusvillemoes.dk&gt;</span>
<span class="quote">&gt; Cc: Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;</span>
<span class="quote">&gt; Cc: Minchan Kim &lt;minchan@kernel.org&gt;</span>
<span class="quote">&gt; Cc: Sasha Levin &lt;sasha.levin@oracle.com&gt;</span>
<span class="quote">&gt; Cc: &quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;</span>
<span class="quote">&gt; Cc: Mel Gorman &lt;mgorman@suse.de&gt;</span>
<span class="quote">&gt; Acked-by: Michal Hocko &lt;mhocko@suse.com&gt;</span>
<span class="acked-by">
Acked-by: David Rientjes &lt;rientjes@google.com&gt;</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/debug.c b/mm/debug.c</span>
<span class="p_header">index 0328fd377545..231e1452a912 100644</span>
<span class="p_header">--- a/mm/debug.c</span>
<span class="p_header">+++ b/mm/debug.c</span>
<span class="p_chunk">@@ -28,36 +28,6 @@</span> <span class="p_context"> const struct trace_print_flags vmaflag_names[] = {</span>
 	{0, NULL}
 };
 
<span class="p_del">-static void dump_flags(unsigned long flags,</span>
<span class="p_del">-			const struct trace_print_flags *names, int count)</span>
<span class="p_del">-{</span>
<span class="p_del">-	const char *delim = &quot;&quot;;</span>
<span class="p_del">-	unsigned long mask;</span>
<span class="p_del">-	int i;</span>
<span class="p_del">-</span>
<span class="p_del">-	pr_emerg(&quot;flags: %#lx(&quot;, flags);</span>
<span class="p_del">-</span>
<span class="p_del">-	/* remove zone id */</span>
<span class="p_del">-	flags &amp;= (1UL &lt;&lt; NR_PAGEFLAGS) - 1;</span>
<span class="p_del">-</span>
<span class="p_del">-	for (i = 0; i &lt; count &amp;&amp; flags; i++) {</span>
<span class="p_del">-</span>
<span class="p_del">-		mask = names[i].mask;</span>
<span class="p_del">-		if ((flags &amp; mask) != mask)</span>
<span class="p_del">-			continue;</span>
<span class="p_del">-</span>
<span class="p_del">-		flags &amp;= ~mask;</span>
<span class="p_del">-		pr_cont(&quot;%s%s&quot;, delim, names[i].name);</span>
<span class="p_del">-		delim = &quot;|&quot;;</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	/* check for left over flags */</span>
<span class="p_del">-	if (flags)</span>
<span class="p_del">-		pr_cont(&quot;%s%#lx&quot;, delim, flags);</span>
<span class="p_del">-</span>
<span class="p_del">-	pr_cont(&quot;)\n&quot;);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 void dump_page_badflags(struct page *page, const char *reason,
 		unsigned long badflags)
 {
<span class="p_chunk">@@ -68,15 +38,15 @@</span> <span class="p_context"> void dump_page_badflags(struct page *page, const char *reason,</span>
 		pr_cont(&quot; compound_mapcount: %d&quot;, compound_mapcount(page));
 	pr_cont(&quot;\n&quot;);
 	BUILD_BUG_ON(ARRAY_SIZE(pageflag_names) != __NR_PAGEFLAGS + 1);
<span class="p_del">-	dump_flags(page-&gt;flags, pageflag_names,</span>
<span class="p_del">-					ARRAY_SIZE(pageflag_names) - 1);</span>
<span class="p_add">+	pr_emerg(&quot;flags: %#lx(%pGp)\n&quot;, page-&gt;flags, &amp;page-&gt;flags);</span>
<span class="p_add">+</span>
 	if (reason)
 		pr_alert(&quot;page dumped because: %s\n&quot;, reason);
<span class="p_del">-	if (page-&gt;flags &amp; badflags) {</span>
<span class="p_del">-		pr_alert(&quot;bad because of flags:\n&quot;);</span>
<span class="p_del">-		dump_flags(page-&gt;flags &amp; badflags, pageflag_names,</span>
<span class="p_del">-					ARRAY_SIZE(pageflag_names) - 1);</span>
<span class="p_del">-	}</span>
<span class="p_add">+</span>
<span class="p_add">+	badflags &amp;= page-&gt;flags;</span>
<span class="p_add">+	if (badflags)</span>
<span class="p_add">+		pr_alert(&quot;bad because of flags: %#lx(%pGp)\n&quot;, badflags,</span>
<span class="p_add">+								&amp;badflags);</span>
 #ifdef CONFIG_MEMCG
 	if (page-&gt;mem_cgroup)
 		pr_alert(&quot;page-&gt;mem_cgroup:%p\n&quot;, page-&gt;mem_cgroup);
<span class="p_chunk">@@ -96,13 +66,14 @@</span> <span class="p_context"> void dump_vma(const struct vm_area_struct *vma)</span>
 	pr_emerg(&quot;vma %p start %p end %p\n&quot;
 		&quot;next %p prev %p mm %p\n&quot;
 		&quot;prot %lx anon_vma %p vm_ops %p\n&quot;
<span class="p_del">-		&quot;pgoff %lx file %p private_data %p\n&quot;,</span>
<span class="p_add">+		&quot;pgoff %lx file %p private_data %p\n&quot;</span>
<span class="p_add">+		&quot;flags: %#lx(%pGv)\n&quot;,</span>
 		vma, (void *)vma-&gt;vm_start, (void *)vma-&gt;vm_end, vma-&gt;vm_next,
 		vma-&gt;vm_prev, vma-&gt;vm_mm,
 		(unsigned long)pgprot_val(vma-&gt;vm_page_prot),
 		vma-&gt;anon_vma, vma-&gt;vm_ops, vma-&gt;vm_pgoff,
<span class="p_del">-		vma-&gt;vm_file, vma-&gt;vm_private_data);</span>
<span class="p_del">-	dump_flags(vma-&gt;vm_flags, vmaflag_names, ARRAY_SIZE(vmaflag_names) - 1);</span>
<span class="p_add">+		vma-&gt;vm_file, vma-&gt;vm_private_data,</span>
<span class="p_add">+		vma-&gt;vm_flags, &amp;vma-&gt;vm_flags);</span>
 }
 EXPORT_SYMBOL(dump_vma);
 
<span class="p_chunk">@@ -136,7 +107,7 @@</span> <span class="p_context"> void dump_mm(const struct mm_struct *mm)</span>
 #if defined(CONFIG_NUMA_BALANCING) || defined(CONFIG_COMPACTION)
 		&quot;tlb_flush_pending %d\n&quot;
 #endif
<span class="p_del">-		&quot;%s&quot;,	/* This is here to hold the comma */</span>
<span class="p_add">+		&quot;def_flags: %#lx(%pGv)\n&quot;,</span>
 
 		mm, mm-&gt;mmap, mm-&gt;vmacache_seqnum, mm-&gt;task_size,
 #ifdef CONFIG_MMU
<span class="p_chunk">@@ -170,11 +141,8 @@</span> <span class="p_context"> void dump_mm(const struct mm_struct *mm)</span>
 #if defined(CONFIG_NUMA_BALANCING) || defined(CONFIG_COMPACTION)
 		mm-&gt;tlb_flush_pending,
 #endif
<span class="p_del">-		&quot;&quot;		/* This is here to not have a comma! */</span>
<span class="p_del">-		);</span>
<span class="p_del">-</span>
<span class="p_del">-		dump_flags(mm-&gt;def_flags, vmaflag_names,</span>
<span class="p_del">-				ARRAY_SIZE(vmaflag_names) - 1);</span>
<span class="p_add">+		mm-&gt;def_flags, &amp;mm-&gt;def_flags</span>
<span class="p_add">+	);</span>
 }
 
 #endif		/* CONFIG_DEBUG_VM */

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



