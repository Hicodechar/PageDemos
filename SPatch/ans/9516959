
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>sparc32: mm: srmmu: add __ro_after_init to sparc32_cachetlb_ops structures - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    sparc32: mm: srmmu: add __ro_after_init to sparc32_cachetlb_ops structures</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=149951">Bhumika Goyal</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 14, 2017, 12:31 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1484397114-7705-1-git-send-email-bhumirks@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9516959/mbox/"
   >mbox</a>
|
   <a href="/patch/9516959/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9516959/">/patch/9516959/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	38370601DA for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 14 Jan 2017 12:33:16 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 2798028529
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 14 Jan 2017 12:33:16 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 1A8F428541; Sat, 14 Jan 2017 12:33:16 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.5 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, FREEMAIL_FROM, RCVD_IN_DNSWL_HI,
	RCVD_IN_SORBS_SPAM autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id BF1E528529
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 14 Jan 2017 12:33:15 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752259AbdANMdN (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sat, 14 Jan 2017 07:33:13 -0500
Received: from mail-pf0-f194.google.com ([209.85.192.194]:34582 &quot;EHLO
	mail-pf0-f194.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752147AbdANMdK (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sat, 14 Jan 2017 07:33:10 -0500
Received: by mail-pf0-f194.google.com with SMTP id y143so11290119pfb.1;
	Sat, 14 Jan 2017 04:33:05 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=from:to:cc:subject:date:message-id;
	bh=dMrQaQ4DFaZ/j91ra6Pi9F1kSpAR0Cru8dvnNuhJRsc=;
	b=KZX3pqPooTACW3m/CYsqcwIZYhQfP+15P+nIiQAQkV1Ysdzp/DMeruDQvY+hjlmBac
	etowzQjyuPoQre8Jkb3Z8x8zdtmsc4c+M/PfQ8dUF50RBCPA2upAlgqnUGGbeGgZ4++P
	I7X8pl6FGnrYpNw3ITfGlAh/g9L4znDoj/bNFzqSWx7YPVFrESXhxgYvVyD0phHYVZlZ
	PXwnLVgMzf1mxUokk/aHh1ZKrFhqq/QABZIBTxpVE2FEBlSimyF2gv4+S1IC+al5btgE
	ss7I+78Rv9eWC6hGSbVW4jolFu0pdMQKxkl+Q14+lv5cHOGg64ZCAZpVGv2huWHCWPKb
	Gu+Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id;
	bh=dMrQaQ4DFaZ/j91ra6Pi9F1kSpAR0Cru8dvnNuhJRsc=;
	b=C0bwEyc4TzLo1CggfuwZesoZqmcPMx4Uvx0qFolbJYWF35KubUeW2F3pC41IMmX4JL
	LyalhledkC5dMn/uf+g/SdTBGHQ6nye+9QgXAGltTq3k9fDK1a3Wm4EXNfMXhOyia7R5
	/28ew7urVQ0wHWR58Ui4ciokktNVC6403jKC/GGDrMmOpcg1i6YBr66ulRT+V7aG0Dos
	iYpw/OXGz35JomSQ5IN0JncUG+hCFqI92JYgq/1vC2J02sIMts0MHe9YW0VcjHm8SvMn
	ZZqlk5GHZxh7JLFL+IREcPvaUKPIYXoNouovn69yyMHc4gE0+IujX/ogfa6ZpThU18Jo
	nBVQ==
X-Gm-Message-State: AIkVDXJI+DWu3lpv7PFrAp+KSSuFi7r17gAFGWWkvVPOsPDtqLsqvc9pqVcpHqIYx7RnTQ==
X-Received: by 10.99.244.17 with SMTP id g17mr29381986pgi.80.1484397182795; 
	Sat, 14 Jan 2017 04:33:02 -0800 (PST)
Received: from gmail.com ([2405:204:5003:6557:e4a1:7320:3c7c:3a1b])
	by smtp.gmail.com with ESMTPSA id
	c15sm35241941pfd.36.2017.01.14.04.32.57
	(version=TLS1 cipher=AES128-SHA bits=128/128);
	Sat, 14 Jan 2017 04:33:01 -0800 (PST)
Received: by gmail.com (sSMTP sendmail emulation);
	Sat, 14 Jan 2017 18:02:53 +0530
From: Bhumika Goyal &lt;bhumirks@gmail.com&gt;
To: julia.lawall@lip6.fr, davem@davemloft.net,
	sparclinux@vger.kernel.org, keescook@chromium.org,
	linux-kernel@vger.kernel.org
Cc: Bhumika Goyal &lt;bhumirks@gmail.com&gt;
Subject: [PATCH] sparc32: mm: srmmu: add __ro_after_init to
	sparc32_cachetlb_ops structures
Date: Sat, 14 Jan 2017 18:01:54 +0530
Message-Id: &lt;1484397114-7705-1-git-send-email-bhumirks@gmail.com&gt;
X-Mailer: git-send-email 1.9.1
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=149951">Bhumika Goyal</a> - Jan. 14, 2017, 12:31 p.m.</div>
<pre class="content">
The objects viking_ops, viking_sun4d_smp_ops and smp_cachetlb_ops of
type sparc32_cachetlb_ops are not modified anywhere after getting modified 
in the init functions. Inside init their reference is also stored in a
pointer of type const struct sparc32_cachetlb_ops *. So these structures 
are never modified after init, therefore add __ro_after to the declaration 
of these structures.
<span class="signed-off-by">
Signed-off-by: Bhumika Goyal &lt;bhumirks@gmail.com&gt;</span>
---
Instead of using __ro_after_init for the viking_* structures, should I 
use const by making two copies of these structures with different field values? 

 arch/sparc/mm/srmmu.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=38541">Kees Cook</a> - Jan. 17, 2017, 5:33 p.m.</div>
<pre class="content">
On Sat, Jan 14, 2017 at 4:31 AM, Bhumika Goyal &lt;bhumirks@gmail.com&gt; wrote:
<span class="quote">&gt; The objects viking_ops, viking_sun4d_smp_ops and smp_cachetlb_ops of</span>
<span class="quote">&gt; type sparc32_cachetlb_ops are not modified anywhere after getting modified</span>
<span class="quote">&gt; in the init functions. Inside init their reference is also stored in a</span>
<span class="quote">&gt; pointer of type const struct sparc32_cachetlb_ops *. So these structures</span>
<span class="quote">&gt; are never modified after init, therefore add __ro_after to the declaration</span>
<span class="quote">&gt; of these structures.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Signed-off-by: Bhumika Goyal &lt;bhumirks@gmail.com&gt;</span>
<span class="reviewed-by">
Reviewed-by: Kees Cook &lt;keescook@chromium.org&gt;</span>

Yay more ro_after_init! :)

-Kees
<span class="quote">
&gt; ---</span>
<span class="quote">&gt; Instead of using __ro_after_init for the viking_* structures, should I</span>
<span class="quote">&gt; use const by making two copies of these structures with different field values?</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;  arch/sparc/mm/srmmu.c | 6 +++---</span>
<span class="quote">&gt;  1 file changed, 3 insertions(+), 3 deletions(-)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; diff --git a/arch/sparc/mm/srmmu.c b/arch/sparc/mm/srmmu.c</span>
<span class="quote">&gt; index c7f2a52..def82f6 100644</span>
<span class="quote">&gt; --- a/arch/sparc/mm/srmmu.c</span>
<span class="quote">&gt; +++ b/arch/sparc/mm/srmmu.c</span>
<span class="quote">&gt; @@ -1444,7 +1444,7 @@ static void poke_viking(void)</span>
<span class="quote">&gt;         srmmu_set_mmureg(mreg);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; -static struct sparc32_cachetlb_ops viking_ops = {</span>
<span class="quote">&gt; +static struct sparc32_cachetlb_ops viking_ops __ro_after_init = {</span>
<span class="quote">&gt;         .cache_all      = viking_flush_cache_all,</span>
<span class="quote">&gt;         .cache_mm       = viking_flush_cache_mm,</span>
<span class="quote">&gt;         .cache_page     = viking_flush_cache_page,</span>
<span class="quote">&gt; @@ -1475,7 +1475,7 @@ static void poke_viking(void)</span>
<span class="quote">&gt;   * flushes going at once will require SMP locking anyways so there&#39;s</span>
<span class="quote">&gt;   * no real value in trying any harder than this.</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; -static struct sparc32_cachetlb_ops viking_sun4d_smp_ops = {</span>
<span class="quote">&gt; +static struct sparc32_cachetlb_ops viking_sun4d_smp_ops __ro_after_init = {</span>
<span class="quote">&gt;         .cache_all      = viking_flush_cache_all,</span>
<span class="quote">&gt;         .cache_mm       = viking_flush_cache_mm,</span>
<span class="quote">&gt;         .cache_page     = viking_flush_cache_page,</span>
<span class="quote">&gt; @@ -1759,7 +1759,7 @@ static void smp_flush_sig_insns(struct mm_struct *mm, unsigned long insn_addr)</span>
<span class="quote">&gt;         local_ops-&gt;sig_insns(mm, insn_addr);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; -static struct sparc32_cachetlb_ops smp_cachetlb_ops = {</span>
<span class="quote">&gt; +static struct sparc32_cachetlb_ops smp_cachetlb_ops __ro_after_init = {</span>
<span class="quote">&gt;         .cache_all      = smp_flush_cache_all,</span>
<span class="quote">&gt;         .cache_mm       = smp_flush_cache_mm,</span>
<span class="quote">&gt;         .cache_page     = smp_flush_cache_page,</span>
<span class="quote">&gt; --</span>
<span class="quote">&gt; 1.9.1</span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=129">David Miller</a> - Jan. 30, 2017, 10:33 p.m.</div>
<pre class="content">
<span class="from">From: Bhumika Goyal &lt;bhumirks@gmail.com&gt;</span>
Date: Sat, 14 Jan 2017 18:01:54 +0530
<span class="quote">
&gt; The objects viking_ops, viking_sun4d_smp_ops and smp_cachetlb_ops of</span>
<span class="quote">&gt; type sparc32_cachetlb_ops are not modified anywhere after getting modified </span>
<span class="quote">&gt; in the init functions. Inside init their reference is also stored in a</span>
<span class="quote">&gt; pointer of type const struct sparc32_cachetlb_ops *. So these structures </span>
<span class="quote">&gt; are never modified after init, therefore add __ro_after to the declaration </span>
<span class="quote">&gt; of these structures.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Bhumika Goyal &lt;bhumirks@gmail.com&gt;</span>

Applied, thanks.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/sparc/mm/srmmu.c b/arch/sparc/mm/srmmu.c</span>
<span class="p_header">index c7f2a52..def82f6 100644</span>
<span class="p_header">--- a/arch/sparc/mm/srmmu.c</span>
<span class="p_header">+++ b/arch/sparc/mm/srmmu.c</span>
<span class="p_chunk">@@ -1444,7 +1444,7 @@</span> <span class="p_context"> static void poke_viking(void)</span>
 	srmmu_set_mmureg(mreg);
 }
 
<span class="p_del">-static struct sparc32_cachetlb_ops viking_ops = {</span>
<span class="p_add">+static struct sparc32_cachetlb_ops viking_ops __ro_after_init = {</span>
 	.cache_all	= viking_flush_cache_all,
 	.cache_mm	= viking_flush_cache_mm,
 	.cache_page	= viking_flush_cache_page,
<span class="p_chunk">@@ -1475,7 +1475,7 @@</span> <span class="p_context"> static void poke_viking(void)</span>
  * flushes going at once will require SMP locking anyways so there&#39;s
  * no real value in trying any harder than this.
  */
<span class="p_del">-static struct sparc32_cachetlb_ops viking_sun4d_smp_ops = {</span>
<span class="p_add">+static struct sparc32_cachetlb_ops viking_sun4d_smp_ops __ro_after_init = {</span>
 	.cache_all	= viking_flush_cache_all,
 	.cache_mm	= viking_flush_cache_mm,
 	.cache_page	= viking_flush_cache_page,
<span class="p_chunk">@@ -1759,7 +1759,7 @@</span> <span class="p_context"> static void smp_flush_sig_insns(struct mm_struct *mm, unsigned long insn_addr)</span>
 	local_ops-&gt;sig_insns(mm, insn_addr);
 }
 
<span class="p_del">-static struct sparc32_cachetlb_ops smp_cachetlb_ops = {</span>
<span class="p_add">+static struct sparc32_cachetlb_ops smp_cachetlb_ops __ro_after_init = {</span>
 	.cache_all	= smp_flush_cache_all,
 	.cache_mm	= smp_flush_cache_mm,
 	.cache_page	= smp_flush_cache_page,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



