
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>drivers: iommu: constify iommu_gather_ops structures - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    drivers: iommu: constify iommu_gather_ops structures</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=149951">Bhumika Goyal</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 25, 2016, 3:33 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1477409624-30949-1-git-send-email-bhumirks@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9394919/mbox/"
   >mbox</a>
|
   <a href="/patch/9394919/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9394919/">/patch/9394919/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	69DE760231 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 25 Oct 2016 15:34:19 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5CBA02966B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 25 Oct 2016 15:34:19 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 5130829669; Tue, 25 Oct 2016 15:34:19 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, FREEMAIL_FROM,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E9B252966D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 25 Oct 2016 15:34:18 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S941744AbcJYPeN (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 25 Oct 2016 11:34:13 -0400
Received: from mail-pf0-f194.google.com ([209.85.192.194]:34507 &quot;EHLO
	mail-pf0-f194.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932389AbcJYPeL (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 25 Oct 2016 11:34:11 -0400
Received: by mail-pf0-f194.google.com with SMTP id 128so20003300pfz.1
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Tue, 25 Oct 2016 08:34:10 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=from:to:cc:subject:date:message-id;
	bh=X8UebxvJnxLLO8n34OpLLJiWbOfnKVPd+o/1NLJWmJ0=;
	b=cueNNvv5sb7CyCZafbY9wvwRzOqA6g/zrVNI9ZLwy7JZjGgLaja4tq71FUUYQFYA4s
	30lnRW5ouZY6rlIVFpgpwhKo0s97fRnlOqnjIWma5BV/O3GGAM90fK+P3mDVcAIbBboP
	+j+ToUw70hpI8YBkxbBaNXfHR3azI0c5+8Q07vr3K4F9EY5kdmJ59/0OQUIo+AJVNcpc
	9C5+zjgdRYETZOBUY97gBgIzrMEIPBzbNfh460oYfz09BDa74Vit30hjFc/V6RZSqQX/
	4knEhcmamNhGMiKDpoNfuQ4UiqGZBFtw8o+j5sb8kSJPaBkBQOwCSkYDO3jfrud+UnGG
	W7Sg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20130820;
	h=x-gm-message-state:from:to:cc:subject:date:message-id;
	bh=X8UebxvJnxLLO8n34OpLLJiWbOfnKVPd+o/1NLJWmJ0=;
	b=AFqRuYX6bCetNJsTyT4DtyIyP94azmx/zBUqRIJ5bZLiYjgpI7+xssifQ+jAyuj11N
	rVxQPhFxJ2t2Eb8qPNhNQu82DN5dsQZ789DfinvBhhIfc9hi47qWV7JPH1fgv67Fig7b
	871igEKszNKrJ6mb8hL1w/PPfn6p1Db5JutS25G1PnGZJS3DYWc6JIX6D16OFZU5mMCJ
	V5G74sFHywCpAyY2KX02I5WafE95/LFZFxZYVsK042ywO0iEpTDKMFmLbgPVc6FgjO2c
	eu/ymkxBuFd8TOdr02V+iJb+hp0rBXGTQf6Z/zRXbMD5neJnwez72YS9reQYs+hDqwcs
	Bctw==
X-Gm-Message-State: ABUngvcmhv7W3bX8JBeUju3p5p6eNzeSX930umLGJ6TL4Po1zMutcWHS8Dedqf+d+0HXrA==
X-Received: by 10.98.29.131 with SMTP id d125mr40461992pfd.111.1477409645329;
	Tue, 25 Oct 2016 08:34:05 -0700 (PDT)
Received: from gmail.com ([106.215.188.191])
	by smtp.gmail.com with ESMTPSA id
	z11sm34305629pfd.49.2016.10.25.08.33.55
	(version=TLS1 cipher=AES128-SHA bits=128/128);
	Tue, 25 Oct 2016 08:34:04 -0700 (PDT)
Received: by gmail.com (sSMTP sendmail emulation);
	Tue, 25 Oct 2016 21:03:45 +0530
From: Bhumika Goyal &lt;bhumirks@gmail.com&gt;
To: will.deacon@arm.com, robin.murphy@arm.com, joro@8bytes.org,
	linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
	iommu@lists.linux-foundation.org, julia.lawall@lip6.fr
Cc: Bhumika Goyal &lt;bhumirks@gmail.com&gt;
Subject: [PATCH] drivers: iommu: constify iommu_gather_ops structures
Date: Tue, 25 Oct 2016 21:03:44 +0530
Message-Id: &lt;1477409624-30949-1-git-send-email-bhumirks@gmail.com&gt;
X-Mailer: git-send-email 1.9.1
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=149951">Bhumika Goyal</a> - Oct. 25, 2016, 3:33 p.m.</div>
<pre class="content">
Check for iommu_gather_ops structures that are only stored in the tlb
field of an io_pgtable_cfg structure. The tlb field is of type
const struct iommu_gather_ops *, so iommu_gather_ops structures
having this property can be declared as const.
Done using Coccinelle:

@r1 disable optional_qualifier @
identifier i;
position p;
@@
static struct iommu_gather_ops i@p = {...};

@ok1@
identifier r1.i;
position p;
struct io_pgtable_cfg q;
@@
q.tlb=&amp;i@p;

@bad@
position p!={r1.p,ok1.p};
identifier r1.i;
@@
i@p

@depends on !bad disable optional_qualifier@
identifier r1.i;
@@
static
+const
struct iommu_gather_ops i={...};

@depends on !bad disable optional_qualifier@
identifier r1.i;
@@
+const
struct iommu_gather_ops i;
<span class="signed-off-by">
Signed-off-by: Bhumika Goyal &lt;bhumirks@gmail.com&gt;</span>
---
 drivers/iommu/io-pgtable-arm-v7s.c | 2 +-
 drivers/iommu/ipmmu-vmsa.c         | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37481">Julia Lawall</a> - Oct. 25, 2016, 3:46 p.m.</div>
<pre class="content">
On Tue, 25 Oct 2016, Bhumika Goyal wrote:
<span class="quote">
&gt; Check for iommu_gather_ops structures that are only stored in the tlb</span>
<span class="quote">&gt; field of an io_pgtable_cfg structure. The tlb field is of type</span>
<span class="quote">&gt; const struct iommu_gather_ops *, so iommu_gather_ops structures</span>
<span class="quote">&gt; having this property can be declared as const.</span>
<span class="quote">&gt; Done using Coccinelle:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; @r1 disable optional_qualifier @</span>
<span class="quote">&gt; identifier i;</span>
<span class="quote">&gt; position p;</span>
<span class="quote">&gt; @@</span>
<span class="quote">&gt; static struct iommu_gather_ops i@p = {...};</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; @ok1@</span>
<span class="quote">&gt; identifier r1.i;</span>
<span class="quote">&gt; position p;</span>
<span class="quote">&gt; struct io_pgtable_cfg q;</span>
<span class="quote">&gt; @@</span>
<span class="quote">&gt; q.tlb=&amp;i@p;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; @bad@</span>
<span class="quote">&gt; position p!={r1.p,ok1.p};</span>
<span class="quote">&gt; identifier r1.i;</span>
<span class="quote">&gt; @@</span>
<span class="quote">&gt; i@p</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; @depends on !bad disable optional_qualifier@</span>
<span class="quote">&gt; identifier r1.i;</span>
<span class="quote">&gt; @@</span>
<span class="quote">&gt; static</span>
<span class="quote">&gt; +const</span>
<span class="quote">&gt; struct iommu_gather_ops i={...};</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; @depends on !bad disable optional_qualifier@</span>
<span class="quote">&gt; identifier r1.i;</span>
<span class="quote">&gt; @@</span>
<span class="quote">&gt; +const</span>
<span class="quote">&gt; struct iommu_gather_ops i;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Signed-off-by: Bhumika Goyal &lt;bhumirks@gmail.com&gt;</span>
<span class="acked-by">
Acked-by: Julia Lawall &lt;julia.lawall@lip6.fr&gt;</span>
<span class="quote">
&gt; ---</span>
<span class="quote">&gt;  drivers/iommu/io-pgtable-arm-v7s.c | 2 +-</span>
<span class="quote">&gt;  drivers/iommu/ipmmu-vmsa.c         | 2 +-</span>
<span class="quote">&gt;  2 files changed, 2 insertions(+), 2 deletions(-)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; diff --git a/drivers/iommu/io-pgtable-arm-v7s.c b/drivers/iommu/io-pgtable-arm-v7s.c</span>
<span class="quote">&gt; index f50e51c..1465bbc 100644</span>
<span class="quote">&gt; --- a/drivers/iommu/io-pgtable-arm-v7s.c</span>
<span class="quote">&gt; +++ b/drivers/iommu/io-pgtable-arm-v7s.c</span>
<span class="quote">&gt; @@ -741,7 +741,7 @@ static void dummy_tlb_sync(void *cookie)</span>
<span class="quote">&gt;  	WARN_ON(cookie != cfg_cookie);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; -static struct iommu_gather_ops dummy_tlb_ops = {</span>
<span class="quote">&gt; +static const struct iommu_gather_ops dummy_tlb_ops = {</span>
<span class="quote">&gt;  	.tlb_flush_all	= dummy_tlb_flush_all,</span>
<span class="quote">&gt;  	.tlb_add_flush	= dummy_tlb_add_flush,</span>
<span class="quote">&gt;  	.tlb_sync	= dummy_tlb_sync,</span>
<span class="quote">&gt; diff --git a/drivers/iommu/ipmmu-vmsa.c b/drivers/iommu/ipmmu-vmsa.c</span>
<span class="quote">&gt; index ace331d..b8bcf18 100644</span>
<span class="quote">&gt; --- a/drivers/iommu/ipmmu-vmsa.c</span>
<span class="quote">&gt; +++ b/drivers/iommu/ipmmu-vmsa.c</span>
<span class="quote">&gt; @@ -283,7 +283,7 @@ static void ipmmu_tlb_add_flush(unsigned long iova, size_t size,</span>
<span class="quote">&gt;  	/* The hardware doesn&#39;t support selective TLB flush. */</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; -static struct iommu_gather_ops ipmmu_gather_ops = {</span>
<span class="quote">&gt; +static const struct iommu_gather_ops ipmmu_gather_ops = {</span>
<span class="quote">&gt;  	.tlb_flush_all = ipmmu_tlb_flush_all,</span>
<span class="quote">&gt;  	.tlb_add_flush = ipmmu_tlb_add_flush,</span>
<span class="quote">&gt;  	.tlb_sync = ipmmu_tlb_flush_all,</span>
<span class="quote">&gt; --</span>
<span class="quote">&gt; 1.9.1</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/iommu/io-pgtable-arm-v7s.c b/drivers/iommu/io-pgtable-arm-v7s.c</span>
<span class="p_header">index f50e51c..1465bbc 100644</span>
<span class="p_header">--- a/drivers/iommu/io-pgtable-arm-v7s.c</span>
<span class="p_header">+++ b/drivers/iommu/io-pgtable-arm-v7s.c</span>
<span class="p_chunk">@@ -741,7 +741,7 @@</span> <span class="p_context"> static void dummy_tlb_sync(void *cookie)</span>
 	WARN_ON(cookie != cfg_cookie);
 }
 
<span class="p_del">-static struct iommu_gather_ops dummy_tlb_ops = {</span>
<span class="p_add">+static const struct iommu_gather_ops dummy_tlb_ops = {</span>
 	.tlb_flush_all	= dummy_tlb_flush_all,
 	.tlb_add_flush	= dummy_tlb_add_flush,
 	.tlb_sync	= dummy_tlb_sync,
<span class="p_header">diff --git a/drivers/iommu/ipmmu-vmsa.c b/drivers/iommu/ipmmu-vmsa.c</span>
<span class="p_header">index ace331d..b8bcf18 100644</span>
<span class="p_header">--- a/drivers/iommu/ipmmu-vmsa.c</span>
<span class="p_header">+++ b/drivers/iommu/ipmmu-vmsa.c</span>
<span class="p_chunk">@@ -283,7 +283,7 @@</span> <span class="p_context"> static void ipmmu_tlb_add_flush(unsigned long iova, size_t size,</span>
 	/* The hardware doesn&#39;t support selective TLB flush. */
 }
 
<span class="p_del">-static struct iommu_gather_ops ipmmu_gather_ops = {</span>
<span class="p_add">+static const struct iommu_gather_ops ipmmu_gather_ops = {</span>
 	.tlb_flush_all = ipmmu_tlb_flush_all,
 	.tlb_add_flush = ipmmu_tlb_add_flush,
 	.tlb_sync = ipmmu_tlb_flush_all,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



