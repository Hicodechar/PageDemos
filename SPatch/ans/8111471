
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>numa: fix /proc/&lt;pid&gt;/numa_maps for hugetlbfs on s390 - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    numa: fix /proc/&lt;pid&gt;/numa_maps for hugetlbfs on s390</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=1830">Michael Holzheu</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 25, 2016, 4:30 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1453739442-57738-1-git-send-email-holzheu@linux.vnet.ibm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8111471/mbox/"
   >mbox</a>
|
   <a href="/patch/8111471/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8111471/">/patch/8111471/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 684FFBEEE5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 25 Jan 2016 16:31:10 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id CBA87202FF
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 25 Jan 2016 16:31:09 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 28828202DD
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 25 Jan 2016 16:31:09 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1757391AbcAYQbG (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 25 Jan 2016 11:31:06 -0500
Received: from e06smtp14.uk.ibm.com ([195.75.94.110]:39991 &quot;EHLO
	e06smtp14.uk.ibm.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1756976AbcAYQbB (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 25 Jan 2016 11:31:01 -0500
Received: from localhost
	by e06smtp14.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use
	Only! Violators will be prosecuted
	for &lt;linux-kernel@vger.kernel.org&gt; from &lt;holzheu@linux.vnet.ibm.com&gt;; 
	Mon, 25 Jan 2016 16:31:00 -0000
Received: from d06dlp02.portsmouth.uk.ibm.com (9.149.20.14)
	by e06smtp14.uk.ibm.com (192.168.101.144) with IBM ESMTP SMTP
	Gateway: Authorized Use Only! Violators will be prosecuted; 
	Mon, 25 Jan 2016 16:30:58 -0000
X-IBM-Helo: d06dlp02.portsmouth.uk.ibm.com
X-IBM-MailFrom: holzheu@linux.vnet.ibm.com
X-IBM-RcptTo: linux-kernel@vger.kernel.org;linux-mm@vger.kernel.org
Received: from b06cxnps4075.portsmouth.uk.ibm.com
	(d06relay12.portsmouth.uk.ibm.com [9.149.109.197])
	by d06dlp02.portsmouth.uk.ibm.com (Postfix) with ESMTP id
	A06EB2190046; Mon, 25 Jan 2016 16:30:45 +0000 (GMT)
Received: from d06av09.portsmouth.uk.ibm.com (d06av09.portsmouth.uk.ibm.com
	[9.149.37.250])
	by b06cxnps4075.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with
	ESMTP id u0PGUwN16357342; Mon, 25 Jan 2016 16:30:58 GMT
Received: from d06av09.portsmouth.uk.ibm.com (localhost [127.0.0.1])
	by d06av09.portsmouth.uk.ibm.com (8.14.4/8.14.4/NCO v10.0 AVout) with
	ESMTP id u0PGUvha017357; Mon, 25 Jan 2016 09:30:57 -0700
Received: from tuxmaker.boeblingen.de.ibm.com
	(tuxmaker.boeblingen.de.ibm.com [9.152.85.9])
	by d06av09.portsmouth.uk.ibm.com (8.14.4/8.14.4/NCO v10.0 AVin) with
	ESMTP id u0PGUvxk017316
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA256 bits=256 verify=NO);
	Mon, 25 Jan 2016 09:30:57 -0700
From: Michael Holzheu &lt;holzheu@linux.vnet.ibm.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Martin Schwidefsky &lt;schwidefsky@de.ibm.com&gt;,
	Heiko Carstens &lt;heiko.carstens@de.ibm.com&gt;,
	Gerald Schaefer &lt;gerald.schaefer@de.ibm.com&gt;,
	linux-mm@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH] numa: fix /proc/&lt;pid&gt;/numa_maps for hugetlbfs on s390
Date: Mon, 25 Jan 2016 17:30:42 +0100
Message-Id: &lt;1453739442-57738-1-git-send-email-holzheu@linux.vnet.ibm.com&gt;
X-Mailer: git-send-email 2.3.9
X-TM-AS-MML: disable
X-Content-Scanned: Fidelis XPS MAILER
x-cbid: 16012516-0017-0000-0000-000006F2A0CE
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1830">Michael Holzheu</a> - Jan. 25, 2016, 4:30 p.m.</div>
<pre class="content">
When working with hugetlbfs ptes (which are actually pmds) is not
valid to directly use pte functions like pte_present() because the
hardware bit layout of pmds and ptes can be different. This is the
case on s390. Therefore we have to convert the hugetlbfs ptes first
into a valid pte encoding with huge_ptep_get().

Currently the /proc/&lt;pid&gt;/numa_maps code uses hugetlbfs ptes without
huge_ptep_get(). On s390 this leads to the following two problems:

1) The pte_present() function returns false (instead of true) for
   PROT_NONE hugetlb ptes. Therefore PROT_NONE vmas are missing
   completely in the &quot;numa_maps&quot; output.

2) The pte_dirty() function always returns false for all hugetlb ptes.
   Therefore these pages are reported as &quot;mapped=xxx&quot; instead of
   &quot;dirty=xxx&quot;.

Therefore use huge_ptep_get() to correctly convert the hugetlb ptes.
<span class="reviewed-by">
Reviewed-by: Gerald Schaefer &lt;gerald.schaefer@de.ibm.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Michael Holzheu &lt;holzheu@linux.vnet.ibm.com&gt;</span>
---
 fs/proc/task_mmu.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41">Andrew Morton</a> - Jan. 25, 2016, 10:51 p.m.</div>
<pre class="content">
On Mon, 25 Jan 2016 17:30:42 +0100 Michael Holzheu &lt;holzheu@linux.vnet.ibm.com&gt; wrote:
<span class="quote">
&gt; When working with hugetlbfs ptes (which are actually pmds) is not</span>
<span class="quote">&gt; valid to directly use pte functions like pte_present() because the</span>
<span class="quote">&gt; hardware bit layout of pmds and ptes can be different. This is the</span>
<span class="quote">&gt; case on s390. Therefore we have to convert the hugetlbfs ptes first</span>
<span class="quote">&gt; into a valid pte encoding with huge_ptep_get().</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Currently the /proc/&lt;pid&gt;/numa_maps code uses hugetlbfs ptes without</span>
<span class="quote">&gt; huge_ptep_get(). On s390 this leads to the following two problems:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; 1) The pte_present() function returns false (instead of true) for</span>
<span class="quote">&gt;    PROT_NONE hugetlb ptes. Therefore PROT_NONE vmas are missing</span>
<span class="quote">&gt;    completely in the &quot;numa_maps&quot; output.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; 2) The pte_dirty() function always returns false for all hugetlb ptes.</span>
<span class="quote">&gt;    Therefore these pages are reported as &quot;mapped=xxx&quot; instead of</span>
<span class="quote">&gt;    &quot;dirty=xxx&quot;.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Therefore use huge_ptep_get() to correctly convert the hugetlb ptes.</span>

I&#39;m aiming this at 4.5 only.  Please let me know if you think that a
-stable backport is warranted.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=1830">Michael Holzheu</a> - Jan. 26, 2016, 10:56 a.m.</div>
<pre class="content">
On Mon, 25 Jan 2016 14:51:16 -0800
Andrew Morton &lt;akpm@linux-foundation.org&gt; wrote:
<span class="quote">
&gt; On Mon, 25 Jan 2016 17:30:42 +0100 Michael Holzheu &lt;holzheu@linux.vnet.ibm.com&gt; wrote:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; When working with hugetlbfs ptes (which are actually pmds) is not</span>
<span class="quote">&gt; &gt; valid to directly use pte functions like pte_present() because the</span>
<span class="quote">&gt; &gt; hardware bit layout of pmds and ptes can be different. This is the</span>
<span class="quote">&gt; &gt; case on s390. Therefore we have to convert the hugetlbfs ptes first</span>
<span class="quote">&gt; &gt; into a valid pte encoding with huge_ptep_get().</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Currently the /proc/&lt;pid&gt;/numa_maps code uses hugetlbfs ptes without</span>
<span class="quote">&gt; &gt; huge_ptep_get(). On s390 this leads to the following two problems:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; 1) The pte_present() function returns false (instead of true) for</span>
<span class="quote">&gt; &gt;    PROT_NONE hugetlb ptes. Therefore PROT_NONE vmas are missing</span>
<span class="quote">&gt; &gt;    completely in the &quot;numa_maps&quot; output.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; 2) The pte_dirty() function always returns false for all hugetlb ptes.</span>
<span class="quote">&gt; &gt;    Therefore these pages are reported as &quot;mapped=xxx&quot; instead of</span>
<span class="quote">&gt; &gt;    &quot;dirty=xxx&quot;.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Therefore use huge_ptep_get() to correctly convert the hugetlb ptes.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I&#39;m aiming this at 4.5 only.  Please let me know if you think that a</span>
<span class="quote">&gt; -stable backport is warranted.</span>

S390 has NUMA support since kernel 4.3, therefore:

Cc: stable@vger.kernel.org # v4.3+ 

Michael
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/fs/proc/task_mmu.c b/fs/proc/task_mmu.c</span>
<span class="p_header">index 85d16c6..4a0c31f 100644</span>
<span class="p_header">--- a/fs/proc/task_mmu.c</span>
<span class="p_header">+++ b/fs/proc/task_mmu.c</span>
<span class="p_chunk">@@ -1552,18 +1552,19 @@</span> <span class="p_context"> static int gather_pte_stats(pmd_t *pmd, unsigned long addr,</span>
 static int gather_hugetlb_stats(pte_t *pte, unsigned long hmask,
 		unsigned long addr, unsigned long end, struct mm_walk *walk)
 {
<span class="p_add">+	pte_t huge_pte = huge_ptep_get(pte);</span>
 	struct numa_maps *md;
 	struct page *page;
 
<span class="p_del">-	if (!pte_present(*pte))</span>
<span class="p_add">+	if (!pte_present(huge_pte))</span>
 		return 0;
 
<span class="p_del">-	page = pte_page(*pte);</span>
<span class="p_add">+	page = pte_page(huge_pte);</span>
 	if (!page)
 		return 0;
 
 	md = walk-&gt;private;
<span class="p_del">-	gather_stats(page, md, pte_dirty(*pte), 1);</span>
<span class="p_add">+	gather_stats(page, md, pte_dirty(huge_pte), 1);</span>
 	return 0;
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



