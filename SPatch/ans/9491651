
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,4/5] arm64: Use __tlbi_dsb() macros in KVM code - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,4/5] arm64: Use __tlbi_dsb() macros in KVM code</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=41311">Christopher Covington</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 29, 2016, 10:43 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161229224335.13531-4-cov@codeaurora.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9491651/mbox/"
   >mbox</a>
|
   <a href="/patch/9491651/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9491651/">/patch/9491651/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	2BFA262AB9 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 29 Dec 2016 22:45:00 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 19B201FF15
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 29 Dec 2016 22:45:00 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 0E6CA20649; Thu, 29 Dec 2016 22:45:00 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 40EF22018E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 29 Dec 2016 22:44:59 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753723AbcL2Wow (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 29 Dec 2016 17:44:52 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:46646 &quot;EHLO
	smtp.codeaurora.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753159AbcL2Wnu (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 29 Dec 2016 17:43:50 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
	id 2B1266145E; Thu, 29 Dec 2016 22:43:49 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
	s=default; t=1483051430;
	bh=6nCHXgL85G2nvstE8nTu+CIkcaqL3o+oNQaHNnvMeGo=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=VezmGSR2++JKEuPqPxfEIaO7EZrmJy+bP0ipdj+d2nYc0ZRp9HwctLDbvPrGPEM9d
	6YuBPywS/OD8iOo6IsmxfdZV1bv9S8/jLDeDmeptRu+Igj0zAfxleNTLBdD+6LxyyX
	MZnbn7GcaX3mlR5L5DoPdNAvE+a1LRCs1C9A5uBs=
Received: from illium.qualcomm.com (global_nat1_iad_fw.qualcomm.com
	[129.46.232.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
	(No client certificate requested)
	(Authenticated sender: cov@smtp.codeaurora.org)
	by smtp.codeaurora.org (Postfix) with ESMTPSA id 1689F6137F;
	Thu, 29 Dec 2016 22:43:48 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
	s=default; t=1483051429;
	bh=6nCHXgL85G2nvstE8nTu+CIkcaqL3o+oNQaHNnvMeGo=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=JgS58IWjgPfa27QWI348/EwezvjwpY9AQzeGbwKdEq1NCMQ9EcOuwpOP76uSu1lYV
	6x7YK5HjwtrikACe3HjxfI5NmH6jMy1OIqsZ1hEuO6JikZ3x5WBUx1X2D8/h9H67wp
	X9a1TtutyhnCCzXtwnqYAJIMCo2AKDyiCfeL3nXw=
DMARC-Filter: OpenDMARC Filter v1.3.1 smtp.codeaurora.org 1689F6137F
Authentication-Results: pdx-caf-mail.web.codeaurora.org;
	dmarc=none header.from=codeaurora.org
Authentication-Results: pdx-caf-mail.web.codeaurora.org;
	spf=pass smtp.mailfrom=cov@codeaurora.org
From: Christopher Covington &lt;cov@codeaurora.org&gt;
To: Paolo Bonzini &lt;pbonzini@redhat.com&gt;,
	=?UTF-8?q?Radim=20Kr=C4=8Dm=C3=A1=C5=99?= &lt;rkrcmar@redhat.com&gt;,
	Christoffer Dall &lt;christoffer.dall@linaro.org&gt;,
	Marc Zyngier &lt;marc.zyngier@arm.com&gt;,
	Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	Will Deacon &lt;will.deacon@arm.com&gt;, kvm@vger.kernel.org,
	linux-arm-kernel@lists.infradead.org, kvmarm@lists.cs.columbia.edu,
	linux-kernel@vger.kernel.org, shankerd@codeaurora.org,
	timur@codeaurora.org
Cc: Christopher Covington &lt;cov@codeaurora.org&gt;
Subject: [PATCH v2 4/5] arm64: Use __tlbi_dsb() macros in KVM code
Date: Thu, 29 Dec 2016 17:43:34 -0500
Message-Id: &lt;20161229224335.13531-4-cov@codeaurora.org&gt;
X-Mailer: git-send-email 2.9.3
In-Reply-To: &lt;20161229224335.13531-1-cov@codeaurora.org&gt;
References: &lt;20161229224335.13531-1-cov@codeaurora.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41311">Christopher Covington</a> - Dec. 29, 2016, 10:43 p.m.</div>
<pre class="content">
Refactor the KVM code to use the newly introduced __tlbi_dsb macros, which
will allow an errata workaround that repeats tlbi dsb sequences to only
change one location. This is not intended to change the generated assembly
and comparing before and after vmlinux objdump shows no functional changes.
<span class="signed-off-by">
Signed-off-by: Christopher Covington &lt;cov@codeaurora.org&gt;</span>
---
 arch/arm64/kvm/hyp/tlb.c | 17 ++++++-----------
 1 file changed, 6 insertions(+), 11 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=30282">Mark Rutland</a> - Jan. 3, 2017, 3:57 p.m.</div>
<pre class="content">
On Thu, Dec 29, 2016 at 05:43:34PM -0500, Christopher Covington wrote:
<span class="quote">&gt; Refactor the KVM code to use the newly introduced __tlbi_dsb macros, which</span>
<span class="quote">&gt; will allow an errata workaround that repeats tlbi dsb sequences to only</span>
<span class="quote">&gt; change one location. This is not intended to change the generated assembly</span>
<span class="quote">&gt; and comparing before and after vmlinux objdump shows no functional changes.</span>
<span class="quote">
&gt; @@ -40,9 +41,7 @@ void __hyp_text __kvm_tlb_flush_vmid_ipa(struct kvm *kvm, phys_addr_t ipa)</span>
<span class="quote">&gt;  	 * complete (S1 + S2) walk based on the old Stage-2 mapping if</span>
<span class="quote">&gt;  	 * the Stage-1 invalidation happened first.</span>
<span class="quote">&gt;  	 */</span>
<span class="quote">&gt; -	dsb(ish);</span>

Looks like this got accidentally removed. AFAICT it is still necessary.
<span class="quote">
&gt; -	asm volatile(&quot;tlbi vmalle1is&quot; : : );</span>
<span class="quote">&gt; -	dsb(ish);</span>
<span class="quote">&gt; +	__tlbi_dsb(vmalle1is, ish);</span>
<span class="quote">&gt;  	isb();</span>

Thanks,
Mark.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41311">Christopher Covington</a> - Jan. 6, 2017, 3:51 p.m.</div>
<pre class="content">
On 01/03/2017 10:57 AM, Mark Rutland wrote:
<span class="quote">&gt; On Thu, Dec 29, 2016 at 05:43:34PM -0500, Christopher Covington wrote:</span>
<span class="quote">&gt;&gt; Refactor the KVM code to use the newly introduced __tlbi_dsb macros, which</span>
<span class="quote">&gt;&gt; will allow an errata workaround that repeats tlbi dsb sequences to only</span>
<span class="quote">&gt;&gt; change one location. This is not intended to change the generated assembly</span>
<span class="quote">&gt;&gt; and comparing before and after vmlinux objdump shows no functional changes.</span>

@@ -32,7 +33,7 @@ void __hyp_text __kvm_tlb_flush_vmid_ipa(struct kvm *kvm, phys_addr_t ipa)
 	 * whole of Stage-1. Weep...
 	 */
 	ipa &gt;&gt;= 12;
-	asm volatile(&quot;tlbi ipas2e1is, %0&quot; : : &quot;r&quot; (ipa));
+	__tlbi_dsb(ipas2e1is, ish, ipa);
 
 	/*
 	 * We have to ensure completion of the invalidation at Stage-2,
<span class="quote">
&gt;&gt; @@ -40,9 +41,7 @@ void __hyp_text __kvm_tlb_flush_vmid_ipa(struct kvm *kvm, phys_addr_t ipa)</span>
<span class="quote">&gt;&gt;  	 * complete (S1 + S2) walk based on the old Stage-2 mapping if</span>
<span class="quote">&gt;&gt;  	 * the Stage-1 invalidation happened first.</span>
<span class="quote">&gt;&gt;  	 */</span>
<span class="quote">&gt;&gt; -	dsb(ish);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Looks like this got accidentally removed. AFAICT it is still necessary.</span>

Not removed, just hoisted above the comment block to the previous patch hunk.
<span class="quote">
&gt;&gt; -	asm volatile(&quot;tlbi vmalle1is&quot; : : );</span>
<span class="quote">&gt;&gt; -	dsb(ish);</span>
<span class="quote">&gt;&gt; +	__tlbi_dsb(vmalle1is, ish);</span>
<span class="quote">&gt;&gt;  	isb();</span>

Thanks,
Cov
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=30282">Mark Rutland</a> - Jan. 6, 2017, 4:05 p.m.</div>
<pre class="content">
On Fri, Jan 06, 2017 at 10:51:53AM -0500, Christopher Covington wrote:
<span class="quote">&gt; On 01/03/2017 10:57 AM, Mark Rutland wrote:</span>
<span class="quote">&gt; &gt; On Thu, Dec 29, 2016 at 05:43:34PM -0500, Christopher Covington wrote:</span>
<span class="quote">&gt; &gt;&gt; Refactor the KVM code to use the newly introduced __tlbi_dsb macros, which</span>
<span class="quote">&gt; &gt;&gt; will allow an errata workaround that repeats tlbi dsb sequences to only</span>
<span class="quote">&gt; &gt;&gt; change one location. This is not intended to change the generated assembly</span>
<span class="quote">&gt; &gt;&gt; and comparing before and after vmlinux objdump shows no functional changes.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; @@ -32,7 +33,7 @@ void __hyp_text __kvm_tlb_flush_vmid_ipa(struct kvm *kvm, phys_addr_t ipa)</span>
<span class="quote">&gt;  	 * whole of Stage-1. Weep...</span>
<span class="quote">&gt;  	 */</span>
<span class="quote">&gt;  	ipa &gt;&gt;= 12;</span>
<span class="quote">&gt; -	asm volatile(&quot;tlbi ipas2e1is, %0&quot; : : &quot;r&quot; (ipa));</span>
<span class="quote">&gt; +	__tlbi_dsb(ipas2e1is, ish, ipa);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	/*</span>
<span class="quote">&gt;  	 * We have to ensure completion of the invalidation at Stage-2,</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt;&gt; @@ -40,9 +41,7 @@ void __hyp_text __kvm_tlb_flush_vmid_ipa(struct kvm *kvm, phys_addr_t ipa)</span>
<span class="quote">&gt; &gt;&gt;  	 * complete (S1 + S2) walk based on the old Stage-2 mapping if</span>
<span class="quote">&gt; &gt;&gt;  	 * the Stage-1 invalidation happened first.</span>
<span class="quote">&gt; &gt;&gt;  	 */</span>
<span class="quote">&gt; &gt;&gt; -	dsb(ish);</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Looks like this got accidentally removed. AFAICT it is still necessary.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Not removed, just hoisted above the comment block to the previous patch hunk.</span>

Ah, sorry. I hadn&#39;t spotted that it got folded into the __tlbi_dsb()
above.

Given the comment was previously attached to the DSB, it might make more
sense to fold it into the prior comment block, so that it remains
attached to the __tlbi_dsb(), which guarantees the completion that the
comment describes.

Thanks,
Mark.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/kvm/hyp/tlb.c b/arch/arm64/kvm/hyp/tlb.c</span>
<span class="p_header">index 88e2f2b..66e3f72 100644</span>
<span class="p_header">--- a/arch/arm64/kvm/hyp/tlb.c</span>
<span class="p_header">+++ b/arch/arm64/kvm/hyp/tlb.c</span>
<span class="p_chunk">@@ -16,6 +16,7 @@</span> <span class="p_context"></span>
  */
 
 #include &lt;asm/kvm_hyp.h&gt;
<span class="p_add">+#include &lt;asm/tlbflush.h&gt;</span>
 
 void __hyp_text __kvm_tlb_flush_vmid_ipa(struct kvm *kvm, phys_addr_t ipa)
 {
<span class="p_chunk">@@ -32,7 +33,7 @@</span> <span class="p_context"> void __hyp_text __kvm_tlb_flush_vmid_ipa(struct kvm *kvm, phys_addr_t ipa)</span>
 	 * whole of Stage-1. Weep...
 	 */
 	ipa &gt;&gt;= 12;
<span class="p_del">-	asm volatile(&quot;tlbi ipas2e1is, %0&quot; : : &quot;r&quot; (ipa));</span>
<span class="p_add">+	__tlbi_dsb(ipas2e1is, ish, ipa);</span>
 
 	/*
 	 * We have to ensure completion of the invalidation at Stage-2,
<span class="p_chunk">@@ -40,9 +41,7 @@</span> <span class="p_context"> void __hyp_text __kvm_tlb_flush_vmid_ipa(struct kvm *kvm, phys_addr_t ipa)</span>
 	 * complete (S1 + S2) walk based on the old Stage-2 mapping if
 	 * the Stage-1 invalidation happened first.
 	 */
<span class="p_del">-	dsb(ish);</span>
<span class="p_del">-	asm volatile(&quot;tlbi vmalle1is&quot; : : );</span>
<span class="p_del">-	dsb(ish);</span>
<span class="p_add">+	__tlbi_dsb(vmalle1is, ish);</span>
 	isb();
 
 	write_sysreg(0, vttbr_el2);
<span class="p_chunk">@@ -57,8 +56,7 @@</span> <span class="p_context"> void __hyp_text __kvm_tlb_flush_vmid(struct kvm *kvm)</span>
 	write_sysreg(kvm-&gt;arch.vttbr, vttbr_el2);
 	isb();
 
<span class="p_del">-	asm volatile(&quot;tlbi vmalls12e1is&quot; : : );</span>
<span class="p_del">-	dsb(ish);</span>
<span class="p_add">+	__tlbi_dsb(vmalls12e1is, ish);</span>
 	isb();
 
 	write_sysreg(0, vttbr_el2);
<span class="p_chunk">@@ -72,8 +70,7 @@</span> <span class="p_context"> void __hyp_text __kvm_tlb_flush_local_vmid(struct kvm_vcpu *vcpu)</span>
 	write_sysreg(kvm-&gt;arch.vttbr, vttbr_el2);
 	isb();
 
<span class="p_del">-	asm volatile(&quot;tlbi vmalle1&quot; : : );</span>
<span class="p_del">-	dsb(nsh);</span>
<span class="p_add">+	__tlbi_dsb(vmalle1, nsh);</span>
 	isb();
 
 	write_sysreg(0, vttbr_el2);
<span class="p_chunk">@@ -82,7 +79,5 @@</span> <span class="p_context"> void __hyp_text __kvm_tlb_flush_local_vmid(struct kvm_vcpu *vcpu)</span>
 void __hyp_text __kvm_flush_vm_context(void)
 {
 	dsb(ishst);
<span class="p_del">-	asm volatile(&quot;tlbi alle1is	\n&quot;</span>
<span class="p_del">-		     &quot;ic ialluis	  &quot;: : );</span>
<span class="p_del">-	dsb(ish);</span>
<span class="p_add">+	__tlbi_asm_dsb(&quot;ic ialluis&quot;, alle1is, ish);</span>
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



