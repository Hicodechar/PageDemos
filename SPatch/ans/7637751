
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>paravirt: remove paravirt ops pmd_update[_defer] and pte_update_defer - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    paravirt: remove paravirt ops pmd_update[_defer] and pte_update_defer</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=100191">Juergen Gross</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 17, 2015, 2:51 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1447771879-1806-1-git-send-email-jgross@suse.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7637751/mbox/"
   >mbox</a>
|
   <a href="/patch/7637751/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7637751/">/patch/7637751/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 322DC9F1D3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 17 Nov 2015 14:51:45 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 169B820562
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 17 Nov 2015 14:51:44 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id DDE082055C
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 17 Nov 2015 14:51:42 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753509AbbKQOvg (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 17 Nov 2015 09:51:36 -0500
Received: from mx2.suse.de ([195.135.220.15]:52061 &quot;EHLO mx2.suse.de&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751957AbbKQOve (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 17 Nov 2015 09:51:34 -0500
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (charybdis-ext.suse.de [195.135.220.254])
	by mx2.suse.de (Postfix) with ESMTP id 3425AAAB2;
	Tue, 17 Nov 2015 14:51:09 +0000 (UTC)
From: Juergen Gross &lt;jgross@suse.com&gt;
To: linux-kernel@vger.kernel.org, x86@kernel.org, hpa@zytor.com,
	tglx@linutronix.de, mingo@redhat.com, jeremy@goop.org,
	chrisw@sous-sol.org, akataria@vmware.com, rusty@rustcorp.com.au,
	virtualization@lists.linux-foundation.org, xen-devel@lists.xen.org,
	konrad.wilk@oracle.com, david.vrabel@citrix.com,
	boris.ostrovsky@oracle.com
Cc: Juergen Gross &lt;jgross@suse.com&gt;
Subject: [PATCH] paravirt: remove paravirt ops pmd_update[_defer] and
	pte_update_defer
Date: Tue, 17 Nov 2015 15:51:19 +0100
Message-Id: &lt;1447771879-1806-1-git-send-email-jgross@suse.com&gt;
X-Mailer: git-send-email 2.6.2
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.5 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=100191">Juergen Gross</a> - Nov. 17, 2015, 2:51 p.m.</div>
<pre class="content">
pte_update_defer can be removed as it is always set to the same
function as pte_update. So any usage of pte_update_defer() can be
replaced by pte_update().

pmd_update and pmd_update_defer are always set to paravirt_nop, so they
can just be nuked.
<span class="signed-off-by">
Signed-off-by: Juergen Gross &lt;jgross@suse.com&gt;</span>
---
 arch/x86/include/asm/paravirt.h       | 17 -----------------
 arch/x86/include/asm/paravirt_types.h |  6 ------
 arch/x86/include/asm/pgtable.h        | 15 ++-------------
 arch/x86/kernel/paravirt.c            |  3 ---
 arch/x86/lguest/boot.c                |  1 -
 arch/x86/mm/pgtable.c                 |  7 +------
 arch/x86/xen/mmu.c                    |  1 -
 7 files changed, 3 insertions(+), 47 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=100191">Juergen Gross</a> - Nov. 24, 2015, noon</div>
<pre class="content">
Ping?

On 17/11/15 15:51, Juergen Gross wrote:
<span class="quote">&gt; pte_update_defer can be removed as it is always set to the same</span>
<span class="quote">&gt; function as pte_update. So any usage of pte_update_defer() can be</span>
<span class="quote">&gt; replaced by pte_update().</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; pmd_update and pmd_update_defer are always set to paravirt_nop, so they</span>
<span class="quote">&gt; can just be nuked.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Juergen Gross &lt;jgross@suse.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/x86/include/asm/paravirt.h       | 17 -----------------</span>
<span class="quote">&gt;  arch/x86/include/asm/paravirt_types.h |  6 ------</span>
<span class="quote">&gt;  arch/x86/include/asm/pgtable.h        | 15 ++-------------</span>
<span class="quote">&gt;  arch/x86/kernel/paravirt.c            |  3 ---</span>
<span class="quote">&gt;  arch/x86/lguest/boot.c                |  1 -</span>
<span class="quote">&gt;  arch/x86/mm/pgtable.c                 |  7 +------</span>
<span class="quote">&gt;  arch/x86/xen/mmu.c                    |  1 -</span>
<span class="quote">&gt;  7 files changed, 3 insertions(+), 47 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/arch/x86/include/asm/paravirt.h b/arch/x86/include/asm/paravirt.h</span>
<span class="quote">&gt; index 10d0596..398f068 100644</span>
<span class="quote">&gt; --- a/arch/x86/include/asm/paravirt.h</span>
<span class="quote">&gt; +++ b/arch/x86/include/asm/paravirt.h</span>
<span class="quote">&gt; @@ -375,23 +375,6 @@ static inline void pte_update(struct mm_struct *mm, unsigned long addr,</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	PVOP_VCALL3(pv_mmu_ops.pte_update, mm, addr, ptep);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -static inline void pmd_update(struct mm_struct *mm, unsigned long addr,</span>
<span class="quote">&gt; -			      pmd_t *pmdp)</span>
<span class="quote">&gt; -{</span>
<span class="quote">&gt; -	PVOP_VCALL3(pv_mmu_ops.pmd_update, mm, addr, pmdp);</span>
<span class="quote">&gt; -}</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -static inline void pte_update_defer(struct mm_struct *mm, unsigned long addr,</span>
<span class="quote">&gt; -				    pte_t *ptep)</span>
<span class="quote">&gt; -{</span>
<span class="quote">&gt; -	PVOP_VCALL3(pv_mmu_ops.pte_update_defer, mm, addr, ptep);</span>
<span class="quote">&gt; -}</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -static inline void pmd_update_defer(struct mm_struct *mm, unsigned long addr,</span>
<span class="quote">&gt; -				    pmd_t *pmdp)</span>
<span class="quote">&gt; -{</span>
<span class="quote">&gt; -	PVOP_VCALL3(pv_mmu_ops.pmd_update_defer, mm, addr, pmdp);</span>
<span class="quote">&gt; -}</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  static inline pte_t __pte(pteval_t val)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; diff --git a/arch/x86/include/asm/paravirt_types.h b/arch/x86/include/asm/paravirt_types.h</span>
<span class="quote">&gt; index 31247b5..6418541 100644</span>
<span class="quote">&gt; --- a/arch/x86/include/asm/paravirt_types.h</span>
<span class="quote">&gt; +++ b/arch/x86/include/asm/paravirt_types.h</span>
<span class="quote">&gt; @@ -274,12 +274,6 @@ struct pv_mmu_ops {</span>
<span class="quote">&gt;  			   pmd_t *pmdp, pmd_t pmdval);</span>
<span class="quote">&gt;  	void (*pte_update)(struct mm_struct *mm, unsigned long addr,</span>
<span class="quote">&gt;  			   pte_t *ptep);</span>
<span class="quote">&gt; -	void (*pte_update_defer)(struct mm_struct *mm,</span>
<span class="quote">&gt; -				 unsigned long addr, pte_t *ptep);</span>
<span class="quote">&gt; -	void (*pmd_update)(struct mm_struct *mm, unsigned long addr,</span>
<span class="quote">&gt; -			   pmd_t *pmdp);</span>
<span class="quote">&gt; -	void (*pmd_update_defer)(struct mm_struct *mm,</span>
<span class="quote">&gt; -				 unsigned long addr, pmd_t *pmdp);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	pte_t (*ptep_modify_prot_start)(struct mm_struct *mm, unsigned long addr,</span>
<span class="quote">&gt;  					pte_t *ptep);</span>
<span class="quote">&gt; diff --git a/arch/x86/include/asm/pgtable.h b/arch/x86/include/asm/pgtable.h</span>
<span class="quote">&gt; index 6ec0c8b..d3eee66 100644</span>
<span class="quote">&gt; --- a/arch/x86/include/asm/pgtable.h</span>
<span class="quote">&gt; +++ b/arch/x86/include/asm/pgtable.h</span>
<span class="quote">&gt; @@ -69,9 +69,6 @@ extern struct mm_struct *pgd_page_get_mm(struct page *page);</span>
<span class="quote">&gt;  #define pmd_clear(pmd)			native_pmd_clear(pmd)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define pte_update(mm, addr, ptep)              do { } while (0)</span>
<span class="quote">&gt; -#define pte_update_defer(mm, addr, ptep)        do { } while (0)</span>
<span class="quote">&gt; -#define pmd_update(mm, addr, ptep)              do { } while (0)</span>
<span class="quote">&gt; -#define pmd_update_defer(mm, addr, ptep)        do { } while (0)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define pgd_val(x)	native_pgd_val(x)</span>
<span class="quote">&gt;  #define __pgd(x)	native_make_pgd(x)</span>
<span class="quote">&gt; @@ -731,14 +728,9 @@ static inline void native_set_pmd_at(struct mm_struct *mm, unsigned long addr,</span>
<span class="quote">&gt;   * updates should either be sets, clears, or set_pte_atomic for P-&gt;P</span>
<span class="quote">&gt;   * transitions, which means this hook should only be called for user PTEs.</span>
<span class="quote">&gt;   * This hook implies a P-&gt;P protection or access change has taken place, which</span>
<span class="quote">&gt; - * requires a subsequent TLB flush.  The notification can optionally be delayed</span>
<span class="quote">&gt; - * until the TLB flush event by using the pte_update_defer form of the</span>
<span class="quote">&gt; - * interface, but care must be taken to assure that the flush happens while</span>
<span class="quote">&gt; - * still holding the same page table lock so that the shadow and primary pages</span>
<span class="quote">&gt; - * do not become out of sync on SMP.</span>
<span class="quote">&gt; + * requires a subsequent TLB flush.</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt;  #define pte_update(mm, addr, ptep)		do { } while (0)</span>
<span class="quote">&gt; -#define pte_update_defer(mm, addr, ptep)	do { } while (0)</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt; @@ -830,9 +822,7 @@ static inline int pmd_write(pmd_t pmd)</span>
<span class="quote">&gt;  static inline pmd_t pmdp_huge_get_and_clear(struct mm_struct *mm, unsigned long addr,</span>
<span class="quote">&gt;  				       pmd_t *pmdp)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -	pmd_t pmd = native_pmdp_get_and_clear(pmdp);</span>
<span class="quote">&gt; -	pmd_update(mm, addr, pmdp);</span>
<span class="quote">&gt; -	return pmd;</span>
<span class="quote">&gt; +	return native_pmdp_get_and_clear(pmdp);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #define __HAVE_ARCH_PMDP_SET_WRPROTECT</span>
<span class="quote">&gt; @@ -840,7 +830,6 @@ static inline void pmdp_set_wrprotect(struct mm_struct *mm,</span>
<span class="quote">&gt;  				      unsigned long addr, pmd_t *pmdp)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	clear_bit(_PAGE_BIT_RW, (unsigned long *)pmdp);</span>
<span class="quote">&gt; -	pmd_update(mm, addr, pmdp);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt; diff --git a/arch/x86/kernel/paravirt.c b/arch/x86/kernel/paravirt.c</span>
<span class="quote">&gt; index c2130ae..f601250 100644</span>
<span class="quote">&gt; --- a/arch/x86/kernel/paravirt.c</span>
<span class="quote">&gt; +++ b/arch/x86/kernel/paravirt.c</span>
<span class="quote">&gt; @@ -444,9 +444,6 @@ struct pv_mmu_ops pv_mmu_ops = {</span>
<span class="quote">&gt;  	.set_pmd = native_set_pmd,</span>
<span class="quote">&gt;  	.set_pmd_at = native_set_pmd_at,</span>
<span class="quote">&gt;  	.pte_update = paravirt_nop,</span>
<span class="quote">&gt; -	.pte_update_defer = paravirt_nop,</span>
<span class="quote">&gt; -	.pmd_update = paravirt_nop,</span>
<span class="quote">&gt; -	.pmd_update_defer = paravirt_nop,</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	.ptep_modify_prot_start = __ptep_modify_prot_start,</span>
<span class="quote">&gt;  	.ptep_modify_prot_commit = __ptep_modify_prot_commit,</span>
<span class="quote">&gt; diff --git a/arch/x86/lguest/boot.c b/arch/x86/lguest/boot.c</span>
<span class="quote">&gt; index a0d09f6..a1900d4 100644</span>
<span class="quote">&gt; --- a/arch/x86/lguest/boot.c</span>
<span class="quote">&gt; +++ b/arch/x86/lguest/boot.c</span>
<span class="quote">&gt; @@ -1472,7 +1472,6 @@ __init void lguest_init(void)</span>
<span class="quote">&gt;  	pv_mmu_ops.lazy_mode.leave = lguest_leave_lazy_mmu_mode;</span>
<span class="quote">&gt;  	pv_mmu_ops.lazy_mode.flush = paravirt_flush_lazy_mmu;</span>
<span class="quote">&gt;  	pv_mmu_ops.pte_update = lguest_pte_update;</span>
<span class="quote">&gt; -	pv_mmu_ops.pte_update_defer = lguest_pte_update;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #ifdef CONFIG_X86_LOCAL_APIC</span>
<span class="quote">&gt;  	/* APIC read/write intercepts */</span>
<span class="quote">&gt; diff --git a/arch/x86/mm/pgtable.c b/arch/x86/mm/pgtable.c</span>
<span class="quote">&gt; index fb0a9dd..ee9c2e3 100644</span>
<span class="quote">&gt; --- a/arch/x86/mm/pgtable.c</span>
<span class="quote">&gt; +++ b/arch/x86/mm/pgtable.c</span>
<span class="quote">&gt; @@ -414,7 +414,7 @@ int ptep_set_access_flags(struct vm_area_struct *vma,</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	if (changed &amp;&amp; dirty) {</span>
<span class="quote">&gt;  		*ptep = entry;</span>
<span class="quote">&gt; -		pte_update_defer(vma-&gt;vm_mm, address, ptep);</span>
<span class="quote">&gt; +		pte_update(vma-&gt;vm_mm, address, ptep);</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	return changed;</span>
<span class="quote">&gt; @@ -431,7 +431,6 @@ int pmdp_set_access_flags(struct vm_area_struct *vma,</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	if (changed &amp;&amp; dirty) {</span>
<span class="quote">&gt;  		*pmdp = entry;</span>
<span class="quote">&gt; -		pmd_update_defer(vma-&gt;vm_mm, address, pmdp);</span>
<span class="quote">&gt;  		/*</span>
<span class="quote">&gt;  		 * We had a write-protection fault here and changed the pmd</span>
<span class="quote">&gt;  		 * to to more permissive. No need to flush the TLB for that,</span>
<span class="quote">&gt; @@ -469,9 +468,6 @@ int pmdp_test_and_clear_young(struct vm_area_struct *vma,</span>
<span class="quote">&gt;  		ret = test_and_clear_bit(_PAGE_BIT_ACCESSED,</span>
<span class="quote">&gt;  					 (unsigned long *)pmdp);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -	if (ret)</span>
<span class="quote">&gt; -		pmd_update(vma-&gt;vm_mm, addr, pmdp);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  	return ret;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt; @@ -518,7 +514,6 @@ void pmdp_splitting_flush(struct vm_area_struct *vma,</span>
<span class="quote">&gt;  	set = !test_and_set_bit(_PAGE_BIT_SPLITTING,</span>
<span class="quote">&gt;  				(unsigned long *)pmdp);</span>
<span class="quote">&gt;  	if (set) {</span>
<span class="quote">&gt; -		pmd_update(vma-&gt;vm_mm, address, pmdp);</span>
<span class="quote">&gt;  		/* need tlb flush only to serialize against gup-fast */</span>
<span class="quote">&gt;  		flush_tlb_range(vma, address, address + HPAGE_PMD_SIZE);</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt; diff --git a/arch/x86/xen/mmu.c b/arch/x86/xen/mmu.c</span>
<span class="quote">&gt; index ac161db..896dc14 100644</span>
<span class="quote">&gt; --- a/arch/x86/xen/mmu.c</span>
<span class="quote">&gt; +++ b/arch/x86/xen/mmu.c</span>
<span class="quote">&gt; @@ -2436,7 +2436,6 @@ static const struct pv_mmu_ops xen_mmu_ops __initconst = {</span>
<span class="quote">&gt;  	.flush_tlb_others = xen_flush_tlb_others,</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	.pte_update = paravirt_nop,</span>
<span class="quote">&gt; -	.pte_update_defer = paravirt_nop,</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	.pgd_alloc = xen_pgd_alloc,</span>
<span class="quote">&gt;  	.pgd_free = xen_pgd_free,</span>
<span class="quote">&gt; </span>

--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=5">Rusty Russell</a> - Nov. 25, 2015, 3:34 a.m.</div>
<pre class="content">
Juergen Gross &lt;jgross@suse.com&gt; writes:
<span class="quote">&gt; Ping?</span>
<span class="acked-by">
Acked-by: Rusty Russell &lt;rusty@rustcorp.com.au&gt;</span>

Cheers,
Rusty.
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/paravirt.h b/arch/x86/include/asm/paravirt.h</span>
<span class="p_header">index 10d0596..398f068 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/paravirt.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/paravirt.h</span>
<span class="p_chunk">@@ -375,23 +375,6 @@</span> <span class="p_context"> static inline void pte_update(struct mm_struct *mm, unsigned long addr,</span>
 {
 	PVOP_VCALL3(pv_mmu_ops.pte_update, mm, addr, ptep);
 }
<span class="p_del">-static inline void pmd_update(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_del">-			      pmd_t *pmdp)</span>
<span class="p_del">-{</span>
<span class="p_del">-	PVOP_VCALL3(pv_mmu_ops.pmd_update, mm, addr, pmdp);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void pte_update_defer(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_del">-				    pte_t *ptep)</span>
<span class="p_del">-{</span>
<span class="p_del">-	PVOP_VCALL3(pv_mmu_ops.pte_update_defer, mm, addr, ptep);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static inline void pmd_update_defer(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_del">-				    pmd_t *pmdp)</span>
<span class="p_del">-{</span>
<span class="p_del">-	PVOP_VCALL3(pv_mmu_ops.pmd_update_defer, mm, addr, pmdp);</span>
<span class="p_del">-}</span>
 
 static inline pte_t __pte(pteval_t val)
 {
<span class="p_header">diff --git a/arch/x86/include/asm/paravirt_types.h b/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_header">index 31247b5..6418541 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_chunk">@@ -274,12 +274,6 @@</span> <span class="p_context"> struct pv_mmu_ops {</span>
 			   pmd_t *pmdp, pmd_t pmdval);
 	void (*pte_update)(struct mm_struct *mm, unsigned long addr,
 			   pte_t *ptep);
<span class="p_del">-	void (*pte_update_defer)(struct mm_struct *mm,</span>
<span class="p_del">-				 unsigned long addr, pte_t *ptep);</span>
<span class="p_del">-	void (*pmd_update)(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_del">-			   pmd_t *pmdp);</span>
<span class="p_del">-	void (*pmd_update_defer)(struct mm_struct *mm,</span>
<span class="p_del">-				 unsigned long addr, pmd_t *pmdp);</span>
 
 	pte_t (*ptep_modify_prot_start)(struct mm_struct *mm, unsigned long addr,
 					pte_t *ptep);
<span class="p_header">diff --git a/arch/x86/include/asm/pgtable.h b/arch/x86/include/asm/pgtable.h</span>
<span class="p_header">index 6ec0c8b..d3eee66 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/pgtable.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/pgtable.h</span>
<span class="p_chunk">@@ -69,9 +69,6 @@</span> <span class="p_context"> extern struct mm_struct *pgd_page_get_mm(struct page *page);</span>
 #define pmd_clear(pmd)			native_pmd_clear(pmd)
 
 #define pte_update(mm, addr, ptep)              do { } while (0)
<span class="p_del">-#define pte_update_defer(mm, addr, ptep)        do { } while (0)</span>
<span class="p_del">-#define pmd_update(mm, addr, ptep)              do { } while (0)</span>
<span class="p_del">-#define pmd_update_defer(mm, addr, ptep)        do { } while (0)</span>
 
 #define pgd_val(x)	native_pgd_val(x)
 #define __pgd(x)	native_make_pgd(x)
<span class="p_chunk">@@ -731,14 +728,9 @@</span> <span class="p_context"> static inline void native_set_pmd_at(struct mm_struct *mm, unsigned long addr,</span>
  * updates should either be sets, clears, or set_pte_atomic for P-&gt;P
  * transitions, which means this hook should only be called for user PTEs.
  * This hook implies a P-&gt;P protection or access change has taken place, which
<span class="p_del">- * requires a subsequent TLB flush.  The notification can optionally be delayed</span>
<span class="p_del">- * until the TLB flush event by using the pte_update_defer form of the</span>
<span class="p_del">- * interface, but care must be taken to assure that the flush happens while</span>
<span class="p_del">- * still holding the same page table lock so that the shadow and primary pages</span>
<span class="p_del">- * do not become out of sync on SMP.</span>
<span class="p_add">+ * requires a subsequent TLB flush.</span>
  */
 #define pte_update(mm, addr, ptep)		do { } while (0)
<span class="p_del">-#define pte_update_defer(mm, addr, ptep)	do { } while (0)</span>
 #endif
 
 /*
<span class="p_chunk">@@ -830,9 +822,7 @@</span> <span class="p_context"> static inline int pmd_write(pmd_t pmd)</span>
 static inline pmd_t pmdp_huge_get_and_clear(struct mm_struct *mm, unsigned long addr,
 				       pmd_t *pmdp)
 {
<span class="p_del">-	pmd_t pmd = native_pmdp_get_and_clear(pmdp);</span>
<span class="p_del">-	pmd_update(mm, addr, pmdp);</span>
<span class="p_del">-	return pmd;</span>
<span class="p_add">+	return native_pmdp_get_and_clear(pmdp);</span>
 }
 
 #define __HAVE_ARCH_PMDP_SET_WRPROTECT
<span class="p_chunk">@@ -840,7 +830,6 @@</span> <span class="p_context"> static inline void pmdp_set_wrprotect(struct mm_struct *mm,</span>
 				      unsigned long addr, pmd_t *pmdp)
 {
 	clear_bit(_PAGE_BIT_RW, (unsigned long *)pmdp);
<span class="p_del">-	pmd_update(mm, addr, pmdp);</span>
 }
 
 /*
<span class="p_header">diff --git a/arch/x86/kernel/paravirt.c b/arch/x86/kernel/paravirt.c</span>
<span class="p_header">index c2130ae..f601250 100644</span>
<span class="p_header">--- a/arch/x86/kernel/paravirt.c</span>
<span class="p_header">+++ b/arch/x86/kernel/paravirt.c</span>
<span class="p_chunk">@@ -444,9 +444,6 @@</span> <span class="p_context"> struct pv_mmu_ops pv_mmu_ops = {</span>
 	.set_pmd = native_set_pmd,
 	.set_pmd_at = native_set_pmd_at,
 	.pte_update = paravirt_nop,
<span class="p_del">-	.pte_update_defer = paravirt_nop,</span>
<span class="p_del">-	.pmd_update = paravirt_nop,</span>
<span class="p_del">-	.pmd_update_defer = paravirt_nop,</span>
 
 	.ptep_modify_prot_start = __ptep_modify_prot_start,
 	.ptep_modify_prot_commit = __ptep_modify_prot_commit,
<span class="p_header">diff --git a/arch/x86/lguest/boot.c b/arch/x86/lguest/boot.c</span>
<span class="p_header">index a0d09f6..a1900d4 100644</span>
<span class="p_header">--- a/arch/x86/lguest/boot.c</span>
<span class="p_header">+++ b/arch/x86/lguest/boot.c</span>
<span class="p_chunk">@@ -1472,7 +1472,6 @@</span> <span class="p_context"> __init void lguest_init(void)</span>
 	pv_mmu_ops.lazy_mode.leave = lguest_leave_lazy_mmu_mode;
 	pv_mmu_ops.lazy_mode.flush = paravirt_flush_lazy_mmu;
 	pv_mmu_ops.pte_update = lguest_pte_update;
<span class="p_del">-	pv_mmu_ops.pte_update_defer = lguest_pte_update;</span>
 
 #ifdef CONFIG_X86_LOCAL_APIC
 	/* APIC read/write intercepts */
<span class="p_header">diff --git a/arch/x86/mm/pgtable.c b/arch/x86/mm/pgtable.c</span>
<span class="p_header">index fb0a9dd..ee9c2e3 100644</span>
<span class="p_header">--- a/arch/x86/mm/pgtable.c</span>
<span class="p_header">+++ b/arch/x86/mm/pgtable.c</span>
<span class="p_chunk">@@ -414,7 +414,7 @@</span> <span class="p_context"> int ptep_set_access_flags(struct vm_area_struct *vma,</span>
 
 	if (changed &amp;&amp; dirty) {
 		*ptep = entry;
<span class="p_del">-		pte_update_defer(vma-&gt;vm_mm, address, ptep);</span>
<span class="p_add">+		pte_update(vma-&gt;vm_mm, address, ptep);</span>
 	}
 
 	return changed;
<span class="p_chunk">@@ -431,7 +431,6 @@</span> <span class="p_context"> int pmdp_set_access_flags(struct vm_area_struct *vma,</span>
 
 	if (changed &amp;&amp; dirty) {
 		*pmdp = entry;
<span class="p_del">-		pmd_update_defer(vma-&gt;vm_mm, address, pmdp);</span>
 		/*
 		 * We had a write-protection fault here and changed the pmd
 		 * to to more permissive. No need to flush the TLB for that,
<span class="p_chunk">@@ -469,9 +468,6 @@</span> <span class="p_context"> int pmdp_test_and_clear_young(struct vm_area_struct *vma,</span>
 		ret = test_and_clear_bit(_PAGE_BIT_ACCESSED,
 					 (unsigned long *)pmdp);
 
<span class="p_del">-	if (ret)</span>
<span class="p_del">-		pmd_update(vma-&gt;vm_mm, addr, pmdp);</span>
<span class="p_del">-</span>
 	return ret;
 }
 #endif
<span class="p_chunk">@@ -518,7 +514,6 @@</span> <span class="p_context"> void pmdp_splitting_flush(struct vm_area_struct *vma,</span>
 	set = !test_and_set_bit(_PAGE_BIT_SPLITTING,
 				(unsigned long *)pmdp);
 	if (set) {
<span class="p_del">-		pmd_update(vma-&gt;vm_mm, address, pmdp);</span>
 		/* need tlb flush only to serialize against gup-fast */
 		flush_tlb_range(vma, address, address + HPAGE_PMD_SIZE);
 	}
<span class="p_header">diff --git a/arch/x86/xen/mmu.c b/arch/x86/xen/mmu.c</span>
<span class="p_header">index ac161db..896dc14 100644</span>
<span class="p_header">--- a/arch/x86/xen/mmu.c</span>
<span class="p_header">+++ b/arch/x86/xen/mmu.c</span>
<span class="p_chunk">@@ -2436,7 +2436,6 @@</span> <span class="p_context"> static const struct pv_mmu_ops xen_mmu_ops __initconst = {</span>
 	.flush_tlb_others = xen_flush_tlb_others,
 
 	.pte_update = paravirt_nop,
<span class="p_del">-	.pte_update_defer = paravirt_nop,</span>
 
 	.pgd_alloc = xen_pgd_alloc,
 	.pgd_free = xen_pgd_free,

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



