
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[1/5] mm/vmalloc: query dynamic DEBUG_PAGEALLOC setting - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [1/5] mm/vmalloc: query dynamic DEBUG_PAGEALLOC setting</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=39721">Joonsoo Kim</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 4, 2016, 5:56 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1454565386-10489-2-git-send-email-iamjoonsoo.kim@lge.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8213761/mbox/"
   >mbox</a>
|
   <a href="/patch/8213761/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8213761/">/patch/8213761/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id E169D9F4DD
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  4 Feb 2016 05:59:29 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 5CC2520357
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  4 Feb 2016 05:59:29 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 9943120375
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  4 Feb 2016 05:59:28 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S934160AbcBDF6O (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 4 Feb 2016 00:58:14 -0500
Received: from mail-pf0-f176.google.com ([209.85.192.176]:34439 &quot;EHLO
	mail-pf0-f176.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S934129AbcBDF5b (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 4 Feb 2016 00:57:31 -0500
Received: by mail-pf0-f176.google.com with SMTP id o185so33076911pfb.1;
	Wed, 03 Feb 2016 21:57:31 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=yZq3Mzp12bmhyKRpKJxNAP+dhWwtfFbUa3H/BGeN/CM=;
	b=JkB/VPBSIVWsMMH0Puc+l66ofp5LuK6G2+SqKmplYFY0TpEqTQ9yZkRDR8GLkoZiL+
	jp/JajiNL6vDqaW9EUxJSHGilLapUDl1PPZ/AiJnRWKrZRJE50wqT09yIFjub3HcauQV
	go8CKEew6WM0RDm1ystTs1zGTIi6299mAKdn55B13KbPu75Ie4YvvlIouhIYuf0Lb/tW
	MCjogQi7fuqR6ESmdhMLXstUVmptzLHpq0uPdrtGV90CzX84nrxdW4KXPPe4a9fYqIPH
	zUjf412Y2dpM7df28SrMWQ7viVHUeOltQsQsZqB+U1VPegBAq9im9enWc8q3T6F7/Vry
	pydQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20130820;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=yZq3Mzp12bmhyKRpKJxNAP+dhWwtfFbUa3H/BGeN/CM=;
	b=Tce1ecjv2/x/vctApwddAxJ8MyhRZAeqiwVfuRrlZVqD4P/Een24bIEEUyyXijQb/a
	1aqMmYTVG0i5EXdCUrGUqfoA09/yCusn4Z1OKnXSH3v9DLsM9Q4IdJSM6U7hldEj6wsJ
	SRgCqH//Z8QpEv+MleEcpYl91tHnL5cdzqmNY1378yXqLMA/b1in6fX1T0nOcTkpKpUO
	REtvmNpiTxZ6ZlonO5/BLWxfvNA9wAWDxALKP3cjpGvn1Tq8XuL9G2i0M4gNuypYQfKI
	x8sD6mraKhRHRjNn5rCjcpVGLGVADv243DjfvT8UDDqYjv+tKJru7+BwRmWdekMY+gn0
	NPeQ==
X-Gm-Message-State: AG10YORHK7giFjhGaLZGSI8FsMRKLQDvYxXjJvdzC7hUwPeTlUMz/ETnu/KYZV7RxDdNAQ==
X-Received: by 10.98.17.208 with SMTP id 77mr8311491pfr.37.1454565451055;
	Wed, 03 Feb 2016 21:57:31 -0800 (PST)
Received: from localhost.localdomain ([119.69.155.252])
	by smtp.gmail.com with ESMTPSA id
	pu3sm13891373pac.9.2016.02.03.21.57.27
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Wed, 03 Feb 2016 21:57:30 -0800 (PST)
From: Joonsoo Kim &lt;js1304@gmail.com&gt;
X-Google-Original-From: Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: David Rientjes &lt;rientjes@google.com&gt;,
	Christian Borntraeger &lt;borntraeger@de.ibm.com&gt;,
	linux-kernel@vger.kernel.org, linux-mm@kvack.org,
	Benjamin Herrenschmidt &lt;benh@kernel.crashing.org&gt;,
	Takashi Iwai &lt;tiwai@suse.com&gt;, Chris Metcalf &lt;cmetcalf@ezchip.com&gt;,
	Christoph Lameter &lt;cl@linux.com&gt;, linux-api@vger.kernel.org,
	Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;
Subject: [PATCH 1/5] mm/vmalloc: query dynamic DEBUG_PAGEALLOC setting
Date: Thu,  4 Feb 2016 14:56:22 +0900
Message-Id: &lt;1454565386-10489-2-git-send-email-iamjoonsoo.kim@lge.com&gt;
X-Mailer: git-send-email 1.9.1
In-Reply-To: &lt;1454565386-10489-1-git-send-email-iamjoonsoo.kim@lge.com&gt;
References: &lt;1454565386-10489-1-git-send-email-iamjoonsoo.kim@lge.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.5 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, FREEMAIL_FROM, RCVD_IN_DNSWL_HI,
	RP_MATCHES_RCVD, 
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=39721">Joonsoo Kim</a> - Feb. 4, 2016, 5:56 a.m.</div>
<pre class="content">
We can disable debug_pagealloc processing even if the code is complied
with CONFIG_DEBUG_PAGEALLOC. This patch changes the code to query
whether it is enabled or not in runtime.
<span class="signed-off-by">
Signed-off-by: Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;</span>
---
 mm/vmalloc.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=447">Christian Borntraeger</a> - Feb. 4, 2016, 8:32 a.m.</div>
<pre class="content">
On 02/04/2016 06:56 AM, Joonsoo Kim wrote:
<span class="quote">&gt; We can disable debug_pagealloc processing even if the code is complied</span>
<span class="quote">&gt; with CONFIG_DEBUG_PAGEALLOC. This patch changes the code to query</span>
<span class="quote">&gt; whether it is enabled or not in runtime.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;</span>
<span class="reviewed-by">
Reviewed-by: Christian Borntraeger &lt;borntraeger@de.ibm.com&gt;</span>
<span class="quote">

&gt; ---</span>
<span class="quote">&gt;  mm/vmalloc.c | 8 ++++----</span>
<span class="quote">&gt;  1 file changed, 4 insertions(+), 4 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/mm/vmalloc.c b/mm/vmalloc.c</span>
<span class="quote">&gt; index fb42a5b..e0e51bd 100644</span>
<span class="quote">&gt; --- a/mm/vmalloc.c</span>
<span class="quote">&gt; +++ b/mm/vmalloc.c</span>
<span class="quote">&gt; @@ -543,10 +543,10 @@ static void vmap_debug_free_range(unsigned long start, unsigned long end)</span>
<span class="quote">&gt;  	 * debugging doesn&#39;t do a broadcast TLB flush so it is a lot</span>
<span class="quote">&gt;  	 * faster).</span>
<span class="quote">&gt;  	 */</span>
<span class="quote">&gt; -#ifdef CONFIG_DEBUG_PAGEALLOC</span>
<span class="quote">&gt; -	vunmap_page_range(start, end);</span>
<span class="quote">&gt; -	flush_tlb_kernel_range(start, end);</span>
<span class="quote">&gt; -#endif</span>
<span class="quote">&gt; +	if (debug_pagealloc_enabled()) {</span>
<span class="quote">&gt; +		vunmap_page_range(start, end);</span>
<span class="quote">&gt; +		flush_tlb_kernel_range(start, end);</span>
<span class="quote">&gt; +	}</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=579">David Rientjes</a> - Feb. 4, 2016, 10:18 p.m.</div>
<pre class="content">
On Thu, 4 Feb 2016, Joonsoo Kim wrote:
<span class="quote">
&gt; We can disable debug_pagealloc processing even if the code is complied</span>
<span class="quote">&gt; with CONFIG_DEBUG_PAGEALLOC. This patch changes the code to query</span>
<span class="quote">&gt; whether it is enabled or not in runtime.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;</span>

I think the comment immediately before this code referencing 
CONFIG_DEBUG_PAGEALLOC should be changed to refer to pagealloc debugging 
being enabled.

After that:
<span class="acked-by">
	Acked-by: David Rientjes &lt;rientjes@google.com&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=39721">Joonsoo Kim</a> - Feb. 5, 2016, 4:13 p.m.</div>
<pre class="content">
2016-02-05 7:18 GMT+09:00 David Rientjes &lt;rientjes@google.com&gt;:
<span class="quote">&gt; On Thu, 4 Feb 2016, Joonsoo Kim wrote:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt; We can disable debug_pagealloc processing even if the code is complied</span>
<span class="quote">&gt;&gt; with CONFIG_DEBUG_PAGEALLOC. This patch changes the code to query</span>
<span class="quote">&gt;&gt; whether it is enabled or not in runtime.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Joonsoo Kim &lt;iamjoonsoo.kim@lge.com&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; I think the comment immediately before this code referencing</span>
<span class="quote">&gt; CONFIG_DEBUG_PAGEALLOC should be changed to refer to pagealloc debugging</span>
<span class="quote">&gt; being enabled.</span>

Andrew kindly did it. Thanks, Andrew.
<span class="quote">
&gt; After that:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;         Acked-by: David Rientjes &lt;rientjes@google.com&gt;</span>

Thanks.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/vmalloc.c b/mm/vmalloc.c</span>
<span class="p_header">index fb42a5b..e0e51bd 100644</span>
<span class="p_header">--- a/mm/vmalloc.c</span>
<span class="p_header">+++ b/mm/vmalloc.c</span>
<span class="p_chunk">@@ -543,10 +543,10 @@</span> <span class="p_context"> static void vmap_debug_free_range(unsigned long start, unsigned long end)</span>
 	 * debugging doesn&#39;t do a broadcast TLB flush so it is a lot
 	 * faster).
 	 */
<span class="p_del">-#ifdef CONFIG_DEBUG_PAGEALLOC</span>
<span class="p_del">-	vunmap_page_range(start, end);</span>
<span class="p_del">-	flush_tlb_kernel_range(start, end);</span>
<span class="p_del">-#endif</span>
<span class="p_add">+	if (debug_pagealloc_enabled()) {</span>
<span class="p_add">+		vunmap_page_range(start, end);</span>
<span class="p_add">+		flush_tlb_kernel_range(start, end);</span>
<span class="p_add">+	}</span>
 }
 
 /*

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



