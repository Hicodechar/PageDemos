
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v4,05/44] arm64: dma-mapping: Use unsigned long for dma_attrs - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v4,05/44] arm64: dma-mapping: Use unsigned long for dma_attrs</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=72608">Krzysztof Kozlowski</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 10, 2016, 10:11 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1465553521-27303-6-git-send-email-k.kozlowski@samsung.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9169395/mbox/"
   >mbox</a>
|
   <a href="/patch/9169395/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9169395/">/patch/9169395/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	CB46F60573 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 10 Jun 2016 10:26:59 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id BAAC226490
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 10 Jun 2016 10:26:59 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id AF6C02833F; Fri, 10 Jun 2016 10:26:59 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E4B6826490
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 10 Jun 2016 10:26:57 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932637AbcFJK0t (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 10 Jun 2016 06:26:49 -0400
Received: from mailout2.w1.samsung.com ([210.118.77.12]:43989 &quot;EHLO
	mailout2.w1.samsung.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753110AbcFJKMc (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 10 Jun 2016 06:12:32 -0400
Received: from eucpsbgm1.samsung.com (unknown [203.254.199.244])
	by mailout2.w1.samsung.com
	(Oracle Communications Messaging Server 7.0.5.31.0 64bit (built May 5
	2014)) with ESMTP id &lt;0O8J00DJZWCTXU70@mailout2.w1.samsung.com&gt; for
	linux-kernel@vger.kernel.org; Fri, 10 Jun 2016 11:12:29 +0100 (BST)
X-AuditID: cbfec7f4-f796c6d000001486-76-575a928d75cd
Received: from eusync4.samsung.com ( [203.254.199.214])
	by eucpsbgm1.samsung.com (EUCPMTA) with SMTP id 93.85.05254.D829A575;
	Fri, 10 Jun 2016 11:12:29 +0100 (BST)
Received: from AMDC2174.DIGITAL.local ([106.120.53.17])
	by eusync4.samsung.com (Oracle Communications Messaging Server
	7.0.5.31.0 64bit (built May  5 2014))
	with ESMTPA id &lt;0O8J00MI3WC5KUB0@eusync4.samsung.com&gt;; Fri,
	10 Jun 2016 11:12:29 +0100 (BST)
From: Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: hch@infradead.org, Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;,
	Bartlomiej Zolnierkiewicz &lt;b.zolnierkie@samsung.com&gt;,
	Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	Will Deacon &lt;will.deacon@arm.com&gt;, Robin Murphy &lt;robin.murphy@arm.com&gt;,
	Joerg Roedel &lt;jroedel@suse.de&gt;, Jisheng Zhang &lt;jszhang@marvell.com&gt;,
	Marek Szyprowski &lt;m.szyprowski@samsung.com&gt;,
	Arnd Bergmann &lt;arnd@arndb.de&gt;,
	&quot;Suthikulpanit, Suravee&quot; &lt;Suravee.Suthikulpanit@amd.com&gt;,
	linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org
Subject: [PATCH v4 05/44] arm64: dma-mapping: Use unsigned long for dma_attrs
Date: Fri, 10 Jun 2016 12:11:22 +0200
Message-id: &lt;1465553521-27303-6-git-send-email-k.kozlowski@samsung.com&gt;
X-Mailer: git-send-email 1.9.1
In-reply-to: &lt;1465553521-27303-1-git-send-email-k.kozlowski@samsung.com&gt;
References: &lt;1465553521-27303-1-git-send-email-k.kozlowski@samsung.com&gt;
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFjrLLMWRmVeSWpSXmKPExsVy+t/xa7q9k6LCDd7MlbGYs34Nm8XfScfY
	LTbOWM9q8X5ZD6PF6QmLmCwmn5rLZPHu+G4Wi9cvDC02Pb7GanF51xw2i7VH7rJbHPzwhNVi
	4o8FjBYvP55gceDzaL30l81jzbw1jB6/f01i9Ni8QsvjxIzfLB6bl9R7TF54kdmjb8sqoPDp
	ao/Pm+QCuKK4bFJSczLLUov07RK4MjYe2ctSsMe7YuKv24wNjH3WXYycHBICJhIPW58zQdhi
	EhfurWfrYuTiEBJYyiix88FTRginkUni6YK1zCBVbALGEpuXL2EDsUUEdCVWPd/FDFLELNDF
	IrG9+Q1YkbCAr8TUnWfBilgEVCXuzz0FZvMKuEs8n9jACrFOTuLksclgNqeAh0T33ZksILYQ
	UM32J6+YJjDyLmBkWMUomlqaXFCclJ5rqFecmFtcmpeul5yfu4kREshfdjAuPmZ1iFGAg1GJ
	hzdiV2S4EGtiWXFl7iFGCQ5mJRFei76ocCHelMTKqtSi/Pii0pzU4kOM0hwsSuK8c3e9DxES
	SE8sSc1OTS1ILYLJMnFwSjUwbjF1M5xYtzOqtOVjlMrB3ujPK3ONH3MmFh2pV351KuuV8IKO
	l84zJF7Jp6m+P663ot8qduZ82UxltXAGw3cGee7H7xu78on/5K9VPRrLdOAxl0aF28MrPupP
	f2Ssn59pr7rAc/Ll25cFLy8OlYpbGpmmzpQdn37yRD23+kRV30OJq6fuD9ilxFKckWioxVxU
	nAgAPNbKf2ACAAA=
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72608">Krzysztof Kozlowski</a> - June 10, 2016, 10:11 a.m.</div>
<pre class="content">
Split out subsystem specific changes for easier reviews. This will be
squashed with main commit.
<span class="signed-off-by">
Signed-off-by: Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;</span>
---
 arch/arm64/mm/dma-mapping.c | 57 +++++++++++++++++++++++----------------------
 1 file changed, 29 insertions(+), 28 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=77581">Robin Murphy</a> - June 10, 2016, 10:51 a.m.</div>
<pre class="content">
Hi Krzysztof,

On 10/06/16 11:11, Krzysztof Kozlowski wrote:
<span class="quote">&gt; Split out subsystem specific changes for easier reviews. This will be</span>
<span class="quote">&gt; squashed with main commit.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Signed-off-by: Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;   arch/arm64/mm/dma-mapping.c | 57 +++++++++++++++++++++++----------------------</span>
<span class="quote">&gt;   1 file changed, 29 insertions(+), 28 deletions(-)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; diff --git a/arch/arm64/mm/dma-mapping.c b/arch/arm64/mm/dma-mapping.c</span>
<span class="quote">&gt; index 0ef620a34c4e..a7686028dfeb 100644</span>
<span class="quote">&gt; --- a/arch/arm64/mm/dma-mapping.c</span>
<span class="quote">&gt; +++ b/arch/arm64/mm/dma-mapping.c</span>
<span class="quote">&gt; @@ -29,7 +29,7 @@</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   #include &lt;asm/cacheflush.h&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; -static pgprot_t __get_dma_pgprot(const struct dma_attrs *attrs, pgprot_t prot,</span>
<span class="quote">&gt; +static pgprot_t __get_dma_pgprot(unsigned long attrs, pgprot_t prot,</span>
<span class="quote">&gt;   				 bool coherent)</span>

Is this series intended to replace the patches currently in -next adding 
that &quot;const&quot;? (I was momentarily puzzled why this wouldn&#39;t apply locally)
<span class="quote">
&gt;   {</span>
<span class="quote">&gt;   	if (!coherent || dma_get_attr(DMA_ATTR_WRITE_COMBINE, attrs))</span>
<span class="quote">&gt; @@ -88,7 +88,7 @@ static int __free_from_pool(void *start, size_t size)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static void *__dma_alloc_coherent(struct device *dev, size_t size,</span>
<span class="quote">&gt;   				  dma_addr_t *dma_handle, gfp_t flags,</span>
<span class="quote">&gt; -				  const struct dma_attrs *attrs)</span>
<span class="quote">&gt; +				  unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	if (dev == NULL) {</span>
<span class="quote">&gt;   		WARN_ONCE(1, &quot;Use an actual device structure for DMA allocation\n&quot;);</span>
<span class="quote">&gt; @@ -118,7 +118,7 @@ static void *__dma_alloc_coherent(struct device *dev, size_t size,</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static void __dma_free_coherent(struct device *dev, size_t size,</span>
<span class="quote">&gt;   				void *vaddr, dma_addr_t dma_handle,</span>
<span class="quote">&gt; -				const struct dma_attrs *attrs)</span>
<span class="quote">&gt; +				unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	bool freed;</span>
<span class="quote">&gt;   	phys_addr_t paddr = dma_to_phys(dev, dma_handle);</span>
<span class="quote">&gt; @@ -137,7 +137,7 @@ static void __dma_free_coherent(struct device *dev, size_t size,</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static void *__dma_alloc(struct device *dev, size_t size,</span>
<span class="quote">&gt;   			 dma_addr_t *dma_handle, gfp_t flags,</span>
<span class="quote">&gt; -			 struct dma_attrs *attrs)</span>
<span class="quote">&gt; +			 unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	struct page *page;</span>
<span class="quote">&gt;   	void *ptr, *coherent_ptr;</span>
<span class="quote">&gt; @@ -185,7 +185,7 @@ no_mem:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static void __dma_free(struct device *dev, size_t size,</span>
<span class="quote">&gt;   		       void *vaddr, dma_addr_t dma_handle,</span>
<span class="quote">&gt; -		       struct dma_attrs *attrs)</span>
<span class="quote">&gt; +		       unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	void *swiotlb_addr = phys_to_virt(dma_to_phys(dev, dma_handle));</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; @@ -202,7 +202,7 @@ static void __dma_free(struct device *dev, size_t size,</span>
<span class="quote">&gt;   static dma_addr_t __swiotlb_map_page(struct device *dev, struct page *page,</span>
<span class="quote">&gt;   				     unsigned long offset, size_t size,</span>
<span class="quote">&gt;   				     enum dma_data_direction dir,</span>
<span class="quote">&gt; -				     struct dma_attrs *attrs)</span>
<span class="quote">&gt; +				     unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	dma_addr_t dev_addr;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; @@ -216,7 +216,7 @@ static dma_addr_t __swiotlb_map_page(struct device *dev, struct page *page,</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static void __swiotlb_unmap_page(struct device *dev, dma_addr_t dev_addr,</span>
<span class="quote">&gt;   				 size_t size, enum dma_data_direction dir,</span>
<span class="quote">&gt; -				 struct dma_attrs *attrs)</span>
<span class="quote">&gt; +				 unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	if (!is_device_dma_coherent(dev))</span>
<span class="quote">&gt;   		__dma_unmap_area(phys_to_virt(dma_to_phys(dev, dev_addr)), size, dir);</span>
<span class="quote">&gt; @@ -225,7 +225,7 @@ static void __swiotlb_unmap_page(struct device *dev, dma_addr_t dev_addr,</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static int __swiotlb_map_sg_attrs(struct device *dev, struct scatterlist *sgl,</span>
<span class="quote">&gt;   				  int nelems, enum dma_data_direction dir,</span>
<span class="quote">&gt; -				  struct dma_attrs *attrs)</span>
<span class="quote">&gt; +				  unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	struct scatterlist *sg;</span>
<span class="quote">&gt;   	int i, ret;</span>
<span class="quote">&gt; @@ -242,7 +242,7 @@ static int __swiotlb_map_sg_attrs(struct device *dev, struct scatterlist *sgl,</span>
<span class="quote">&gt;   static void __swiotlb_unmap_sg_attrs(struct device *dev,</span>
<span class="quote">&gt;   				     struct scatterlist *sgl, int nelems,</span>
<span class="quote">&gt;   				     enum dma_data_direction dir,</span>
<span class="quote">&gt; -				     struct dma_attrs *attrs)</span>
<span class="quote">&gt; +				     unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	struct scatterlist *sg;</span>
<span class="quote">&gt;   	int i;</span>
<span class="quote">&gt; @@ -303,7 +303,7 @@ static void __swiotlb_sync_sg_for_device(struct device *dev,</span>
<span class="quote">&gt;   static int __swiotlb_mmap(struct device *dev,</span>
<span class="quote">&gt;   			  struct vm_area_struct *vma,</span>
<span class="quote">&gt;   			  void *cpu_addr, dma_addr_t dma_addr, size_t size,</span>
<span class="quote">&gt; -			  struct dma_attrs *attrs)</span>
<span class="quote">&gt; +			  unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	int ret = -ENXIO;</span>
<span class="quote">&gt;   	unsigned long nr_vma_pages = (vma-&gt;vm_end - vma-&gt;vm_start) &gt;&gt;</span>
<span class="quote">&gt; @@ -330,7 +330,7 @@ static int __swiotlb_mmap(struct device *dev,</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static int __swiotlb_get_sgtable(struct device *dev, struct sg_table *sgt,</span>
<span class="quote">&gt;   				 void *cpu_addr, dma_addr_t handle, size_t size,</span>
<span class="quote">&gt; -				 struct dma_attrs *attrs)</span>
<span class="quote">&gt; +				 unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	int ret = sg_alloc_table(sgt, 1, GFP_KERNEL);</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; @@ -425,21 +425,21 @@ out:</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static void *__dummy_alloc(struct device *dev, size_t size,</span>
<span class="quote">&gt;   			   dma_addr_t *dma_handle, gfp_t flags,</span>
<span class="quote">&gt; -			   struct dma_attrs *attrs)</span>
<span class="quote">&gt; +			   unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	return NULL;</span>
<span class="quote">&gt;   }</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static void __dummy_free(struct device *dev, size_t size,</span>
<span class="quote">&gt;   			 void *vaddr, dma_addr_t dma_handle,</span>
<span class="quote">&gt; -			 struct dma_attrs *attrs)</span>
<span class="quote">&gt; +			 unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   }</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static int __dummy_mmap(struct device *dev,</span>
<span class="quote">&gt;   			struct vm_area_struct *vma,</span>
<span class="quote">&gt;   			void *cpu_addr, dma_addr_t dma_addr, size_t size,</span>
<span class="quote">&gt; -			struct dma_attrs *attrs)</span>
<span class="quote">&gt; +			unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	return -ENXIO;</span>
<span class="quote">&gt;   }</span>
<span class="quote">&gt; @@ -447,20 +447,20 @@ static int __dummy_mmap(struct device *dev,</span>
<span class="quote">&gt;   static dma_addr_t __dummy_map_page(struct device *dev, struct page *page,</span>
<span class="quote">&gt;   				   unsigned long offset, size_t size,</span>
<span class="quote">&gt;   				   enum dma_data_direction dir,</span>
<span class="quote">&gt; -				   struct dma_attrs *attrs)</span>
<span class="quote">&gt; +				   unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	return DMA_ERROR_CODE;</span>
<span class="quote">&gt;   }</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static void __dummy_unmap_page(struct device *dev, dma_addr_t dev_addr,</span>
<span class="quote">&gt;   			       size_t size, enum dma_data_direction dir,</span>
<span class="quote">&gt; -			       struct dma_attrs *attrs)</span>
<span class="quote">&gt; +			       unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   }</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static int __dummy_map_sg(struct device *dev, struct scatterlist *sgl,</span>
<span class="quote">&gt;   			  int nelems, enum dma_data_direction dir,</span>
<span class="quote">&gt; -			  struct dma_attrs *attrs)</span>
<span class="quote">&gt; +			  unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	return 0;</span>
<span class="quote">&gt;   }</span>
<span class="quote">&gt; @@ -468,7 +468,7 @@ static int __dummy_map_sg(struct device *dev, struct scatterlist *sgl,</span>
<span class="quote">&gt;   static void __dummy_unmap_sg(struct device *dev,</span>
<span class="quote">&gt;   			     struct scatterlist *sgl, int nelems,</span>
<span class="quote">&gt;   			     enum dma_data_direction dir,</span>
<span class="quote">&gt; -			     struct dma_attrs *attrs)</span>
<span class="quote">&gt; +			     unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   }</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; @@ -540,7 +540,7 @@ static void flush_page(struct device *dev, const void *virt, phys_addr_t phys)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static void *__iommu_alloc_attrs(struct device *dev, size_t size,</span>
<span class="quote">&gt;   				 dma_addr_t *handle, gfp_t gfp,</span>
<span class="quote">&gt; -				 struct dma_attrs *attrs)</span>
<span class="quote">&gt; +				 unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	bool coherent = is_device_dma_coherent(dev);</span>
<span class="quote">&gt;   	int ioprot = dma_direction_to_prot(DMA_BIDIRECTIONAL, coherent);</span>
<span class="quote">&gt; @@ -600,7 +600,8 @@ static void *__iommu_alloc_attrs(struct device *dev, size_t size,</span>
<span class="quote">&gt;   }</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static void __iommu_free_attrs(struct device *dev, size_t size, void *cpu_addr,</span>
<span class="quote">&gt; -			       dma_addr_t handle, struct dma_attrs *attrs)</span>
<span class="quote">&gt; +			       dma_addr_t handle,</span>
<span class="quote">&gt; +			       unsigned long attrs)</span>

Nit: unnecessary line break?

Otherwise, though, I&#39;m all for the idea;
<span class="acked-by">
Acked-by: Robin Murphy &lt;robin.murphy@arm.com&gt;</span>
<span class="quote">
&gt;   {</span>
<span class="quote">&gt;   	size_t iosize = size;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; @@ -616,7 +617,7 @@ static void __iommu_free_attrs(struct device *dev, size_t size, void *cpu_addr,</span>
<span class="quote">&gt;   	 * Hence how dodgy the below logic looks...</span>
<span class="quote">&gt;   	 */</span>
<span class="quote">&gt;   	if (__in_atomic_pool(cpu_addr, size)) {</span>
<span class="quote">&gt; -		iommu_dma_unmap_page(dev, handle, iosize, 0, NULL);</span>
<span class="quote">&gt; +		iommu_dma_unmap_page(dev, handle, iosize, 0, 0);</span>
<span class="quote">&gt;   		__free_from_pool(cpu_addr, size);</span>
<span class="quote">&gt;   	} else if (is_vmalloc_addr(cpu_addr)){</span>
<span class="quote">&gt;   		struct vm_struct *area = find_vm_area(cpu_addr);</span>
<span class="quote">&gt; @@ -626,14 +627,14 @@ static void __iommu_free_attrs(struct device *dev, size_t size, void *cpu_addr,</span>
<span class="quote">&gt;   		iommu_dma_free(dev, area-&gt;pages, iosize, &amp;handle);</span>
<span class="quote">&gt;   		dma_common_free_remap(cpu_addr, size, VM_USERMAP);</span>
<span class="quote">&gt;   	} else {</span>
<span class="quote">&gt; -		iommu_dma_unmap_page(dev, handle, iosize, 0, NULL);</span>
<span class="quote">&gt; +		iommu_dma_unmap_page(dev, handle, iosize, 0, 0);</span>
<span class="quote">&gt;   		__free_pages(virt_to_page(cpu_addr), get_order(size));</span>
<span class="quote">&gt;   	}</span>
<span class="quote">&gt;   }</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static int __iommu_mmap_attrs(struct device *dev, struct vm_area_struct *vma,</span>
<span class="quote">&gt;   			      void *cpu_addr, dma_addr_t dma_addr, size_t size,</span>
<span class="quote">&gt; -			      struct dma_attrs *attrs)</span>
<span class="quote">&gt; +			      unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	struct vm_struct *area;</span>
<span class="quote">&gt;   	int ret;</span>
<span class="quote">&gt; @@ -653,7 +654,7 @@ static int __iommu_mmap_attrs(struct device *dev, struct vm_area_struct *vma,</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static int __iommu_get_sgtable(struct device *dev, struct sg_table *sgt,</span>
<span class="quote">&gt;   			       void *cpu_addr, dma_addr_t dma_addr,</span>
<span class="quote">&gt; -			       size_t size, struct dma_attrs *attrs)</span>
<span class="quote">&gt; +			       size_t size, unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	unsigned int count = PAGE_ALIGN(size) &gt;&gt; PAGE_SHIFT;</span>
<span class="quote">&gt;   	struct vm_struct *area = find_vm_area(cpu_addr);</span>
<span class="quote">&gt; @@ -694,7 +695,7 @@ static void __iommu_sync_single_for_device(struct device *dev,</span>
<span class="quote">&gt;   static dma_addr_t __iommu_map_page(struct device *dev, struct page *page,</span>
<span class="quote">&gt;   				   unsigned long offset, size_t size,</span>
<span class="quote">&gt;   				   enum dma_data_direction dir,</span>
<span class="quote">&gt; -				   struct dma_attrs *attrs)</span>
<span class="quote">&gt; +				   unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	bool coherent = is_device_dma_coherent(dev);</span>
<span class="quote">&gt;   	int prot = dma_direction_to_prot(dir, coherent);</span>
<span class="quote">&gt; @@ -709,7 +710,7 @@ static dma_addr_t __iommu_map_page(struct device *dev, struct page *page,</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static void __iommu_unmap_page(struct device *dev, dma_addr_t dev_addr,</span>
<span class="quote">&gt;   			       size_t size, enum dma_data_direction dir,</span>
<span class="quote">&gt; -			       struct dma_attrs *attrs)</span>
<span class="quote">&gt; +			       unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	if (!dma_get_attr(DMA_ATTR_SKIP_CPU_SYNC, attrs))</span>
<span class="quote">&gt;   		__iommu_sync_single_for_cpu(dev, dev_addr, size, dir);</span>
<span class="quote">&gt; @@ -747,7 +748,7 @@ static void __iommu_sync_sg_for_device(struct device *dev,</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;   static int __iommu_map_sg_attrs(struct device *dev, struct scatterlist *sgl,</span>
<span class="quote">&gt;   				int nelems, enum dma_data_direction dir,</span>
<span class="quote">&gt; -				struct dma_attrs *attrs)</span>
<span class="quote">&gt; +				unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	bool coherent = is_device_dma_coherent(dev);</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; @@ -761,7 +762,7 @@ static int __iommu_map_sg_attrs(struct device *dev, struct scatterlist *sgl,</span>
<span class="quote">&gt;   static void __iommu_unmap_sg_attrs(struct device *dev,</span>
<span class="quote">&gt;   				   struct scatterlist *sgl, int nelems,</span>
<span class="quote">&gt;   				   enum dma_data_direction dir,</span>
<span class="quote">&gt; -				   struct dma_attrs *attrs)</span>
<span class="quote">&gt; +				   unsigned long attrs)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	if (!dma_get_attr(DMA_ATTR_SKIP_CPU_SYNC, attrs))</span>
<span class="quote">&gt;   		__iommu_sync_sg_for_cpu(dev, sgl, nelems, dir);</span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=72608">Krzysztof Kozlowski</a> - June 10, 2016, 10:55 a.m.</div>
<pre class="content">
On 06/10/2016 12:51 PM, Robin Murphy wrote:
<span class="quote">&gt; Hi Krzysztof,</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; On 10/06/16 11:11, Krzysztof Kozlowski wrote:</span>
<span class="quote">&gt;&gt; Split out subsystem specific changes for easier reviews. This will be</span>
<span class="quote">&gt;&gt; squashed with main commit.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Krzysztof Kozlowski &lt;k.kozlowski@samsung.com&gt;</span>
<span class="quote">&gt;&gt; ---</span>
<span class="quote">&gt;&gt;   arch/arm64/mm/dma-mapping.c | 57</span>
<span class="quote">&gt;&gt; +++++++++++++++++++++++----------------------</span>
<span class="quote">&gt;&gt;   1 file changed, 29 insertions(+), 28 deletions(-)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; diff --git a/arch/arm64/mm/dma-mapping.c b/arch/arm64/mm/dma-mapping.c</span>
<span class="quote">&gt;&gt; index 0ef620a34c4e..a7686028dfeb 100644</span>
<span class="quote">&gt;&gt; --- a/arch/arm64/mm/dma-mapping.c</span>
<span class="quote">&gt;&gt; +++ b/arch/arm64/mm/dma-mapping.c</span>
<span class="quote">&gt;&gt; @@ -29,7 +29,7 @@</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;   #include &lt;asm/cacheflush.h&gt;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; -static pgprot_t __get_dma_pgprot(const struct dma_attrs *attrs,</span>
<span class="quote">&gt;&gt; pgprot_t prot,</span>
<span class="quote">&gt;&gt; +static pgprot_t __get_dma_pgprot(unsigned long attrs, pgprot_t prot,</span>
<span class="quote">&gt;&gt;                    bool coherent)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Is this series intended to replace the patches currently in -next adding</span>
<span class="quote">&gt; that &quot;const&quot;? (I was momentarily puzzled why this wouldn&#39;t apply locally)</span>

Yes, the series replace completely my previous const changes (applied by
Andrew Morton).

I rebased the patchset on linux-next so I could grab all recent changes
around dma_attrs.  Probably that should be changed before applying -
choose one tree to base on (Andrew&#39;s?).

If you would like to play with the entire series (on top of next):
https://github.com/krzk/linux/tree/for-next/dma-attrs-const-v4
<span class="quote">

&gt; </span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;       if (!coherent || dma_get_attr(DMA_ATTR_WRITE_COMBINE, attrs))</span>
<span class="quote">&gt;&gt; @@ -88,7 +88,7 @@ static int __free_from_pool(void *start, size_t size)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;   static void *__dma_alloc_coherent(struct device *dev, size_t size,</span>
<span class="quote">&gt;&gt;                     dma_addr_t *dma_handle, gfp_t flags,</span>
<span class="quote">&gt;&gt; -                  const struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +                  unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;       if (dev == NULL) {</span>
<span class="quote">&gt;&gt;           WARN_ONCE(1, &quot;Use an actual device structure for DMA</span>
<span class="quote">&gt;&gt; allocation\n&quot;);</span>
<span class="quote">&gt;&gt; @@ -118,7 +118,7 @@ static void *__dma_alloc_coherent(struct device</span>
<span class="quote">&gt;&gt; *dev, size_t size,</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;   static void __dma_free_coherent(struct device *dev, size_t size,</span>
<span class="quote">&gt;&gt;                   void *vaddr, dma_addr_t dma_handle,</span>
<span class="quote">&gt;&gt; -                const struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +                unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;       bool freed;</span>
<span class="quote">&gt;&gt;       phys_addr_t paddr = dma_to_phys(dev, dma_handle);</span>
<span class="quote">&gt;&gt; @@ -137,7 +137,7 @@ static void __dma_free_coherent(struct device</span>
<span class="quote">&gt;&gt; *dev, size_t size,</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;   static void *__dma_alloc(struct device *dev, size_t size,</span>
<span class="quote">&gt;&gt;                dma_addr_t *dma_handle, gfp_t flags,</span>
<span class="quote">&gt;&gt; -             struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +             unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;       struct page *page;</span>
<span class="quote">&gt;&gt;       void *ptr, *coherent_ptr;</span>
<span class="quote">&gt;&gt; @@ -185,7 +185,7 @@ no_mem:</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;   static void __dma_free(struct device *dev, size_t size,</span>
<span class="quote">&gt;&gt;                  void *vaddr, dma_addr_t dma_handle,</span>
<span class="quote">&gt;&gt; -               struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +               unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;       void *swiotlb_addr = phys_to_virt(dma_to_phys(dev, dma_handle));</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; @@ -202,7 +202,7 @@ static void __dma_free(struct device *dev, size_t</span>
<span class="quote">&gt;&gt; size,</span>
<span class="quote">&gt;&gt;   static dma_addr_t __swiotlb_map_page(struct device *dev, struct page</span>
<span class="quote">&gt;&gt; *page,</span>
<span class="quote">&gt;&gt;                        unsigned long offset, size_t size,</span>
<span class="quote">&gt;&gt;                        enum dma_data_direction dir,</span>
<span class="quote">&gt;&gt; -                     struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +                     unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;       dma_addr_t dev_addr;</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; @@ -216,7 +216,7 @@ static dma_addr_t __swiotlb_map_page(struct device</span>
<span class="quote">&gt;&gt; *dev, struct page *page,</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;   static void __swiotlb_unmap_page(struct device *dev, dma_addr_t</span>
<span class="quote">&gt;&gt; dev_addr,</span>
<span class="quote">&gt;&gt;                    size_t size, enum dma_data_direction dir,</span>
<span class="quote">&gt;&gt; -                 struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +                 unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;       if (!is_device_dma_coherent(dev))</span>
<span class="quote">&gt;&gt;           __dma_unmap_area(phys_to_virt(dma_to_phys(dev, dev_addr)),</span>
<span class="quote">&gt;&gt; size, dir);</span>
<span class="quote">&gt;&gt; @@ -225,7 +225,7 @@ static void __swiotlb_unmap_page(struct device</span>
<span class="quote">&gt;&gt; *dev, dma_addr_t dev_addr,</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;   static int __swiotlb_map_sg_attrs(struct device *dev, struct</span>
<span class="quote">&gt;&gt; scatterlist *sgl,</span>
<span class="quote">&gt;&gt;                     int nelems, enum dma_data_direction dir,</span>
<span class="quote">&gt;&gt; -                  struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +                  unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;       struct scatterlist *sg;</span>
<span class="quote">&gt;&gt;       int i, ret;</span>
<span class="quote">&gt;&gt; @@ -242,7 +242,7 @@ static int __swiotlb_map_sg_attrs(struct device</span>
<span class="quote">&gt;&gt; *dev, struct scatterlist *sgl,</span>
<span class="quote">&gt;&gt;   static void __swiotlb_unmap_sg_attrs(struct device *dev,</span>
<span class="quote">&gt;&gt;                        struct scatterlist *sgl, int nelems,</span>
<span class="quote">&gt;&gt;                        enum dma_data_direction dir,</span>
<span class="quote">&gt;&gt; -                     struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +                     unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;       struct scatterlist *sg;</span>
<span class="quote">&gt;&gt;       int i;</span>
<span class="quote">&gt;&gt; @@ -303,7 +303,7 @@ static void __swiotlb_sync_sg_for_device(struct</span>
<span class="quote">&gt;&gt; device *dev,</span>
<span class="quote">&gt;&gt;   static int __swiotlb_mmap(struct device *dev,</span>
<span class="quote">&gt;&gt;                 struct vm_area_struct *vma,</span>
<span class="quote">&gt;&gt;                 void *cpu_addr, dma_addr_t dma_addr, size_t size,</span>
<span class="quote">&gt;&gt; -              struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +              unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;       int ret = -ENXIO;</span>
<span class="quote">&gt;&gt;       unsigned long nr_vma_pages = (vma-&gt;vm_end - vma-&gt;vm_start) &gt;&gt;</span>
<span class="quote">&gt;&gt; @@ -330,7 +330,7 @@ static int __swiotlb_mmap(struct device *dev,</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;   static int __swiotlb_get_sgtable(struct device *dev, struct sg_table</span>
<span class="quote">&gt;&gt; *sgt,</span>
<span class="quote">&gt;&gt;                    void *cpu_addr, dma_addr_t handle, size_t size,</span>
<span class="quote">&gt;&gt; -                 struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +                 unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;       int ret = sg_alloc_table(sgt, 1, GFP_KERNEL);</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; @@ -425,21 +425,21 @@ out:</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;   static void *__dummy_alloc(struct device *dev, size_t size,</span>
<span class="quote">&gt;&gt;                  dma_addr_t *dma_handle, gfp_t flags,</span>
<span class="quote">&gt;&gt; -               struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +               unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;       return NULL;</span>
<span class="quote">&gt;&gt;   }</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;   static void __dummy_free(struct device *dev, size_t size,</span>
<span class="quote">&gt;&gt;                void *vaddr, dma_addr_t dma_handle,</span>
<span class="quote">&gt;&gt; -             struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +             unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;   }</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;   static int __dummy_mmap(struct device *dev,</span>
<span class="quote">&gt;&gt;               struct vm_area_struct *vma,</span>
<span class="quote">&gt;&gt;               void *cpu_addr, dma_addr_t dma_addr, size_t size,</span>
<span class="quote">&gt;&gt; -            struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +            unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;       return -ENXIO;</span>
<span class="quote">&gt;&gt;   }</span>
<span class="quote">&gt;&gt; @@ -447,20 +447,20 @@ static int __dummy_mmap(struct device *dev,</span>
<span class="quote">&gt;&gt;   static dma_addr_t __dummy_map_page(struct device *dev, struct page</span>
<span class="quote">&gt;&gt; *page,</span>
<span class="quote">&gt;&gt;                      unsigned long offset, size_t size,</span>
<span class="quote">&gt;&gt;                      enum dma_data_direction dir,</span>
<span class="quote">&gt;&gt; -                   struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +                   unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;       return DMA_ERROR_CODE;</span>
<span class="quote">&gt;&gt;   }</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;   static void __dummy_unmap_page(struct device *dev, dma_addr_t dev_addr,</span>
<span class="quote">&gt;&gt;                      size_t size, enum dma_data_direction dir,</span>
<span class="quote">&gt;&gt; -                   struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +                   unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;   }</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;   static int __dummy_map_sg(struct device *dev, struct scatterlist *sgl,</span>
<span class="quote">&gt;&gt;                 int nelems, enum dma_data_direction dir,</span>
<span class="quote">&gt;&gt; -              struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +              unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;       return 0;</span>
<span class="quote">&gt;&gt;   }</span>
<span class="quote">&gt;&gt; @@ -468,7 +468,7 @@ static int __dummy_map_sg(struct device *dev,</span>
<span class="quote">&gt;&gt; struct scatterlist *sgl,</span>
<span class="quote">&gt;&gt;   static void __dummy_unmap_sg(struct device *dev,</span>
<span class="quote">&gt;&gt;                    struct scatterlist *sgl, int nelems,</span>
<span class="quote">&gt;&gt;                    enum dma_data_direction dir,</span>
<span class="quote">&gt;&gt; -                 struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +                 unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;   }</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; @@ -540,7 +540,7 @@ static void flush_page(struct device *dev, const</span>
<span class="quote">&gt;&gt; void *virt, phys_addr_t phys)</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;   static void *__iommu_alloc_attrs(struct device *dev, size_t size,</span>
<span class="quote">&gt;&gt;                    dma_addr_t *handle, gfp_t gfp,</span>
<span class="quote">&gt;&gt; -                 struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +                 unsigned long attrs)</span>
<span class="quote">&gt;&gt;   {</span>
<span class="quote">&gt;&gt;       bool coherent = is_device_dma_coherent(dev);</span>
<span class="quote">&gt;&gt;       int ioprot = dma_direction_to_prot(DMA_BIDIRECTIONAL, coherent);</span>
<span class="quote">&gt;&gt; @@ -600,7 +600,8 @@ static void *__iommu_alloc_attrs(struct device</span>
<span class="quote">&gt;&gt; *dev, size_t size,</span>
<span class="quote">&gt;&gt;   }</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;   static void __iommu_free_attrs(struct device *dev, size_t size, void</span>
<span class="quote">&gt;&gt; *cpu_addr,</span>
<span class="quote">&gt;&gt; -                   dma_addr_t handle, struct dma_attrs *attrs)</span>
<span class="quote">&gt;&gt; +                   dma_addr_t handle,</span>
<span class="quote">&gt;&gt; +                   unsigned long attrs)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Nit: unnecessary line break?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Otherwise, though, I&#39;m all for the idea;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Acked-by: Robin Murphy &lt;robin.murphy@arm.com&gt;</span>

Right, thanks!

Best regards,
Krzysztof
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/mm/dma-mapping.c b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">index 0ef620a34c4e..a7686028dfeb 100644</span>
<span class="p_header">--- a/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">+++ b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_chunk">@@ -29,7 +29,7 @@</span> <span class="p_context"></span>
 
 #include &lt;asm/cacheflush.h&gt;
 
<span class="p_del">-static pgprot_t __get_dma_pgprot(const struct dma_attrs *attrs, pgprot_t prot,</span>
<span class="p_add">+static pgprot_t __get_dma_pgprot(unsigned long attrs, pgprot_t prot,</span>
 				 bool coherent)
 {
 	if (!coherent || dma_get_attr(DMA_ATTR_WRITE_COMBINE, attrs))
<span class="p_chunk">@@ -88,7 +88,7 @@</span> <span class="p_context"> static int __free_from_pool(void *start, size_t size)</span>
 
 static void *__dma_alloc_coherent(struct device *dev, size_t size,
 				  dma_addr_t *dma_handle, gfp_t flags,
<span class="p_del">-				  const struct dma_attrs *attrs)</span>
<span class="p_add">+				  unsigned long attrs)</span>
 {
 	if (dev == NULL) {
 		WARN_ONCE(1, &quot;Use an actual device structure for DMA allocation\n&quot;);
<span class="p_chunk">@@ -118,7 +118,7 @@</span> <span class="p_context"> static void *__dma_alloc_coherent(struct device *dev, size_t size,</span>
 
 static void __dma_free_coherent(struct device *dev, size_t size,
 				void *vaddr, dma_addr_t dma_handle,
<span class="p_del">-				const struct dma_attrs *attrs)</span>
<span class="p_add">+				unsigned long attrs)</span>
 {
 	bool freed;
 	phys_addr_t paddr = dma_to_phys(dev, dma_handle);
<span class="p_chunk">@@ -137,7 +137,7 @@</span> <span class="p_context"> static void __dma_free_coherent(struct device *dev, size_t size,</span>
 
 static void *__dma_alloc(struct device *dev, size_t size,
 			 dma_addr_t *dma_handle, gfp_t flags,
<span class="p_del">-			 struct dma_attrs *attrs)</span>
<span class="p_add">+			 unsigned long attrs)</span>
 {
 	struct page *page;
 	void *ptr, *coherent_ptr;
<span class="p_chunk">@@ -185,7 +185,7 @@</span> <span class="p_context"> no_mem:</span>
 
 static void __dma_free(struct device *dev, size_t size,
 		       void *vaddr, dma_addr_t dma_handle,
<span class="p_del">-		       struct dma_attrs *attrs)</span>
<span class="p_add">+		       unsigned long attrs)</span>
 {
 	void *swiotlb_addr = phys_to_virt(dma_to_phys(dev, dma_handle));
 
<span class="p_chunk">@@ -202,7 +202,7 @@</span> <span class="p_context"> static void __dma_free(struct device *dev, size_t size,</span>
 static dma_addr_t __swiotlb_map_page(struct device *dev, struct page *page,
 				     unsigned long offset, size_t size,
 				     enum dma_data_direction dir,
<span class="p_del">-				     struct dma_attrs *attrs)</span>
<span class="p_add">+				     unsigned long attrs)</span>
 {
 	dma_addr_t dev_addr;
 
<span class="p_chunk">@@ -216,7 +216,7 @@</span> <span class="p_context"> static dma_addr_t __swiotlb_map_page(struct device *dev, struct page *page,</span>
 
 static void __swiotlb_unmap_page(struct device *dev, dma_addr_t dev_addr,
 				 size_t size, enum dma_data_direction dir,
<span class="p_del">-				 struct dma_attrs *attrs)</span>
<span class="p_add">+				 unsigned long attrs)</span>
 {
 	if (!is_device_dma_coherent(dev))
 		__dma_unmap_area(phys_to_virt(dma_to_phys(dev, dev_addr)), size, dir);
<span class="p_chunk">@@ -225,7 +225,7 @@</span> <span class="p_context"> static void __swiotlb_unmap_page(struct device *dev, dma_addr_t dev_addr,</span>
 
 static int __swiotlb_map_sg_attrs(struct device *dev, struct scatterlist *sgl,
 				  int nelems, enum dma_data_direction dir,
<span class="p_del">-				  struct dma_attrs *attrs)</span>
<span class="p_add">+				  unsigned long attrs)</span>
 {
 	struct scatterlist *sg;
 	int i, ret;
<span class="p_chunk">@@ -242,7 +242,7 @@</span> <span class="p_context"> static int __swiotlb_map_sg_attrs(struct device *dev, struct scatterlist *sgl,</span>
 static void __swiotlb_unmap_sg_attrs(struct device *dev,
 				     struct scatterlist *sgl, int nelems,
 				     enum dma_data_direction dir,
<span class="p_del">-				     struct dma_attrs *attrs)</span>
<span class="p_add">+				     unsigned long attrs)</span>
 {
 	struct scatterlist *sg;
 	int i;
<span class="p_chunk">@@ -303,7 +303,7 @@</span> <span class="p_context"> static void __swiotlb_sync_sg_for_device(struct device *dev,</span>
 static int __swiotlb_mmap(struct device *dev,
 			  struct vm_area_struct *vma,
 			  void *cpu_addr, dma_addr_t dma_addr, size_t size,
<span class="p_del">-			  struct dma_attrs *attrs)</span>
<span class="p_add">+			  unsigned long attrs)</span>
 {
 	int ret = -ENXIO;
 	unsigned long nr_vma_pages = (vma-&gt;vm_end - vma-&gt;vm_start) &gt;&gt;
<span class="p_chunk">@@ -330,7 +330,7 @@</span> <span class="p_context"> static int __swiotlb_mmap(struct device *dev,</span>
 
 static int __swiotlb_get_sgtable(struct device *dev, struct sg_table *sgt,
 				 void *cpu_addr, dma_addr_t handle, size_t size,
<span class="p_del">-				 struct dma_attrs *attrs)</span>
<span class="p_add">+				 unsigned long attrs)</span>
 {
 	int ret = sg_alloc_table(sgt, 1, GFP_KERNEL);
 
<span class="p_chunk">@@ -425,21 +425,21 @@</span> <span class="p_context"> out:</span>
 
 static void *__dummy_alloc(struct device *dev, size_t size,
 			   dma_addr_t *dma_handle, gfp_t flags,
<span class="p_del">-			   struct dma_attrs *attrs)</span>
<span class="p_add">+			   unsigned long attrs)</span>
 {
 	return NULL;
 }
 
 static void __dummy_free(struct device *dev, size_t size,
 			 void *vaddr, dma_addr_t dma_handle,
<span class="p_del">-			 struct dma_attrs *attrs)</span>
<span class="p_add">+			 unsigned long attrs)</span>
 {
 }
 
 static int __dummy_mmap(struct device *dev,
 			struct vm_area_struct *vma,
 			void *cpu_addr, dma_addr_t dma_addr, size_t size,
<span class="p_del">-			struct dma_attrs *attrs)</span>
<span class="p_add">+			unsigned long attrs)</span>
 {
 	return -ENXIO;
 }
<span class="p_chunk">@@ -447,20 +447,20 @@</span> <span class="p_context"> static int __dummy_mmap(struct device *dev,</span>
 static dma_addr_t __dummy_map_page(struct device *dev, struct page *page,
 				   unsigned long offset, size_t size,
 				   enum dma_data_direction dir,
<span class="p_del">-				   struct dma_attrs *attrs)</span>
<span class="p_add">+				   unsigned long attrs)</span>
 {
 	return DMA_ERROR_CODE;
 }
 
 static void __dummy_unmap_page(struct device *dev, dma_addr_t dev_addr,
 			       size_t size, enum dma_data_direction dir,
<span class="p_del">-			       struct dma_attrs *attrs)</span>
<span class="p_add">+			       unsigned long attrs)</span>
 {
 }
 
 static int __dummy_map_sg(struct device *dev, struct scatterlist *sgl,
 			  int nelems, enum dma_data_direction dir,
<span class="p_del">-			  struct dma_attrs *attrs)</span>
<span class="p_add">+			  unsigned long attrs)</span>
 {
 	return 0;
 }
<span class="p_chunk">@@ -468,7 +468,7 @@</span> <span class="p_context"> static int __dummy_map_sg(struct device *dev, struct scatterlist *sgl,</span>
 static void __dummy_unmap_sg(struct device *dev,
 			     struct scatterlist *sgl, int nelems,
 			     enum dma_data_direction dir,
<span class="p_del">-			     struct dma_attrs *attrs)</span>
<span class="p_add">+			     unsigned long attrs)</span>
 {
 }
 
<span class="p_chunk">@@ -540,7 +540,7 @@</span> <span class="p_context"> static void flush_page(struct device *dev, const void *virt, phys_addr_t phys)</span>
 
 static void *__iommu_alloc_attrs(struct device *dev, size_t size,
 				 dma_addr_t *handle, gfp_t gfp,
<span class="p_del">-				 struct dma_attrs *attrs)</span>
<span class="p_add">+				 unsigned long attrs)</span>
 {
 	bool coherent = is_device_dma_coherent(dev);
 	int ioprot = dma_direction_to_prot(DMA_BIDIRECTIONAL, coherent);
<span class="p_chunk">@@ -600,7 +600,8 @@</span> <span class="p_context"> static void *__iommu_alloc_attrs(struct device *dev, size_t size,</span>
 }
 
 static void __iommu_free_attrs(struct device *dev, size_t size, void *cpu_addr,
<span class="p_del">-			       dma_addr_t handle, struct dma_attrs *attrs)</span>
<span class="p_add">+			       dma_addr_t handle,</span>
<span class="p_add">+			       unsigned long attrs)</span>
 {
 	size_t iosize = size;
 
<span class="p_chunk">@@ -616,7 +617,7 @@</span> <span class="p_context"> static void __iommu_free_attrs(struct device *dev, size_t size, void *cpu_addr,</span>
 	 * Hence how dodgy the below logic looks...
 	 */
 	if (__in_atomic_pool(cpu_addr, size)) {
<span class="p_del">-		iommu_dma_unmap_page(dev, handle, iosize, 0, NULL);</span>
<span class="p_add">+		iommu_dma_unmap_page(dev, handle, iosize, 0, 0);</span>
 		__free_from_pool(cpu_addr, size);
 	} else if (is_vmalloc_addr(cpu_addr)){
 		struct vm_struct *area = find_vm_area(cpu_addr);
<span class="p_chunk">@@ -626,14 +627,14 @@</span> <span class="p_context"> static void __iommu_free_attrs(struct device *dev, size_t size, void *cpu_addr,</span>
 		iommu_dma_free(dev, area-&gt;pages, iosize, &amp;handle);
 		dma_common_free_remap(cpu_addr, size, VM_USERMAP);
 	} else {
<span class="p_del">-		iommu_dma_unmap_page(dev, handle, iosize, 0, NULL);</span>
<span class="p_add">+		iommu_dma_unmap_page(dev, handle, iosize, 0, 0);</span>
 		__free_pages(virt_to_page(cpu_addr), get_order(size));
 	}
 }
 
 static int __iommu_mmap_attrs(struct device *dev, struct vm_area_struct *vma,
 			      void *cpu_addr, dma_addr_t dma_addr, size_t size,
<span class="p_del">-			      struct dma_attrs *attrs)</span>
<span class="p_add">+			      unsigned long attrs)</span>
 {
 	struct vm_struct *area;
 	int ret;
<span class="p_chunk">@@ -653,7 +654,7 @@</span> <span class="p_context"> static int __iommu_mmap_attrs(struct device *dev, struct vm_area_struct *vma,</span>
 
 static int __iommu_get_sgtable(struct device *dev, struct sg_table *sgt,
 			       void *cpu_addr, dma_addr_t dma_addr,
<span class="p_del">-			       size_t size, struct dma_attrs *attrs)</span>
<span class="p_add">+			       size_t size, unsigned long attrs)</span>
 {
 	unsigned int count = PAGE_ALIGN(size) &gt;&gt; PAGE_SHIFT;
 	struct vm_struct *area = find_vm_area(cpu_addr);
<span class="p_chunk">@@ -694,7 +695,7 @@</span> <span class="p_context"> static void __iommu_sync_single_for_device(struct device *dev,</span>
 static dma_addr_t __iommu_map_page(struct device *dev, struct page *page,
 				   unsigned long offset, size_t size,
 				   enum dma_data_direction dir,
<span class="p_del">-				   struct dma_attrs *attrs)</span>
<span class="p_add">+				   unsigned long attrs)</span>
 {
 	bool coherent = is_device_dma_coherent(dev);
 	int prot = dma_direction_to_prot(dir, coherent);
<span class="p_chunk">@@ -709,7 +710,7 @@</span> <span class="p_context"> static dma_addr_t __iommu_map_page(struct device *dev, struct page *page,</span>
 
 static void __iommu_unmap_page(struct device *dev, dma_addr_t dev_addr,
 			       size_t size, enum dma_data_direction dir,
<span class="p_del">-			       struct dma_attrs *attrs)</span>
<span class="p_add">+			       unsigned long attrs)</span>
 {
 	if (!dma_get_attr(DMA_ATTR_SKIP_CPU_SYNC, attrs))
 		__iommu_sync_single_for_cpu(dev, dev_addr, size, dir);
<span class="p_chunk">@@ -747,7 +748,7 @@</span> <span class="p_context"> static void __iommu_sync_sg_for_device(struct device *dev,</span>
 
 static int __iommu_map_sg_attrs(struct device *dev, struct scatterlist *sgl,
 				int nelems, enum dma_data_direction dir,
<span class="p_del">-				struct dma_attrs *attrs)</span>
<span class="p_add">+				unsigned long attrs)</span>
 {
 	bool coherent = is_device_dma_coherent(dev);
 
<span class="p_chunk">@@ -761,7 +762,7 @@</span> <span class="p_context"> static int __iommu_map_sg_attrs(struct device *dev, struct scatterlist *sgl,</span>
 static void __iommu_unmap_sg_attrs(struct device *dev,
 				   struct scatterlist *sgl, int nelems,
 				   enum dma_data_direction dir,
<span class="p_del">-				   struct dma_attrs *attrs)</span>
<span class="p_add">+				   unsigned long attrs)</span>
 {
 	if (!dma_get_attr(DMA_ATTR_SKIP_CPU_SYNC, attrs))
 		__iommu_sync_sg_for_cpu(dev, sgl, nelems, dir);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



