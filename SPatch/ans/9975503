
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>Linux 3.18.72 - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    Linux 3.18.72</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 28, 2017, 8:30 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170928083042.GB10671@kroah.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9975503/mbox/"
   >mbox</a>
|
   <a href="/patch/9975503/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9975503/">/patch/9975503/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	560D56034B for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 28 Sep 2017 08:30:56 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3A41629504
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 28 Sep 2017 08:30:56 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 2E93429516; Thu, 28 Sep 2017 08:30:56 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id AEB7029505
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 28 Sep 2017 08:30:53 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752357AbdI1Iaw (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 28 Sep 2017 04:30:52 -0400
Received: from mail.linuxfoundation.org ([140.211.169.12]:56192 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752227AbdI1Iaq (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 28 Sep 2017 04:30:46 -0400
Received: from localhost (unknown [195.81.232.10])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id DA98C8FF;
	Thu, 28 Sep 2017 08:30:44 +0000 (UTC)
Date: Thu, 28 Sep 2017 10:30:42 +0200
From: Greg KH &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org, Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	torvalds@linux-foundation.org, stable@vger.kernel.org
Cc: lwn@lwn.net, Jiri Slaby &lt;jslaby@suse.cz&gt;
Subject: Re: Linux 3.18.72
Message-ID: &lt;20170928083042.GB10671@kroah.com&gt;
References: &lt;20170928083036.GA10671@kroah.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: &lt;20170928083036.GA10671@kroah.com&gt;
User-Agent: Mutt/1.9.1 (2017-09-22)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Sept. 28, 2017, 8:30 a.m.</div>
<pre class="content">

</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/Makefile b/Makefile</span>
<span class="p_header">index 33feb19e7241..9b82f279ef1d 100644</span>
<span class="p_header">--- a/Makefile</span>
<span class="p_header">+++ b/Makefile</span>
<span class="p_chunk">@@ -1,6 +1,6 @@</span> <span class="p_context"></span>
 VERSION = 3
 PATCHLEVEL = 18
<span class="p_del">-SUBLEVEL = 71</span>
<span class="p_add">+SUBLEVEL = 72</span>
 EXTRAVERSION =
 NAME = Diseased Newt
 
<span class="p_header">diff --git a/arch/arc/kernel/entry.S b/arch/arc/kernel/entry.S</span>
<span class="p_header">index 83a046a7cd06..51b419a00def 100644</span>
<span class="p_header">--- a/arch/arc/kernel/entry.S</span>
<span class="p_header">+++ b/arch/arc/kernel/entry.S</span>
<span class="p_chunk">@@ -315,6 +315,12 @@</span> <span class="p_context"> ENTRY(EV_MachineCheck)</span>
 	lr  r0, [efa]
 	mov r1, sp
 
<span class="p_add">+	; hardware auto-disables MMU, re-enable it to allow kernel vaddr</span>
<span class="p_add">+	; access for say stack unwinding of modules for crash dumps</span>
<span class="p_add">+	lr	r3, [ARC_REG_PID]</span>
<span class="p_add">+	or	r3, r3, MMU_ENABLE</span>
<span class="p_add">+	sr	r3, [ARC_REG_PID]</span>
<span class="p_add">+</span>
 	lsr  	r3, r2, 8
 	bmsk 	r3, r3, 7
 	brne    r3, ECR_C_MCHK_DUP_TLB, 1f
<span class="p_header">diff --git a/arch/arc/mm/tlb.c b/arch/arc/mm/tlb.c</span>
<span class="p_header">index 7f47d2a56f44..b7a0c44785c1 100644</span>
<span class="p_header">--- a/arch/arc/mm/tlb.c</span>
<span class="p_header">+++ b/arch/arc/mm/tlb.c</span>
<span class="p_chunk">@@ -689,9 +689,6 @@</span> <span class="p_context"> void do_tlb_overlap_fault(unsigned long cause, unsigned long address,</span>
 
 	local_irq_save(flags);
 
<span class="p_del">-	/* re-enable the MMU */</span>
<span class="p_del">-	write_aux_reg(ARC_REG_PID, MMU_ENABLE | read_aux_reg(ARC_REG_PID));</span>
<span class="p_del">-</span>
 	/* loop thru all sets of TLB */
 	for (set = 0; set &lt; mmu-&gt;sets; set++) {
 
<span class="p_header">diff --git a/arch/powerpc/kernel/align.c b/arch/powerpc/kernel/align.c</span>
<span class="p_header">index ce068cb2071f..aa3042044118 100644</span>
<span class="p_header">--- a/arch/powerpc/kernel/align.c</span>
<span class="p_header">+++ b/arch/powerpc/kernel/align.c</span>
<span class="p_chunk">@@ -236,6 +236,28 @@</span> <span class="p_context"> static int emulate_dcbz(struct pt_regs *regs, unsigned char __user *addr)</span>
 
 #define SWIZ_PTR(p)		((unsigned char __user *)((p) ^ swiz))
 
<span class="p_add">+#define __get_user_or_set_dar(_regs, _dest, _addr)		\</span>
<span class="p_add">+	({							\</span>
<span class="p_add">+		int rc = 0;					\</span>
<span class="p_add">+		typeof(_addr) __addr = (_addr);			\</span>
<span class="p_add">+		if (__get_user_inatomic(_dest, __addr)) {	\</span>
<span class="p_add">+			_regs-&gt;dar = (unsigned long)__addr;	\</span>
<span class="p_add">+			rc = -EFAULT;				\</span>
<span class="p_add">+		}						\</span>
<span class="p_add">+		rc;						\</span>
<span class="p_add">+	})</span>
<span class="p_add">+</span>
<span class="p_add">+#define __put_user_or_set_dar(_regs, _src, _addr)		\</span>
<span class="p_add">+	({							\</span>
<span class="p_add">+		int rc = 0;					\</span>
<span class="p_add">+		typeof(_addr) __addr = (_addr);			\</span>
<span class="p_add">+		if (__put_user_inatomic(_src, __addr)) {	\</span>
<span class="p_add">+			_regs-&gt;dar = (unsigned long)__addr;	\</span>
<span class="p_add">+			rc = -EFAULT;				\</span>
<span class="p_add">+		}						\</span>
<span class="p_add">+		rc;						\</span>
<span class="p_add">+	})</span>
<span class="p_add">+</span>
 static int emulate_multiple(struct pt_regs *regs, unsigned char __user *addr,
 			    unsigned int reg, unsigned int nb,
 			    unsigned int flags, unsigned int instr,
<span class="p_chunk">@@ -264,9 +286,10 @@</span> <span class="p_context"> static int emulate_multiple(struct pt_regs *regs, unsigned char __user *addr,</span>
 		} else {
 			unsigned long pc = regs-&gt;nip ^ (swiz &amp; 4);
 
<span class="p_del">-			if (__get_user_inatomic(instr,</span>
<span class="p_del">-						(unsigned int __user *)pc))</span>
<span class="p_add">+			if (__get_user_or_set_dar(regs, instr,</span>
<span class="p_add">+						  (unsigned int __user *)pc))</span>
 				return -EFAULT;
<span class="p_add">+</span>
 			if (swiz == 0 &amp;&amp; (flags &amp; SW))
 				instr = cpu_to_le32(instr);
 			nb = (instr &gt;&gt; 11) &amp; 0x1f;
<span class="p_chunk">@@ -310,31 +333,31 @@</span> <span class="p_context"> static int emulate_multiple(struct pt_regs *regs, unsigned char __user *addr,</span>
 			       ((nb0 + 3) / 4) * sizeof(unsigned long));
 
 		for (i = 0; i &lt; nb; ++i, ++p)
<span class="p_del">-			if (__get_user_inatomic(REG_BYTE(rptr, i ^ bswiz),</span>
<span class="p_del">-						SWIZ_PTR(p)))</span>
<span class="p_add">+			if (__get_user_or_set_dar(regs, REG_BYTE(rptr, i ^ bswiz),</span>
<span class="p_add">+						  SWIZ_PTR(p)))</span>
 				return -EFAULT;
 		if (nb0 &gt; 0) {
 			rptr = &amp;regs-&gt;gpr[0];
 			addr += nb;
 			for (i = 0; i &lt; nb0; ++i, ++p)
<span class="p_del">-				if (__get_user_inatomic(REG_BYTE(rptr,</span>
<span class="p_del">-								 i ^ bswiz),</span>
<span class="p_del">-							SWIZ_PTR(p)))</span>
<span class="p_add">+				if (__get_user_or_set_dar(regs,</span>
<span class="p_add">+							  REG_BYTE(rptr, i ^ bswiz),</span>
<span class="p_add">+							  SWIZ_PTR(p)))</span>
 					return -EFAULT;
 		}
 
 	} else {
 		for (i = 0; i &lt; nb; ++i, ++p)
<span class="p_del">-			if (__put_user_inatomic(REG_BYTE(rptr, i ^ bswiz),</span>
<span class="p_del">-						SWIZ_PTR(p)))</span>
<span class="p_add">+			if (__put_user_or_set_dar(regs, REG_BYTE(rptr, i ^ bswiz),</span>
<span class="p_add">+						  SWIZ_PTR(p)))</span>
 				return -EFAULT;
 		if (nb0 &gt; 0) {
 			rptr = &amp;regs-&gt;gpr[0];
 			addr += nb;
 			for (i = 0; i &lt; nb0; ++i, ++p)
<span class="p_del">-				if (__put_user_inatomic(REG_BYTE(rptr,</span>
<span class="p_del">-								 i ^ bswiz),</span>
<span class="p_del">-							SWIZ_PTR(p)))</span>
<span class="p_add">+				if (__put_user_or_set_dar(regs,</span>
<span class="p_add">+							  REG_BYTE(rptr, i ^ bswiz),</span>
<span class="p_add">+							  SWIZ_PTR(p)))</span>
 					return -EFAULT;
 		}
 	}
<span class="p_chunk">@@ -346,29 +369,32 @@</span> <span class="p_context"> static int emulate_multiple(struct pt_regs *regs, unsigned char __user *addr,</span>
  * Only POWER6 has these instructions, and it does true little-endian,
  * so we don&#39;t need the address swizzling.
  */
<span class="p_del">-static int emulate_fp_pair(unsigned char __user *addr, unsigned int reg,</span>
<span class="p_del">-			   unsigned int flags)</span>
<span class="p_add">+static int emulate_fp_pair(struct pt_regs *regs, unsigned char __user *addr,</span>
<span class="p_add">+			   unsigned int reg, unsigned int flags)</span>
 {
 	char *ptr0 = (char *) &amp;current-&gt;thread.TS_FPR(reg);
 	char *ptr1 = (char *) &amp;current-&gt;thread.TS_FPR(reg+1);
<span class="p_del">-	int i, ret, sw = 0;</span>
<span class="p_add">+	int i, sw = 0;</span>
 
 	if (reg &amp; 1)
 		return 0;	/* invalid form: FRS/FRT must be even */
 	if (flags &amp; SW)
 		sw = 7;
<span class="p_del">-	ret = 0;</span>
<span class="p_add">+</span>
 	for (i = 0; i &lt; 8; ++i) {
 		if (!(flags &amp; ST)) {
<span class="p_del">-			ret |= __get_user(ptr0[i^sw], addr + i);</span>
<span class="p_del">-			ret |= __get_user(ptr1[i^sw], addr + i + 8);</span>
<span class="p_add">+			if (__get_user_or_set_dar(regs, ptr0[i^sw], addr + i))</span>
<span class="p_add">+				return -EFAULT;</span>
<span class="p_add">+			if (__get_user_or_set_dar(regs, ptr1[i^sw], addr + i + 8))</span>
<span class="p_add">+				return -EFAULT;</span>
 		} else {
<span class="p_del">-			ret |= __put_user(ptr0[i^sw], addr + i);</span>
<span class="p_del">-			ret |= __put_user(ptr1[i^sw], addr + i + 8);</span>
<span class="p_add">+			if (__put_user_or_set_dar(regs, ptr0[i^sw], addr + i))</span>
<span class="p_add">+				return -EFAULT;</span>
<span class="p_add">+			if (__put_user_or_set_dar(regs, ptr1[i^sw], addr + i + 8))</span>
<span class="p_add">+				return -EFAULT;</span>
 		}
 	}
<span class="p_del">-	if (ret)</span>
<span class="p_del">-		return -EFAULT;</span>
<span class="p_add">+</span>
 	return 1;	/* exception handled and fixed up */
 }
 
<span class="p_chunk">@@ -378,24 +404,27 @@</span> <span class="p_context"> static int emulate_lq_stq(struct pt_regs *regs, unsigned char __user *addr,</span>
 {
 	char *ptr0 = (char *)&amp;regs-&gt;gpr[reg];
 	char *ptr1 = (char *)&amp;regs-&gt;gpr[reg+1];
<span class="p_del">-	int i, ret, sw = 0;</span>
<span class="p_add">+	int i, sw = 0;</span>
 
 	if (reg &amp; 1)
 		return 0;	/* invalid form: GPR must be even */
 	if (flags &amp; SW)
 		sw = 7;
<span class="p_del">-	ret = 0;</span>
<span class="p_add">+</span>
 	for (i = 0; i &lt; 8; ++i) {
 		if (!(flags &amp; ST)) {
<span class="p_del">-			ret |= __get_user(ptr0[i^sw], addr + i);</span>
<span class="p_del">-			ret |= __get_user(ptr1[i^sw], addr + i + 8);</span>
<span class="p_add">+			if (__get_user_or_set_dar(regs, ptr0[i^sw], addr + i))</span>
<span class="p_add">+				return -EFAULT;</span>
<span class="p_add">+			if (__get_user_or_set_dar(regs, ptr1[i^sw], addr + i + 8))</span>
<span class="p_add">+				return -EFAULT;</span>
 		} else {
<span class="p_del">-			ret |= __put_user(ptr0[i^sw], addr + i);</span>
<span class="p_del">-			ret |= __put_user(ptr1[i^sw], addr + i + 8);</span>
<span class="p_add">+			if (__put_user_or_set_dar(regs, ptr0[i^sw], addr + i))</span>
<span class="p_add">+				return -EFAULT;</span>
<span class="p_add">+			if (__put_user_or_set_dar(regs, ptr1[i^sw], addr + i + 8))</span>
<span class="p_add">+				return -EFAULT;</span>
 		}
 	}
<span class="p_del">-	if (ret)</span>
<span class="p_del">-		return -EFAULT;</span>
<span class="p_add">+</span>
 	return 1;	/* exception handled and fixed up */
 }
 #endif /* CONFIG_PPC64 */
<span class="p_chunk">@@ -688,9 +717,14 @@</span> <span class="p_context"> static int emulate_vsx(unsigned char __user *addr, unsigned int reg,</span>
 	for (j = 0; j &lt; length; j += elsize) {
 		for (i = 0; i &lt; elsize; ++i) {
 			if (flags &amp; ST)
<span class="p_del">-				ret |= __put_user(ptr[i^sw], addr + i);</span>
<span class="p_add">+				ret = __put_user_or_set_dar(regs, ptr[i^sw],</span>
<span class="p_add">+							    addr + i);</span>
 			else
<span class="p_del">-				ret |= __get_user(ptr[i^sw], addr + i);</span>
<span class="p_add">+				ret = __get_user_or_set_dar(regs, ptr[i^sw],</span>
<span class="p_add">+							    addr + i);</span>
<span class="p_add">+</span>
<span class="p_add">+			if (ret)</span>
<span class="p_add">+				return ret;</span>
 		}
 		ptr  += elsize;
 #ifdef __LITTLE_ENDIAN__
<span class="p_chunk">@@ -740,7 +774,7 @@</span> <span class="p_context"> int fix_alignment(struct pt_regs *regs)</span>
 	unsigned int dsisr;
 	unsigned char __user *addr;
 	unsigned long p, swiz;
<span class="p_del">-	int ret, i;</span>
<span class="p_add">+	int i;</span>
 	union data {
 		u64 ll;
 		double dd;
<span class="p_chunk">@@ -923,7 +957,7 @@</span> <span class="p_context"> int fix_alignment(struct pt_regs *regs)</span>
 		if (flags &amp; F) {
 			/* Special case for 16-byte FP loads and stores */
 			PPC_WARN_ALIGNMENT(fp_pair, regs);
<span class="p_del">-			return emulate_fp_pair(addr, reg, flags);</span>
<span class="p_add">+			return emulate_fp_pair(regs, addr, reg, flags);</span>
 		} else {
 #ifdef CONFIG_PPC64
 			/* Special case for 16-byte loads and stores */
<span class="p_chunk">@@ -953,15 +987,12 @@</span> <span class="p_context"> int fix_alignment(struct pt_regs *regs)</span>
 		}
 
 		data.ll = 0;
<span class="p_del">-		ret = 0;</span>
 		p = (unsigned long)addr;
 
 		for (i = 0; i &lt; nb; i++)
<span class="p_del">-			ret |= __get_user_inatomic(data.v[start + i],</span>
<span class="p_del">-						   SWIZ_PTR(p++));</span>
<span class="p_del">-</span>
<span class="p_del">-		if (unlikely(ret))</span>
<span class="p_del">-			return -EFAULT;</span>
<span class="p_add">+			if (__get_user_or_set_dar(regs, data.v[start + i],</span>
<span class="p_add">+						  SWIZ_PTR(p++)))</span>
<span class="p_add">+				return -EFAULT;</span>
 
 	} else if (flags &amp; F) {
 		data.ll = current-&gt;thread.TS_FPR(reg);
<span class="p_chunk">@@ -1031,15 +1062,13 @@</span> <span class="p_context"> int fix_alignment(struct pt_regs *regs)</span>
 			break;
 		}
 
<span class="p_del">-		ret = 0;</span>
 		p = (unsigned long)addr;
 
 		for (i = 0; i &lt; nb; i++)
<span class="p_del">-			ret |= __put_user_inatomic(data.v[start + i],</span>
<span class="p_del">-						   SWIZ_PTR(p++));</span>
<span class="p_add">+			if (__put_user_or_set_dar(regs, data.v[start + i],</span>
<span class="p_add">+						  SWIZ_PTR(p++)))</span>
<span class="p_add">+				return -EFAULT;</span>
 
<span class="p_del">-		if (unlikely(ret))</span>
<span class="p_del">-			return -EFAULT;</span>
 	} else if (flags &amp; F)
 		current-&gt;thread.TS_FPR(reg) = data.ll;
 	else
<span class="p_header">diff --git a/block/blk-core.c b/block/blk-core.c</span>
<span class="p_header">index 93f9152fc271..3a099c28a7b5 100644</span>
<span class="p_header">--- a/block/blk-core.c</span>
<span class="p_header">+++ b/block/blk-core.c</span>
<span class="p_chunk">@@ -194,7 +194,7 @@</span> <span class="p_context"> EXPORT_SYMBOL(blk_delay_queue);</span>
  **/
 void blk_start_queue(struct request_queue *q)
 {
<span class="p_del">-	WARN_ON(!irqs_disabled());</span>
<span class="p_add">+	WARN_ON(!in_interrupt() &amp;&amp; !irqs_disabled());</span>
 
 	queue_flag_clear(QUEUE_FLAG_STOPPED, q);
 	__blk_run_queue(q);
<span class="p_header">diff --git a/crypto/algif_skcipher.c b/crypto/algif_skcipher.c</span>
<span class="p_header">index d2cacc7f079f..fd1967ecc928 100644</span>
<span class="p_header">--- a/crypto/algif_skcipher.c</span>
<span class="p_header">+++ b/crypto/algif_skcipher.c</span>
<span class="p_chunk">@@ -92,8 +92,10 @@</span> <span class="p_context"> static int skcipher_alloc_sgl(struct sock *sk)</span>
 		sg_init_table(sgl-&gt;sg, MAX_SGL_ENTS + 1);
 		sgl-&gt;cur = 0;
 
<span class="p_del">-		if (sg)</span>
<span class="p_add">+		if (sg) {</span>
 			scatterwalk_sg_chain(sg, MAX_SGL_ENTS + 1, sgl-&gt;sg);
<span class="p_add">+			sg_unmark_end(sg + (MAX_SGL_ENTS - 1));</span>
<span class="p_add">+		}</span>
 
 		list_add_tail(&amp;sgl-&gt;list, &amp;ctx-&gt;tsgl);
 	}
<span class="p_header">diff --git a/drivers/block/skd_main.c b/drivers/block/skd_main.c</span>
<span class="p_header">index 1e46eb2305c0..f928e698f659 100644</span>
<span class="p_header">--- a/drivers/block/skd_main.c</span>
<span class="p_header">+++ b/drivers/block/skd_main.c</span>
<span class="p_chunk">@@ -2214,6 +2214,9 @@</span> <span class="p_context"> static void skd_send_fitmsg(struct skd_device *skdev,</span>
 		 */
 		qcmd |= FIT_QCMD_MSGSIZE_64;
 
<span class="p_add">+	/* Make sure skd_msg_buf is written before the doorbell is triggered. */</span>
<span class="p_add">+	smp_wmb();</span>
<span class="p_add">+</span>
 	SKD_WRITEQ(skdev, qcmd, FIT_Q_COMMAND);
 
 }
<span class="p_chunk">@@ -2260,6 +2263,9 @@</span> <span class="p_context"> static void skd_send_special_fitmsg(struct skd_device *skdev,</span>
 	qcmd = skspcl-&gt;mb_dma_address;
 	qcmd |= FIT_QCMD_QID_NORMAL + FIT_QCMD_MSGSIZE_128;
 
<span class="p_add">+	/* Make sure skd_msg_buf is written before the doorbell is triggered. */</span>
<span class="p_add">+	smp_wmb();</span>
<span class="p_add">+</span>
 	SKD_WRITEQ(skdev, qcmd, FIT_Q_COMMAND);
 }
 
<span class="p_chunk">@@ -4679,15 +4685,16 @@</span> <span class="p_context"> static void skd_free_disk(struct skd_device *skdev)</span>
 {
 	struct gendisk *disk = skdev-&gt;disk;
 
<span class="p_del">-	if (disk != NULL) {</span>
<span class="p_del">-		struct request_queue *q = disk-&gt;queue;</span>
<span class="p_add">+	if (disk &amp;&amp; (disk-&gt;flags &amp; GENHD_FL_UP))</span>
<span class="p_add">+		del_gendisk(disk);</span>
 
<span class="p_del">-		if (disk-&gt;flags &amp; GENHD_FL_UP)</span>
<span class="p_del">-			del_gendisk(disk);</span>
<span class="p_del">-		if (q)</span>
<span class="p_del">-			blk_cleanup_queue(q);</span>
<span class="p_del">-		put_disk(disk);</span>
<span class="p_add">+	if (skdev-&gt;queue) {</span>
<span class="p_add">+		blk_cleanup_queue(skdev-&gt;queue);</span>
<span class="p_add">+		skdev-&gt;queue = NULL;</span>
<span class="p_add">+		disk-&gt;queue = NULL;</span>
 	}
<span class="p_add">+</span>
<span class="p_add">+	put_disk(disk);</span>
 	skdev-&gt;disk = NULL;
 }
 
<span class="p_header">diff --git a/drivers/input/serio/i8042-x86ia64io.h b/drivers/input/serio/i8042-x86ia64io.h</span>
<span class="p_header">index 160b705869f3..3f9ad6414c1b 100644</span>
<span class="p_header">--- a/drivers/input/serio/i8042-x86ia64io.h</span>
<span class="p_header">+++ b/drivers/input/serio/i8042-x86ia64io.h</span>
<span class="p_chunk">@@ -804,6 +804,13 @@</span> <span class="p_context"> static const struct dmi_system_id __initconst i8042_dmi_kbdreset_table[] = {</span>
 			DMI_MATCH(DMI_PRODUCT_NAME, &quot;P34&quot;),
 		},
 	},
<span class="p_add">+	{</span>
<span class="p_add">+		/* Gigabyte P57 - Elantech touchpad */</span>
<span class="p_add">+		.matches = {</span>
<span class="p_add">+			DMI_MATCH(DMI_SYS_VENDOR, &quot;GIGABYTE&quot;),</span>
<span class="p_add">+			DMI_MATCH(DMI_PRODUCT_NAME, &quot;P57&quot;),</span>
<span class="p_add">+		},</span>
<span class="p_add">+	},</span>
 	{
 		/* Schenker XMG C504 - Elantech touchpad */
 		.matches = {
<span class="p_header">diff --git a/drivers/md/bcache/bcache.h b/drivers/md/bcache/bcache.h</span>
<span class="p_header">index 04f7bc28ef83..dfdd1908641c 100644</span>
<span class="p_header">--- a/drivers/md/bcache/bcache.h</span>
<span class="p_header">+++ b/drivers/md/bcache/bcache.h</span>
<span class="p_chunk">@@ -348,6 +348,7 @@</span> <span class="p_context"> struct cached_dev {</span>
 	/* Limit number of writeback bios in flight */
 	struct semaphore	in_flight;
 	struct task_struct	*writeback_thread;
<span class="p_add">+	struct workqueue_struct	*writeback_write_wq;</span>
 
 	struct keybuf		writeback_keys;
 
<span class="p_header">diff --git a/drivers/md/bcache/super.c b/drivers/md/bcache/super.c</span>
<span class="p_header">index a7a03a21d78a..8e5666ac8a6a 100644</span>
<span class="p_header">--- a/drivers/md/bcache/super.c</span>
<span class="p_header">+++ b/drivers/md/bcache/super.c</span>
<span class="p_chunk">@@ -1054,7 +1054,7 @@</span> <span class="p_context"> int bch_cached_dev_attach(struct cached_dev *dc, struct cache_set *c)</span>
 	}
 
 	if (BDEV_STATE(&amp;dc-&gt;sb) == BDEV_STATE_DIRTY) {
<span class="p_del">-		bch_sectors_dirty_init(dc);</span>
<span class="p_add">+		bch_sectors_dirty_init(&amp;dc-&gt;disk);</span>
 		atomic_set(&amp;dc-&gt;has_dirty, 1);
 		atomic_inc(&amp;dc-&gt;count);
 		bch_writeback_queue(dc);
<span class="p_chunk">@@ -1087,6 +1087,8 @@</span> <span class="p_context"> static void cached_dev_free(struct closure *cl)</span>
 	cancel_delayed_work_sync(&amp;dc-&gt;writeback_rate_update);
 	if (!IS_ERR_OR_NULL(dc-&gt;writeback_thread))
 		kthread_stop(dc-&gt;writeback_thread);
<span class="p_add">+	if (dc-&gt;writeback_write_wq)</span>
<span class="p_add">+		destroy_workqueue(dc-&gt;writeback_write_wq);</span>
 
 	mutex_lock(&amp;bch_register_lock);
 
<span class="p_chunk">@@ -1258,6 +1260,7 @@</span> <span class="p_context"> static int flash_dev_run(struct cache_set *c, struct uuid_entry *u)</span>
 		goto err;
 
 	bcache_device_attach(d, c, u - c-&gt;uuids);
<span class="p_add">+	bch_sectors_dirty_init(d);</span>
 	bch_flash_dev_request_init(d);
 	add_disk(d-&gt;disk);
 
<span class="p_chunk">@@ -1996,6 +1999,8 @@</span> <span class="p_context"> static ssize_t register_bcache(struct kobject *k, struct kobj_attribute *attr,</span>
 			else
 				err = &quot;device busy&quot;;
 			mutex_unlock(&amp;bch_register_lock);
<span class="p_add">+			if (!IS_ERR(bdev))</span>
<span class="p_add">+				bdput(bdev);</span>
 			if (attr == &amp;ksysfs_register_quiet)
 				goto out;
 		}
<span class="p_header">diff --git a/drivers/md/bcache/sysfs.c b/drivers/md/bcache/sysfs.c</span>
<span class="p_header">index b3ff57d61dde..4fbb5532f24c 100644</span>
<span class="p_header">--- a/drivers/md/bcache/sysfs.c</span>
<span class="p_header">+++ b/drivers/md/bcache/sysfs.c</span>
<span class="p_chunk">@@ -191,7 +191,7 @@</span> <span class="p_context"> STORE(__cached_dev)</span>
 {
 	struct cached_dev *dc = container_of(kobj, struct cached_dev,
 					     disk.kobj);
<span class="p_del">-	unsigned v = size;</span>
<span class="p_add">+	ssize_t v = size;</span>
 	struct cache_set *c;
 	struct kobj_uevent_env *env;
 
<span class="p_chunk">@@ -226,7 +226,7 @@</span> <span class="p_context"> STORE(__cached_dev)</span>
 		bch_cached_dev_run(dc);
 
 	if (attr == &amp;sysfs_cache_mode) {
<span class="p_del">-		ssize_t v = bch_read_string_list(buf, bch_cache_modes + 1);</span>
<span class="p_add">+		v = bch_read_string_list(buf, bch_cache_modes + 1);</span>
 
 		if (v &lt; 0)
 			return v;
<span class="p_header">diff --git a/drivers/md/bcache/util.c b/drivers/md/bcache/util.c</span>
<span class="p_header">index db3ae4c2b223..6c18e3ec3e48 100644</span>
<span class="p_header">--- a/drivers/md/bcache/util.c</span>
<span class="p_header">+++ b/drivers/md/bcache/util.c</span>
<span class="p_chunk">@@ -73,24 +73,44 @@</span> <span class="p_context"> STRTO_H(strtouint, unsigned int)</span>
 STRTO_H(strtoll, long long)
 STRTO_H(strtoull, unsigned long long)
 
<span class="p_add">+/**</span>
<span class="p_add">+ * bch_hprint() - formats @v to human readable string for sysfs.</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * @v - signed 64 bit integer</span>
<span class="p_add">+ * @buf - the (at least 8 byte) buffer to format the result into.</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * Returns the number of bytes used by format.</span>
<span class="p_add">+ */</span>
 ssize_t bch_hprint(char *buf, int64_t v)
 {
 	static const char units[] = &quot;?kMGTPEZY&quot;;
<span class="p_del">-	char dec[4] = &quot;&quot;;</span>
<span class="p_del">-	int u, t = 0;</span>
<span class="p_del">-</span>
<span class="p_del">-	for (u = 0; v &gt;= 1024 || v &lt;= -1024; u++) {</span>
<span class="p_del">-		t = v &amp; ~(~0 &lt;&lt; 10);</span>
<span class="p_del">-		v &gt;&gt;= 10;</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	if (!u)</span>
<span class="p_del">-		return sprintf(buf, &quot;%llu&quot;, v);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (v &lt; 100 &amp;&amp; v &gt; -100)</span>
<span class="p_del">-		snprintf(dec, sizeof(dec), &quot;.%i&quot;, t / 100);</span>
<span class="p_del">-</span>
<span class="p_del">-	return sprintf(buf, &quot;%lli%s%c&quot;, v, dec, units[u]);</span>
<span class="p_add">+	int u = 0, t;</span>
<span class="p_add">+</span>
<span class="p_add">+	uint64_t q;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (v &lt; 0)</span>
<span class="p_add">+		q = -v;</span>
<span class="p_add">+	else</span>
<span class="p_add">+		q = v;</span>
<span class="p_add">+</span>
<span class="p_add">+	/* For as long as the number is more than 3 digits, but at least</span>
<span class="p_add">+	 * once, shift right / divide by 1024.  Keep the remainder for</span>
<span class="p_add">+	 * a digit after the decimal point.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	do {</span>
<span class="p_add">+		u++;</span>
<span class="p_add">+</span>
<span class="p_add">+		t = q &amp; ~(~0 &lt;&lt; 10);</span>
<span class="p_add">+		q &gt;&gt;= 10;</span>
<span class="p_add">+	} while (q &gt;= 1000);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (v &lt; 0)</span>
<span class="p_add">+		/* &#39;-&#39;, up to 3 digits, &#39;.&#39;, 1 digit, 1 character, null;</span>
<span class="p_add">+		 * yields 8 bytes.</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		return sprintf(buf, &quot;-%llu.%i%c&quot;, q, t * 10 / 1024, units[u]);</span>
<span class="p_add">+	else</span>
<span class="p_add">+		return sprintf(buf, &quot;%llu.%i%c&quot;, q, t * 10 / 1024, units[u]);</span>
 }
 
 ssize_t bch_snprint_string_list(char *buf, size_t size, const char * const list[],
<span class="p_header">diff --git a/drivers/md/bcache/writeback.c b/drivers/md/bcache/writeback.c</span>
<span class="p_header">index 540256a0df4f..b0667b321a3f 100644</span>
<span class="p_header">--- a/drivers/md/bcache/writeback.c</span>
<span class="p_header">+++ b/drivers/md/bcache/writeback.c</span>
<span class="p_chunk">@@ -21,7 +21,8 @@</span> <span class="p_context"></span>
 static void __update_writeback_rate(struct cached_dev *dc)
 {
 	struct cache_set *c = dc-&gt;disk.c;
<span class="p_del">-	uint64_t cache_sectors = c-&gt;nbuckets * c-&gt;sb.bucket_size;</span>
<span class="p_add">+	uint64_t cache_sectors = c-&gt;nbuckets * c-&gt;sb.bucket_size -</span>
<span class="p_add">+				bcache_flash_devs_sectors_dirty(c);</span>
 	uint64_t cache_dirty_target =
 		div_u64(cache_sectors * dc-&gt;writeback_percent, 100);
 
<span class="p_chunk">@@ -190,7 +191,7 @@</span> <span class="p_context"> static void write_dirty(struct closure *cl)</span>
 
 	closure_bio_submit(&amp;io-&gt;bio, cl, &amp;io-&gt;dc-&gt;disk);
 
<span class="p_del">-	continue_at(cl, write_dirty_finish, system_wq);</span>
<span class="p_add">+	continue_at(cl, write_dirty_finish, io-&gt;dc-&gt;writeback_write_wq);</span>
 }
 
 static void read_dirty_endio(struct bio *bio, int error)
<span class="p_chunk">@@ -210,7 +211,7 @@</span> <span class="p_context"> static void read_dirty_submit(struct closure *cl)</span>
 
 	closure_bio_submit(&amp;io-&gt;bio, cl, &amp;io-&gt;dc-&gt;disk);
 
<span class="p_del">-	continue_at(cl, write_dirty, system_wq);</span>
<span class="p_add">+	continue_at(cl, write_dirty, io-&gt;dc-&gt;writeback_write_wq);</span>
 }
 
 static void read_dirty(struct cached_dev *dc)
<span class="p_chunk">@@ -488,17 +489,17 @@</span> <span class="p_context"> static int sectors_dirty_init_fn(struct btree_op *_op, struct btree *b,</span>
 	return MAP_CONTINUE;
 }
 
<span class="p_del">-void bch_sectors_dirty_init(struct cached_dev *dc)</span>
<span class="p_add">+void bch_sectors_dirty_init(struct bcache_device *d)</span>
 {
 	struct sectors_dirty_init op;
 
 	bch_btree_op_init(&amp;op.op, -1);
<span class="p_del">-	op.inode = dc-&gt;disk.id;</span>
<span class="p_add">+	op.inode = d-&gt;id;</span>
 
<span class="p_del">-	bch_btree_map_keys(&amp;op.op, dc-&gt;disk.c, &amp;KEY(op.inode, 0, 0),</span>
<span class="p_add">+	bch_btree_map_keys(&amp;op.op, d-&gt;c, &amp;KEY(op.inode, 0, 0),</span>
 			   sectors_dirty_init_fn, 0);
 
<span class="p_del">-	dc-&gt;disk.sectors_dirty_last = bcache_dev_sectors_dirty(&amp;dc-&gt;disk);</span>
<span class="p_add">+	d-&gt;sectors_dirty_last = bcache_dev_sectors_dirty(d);</span>
 }
 
 void bch_cached_dev_writeback_init(struct cached_dev *dc)
<span class="p_chunk">@@ -522,6 +523,11 @@</span> <span class="p_context"> void bch_cached_dev_writeback_init(struct cached_dev *dc)</span>
 
 int bch_cached_dev_writeback_start(struct cached_dev *dc)
 {
<span class="p_add">+	dc-&gt;writeback_write_wq = alloc_workqueue(&quot;bcache_writeback_wq&quot;,</span>
<span class="p_add">+						WQ_MEM_RECLAIM, 0);</span>
<span class="p_add">+	if (!dc-&gt;writeback_write_wq)</span>
<span class="p_add">+		return -ENOMEM;</span>
<span class="p_add">+</span>
 	dc-&gt;writeback_thread = kthread_create(bch_writeback_thread, dc,
 					      &quot;bcache_writeback&quot;);
 	if (IS_ERR(dc-&gt;writeback_thread))
<span class="p_header">diff --git a/drivers/md/bcache/writeback.h b/drivers/md/bcache/writeback.h</span>
<span class="p_header">index 073a042aed24..daec4fd782ea 100644</span>
<span class="p_header">--- a/drivers/md/bcache/writeback.h</span>
<span class="p_header">+++ b/drivers/md/bcache/writeback.h</span>
<span class="p_chunk">@@ -14,6 +14,25 @@</span> <span class="p_context"> static inline uint64_t bcache_dev_sectors_dirty(struct bcache_device *d)</span>
 	return ret;
 }
 
<span class="p_add">+static inline uint64_t  bcache_flash_devs_sectors_dirty(struct cache_set *c)</span>
<span class="p_add">+{</span>
<span class="p_add">+	uint64_t i, ret = 0;</span>
<span class="p_add">+</span>
<span class="p_add">+	mutex_lock(&amp;bch_register_lock);</span>
<span class="p_add">+</span>
<span class="p_add">+	for (i = 0; i &lt; c-&gt;nr_uuids; i++) {</span>
<span class="p_add">+		struct bcache_device *d = c-&gt;devices[i];</span>
<span class="p_add">+</span>
<span class="p_add">+		if (!d || !UUID_FLASH_ONLY(&amp;c-&gt;uuids[i]))</span>
<span class="p_add">+			continue;</span>
<span class="p_add">+	   ret += bcache_dev_sectors_dirty(d);</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	mutex_unlock(&amp;bch_register_lock);</span>
<span class="p_add">+</span>
<span class="p_add">+	return ret;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static inline unsigned offset_to_stripe(struct bcache_device *d,
 					uint64_t offset)
 {
<span class="p_chunk">@@ -85,7 +104,7 @@</span> <span class="p_context"> static inline void bch_writeback_add(struct cached_dev *dc)</span>
 
 void bcache_dev_sectors_dirty_add(struct cache_set *, unsigned, uint64_t, int);
 
<span class="p_del">-void bch_sectors_dirty_init(struct cached_dev *dc);</span>
<span class="p_add">+void bch_sectors_dirty_init(struct bcache_device *);</span>
 void bch_cached_dev_writeback_init(struct cached_dev *);
 int bch_cached_dev_writeback_start(struct cached_dev *);
 
<span class="p_header">diff --git a/drivers/md/bitmap.c b/drivers/md/bitmap.c</span>
<span class="p_header">index cced062cab4b..cb5c9d8ea139 100644</span>
<span class="p_header">--- a/drivers/md/bitmap.c</span>
<span class="p_header">+++ b/drivers/md/bitmap.c</span>
<span class="p_chunk">@@ -1802,6 +1802,11 @@</span> <span class="p_context"> int bitmap_resize(struct bitmap *bitmap, sector_t blocks,</span>
 	long pages;
 	struct bitmap_page *new_bp;
 
<span class="p_add">+	if (bitmap-&gt;storage.file &amp;&amp; !init) {</span>
<span class="p_add">+		pr_info(&quot;md: cannot resize file-based bitmap\n&quot;);</span>
<span class="p_add">+		return -EINVAL;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	if (chunksize == 0) {
 		/* If there is enough space, leave the chunk size unchanged,
 		 * else increase by factor of two until there is enough space.
<span class="p_header">diff --git a/drivers/media/usb/uvc/uvc_ctrl.c b/drivers/media/usb/uvc/uvc_ctrl.c</span>
<span class="p_header">index 3e59b288b8a8..618e4e2b4207 100644</span>
<span class="p_header">--- a/drivers/media/usb/uvc/uvc_ctrl.c</span>
<span class="p_header">+++ b/drivers/media/usb/uvc/uvc_ctrl.c</span>
<span class="p_chunk">@@ -2001,6 +2001,13 @@</span> <span class="p_context"> int uvc_ctrl_add_mapping(struct uvc_video_chain *chain,</span>
 		goto done;
 	}
 
<span class="p_add">+	/* Validate the user-provided bit-size and offset */</span>
<span class="p_add">+	if (mapping-&gt;size &gt; 32 ||</span>
<span class="p_add">+	    mapping-&gt;offset + mapping-&gt;size &gt; ctrl-&gt;info.size * 8) {</span>
<span class="p_add">+		ret = -EINVAL;</span>
<span class="p_add">+		goto done;</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	list_for_each_entry(map, &amp;ctrl-&gt;info.mappings, list) {
 		if (mapping-&gt;id == map-&gt;id) {
 			uvc_trace(UVC_TRACE_CONTROL, &quot;Can&#39;t add mapping &#39;%s&#39;, &quot;
<span class="p_header">diff --git a/drivers/media/v4l2-core/v4l2-compat-ioctl32.c b/drivers/media/v4l2-core/v4l2-compat-ioctl32.c</span>
<span class="p_header">index e77d3fc50abd..aa11f02c0a8f 100644</span>
<span class="p_header">--- a/drivers/media/v4l2-core/v4l2-compat-ioctl32.c</span>
<span class="p_header">+++ b/drivers/media/v4l2-core/v4l2-compat-ioctl32.c</span>
<span class="p_chunk">@@ -747,7 +747,8 @@</span> <span class="p_context"> static int put_v4l2_event32(struct v4l2_event *kp, struct v4l2_event32 __user *u</span>
 		copy_to_user(&amp;up-&gt;u, &amp;kp-&gt;u, sizeof(kp-&gt;u)) ||
 		put_user(kp-&gt;pending, &amp;up-&gt;pending) ||
 		put_user(kp-&gt;sequence, &amp;up-&gt;sequence) ||
<span class="p_del">-		compat_put_timespec(&amp;kp-&gt;timestamp, &amp;up-&gt;timestamp) ||</span>
<span class="p_add">+		put_user(kp-&gt;timestamp.tv_sec, &amp;up-&gt;timestamp.tv_sec) ||</span>
<span class="p_add">+		put_user(kp-&gt;timestamp.tv_nsec, &amp;up-&gt;timestamp.tv_nsec) ||</span>
 		put_user(kp-&gt;id, &amp;up-&gt;id) ||
 		copy_to_user(up-&gt;reserved, kp-&gt;reserved, 8 * sizeof(__u32)))
 			return -EFAULT;
<span class="p_header">diff --git a/drivers/net/ethernet/qlogic/qlge/qlge_dbg.c b/drivers/net/ethernet/qlogic/qlge/qlge_dbg.c</span>
<span class="p_header">index 829be21f97b2..be258d90de9e 100644</span>
<span class="p_header">--- a/drivers/net/ethernet/qlogic/qlge/qlge_dbg.c</span>
<span class="p_header">+++ b/drivers/net/ethernet/qlogic/qlge/qlge_dbg.c</span>
<span class="p_chunk">@@ -724,7 +724,7 @@</span> <span class="p_context"> static void ql_build_coredump_seg_header(</span>
 	seg_hdr-&gt;cookie = MPI_COREDUMP_COOKIE;
 	seg_hdr-&gt;segNum = seg_number;
 	seg_hdr-&gt;segSize = seg_size;
<span class="p_del">-	memcpy(seg_hdr-&gt;description, desc, (sizeof(seg_hdr-&gt;description)) - 1);</span>
<span class="p_add">+	strncpy(seg_hdr-&gt;description, desc, (sizeof(seg_hdr-&gt;description)) - 1);</span>
 }
 
 /*
<span class="p_header">diff --git a/drivers/net/phy/phy.c b/drivers/net/phy/phy.c</span>
<span class="p_header">index caf4d3469d4a..7ae062743bad 100644</span>
<span class="p_header">--- a/drivers/net/phy/phy.c</span>
<span class="p_header">+++ b/drivers/net/phy/phy.c</span>
<span class="p_chunk">@@ -509,9 +509,6 @@</span> <span class="p_context"> void phy_stop_machine(struct phy_device *phydev)</span>
 	if (phydev-&gt;state &gt; PHY_UP &amp;&amp; phydev-&gt;state != PHY_HALTED)
 		phydev-&gt;state = PHY_UP;
 	mutex_unlock(&amp;phydev-&gt;lock);
<span class="p_del">-</span>
<span class="p_del">-	/* Now we can run the state machine synchronously */</span>
<span class="p_del">-	phy_state_machine(&amp;phydev-&gt;state_queue.work);</span>
 }
 
 /**
<span class="p_header">diff --git a/drivers/pci/hotplug/shpchp_hpc.c b/drivers/pci/hotplug/shpchp_hpc.c</span>
<span class="p_header">index 7d223e9080ef..77dddee2753a 100644</span>
<span class="p_header">--- a/drivers/pci/hotplug/shpchp_hpc.c</span>
<span class="p_header">+++ b/drivers/pci/hotplug/shpchp_hpc.c</span>
<span class="p_chunk">@@ -1062,6 +1062,8 @@</span> <span class="p_context"> int shpc_init(struct controller *ctrl, struct pci_dev *pdev)</span>
 		if (rc) {
 			ctrl_info(ctrl, &quot;Can&#39;t get msi for the hotplug controller\n&quot;);
 			ctrl_info(ctrl, &quot;Use INTx for the hotplug controller\n&quot;);
<span class="p_add">+		} else {</span>
<span class="p_add">+			pci_set_master(pdev);</span>
 		}
 
 		rc = request_irq(ctrl-&gt;pci_dev-&gt;irq, shpc_isr, IRQF_SHARED,
<span class="p_header">diff --git a/drivers/s390/scsi/zfcp_dbf.c b/drivers/s390/scsi/zfcp_dbf.c</span>
<span class="p_header">index 5d7fbe4e907e..296889dc193f 100644</span>
<span class="p_header">--- a/drivers/s390/scsi/zfcp_dbf.c</span>
<span class="p_header">+++ b/drivers/s390/scsi/zfcp_dbf.c</span>
<span class="p_chunk">@@ -418,8 +418,8 @@</span> <span class="p_context"> void zfcp_dbf_scsi(char *tag, struct scsi_cmnd *sc, struct zfcp_fsf_req *fsf)</span>
 	rec-&gt;scsi_retries = sc-&gt;retries;
 	rec-&gt;scsi_allowed = sc-&gt;allowed;
 	rec-&gt;scsi_id = sc-&gt;device-&gt;id;
<span class="p_del">-	/* struct zfcp_dbf_scsi needs to be updated to handle 64bit LUNs */</span>
 	rec-&gt;scsi_lun = (u32)sc-&gt;device-&gt;lun;
<span class="p_add">+	rec-&gt;scsi_lun_64_hi = (u32)(sc-&gt;device-&gt;lun &gt;&gt; 32);</span>
 	rec-&gt;host_scribble = (unsigned long)sc-&gt;host_scribble;
 
 	memcpy(rec-&gt;scsi_opcode, sc-&gt;cmnd,
<span class="p_chunk">@@ -427,19 +427,32 @@</span> <span class="p_context"> void zfcp_dbf_scsi(char *tag, struct scsi_cmnd *sc, struct zfcp_fsf_req *fsf)</span>
 
 	if (fsf) {
 		rec-&gt;fsf_req_id = fsf-&gt;req_id;
<span class="p_add">+		rec-&gt;pl_len = FCP_RESP_WITH_EXT;</span>
 		fcp_rsp = (struct fcp_resp_with_ext *)
 				&amp;(fsf-&gt;qtcb-&gt;bottom.io.fcp_rsp);
<span class="p_add">+		/* mandatory parts of FCP_RSP IU in this SCSI record */</span>
 		memcpy(&amp;rec-&gt;fcp_rsp, fcp_rsp, FCP_RESP_WITH_EXT);
 		if (fcp_rsp-&gt;resp.fr_flags &amp; FCP_RSP_LEN_VAL) {
 			fcp_rsp_info = (struct fcp_resp_rsp_info *) &amp;fcp_rsp[1];
 			rec-&gt;fcp_rsp_info = fcp_rsp_info-&gt;rsp_code;
<span class="p_add">+			rec-&gt;pl_len += be32_to_cpu(fcp_rsp-&gt;ext.fr_rsp_len);</span>
 		}
 		if (fcp_rsp-&gt;resp.fr_flags &amp; FCP_SNS_LEN_VAL) {
<span class="p_del">-			rec-&gt;pl_len = min((u16)SCSI_SENSE_BUFFERSIZE,</span>
<span class="p_del">-					  (u16)ZFCP_DBF_PAY_MAX_REC);</span>
<span class="p_del">-			zfcp_dbf_pl_write(dbf, sc-&gt;sense_buffer, rec-&gt;pl_len,</span>
<span class="p_del">-					  &quot;fcp_sns&quot;, fsf-&gt;req_id);</span>
<span class="p_add">+			rec-&gt;pl_len += be32_to_cpu(fcp_rsp-&gt;ext.fr_sns_len);</span>
 		}
<span class="p_add">+		/* complete FCP_RSP IU in associated PAYload record</span>
<span class="p_add">+		 * but only if there are optional parts</span>
<span class="p_add">+		 */</span>
<span class="p_add">+		if (fcp_rsp-&gt;resp.fr_flags != 0)</span>
<span class="p_add">+			zfcp_dbf_pl_write(</span>
<span class="p_add">+				dbf, fcp_rsp,</span>
<span class="p_add">+				/* at least one full PAY record</span>
<span class="p_add">+				 * but not beyond hardware response field</span>
<span class="p_add">+				 */</span>
<span class="p_add">+				min_t(u16, max_t(u16, rec-&gt;pl_len,</span>
<span class="p_add">+						 ZFCP_DBF_PAY_MAX_REC),</span>
<span class="p_add">+				      FSF_FCP_RSP_SIZE),</span>
<span class="p_add">+				&quot;fcp_riu&quot;, fsf-&gt;req_id);</span>
 	}
 
 	debug_event(dbf-&gt;scsi, 1, rec, sizeof(*rec));
<span class="p_header">diff --git a/drivers/s390/scsi/zfcp_dbf.h b/drivers/s390/scsi/zfcp_dbf.h</span>
<span class="p_header">index 0be3d48681ae..2039e7510a30 100644</span>
<span class="p_header">--- a/drivers/s390/scsi/zfcp_dbf.h</span>
<span class="p_header">+++ b/drivers/s390/scsi/zfcp_dbf.h</span>
<span class="p_chunk">@@ -196,7 +196,7 @@</span> <span class="p_context"> enum zfcp_dbf_scsi_id {</span>
  * @id: unique number of recovery record type
  * @tag: identifier string specifying the location of initiation
  * @scsi_id: scsi device id
<span class="p_del">- * @scsi_lun: scsi device logical unit number</span>
<span class="p_add">+ * @scsi_lun: scsi device logical unit number, low part of 64 bit, old 32 bit</span>
  * @scsi_result: scsi result
  * @scsi_retries: current retry number of scsi request
  * @scsi_allowed: allowed retries
<span class="p_chunk">@@ -206,6 +206,7 @@</span> <span class="p_context"> enum zfcp_dbf_scsi_id {</span>
  * @host_scribble: LLD specific data attached to SCSI request
  * @pl_len: length of paload stored as zfcp_dbf_pay
  * @fsf_rsp: response for fsf request
<span class="p_add">+ * @scsi_lun_64_hi: scsi device logical unit number, high part of 64 bit</span>
  */
 struct zfcp_dbf_scsi {
 	u8 id;
<span class="p_chunk">@@ -222,6 +223,7 @@</span> <span class="p_context"> struct zfcp_dbf_scsi {</span>
 	u64 host_scribble;
 	u16 pl_len;
 	struct fcp_resp_with_ext fcp_rsp;
<span class="p_add">+	u32 scsi_lun_64_hi;</span>
 } __packed;
 
 /**
<span class="p_chunk">@@ -291,7 +293,11 @@</span> <span class="p_context"> void zfcp_dbf_hba_fsf_response(struct zfcp_fsf_req *req)</span>
 {
 	struct fsf_qtcb *qtcb = req-&gt;qtcb;
 
<span class="p_del">-	if ((qtcb-&gt;prefix.prot_status != FSF_PROT_GOOD) &amp;&amp;</span>
<span class="p_add">+	if (unlikely(req-&gt;status &amp; (ZFCP_STATUS_FSFREQ_DISMISSED |</span>
<span class="p_add">+				    ZFCP_STATUS_FSFREQ_ERROR))) {</span>
<span class="p_add">+		zfcp_dbf_hba_fsf_resp(&quot;fs_rerr&quot;, 3, req);</span>
<span class="p_add">+</span>
<span class="p_add">+	} else if ((qtcb-&gt;prefix.prot_status != FSF_PROT_GOOD) &amp;&amp;</span>
 	    (qtcb-&gt;prefix.prot_status != FSF_PROT_FSF_STATUS_PRESENTED)) {
 		zfcp_dbf_hba_fsf_resp(&quot;fs_perr&quot;, 1, req);
 
<span class="p_header">diff --git a/drivers/s390/scsi/zfcp_fc.h b/drivers/s390/scsi/zfcp_fc.h</span>
<span class="p_header">index b1d2024ed513..c2e40e10b293 100644</span>
<span class="p_header">--- a/drivers/s390/scsi/zfcp_fc.h</span>
<span class="p_header">+++ b/drivers/s390/scsi/zfcp_fc.h</span>
<span class="p_chunk">@@ -4,7 +4,7 @@</span> <span class="p_context"></span>
  * Fibre Channel related definitions and inline functions for the zfcp
  * device driver
  *
<span class="p_del">- * Copyright IBM Corp. 2009</span>
<span class="p_add">+ * Copyright IBM Corp. 2009, 2017</span>
  */
 
 #ifndef ZFCP_FC_H
<span class="p_chunk">@@ -291,6 +291,10 @@</span> <span class="p_context"> void zfcp_fc_eval_fcp_rsp(struct fcp_resp_with_ext *fcp_rsp,</span>
 		     !(rsp_flags &amp; FCP_SNS_LEN_VAL) &amp;&amp;
 		     fcp_rsp-&gt;resp.fr_status == SAM_STAT_GOOD)
 			set_host_byte(scsi, DID_ERROR);
<span class="p_add">+	} else if (unlikely(rsp_flags &amp; FCP_RESID_OVER)) {</span>
<span class="p_add">+		/* FCP_DL was not sufficient for SCSI data length */</span>
<span class="p_add">+		if (fcp_rsp-&gt;resp.fr_status == SAM_STAT_GOOD)</span>
<span class="p_add">+			set_host_byte(scsi, DID_ERROR);</span>
 	}
 }
 
<span class="p_header">diff --git a/drivers/s390/scsi/zfcp_fsf.c b/drivers/s390/scsi/zfcp_fsf.c</span>
<span class="p_header">index 0fe8d5d95119..5dc56db8a893 100644</span>
<span class="p_header">--- a/drivers/s390/scsi/zfcp_fsf.c</span>
<span class="p_header">+++ b/drivers/s390/scsi/zfcp_fsf.c</span>
<span class="p_chunk">@@ -2247,7 +2247,8 @@</span> <span class="p_context"> int zfcp_fsf_fcp_cmnd(struct scsi_cmnd *scsi_cmnd)</span>
 	fcp_cmnd = (struct fcp_cmnd *) &amp;req-&gt;qtcb-&gt;bottom.io.fcp_cmnd;
 	zfcp_fc_scsi_to_fcp(fcp_cmnd, scsi_cmnd, 0);
 
<span class="p_del">-	if (scsi_prot_sg_count(scsi_cmnd)) {</span>
<span class="p_add">+	if ((scsi_get_prot_op(scsi_cmnd) != SCSI_PROT_NORMAL) &amp;&amp;</span>
<span class="p_add">+	    scsi_prot_sg_count(scsi_cmnd)) {</span>
 		zfcp_qdio_set_data_div(qdio, &amp;req-&gt;qdio_req,
 				       scsi_prot_sg_count(scsi_cmnd));
 		retval = zfcp_qdio_sbals_from_sg(qdio, &amp;req-&gt;qdio_req,
<span class="p_header">diff --git a/drivers/s390/scsi/zfcp_scsi.c b/drivers/s390/scsi/zfcp_scsi.c</span>
<span class="p_header">index 7b353647cb90..92f6e9e466b5 100644</span>
<span class="p_header">--- a/drivers/s390/scsi/zfcp_scsi.c</span>
<span class="p_header">+++ b/drivers/s390/scsi/zfcp_scsi.c</span>
<span class="p_chunk">@@ -245,8 +245,10 @@</span> <span class="p_context"> static int zfcp_task_mgmt_function(struct scsi_cmnd *scpnt, u8 tm_flags)</span>
 
 		zfcp_erp_wait(adapter);
 		ret = fc_block_scsi_eh(scpnt);
<span class="p_del">-		if (ret)</span>
<span class="p_add">+		if (ret) {</span>
<span class="p_add">+			zfcp_dbf_scsi_devreset(&quot;fiof&quot;, scpnt, tm_flags);</span>
 			return ret;
<span class="p_add">+		}</span>
 
 		if (!(atomic_read(&amp;adapter-&gt;status) &amp;
 		      ZFCP_STATUS_COMMON_RUNNING)) {
<span class="p_chunk">@@ -254,8 +256,10 @@</span> <span class="p_context"> static int zfcp_task_mgmt_function(struct scsi_cmnd *scpnt, u8 tm_flags)</span>
 			return SUCCESS;
 		}
 	}
<span class="p_del">-	if (!fsf_req)</span>
<span class="p_add">+	if (!fsf_req) {</span>
<span class="p_add">+		zfcp_dbf_scsi_devreset(&quot;reqf&quot;, scpnt, tm_flags);</span>
 		return FAILED;
<span class="p_add">+	}</span>
 
 	wait_for_completion(&amp;fsf_req-&gt;completion);
 
<span class="p_header">diff --git a/drivers/scsi/qla2xxx/qla_attr.c b/drivers/scsi/qla2xxx/qla_attr.c</span>
<span class="p_header">index c1b2e86839ae..e9cd3013dcd0 100644</span>
<span class="p_header">--- a/drivers/scsi/qla2xxx/qla_attr.c</span>
<span class="p_header">+++ b/drivers/scsi/qla2xxx/qla_attr.c</span>
<span class="p_chunk">@@ -404,6 +404,8 @@</span> <span class="p_context"> qla2x00_sysfs_write_optrom_ctl(struct file *filp, struct kobject *kobj,</span>
 		return -EINVAL;
 	if (start &gt; ha-&gt;optrom_size)
 		return -EINVAL;
<span class="p_add">+	if (size &gt; ha-&gt;optrom_size - start)</span>
<span class="p_add">+		size = ha-&gt;optrom_size - start;</span>
 
 	mutex_lock(&amp;ha-&gt;optrom_mutex);
 	switch (val) {
<span class="p_chunk">@@ -429,8 +431,7 @@</span> <span class="p_context"> qla2x00_sysfs_write_optrom_ctl(struct file *filp, struct kobject *kobj,</span>
 		}
 
 		ha-&gt;optrom_region_start = start;
<span class="p_del">-		ha-&gt;optrom_region_size = start + size &gt; ha-&gt;optrom_size ?</span>
<span class="p_del">-		    ha-&gt;optrom_size - start : size;</span>
<span class="p_add">+		ha-&gt;optrom_region_size = start + size;</span>
 
 		ha-&gt;optrom_state = QLA_SREADING;
 		ha-&gt;optrom_buffer = vmalloc(ha-&gt;optrom_region_size);
<span class="p_chunk">@@ -503,8 +504,7 @@</span> <span class="p_context"> qla2x00_sysfs_write_optrom_ctl(struct file *filp, struct kobject *kobj,</span>
 		}
 
 		ha-&gt;optrom_region_start = start;
<span class="p_del">-		ha-&gt;optrom_region_size = start + size &gt; ha-&gt;optrom_size ?</span>
<span class="p_del">-		    ha-&gt;optrom_size - start : size;</span>
<span class="p_add">+		ha-&gt;optrom_region_size = start + size;</span>
 
 		ha-&gt;optrom_state = QLA_SWRITING;
 		ha-&gt;optrom_buffer = vmalloc(ha-&gt;optrom_region_size);
<span class="p_header">diff --git a/drivers/scsi/sg.c b/drivers/scsi/sg.c</span>
<span class="p_header">index efd7508d7f00..591575587f47 100644</span>
<span class="p_header">--- a/drivers/scsi/sg.c</span>
<span class="p_header">+++ b/drivers/scsi/sg.c</span>
<span class="p_chunk">@@ -133,7 +133,7 @@</span> <span class="p_context"> struct sg_device;		/* forward declarations */</span>
 struct sg_fd;
 
 typedef struct sg_request {	/* SG_MAX_QUEUE requests outstanding per file */
<span class="p_del">-	struct sg_request *nextrp;	/* NULL -&gt; tail request (slist) */</span>
<span class="p_add">+	struct list_head entry;	/* list entry */</span>
 	struct sg_fd *parentfp;	/* NULL -&gt; not in use */
 	Sg_scatter_hold data;	/* hold buffer, perhaps scatter list */
 	sg_io_hdr_t header;	/* scsi command+info, see &lt;scsi/sg.h&gt; */
<span class="p_chunk">@@ -157,8 +157,7 @@</span> <span class="p_context"> typedef struct sg_fd {		/* holds the state of a file descriptor */</span>
 	int timeout;		/* defaults to SG_DEFAULT_TIMEOUT      */
 	int timeout_user;	/* defaults to SG_DEFAULT_TIMEOUT_USER */
 	Sg_scatter_hold reserve;	/* buffer held for this file descriptor */
<span class="p_del">-	unsigned save_scat_len;	/* original length of trunc. scat. element */</span>
<span class="p_del">-	Sg_request *headrp;	/* head of request slist, NULL-&gt;empty */</span>
<span class="p_add">+	struct list_head rq_list; /* head of request list */</span>
 	struct fasync_struct *async_qp;	/* used by asynchronous notification */
 	Sg_request req_arr[SG_MAX_QUEUE];	/* used as singly-linked list */
 	char low_dma;		/* as in parent but possibly overridden to 1 */
<span class="p_chunk">@@ -855,6 +854,39 @@</span> <span class="p_context"> static int max_sectors_bytes(struct request_queue *q)</span>
 	return max_sectors &lt;&lt; 9;
 }
 
<span class="p_add">+static void</span>
<span class="p_add">+sg_fill_request_table(Sg_fd *sfp, sg_req_info_t *rinfo)</span>
<span class="p_add">+{</span>
<span class="p_add">+	Sg_request *srp;</span>
<span class="p_add">+	int val;</span>
<span class="p_add">+	unsigned int ms;</span>
<span class="p_add">+</span>
<span class="p_add">+	val = 0;</span>
<span class="p_add">+	list_for_each_entry(srp, &amp;sfp-&gt;rq_list, entry) {</span>
<span class="p_add">+		if (val &gt; SG_MAX_QUEUE)</span>
<span class="p_add">+			break;</span>
<span class="p_add">+		rinfo[val].req_state = srp-&gt;done + 1;</span>
<span class="p_add">+		rinfo[val].problem =</span>
<span class="p_add">+			srp-&gt;header.masked_status &amp;</span>
<span class="p_add">+			srp-&gt;header.host_status &amp;</span>
<span class="p_add">+			srp-&gt;header.driver_status;</span>
<span class="p_add">+		if (srp-&gt;done)</span>
<span class="p_add">+			rinfo[val].duration =</span>
<span class="p_add">+				srp-&gt;header.duration;</span>
<span class="p_add">+		else {</span>
<span class="p_add">+			ms = jiffies_to_msecs(jiffies);</span>
<span class="p_add">+			rinfo[val].duration =</span>
<span class="p_add">+				(ms &gt; srp-&gt;header.duration) ?</span>
<span class="p_add">+				(ms - srp-&gt;header.duration) : 0;</span>
<span class="p_add">+		}</span>
<span class="p_add">+		rinfo[val].orphan = srp-&gt;orphan;</span>
<span class="p_add">+		rinfo[val].sg_io_owned = srp-&gt;sg_io_owned;</span>
<span class="p_add">+		rinfo[val].pack_id = srp-&gt;header.pack_id;</span>
<span class="p_add">+		rinfo[val].usr_ptr = srp-&gt;header.usr_ptr;</span>
<span class="p_add">+		val++;</span>
<span class="p_add">+	}</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static long
 sg_ioctl(struct file *filp, unsigned int cmd_in, unsigned long arg)
 {
<span class="p_chunk">@@ -966,7 +998,7 @@</span> <span class="p_context"> sg_ioctl(struct file *filp, unsigned int cmd_in, unsigned long arg)</span>
 		if (!access_ok(VERIFY_WRITE, ip, sizeof (int)))
 			return -EFAULT;
 		read_lock_irqsave(&amp;sfp-&gt;rq_list_lock, iflags);
<span class="p_del">-		for (srp = sfp-&gt;headrp; srp; srp = srp-&gt;nextrp) {</span>
<span class="p_add">+		list_for_each_entry(srp, &amp;sfp-&gt;rq_list, entry) {</span>
 			if ((1 == srp-&gt;done) &amp;&amp; (!srp-&gt;sg_io_owned)) {
 				read_unlock_irqrestore(&amp;sfp-&gt;rq_list_lock,
 						       iflags);
<span class="p_chunk">@@ -979,7 +1011,8 @@</span> <span class="p_context"> sg_ioctl(struct file *filp, unsigned int cmd_in, unsigned long arg)</span>
 		return 0;
 	case SG_GET_NUM_WAITING:
 		read_lock_irqsave(&amp;sfp-&gt;rq_list_lock, iflags);
<span class="p_del">-		for (val = 0, srp = sfp-&gt;headrp; srp; srp = srp-&gt;nextrp) {</span>
<span class="p_add">+		val = 0;</span>
<span class="p_add">+		list_for_each_entry(srp, &amp;sfp-&gt;rq_list, entry) {</span>
 			if ((1 == srp-&gt;done) &amp;&amp; (!srp-&gt;sg_io_owned))
 				++val;
 		}
<span class="p_chunk">@@ -1047,42 +1080,15 @@</span> <span class="p_context"> sg_ioctl(struct file *filp, unsigned int cmd_in, unsigned long arg)</span>
 			return -EFAULT;
 		else {
 			sg_req_info_t *rinfo;
<span class="p_del">-			unsigned int ms;</span>
 
<span class="p_del">-			rinfo = kmalloc(SZ_SG_REQ_INFO * SG_MAX_QUEUE,</span>
<span class="p_del">-								GFP_KERNEL);</span>
<span class="p_add">+			rinfo = kzalloc(SZ_SG_REQ_INFO * SG_MAX_QUEUE,</span>
<span class="p_add">+					GFP_KERNEL);</span>
 			if (!rinfo)
 				return -ENOMEM;
 			read_lock_irqsave(&amp;sfp-&gt;rq_list_lock, iflags);
<span class="p_del">-			for (srp = sfp-&gt;headrp, val = 0; val &lt; SG_MAX_QUEUE;</span>
<span class="p_del">-			     ++val, srp = srp ? srp-&gt;nextrp : srp) {</span>
<span class="p_del">-				memset(&amp;rinfo[val], 0, SZ_SG_REQ_INFO);</span>
<span class="p_del">-				if (srp) {</span>
<span class="p_del">-					rinfo[val].req_state = srp-&gt;done + 1;</span>
<span class="p_del">-					rinfo[val].problem =</span>
<span class="p_del">-					    srp-&gt;header.masked_status &amp; </span>
<span class="p_del">-					    srp-&gt;header.host_status &amp; </span>
<span class="p_del">-					    srp-&gt;header.driver_status;</span>
<span class="p_del">-					if (srp-&gt;done)</span>
<span class="p_del">-						rinfo[val].duration =</span>
<span class="p_del">-							srp-&gt;header.duration;</span>
<span class="p_del">-					else {</span>
<span class="p_del">-						ms = jiffies_to_msecs(jiffies);</span>
<span class="p_del">-						rinfo[val].duration =</span>
<span class="p_del">-						    (ms &gt; srp-&gt;header.duration) ?</span>
<span class="p_del">-						    (ms - srp-&gt;header.duration) : 0;</span>
<span class="p_del">-					}</span>
<span class="p_del">-					rinfo[val].orphan = srp-&gt;orphan;</span>
<span class="p_del">-					rinfo[val].sg_io_owned =</span>
<span class="p_del">-							srp-&gt;sg_io_owned;</span>
<span class="p_del">-					rinfo[val].pack_id =</span>
<span class="p_del">-							srp-&gt;header.pack_id;</span>
<span class="p_del">-					rinfo[val].usr_ptr =</span>
<span class="p_del">-							srp-&gt;header.usr_ptr;</span>
<span class="p_del">-				}</span>
<span class="p_del">-			}</span>
<span class="p_add">+			sg_fill_request_table(sfp, rinfo);</span>
 			read_unlock_irqrestore(&amp;sfp-&gt;rq_list_lock, iflags);
<span class="p_del">-			result = __copy_to_user(p, rinfo, </span>
<span class="p_add">+			result = __copy_to_user(p, rinfo,</span>
 						SZ_SG_REQ_INFO * SG_MAX_QUEUE);
 			result = result ? -EFAULT : 0;
 			kfree(rinfo);
<span class="p_chunk">@@ -1214,7 +1220,7 @@</span> <span class="p_context"> sg_poll(struct file *filp, poll_table * wait)</span>
 		return POLLERR;
 	poll_wait(filp, &amp;sfp-&gt;read_wait, wait);
 	read_lock_irqsave(&amp;sfp-&gt;rq_list_lock, iflags);
<span class="p_del">-	for (srp = sfp-&gt;headrp; srp; srp = srp-&gt;nextrp) {</span>
<span class="p_add">+	list_for_each_entry(srp, &amp;sfp-&gt;rq_list, entry) {</span>
 		/* if any read waiting, flag it */
 		if ((0 == res) &amp;&amp; (1 == srp-&gt;done) &amp;&amp; (!srp-&gt;sg_io_owned))
 			res = POLLIN | POLLRDNORM;
<span class="p_chunk">@@ -2105,7 +2111,6 @@</span> <span class="p_context"> sg_unlink_reserve(Sg_fd * sfp, Sg_request * srp)</span>
 	req_schp-&gt;pages = NULL;
 	req_schp-&gt;page_order = 0;
 	req_schp-&gt;sglist_len = 0;
<span class="p_del">-	sfp-&gt;save_scat_len = 0;</span>
 	srp-&gt;res_used = 0;
 	/* Called without mutex lock to avoid deadlock */
 	sfp-&gt;res_in_use = 0;
<span class="p_chunk">@@ -2118,7 +2123,7 @@</span> <span class="p_context"> sg_get_rq_mark(Sg_fd * sfp, int pack_id)</span>
 	unsigned long iflags;
 
 	write_lock_irqsave(&amp;sfp-&gt;rq_list_lock, iflags);
<span class="p_del">-	for (resp = sfp-&gt;headrp; resp; resp = resp-&gt;nextrp) {</span>
<span class="p_add">+	list_for_each_entry(resp, &amp;sfp-&gt;rq_list, entry) {</span>
 		/* look for requests that are ready + not SG_IO owned */
 		if ((1 == resp-&gt;done) &amp;&amp; (!resp-&gt;sg_io_owned) &amp;&amp;
 		    ((-1 == pack_id) || (resp-&gt;header.pack_id == pack_id))) {
<span class="p_chunk">@@ -2136,70 +2141,45 @@</span> <span class="p_context"> sg_add_request(Sg_fd * sfp)</span>
 {
 	int k;
 	unsigned long iflags;
<span class="p_del">-	Sg_request *resp;</span>
 	Sg_request *rp = sfp-&gt;req_arr;
 
 	write_lock_irqsave(&amp;sfp-&gt;rq_list_lock, iflags);
<span class="p_del">-	resp = sfp-&gt;headrp;</span>
<span class="p_del">-	if (!resp) {</span>
<span class="p_del">-		memset(rp, 0, sizeof (Sg_request));</span>
<span class="p_del">-		rp-&gt;parentfp = sfp;</span>
<span class="p_del">-		resp = rp;</span>
<span class="p_del">-		sfp-&gt;headrp = resp;</span>
<span class="p_del">-	} else {</span>
<span class="p_del">-		if (0 == sfp-&gt;cmd_q)</span>
<span class="p_del">-			resp = NULL;	/* command queuing disallowed */</span>
<span class="p_del">-		else {</span>
<span class="p_del">-			for (k = 0; k &lt; SG_MAX_QUEUE; ++k, ++rp) {</span>
<span class="p_del">-				if (!rp-&gt;parentfp)</span>
<span class="p_del">-					break;</span>
<span class="p_del">-			}</span>
<span class="p_del">-			if (k &lt; SG_MAX_QUEUE) {</span>
<span class="p_del">-				memset(rp, 0, sizeof (Sg_request));</span>
<span class="p_del">-				rp-&gt;parentfp = sfp;</span>
<span class="p_del">-				while (resp-&gt;nextrp)</span>
<span class="p_del">-					resp = resp-&gt;nextrp;</span>
<span class="p_del">-				resp-&gt;nextrp = rp;</span>
<span class="p_del">-				resp = rp;</span>
<span class="p_del">-			} else</span>
<span class="p_del">-				resp = NULL;</span>
<span class="p_add">+	if (!list_empty(&amp;sfp-&gt;rq_list)) {</span>
<span class="p_add">+		if (!sfp-&gt;cmd_q)</span>
<span class="p_add">+			goto out_unlock;</span>
<span class="p_add">+</span>
<span class="p_add">+		for (k = 0; k &lt; SG_MAX_QUEUE; ++k, ++rp) {</span>
<span class="p_add">+			if (!rp-&gt;parentfp)</span>
<span class="p_add">+				break;</span>
 		}
<span class="p_add">+		if (k &gt;= SG_MAX_QUEUE)</span>
<span class="p_add">+			goto out_unlock;</span>
 	}
<span class="p_del">-	if (resp) {</span>
<span class="p_del">-		resp-&gt;nextrp = NULL;</span>
<span class="p_del">-		resp-&gt;header.duration = jiffies_to_msecs(jiffies);</span>
<span class="p_del">-	}</span>
<span class="p_add">+	memset(rp, 0, sizeof (Sg_request));</span>
<span class="p_add">+	rp-&gt;parentfp = sfp;</span>
<span class="p_add">+	rp-&gt;header.duration = jiffies_to_msecs(jiffies);</span>
<span class="p_add">+	list_add_tail(&amp;rp-&gt;entry, &amp;sfp-&gt;rq_list);</span>
 	write_unlock_irqrestore(&amp;sfp-&gt;rq_list_lock, iflags);
<span class="p_del">-	return resp;</span>
<span class="p_add">+	return rp;</span>
<span class="p_add">+out_unlock:</span>
<span class="p_add">+	write_unlock_irqrestore(&amp;sfp-&gt;rq_list_lock, iflags);</span>
<span class="p_add">+	return NULL;</span>
 }
 
 /* Return of 1 for found; 0 for not found */
 static int
 sg_remove_request(Sg_fd * sfp, Sg_request * srp)
 {
<span class="p_del">-	Sg_request *prev_rp;</span>
<span class="p_del">-	Sg_request *rp;</span>
 	unsigned long iflags;
 	int res = 0;
 
<span class="p_del">-	if ((!sfp) || (!srp) || (!sfp-&gt;headrp))</span>
<span class="p_add">+	if (!sfp || !srp || list_empty(&amp;sfp-&gt;rq_list))</span>
 		return res;
 	write_lock_irqsave(&amp;sfp-&gt;rq_list_lock, iflags);
<span class="p_del">-	prev_rp = sfp-&gt;headrp;</span>
<span class="p_del">-	if (srp == prev_rp) {</span>
<span class="p_del">-		sfp-&gt;headrp = prev_rp-&gt;nextrp;</span>
<span class="p_del">-		prev_rp-&gt;parentfp = NULL;</span>
<span class="p_add">+	if (!list_empty(&amp;srp-&gt;entry)) {</span>
<span class="p_add">+		list_del(&amp;srp-&gt;entry);</span>
<span class="p_add">+		srp-&gt;parentfp = NULL;</span>
 		res = 1;
<span class="p_del">-	} else {</span>
<span class="p_del">-		while ((rp = prev_rp-&gt;nextrp)) {</span>
<span class="p_del">-			if (srp == rp) {</span>
<span class="p_del">-				prev_rp-&gt;nextrp = rp-&gt;nextrp;</span>
<span class="p_del">-				rp-&gt;parentfp = NULL;</span>
<span class="p_del">-				res = 1;</span>
<span class="p_del">-				break;</span>
<span class="p_del">-			}</span>
<span class="p_del">-			prev_rp = rp;</span>
<span class="p_del">-		}</span>
 	}
 	write_unlock_irqrestore(&amp;sfp-&gt;rq_list_lock, iflags);
 	return res;
<span class="p_chunk">@@ -2218,7 +2198,7 @@</span> <span class="p_context"> sg_add_sfp(Sg_device * sdp)</span>
 
 	init_waitqueue_head(&amp;sfp-&gt;read_wait);
 	rwlock_init(&amp;sfp-&gt;rq_list_lock);
<span class="p_del">-</span>
<span class="p_add">+	INIT_LIST_HEAD(&amp;sfp-&gt;rq_list);</span>
 	kref_init(&amp;sfp-&gt;f_ref);
 	mutex_init(&amp;sfp-&gt;f_mutex);
 	sfp-&gt;timeout = SG_DEFAULT_TIMEOUT;
<span class="p_chunk">@@ -2259,10 +2239,13 @@</span> <span class="p_context"> sg_remove_sfp_usercontext(struct work_struct *work)</span>
 {
 	struct sg_fd *sfp = container_of(work, struct sg_fd, ew.work);
 	struct sg_device *sdp = sfp-&gt;parentdp;
<span class="p_add">+	Sg_request *srp;</span>
 
 	/* Cleanup any responses which were never read(). */
<span class="p_del">-	while (sfp-&gt;headrp)</span>
<span class="p_del">-		sg_finish_rem_req(sfp-&gt;headrp);</span>
<span class="p_add">+	while (!list_empty(&amp;sfp-&gt;rq_list)) {</span>
<span class="p_add">+		srp = list_first_entry(&amp;sfp-&gt;rq_list, Sg_request, entry);</span>
<span class="p_add">+		sg_finish_rem_req(srp);</span>
<span class="p_add">+	}</span>
 
 	if (sfp-&gt;reserve.bufflen &gt; 0) {
 		SCSI_LOG_TIMEOUT(6, sg_printk(KERN_INFO, sdp,
<span class="p_chunk">@@ -2665,7 +2648,7 @@</span> <span class="p_context"> static int sg_proc_seq_show_devstrs(struct seq_file *s, void *v)</span>
 /* must be called while holding sg_index_lock */
 static void sg_proc_debug_helper(struct seq_file *s, Sg_device * sdp)
 {
<span class="p_del">-	int k, m, new_interface, blen, usg;</span>
<span class="p_add">+	int k, new_interface, blen, usg;</span>
 	Sg_request *srp;
 	Sg_fd *fp;
 	const sg_io_hdr_t *hp;
<span class="p_chunk">@@ -2685,13 +2668,11 @@</span> <span class="p_context"> static void sg_proc_debug_helper(struct seq_file *s, Sg_device * sdp)</span>
 		seq_printf(s, &quot;   cmd_q=%d f_packid=%d k_orphan=%d closed=0\n&quot;,
 			   (int) fp-&gt;cmd_q, (int) fp-&gt;force_packid,
 			   (int) fp-&gt;keep_orphan);
<span class="p_del">-		for (m = 0, srp = fp-&gt;headrp;</span>
<span class="p_del">-				srp != NULL;</span>
<span class="p_del">-				++m, srp = srp-&gt;nextrp) {</span>
<span class="p_add">+		list_for_each_entry(srp, &amp;fp-&gt;rq_list, entry) {</span>
 			hp = &amp;srp-&gt;header;
 			new_interface = (hp-&gt;interface_id == &#39;\0&#39;) ? 0 : 1;
 			if (srp-&gt;res_used) {
<span class="p_del">-				if (new_interface &amp;&amp; </span>
<span class="p_add">+				if (new_interface &amp;&amp;</span>
 				    (SG_FLAG_MMAP_IO &amp; hp-&gt;flags))
 					cp = &quot;     mmap&gt;&gt; &quot;;
 				else
<span class="p_chunk">@@ -2722,7 +2703,7 @@</span> <span class="p_context"> static void sg_proc_debug_helper(struct seq_file *s, Sg_device * sdp)</span>
 			seq_printf(s, &quot;ms sgat=%d op=0x%02x\n&quot;, usg,
 				   (int) srp-&gt;data.cmd_opcode);
 		}
<span class="p_del">-		if (0 == m)</span>
<span class="p_add">+		if (list_empty(&amp;fp-&gt;rq_list))</span>
 			seq_puts(s, &quot;     No requests active\n&quot;);
 		read_unlock(&amp;fp-&gt;rq_list_lock);
 	}
<span class="p_header">diff --git a/drivers/usb/musb/musb_host.c b/drivers/usb/musb/musb_host.c</span>
<span class="p_header">index 33223e4b53c6..7da914bc2094 100644</span>
<span class="p_header">--- a/drivers/usb/musb/musb_host.c</span>
<span class="p_header">+++ b/drivers/usb/musb/musb_host.c</span>
<span class="p_chunk">@@ -1294,7 +1294,6 @@</span> <span class="p_context"> void musb_host_tx(struct musb *musb, u8 epnum)</span>
 					| MUSB_TXCSR_TXPKTRDY);
 		}
 			return;
<span class="p_del">-		mdelay(1);</span>
 	}
 
 done:
<span class="p_header">diff --git a/fs/ext4/super.c b/fs/ext4/super.c</span>
<span class="p_header">index a5200023e604..a64e4368bb58 100644</span>
<span class="p_header">--- a/fs/ext4/super.c</span>
<span class="p_header">+++ b/fs/ext4/super.c</span>
<span class="p_chunk">@@ -2205,7 +2205,7 @@</span> <span class="p_context"> static void ext4_orphan_cleanup(struct super_block *sb,</span>
 #ifdef CONFIG_QUOTA
 	/* Needed for iput() to work correctly and not trash data */
 	sb-&gt;s_flags |= MS_ACTIVE;
<span class="p_del">-	/* Turn on quotas so that they are updated correctly */</span>
<span class="p_add">+	/* Turn on journaled quotas so that they are updated correctly */</span>
 	for (i = 0; i &lt; EXT4_MAXQUOTAS; i++) {
 		if (EXT4_SB(sb)-&gt;s_qf_names[i]) {
 			int ret = ext4_quota_on_mount(sb, i);
<span class="p_chunk">@@ -2271,9 +2271,9 @@</span> <span class="p_context"> static void ext4_orphan_cleanup(struct super_block *sb,</span>
 		ext4_msg(sb, KERN_INFO, &quot;%d truncate%s cleaned up&quot;,
 		       PLURAL(nr_truncates));
 #ifdef CONFIG_QUOTA
<span class="p_del">-	/* Turn quotas off */</span>
<span class="p_add">+	/* Turn off journaled quotas if they were enabled for orphan cleanup */</span>
 	for (i = 0; i &lt; EXT4_MAXQUOTAS; i++) {
<span class="p_del">-		if (sb_dqopt(sb)-&gt;files[i])</span>
<span class="p_add">+		if (EXT4_SB(sb)-&gt;s_qf_names[i] &amp;&amp; sb_dqopt(sb)-&gt;files[i])</span>
 			dquot_quota_off(sb, i);
 	}
 #endif
<span class="p_header">diff --git a/fs/f2fs/recovery.c b/fs/f2fs/recovery.c</span>
<span class="p_header">index ebd013225788..f064ea1bdab2 100644</span>
<span class="p_header">--- a/fs/f2fs/recovery.c</span>
<span class="p_header">+++ b/fs/f2fs/recovery.c</span>
<span class="p_chunk">@@ -263,7 +263,7 @@</span> <span class="p_context"> static int check_index_in_prev_nodes(struct f2fs_sb_info *sbi,</span>
 		return 0;
 
 	/* Get the previous summary */
<span class="p_del">-	for (i = CURSEG_WARM_DATA; i &lt;= CURSEG_COLD_DATA; i++) {</span>
<span class="p_add">+	for (i = CURSEG_HOT_DATA; i &lt;= CURSEG_COLD_DATA; i++) {</span>
 		struct curseg_info *curseg = CURSEG_I(sbi, i);
 		if (curseg-&gt;segno == segno) {
 			sum = curseg-&gt;sum_blk-&gt;entries[blkoff];
<span class="p_header">diff --git a/kernel/trace/trace.c b/kernel/trace/trace.c</span>
<span class="p_header">index 111dfd986dbf..941b21f7c8a4 100644</span>
<span class="p_header">--- a/kernel/trace/trace.c</span>
<span class="p_header">+++ b/kernel/trace/trace.c</span>
<span class="p_chunk">@@ -4966,7 +4966,7 @@</span> <span class="p_context"> static int tracing_set_clock(struct trace_array *tr, const char *clockstr)</span>
 	tracing_reset_online_cpus(&amp;tr-&gt;trace_buffer);
 
 #ifdef CONFIG_TRACER_MAX_TRACE
<span class="p_del">-	if (tr-&gt;flags &amp; TRACE_ARRAY_FL_GLOBAL &amp;&amp; tr-&gt;max_buffer.buffer)</span>
<span class="p_add">+	if (tr-&gt;max_buffer.buffer)</span>
 		ring_buffer_set_clock(tr-&gt;max_buffer.buffer, trace_clocks[i].func);
 	tracing_reset_online_cpus(&amp;tr-&gt;max_buffer);
 #endif
<span class="p_header">diff --git a/kernel/trace/trace_selftest.c b/kernel/trace/trace_selftest.c</span>
<span class="p_header">index b0f86ea77881..ca70d11b8aa7 100644</span>
<span class="p_header">--- a/kernel/trace/trace_selftest.c</span>
<span class="p_header">+++ b/kernel/trace/trace_selftest.c</span>
<span class="p_chunk">@@ -272,7 +272,7 @@</span> <span class="p_context"> static int trace_selftest_ops(struct trace_array *tr, int cnt)</span>
 		goto out_free;
 	if (cnt &gt; 1) {
 		if (trace_selftest_test_global_cnt == 0)
<span class="p_del">-			goto out;</span>
<span class="p_add">+			goto out_free;</span>
 	}
 	if (trace_selftest_test_dyn_cnt == 0)
 		goto out_free;
<span class="p_header">diff --git a/net/ipv4/tcp.c b/net/ipv4/tcp.c</span>
<span class="p_header">index 458a4c046784..567f8860e722 100644</span>
<span class="p_header">--- a/net/ipv4/tcp.c</span>
<span class="p_header">+++ b/net/ipv4/tcp.c</span>
<span class="p_chunk">@@ -2265,6 +2265,10 @@</span> <span class="p_context"> int tcp_disconnect(struct sock *sk, int flags)</span>
 	tcp_set_ca_state(sk, TCP_CA_Open);
 	tcp_clear_retrans(tp);
 	inet_csk_delack_init(sk);
<span class="p_add">+	/* Initialize rcv_mss to TCP_MIN_MSS to avoid division by 0</span>
<span class="p_add">+	 * issue in __tcp_select_window()</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	icsk-&gt;icsk_ack.rcv_mss = TCP_MIN_MSS;</span>
 	tcp_init_send_head(sk);
 	memset(&amp;tp-&gt;rx_opt, 0, sizeof(tp-&gt;rx_opt));
 	__sk_dst_reset(sk);
<span class="p_header">diff --git a/net/ipv6/ip6_fib.c b/net/ipv6/ip6_fib.c</span>
<span class="p_header">index f1c6d5e98322..f6337e18f428 100644</span>
<span class="p_header">--- a/net/ipv6/ip6_fib.c</span>
<span class="p_header">+++ b/net/ipv6/ip6_fib.c</span>
<span class="p_chunk">@@ -160,6 +160,12 @@</span> <span class="p_context"> static void rt6_release(struct rt6_info *rt)</span>
 		dst_free(&amp;rt-&gt;dst);
 }
 
<span class="p_add">+static void fib6_free_table(struct fib6_table *table)</span>
<span class="p_add">+{</span>
<span class="p_add">+	inetpeer_invalidate_tree(&amp;table-&gt;tb6_peers);</span>
<span class="p_add">+	kfree(table);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 static void fib6_link_table(struct net *net, struct fib6_table *tb)
 {
 	unsigned int h;
<span class="p_chunk">@@ -1782,15 +1788,22 @@</span> <span class="p_context"> out_timer:</span>
 
 static void fib6_net_exit(struct net *net)
 {
<span class="p_add">+	unsigned int i;</span>
<span class="p_add">+</span>
 	rt6_ifdown(net, NULL);
 	del_timer_sync(&amp;net-&gt;ipv6.ip6_fib_timer);
 
<span class="p_del">-#ifdef CONFIG_IPV6_MULTIPLE_TABLES</span>
<span class="p_del">-	inetpeer_invalidate_tree(&amp;net-&gt;ipv6.fib6_local_tbl-&gt;tb6_peers);</span>
<span class="p_del">-	kfree(net-&gt;ipv6.fib6_local_tbl);</span>
<span class="p_del">-#endif</span>
<span class="p_del">-	inetpeer_invalidate_tree(&amp;net-&gt;ipv6.fib6_main_tbl-&gt;tb6_peers);</span>
<span class="p_del">-	kfree(net-&gt;ipv6.fib6_main_tbl);</span>
<span class="p_add">+	for (i = 0; i &lt; FIB6_TABLE_HASHSZ; i++) {</span>
<span class="p_add">+		struct hlist_head *head = &amp;net-&gt;ipv6.fib_table_hash[i];</span>
<span class="p_add">+		struct hlist_node *tmp;</span>
<span class="p_add">+		struct fib6_table *tb;</span>
<span class="p_add">+</span>
<span class="p_add">+		hlist_for_each_entry_safe(tb, tmp, head, tb6_hlist) {</span>
<span class="p_add">+			hlist_del(&amp;tb-&gt;tb6_hlist);</span>
<span class="p_add">+			fib6_free_table(tb);</span>
<span class="p_add">+		}</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	kfree(net-&gt;ipv6.fib_table_hash);
 	kfree(net-&gt;ipv6.rt6_stats);
 }
<span class="p_header">diff --git a/net/ipv6/ip6_gre.c b/net/ipv6/ip6_gre.c</span>
<span class="p_header">index df3633e20458..77adf255d238 100644</span>
<span class="p_header">--- a/net/ipv6/ip6_gre.c</span>
<span class="p_header">+++ b/net/ipv6/ip6_gre.c</span>
<span class="p_chunk">@@ -421,7 +421,7 @@</span> <span class="p_context"> static void ip6gre_err(struct sk_buff *skb, struct inet6_skb_parm *opt,</span>
 		if (code == ICMPV6_HDR_FIELD)
 			teli = ip6_tnl_parse_tlv_enc_lim(skb, skb-&gt;data);
 
<span class="p_del">-		if (teli &amp;&amp; teli == info - 2) {</span>
<span class="p_add">+		if (teli &amp;&amp; teli == be32_to_cpu(info) - 2) {</span>
 			tel = (struct ipv6_tlv_tnl_enc_lim *) &amp;skb-&gt;data[teli];
 			if (tel-&gt;encap_limit == 0) {
 				net_warn_ratelimited(&quot;%s: Too small encapsulation limit or routing loop in tunnel!\n&quot;,
<span class="p_chunk">@@ -433,7 +433,7 @@</span> <span class="p_context"> static void ip6gre_err(struct sk_buff *skb, struct inet6_skb_parm *opt,</span>
 		}
 		break;
 	case ICMPV6_PKT_TOOBIG:
<span class="p_del">-		mtu = info - offset;</span>
<span class="p_add">+		mtu = be32_to_cpu(info) - offset;</span>
 		if (mtu &lt; IPV6_MIN_MTU)
 			mtu = IPV6_MIN_MTU;
 		t-&gt;dev-&gt;mtu = mtu;
<span class="p_header">diff --git a/net/ipv6/output_core.c b/net/ipv6/output_core.c</span>
<span class="p_header">index c471baa92b9a..fc6d3e0e4341 100644</span>
<span class="p_header">--- a/net/ipv6/output_core.c</span>
<span class="p_header">+++ b/net/ipv6/output_core.c</span>
<span class="p_chunk">@@ -52,7 +52,6 @@</span> <span class="p_context"> int ip6_find_1stfragopt(struct sk_buff *skb, u8 **nexthdr)</span>
 
 	while (offset &lt;= packet_len) {
 		struct ipv6_opt_hdr *exthdr;
<span class="p_del">-		unsigned int len;</span>
 
 		switch (**nexthdr) {
 
<span class="p_chunk">@@ -78,10 +77,9 @@</span> <span class="p_context"> int ip6_find_1stfragopt(struct sk_buff *skb, u8 **nexthdr)</span>
 
 		exthdr = (struct ipv6_opt_hdr *)(skb_network_header(skb) +
 						 offset);
<span class="p_del">-		len = ipv6_optlen(exthdr);</span>
<span class="p_del">-		if (len + offset &gt;= IPV6_MAXPLEN)</span>
<span class="p_add">+		offset += ipv6_optlen(exthdr);</span>
<span class="p_add">+		if (offset &gt; IPV6_MAXPLEN)</span>
 			return -EINVAL;
<span class="p_del">-		offset += len;</span>
 		*nexthdr = &amp;exthdr-&gt;nexthdr;
 	}
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



