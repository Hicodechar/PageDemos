
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,10/13] x86/mm: Factor out remote TLB flushing - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,10/13] x86/mm: Factor out remote TLB flushing</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=125831">Andrew Lutomirski</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 8, 2016, 11:15 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;357b13bf9d6d04e585894ff5dcf40fa14ea1d3a7.1452294700.git.luto@kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7990951/mbox/"
   >mbox</a>
|
   <a href="/patch/7990951/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7990951/">/patch/7990951/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 4B03C9F6CD
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  8 Jan 2016 23:16:08 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id B2683201E4
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  8 Jan 2016 23:16:07 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 086B32014A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri,  8 Jan 2016 23:16:07 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1756226AbcAHXPw (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 8 Jan 2016 18:15:52 -0500
Received: from mail.kernel.org ([198.145.29.136]:49795 &quot;EHLO mail.kernel.org&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1756111AbcAHXPu (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 8 Jan 2016 18:15:50 -0500
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 4109C2014A;
	Fri,  8 Jan 2016 23:15:49 +0000 (UTC)
Received: from localhost (50-76-60-73-ip-static.hfc.comcastbusiness.net
	[50.76.60.73])
	(using TLSv1.2 with cipher AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by mail.kernel.org (Postfix) with ESMTPSA id 816DA201F5;
	Fri,  8 Jan 2016 23:15:48 +0000 (UTC)
From: Andy Lutomirski &lt;luto@kernel.org&gt;
To: x86@kernel.org, linux-kernel@vger.kernel.org
Cc: Borislav Petkov &lt;bp@alien8.de&gt;, Brian Gerst &lt;brgerst@gmail.com&gt;,
	Dave Hansen &lt;dave.hansen@linux.intel.com&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Oleg Nesterov &lt;oleg@redhat.com&gt;,
	&quot;linux-mm@kvack.org&quot; &lt;linux-mm@kvack.org&gt;,
	Andy Lutomirski &lt;luto@kernel.org&gt;
Subject: [RFC 10/13] x86/mm: Factor out remote TLB flushing
Date: Fri,  8 Jan 2016 15:15:28 -0800
Message-Id: &lt;357b13bf9d6d04e585894ff5dcf40fa14ea1d3a7.1452294700.git.luto@kernel.org&gt;
X-Mailer: git-send-email 2.5.0
In-Reply-To: &lt;cover.1452294700.git.luto@kernel.org&gt;
References: &lt;cover.1452294700.git.luto@kernel.org&gt;
In-Reply-To: &lt;cover.1452294700.git.luto@kernel.org&gt;
References: &lt;cover.1452294700.git.luto@kernel.org&gt;
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=125831">Andrew Lutomirski</a> - Jan. 8, 2016, 11:15 p.m.</div>
<pre class="content">
There are three call sites that propagate TLB flushes, and they all
do exactly the same thing.  Factor the code out into a helper.
<span class="signed-off-by">
Signed-off-by: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
---
 arch/x86/mm/tlb.c | 17 +++++++++++------
 1 file changed, 11 insertions(+), 6 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/mm/tlb.c b/arch/x86/mm/tlb.c</span>
<span class="p_header">index 8f4cc3dfac32..b208a33571b0 100644</span>
<span class="p_header">--- a/arch/x86/mm/tlb.c</span>
<span class="p_header">+++ b/arch/x86/mm/tlb.c</span>
<span class="p_chunk">@@ -154,6 +154,14 @@</span> <span class="p_context"> void native_flush_tlb_others(const struct cpumask *cpumask,</span>
 	smp_call_function_many(cpumask, flush_tlb_func, &amp;info, 1);
 }
 
<span class="p_add">+static void propagate_tlb_flush(unsigned int this_cpu,</span>
<span class="p_add">+				struct mm_struct *mm, unsigned long start,</span>
<span class="p_add">+				unsigned long end)</span>
<span class="p_add">+{</span>
<span class="p_add">+	if (cpumask_any_but(mm_cpumask(mm), this_cpu) &lt; nr_cpu_ids)</span>
<span class="p_add">+		flush_tlb_others(mm_cpumask(mm), mm, 0UL, TLB_FLUSH_ALL);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 void flush_tlb_current_task(void)
 {
 	struct mm_struct *mm = current-&gt;mm;
<span class="p_chunk">@@ -166,8 +174,7 @@</span> <span class="p_context"> void flush_tlb_current_task(void)</span>
 	local_flush_tlb();
 
 	trace_tlb_flush(TLB_LOCAL_SHOOTDOWN, TLB_FLUSH_ALL);
<span class="p_del">-	if (cpumask_any_but(mm_cpumask(mm), smp_processor_id()) &lt; nr_cpu_ids)</span>
<span class="p_del">-		flush_tlb_others(mm_cpumask(mm), mm, 0UL, TLB_FLUSH_ALL);</span>
<span class="p_add">+	propagate_tlb_flush(smp_processor_id(), mm, 0UL, TLB_FLUSH_ALL);</span>
 	preempt_enable();
 }
 
<span class="p_chunk">@@ -231,8 +238,7 @@</span> <span class="p_context"> out:</span>
 		start = 0UL;
 		end = TLB_FLUSH_ALL;
 	}
<span class="p_del">-	if (cpumask_any_but(mm_cpumask(mm), smp_processor_id()) &lt; nr_cpu_ids)</span>
<span class="p_del">-		flush_tlb_others(mm_cpumask(mm), mm, start, end);</span>
<span class="p_add">+	propagate_tlb_flush(smp_processor_id(), mm, start, end);</span>
 	preempt_enable();
 }
 
<span class="p_chunk">@@ -257,8 +263,7 @@</span> <span class="p_context"> void flush_tlb_page(struct vm_area_struct *vma, unsigned long start)</span>
 		}
 	}
 
<span class="p_del">-	if (cpumask_any_but(mm_cpumask(mm), smp_processor_id()) &lt; nr_cpu_ids)</span>
<span class="p_del">-		flush_tlb_others(mm_cpumask(mm), mm, start, 0UL);</span>
<span class="p_add">+	propagate_tlb_flush(smp_processor_id(), mm, start, 0UL);</span>
 
 	preempt_enable();
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



