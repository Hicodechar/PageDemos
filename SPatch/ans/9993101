
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[3.16,145/192] sparc64: Fix bootup regressions on some Kconfig combinations. - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [3.16,145/192] sparc64: Fix bootup regressions on some Kconfig combinations.</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=131">Ben Hutchings</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Oct. 9, 2017, 12:44 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;lsq.1507553065.790345892@decadent.org.uk&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9993101/mbox/"
   >mbox</a>
|
   <a href="/patch/9993101/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9993101/">/patch/9993101/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	B32E5602D7 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  9 Oct 2017 13:17:42 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id A2E342875A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  9 Oct 2017 13:17:42 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 97E24287CD; Mon,  9 Oct 2017 13:17:42 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5D5442875A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  9 Oct 2017 13:17:41 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754515AbdJINRi (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 9 Oct 2017 09:17:38 -0400
Received: from shadbolt.e.decadent.org.uk ([88.96.1.126]:41943 &quot;EHLO
	shadbolt.e.decadent.org.uk&quot; rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1754254AbdJIMo6 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 9 Oct 2017 08:44:58 -0400
Received: from [2a02:8011:400e:2:6f00:88c8:c921:d332] (helo=deadeye)
	by shadbolt.decadent.org.uk with esmtps
	(TLS1.2:ECDHE_RSA_AES_256_GCM_SHA384:256) (Exim 4.84_2)
	(envelope-from &lt;ben@decadent.org.uk&gt;)
	id 1e1XQW-0004us-EN; Mon, 09 Oct 2017 13:44:56 +0100
Received: from ben by deadeye with local (Exim 4.89)
	(envelope-from &lt;ben@decadent.org.uk&gt;)
	id 1e1XQR-00026m-TE; Mon, 09 Oct 2017 13:44:51 +0100
Content-Type: text/plain; charset=&quot;UTF-8&quot;
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
MIME-Version: 1.0
From: Ben Hutchings &lt;ben@decadent.org.uk&gt;
To: linux-kernel@vger.kernel.org, stable@vger.kernel.org
CC: akpm@linux-foundation.org, &quot;Joerg Abraham&quot; &lt;joerg.abraham@nokia.com&gt;,
	&quot;Meelis Roos&quot; &lt;mroos@linux.ee&gt;, &quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;
Date: Mon, 09 Oct 2017 13:44:25 +0100
Message-ID: &lt;lsq.1507553065.790345892@decadent.org.uk&gt;
X-Mailer: LinuxStableQueue (scripts by bwh)
Subject: [PATCH 3.16 145/192] sparc64: Fix bootup regressions on some
	Kconfig  combinations.
In-Reply-To: &lt;lsq.1507553063.449494954@decadent.org.uk&gt;
X-SA-Exim-Connect-IP: 2a02:8011:400e:2:6f00:88c8:c921:d332
X-SA-Exim-Mail-From: ben@decadent.org.uk
X-SA-Exim-Scanned: No (on shadbolt.decadent.org.uk);
	SAEximRunCond expanded to false
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=131">Ben Hutchings</a> - Oct. 9, 2017, 12:44 p.m.</div>
<pre class="content">
3.16.49-rc1 review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: &quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;</span>

[ Upstream commit 49fa5230462f9f2c4e97c81356473a6bdf06c422 ]

The system call tracing bug fix mentioned in the Fixes tag
below increased the amount of assembler code in the sequence
of assembler files included by head_64.S

This caused to total set of code to exceed 0x4000 bytes in
size, which overflows the expression in head_64.S that works
to place swapper_tsb at address 0x408000.

When this is violated, the TSB is not properly aligned, and
also the trap table is not aligned properly either.  All of
this together results in failed boots.

So, do two things:

1) Simplify some code by using ba,a instead of ba/nop to get
   those bytes back.

2) Add a linker script assertion to make sure that if this
   happens again the build will fail.

Fixes: 1a40b95374f6 (&quot;sparc: Fix system call tracing register handling.&quot;)
Reported-by: Meelis Roos &lt;mroos@linux.ee&gt;
Reported-by: Joerg Abraham &lt;joerg.abraham@nokia.com&gt;
<span class="signed-off-by">Signed-off-by: David S. Miller &lt;davem@davemloft.net&gt;</span>
<span class="signed-off-by">Signed-off-by: Ben Hutchings &lt;ben@decadent.org.uk&gt;</span>
---
 arch/sparc/kernel/cherrs.S      | 14 +++++---------
 arch/sparc/kernel/fpu_traps.S   | 11 +++++------
 arch/sparc/kernel/head_64.S     | 24 ++++++++----------------
 arch/sparc/kernel/misctrap.S    | 12 ++++--------
 arch/sparc/kernel/spiterrs.S    | 18 ++++++------------
 arch/sparc/kernel/utrap.S       |  3 +--
 arch/sparc/kernel/vmlinux.lds.S |  4 ++++
 arch/sparc/kernel/winfixup.S    |  3 +--
 8 files changed, 34 insertions(+), 55 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/sparc/kernel/cherrs.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/cherrs.S</span>
<span class="p_chunk">@@ -214,8 +214,7 @@</span> <span class="p_context"> do_dcpe_tl1_nonfatal:	/* Ok we may use i</span>
 	subcc		%g1, %g2, %g1		! Next cacheline
 	bge,pt		%icc, 1b
 	 nop
<span class="p_del">-	ba,pt		%xcc, dcpe_icpe_tl1_common</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, dcpe_icpe_tl1_common</span>
 
 do_dcpe_tl1_fatal:
 	sethi		%hi(1f), %g7
<span class="p_chunk">@@ -224,8 +223,7 @@</span> <span class="p_context"> do_dcpe_tl1_fatal:</span>
 	mov		0x2, %o0
 	call		cheetah_plus_parity_error
 	 add		%sp, PTREGS_OFF, %o1
<span class="p_del">-	ba,pt		%xcc, rtrap</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, rtrap</span>
 	.size		do_dcpe_tl1,.-do_dcpe_tl1
 
 	.globl		do_icpe_tl1
<span class="p_chunk">@@ -259,8 +257,7 @@</span> <span class="p_context"> do_icpe_tl1_nonfatal:	/* Ok we may use i</span>
 	subcc		%g1, %g2, %g1
 	bge,pt		%icc, 1b
 	 nop
<span class="p_del">-	ba,pt		%xcc, dcpe_icpe_tl1_common</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, dcpe_icpe_tl1_common</span>
 
 do_icpe_tl1_fatal:
 	sethi		%hi(1f), %g7
<span class="p_chunk">@@ -269,8 +266,7 @@</span> <span class="p_context"> do_icpe_tl1_fatal:</span>
 	mov		0x3, %o0
 	call		cheetah_plus_parity_error
 	 add		%sp, PTREGS_OFF, %o1
<span class="p_del">-	ba,pt		%xcc, rtrap</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, rtrap</span>
 	.size		do_icpe_tl1,.-do_icpe_tl1
 	
 	.type		dcpe_icpe_tl1_common,#function
<span class="p_chunk">@@ -456,7 +452,7 @@</span> <span class="p_context"> __cheetah_log_error:</span>
 	 cmp		%g2, 0x63
 	be		c_cee
 	 nop
<span class="p_del">-	ba,pt		%xcc, c_deferred</span>
<span class="p_add">+	ba,a,pt		%xcc, c_deferred</span>
 	.size		__cheetah_log_error,.-__cheetah_log_error
 
 	/* Cheetah FECC trap handling, we get here from tl{0,1}_fecc
<span class="p_header">--- a/arch/sparc/kernel/fpu_traps.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/fpu_traps.S</span>
<span class="p_chunk">@@ -100,8 +100,8 @@</span> <span class="p_context"> do_fpdis:</span>
 	fmuld		%f0, %f2, %f26
 	faddd		%f0, %f2, %f28
 	fmuld		%f0, %f2, %f30
<span class="p_del">-	b,pt		%xcc, fpdis_exit</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, fpdis_exit</span>
<span class="p_add">+</span>
 2:	andcc		%g5, FPRS_DU, %g0
 	bne,pt		%icc, 3f
 	 fzero		%f32
<span class="p_chunk">@@ -144,8 +144,8 @@</span> <span class="p_context"> do_fpdis:</span>
 	fmuld		%f32, %f34, %f58
 	faddd		%f32, %f34, %f60
 	fmuld		%f32, %f34, %f62
<span class="p_del">-	ba,pt		%xcc, fpdis_exit</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, fpdis_exit</span>
<span class="p_add">+</span>
 3:	mov		SECONDARY_CONTEXT, %g3
 	add		%g6, TI_FPREGS, %g1
 
<span class="p_chunk">@@ -197,8 +197,7 @@</span> <span class="p_context"> fpdis_exit2:</span>
 fp_other_bounce:
 	call		do_fpother
 	 add		%sp, PTREGS_OFF, %o0
<span class="p_del">-	ba,pt		%xcc, rtrap</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, rtrap</span>
 	.size		fp_other_bounce,.-fp_other_bounce
 
 	.align		32
<span class="p_header">--- a/arch/sparc/kernel/head_64.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/head_64.S</span>
<span class="p_chunk">@@ -461,9 +461,8 @@</span> <span class="p_context"> sun4v_chip_type:</span>
 	subcc	%g3, 1, %g3
 	bne,pt	%xcc, 41b
 	add	%g1, 1, %g1
<span class="p_del">-	mov	SUN4V_CHIP_SPARC64X, %g4</span>
 	ba,pt	%xcc, 5f
<span class="p_del">-	nop</span>
<span class="p_add">+	 mov	SUN4V_CHIP_SPARC64X, %g4</span>
 
 49:
 	mov	SUN4V_CHIP_UNKNOWN, %g4
<span class="p_chunk">@@ -548,8 +547,7 @@</span> <span class="p_context"> sun4u_init:</span>
 	stxa		%g0, [%g7] ASI_DMMU
 	membar	#Sync
 
<span class="p_del">-	ba,pt		%xcc, sun4u_continue</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, sun4u_continue</span>
 
 sun4v_init:
 	/* Set ctx 0 */
<span class="p_chunk">@@ -560,14 +558,12 @@</span> <span class="p_context"> sun4v_init:</span>
 	mov		SECONDARY_CONTEXT, %g7
 	stxa		%g0, [%g7] ASI_MMU
 	membar		#Sync
<span class="p_del">-	ba,pt		%xcc, niagara_tlb_fixup</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, niagara_tlb_fixup</span>
 
 sun4u_continue:
 	BRANCH_IF_ANY_CHEETAH(g1, g7, cheetah_tlb_fixup)
 
<span class="p_del">-	ba,pt	%xcc, spitfire_tlb_fixup</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt	%xcc, spitfire_tlb_fixup</span>
 
 niagara_tlb_fixup:
 	mov	3, %g2		/* Set TLB type to hypervisor. */
<span class="p_chunk">@@ -639,8 +635,7 @@</span> <span class="p_context"> niagara_patch:</span>
 	call	hypervisor_patch_cachetlbops
 	 nop
 
<span class="p_del">-	ba,pt	%xcc, tlb_fixup_done</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt	%xcc, tlb_fixup_done</span>
 
 cheetah_tlb_fixup:
 	mov	2, %g2		/* Set TLB type to cheetah+. */
<span class="p_chunk">@@ -659,8 +654,7 @@</span> <span class="p_context"> cheetah_tlb_fixup:</span>
 	call	cheetah_patch_cachetlbops
 	 nop
 
<span class="p_del">-	ba,pt	%xcc, tlb_fixup_done</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt	%xcc, tlb_fixup_done</span>
 
 spitfire_tlb_fixup:
 	/* Set TLB type to spitfire. */
<span class="p_chunk">@@ -782,8 +776,7 @@</span> <span class="p_context"> setup_trap_table:</span>
 	call	%o1
 	 add	%sp, (2047 + 128), %o0
 
<span class="p_del">-	ba,pt	%xcc, 2f</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt	%xcc, 2f</span>
 
 1:	sethi	%hi(sparc64_ttable_tl0), %o0
 	set	prom_set_trap_table_name, %g2
<span class="p_chunk">@@ -822,8 +815,7 @@</span> <span class="p_context"> setup_trap_table:</span>
 
 	BRANCH_IF_ANY_CHEETAH(o2, o3, 1f)
 
<span class="p_del">-	ba,pt	%xcc, 2f</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt	%xcc, 2f</span>
 
 	/* Disable STICK_INT interrupts. */
 1:
<span class="p_header">--- a/arch/sparc/kernel/misctrap.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/misctrap.S</span>
<span class="p_chunk">@@ -18,8 +18,7 @@</span> <span class="p_context"> __do_privact:</span>
 109:	or		%g7, %lo(109b), %g7
 	call		do_privact
 	 add		%sp, PTREGS_OFF, %o0
<span class="p_del">-	ba,pt		%xcc, rtrap</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, rtrap</span>
 	.size		__do_privact,.-__do_privact
 
 	.type		do_mna,#function
<span class="p_chunk">@@ -46,8 +45,7 @@</span> <span class="p_context"> do_mna:</span>
 	mov		%l5, %o2
 	call		mem_address_unaligned
 	 add		%sp, PTREGS_OFF, %o0
<span class="p_del">-	ba,pt		%xcc, rtrap</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, rtrap</span>
 	.size		do_mna,.-do_mna
 
 	.type		do_lddfmna,#function
<span class="p_chunk">@@ -65,8 +63,7 @@</span> <span class="p_context"> do_lddfmna:</span>
 	mov		%l5, %o2
 	call		handle_lddfmna
 	 add		%sp, PTREGS_OFF, %o0
<span class="p_del">-	ba,pt		%xcc, rtrap</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, rtrap</span>
 	.size		do_lddfmna,.-do_lddfmna
 
 	.type		do_stdfmna,#function
<span class="p_chunk">@@ -84,8 +81,7 @@</span> <span class="p_context"> do_stdfmna:</span>
 	mov		%l5, %o2
 	call		handle_stdfmna
 	 add		%sp, PTREGS_OFF, %o0
<span class="p_del">-	ba,pt		%xcc, rtrap</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, rtrap</span>
 	.size		do_stdfmna,.-do_stdfmna
 
 	.type		breakpoint_trap,#function
<span class="p_header">--- a/arch/sparc/kernel/spiterrs.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/spiterrs.S</span>
<span class="p_chunk">@@ -85,8 +85,7 @@</span> <span class="p_context"> __spitfire_cee_trap_continue:</span>
 	ba,pt		%xcc, etraptl1
 	 rd		%pc, %g7
 
<span class="p_del">-	ba,pt		%xcc, 2f</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, 2f</span>
 
 1:	ba,pt		%xcc, etrap_irq
 	 rd		%pc, %g7
<span class="p_chunk">@@ -100,8 +99,7 @@</span> <span class="p_context"> __spitfire_cee_trap_continue:</span>
 	mov		%l5, %o2
 	call		spitfire_access_error
 	 add		%sp, PTREGS_OFF, %o0
<span class="p_del">-	ba,pt		%xcc, rtrap</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, rtrap</span>
 	.size		__spitfire_access_error,.-__spitfire_access_error
 
 	/* This is the trap handler entry point for ECC correctable
<span class="p_chunk">@@ -179,8 +177,7 @@</span> <span class="p_context"> __spitfire_data_access_exception_tl1:</span>
 	mov		%l5, %o2
 	call		spitfire_data_access_exception_tl1
 	 add		%sp, PTREGS_OFF, %o0
<span class="p_del">-	ba,pt		%xcc, rtrap</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, rtrap</span>
 	.size		__spitfire_data_access_exception_tl1,.-__spitfire_data_access_exception_tl1
 
 	.type		__spitfire_data_access_exception,#function
<span class="p_chunk">@@ -200,8 +197,7 @@</span> <span class="p_context"> __spitfire_data_access_exception:</span>
 	mov		%l5, %o2
 	call		spitfire_data_access_exception
 	 add		%sp, PTREGS_OFF, %o0
<span class="p_del">-	ba,pt		%xcc, rtrap</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, rtrap</span>
 	.size		__spitfire_data_access_exception,.-__spitfire_data_access_exception
 
 	.type		__spitfire_insn_access_exception_tl1,#function
<span class="p_chunk">@@ -220,8 +216,7 @@</span> <span class="p_context"> __spitfire_insn_access_exception_tl1:</span>
 	mov		%l5, %o2
 	call		spitfire_insn_access_exception_tl1
 	 add		%sp, PTREGS_OFF, %o0
<span class="p_del">-	ba,pt		%xcc, rtrap</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, rtrap</span>
 	.size		__spitfire_insn_access_exception_tl1,.-__spitfire_insn_access_exception_tl1
 
 	.type		__spitfire_insn_access_exception,#function
<span class="p_chunk">@@ -240,6 +235,5 @@</span> <span class="p_context"> __spitfire_insn_access_exception:</span>
 	mov		%l5, %o2
 	call		spitfire_insn_access_exception
 	 add		%sp, PTREGS_OFF, %o0
<span class="p_del">-	ba,pt		%xcc, rtrap</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, rtrap</span>
 	.size		__spitfire_insn_access_exception,.-__spitfire_insn_access_exception
<span class="p_header">--- a/arch/sparc/kernel/utrap.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/utrap.S</span>
<span class="p_chunk">@@ -11,8 +11,7 @@</span> <span class="p_context"> utrap_trap:		/* %g3=handler,%g4=level */</span>
 	mov		%l4, %o1
         call		bad_trap
 	 add		%sp, PTREGS_OFF, %o0
<span class="p_del">-	ba,pt		%xcc, rtrap</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt		%xcc, rtrap</span>
 
 invoke_utrap:
 	sllx		%g3, 3, %g3
<span class="p_header">--- a/arch/sparc/kernel/vmlinux.lds.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/vmlinux.lds.S</span>
<span class="p_chunk">@@ -33,6 +33,10 @@</span> <span class="p_context"> ENTRY(_start)</span>
 jiffies = jiffies_64;
 #endif
 
<span class="p_add">+#ifdef CONFIG_SPARC64</span>
<span class="p_add">+ASSERT((swapper_tsb == 0x0000000000408000), &quot;Error: sparc64 early assembler too large&quot;)</span>
<span class="p_add">+#endif</span>
<span class="p_add">+</span>
 SECTIONS
 {
 #ifdef CONFIG_SPARC64
<span class="p_header">--- a/arch/sparc/kernel/winfixup.S</span>
<span class="p_header">+++ b/arch/sparc/kernel/winfixup.S</span>
<span class="p_chunk">@@ -32,8 +32,7 @@</span> <span class="p_context"> fill_fixup:</span>
 	 rd	%pc, %g7
 	call	do_sparc64_fault
 	 add	%sp, PTREGS_OFF, %o0
<span class="p_del">-	ba,pt	%xcc, rtrap</span>
<span class="p_del">-	 nop</span>
<span class="p_add">+	ba,a,pt	%xcc, rtrap</span>
 
 	/* Be very careful about usage of the trap globals here.
 	 * You cannot touch %g5 as that has the fault information.

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



