
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v7,2/4] MIPS: Octeon: Automatically provision CVMSEG space. - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v7,2/4] MIPS: Octeon: Automatically provision CVMSEG space.</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=31592">David Daney</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 13, 2017, 12:48 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171213004848.15086-3-david.daney@cavium.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10108555/mbox/"
   >mbox</a>
|
   <a href="/patch/10108555/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10108555/">/patch/10108555/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	43CB260327 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 13 Dec 2017 00:50:28 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 33DA928C86
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 13 Dec 2017 00:50:28 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 2710428C9D; Wed, 13 Dec 2017 00:50:28 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3E20128C86
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 13 Dec 2017 00:50:27 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753243AbdLMAuW (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 12 Dec 2017 19:50:22 -0500
Received: from mail-cys01nam02on0076.outbound.protection.outlook.com
	([104.47.37.76]:39646
	&quot;EHLO NAM02-CY1-obe.outbound.protection.outlook.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1752945AbdLMAtL (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 12 Dec 2017 19:49:11 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=CAVIUMNETWORKS.onmicrosoft.com; s=selector1-cavium-com;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version;
	bh=E9Bi8jCDNzD7m378iOWee6PVoWMIEDtV4oXfyK403As=;
	b=nkOeFbROX6C7zvIPfCAa6kSZqt7pyxggQLdGIlZgBogEbUQsj2NBamxz5jApJmkt6egVPBHPe/mW2Opm2DfIQ/Kw2MhZJp9XLxYkxT2f3OJ5pPKKrIbAo9gZrpPoaLKTJolSUilA4RndfxXm9niJ4cYQms0e7xluIGiCPnMOthg=
Authentication-Results: spf=none (sender IP is )
	smtp.mailfrom=David.Daney@cavium.com; 
Received: from ddl.caveonetworks.com (50.233.148.156) by
	CY4PR07MB3495.namprd07.prod.outlook.com (10.171.252.152) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P256) id
	15.20.302.9; Wed, 13 Dec 2017 00:49:04 +0000
From: David Daney &lt;david.daney@cavium.com&gt;
To: linux-mips@linux-mips.org, ralf@linux-mips.org,
	James Hogan &lt;james.hogan@mips.com&gt;
Cc: linux-kernel@vger.kernel.org,
	&quot;Steven J. Hill&quot; &lt;steven.hill@cavium.com&gt;, netdev@vger.kernel.org,
	&quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;,
	David Daney &lt;david.daney@cavium.com&gt;,
	Carlos Munoz &lt;cmunoz@caviumnetworks.com&gt;
Subject: [PATCH v7 2/4] MIPS: Octeon: Automatically provision CVMSEG space.
Date: Tue, 12 Dec 2017 16:48:46 -0800
Message-Id: &lt;20171213004848.15086-3-david.daney@cavium.com&gt;
X-Mailer: git-send-email 2.14.3
In-Reply-To: &lt;20171213004848.15086-1-david.daney@cavium.com&gt;
References: &lt;20171213004848.15086-1-david.daney@cavium.com&gt;
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [50.233.148.156]
X-ClientProxiedBy: DM5PR07CA0037.namprd07.prod.outlook.com (10.168.109.23) To
	CY4PR07MB3495.namprd07.prod.outlook.com (10.171.252.152)
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 6396ac8d-e9c0-4c0b-7c5d-08d541c34fd2
X-Microsoft-Antispam: UriScan:; BCL:0; PCL:0;
	RULEID:(4534020)(4602075)(4627115)(201703031133081)(201702281549075)(5600026)(4604075)(2017052603307);
	SRVR:CY4PR07MB3495; 
X-Microsoft-Exchange-Diagnostics: 1; CY4PR07MB3495;
	3:1NEdeBZBzzkBWu6m2W3fM04LaEsrLyrP2NuLjHK0NbkKq59VggMBe00cdXCfK2OxOqStgMSsov26x5l/WO/0hCSAuXsTZhG7GUYma8ZepqqWqPpeveKAtOIohiYxj/nzZluboz0pO7c8SwndXIQCaLAItKCGQ6lSrn2SRHPnr2peTbCRYGCmRUIHoODShC5wNhlToZgSAKkiUeoeQO+Rlj0JkwvVy8OguZKiLtFBX0hjB1FnN4qXZ4sybSCYg4t4;
	25:Uj6eIPWziMXkriFJyw3PygwhfUOs53dr3/oUlgEDV1KOmAyzR6L3QCmnITw0n7KQrdpqcWhTZYzGH0G8DWahWPCohctI42HcKqqO97aX5sMoUafVCEyn5TmBvJ8KnpqYXq0ZsU0GFthYZJeX4mlIiGeT/+nbn1Xt7ERTWgKgDLqZFsiBnDYoe6uAN+Aw0/IZGUr0MEJI6U/iRLknk4aXLKgOTQnTI/xP1OU6kVnagsh23xUu8TZUXJDpxVrU/eLp6E94CD9kCycYZE3cIZCyAcU1DJt2GMvwFjVlzISvaK4ZQqp9UBjdSx4DaReODLdnXlxW3xmdVnDMh4YuaXsC1okApfn6z8Jlq8LCCbPfVoo=;
	31:p/9ZaurUOYx9uFnmChFHdmN6lQgP2rDDhR1gdF8KGr64W8mMrBZTkmv5mvgWPQiYVP4n4QNCfeayD3TVp68m9yeIuzQySb9Tk6sLOF3vcnG9EUhoFqC0bTYF2B7u0Qvd228Pdk4CYI7/U+eY/oCCuayD7hZwTF9AxV/RMaDajw3tYef1sU9LqcpB47A4DSrjJDrHK+UsKWFfUaq7Lic536RI27/JZetbR7/ZXwM68HY=
X-MS-TrafficTypeDiagnostic: CY4PR07MB3495:
X-Microsoft-Exchange-Diagnostics: 1; CY4PR07MB3495;
	20:jHFQhWcI1WLpB9k1ieaDjpVUY9Du+JsgGIS0uYBzqXnAIyDdMoVflEpZoOiAdvBv08/6DpRVBNYFd3YHiGfyPbZCEUwdZwZf1z9w4SFSyxwSEWK9nvXS/dNG4ZVkL3tE00TjBfgiQug7lroHWm4wFAQ0i0OZM+nVu9uZ2NKhPP0PxTyOC5sBpvdHOihYwboRsR85bVzmu7B5T93bVEVVEXY3DSfEShmu7ehwLUzEvecb7yd82Riffxs2q/7pUzl1lv1Z/hw5GT2Yq2uGivpZQRaLtwFLDjtWTu3GOwIoiItIP5u525RH8VNcSaKMAuyzfekOSEY7CSjCh1m6TSf/4ctgHgxD3mN/RpbSQ/V8N8yv7/JZT3inwSxDYPqtgSrzJT22keHwx5sXsm9DYTYGVQoh7au852S0Wp1YMHZMdZWQrQ1FAwtsGfpKnW1FIcv4AowkMl0TqhZrkA7n9NV2EChVZ2EE9uTC44f44U6rdcvizoflmHQ/vdL7OAMHNl2s;
	4:7DmOph5995dj2LcB86hdGSbSLncYVfBPyAxRk3zlHdBajXuhtq+mhg8R89//y9YNSxMehJ66LZ0ot6JCSZBVNHzRr67A9Ygk2fyEI0oqNhoFyfxrNNidHWJSo4ayEAVjc/cQIqzltJ99qOEGj7TweB+wK9BFtdRsyLY8BoyXCa7w+dAkyUxVJBmsUkkrbUSkjC3mtWifHAkfpXcxEdFhNkWEv0xH2AUorSLEXe8nkgtlE6fir556ddHEYK9NlrLOuJOJIoh0snBlyIh5keYuyw==
X-Microsoft-Antispam-PRVS: &lt;CY4PR07MB349512556CE284D328A80ED597350@CY4PR07MB3495.namprd07.prod.outlook.com&gt;
X-Exchange-Antispam-Report-Test: UriScan:;
X-Exchange-Antispam-Report-CFA-Test: BCL:0; PCL:0;
	RULEID:(6040450)(2401047)(8121501046)(5005006)(3002001)(3231023)(93006095)(93001095)(10201501046)(6041248)(20161123560025)(20161123555025)(20161123564025)(20161123562025)(20161123558100)(201703131423075)(201702281528075)(201703061421075)(201703061406153)(6072148)(201708071742011);
	SRVR:CY4PR07MB3495; BCL:0; PCL:0;
	RULEID:(100000803101)(100110400095); SRVR:CY4PR07MB3495; 
X-Forefront-PRVS: 052017CAF1
X-Forefront-Antispam-Report: SFV:NSPM;
	SFS:(10009020)(376002)(366004)(346002)(199004)(189003)(106356001)(52116002)(105586002)(53416004)(16526018)(6512007)(16586007)(107886003)(1076002)(4326008)(53936002)(47776003)(25786009)(6506007)(386003)(54906003)(3846002)(2906002)(6486002)(316002)(66066001)(6116002)(59450400001)(69596002)(68736007)(81166006)(5660300001)(6666003)(72206003)(2950100002)(50226002)(36756003)(305945005)(7736002)(8936002)(6916009)(51416003)(81156014)(8676002)(97736004)(76176011)(86362001)(48376002)(478600001)(50466002);
	DIR:OUT; SFP:1101; SCL:1; SRVR:CY4PR07MB3495;
	H:ddl.caveonetworks.com; FPR:; SPF:None; PTR:InfoNoRecords;
	A:1; MX:1; LANG:en; 
Received-SPF: None (protection.outlook.com: cavium.com does not designate
	permitted sender hosts)
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1; CY4PR07MB3495;
	23:GGP27i7qxMHyzs8xPCtBuFeE9HuIza16Srtns9cF2?=
	=?us-ascii?Q?008BQYxeNj5X91d33keoWJl+77s99aagekUM7/fOKj7GOTyufZvDchPgHQf1?=
	=?us-ascii?Q?REmPsBjx1DSDVbrtUSP3j41CK3YIQANw88hCh2umrwILuMAtPjmq4CSkIbPS?=
	=?us-ascii?Q?t1ov7mCAuw8ojFsQFOH441nqbv8VoTFvuIVGSmqjXPM/YF5UgDDHWV1CsM7A?=
	=?us-ascii?Q?1Xl3oMyzVBWLIdtVH9TYL2DQ7+/66m+3TNIrhcDTLmAsgikV+jXDDlyqm3PX?=
	=?us-ascii?Q?TDVMwRBQsg1IuukckWUxYk+8/qjF0rBcB3AUOJOTA9ZavbknJu/CzRr7os0+?=
	=?us-ascii?Q?76/6YIGtrVvxM6wUUh2nFX1Uwu3wKNkQnyHn87Rj5PDte9AemIN/sF6We+3j?=
	=?us-ascii?Q?k+T+5mDVU+hSUos6/8Lf+QLDwdxwSiRwwchY6TPV4U/pB+GAdxjFNtkh9Q7v?=
	=?us-ascii?Q?gC5cFasJG3hlFhFjjZrU4d4kkUFTLrSSWTWgOAQ01Oc873O+24wFj01PoWhP?=
	=?us-ascii?Q?FjvppP3rEpshGlm2fC+iBc9DHkUb/DpWHA7hxXp5qcOeIEsx9mLpSVDZIydZ?=
	=?us-ascii?Q?tS3q4SJixH0yxaxnqeQ+Zc+0IZlbNl/YJTu2ukqy7aMr9PxWD1pmvkY2q+Uw?=
	=?us-ascii?Q?MNOPoSyDJYwuqRUuxtmd//v2XtHi7GkWPvBdfYQcxQR/iPN1LUOgvVmRwNoQ?=
	=?us-ascii?Q?hAUWHY8Y0rgcF2kWfXN2CcnzTz88SRcB4D9JsZCqgBaMxNViSMAzuwVtkd++?=
	=?us-ascii?Q?pR7bU3rpshylW8PPHNZoxYhOtRQVETpxHg7+OptOiAiKXOtwv5SF6Pb/b6vS?=
	=?us-ascii?Q?gZBWxFyz+wDjzGDylLMUy3/Qi5NMxJjTzPU2fdzbB2XLgUPT38WedVhQ5GK2?=
	=?us-ascii?Q?1x8x+oB3O/gOzlCsoS9/+sMepj7lnl2gTe5fSxWbzSuVJmjXqEwBgBVrjaQY?=
	=?us-ascii?Q?XMMxVpty6BWQygTdIYdH7p36DfylLPH/6BxsEU7K5TE6kEO6FCdwhaYwowPS?=
	=?us-ascii?Q?81kSNVKrOUo7xTLMItOxbHtcHqwF1gVzdVM0H7LCYtzhRREaFLX31z6lFcYk?=
	=?us-ascii?Q?e0sBx5FwHdJh/23A+zUujjVWYu1Nqsnuj83Ps8RnMZkSsCO94JcMaRQqIvN2?=
	=?us-ascii?Q?hlfkR5GwPOXcOvaBql1VnjvXWQzNIVHykFGgDdicIOWMAnlICTcMg=3D=3D?=
X-Microsoft-Exchange-Diagnostics: 1; CY4PR07MB3495;
	6:HZ3jmJc4Xp16irIl36DLtoj0kVF5eDvh4W0ScLdfLUiHcSWl1gwr52Du/PE5OffPJoYAUr/GfK7UO/OcKGQVA7LGYpgkDkwTbSrbaA2pNdRorJb07Yuzpiw0ZdsE2iQ+8eSQjOqPzYy9ePRXfD6iNgr4bZOPkNkE9syRcdrkJbQoV6ybea96BN7RRW7yGTsyPGNJzSB2Sr5C/VRniMM71vwmqmoR8mzrdJqWM4aLNc3R8ldvmkgajje1KYW6oSF5cV6aBglvkUnhYAAi8A1rxECnriFbZXzDThK3b6hOPpdVvuaimmn73ug/2bDQxTi7LXcxfYBZa0+hSSz+juW7SLy73FlYrMsVbAJ1ftzo7V0=;
	5:BGlwKvRxizXBEq0r2f9DEXUzid31cl8ZGYloCe3bfeAfUxm9CkI78rILvqDLBw3Ykn+CaVEp9DizfxMk1GQBTGi4WOaAl/bOY2pz5KUfsIpzkWXNuNxV4z7aFMP1rAcDWLqI6dT4+3Hgiam+VyauBYnTxSbQpBW2qMDqk9ccwBQ=;
	24:dvQlqJOBjy/zLOtru+LI9nlbyOf4hdZYlcsvLdyytsHTPCUAC7zHHpMIICrWQR4ty8IJfULHHWc379z7HZ5epqnho3zUhWP+N3D4at3iAzc=;
	7:g1itlEVszwZ+kB8zsT5Mocwo1gE7oA9dvaMWdgNw5nbBDe6tlk5JysAw1ubAfRvPqAJXIuiYXOh2ZAXc+6W+PAyRaSYQNovsiK5DdKCtdeTubawCG8S0NU62YXvvAo6tFN4IHyfEYZ4/cwd11N+o6UkSIA14Cuu2wh2QTZWRPTOeNlCwtTxOwCwrcU26dv8mUmVzQ/8zRC4ji5tu6LImwZISTB6sWlVOMzsKgUNu5s31VpE0lSEojDt0iW5s0GtM
SpamDiagnosticOutput: 1:99
SpamDiagnosticMetadata: NSPM
X-OriginatorOrg: cavium.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 13 Dec 2017 00:49:04.9384
	(UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 6396ac8d-e9c0-4c0b-7c5d-08d541c34fd2
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 711e4ccf-2e9b-4bcf-a551-4094005b6194
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CY4PR07MB3495
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=31592">David Daney</a> - Dec. 13, 2017, 12:48 a.m.</div>
<pre class="content">
Remove CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE and automatically calculate
the amount of CVMSEG space needed.

1st 128-bytes: Use by IOBDMA
2nd 128-bytes: Reserved by kernel for scratch/TLS emulation.
3rd 128-bytes: OCTEON-III LMTLINE

New config variable CONFIG_CAVIUM_OCTEON_EXTRA_CVMSEG provisions
additional lines, defaults to zero.
<span class="signed-off-by">
Signed-off-by: David Daney &lt;david.daney@cavium.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Carlos Munoz &lt;cmunoz@caviumnetworks.com&gt;</span>
---
 arch/mips/cavium-octeon/Kconfig                    | 27 ++++++++++++--------
 arch/mips/cavium-octeon/setup.c                    | 16 ++++++------
 .../asm/mach-cavium-octeon/kernel-entry-init.h     | 20 +++++++++------
 arch/mips/include/asm/mipsregs.h                   |  2 ++
 arch/mips/include/asm/octeon/octeon.h              |  2 ++
 arch/mips/include/asm/processor.h                  |  2 +-
 arch/mips/kernel/octeon_switch.S                   |  2 --
 arch/mips/mm/tlbex.c                               | 29 ++++++----------------
 drivers/staging/octeon/ethernet-defines.h          |  2 +-
 9 files changed, 50 insertions(+), 52 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/mips/cavium-octeon/Kconfig b/arch/mips/cavium-octeon/Kconfig</span>
<span class="p_header">index 204a1670fd9b..a50d1aa5863b 100644</span>
<span class="p_header">--- a/arch/mips/cavium-octeon/Kconfig</span>
<span class="p_header">+++ b/arch/mips/cavium-octeon/Kconfig</span>
<span class="p_chunk">@@ -11,21 +11,26 @@</span> <span class="p_context"> config CAVIUM_CN63XXP1</span>
 	  non-CN63XXP1 hardware, so it is recommended to select &quot;n&quot;
 	  unless it is known the workarounds are needed.
 
<span class="p_del">-config CAVIUM_OCTEON_CVMSEG_SIZE</span>
<span class="p_del">-	int &quot;Number of L1 cache lines reserved for CVMSEG memory&quot;</span>
<span class="p_del">-	range 0 54</span>
<span class="p_del">-	default 1</span>
<span class="p_del">-	help</span>
<span class="p_del">-	  CVMSEG LM is a segment that accesses portions of the dcache as a</span>
<span class="p_del">-	  local memory; the larger CVMSEG is, the smaller the cache is.</span>
<span class="p_del">-	  This selects the size of CVMSEG LM, which is in cache blocks. The</span>
<span class="p_del">-	  legally range is from zero to 54 cache blocks (i.e. CVMSEG LM is</span>
<span class="p_del">-	  between zero and 6192 bytes).</span>
<span class="p_del">-</span>
 endif # CPU_CAVIUM_OCTEON
 
 if CAVIUM_OCTEON_SOC
 
<span class="p_add">+config CAVIUM_OCTEON_EXTRA_CVMSEG</span>
<span class="p_add">+	int &quot;Number of extra L1 cache lines reserved for CVMSEG memory&quot;</span>
<span class="p_add">+	range 0 50</span>
<span class="p_add">+	default 0</span>
<span class="p_add">+	help</span>
<span class="p_add">+	  CVMSEG LM is a segment that accesses portions of the dcache</span>
<span class="p_add">+	  as a local memory; the larger CVMSEG is, the smaller the</span>
<span class="p_add">+	  cache is.  The kernel uses two or three blocks (one for TLB</span>
<span class="p_add">+	  exception handlers, one for driver IOBDMA operations, and on</span>
<span class="p_add">+	  models that need it, one for LMTDMA operations). This</span>
<span class="p_add">+	  selects an optional extra number of CVMSEG lines for use by</span>
<span class="p_add">+	  other software.</span>
<span class="p_add">+</span>
<span class="p_add">+	  Normally no extra lines are required, and this parameter</span>
<span class="p_add">+	  should be set to zero.</span>
<span class="p_add">+</span>
 config CAVIUM_OCTEON_LOCK_L2
 	bool &quot;Lock often used kernel code in the L2&quot;
 	default &quot;y&quot;
<span class="p_header">diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c</span>
<span class="p_header">index 99e6a68bc652..51c4d3c3cada 100644</span>
<span class="p_header">--- a/arch/mips/cavium-octeon/setup.c</span>
<span class="p_header">+++ b/arch/mips/cavium-octeon/setup.c</span>
<span class="p_chunk">@@ -68,6 +68,12 @@</span> <span class="p_context"> extern void pci_console_init(const char *arg);</span>
 static unsigned long long max_memory = ULLONG_MAX;
 static unsigned long long reserve_low_mem;
 
<span class="p_add">+/*</span>
<span class="p_add">+ * modified in hernel-entry-init.h, must have an initial value to keep</span>
<span class="p_add">+ * it from being clobbered when bss is zeroed.</span>
<span class="p_add">+ */</span>
<span class="p_add">+u32 octeon_cvmseg_lines = 2;</span>
<span class="p_add">+</span>
 DEFINE_SEMAPHORE(octeon_bootbus_sem);
 EXPORT_SYMBOL(octeon_bootbus_sem);
 
<span class="p_chunk">@@ -604,11 +610,7 @@</span> <span class="p_context"> void octeon_user_io_init(void)</span>
 
 	/* R/W If set, CVMSEG is available for loads/stores in
 	 * kernel/debug mode. */
<span class="p_del">-#if CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0</span>
 	cvmmemctl.s.cvmsegenak = 1;
<span class="p_del">-#else</span>
<span class="p_del">-	cvmmemctl.s.cvmsegenak = 0;</span>
<span class="p_del">-#endif</span>
 	if (OCTEON_IS_OCTEON3()) {
 		/* Enable LMTDMA */
 		cvmmemctl.s.lmtena = 1;
<span class="p_chunk">@@ -626,9 +628,9 @@</span> <span class="p_context"> void octeon_user_io_init(void)</span>
 
 	/* Setup of CVMSEG is done in kernel-entry-init.h */
 	if (smp_processor_id() == 0)
<span class="p_del">-		pr_notice(&quot;CVMSEG size: %d cache lines (%d bytes)\n&quot;,</span>
<span class="p_del">-			  CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE,</span>
<span class="p_del">-			  CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE * 128);</span>
<span class="p_add">+		pr_notice(&quot;CVMSEG size: %u cache lines (%u bytes)\n&quot;,</span>
<span class="p_add">+			  octeon_cvmseg_lines,</span>
<span class="p_add">+			  octeon_cvmseg_lines * 128);</span>
 
 	if (octeon_has_feature(OCTEON_FEATURE_FAU)) {
 		union cvmx_iob_fau_timeout fau_timeout;
<span class="p_header">diff --git a/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h b/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h</span>
<span class="p_header">index c38b38ce5a3d..cdcca60978a2 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h</span>
<span class="p_chunk">@@ -26,11 +26,18 @@</span> <span class="p_context"></span>
 	# a3 = address of boot descriptor block
 	.set push
 	.set arch=octeon
<span class="p_add">+	mfc0	v1, CP0_PRID_REG</span>
<span class="p_add">+	andi	v1, 0xff00</span>
<span class="p_add">+	li	v0, 0x9500		# cn78XX or later</span>
<span class="p_add">+	subu	v1, v1, v0</span>
<span class="p_add">+	li	t2, 2 + CONFIG_CAVIUM_OCTEON_EXTRA_CVMSEG</span>
<span class="p_add">+	bltz	v1, 1f</span>
<span class="p_add">+	addiu	t2, 1			# t2 has cvmseg_size</span>
<span class="p_add">+1:</span>
 	# Read the cavium mem control register
 	dmfc0	v0, CP0_CVMMEMCTL_REG
 	# Clear the lower 6 bits, the CVMSEG size
<span class="p_del">-	dins	v0, $0, 0, 6</span>
<span class="p_del">-	ori	v0, CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE</span>
<span class="p_add">+	dins	v0, t2, 0, 6</span>
 	dmtc0	v0, CP0_CVMMEMCTL_REG	# Write the cavium mem control register
 	dmfc0	v0, CP0_CVMCTL_REG	# Read the cavium control register
 	# Disable unaligned load/store support but leave HW fixup enabled
<span class="p_chunk">@@ -70,7 +77,7 @@</span> <span class="p_context"></span>
 	# Flush dcache after config change
 	cache	9, 0($0)
 	# Zero all of CVMSEG to make sure parity is correct
<span class="p_del">-	dli	v0, CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE</span>
<span class="p_add">+	move	v0, t2</span>
 	dsll	v0, 7
 	beqz	v0, 2f
 1:	dsubu	v0, 8
<span class="p_chunk">@@ -126,12 +133,7 @@</span> <span class="p_context"></span>
 	LONG_L	sp, (t0)
 	# Set the SP global variable to zero so the master knows we&#39;ve started
 	LONG_S	zero, (t0)
<span class="p_del">-#ifdef __OCTEON__</span>
<span class="p_del">-	syncw</span>
<span class="p_del">-	syncw</span>
<span class="p_del">-#else</span>
 	sync
<span class="p_del">-#endif</span>
 	# Jump to the normal Linux SMP entry point
 	j   smp_bootstrap
 	nop
<span class="p_chunk">@@ -148,6 +150,8 @@</span> <span class="p_context"></span>
 
 #endif /* CONFIG_SMP */
 octeon_main_processor:
<span class="p_add">+	dla	v0, octeon_cvmseg_lines</span>
<span class="p_add">+	sw	t2, 0(v0)</span>
 	.set pop
 .endm
 
<span class="p_header">diff --git a/arch/mips/include/asm/mipsregs.h b/arch/mips/include/asm/mipsregs.h</span>
<span class="p_header">index 6b1f1ad0542c..0b588640b65a 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/mipsregs.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/mipsregs.h</span>
<span class="p_chunk">@@ -1126,6 +1126,8 @@</span> <span class="p_context"></span>
 #define FPU_CSR_RD	0x3	/* towards -Infinity */
 
 
<span class="p_add">+#define CAVIUM_OCTEON_SCRATCH_OFFSET (2 * 128 - 16 - 32768)</span>
<span class="p_add">+</span>
 #ifndef __ASSEMBLY__
 
 /*
<span class="p_header">diff --git a/arch/mips/include/asm/octeon/octeon.h b/arch/mips/include/asm/octeon/octeon.h</span>
<span class="p_header">index 92a17d67c1fa..f01af2469874 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/octeon/octeon.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/octeon/octeon.h</span>
<span class="p_chunk">@@ -359,6 +359,8 @@</span> <span class="p_context"> static inline uint32_t octeon_npi_read32(uint64_t address)</span>
 
 extern struct cvmx_bootinfo *octeon_bootinfo;
 
<span class="p_add">+extern u32 octeon_cvmseg_lines;</span>
<span class="p_add">+</span>
 extern uint64_t octeon_bootloader_entry_addr;
 
 extern void (*octeon_irq_setup_secondary)(void);
<span class="p_header">diff --git a/arch/mips/include/asm/processor.h b/arch/mips/include/asm/processor.h</span>
<span class="p_header">index af34afbc32d9..1a20f9c5509f 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/processor.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/processor.h</span>
<span class="p_chunk">@@ -216,7 +216,7 @@</span> <span class="p_context"> struct octeon_cop2_state {</span>
 	.cp2			= {0,},
 
 struct octeon_cvmseg_state {
<span class="p_del">-	unsigned long cvmseg[CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE]</span>
<span class="p_add">+	unsigned long cvmseg[CONFIG_CAVIUM_OCTEON_EXTRA_CVMSEG + 3]</span>
 			    [cpu_dcache_line_size() / sizeof(unsigned long)];
 };
 
<span class="p_header">diff --git a/arch/mips/kernel/octeon_switch.S b/arch/mips/kernel/octeon_switch.S</span>
<span class="p_header">index e42113fe2762..4f56902d5ee7 100644</span>
<span class="p_header">--- a/arch/mips/kernel/octeon_switch.S</span>
<span class="p_header">+++ b/arch/mips/kernel/octeon_switch.S</span>
<span class="p_chunk">@@ -29,7 +29,6 @@</span> <span class="p_context"></span>
 	cpu_save_nonscratch a0
 	LONG_S	ra, THREAD_REG31(a0)
 
<span class="p_del">-#if CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0</span>
 	/* Check if we need to store CVMSEG state */
 	dmfc0	t0, $11,7	/* CvmMemCtl */
 	bbit0	t0, 6, 3f	/* Is user access enabled? */
<span class="p_chunk">@@ -58,7 +57,6 @@</span> <span class="p_context"></span>
 	dmfc0	t0, $11,7	/* CvmMemCtl */
 	xori	t0, t0, 0x40	/* Bit 6 is CVMSEG user enable */
 	dmtc0	t0, $11,7	/* CvmMemCtl */
<span class="p_del">-#endif</span>
 3:
 
 #if defined(CONFIG_CC_STACKPROTECTOR) &amp;&amp; !defined(CONFIG_SMP)
<span class="p_header">diff --git a/arch/mips/mm/tlbex.c b/arch/mips/mm/tlbex.c</span>
<span class="p_header">index 79b9f2ad3ff5..3d3dfba465ae 100644</span>
<span class="p_header">--- a/arch/mips/mm/tlbex.c</span>
<span class="p_header">+++ b/arch/mips/mm/tlbex.c</span>
<span class="p_chunk">@@ -115,33 +115,17 @@</span> <span class="p_context"> static int use_lwx_insns(void)</span>
 		return 0;
 	}
 }
<span class="p_del">-#if defined(CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE) &amp;&amp; \</span>
<span class="p_del">-    CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0</span>
<span class="p_del">-static bool scratchpad_available(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return true;</span>
<span class="p_del">-}</span>
<span class="p_del">-static int scratchpad_offset(int i)</span>
<span class="p_del">-{</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * CVMSEG starts at address -32768 and extends for</span>
<span class="p_del">-	 * CAVIUM_OCTEON_CVMSEG_SIZE 128 byte cache lines.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	i += 1; /* Kernel use starts at the top and works down. */</span>
<span class="p_del">-	return CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE * 128 - (8 * i) - 32768;</span>
<span class="p_del">-}</span>
<span class="p_del">-#else</span>
<span class="p_del">-static bool scratchpad_available(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return false;</span>
<span class="p_del">-}</span>
<span class="p_add">+</span>
 static int scratchpad_offset(int i)
 {
<span class="p_add">+	if (IS_ENABLED(CONFIG_CPU_CAVIUM_OCTEON))</span>
<span class="p_add">+		return (CAVIUM_OCTEON_SCRATCH_OFFSET - (8 * i));</span>
<span class="p_add">+</span>
 	BUG();
 	/* Really unreachable, but evidently some GCC want this. */
 	return 0;
 }
<span class="p_del">-#endif</span>
<span class="p_add">+</span>
 /*
  * Found by experiment: At least some revisions of the 4kc throw under
  * some circumstances a machine check exception, triggered by invalid
<span class="p_chunk">@@ -1302,7 +1286,8 @@</span> <span class="p_context"> static void build_r4000_tlb_refill_handler(void)</span>
 	memset(relocs, 0, sizeof(relocs));
 	memset(final_handler, 0, sizeof(final_handler));
 
<span class="p_del">-	if (IS_ENABLED(CONFIG_64BIT) &amp;&amp; (scratch_reg &gt;= 0 || scratchpad_available()) &amp;&amp; use_bbit_insns()) {</span>
<span class="p_add">+	if (IS_ENABLED(CONFIG_64BIT) &amp;&amp; use_bbit_insns() &amp;&amp;</span>
<span class="p_add">+	   (scratch_reg &gt;= 0 || IS_ENABLED(CONFIG_CPU_CAVIUM_OCTEON))) {</span>
 		htlb_info = build_fast_tlb_refill_handler(&amp;p, &amp;l, &amp;r, K0, K1,
 							  scratch_reg);
 		vmalloc_mode = refill_scratch;
<span class="p_header">diff --git a/drivers/staging/octeon/ethernet-defines.h b/drivers/staging/octeon/ethernet-defines.h</span>
<span class="p_header">index 07bd2b87f6a0..e898df25b87f 100644</span>
<span class="p_header">--- a/drivers/staging/octeon/ethernet-defines.h</span>
<span class="p_header">+++ b/drivers/staging/octeon/ethernet-defines.h</span>
<span class="p_chunk">@@ -32,7 +32,7 @@</span> <span class="p_context"></span>
 #define REUSE_SKBUFFS_WITHOUT_FREE  1
 #endif
 
<span class="p_del">-#define USE_ASYNC_IOBDMA            (CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0)</span>
<span class="p_add">+#define USE_ASYNC_IOBDMA	1</span>
 
 /* Maximum number of SKBs to try to free per xmit packet. */
 #define MAX_OUT_QUEUE_DEPTH 1000

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



