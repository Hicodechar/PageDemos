
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/3] MIPS: Add P6600 cases to CPU switch statements - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/3] MIPS: Add P6600 cases to CPU switch statements</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=86321">Paul Burton</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 3, 2016, 3:26 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1454469999-17818-3-git-send-email-paul.burton@imgtec.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8197381/mbox/"
   >mbox</a>
|
   <a href="/patch/8197381/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8197381/">/patch/8197381/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id C315A9F38B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  3 Feb 2016 03:27:51 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 15F9F20251
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  3 Feb 2016 03:27:51 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 4F9FD20253
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  3 Feb 2016 03:27:50 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755637AbcBCD1k (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 2 Feb 2016 22:27:40 -0500
Received: from mailapp01.imgtec.com ([195.59.15.196]:11130 &quot;EHLO
	mailapp01.imgtec.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1755478AbcBCD11 (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 2 Feb 2016 22:27:27 -0500
Received: from hhmail02.hh.imgtec.org (unknown [10.100.10.20])
	by Websense Email Security Gateway with ESMTPS id F0ABC46E167C;
	Wed,  3 Feb 2016 03:27:23 +0000 (GMT)
Received: from LEMAIL01.le.imgtec.org (192.168.152.62) by
	hhmail02.hh.imgtec.org (10.100.10.20) with Microsoft SMTP Server
	(TLS) id 14.3.266.1; Wed, 3 Feb 2016 03:27:25 +0000
Received: from localhost (10.100.200.215) by LEMAIL01.le.imgtec.org
	(192.168.152.62) with Microsoft SMTP Server (TLS) id 14.3.210.2;
	Wed, 3 Feb 2016 03:27:24 +0000
From: Paul Burton &lt;paul.burton@imgtec.com&gt;
To: &lt;linux-mips@linux-mips.org&gt;, Ralf Baechle &lt;ralf@linux-mips.org&gt;
CC: Paul Burton &lt;paul.burton@imgtec.com&gt;,
	&quot;Maciej W. Rozycki&quot; &lt;macro@imgtec.com&gt;,
	Peter Zijlstra &lt;peterz@infradead.org&gt;, Joshua Kinard &lt;kumba@gentoo.org&gt;,
	Andrzej Hajda &lt;a.hajda@samsung.com&gt;,
	Leonid Yegoshin &lt;Leonid.Yegoshin@imgtec.com&gt;,
	Paul Gortmaker &lt;paul.gortmaker@windriver.com&gt;,
	&lt;linux-kernel@vger.kernel.org&gt;, James Hogan &lt;james.hogan@imgtec.com&gt;,
	&quot;Arnaldo Carvalho de Melo&quot; &lt;acme@kernel.org&gt;,
	Ingo Molnar &lt;mingo@redhat.com&gt;,
	&quot;Markos Chandras&quot; &lt;markos.chandras@imgtec.com&gt;,
	Petri Gynther &lt;pgynther@google.com&gt;
Subject: [PATCH 2/3] MIPS: Add P6600 cases to CPU switch statements
Date: Wed, 3 Feb 2016 03:26:38 +0000
Message-ID: &lt;1454469999-17818-3-git-send-email-paul.burton@imgtec.com&gt;
X-Mailer: git-send-email 2.7.0
In-Reply-To: &lt;1454469999-17818-1-git-send-email-paul.burton@imgtec.com&gt;
References: &lt;1454469999-17818-1-git-send-email-paul.burton@imgtec.com&gt;
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [10.100.200.215]
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.3 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=86321">Paul Burton</a> - Feb. 3, 2016, 3:26 a.m.</div>
<pre class="content">
Add cases supporting the P6600 CPU to various switch statements in
core MIPS kernel code that define behaviour dependent upon the CPU.
<span class="signed-off-by">
Signed-off-by: Paul Burton &lt;paul.burton@imgtec.com&gt;</span>
---

 arch/mips/include/asm/cpu-type.h     | 1 +
 arch/mips/kernel/cpu-probe.c         | 1 +
 arch/mips/kernel/perf_event_mipsxx.c | 6 ++++++
 arch/mips/kernel/spram.c             | 1 +
 arch/mips/kernel/traps.c             | 1 +
 arch/mips/mm/c-r4k.c                 | 1 +
 arch/mips/mm/sc-mips.c               | 1 +
 7 files changed, 12 insertions(+)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=145481">Maciej W. Rozycki</a> - Feb. 3, 2016, 7:43 p.m.</div>
<pre class="content">
On Wed, 3 Feb 2016, Paul Burton wrote:
<span class="quote">
&gt; diff --git a/arch/mips/kernel/perf_event_mipsxx.c b/arch/mips/kernel/perf_event_mipsxx.c</span>
<span class="quote">&gt; index d7b8dd4..ae378d9 100644</span>
<span class="quote">&gt; --- a/arch/mips/kernel/perf_event_mipsxx.c</span>
<span class="quote">&gt; +++ b/arch/mips/kernel/perf_event_mipsxx.c</span>
<span class="quote">&gt; @@ -1556,6 +1556,7 @@ static const struct mips_perf_event *mipsxx_pmu_map_raw_event(u64 config)</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt;  		break;</span>
<span class="quote">&gt;  	case CPU_P5600:</span>
<span class="quote">&gt; +	case CPU_P6600:</span>
<span class="quote">&gt;  	case CPU_I6400:</span>
<span class="quote">&gt;  		/* 8-bit event numbers */</span>
<span class="quote">&gt;  		raw_id = config &amp; 0x1ff;</span>
<span class="quote">&gt; @@ -1718,6 +1719,11 @@ init_hw_perf_events(void)</span>
<span class="quote">&gt;  		mipspmu.general_event_map = &amp;mipsxxcore_event_map2;</span>
<span class="quote">&gt;  		mipspmu.cache_event_map = &amp;mipsxxcore_cache_map2;</span>
<span class="quote">&gt;  		break;</span>
<span class="quote">&gt; +	case CPU_P6600:</span>
<span class="quote">&gt; +		mipspmu.name = &quot;mips/P6600&quot;;</span>
<span class="quote">&gt; +		mipspmu.general_event_map = &amp;mipsxxcore_event_map2;</span>
<span class="quote">&gt; +		mipspmu.cache_event_map = &amp;mipsxxcore_cache_map2;</span>
<span class="quote">&gt; +		break;</span>
<span class="quote">&gt;  	case CPU_I6400:</span>
<span class="quote">&gt;  		mipspmu.name = &quot;mips/I6400&quot;;</span>
<span class="quote">&gt;  		mipspmu.general_event_map = &amp;mipsxxcore_event_map2;</span>
<span class="quote">&gt; diff --git a/arch/mips/kernel/spram.c b/arch/mips/kernel/spram.c</span>
<span class="quote">&gt; index 8489c88..d6e6cf7 100644</span>
<span class="quote">&gt; --- a/arch/mips/kernel/spram.c</span>
<span class="quote">&gt; +++ b/arch/mips/kernel/spram.c</span>
<span class="quote">&gt; @@ -210,6 +210,7 @@ void spram_config(void)</span>
<span class="quote">&gt;  	case CPU_P5600:</span>
<span class="quote">&gt;  	case CPU_QEMU_GENERIC:</span>
<span class="quote">&gt;  	case CPU_I6400:</span>
<span class="quote">&gt; +	case CPU_P6600:</span>
<span class="quote">&gt;  		config0 = read_c0_config();</span>
<span class="quote">&gt;  		/* FIXME: addresses are Malta specific */</span>
<span class="quote">&gt;  		if (config0 &amp; (1&lt;&lt;24)) {</span>

 Minor nit: you sometimes place the I6400 before and sometimes after the 
P6600 -- would it make sense to keep the ordering consistent?

  Maciej
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/mips/include/asm/cpu-type.h b/arch/mips/include/asm/cpu-type.h</span>
<span class="p_header">index abee2bf..2cb0979 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/cpu-type.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/cpu-type.h</span>
<span class="p_chunk">@@ -79,6 +79,7 @@</span> <span class="p_context"> static inline int __pure __get_cpu_type(const int cpu_type)</span>
 
 #ifdef CONFIG_SYS_HAS_CPU_MIPS64_R6
 	case CPU_I6400:
<span class="p_add">+	case CPU_P6600:</span>
 #endif
 
 #ifdef CONFIG_SYS_HAS_CPU_R3000
<span class="p_header">diff --git a/arch/mips/kernel/cpu-probe.c b/arch/mips/kernel/cpu-probe.c</span>
<span class="p_header">index b725b71..bc54458 100644</span>
<span class="p_header">--- a/arch/mips/kernel/cpu-probe.c</span>
<span class="p_header">+++ b/arch/mips/kernel/cpu-probe.c</span>
<span class="p_chunk">@@ -539,6 +539,7 @@</span> <span class="p_context"> static int set_ftlb_enable(struct cpuinfo_mips *c, int enable)</span>
 	switch (c-&gt;cputype) {
 	case CPU_PROAPTIV:
 	case CPU_P5600:
<span class="p_add">+	case CPU_P6600:</span>
 		/* proAptiv &amp; related cores use Config6 to enable the FTLB */
 		config = read_c0_config6();
 		/* Clear the old probability value */
<span class="p_header">diff --git a/arch/mips/kernel/perf_event_mipsxx.c b/arch/mips/kernel/perf_event_mipsxx.c</span>
<span class="p_header">index d7b8dd4..ae378d9 100644</span>
<span class="p_header">--- a/arch/mips/kernel/perf_event_mipsxx.c</span>
<span class="p_header">+++ b/arch/mips/kernel/perf_event_mipsxx.c</span>
<span class="p_chunk">@@ -1556,6 +1556,7 @@</span> <span class="p_context"> static const struct mips_perf_event *mipsxx_pmu_map_raw_event(u64 config)</span>
 #endif
 		break;
 	case CPU_P5600:
<span class="p_add">+	case CPU_P6600:</span>
 	case CPU_I6400:
 		/* 8-bit event numbers */
 		raw_id = config &amp; 0x1ff;
<span class="p_chunk">@@ -1718,6 +1719,11 @@</span> <span class="p_context"> init_hw_perf_events(void)</span>
 		mipspmu.general_event_map = &amp;mipsxxcore_event_map2;
 		mipspmu.cache_event_map = &amp;mipsxxcore_cache_map2;
 		break;
<span class="p_add">+	case CPU_P6600:</span>
<span class="p_add">+		mipspmu.name = &quot;mips/P6600&quot;;</span>
<span class="p_add">+		mipspmu.general_event_map = &amp;mipsxxcore_event_map2;</span>
<span class="p_add">+		mipspmu.cache_event_map = &amp;mipsxxcore_cache_map2;</span>
<span class="p_add">+		break;</span>
 	case CPU_I6400:
 		mipspmu.name = &quot;mips/I6400&quot;;
 		mipspmu.general_event_map = &amp;mipsxxcore_event_map2;
<span class="p_header">diff --git a/arch/mips/kernel/spram.c b/arch/mips/kernel/spram.c</span>
<span class="p_header">index 8489c88..d6e6cf7 100644</span>
<span class="p_header">--- a/arch/mips/kernel/spram.c</span>
<span class="p_header">+++ b/arch/mips/kernel/spram.c</span>
<span class="p_chunk">@@ -210,6 +210,7 @@</span> <span class="p_context"> void spram_config(void)</span>
 	case CPU_P5600:
 	case CPU_QEMU_GENERIC:
 	case CPU_I6400:
<span class="p_add">+	case CPU_P6600:</span>
 		config0 = read_c0_config();
 		/* FIXME: addresses are Malta specific */
 		if (config0 &amp; (1&lt;&lt;24)) {
<span class="p_header">diff --git a/arch/mips/kernel/traps.c b/arch/mips/kernel/traps.c</span>
<span class="p_header">index bafcb7a..f7dfe60 100644</span>
<span class="p_header">--- a/arch/mips/kernel/traps.c</span>
<span class="p_header">+++ b/arch/mips/kernel/traps.c</span>
<span class="p_chunk">@@ -1653,6 +1653,7 @@</span> <span class="p_context"> static inline void parity_protection_init(void)</span>
 	case CPU_P5600:
 	case CPU_QEMU_GENERIC:
 	case CPU_I6400:
<span class="p_add">+	case CPU_P6600:</span>
 		{
 #define ERRCTL_PE	0x80000000
 #define ERRCTL_L2P	0x00800000
<span class="p_header">diff --git a/arch/mips/mm/c-r4k.c b/arch/mips/mm/c-r4k.c</span>
<span class="p_header">index caac3d7..2f47999 100644</span>
<span class="p_header">--- a/arch/mips/mm/c-r4k.c</span>
<span class="p_header">+++ b/arch/mips/mm/c-r4k.c</span>
<span class="p_chunk">@@ -1278,6 +1278,7 @@</span> <span class="p_context"> static void probe_pcache(void)</span>
 	case CPU_M5150:
 	case CPU_QEMU_GENERIC:
 	case CPU_I6400:
<span class="p_add">+	case CPU_P6600:</span>
 		if (!(read_c0_config7() &amp; MIPS_CONF7_IAR) &amp;&amp;
 		    (c-&gt;icache.waysize &gt; PAGE_SIZE))
 			c-&gt;icache.flags |= MIPS_CACHE_ALIASES;
<span class="p_header">diff --git a/arch/mips/mm/sc-mips.c b/arch/mips/mm/sc-mips.c</span>
<span class="p_header">index 3bd0597..91006c2 100644</span>
<span class="p_header">--- a/arch/mips/mm/sc-mips.c</span>
<span class="p_header">+++ b/arch/mips/mm/sc-mips.c</span>
<span class="p_chunk">@@ -141,6 +141,7 @@</span> <span class="p_context"> static inline int mips_sc_is_activated(struct cpuinfo_mips *c)</span>
 	case CPU_P5600:
 	case CPU_BMIPS5000:
 	case CPU_QEMU_GENERIC:
<span class="p_add">+	case CPU_P6600:</span>
 		if (config2 &amp; (1 &lt;&lt; 12))
 			return 0;
 	}

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



