
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[10/10] paravirt: merge pv_ops_* structures into one - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [10/10] paravirt: merge pv_ops_* structures into one</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=100191">Juergen Gross</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>May 19, 2017, 3:47 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170519154746.29389-11-jgross@suse.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9737455/mbox/"
   >mbox</a>
|
   <a href="/patch/9737455/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9737455/">/patch/9737455/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	B279D6020B for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 19 May 2017 15:48:16 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B4D4E28814
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 19 May 2017 15:48:16 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A96C6288B5; Fri, 19 May 2017 15:48:16 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1B1A528814
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 19 May 2017 15:48:15 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755828AbdESPsJ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 19 May 2017 11:48:09 -0400
Received: from mx2.suse.de ([195.135.220.15]:33041 &quot;EHLO mx1.suse.de&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1755623AbdESPsB (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 19 May 2017 11:48:01 -0400
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay1.suse.de (charybdis-ext.suse.de [195.135.220.254])
	by mx1.suse.de (Postfix) with ESMTP id BAC63ADA9;
	Fri, 19 May 2017 15:47:59 +0000 (UTC)
From: Juergen Gross &lt;jgross@suse.com&gt;
To: linux-kernel@vger.kernel.org, xen-devel@lists.xenproject.org,
	x86@kernel.org, virtualization@lists.linux-foundation.org
Cc: jeremy@goop.org, chrisw@sous-sol.org, akataria@vmware.com,
	rusty@rustcorp.com.au, boris.ostrovsky@oracle.com, hpa@zytor.com,
	tglx@linutronix.de, mingo@redhat.com, Juergen Gross &lt;jgross@suse.com&gt;
Subject: [PATCH 10/10] paravirt: merge pv_ops_* structures into one
Date: Fri, 19 May 2017 17:47:46 +0200
Message-Id: &lt;20170519154746.29389-11-jgross@suse.com&gt;
X-Mailer: git-send-email 2.12.0
In-Reply-To: &lt;20170519154746.29389-1-jgross@suse.com&gt;
References: &lt;20170519154746.29389-1-jgross@suse.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=100191">Juergen Gross</a> - May 19, 2017, 3:47 p.m.</div>
<pre class="content">
As there are now only very few pvops functions left when
CONFIG_PARAVIRT_FULL isn&#39;t set, merge the related structures into
one named &quot;pv_ops&quot;.
<span class="signed-off-by">
Signed-off-by: Juergen Gross &lt;jgross@suse.com&gt;</span>
---
 arch/x86/include/asm/paravirt.h       | 32 ++++++++++++++++----------------
 arch/x86/include/asm/paravirt_types.h | 27 ++++-----------------------
 arch/x86/kernel/alternative.c         |  4 ++--
 arch/x86/kernel/asm-offsets.c         |  6 +++---
 arch/x86/kernel/cpu/vmware.c          |  6 +++---
 arch/x86/kernel/kvm.c                 |  6 +++---
 arch/x86/kernel/kvmclock.c            |  6 +++---
 arch/x86/kernel/paravirt.c            | 33 +++++----------------------------
 arch/x86/kernel/paravirt_patch_32.c   | 16 ++++++++--------
 arch/x86/kernel/paravirt_patch_64.c   | 16 ++++++++--------
 arch/x86/kernel/tsc.c                 |  2 +-
 arch/x86/kernel/vsmp_64.c             | 18 +++++++++---------
 arch/x86/lguest/boot.c                | 20 ++++++++++----------
 arch/x86/xen/enlighten_hvm.c          |  4 ++--
 arch/x86/xen/enlighten_pv.c           | 28 ++++++++++++----------------
 arch/x86/xen/irq.c                    | 12 ++++--------
 arch/x86/xen/mmu_hvm.c                |  2 +-
 arch/x86/xen/mmu_pv.c                 |  4 ++--
 arch/x86/xen/time.c                   | 11 ++++-------
 drivers/xen/time.c                    |  2 +-
 20 files changed, 101 insertions(+), 154 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/paravirt.h b/arch/x86/include/asm/paravirt.h</span>
<span class="p_header">index 55e0c1807df2..0f8194ec64c9 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/paravirt.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/paravirt.h</span>
<span class="p_chunk">@@ -28,7 +28,7 @@</span> <span class="p_context"> static inline enum paravirt_lazy_mode paravirt_get_lazy_mode(void)</span>
 
 static inline unsigned long long paravirt_sched_clock(void)
 {
<span class="p_del">-	return PVOP_CALL0(unsigned long long, pv_time_ops.sched_clock);</span>
<span class="p_add">+	return PVOP_CALL0(unsigned long long, pv_ops.sched_clock);</span>
 }
 
 struct static_key;
<span class="p_chunk">@@ -37,23 +37,23 @@</span> <span class="p_context"> extern struct static_key paravirt_steal_rq_enabled;</span>
 
 static inline u64 paravirt_steal_clock(int cpu)
 {
<span class="p_del">-	return PVOP_CALL1(u64, pv_time_ops.steal_clock, cpu);</span>
<span class="p_add">+	return PVOP_CALL1(u64, pv_ops.steal_clock, cpu);</span>
 }
 
 /* The paravirtualized I/O functions */
 static inline void slow_down_io(void)
 {
<span class="p_del">-	pv_cpu_ops.io_delay();</span>
<span class="p_add">+	pv_ops.io_delay();</span>
 #ifdef REALLY_SLOW_IO
<span class="p_del">-	pv_cpu_ops.io_delay();</span>
<span class="p_del">-	pv_cpu_ops.io_delay();</span>
<span class="p_del">-	pv_cpu_ops.io_delay();</span>
<span class="p_add">+	pv_ops.io_delay();</span>
<span class="p_add">+	pv_ops.io_delay();</span>
<span class="p_add">+	pv_ops.io_delay();</span>
 #endif
 }
 
 static inline void paravirt_arch_exit_mmap(struct mm_struct *mm)
 {
<span class="p_del">-	PVOP_VCALL1(pv_mmu_ops.exit_mmap, mm);</span>
<span class="p_add">+	PVOP_VCALL1(pv_ops.exit_mmap, mm);</span>
 }
 
 static inline void flush_tlb_others(const struct cpumask *cpumask,
<span class="p_chunk">@@ -61,7 +61,7 @@</span> <span class="p_context"> static inline void flush_tlb_others(const struct cpumask *cpumask,</span>
 				    unsigned long start,
 				    unsigned long end)
 {
<span class="p_del">-	PVOP_VCALL4(pv_mmu_ops.flush_tlb_others, cpumask, mm, start, end);</span>
<span class="p_add">+	PVOP_VCALL4(pv_ops.flush_tlb_others, cpumask, mm, start, end);</span>
 }
 
 #if defined(CONFIG_SMP) &amp;&amp; defined(CONFIG_PARAVIRT_SPINLOCKS)
<span class="p_chunk">@@ -173,22 +173,22 @@</span> <span class="p_context"> static __always_inline bool pv_vcpu_is_preempted(long cpu)</span>
 
 static inline notrace unsigned long arch_local_save_flags(void)
 {
<span class="p_del">-	return PVOP_CALLEE0(unsigned long, pv_irq_ops.save_fl);</span>
<span class="p_add">+	return PVOP_CALLEE0(unsigned long, pv_ops.save_fl);</span>
 }
 
 static inline notrace void arch_local_irq_restore(unsigned long f)
 {
<span class="p_del">-	PVOP_VCALLEE1(pv_irq_ops.restore_fl, f);</span>
<span class="p_add">+	PVOP_VCALLEE1(pv_ops.restore_fl, f);</span>
 }
 
 static inline notrace void arch_local_irq_disable(void)
 {
<span class="p_del">-	PVOP_VCALLEE0(pv_irq_ops.irq_disable);</span>
<span class="p_add">+	PVOP_VCALLEE0(pv_ops.irq_disable);</span>
 }
 
 static inline notrace void arch_local_irq_enable(void)
 {
<span class="p_del">-	PVOP_VCALLEE0(pv_irq_ops.irq_enable);</span>
<span class="p_add">+	PVOP_VCALLEE0(pv_ops.irq_enable);</span>
 }
 
 static inline notrace unsigned long arch_local_irq_save(void)
<span class="p_chunk">@@ -286,15 +286,15 @@</span> <span class="p_context"> extern void default_banner(void);</span>
 #endif
 
 #define DISABLE_INTERRUPTS(clobbers)					\
<span class="p_del">-	PARA_SITE(PARA_PATCH(pv_irq_ops, PV_IRQ_irq_disable), clobbers, \</span>
<span class="p_add">+	PARA_SITE(PARA_PATCH(pv_ops, PV_IRQ_irq_disable), clobbers,	\</span>
 		  PV_SAVE_REGS(clobbers | CLBR_CALLEE_SAVE);		\
<span class="p_del">-		  call PARA_INDIRECT(pv_irq_ops+PV_IRQ_irq_disable);	\</span>
<span class="p_add">+		  call PARA_INDIRECT(pv_ops+PV_IRQ_irq_disable);	\</span>
 		  PV_RESTORE_REGS(clobbers | CLBR_CALLEE_SAVE);)
 
 #define ENABLE_INTERRUPTS(clobbers)					\
<span class="p_del">-	PARA_SITE(PARA_PATCH(pv_irq_ops, PV_IRQ_irq_enable), clobbers,	\</span>
<span class="p_add">+	PARA_SITE(PARA_PATCH(pv_ops, PV_IRQ_irq_enable), clobbers,	\</span>
 		  PV_SAVE_REGS(clobbers | CLBR_CALLEE_SAVE);		\
<span class="p_del">-		  call PARA_INDIRECT(pv_irq_ops+PV_IRQ_irq_enable);	\</span>
<span class="p_add">+		  call PARA_INDIRECT(pv_ops+PV_IRQ_irq_enable);		\</span>
 		  PV_RESTORE_REGS(clobbers | CLBR_CALLEE_SAVE);)
 
 #endif /* __ASSEMBLY__ */
<span class="p_header">diff --git a/arch/x86/include/asm/paravirt_types.h b/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_header">index 34753d10ebbc..833529661acb 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/paravirt_types.h</span>
<span class="p_chunk">@@ -65,11 +65,9 @@</span> <span class="p_context"> struct paravirt_callee_save {</span>
 #endif
 
 /* general info */
<span class="p_del">-struct pv_info {</span>
<span class="p_add">+struct pv_ops {</span>
 	const char *name;
<span class="p_del">-};</span>
 
<span class="p_del">-struct pv_init_ops {</span>
 	/*
 	 * Patch may replace one of the defined code sequences with
 	 * arbitrary code, subject to the same register constraints.
<span class="p_chunk">@@ -80,18 +78,12 @@</span> <span class="p_context"> struct pv_init_ops {</span>
 	 */
 	unsigned (*patch)(u8 type, u16 clobber, void *insnbuf,
 			  unsigned long addr, unsigned len);
<span class="p_del">-};</span>
 
<span class="p_del">-struct pv_time_ops {</span>
 	unsigned long long (*sched_clock)(void);
 	unsigned long long (*steal_clock)(int cpu);
<span class="p_del">-};</span>
 
<span class="p_del">-struct pv_cpu_ops {</span>
 	void (*io_delay)(void);
<span class="p_del">-};</span>
 
<span class="p_del">-struct pv_irq_ops {</span>
 	/*
 	 * Get/set interrupt state.  save_fl and restore_fl are only
 	 * expected to use X86_EFLAGS_IF; all other bits
<span class="p_chunk">@@ -105,9 +97,7 @@</span> <span class="p_context"> struct pv_irq_ops {</span>
 	struct paravirt_callee_save restore_fl;
 	struct paravirt_callee_save irq_disable;
 	struct paravirt_callee_save irq_enable;
<span class="p_del">-};</span>
 
<span class="p_del">-struct pv_mmu_ops {</span>
 	void (*exit_mmap)(struct mm_struct *mm);
 	void (*flush_tlb_others)(const struct cpumask *cpus,
 				 struct mm_struct *mm,
<span class="p_chunk">@@ -136,11 +126,7 @@</span> <span class="p_context"> struct pv_lock_ops {</span>
  * number for each function using the offset which we use to indicate
  * what to patch. */
 struct paravirt_patch_template {
<span class="p_del">-	struct pv_init_ops pv_init_ops;</span>
<span class="p_del">-	struct pv_time_ops pv_time_ops;</span>
<span class="p_del">-	struct pv_cpu_ops pv_cpu_ops;</span>
<span class="p_del">-	struct pv_irq_ops pv_irq_ops;</span>
<span class="p_del">-	struct pv_mmu_ops pv_mmu_ops;</span>
<span class="p_add">+	struct pv_ops pv_ops;</span>
 	struct pv_lock_ops pv_lock_ops;
 #ifdef CONFIG_PARAVIRT_FULL
 	struct pvfull_cpu_ops pvfull_cpu_ops;
<span class="p_chunk">@@ -149,12 +135,7 @@</span> <span class="p_context"> struct paravirt_patch_template {</span>
 #endif
 };
 
<span class="p_del">-extern struct pv_info pv_info;</span>
<span class="p_del">-extern struct pv_init_ops pv_init_ops;</span>
<span class="p_del">-extern struct pv_time_ops pv_time_ops;</span>
<span class="p_del">-extern struct pv_cpu_ops pv_cpu_ops;</span>
<span class="p_del">-extern struct pv_irq_ops pv_irq_ops;</span>
<span class="p_del">-extern struct pv_mmu_ops pv_mmu_ops;</span>
<span class="p_add">+extern struct pv_ops pv_ops;</span>
 extern struct pv_lock_ops pv_lock_ops;
 
 #define PARAVIRT_PATCH(x)					\
<span class="p_chunk">@@ -247,7 +228,7 @@</span> <span class="p_context"> unsigned native_patch(u8 type, u16 clobbers, void *ibuf,</span>
  * The call instruction itself is marked by placing its start address
  * and size into the .parainstructions section, so that
  * apply_paravirt() in arch/i386/kernel/alternative.c can do the
<span class="p_del">- * appropriate patching under the control of the backend pv_init_ops</span>
<span class="p_add">+ * appropriate patching under the control of the backend pv_ops</span>
  * implementation.
  *
  * Unfortunately there&#39;s no way to get gcc to generate the args setup
<span class="p_header">diff --git a/arch/x86/kernel/alternative.c b/arch/x86/kernel/alternative.c</span>
<span class="p_header">index c5b8f760473c..ac1a9356616b 100644</span>
<span class="p_header">--- a/arch/x86/kernel/alternative.c</span>
<span class="p_header">+++ b/arch/x86/kernel/alternative.c</span>
<span class="p_chunk">@@ -600,8 +600,8 @@</span> <span class="p_context"> void __init_or_module apply_paravirt(struct paravirt_patch_site *start,</span>
 		BUG_ON(p-&gt;len &gt; MAX_PATCH_LEN);
 		/* prep the buffer with the original instructions */
 		memcpy(insnbuf, p-&gt;instr, p-&gt;len);
<span class="p_del">-		used = pv_init_ops.patch(p-&gt;instrtype, p-&gt;clobbers, insnbuf,</span>
<span class="p_del">-					 (unsigned long)p-&gt;instr, p-&gt;len);</span>
<span class="p_add">+		used = pv_ops.patch(p-&gt;instrtype, p-&gt;clobbers, insnbuf,</span>
<span class="p_add">+				    (unsigned long)p-&gt;instr, p-&gt;len);</span>
 
 		BUG_ON(used &gt; p-&gt;len);
 
<span class="p_header">diff --git a/arch/x86/kernel/asm-offsets.c b/arch/x86/kernel/asm-offsets.c</span>
<span class="p_header">index 18a5c06c007a..6a225a90bc31 100644</span>
<span class="p_header">--- a/arch/x86/kernel/asm-offsets.c</span>
<span class="p_header">+++ b/arch/x86/kernel/asm-offsets.c</span>
<span class="p_chunk">@@ -64,9 +64,9 @@</span> <span class="p_context"> void common(void) {</span>
 
 #ifdef CONFIG_PARAVIRT
 	BLANK();
<span class="p_del">-	OFFSET(PARAVIRT_PATCH_pv_irq_ops, paravirt_patch_template, pv_irq_ops);</span>
<span class="p_del">-	OFFSET(PV_IRQ_irq_disable, pv_irq_ops, irq_disable);</span>
<span class="p_del">-	OFFSET(PV_IRQ_irq_enable, pv_irq_ops, irq_enable);</span>
<span class="p_add">+	OFFSET(PARAVIRT_PATCH_pv_ops, paravirt_patch_template, pv_ops);</span>
<span class="p_add">+	OFFSET(PV_IRQ_irq_disable, pv_ops, irq_disable);</span>
<span class="p_add">+	OFFSET(PV_IRQ_irq_enable, pv_ops, irq_enable);</span>
 #endif
 #ifdef CONFIG_PARAVIRT_FULL
 	OFFSET(PARAVIRT_PATCH_pvfull_cpu_ops, paravirt_patch_template,
<span class="p_header">diff --git a/arch/x86/kernel/cpu/vmware.c b/arch/x86/kernel/cpu/vmware.c</span>
<span class="p_header">index 40ed26852ebd..6be8af37e227 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/vmware.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/vmware.c</span>
<span class="p_chunk">@@ -97,14 +97,14 @@</span> <span class="p_context"> static void __init vmware_sched_clock_setup(void)</span>
 	d-&gt;cyc2ns_offset = mul_u64_u32_shr(tsc_now, d-&gt;cyc2ns_mul,
 					   d-&gt;cyc2ns_shift);
 
<span class="p_del">-	pv_time_ops.sched_clock = vmware_sched_clock;</span>
<span class="p_add">+	pv_ops.sched_clock = vmware_sched_clock;</span>
 	pr_info(&quot;using sched offset of %llu ns\n&quot;, d-&gt;cyc2ns_offset);
 }
 
 static void __init vmware_paravirt_ops_setup(void)
 {
<span class="p_del">-	pv_info.name = &quot;VMware hypervisor&quot;;</span>
<span class="p_del">-	pv_cpu_ops.io_delay = paravirt_nop;</span>
<span class="p_add">+	pv_ops.name = &quot;VMware hypervisor&quot;;</span>
<span class="p_add">+	pv_ops.io_delay = paravirt_nop;</span>
 
 	if (vmware_tsc_khz &amp;&amp; vmw_sched_clock)
 		vmware_sched_clock_setup();
<span class="p_header">diff --git a/arch/x86/kernel/kvm.c b/arch/x86/kernel/kvm.c</span>
<span class="p_header">index da5c09789984..2aefbcea9ae4 100644</span>
<span class="p_header">--- a/arch/x86/kernel/kvm.c</span>
<span class="p_header">+++ b/arch/x86/kernel/kvm.c</span>
<span class="p_chunk">@@ -280,10 +280,10 @@</span> <span class="p_context"> NOKPROBE_SYMBOL(do_async_page_fault);</span>
 
 static void __init paravirt_ops_setup(void)
 {
<span class="p_del">-	pv_info.name = &quot;KVM&quot;;</span>
<span class="p_add">+	pv_ops.name = &quot;KVM&quot;;</span>
 
 	if (kvm_para_has_feature(KVM_FEATURE_NOP_IO_DELAY))
<span class="p_del">-		pv_cpu_ops.io_delay = kvm_io_delay;</span>
<span class="p_add">+		pv_ops.io_delay = kvm_io_delay;</span>
 
 #ifdef CONFIG_X86_IO_APIC
 	no_timer_check = 1;
<span class="p_chunk">@@ -467,7 +467,7 @@</span> <span class="p_context"> void __init kvm_guest_init(void)</span>
 
 	if (kvm_para_has_feature(KVM_FEATURE_STEAL_TIME)) {
 		has_steal_clock = 1;
<span class="p_del">-		pv_time_ops.steal_clock = kvm_steal_clock;</span>
<span class="p_add">+		pv_ops.steal_clock = kvm_steal_clock;</span>
 	}
 
 	if (kvm_para_has_feature(KVM_FEATURE_PV_EOI))
<span class="p_header">diff --git a/arch/x86/kernel/kvmclock.c b/arch/x86/kernel/kvmclock.c</span>
<span class="p_header">index d88967659098..d3c92f7ce79b 100644</span>
<span class="p_header">--- a/arch/x86/kernel/kvmclock.c</span>
<span class="p_header">+++ b/arch/x86/kernel/kvmclock.c</span>
<span class="p_chunk">@@ -109,13 +109,13 @@</span> <span class="p_context"> static u64 kvm_sched_clock_read(void)</span>
 static inline void kvm_sched_clock_init(bool stable)
 {
 	if (!stable) {
<span class="p_del">-		pv_time_ops.sched_clock = kvm_clock_read;</span>
<span class="p_add">+		pv_ops.sched_clock = kvm_clock_read;</span>
 		clear_sched_clock_stable();
 		return;
 	}
 
 	kvm_sched_clock_offset = kvm_clock_read();
<span class="p_del">-	pv_time_ops.sched_clock = kvm_sched_clock_read;</span>
<span class="p_add">+	pv_ops.sched_clock = kvm_sched_clock_read;</span>
 
 	printk(KERN_INFO &quot;kvm-clock: using sched offset of %llu cycles\n&quot;,
 			kvm_sched_clock_offset);
<span class="p_chunk">@@ -308,7 +308,7 @@</span> <span class="p_context"> void __init kvmclock_init(void)</span>
 #endif
 	kvm_get_preset_lpj();
 	clocksource_register_hz(&amp;kvm_clock, NSEC_PER_SEC);
<span class="p_del">-	pv_info.name = &quot;KVM&quot;;</span>
<span class="p_add">+	pv_ops.name = &quot;KVM&quot;;</span>
 }
 
 int __init kvm_setup_vsyscall_timeinfo(void)
<span class="p_header">diff --git a/arch/x86/kernel/paravirt.c b/arch/x86/kernel/paravirt.c</span>
<span class="p_header">index 42da2fde1fef..cde433e495f6 100644</span>
<span class="p_header">--- a/arch/x86/kernel/paravirt.c</span>
<span class="p_header">+++ b/arch/x86/kernel/paravirt.c</span>
<span class="p_chunk">@@ -63,7 +63,7 @@</span> <span class="p_context"> u64 notrace _paravirt_ident_64(u64 x)</span>
 void __init default_banner(void)
 {
 	printk(KERN_INFO &quot;Booting paravirtualized kernel on %s\n&quot;,
<span class="p_del">-	       pv_info.name);</span>
<span class="p_add">+	       pv_ops.name);</span>
 }
 
 /* Undefined instruction for dealing with missing ops pointers. */
<span class="p_chunk">@@ -114,11 +114,7 @@</span> <span class="p_context"> unsigned paravirt_patch_jmp(void *insnbuf, const void *target,</span>
 static void *get_call_destination(u8 type)
 {
 	struct paravirt_patch_template tmpl = {
<span class="p_del">-		.pv_init_ops = pv_init_ops,</span>
<span class="p_del">-		.pv_time_ops = pv_time_ops,</span>
<span class="p_del">-		.pv_cpu_ops = pv_cpu_ops,</span>
<span class="p_del">-		.pv_irq_ops = pv_irq_ops,</span>
<span class="p_del">-		.pv_mmu_ops = pv_mmu_ops,</span>
<span class="p_add">+		.pv_ops = pv_ops,</span>
 #ifdef CONFIG_PARAVIRT_SPINLOCKS
 		.pv_lock_ops = pv_lock_ops,
 #endif
<span class="p_chunk">@@ -185,37 +181,18 @@</span> <span class="p_context"> static u64 native_steal_clock(int cpu)</span>
 	return 0;
 }
 
<span class="p_del">-struct pv_info pv_info = {</span>
<span class="p_add">+__visible struct pv_ops pv_ops = {</span>
 	.name = &quot;bare hardware&quot;,
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-struct pv_init_ops pv_init_ops = {</span>
 	.patch = native_patch,
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-struct pv_time_ops pv_time_ops = {</span>
 	.sched_clock = native_sched_clock,
 	.steal_clock = native_steal_clock,
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-__visible struct pv_irq_ops pv_irq_ops = {</span>
<span class="p_add">+	.io_delay = native_io_delay,</span>
 	.save_fl = __PV_IS_CALLEE_SAVE(native_save_fl),
 	.restore_fl = __PV_IS_CALLEE_SAVE(native_restore_fl),
 	.irq_disable = __PV_IS_CALLEE_SAVE(native_irq_disable),
 	.irq_enable = __PV_IS_CALLEE_SAVE(native_irq_enable),
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-__visible struct pv_cpu_ops pv_cpu_ops = {</span>
<span class="p_del">-	.io_delay = native_io_delay,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-struct pv_mmu_ops pv_mmu_ops __ro_after_init = {</span>
 	.flush_tlb_others = native_flush_tlb_others,
 	.exit_mmap = paravirt_nop,
 };
 
<span class="p_del">-EXPORT_SYMBOL_GPL(pv_time_ops);</span>
<span class="p_del">-EXPORT_SYMBOL    (pv_cpu_ops);</span>
<span class="p_del">-EXPORT_SYMBOL    (pv_mmu_ops);</span>
<span class="p_del">-EXPORT_SYMBOL    (pv_info);</span>
<span class="p_del">-EXPORT_SYMBOL    (pv_irq_ops);</span>
<span class="p_add">+EXPORT_SYMBOL(pv_ops);</span>
<span class="p_header">diff --git a/arch/x86/kernel/paravirt_patch_32.c b/arch/x86/kernel/paravirt_patch_32.c</span>
<span class="p_header">index b5f93cb0d05f..48e44290cff0 100644</span>
<span class="p_header">--- a/arch/x86/kernel/paravirt_patch_32.c</span>
<span class="p_header">+++ b/arch/x86/kernel/paravirt_patch_32.c</span>
<span class="p_chunk">@@ -1,9 +1,9 @@</span> <span class="p_context"></span>
 #include &lt;asm/paravirt.h&gt;
 
<span class="p_del">-DEF_NATIVE(pv_irq_ops, irq_disable, &quot;cli&quot;);</span>
<span class="p_del">-DEF_NATIVE(pv_irq_ops, irq_enable, &quot;sti&quot;);</span>
<span class="p_del">-DEF_NATIVE(pv_irq_ops, restore_fl, &quot;push %eax; popf&quot;);</span>
<span class="p_del">-DEF_NATIVE(pv_irq_ops, save_fl, &quot;pushf; pop %eax&quot;);</span>
<span class="p_add">+DEF_NATIVE(pv_ops, irq_disable, &quot;cli&quot;);</span>
<span class="p_add">+DEF_NATIVE(pv_ops, irq_enable, &quot;sti&quot;);</span>
<span class="p_add">+DEF_NATIVE(pv_ops, restore_fl, &quot;push %eax; popf&quot;);</span>
<span class="p_add">+DEF_NATIVE(pv_ops, save_fl, &quot;pushf; pop %eax&quot;);</span>
 #ifdef CONFIG_PARAVIRT_FULL
 DEF_NATIVE(pvfull_mmu_ops, read_cr2, &quot;mov %cr2, %eax&quot;);
 DEF_NATIVE(pvfull_mmu_ops, write_cr3, &quot;mov %eax, %cr3&quot;);
<span class="p_chunk">@@ -43,10 +43,10 @@</span> <span class="p_context"> unsigned native_patch(u8 type, u16 clobbers, void *ibuf,</span>
 			end = end_##ops##_##x;			\
 			goto patch_site
 	switch (type) {
<span class="p_del">-		PATCH_SITE(pv_irq_ops, irq_disable);</span>
<span class="p_del">-		PATCH_SITE(pv_irq_ops, irq_enable);</span>
<span class="p_del">-		PATCH_SITE(pv_irq_ops, restore_fl);</span>
<span class="p_del">-		PATCH_SITE(pv_irq_ops, save_fl);</span>
<span class="p_add">+		PATCH_SITE(pv_ops, irq_disable);</span>
<span class="p_add">+		PATCH_SITE(pv_ops, irq_enable);</span>
<span class="p_add">+		PATCH_SITE(pv_ops, restore_fl);</span>
<span class="p_add">+		PATCH_SITE(pv_ops, save_fl);</span>
 #ifdef CONFIG_PARAVIRT_FULL
 		PATCH_SITE(pvfull_mmu_ops, read_cr2);
 		PATCH_SITE(pvfull_mmu_ops, read_cr3);
<span class="p_header">diff --git a/arch/x86/kernel/paravirt_patch_64.c b/arch/x86/kernel/paravirt_patch_64.c</span>
<span class="p_header">index 473688054f0b..158943a18ca2 100644</span>
<span class="p_header">--- a/arch/x86/kernel/paravirt_patch_64.c</span>
<span class="p_header">+++ b/arch/x86/kernel/paravirt_patch_64.c</span>
<span class="p_chunk">@@ -2,10 +2,10 @@</span> <span class="p_context"></span>
 #include &lt;asm/asm-offsets.h&gt;
 #include &lt;linux/stringify.h&gt;
 
<span class="p_del">-DEF_NATIVE(pv_irq_ops, irq_disable, &quot;cli&quot;);</span>
<span class="p_del">-DEF_NATIVE(pv_irq_ops, irq_enable, &quot;sti&quot;);</span>
<span class="p_del">-DEF_NATIVE(pv_irq_ops, restore_fl, &quot;pushq %rdi; popfq&quot;);</span>
<span class="p_del">-DEF_NATIVE(pv_irq_ops, save_fl, &quot;pushfq; popq %rax&quot;);</span>
<span class="p_add">+DEF_NATIVE(pv_ops, irq_disable, &quot;cli&quot;);</span>
<span class="p_add">+DEF_NATIVE(pv_ops, irq_enable, &quot;sti&quot;);</span>
<span class="p_add">+DEF_NATIVE(pv_ops, restore_fl, &quot;pushq %rdi; popfq&quot;);</span>
<span class="p_add">+DEF_NATIVE(pv_ops, save_fl, &quot;pushfq; popq %rax&quot;);</span>
 
 DEF_NATIVE(, mov32, &quot;mov %edi, %eax&quot;);
 DEF_NATIVE(, mov64, &quot;mov %rdi, %rax&quot;);
<span class="p_chunk">@@ -52,10 +52,10 @@</span> <span class="p_context"> unsigned native_patch(u8 type, u16 clobbers, void *ibuf,</span>
 			end = end_##ops##_##x;			\
 			goto patch_site
 	switch(type) {
<span class="p_del">-		PATCH_SITE(pv_irq_ops, restore_fl);</span>
<span class="p_del">-		PATCH_SITE(pv_irq_ops, save_fl);</span>
<span class="p_del">-		PATCH_SITE(pv_irq_ops, irq_enable);</span>
<span class="p_del">-		PATCH_SITE(pv_irq_ops, irq_disable);</span>
<span class="p_add">+		PATCH_SITE(pv_ops, restore_fl);</span>
<span class="p_add">+		PATCH_SITE(pv_ops, save_fl);</span>
<span class="p_add">+		PATCH_SITE(pv_ops, irq_enable);</span>
<span class="p_add">+		PATCH_SITE(pv_ops, irq_disable);</span>
 #ifdef CONFIG_PARAVIRT_FULL
 		PATCH_SITE(pvfull_mmu_ops, read_cr2);
 		PATCH_SITE(pvfull_mmu_ops, read_cr3);
<span class="p_header">diff --git a/arch/x86/kernel/tsc.c b/arch/x86/kernel/tsc.c</span>
<span class="p_header">index 714dfba6a1e7..678fc8923cb8 100644</span>
<span class="p_header">--- a/arch/x86/kernel/tsc.c</span>
<span class="p_header">+++ b/arch/x86/kernel/tsc.c</span>
<span class="p_chunk">@@ -330,7 +330,7 @@</span> <span class="p_context"> unsigned long long sched_clock(void)</span>
 
 bool using_native_sched_clock(void)
 {
<span class="p_del">-	return pv_time_ops.sched_clock == native_sched_clock;</span>
<span class="p_add">+	return pv_ops.sched_clock == native_sched_clock;</span>
 }
 #else
 unsigned long long
<span class="p_header">diff --git a/arch/x86/kernel/vsmp_64.c b/arch/x86/kernel/vsmp_64.c</span>
<span class="p_header">index b034b1b14b9c..8e003dac79fb 100644</span>
<span class="p_header">--- a/arch/x86/kernel/vsmp_64.c</span>
<span class="p_header">+++ b/arch/x86/kernel/vsmp_64.c</span>
<span class="p_chunk">@@ -76,10 +76,10 @@</span> <span class="p_context"> static unsigned __init vsmp_patch(u8 type, u16 clobbers, void *ibuf,</span>
 				  unsigned long addr, unsigned len)
 {
 	switch (type) {
<span class="p_del">-	case PARAVIRT_PATCH(pv_irq_ops.irq_enable):</span>
<span class="p_del">-	case PARAVIRT_PATCH(pv_irq_ops.irq_disable):</span>
<span class="p_del">-	case PARAVIRT_PATCH(pv_irq_ops.save_fl):</span>
<span class="p_del">-	case PARAVIRT_PATCH(pv_irq_ops.restore_fl):</span>
<span class="p_add">+	case PARAVIRT_PATCH(pv_ops.irq_enable):</span>
<span class="p_add">+	case PARAVIRT_PATCH(pv_ops.irq_disable):</span>
<span class="p_add">+	case PARAVIRT_PATCH(pv_ops.save_fl):</span>
<span class="p_add">+	case PARAVIRT_PATCH(pv_ops.restore_fl):</span>
 		return paravirt_patch_default(type, clobbers, ibuf, addr, len);
 	default:
 		return native_patch(type, clobbers, ibuf, addr, len);
<span class="p_chunk">@@ -117,11 +117,11 @@</span> <span class="p_context"> static void __init set_vsmp_pv_ops(void)</span>
 
 	if (cap &amp; ctl &amp; (1 &lt;&lt; 4)) {
 		/* Setup irq ops and turn on vSMP  IRQ fastpath handling */
<span class="p_del">-		pv_irq_ops.irq_disable = PV_CALLEE_SAVE(vsmp_irq_disable);</span>
<span class="p_del">-		pv_irq_ops.irq_enable  = PV_CALLEE_SAVE(vsmp_irq_enable);</span>
<span class="p_del">-		pv_irq_ops.save_fl  = PV_CALLEE_SAVE(vsmp_save_fl);</span>
<span class="p_del">-		pv_irq_ops.restore_fl  = PV_CALLEE_SAVE(vsmp_restore_fl);</span>
<span class="p_del">-		pv_init_ops.patch = vsmp_patch;</span>
<span class="p_add">+		pv_ops.irq_disable = PV_CALLEE_SAVE(vsmp_irq_disable);</span>
<span class="p_add">+		pv_ops.irq_enable  = PV_CALLEE_SAVE(vsmp_irq_enable);</span>
<span class="p_add">+		pv_ops.save_fl  = PV_CALLEE_SAVE(vsmp_save_fl);</span>
<span class="p_add">+		pv_ops.restore_fl  = PV_CALLEE_SAVE(vsmp_restore_fl);</span>
<span class="p_add">+		pv_ops.patch = vsmp_patch;</span>
 		ctl &amp;= ~(1 &lt;&lt; 4);
 	}
 	writel(ctl, address + 4);
<span class="p_header">diff --git a/arch/x86/lguest/boot.c b/arch/x86/lguest/boot.c</span>
<span class="p_header">index 86b8b1a0c99e..ccb6647a5167 100644</span>
<span class="p_header">--- a/arch/x86/lguest/boot.c</span>
<span class="p_header">+++ b/arch/x86/lguest/boot.c</span>
<span class="p_chunk">@@ -1351,8 +1351,8 @@</span> <span class="p_context"> static const struct lguest_insns</span>
 {
 	const char *start, *end;
 } lguest_insns[] = {
<span class="p_del">-	[PARAVIRT_PATCH(pv_irq_ops.irq_disable)] = { lgstart_cli, lgend_cli },</span>
<span class="p_del">-	[PARAVIRT_PATCH(pv_irq_ops.save_fl)] = { lgstart_pushf, lgend_pushf },</span>
<span class="p_add">+	[PARAVIRT_PATCH(pv_ops.irq_disable)] = { lgstart_cli, lgend_cli },</span>
<span class="p_add">+	[PARAVIRT_PATCH(pv_ops.save_fl)] = { lgstart_pushf, lgend_pushf },</span>
 };
 
 /*
<span class="p_chunk">@@ -1388,7 +1388,10 @@</span> <span class="p_context"> static unsigned lguest_patch(u8 type, u16 clobber, void *ibuf,</span>
 __init void lguest_init(void)
 {
 	/* We&#39;re under lguest. */
<span class="p_del">-	pv_info.name = &quot;lguest&quot;;</span>
<span class="p_add">+	pv_ops.name = &quot;lguest&quot;;</span>
<span class="p_add">+	/* Setup operations */</span>
<span class="p_add">+	pv_ops.patch = lguest_patch;</span>
<span class="p_add">+</span>
 	/* We&#39;re running at privilege level 1, not 0 as normal. */
 	pvfull_info.kernel_rpl = 1;
 	/* Everyone except Xen runs with this set. */
<span class="p_chunk">@@ -1400,15 +1403,12 @@</span> <span class="p_context"> __init void lguest_init(void)</span>
 	 */
 
 	/* Interrupt-related operations */
<span class="p_del">-	pv_irq_ops.save_fl = PV_CALLEE_SAVE(lguest_save_fl);</span>
<span class="p_del">-	pv_irq_ops.restore_fl = __PV_IS_CALLEE_SAVE(lg_restore_fl);</span>
<span class="p_del">-	pv_irq_ops.irq_disable = PV_CALLEE_SAVE(lguest_irq_disable);</span>
<span class="p_del">-	pv_irq_ops.irq_enable = __PV_IS_CALLEE_SAVE(lg_irq_enable);</span>
<span class="p_add">+	pv_ops.save_fl = PV_CALLEE_SAVE(lguest_save_fl);</span>
<span class="p_add">+	pv_ops.restore_fl = __PV_IS_CALLEE_SAVE(lg_restore_fl);</span>
<span class="p_add">+	pv_ops.irq_disable = PV_CALLEE_SAVE(lguest_irq_disable);</span>
<span class="p_add">+	pv_ops.irq_enable = __PV_IS_CALLEE_SAVE(lg_irq_enable);</span>
 	pvfull_irq_ops.safe_halt = lguest_safe_halt;
 
<span class="p_del">-	/* Setup operations */</span>
<span class="p_del">-	pv_init_ops.patch = lguest_patch;</span>
<span class="p_del">-</span>
 	/* Intercepts of various CPU instructions */
 	pvfull_cpu_ops.load_gdt = lguest_load_gdt;
 	pvfull_cpu_ops.cpuid = lguest_cpuid;
<span class="p_header">diff --git a/arch/x86/xen/enlighten_hvm.c b/arch/x86/xen/enlighten_hvm.c</span>
<span class="p_header">index a6d014f47e52..03165e3101f2 100644</span>
<span class="p_header">--- a/arch/x86/xen/enlighten_hvm.c</span>
<span class="p_header">+++ b/arch/x86/xen/enlighten_hvm.c</span>
<span class="p_chunk">@@ -69,12 +69,12 @@</span> <span class="p_context"> static void __init init_hvm_pv_info(void)</span>
 
 	/* PVH set up hypercall page in xen_prepare_pvh(). */
 	if (xen_pvh_domain())
<span class="p_del">-		pv_info.name = &quot;Xen PVH&quot;;</span>
<span class="p_add">+		pv_ops.name = &quot;Xen PVH&quot;;</span>
 	else {
 		u64 pfn;
 		uint32_t msr;
 
<span class="p_del">-		pv_info.name = &quot;Xen HVM&quot;;</span>
<span class="p_add">+		pv_ops.name = &quot;Xen HVM&quot;;</span>
 		msr = cpuid_ebx(base + 2);
 		pfn = __pa(hypercall_page);
 		wrmsr_safe(msr, (u32)pfn, (u32)(pfn &gt;&gt; 32));
<span class="p_header">diff --git a/arch/x86/xen/enlighten_pv.c b/arch/x86/xen/enlighten_pv.c</span>
<span class="p_header">index dcf1b4183c49..9fa6698f2f26 100644</span>
<span class="p_header">--- a/arch/x86/xen/enlighten_pv.c</span>
<span class="p_header">+++ b/arch/x86/xen/enlighten_pv.c</span>
<span class="p_chunk">@@ -144,7 +144,7 @@</span> <span class="p_context"> static void __init xen_banner(void)</span>
 
 	pr_info(&quot;Booting paravirtualized kernel %son %s\n&quot;,
 		xen_feature(XENFEAT_auto_translated_physmap) ?
<span class="p_del">-			&quot;with PVH extensions &quot; : &quot;&quot;, pv_info.name);</span>
<span class="p_add">+			&quot;with PVH extensions &quot; : &quot;&quot;, pv_ops.name);</span>
 	printk(KERN_INFO &quot;Xen version: %d.%d%s%s\n&quot;,
 	       version &gt;&gt; 16, version &amp; 0xffff, extra.extraversion,
 	       xen_feature(XENFEAT_mmu_pt_update_preserve_ad) ? &quot; (preserve-AD)&quot; : &quot;&quot;);
<span class="p_chunk">@@ -998,10 +998,10 @@</span> <span class="p_context"> void xen_setup_vcpu_info_placement(void)</span>
 	 * percpu area for all cpus, so make use of it.
 	 */
 	if (xen_have_vcpu_info_placement) {
<span class="p_del">-		pv_irq_ops.save_fl = __PV_IS_CALLEE_SAVE(xen_save_fl_direct);</span>
<span class="p_del">-		pv_irq_ops.restore_fl = __PV_IS_CALLEE_SAVE(xen_restore_fl_direct);</span>
<span class="p_del">-		pv_irq_ops.irq_disable = __PV_IS_CALLEE_SAVE(xen_irq_disable_direct);</span>
<span class="p_del">-		pv_irq_ops.irq_enable = __PV_IS_CALLEE_SAVE(xen_irq_enable_direct);</span>
<span class="p_add">+		pv_ops.save_fl = __PV_IS_CALLEE_SAVE(xen_save_fl_direct);</span>
<span class="p_add">+		pv_ops.restore_fl = __PV_IS_CALLEE_SAVE(xen_restore_fl_direct);</span>
<span class="p_add">+		pv_ops.irq_disable = __PV_IS_CALLEE_SAVE(xen_irq_disable_direct);</span>
<span class="p_add">+		pv_ops.irq_enable = __PV_IS_CALLEE_SAVE(xen_irq_enable_direct);</span>
 		pvfull_mmu_ops.read_cr2 = xen_read_cr2_direct;
 	}
 }
<span class="p_chunk">@@ -1024,10 +1024,10 @@</span> <span class="p_context"> static unsigned xen_patch(u8 type, u16 clobbers, void *insnbuf,</span>
 	goto patch_site
 
 	switch (type) {
<span class="p_del">-		SITE(pv_irq_ops, irq_enable);</span>
<span class="p_del">-		SITE(pv_irq_ops, irq_disable);</span>
<span class="p_del">-		SITE(pv_irq_ops, save_fl);</span>
<span class="p_del">-		SITE(pv_irq_ops, restore_fl);</span>
<span class="p_add">+		SITE(pv_ops, irq_enable);</span>
<span class="p_add">+		SITE(pv_ops, irq_disable);</span>
<span class="p_add">+		SITE(pv_ops, save_fl);</span>
<span class="p_add">+		SITE(pv_ops, restore_fl);</span>
 #undef SITE
 
 	patch_site:
<span class="p_chunk">@@ -1067,10 +1067,6 @@</span> <span class="p_context"> static const struct pvfull_info xen_info __initconst = {</span>
 #endif
 };
 
<span class="p_del">-static const struct pv_init_ops xen_init_ops __initconst = {</span>
<span class="p_del">-	.patch = xen_patch,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
 static const struct pvfull_cpu_ops xen_cpu_ops __initconst = {
 	.cpuid = xen_cpuid,
 
<span class="p_chunk">@@ -1267,10 +1263,10 @@</span> <span class="p_context"> asmlinkage __visible void __init xen_start_kernel(void)</span>
 
 	/* Install Xen paravirt ops */
 	pvfull_info = xen_info;
<span class="p_del">-	pv_info.name = &quot;Xen&quot;;</span>
<span class="p_del">-	pv_init_ops = xen_init_ops;</span>
<span class="p_add">+	pv_ops.name = &quot;Xen&quot;;</span>
<span class="p_add">+	pv_ops.patch = xen_patch;</span>
<span class="p_add">+	pv_ops.io_delay = xen_io_delay;</span>
 	pvfull_cpu_ops = xen_cpu_ops;
<span class="p_del">-	pv_cpu_ops.io_delay = xen_io_delay;</span>
 
 	x86_platform.get_nmi_reason = xen_get_nmi_reason;
 
<span class="p_header">diff --git a/arch/x86/xen/irq.c b/arch/x86/xen/irq.c</span>
<span class="p_header">index c9dba9d8cecf..eeced2f4ccb6 100644</span>
<span class="p_header">--- a/arch/x86/xen/irq.c</span>
<span class="p_header">+++ b/arch/x86/xen/irq.c</span>
<span class="p_chunk">@@ -115,13 +115,6 @@</span> <span class="p_context"> static void xen_halt(void)</span>
 		xen_safe_halt();
 }
 
<span class="p_del">-static const struct pv_irq_ops xen_irq_ops __initconst = {</span>
<span class="p_del">-	.save_fl = PV_CALLEE_SAVE(xen_save_fl),</span>
<span class="p_del">-	.restore_fl = PV_CALLEE_SAVE(xen_restore_fl),</span>
<span class="p_del">-	.irq_disable = PV_CALLEE_SAVE(xen_irq_disable),</span>
<span class="p_del">-	.irq_enable = PV_CALLEE_SAVE(xen_irq_enable),</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
 static const struct pvfull_irq_ops xen_full_irq_ops __initconst = {
 	.safe_halt = xen_safe_halt,
 	.halt = xen_halt,
<span class="p_chunk">@@ -132,7 +125,10 @@</span> <span class="p_context"> static const struct pvfull_irq_ops xen_full_irq_ops __initconst = {</span>
 
 void __init xen_init_irq_ops(void)
 {
<span class="p_del">-	pv_irq_ops = xen_irq_ops;</span>
<span class="p_add">+	pv_ops.save_fl = PV_CALLEE_SAVE(xen_save_fl);</span>
<span class="p_add">+	pv_ops.restore_fl = PV_CALLEE_SAVE(xen_restore_fl);</span>
<span class="p_add">+	pv_ops.irq_disable = PV_CALLEE_SAVE(xen_irq_disable);</span>
<span class="p_add">+	pv_ops.irq_enable = PV_CALLEE_SAVE(xen_irq_enable);</span>
 	pvfull_irq_ops = xen_full_irq_ops;
 	x86_init.irqs.intr_init = xen_init_IRQ;
 }
<span class="p_header">diff --git a/arch/x86/xen/mmu_hvm.c b/arch/x86/xen/mmu_hvm.c</span>
<span class="p_header">index 1c57f1cd545c..bf6472b444c5 100644</span>
<span class="p_header">--- a/arch/x86/xen/mmu_hvm.c</span>
<span class="p_header">+++ b/arch/x86/xen/mmu_hvm.c</span>
<span class="p_chunk">@@ -72,7 +72,7 @@</span> <span class="p_context"> static int is_pagetable_dying_supported(void)</span>
 void __init xen_hvm_init_mmu_ops(void)
 {
 	if (is_pagetable_dying_supported())
<span class="p_del">-		pv_mmu_ops.exit_mmap = xen_hvm_exit_mmap;</span>
<span class="p_add">+		pv_ops.exit_mmap = xen_hvm_exit_mmap;</span>
 #ifdef CONFIG_PROC_VMCORE
 	register_oldmem_pfn_is_ram(&amp;xen_oldmem_pfn_is_ram);
 #endif
<span class="p_header">diff --git a/arch/x86/xen/mmu_pv.c b/arch/x86/xen/mmu_pv.c</span>
<span class="p_header">index 7be3e21a4dac..89da3c2b8248 100644</span>
<span class="p_header">--- a/arch/x86/xen/mmu_pv.c</span>
<span class="p_header">+++ b/arch/x86/xen/mmu_pv.c</span>
<span class="p_chunk">@@ -2513,8 +2513,8 @@</span> <span class="p_context"> void __init xen_init_mmu_ops(void)</span>
 		return;
 
 	pvfull_mmu_ops = xen_mmu_ops;
<span class="p_del">-	pv_mmu_ops.flush_tlb_others = xen_flush_tlb_others;</span>
<span class="p_del">-	pv_mmu_ops.exit_mmap = xen_exit_mmap;</span>
<span class="p_add">+	pv_ops.flush_tlb_others = xen_flush_tlb_others;</span>
<span class="p_add">+	pv_ops.exit_mmap = xen_exit_mmap;</span>
 
 	memset(dummy_mapping, 0xff, PAGE_SIZE);
 }
<span class="p_header">diff --git a/arch/x86/xen/time.c b/arch/x86/xen/time.c</span>
<span class="p_header">index a1895a8e85c1..c5f7e5e6eea6 100644</span>
<span class="p_header">--- a/arch/x86/xen/time.c</span>
<span class="p_header">+++ b/arch/x86/xen/time.c</span>
<span class="p_chunk">@@ -366,11 +366,6 @@</span> <span class="p_context"> void xen_timer_resume(void)</span>
 	}
 }
 
<span class="p_del">-static const struct pv_time_ops xen_time_ops __initconst = {</span>
<span class="p_del">-	.sched_clock = xen_clocksource_read,</span>
<span class="p_del">-	.steal_clock = xen_steal_clock,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
 static void __init xen_time_init(void)
 {
 	int cpu = smp_processor_id();
<span class="p_chunk">@@ -408,7 +403,8 @@</span> <span class="p_context"> static void __init xen_time_init(void)</span>
 
 void __ref xen_init_time_ops(void)
 {
<span class="p_del">-	pv_time_ops = xen_time_ops;</span>
<span class="p_add">+	pv_ops.sched_clock = xen_clocksource_read;</span>
<span class="p_add">+	pv_ops.steal_clock = xen_steal_clock;</span>
 
 	x86_init.timers.timer_init = xen_time_init;
 	x86_init.timers.setup_percpu_clockev = x86_init_noop;
<span class="p_chunk">@@ -450,7 +446,8 @@</span> <span class="p_context"> void __init xen_hvm_init_time_ops(void)</span>
 		return;
 	}
 
<span class="p_del">-	pv_time_ops = xen_time_ops;</span>
<span class="p_add">+	pv_ops.sched_clock = xen_clocksource_read;</span>
<span class="p_add">+	pv_ops.steal_clock = xen_steal_clock;</span>
 	x86_init.timers.setup_percpu_clockev = xen_time_init;
 	x86_cpuinit.setup_percpu_clockev = xen_hvm_setup_cpu_clockevents;
 
<span class="p_header">diff --git a/drivers/xen/time.c b/drivers/xen/time.c</span>
<span class="p_header">index ac5f23fcafc2..37c355734bff 100644</span>
<span class="p_header">--- a/drivers/xen/time.c</span>
<span class="p_header">+++ b/drivers/xen/time.c</span>
<span class="p_chunk">@@ -106,7 +106,7 @@</span> <span class="p_context"> void __init xen_time_setup_guest(void)</span>
 	xen_runstate_remote = !HYPERVISOR_vm_assist(VMASST_CMD_enable,
 					VMASST_TYPE_runstate_update_flag);
 
<span class="p_del">-	pv_time_ops.steal_clock = xen_steal_clock;</span>
<span class="p_add">+	pv_ops.steal_clock = xen_steal_clock;</span>
 
 	static_key_slow_inc(&amp;paravirt_steal_enabled);
 	if (xen_runstate_remote)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



