
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>xen: consolidate swiotbl_xen dma_ops - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    xen: consolidate swiotbl_xen dma_ops</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 11, 2016, 4:35 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1473611708-25179-1-git-send-email-hch@lst.de&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9325479/mbox/"
   >mbox</a>
|
   <a href="/patch/9325479/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9325479/">/patch/9325479/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	6A467607D3 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 11 Sep 2016 16:35:27 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5B224286F5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 11 Sep 2016 16:35:27 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 4F62328B18; Sun, 11 Sep 2016 16:35:27 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id DB3CD286F5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun, 11 Sep 2016 16:35:24 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932291AbcIKQfT (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 11 Sep 2016 12:35:19 -0400
Received: from bombadil.infradead.org ([198.137.202.9]:38093 &quot;EHLO
	bombadil.infradead.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1755666AbcIKQfR (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 11 Sep 2016 12:35:17 -0400
Received: from [83.175.99.196] (helo=localhost)
	by bombadil.infradead.org with esmtpsa (Exim 4.85_2 #1 (Red Hat
	Linux)) id 1bj7io-00086R-J4; Sun, 11 Sep 2016 16:35:10 +0000
From: Christoph Hellwig &lt;hch@lst.de&gt;
To: sstabellini@kernel.org, konrad.wilk@oracle.com,
	boris.ostrovsky@oracle.com, david.vrabel@citrix.com,
	jgross@suse.com, x86@kernel.org
Cc: linux-kernel@vger.kernel.org
Subject: [PATCH] xen: consolidate swiotbl_xen dma_ops
Date: Sun, 11 Sep 2016 18:35:08 +0200
Message-Id: &lt;1473611708-25179-1-git-send-email-hch@lst.de&gt;
X-Mailer: git-send-email 2.1.4
X-SRS-Rewrite: SMTP reverse-path rewritten from &lt;hch@infradead.org&gt; by
	bombadil.infradead.org. See http://www.infradead.org/rpr.html
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a> - Sept. 11, 2016, 4:35 p.m.</div>
<pre class="content">
x86 wasn&#39;t wiring up -&gt;set_dma_mask before, but it&#39;s the same as the
default so we are fine.  (arm can&#39;t remove it just yet, but eventually
we&#39;ll get there).
<span class="signed-off-by">
Signed-off-by: Christoph Hellwig &lt;hch@lst.de&gt;</span>
---
 arch/arm/xen/mm.c              | 16 -----------
 arch/x86/xen/pci-swiotlb-xen.c | 15 ----------
 drivers/xen/swiotlb-xen.c      | 63 ++++++++++++++++++++++++------------------
 include/xen/swiotlb-xen.h      | 54 ++----------------------------------
 4 files changed, 38 insertions(+), 110 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a> - Sept. 12, 2016, 11:45 a.m.</div>
<pre class="content">
* Christoph Hellwig &lt;hch@lst.de&gt; wrote:
<span class="quote">
&gt; +struct dma_map_ops xen_swiotlb_dma_ops = {</span>
<span class="quote">&gt; +	.mapping_error = xen_swiotlb_dma_mapping_error,</span>
<span class="quote">&gt; +	.alloc = xen_swiotlb_alloc_coherent,</span>
<span class="quote">&gt; +	.free = xen_swiotlb_free_coherent,</span>
<span class="quote">&gt; +	.sync_single_for_cpu = xen_swiotlb_sync_single_for_cpu,</span>
<span class="quote">&gt; +	.sync_single_for_device = xen_swiotlb_sync_single_for_device,</span>
<span class="quote">&gt; +	.sync_sg_for_cpu = xen_swiotlb_sync_sg_for_cpu,</span>
<span class="quote">&gt; +	.sync_sg_for_device = xen_swiotlb_sync_sg_for_device,</span>
<span class="quote">&gt; +	.map_sg = xen_swiotlb_map_sg_attrs,</span>
<span class="quote">&gt; +	.unmap_sg = xen_swiotlb_unmap_sg_attrs,</span>
<span class="quote">&gt; +	.map_page = xen_swiotlb_map_page,</span>
<span class="quote">&gt; +	.unmap_page = xen_swiotlb_unmap_page,</span>
<span class="quote">&gt; +	.dma_supported = xen_swiotlb_dma_supported,</span>
<span class="quote">&gt; +	.set_dma_mask = xen_swiotlb_set_dma_mask,</span>
<span class="quote">&gt; +};</span>

Please organize such initializers better! Something like this:

struct dma_map_ops xen_swiotlb_dma_ops = {
	.mapping_error		= xen_swiotlb_dma_mapping_error,
	.alloc			= xen_swiotlb_alloc_coherent,
	.free			= xen_swiotlb_free_coherent,
	.sync_single_for_cpu	= xen_swiotlb_sync_single_for_cpu,
	.sync_single_for_device = xen_swiotlb_sync_single_for_device,
	.sync_sg_for_cpu	= xen_swiotlb_sync_sg_for_cpu,
	.sync_sg_for_device	= xen_swiotlb_sync_sg_for_device,
	.map_sg			= xen_swiotlb_map_sg_attrs,
	.unmap_sg		= xen_swiotlb_unmap_sg_attrs,
	.map_page		= xen_swiotlb_map_page,
	.unmap_page		= xen_swiotlb_unmap_page,
	.dma_supported		= xen_swiotlb_dma_supported,
	.set_dma_mask		= xen_swiotlb_set_dma_mask,
};

Makes it much easier to review such definitions.

Thanks,

	Ingo
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a> - Sept. 12, 2016, 2:51 p.m.</div>
<pre class="content">
On Mon, Sep 12, 2016 at 01:45:40PM +0200, Ingo Molnar wrote:
<span class="quote">&gt; Please organize such initializers better! Something like this:</span>
<span class="quote">
&gt; Makes it much easier to review such definitions.</span>

That&#39;s my personal preference, too.  But this is just moving/consolidating
code, so I don&#39;t plan to do fancy moves.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=3407">Konrad Rzeszutek Wilk</a> - Sept. 13, 2016, 1:01 p.m.</div>
<pre class="content">
On Sun, Sep 11, 2016 at 06:35:08PM +0200, Christoph Hellwig wrote:
<span class="quote">&gt; x86 wasn&#39;t wiring up -&gt;set_dma_mask before, but it&#39;s the same as the</span>
<span class="quote">&gt; default so we are fine.  (arm can&#39;t remove it just yet, but eventually</span>
<span class="quote">&gt; we&#39;ll get there).</span>
<span class="quote">&gt; </span>
<span class="acked-by">
Acked-by: Konrad Rzeszutek Wilk &lt;konrad.wilk@oracle.com&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=146571">Stefano Stabellini</a> - Sept. 13, 2016, 5:59 p.m.</div>
<pre class="content">
On Sun, 11 Sep 2016, Christoph Hellwig wrote:
<span class="quote">&gt; x86 wasn&#39;t wiring up -&gt;set_dma_mask before, but it&#39;s the same as the</span>
<span class="quote">&gt; default so we are fine.  (arm can&#39;t remove it just yet, but eventually</span>
<span class="quote">&gt; we&#39;ll get there).</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Christoph Hellwig &lt;hch@lst.de&gt;</span>
<span class="acked-by">
Acked-by: Stefano Stabellini &lt;sstabellini@kernel.org&gt;</span>
<span class="quote">

&gt;  arch/arm/xen/mm.c              | 16 -----------</span>
<span class="quote">&gt;  arch/x86/xen/pci-swiotlb-xen.c | 15 ----------</span>
<span class="quote">&gt;  drivers/xen/swiotlb-xen.c      | 63 ++++++++++++++++++++++++------------------</span>
<span class="quote">&gt;  include/xen/swiotlb-xen.h      | 54 ++----------------------------------</span>
<span class="quote">&gt;  4 files changed, 38 insertions(+), 110 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/arch/arm/xen/mm.c b/arch/arm/xen/mm.c</span>
<span class="quote">&gt; index d062f08..d2601ce 100644</span>
<span class="quote">&gt; --- a/arch/arm/xen/mm.c</span>
<span class="quote">&gt; +++ b/arch/arm/xen/mm.c</span>
<span class="quote">&gt; @@ -185,22 +185,6 @@ EXPORT_SYMBOL_GPL(xen_destroy_contiguous_region);</span>
<span class="quote">&gt;  struct dma_map_ops *xen_dma_ops;</span>
<span class="quote">&gt;  EXPORT_SYMBOL(xen_dma_ops);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -static struct dma_map_ops xen_swiotlb_dma_ops = {</span>
<span class="quote">&gt; -	.mapping_error = xen_swiotlb_dma_mapping_error,</span>
<span class="quote">&gt; -	.alloc = xen_swiotlb_alloc_coherent,</span>
<span class="quote">&gt; -	.free = xen_swiotlb_free_coherent,</span>
<span class="quote">&gt; -	.sync_single_for_cpu = xen_swiotlb_sync_single_for_cpu,</span>
<span class="quote">&gt; -	.sync_single_for_device = xen_swiotlb_sync_single_for_device,</span>
<span class="quote">&gt; -	.sync_sg_for_cpu = xen_swiotlb_sync_sg_for_cpu,</span>
<span class="quote">&gt; -	.sync_sg_for_device = xen_swiotlb_sync_sg_for_device,</span>
<span class="quote">&gt; -	.map_sg = xen_swiotlb_map_sg_attrs,</span>
<span class="quote">&gt; -	.unmap_sg = xen_swiotlb_unmap_sg_attrs,</span>
<span class="quote">&gt; -	.map_page = xen_swiotlb_map_page,</span>
<span class="quote">&gt; -	.unmap_page = xen_swiotlb_unmap_page,</span>
<span class="quote">&gt; -	.dma_supported = xen_swiotlb_dma_supported,</span>
<span class="quote">&gt; -	.set_dma_mask = xen_swiotlb_set_dma_mask,</span>
<span class="quote">&gt; -};</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  int __init xen_mm_init(void)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	struct gnttab_cache_flush cflush;</span>
<span class="quote">&gt; diff --git a/arch/x86/xen/pci-swiotlb-xen.c b/arch/x86/xen/pci-swiotlb-xen.c</span>
<span class="quote">&gt; index 0e98e5d..4809aab 100644</span>
<span class="quote">&gt; --- a/arch/x86/xen/pci-swiotlb-xen.c</span>
<span class="quote">&gt; +++ b/arch/x86/xen/pci-swiotlb-xen.c</span>
<span class="quote">&gt; @@ -18,21 +18,6 @@</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  int xen_swiotlb __read_mostly;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -static struct dma_map_ops xen_swiotlb_dma_ops = {</span>
<span class="quote">&gt; -	.mapping_error = xen_swiotlb_dma_mapping_error,</span>
<span class="quote">&gt; -	.alloc = xen_swiotlb_alloc_coherent,</span>
<span class="quote">&gt; -	.free = xen_swiotlb_free_coherent,</span>
<span class="quote">&gt; -	.sync_single_for_cpu = xen_swiotlb_sync_single_for_cpu,</span>
<span class="quote">&gt; -	.sync_single_for_device = xen_swiotlb_sync_single_for_device,</span>
<span class="quote">&gt; -	.sync_sg_for_cpu = xen_swiotlb_sync_sg_for_cpu,</span>
<span class="quote">&gt; -	.sync_sg_for_device = xen_swiotlb_sync_sg_for_device,</span>
<span class="quote">&gt; -	.map_sg = xen_swiotlb_map_sg_attrs,</span>
<span class="quote">&gt; -	.unmap_sg = xen_swiotlb_unmap_sg_attrs,</span>
<span class="quote">&gt; -	.map_page = xen_swiotlb_map_page,</span>
<span class="quote">&gt; -	.unmap_page = xen_swiotlb_unmap_page,</span>
<span class="quote">&gt; -	.dma_supported = xen_swiotlb_dma_supported,</span>
<span class="quote">&gt; -};</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * pci_xen_swiotlb_detect - set xen_swiotlb to 1 if necessary</span>
<span class="quote">&gt;   *</span>
<span class="quote">&gt; diff --git a/drivers/xen/swiotlb-xen.c b/drivers/xen/swiotlb-xen.c</span>
<span class="quote">&gt; index 87e6035..1060c77 100644</span>
<span class="quote">&gt; --- a/drivers/xen/swiotlb-xen.c</span>
<span class="quote">&gt; +++ b/drivers/xen/swiotlb-xen.c</span>
<span class="quote">&gt; @@ -47,6 +47,12 @@</span>
<span class="quote">&gt;  #include &lt;asm/xen/page-coherent.h&gt;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #include &lt;trace/events/swiotlb.h&gt;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +static void</span>
<span class="quote">&gt; +xen_swiotlb_unmap_sg_attrs(struct device *hwdev, struct scatterlist *sgl,</span>
<span class="quote">&gt; +			   int nelems, enum dma_data_direction dir,</span>
<span class="quote">&gt; +			   unsigned long attrs);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * Used to do a quick range check in swiotlb_tbl_unmap_single and</span>
<span class="quote">&gt;   * swiotlb_tbl_sync_single_*, to see if the memory was in fact allocated by this</span>
<span class="quote">&gt; @@ -291,7 +297,8 @@ error:</span>
<span class="quote">&gt;  		free_pages((unsigned long)xen_io_tlb_start, order);</span>
<span class="quote">&gt;  	return rc;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -void *</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +static void *</span>
<span class="quote">&gt;  xen_swiotlb_alloc_coherent(struct device *hwdev, size_t size,</span>
<span class="quote">&gt;  			   dma_addr_t *dma_handle, gfp_t flags,</span>
<span class="quote">&gt;  			   unsigned long attrs)</span>
<span class="quote">&gt; @@ -342,9 +349,8 @@ xen_swiotlb_alloc_coherent(struct device *hwdev, size_t size,</span>
<span class="quote">&gt;  	memset(ret, 0, size);</span>
<span class="quote">&gt;  	return ret;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -EXPORT_SYMBOL_GPL(xen_swiotlb_alloc_coherent);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -void</span>
<span class="quote">&gt; +static void</span>
<span class="quote">&gt;  xen_swiotlb_free_coherent(struct device *hwdev, size_t size, void *vaddr,</span>
<span class="quote">&gt;  			  dma_addr_t dev_addr, unsigned long attrs)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; @@ -365,8 +371,6 @@ xen_swiotlb_free_coherent(struct device *hwdev, size_t size, void *vaddr,</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	xen_free_coherent_pages(hwdev, size, vaddr, (dma_addr_t)phys, attrs);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -EXPORT_SYMBOL_GPL(xen_swiotlb_free_coherent);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * Map a single buffer of the indicated size for DMA in streaming mode.  The</span>
<span class="quote">&gt; @@ -375,7 +379,7 @@ EXPORT_SYMBOL_GPL(xen_swiotlb_free_coherent);</span>
<span class="quote">&gt;   * Once the device is given the dma address, the device owns this memory until</span>
<span class="quote">&gt;   * either xen_swiotlb_unmap_page or xen_swiotlb_dma_sync_single is performed.</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; -dma_addr_t xen_swiotlb_map_page(struct device *dev, struct page *page,</span>
<span class="quote">&gt; +static dma_addr_t xen_swiotlb_map_page(struct device *dev, struct page *page,</span>
<span class="quote">&gt;  				unsigned long offset, size_t size,</span>
<span class="quote">&gt;  				enum dma_data_direction dir,</span>
<span class="quote">&gt;  				unsigned long attrs)</span>
<span class="quote">&gt; @@ -422,7 +426,6 @@ dma_addr_t xen_swiotlb_map_page(struct device *dev, struct page *page,</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt;  	return dev_addr;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -EXPORT_SYMBOL_GPL(xen_swiotlb_map_page);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * Unmap a single streaming mode DMA translation.  The dma_addr and size must</span>
<span class="quote">&gt; @@ -460,13 +463,12 @@ static void xen_unmap_single(struct device *hwdev, dma_addr_t dev_addr,</span>
<span class="quote">&gt;  	dma_mark_clean(phys_to_virt(paddr), size);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -void xen_swiotlb_unmap_page(struct device *hwdev, dma_addr_t dev_addr,</span>
<span class="quote">&gt; +static void xen_swiotlb_unmap_page(struct device *hwdev, dma_addr_t dev_addr,</span>
<span class="quote">&gt;  			    size_t size, enum dma_data_direction dir,</span>
<span class="quote">&gt;  			    unsigned long attrs)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	xen_unmap_single(hwdev, dev_addr, size, dir, attrs);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -EXPORT_SYMBOL_GPL(xen_swiotlb_unmap_page);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * Make physical memory consistent for a single streaming mode DMA translation</span>
<span class="quote">&gt; @@ -503,21 +505,19 @@ xen_swiotlb_sync_single(struct device *hwdev, dma_addr_t dev_addr,</span>
<span class="quote">&gt;  	dma_mark_clean(phys_to_virt(paddr), size);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -void</span>
<span class="quote">&gt; +static void</span>
<span class="quote">&gt;  xen_swiotlb_sync_single_for_cpu(struct device *hwdev, dma_addr_t dev_addr,</span>
<span class="quote">&gt;  				size_t size, enum dma_data_direction dir)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	xen_swiotlb_sync_single(hwdev, dev_addr, size, dir, SYNC_FOR_CPU);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -EXPORT_SYMBOL_GPL(xen_swiotlb_sync_single_for_cpu);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -void</span>
<span class="quote">&gt; +static void</span>
<span class="quote">&gt;  xen_swiotlb_sync_single_for_device(struct device *hwdev, dma_addr_t dev_addr,</span>
<span class="quote">&gt;  				   size_t size, enum dma_data_direction dir)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	xen_swiotlb_sync_single(hwdev, dev_addr, size, dir, SYNC_FOR_DEVICE);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -EXPORT_SYMBOL_GPL(xen_swiotlb_sync_single_for_device);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * Map a set of buffers described by scatterlist in streaming mode for DMA.</span>
<span class="quote">&gt; @@ -535,7 +535,7 @@ EXPORT_SYMBOL_GPL(xen_swiotlb_sync_single_for_device);</span>
<span class="quote">&gt;   * Device ownership issues as mentioned above for xen_swiotlb_map_page are the</span>
<span class="quote">&gt;   * same here.</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; -int</span>
<span class="quote">&gt; +static int</span>
<span class="quote">&gt;  xen_swiotlb_map_sg_attrs(struct device *hwdev, struct scatterlist *sgl,</span>
<span class="quote">&gt;  			 int nelems, enum dma_data_direction dir,</span>
<span class="quote">&gt;  			 unsigned long attrs)</span>
<span class="quote">&gt; @@ -590,13 +590,12 @@ xen_swiotlb_map_sg_attrs(struct device *hwdev, struct scatterlist *sgl,</span>
<span class="quote">&gt;  	}</span>
<span class="quote">&gt;  	return nelems;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -EXPORT_SYMBOL_GPL(xen_swiotlb_map_sg_attrs);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * Unmap a set of streaming mode DMA translations.  Again, cpu read rules</span>
<span class="quote">&gt;   * concerning calls here are the same as for swiotlb_unmap_page() above.</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; -void</span>
<span class="quote">&gt; +static void</span>
<span class="quote">&gt;  xen_swiotlb_unmap_sg_attrs(struct device *hwdev, struct scatterlist *sgl,</span>
<span class="quote">&gt;  			   int nelems, enum dma_data_direction dir,</span>
<span class="quote">&gt;  			   unsigned long attrs)</span>
<span class="quote">&gt; @@ -610,7 +609,6 @@ xen_swiotlb_unmap_sg_attrs(struct device *hwdev, struct scatterlist *sgl,</span>
<span class="quote">&gt;  		xen_unmap_single(hwdev, sg-&gt;dma_address, sg_dma_len(sg), dir, attrs);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -EXPORT_SYMBOL_GPL(xen_swiotlb_unmap_sg_attrs);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * Make physical memory consistent for a set of streaming mode DMA translations</span>
<span class="quote">&gt; @@ -632,28 +630,25 @@ xen_swiotlb_sync_sg(struct device *hwdev, struct scatterlist *sgl,</span>
<span class="quote">&gt;  					sg_dma_len(sg), dir, target);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -void</span>
<span class="quote">&gt; +static void</span>
<span class="quote">&gt;  xen_swiotlb_sync_sg_for_cpu(struct device *hwdev, struct scatterlist *sg,</span>
<span class="quote">&gt;  			    int nelems, enum dma_data_direction dir)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	xen_swiotlb_sync_sg(hwdev, sg, nelems, dir, SYNC_FOR_CPU);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -EXPORT_SYMBOL_GPL(xen_swiotlb_sync_sg_for_cpu);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -void</span>
<span class="quote">&gt; +static void</span>
<span class="quote">&gt;  xen_swiotlb_sync_sg_for_device(struct device *hwdev, struct scatterlist *sg,</span>
<span class="quote">&gt;  			       int nelems, enum dma_data_direction dir)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	xen_swiotlb_sync_sg(hwdev, sg, nelems, dir, SYNC_FOR_DEVICE);</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -EXPORT_SYMBOL_GPL(xen_swiotlb_sync_sg_for_device);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -int</span>
<span class="quote">&gt; +static int</span>
<span class="quote">&gt;  xen_swiotlb_dma_mapping_error(struct device *hwdev, dma_addr_t dma_addr)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	return !dma_addr;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -EXPORT_SYMBOL_GPL(xen_swiotlb_dma_mapping_error);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * Return whether the given device DMA address mask can be supported</span>
<span class="quote">&gt; @@ -661,14 +656,13 @@ EXPORT_SYMBOL_GPL(xen_swiotlb_dma_mapping_error);</span>
<span class="quote">&gt;   * during bus mastering, then you would pass 0x00ffffff as the mask to</span>
<span class="quote">&gt;   * this function.</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; -int</span>
<span class="quote">&gt; +static int</span>
<span class="quote">&gt;  xen_swiotlb_dma_supported(struct device *hwdev, u64 mask)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	return xen_virt_to_bus(xen_io_tlb_end - 1) &lt;= mask;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -EXPORT_SYMBOL_GPL(xen_swiotlb_dma_supported);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -int</span>
<span class="quote">&gt; +static int</span>
<span class="quote">&gt;  xen_swiotlb_set_dma_mask(struct device *dev, u64 dma_mask)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	if (!dev-&gt;dma_mask || !xen_swiotlb_dma_supported(dev, dma_mask))</span>
<span class="quote">&gt; @@ -678,4 +672,19 @@ xen_swiotlb_set_dma_mask(struct device *dev, u64 dma_mask)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  	return 0;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt; -EXPORT_SYMBOL_GPL(xen_swiotlb_set_dma_mask);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +struct dma_map_ops xen_swiotlb_dma_ops = {</span>
<span class="quote">&gt; +	.mapping_error = xen_swiotlb_dma_mapping_error,</span>
<span class="quote">&gt; +	.alloc = xen_swiotlb_alloc_coherent,</span>
<span class="quote">&gt; +	.free = xen_swiotlb_free_coherent,</span>
<span class="quote">&gt; +	.sync_single_for_cpu = xen_swiotlb_sync_single_for_cpu,</span>
<span class="quote">&gt; +	.sync_single_for_device = xen_swiotlb_sync_single_for_device,</span>
<span class="quote">&gt; +	.sync_sg_for_cpu = xen_swiotlb_sync_sg_for_cpu,</span>
<span class="quote">&gt; +	.sync_sg_for_device = xen_swiotlb_sync_sg_for_device,</span>
<span class="quote">&gt; +	.map_sg = xen_swiotlb_map_sg_attrs,</span>
<span class="quote">&gt; +	.unmap_sg = xen_swiotlb_unmap_sg_attrs,</span>
<span class="quote">&gt; +	.map_page = xen_swiotlb_map_page,</span>
<span class="quote">&gt; +	.unmap_page = xen_swiotlb_unmap_page,</span>
<span class="quote">&gt; +	.dma_supported = xen_swiotlb_dma_supported,</span>
<span class="quote">&gt; +	.set_dma_mask = xen_swiotlb_set_dma_mask,</span>
<span class="quote">&gt; +};</span>
<span class="quote">&gt; diff --git a/include/xen/swiotlb-xen.h b/include/xen/swiotlb-xen.h</span>
<span class="quote">&gt; index 7c35e27..0e44f26 100644</span>
<span class="quote">&gt; --- a/include/xen/swiotlb-xen.h</span>
<span class="quote">&gt; +++ b/include/xen/swiotlb-xen.h</span>
<span class="quote">&gt; @@ -1,61 +1,11 @@</span>
<span class="quote">&gt;  #ifndef __LINUX_SWIOTLB_XEN_H</span>
<span class="quote">&gt;  #define __LINUX_SWIOTLB_XEN_H</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -#include &lt;linux/dma-direction.h&gt;</span>
<span class="quote">&gt; +#include &lt;linux/dma-mapping.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/swiotlb.h&gt;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  extern int xen_swiotlb_init(int verbose, bool early);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -extern void</span>
<span class="quote">&gt; -*xen_swiotlb_alloc_coherent(struct device *hwdev, size_t size,</span>
<span class="quote">&gt; -			    dma_addr_t *dma_handle, gfp_t flags,</span>
<span class="quote">&gt; -			    unsigned long attrs);</span>
<span class="quote">&gt; +extern struct dma_map_ops xen_swiotlb_dma_ops;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -extern void</span>
<span class="quote">&gt; -xen_swiotlb_free_coherent(struct device *hwdev, size_t size,</span>
<span class="quote">&gt; -			  void *vaddr, dma_addr_t dma_handle,</span>
<span class="quote">&gt; -			  unsigned long attrs);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -extern dma_addr_t xen_swiotlb_map_page(struct device *dev, struct page *page,</span>
<span class="quote">&gt; -				       unsigned long offset, size_t size,</span>
<span class="quote">&gt; -				       enum dma_data_direction dir,</span>
<span class="quote">&gt; -				       unsigned long attrs);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -extern void xen_swiotlb_unmap_page(struct device *hwdev, dma_addr_t dev_addr,</span>
<span class="quote">&gt; -				   size_t size, enum dma_data_direction dir,</span>
<span class="quote">&gt; -				   unsigned long attrs);</span>
<span class="quote">&gt; -extern int</span>
<span class="quote">&gt; -xen_swiotlb_map_sg_attrs(struct device *hwdev, struct scatterlist *sgl,</span>
<span class="quote">&gt; -			 int nelems, enum dma_data_direction dir,</span>
<span class="quote">&gt; -			 unsigned long attrs);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -extern void</span>
<span class="quote">&gt; -xen_swiotlb_unmap_sg_attrs(struct device *hwdev, struct scatterlist *sgl,</span>
<span class="quote">&gt; -			   int nelems, enum dma_data_direction dir,</span>
<span class="quote">&gt; -			   unsigned long attrs);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -extern void</span>
<span class="quote">&gt; -xen_swiotlb_sync_single_for_cpu(struct device *hwdev, dma_addr_t dev_addr,</span>
<span class="quote">&gt; -				size_t size, enum dma_data_direction dir);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -extern void</span>
<span class="quote">&gt; -xen_swiotlb_sync_sg_for_cpu(struct device *hwdev, struct scatterlist *sg,</span>
<span class="quote">&gt; -			    int nelems, enum dma_data_direction dir);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -extern void</span>
<span class="quote">&gt; -xen_swiotlb_sync_single_for_device(struct device *hwdev, dma_addr_t dev_addr,</span>
<span class="quote">&gt; -				   size_t size, enum dma_data_direction dir);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -extern void</span>
<span class="quote">&gt; -xen_swiotlb_sync_sg_for_device(struct device *hwdev, struct scatterlist *sg,</span>
<span class="quote">&gt; -			       int nelems, enum dma_data_direction dir);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -extern int</span>
<span class="quote">&gt; -xen_swiotlb_dma_mapping_error(struct device *hwdev, dma_addr_t dma_addr);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -extern int</span>
<span class="quote">&gt; -xen_swiotlb_dma_supported(struct device *hwdev, u64 mask);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -extern int</span>
<span class="quote">&gt; -xen_swiotlb_set_dma_mask(struct device *dev, u64 dma_mask);</span>
<span class="quote">&gt;  #endif /* __LINUX_SWIOTLB_XEN_H */</span>
<span class="quote">&gt; -- </span>
<span class="quote">&gt; 2.1.4</span>
<span class="quote">&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a> - Sept. 13, 2016, 6:37 p.m.</div>
<pre class="content">
* Christoph Hellwig &lt;hch@lst.de&gt; wrote:
<span class="quote">
&gt; On Mon, Sep 12, 2016 at 01:45:40PM +0200, Ingo Molnar wrote:</span>
<span class="quote">&gt; &gt; Please organize such initializers better! Something like this:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; Makes it much easier to review such definitions.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; That&#39;s my personal preference, too.  But this is just moving/consolidating</span>
<span class="quote">&gt; code, so I don&#39;t plan to do fancy moves.</span>

I can be passive-aggressive too, so:

  NAKed-by: Ingo Molnar &lt;mingo@kernel.org&gt;

If the ugliness that makes the patch much harder to review than it should be is 
fixed in the same patch or in a different patch then:
<span class="acked-by">
  Acked-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>

Thanks,

	Ingo
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=99">Christoph Hellwig</a> - Sept. 14, 2016, 5:35 a.m.</div>
<pre class="content">
On Tue, Sep 13, 2016 at 08:37:27PM +0200, Ingo Molnar wrote:
<span class="quote">&gt; I can be passive-aggressive too, so:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;   NAKed-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; If the ugliness that makes the patch much harder to review than it should be is </span>

How about not beeing a dick?  If you ask _nicely_ to respin it anyway
I&#39;d be happy to do it, but if you get up on a bad foot please let it out
on someone else.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm/xen/mm.c b/arch/arm/xen/mm.c</span>
<span class="p_header">index d062f08..d2601ce 100644</span>
<span class="p_header">--- a/arch/arm/xen/mm.c</span>
<span class="p_header">+++ b/arch/arm/xen/mm.c</span>
<span class="p_chunk">@@ -185,22 +185,6 @@</span> <span class="p_context"> EXPORT_SYMBOL_GPL(xen_destroy_contiguous_region);</span>
 struct dma_map_ops *xen_dma_ops;
 EXPORT_SYMBOL(xen_dma_ops);
 
<span class="p_del">-static struct dma_map_ops xen_swiotlb_dma_ops = {</span>
<span class="p_del">-	.mapping_error = xen_swiotlb_dma_mapping_error,</span>
<span class="p_del">-	.alloc = xen_swiotlb_alloc_coherent,</span>
<span class="p_del">-	.free = xen_swiotlb_free_coherent,</span>
<span class="p_del">-	.sync_single_for_cpu = xen_swiotlb_sync_single_for_cpu,</span>
<span class="p_del">-	.sync_single_for_device = xen_swiotlb_sync_single_for_device,</span>
<span class="p_del">-	.sync_sg_for_cpu = xen_swiotlb_sync_sg_for_cpu,</span>
<span class="p_del">-	.sync_sg_for_device = xen_swiotlb_sync_sg_for_device,</span>
<span class="p_del">-	.map_sg = xen_swiotlb_map_sg_attrs,</span>
<span class="p_del">-	.unmap_sg = xen_swiotlb_unmap_sg_attrs,</span>
<span class="p_del">-	.map_page = xen_swiotlb_map_page,</span>
<span class="p_del">-	.unmap_page = xen_swiotlb_unmap_page,</span>
<span class="p_del">-	.dma_supported = xen_swiotlb_dma_supported,</span>
<span class="p_del">-	.set_dma_mask = xen_swiotlb_set_dma_mask,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
 int __init xen_mm_init(void)
 {
 	struct gnttab_cache_flush cflush;
<span class="p_header">diff --git a/arch/x86/xen/pci-swiotlb-xen.c b/arch/x86/xen/pci-swiotlb-xen.c</span>
<span class="p_header">index 0e98e5d..4809aab 100644</span>
<span class="p_header">--- a/arch/x86/xen/pci-swiotlb-xen.c</span>
<span class="p_header">+++ b/arch/x86/xen/pci-swiotlb-xen.c</span>
<span class="p_chunk">@@ -18,21 +18,6 @@</span> <span class="p_context"></span>
 
 int xen_swiotlb __read_mostly;
 
<span class="p_del">-static struct dma_map_ops xen_swiotlb_dma_ops = {</span>
<span class="p_del">-	.mapping_error = xen_swiotlb_dma_mapping_error,</span>
<span class="p_del">-	.alloc = xen_swiotlb_alloc_coherent,</span>
<span class="p_del">-	.free = xen_swiotlb_free_coherent,</span>
<span class="p_del">-	.sync_single_for_cpu = xen_swiotlb_sync_single_for_cpu,</span>
<span class="p_del">-	.sync_single_for_device = xen_swiotlb_sync_single_for_device,</span>
<span class="p_del">-	.sync_sg_for_cpu = xen_swiotlb_sync_sg_for_cpu,</span>
<span class="p_del">-	.sync_sg_for_device = xen_swiotlb_sync_sg_for_device,</span>
<span class="p_del">-	.map_sg = xen_swiotlb_map_sg_attrs,</span>
<span class="p_del">-	.unmap_sg = xen_swiotlb_unmap_sg_attrs,</span>
<span class="p_del">-	.map_page = xen_swiotlb_map_page,</span>
<span class="p_del">-	.unmap_page = xen_swiotlb_unmap_page,</span>
<span class="p_del">-	.dma_supported = xen_swiotlb_dma_supported,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
 /*
  * pci_xen_swiotlb_detect - set xen_swiotlb to 1 if necessary
  *
<span class="p_header">diff --git a/drivers/xen/swiotlb-xen.c b/drivers/xen/swiotlb-xen.c</span>
<span class="p_header">index 87e6035..1060c77 100644</span>
<span class="p_header">--- a/drivers/xen/swiotlb-xen.c</span>
<span class="p_header">+++ b/drivers/xen/swiotlb-xen.c</span>
<span class="p_chunk">@@ -47,6 +47,12 @@</span> <span class="p_context"></span>
 #include &lt;asm/xen/page-coherent.h&gt;
 
 #include &lt;trace/events/swiotlb.h&gt;
<span class="p_add">+</span>
<span class="p_add">+static void</span>
<span class="p_add">+xen_swiotlb_unmap_sg_attrs(struct device *hwdev, struct scatterlist *sgl,</span>
<span class="p_add">+			   int nelems, enum dma_data_direction dir,</span>
<span class="p_add">+			   unsigned long attrs);</span>
<span class="p_add">+</span>
 /*
  * Used to do a quick range check in swiotlb_tbl_unmap_single and
  * swiotlb_tbl_sync_single_*, to see if the memory was in fact allocated by this
<span class="p_chunk">@@ -291,7 +297,8 @@</span> <span class="p_context"> error:</span>
 		free_pages((unsigned long)xen_io_tlb_start, order);
 	return rc;
 }
<span class="p_del">-void *</span>
<span class="p_add">+</span>
<span class="p_add">+static void *</span>
 xen_swiotlb_alloc_coherent(struct device *hwdev, size_t size,
 			   dma_addr_t *dma_handle, gfp_t flags,
 			   unsigned long attrs)
<span class="p_chunk">@@ -342,9 +349,8 @@</span> <span class="p_context"> xen_swiotlb_alloc_coherent(struct device *hwdev, size_t size,</span>
 	memset(ret, 0, size);
 	return ret;
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(xen_swiotlb_alloc_coherent);</span>
 
<span class="p_del">-void</span>
<span class="p_add">+static void</span>
 xen_swiotlb_free_coherent(struct device *hwdev, size_t size, void *vaddr,
 			  dma_addr_t dev_addr, unsigned long attrs)
 {
<span class="p_chunk">@@ -365,8 +371,6 @@</span> <span class="p_context"> xen_swiotlb_free_coherent(struct device *hwdev, size_t size, void *vaddr,</span>
 
 	xen_free_coherent_pages(hwdev, size, vaddr, (dma_addr_t)phys, attrs);
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(xen_swiotlb_free_coherent);</span>
<span class="p_del">-</span>
 
 /*
  * Map a single buffer of the indicated size for DMA in streaming mode.  The
<span class="p_chunk">@@ -375,7 +379,7 @@</span> <span class="p_context"> EXPORT_SYMBOL_GPL(xen_swiotlb_free_coherent);</span>
  * Once the device is given the dma address, the device owns this memory until
  * either xen_swiotlb_unmap_page or xen_swiotlb_dma_sync_single is performed.
  */
<span class="p_del">-dma_addr_t xen_swiotlb_map_page(struct device *dev, struct page *page,</span>
<span class="p_add">+static dma_addr_t xen_swiotlb_map_page(struct device *dev, struct page *page,</span>
 				unsigned long offset, size_t size,
 				enum dma_data_direction dir,
 				unsigned long attrs)
<span class="p_chunk">@@ -422,7 +426,6 @@</span> <span class="p_context"> dma_addr_t xen_swiotlb_map_page(struct device *dev, struct page *page,</span>
 	}
 	return dev_addr;
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(xen_swiotlb_map_page);</span>
 
 /*
  * Unmap a single streaming mode DMA translation.  The dma_addr and size must
<span class="p_chunk">@@ -460,13 +463,12 @@</span> <span class="p_context"> static void xen_unmap_single(struct device *hwdev, dma_addr_t dev_addr,</span>
 	dma_mark_clean(phys_to_virt(paddr), size);
 }
 
<span class="p_del">-void xen_swiotlb_unmap_page(struct device *hwdev, dma_addr_t dev_addr,</span>
<span class="p_add">+static void xen_swiotlb_unmap_page(struct device *hwdev, dma_addr_t dev_addr,</span>
 			    size_t size, enum dma_data_direction dir,
 			    unsigned long attrs)
 {
 	xen_unmap_single(hwdev, dev_addr, size, dir, attrs);
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(xen_swiotlb_unmap_page);</span>
 
 /*
  * Make physical memory consistent for a single streaming mode DMA translation
<span class="p_chunk">@@ -503,21 +505,19 @@</span> <span class="p_context"> xen_swiotlb_sync_single(struct device *hwdev, dma_addr_t dev_addr,</span>
 	dma_mark_clean(phys_to_virt(paddr), size);
 }
 
<span class="p_del">-void</span>
<span class="p_add">+static void</span>
 xen_swiotlb_sync_single_for_cpu(struct device *hwdev, dma_addr_t dev_addr,
 				size_t size, enum dma_data_direction dir)
 {
 	xen_swiotlb_sync_single(hwdev, dev_addr, size, dir, SYNC_FOR_CPU);
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(xen_swiotlb_sync_single_for_cpu);</span>
 
<span class="p_del">-void</span>
<span class="p_add">+static void</span>
 xen_swiotlb_sync_single_for_device(struct device *hwdev, dma_addr_t dev_addr,
 				   size_t size, enum dma_data_direction dir)
 {
 	xen_swiotlb_sync_single(hwdev, dev_addr, size, dir, SYNC_FOR_DEVICE);
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(xen_swiotlb_sync_single_for_device);</span>
 
 /*
  * Map a set of buffers described by scatterlist in streaming mode for DMA.
<span class="p_chunk">@@ -535,7 +535,7 @@</span> <span class="p_context"> EXPORT_SYMBOL_GPL(xen_swiotlb_sync_single_for_device);</span>
  * Device ownership issues as mentioned above for xen_swiotlb_map_page are the
  * same here.
  */
<span class="p_del">-int</span>
<span class="p_add">+static int</span>
 xen_swiotlb_map_sg_attrs(struct device *hwdev, struct scatterlist *sgl,
 			 int nelems, enum dma_data_direction dir,
 			 unsigned long attrs)
<span class="p_chunk">@@ -590,13 +590,12 @@</span> <span class="p_context"> xen_swiotlb_map_sg_attrs(struct device *hwdev, struct scatterlist *sgl,</span>
 	}
 	return nelems;
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(xen_swiotlb_map_sg_attrs);</span>
 
 /*
  * Unmap a set of streaming mode DMA translations.  Again, cpu read rules
  * concerning calls here are the same as for swiotlb_unmap_page() above.
  */
<span class="p_del">-void</span>
<span class="p_add">+static void</span>
 xen_swiotlb_unmap_sg_attrs(struct device *hwdev, struct scatterlist *sgl,
 			   int nelems, enum dma_data_direction dir,
 			   unsigned long attrs)
<span class="p_chunk">@@ -610,7 +609,6 @@</span> <span class="p_context"> xen_swiotlb_unmap_sg_attrs(struct device *hwdev, struct scatterlist *sgl,</span>
 		xen_unmap_single(hwdev, sg-&gt;dma_address, sg_dma_len(sg), dir, attrs);
 
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(xen_swiotlb_unmap_sg_attrs);</span>
 
 /*
  * Make physical memory consistent for a set of streaming mode DMA translations
<span class="p_chunk">@@ -632,28 +630,25 @@</span> <span class="p_context"> xen_swiotlb_sync_sg(struct device *hwdev, struct scatterlist *sgl,</span>
 					sg_dma_len(sg), dir, target);
 }
 
<span class="p_del">-void</span>
<span class="p_add">+static void</span>
 xen_swiotlb_sync_sg_for_cpu(struct device *hwdev, struct scatterlist *sg,
 			    int nelems, enum dma_data_direction dir)
 {
 	xen_swiotlb_sync_sg(hwdev, sg, nelems, dir, SYNC_FOR_CPU);
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(xen_swiotlb_sync_sg_for_cpu);</span>
 
<span class="p_del">-void</span>
<span class="p_add">+static void</span>
 xen_swiotlb_sync_sg_for_device(struct device *hwdev, struct scatterlist *sg,
 			       int nelems, enum dma_data_direction dir)
 {
 	xen_swiotlb_sync_sg(hwdev, sg, nelems, dir, SYNC_FOR_DEVICE);
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(xen_swiotlb_sync_sg_for_device);</span>
 
<span class="p_del">-int</span>
<span class="p_add">+static int</span>
 xen_swiotlb_dma_mapping_error(struct device *hwdev, dma_addr_t dma_addr)
 {
 	return !dma_addr;
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(xen_swiotlb_dma_mapping_error);</span>
 
 /*
  * Return whether the given device DMA address mask can be supported
<span class="p_chunk">@@ -661,14 +656,13 @@</span> <span class="p_context"> EXPORT_SYMBOL_GPL(xen_swiotlb_dma_mapping_error);</span>
  * during bus mastering, then you would pass 0x00ffffff as the mask to
  * this function.
  */
<span class="p_del">-int</span>
<span class="p_add">+static int</span>
 xen_swiotlb_dma_supported(struct device *hwdev, u64 mask)
 {
 	return xen_virt_to_bus(xen_io_tlb_end - 1) &lt;= mask;
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(xen_swiotlb_dma_supported);</span>
 
<span class="p_del">-int</span>
<span class="p_add">+static int</span>
 xen_swiotlb_set_dma_mask(struct device *dev, u64 dma_mask)
 {
 	if (!dev-&gt;dma_mask || !xen_swiotlb_dma_supported(dev, dma_mask))
<span class="p_chunk">@@ -678,4 +672,19 @@</span> <span class="p_context"> xen_swiotlb_set_dma_mask(struct device *dev, u64 dma_mask)</span>
 
 	return 0;
 }
<span class="p_del">-EXPORT_SYMBOL_GPL(xen_swiotlb_set_dma_mask);</span>
<span class="p_add">+</span>
<span class="p_add">+struct dma_map_ops xen_swiotlb_dma_ops = {</span>
<span class="p_add">+	.mapping_error = xen_swiotlb_dma_mapping_error,</span>
<span class="p_add">+	.alloc = xen_swiotlb_alloc_coherent,</span>
<span class="p_add">+	.free = xen_swiotlb_free_coherent,</span>
<span class="p_add">+	.sync_single_for_cpu = xen_swiotlb_sync_single_for_cpu,</span>
<span class="p_add">+	.sync_single_for_device = xen_swiotlb_sync_single_for_device,</span>
<span class="p_add">+	.sync_sg_for_cpu = xen_swiotlb_sync_sg_for_cpu,</span>
<span class="p_add">+	.sync_sg_for_device = xen_swiotlb_sync_sg_for_device,</span>
<span class="p_add">+	.map_sg = xen_swiotlb_map_sg_attrs,</span>
<span class="p_add">+	.unmap_sg = xen_swiotlb_unmap_sg_attrs,</span>
<span class="p_add">+	.map_page = xen_swiotlb_map_page,</span>
<span class="p_add">+	.unmap_page = xen_swiotlb_unmap_page,</span>
<span class="p_add">+	.dma_supported = xen_swiotlb_dma_supported,</span>
<span class="p_add">+	.set_dma_mask = xen_swiotlb_set_dma_mask,</span>
<span class="p_add">+};</span>
<span class="p_header">diff --git a/include/xen/swiotlb-xen.h b/include/xen/swiotlb-xen.h</span>
<span class="p_header">index 7c35e27..0e44f26 100644</span>
<span class="p_header">--- a/include/xen/swiotlb-xen.h</span>
<span class="p_header">+++ b/include/xen/swiotlb-xen.h</span>
<span class="p_chunk">@@ -1,61 +1,11 @@</span> <span class="p_context"></span>
 #ifndef __LINUX_SWIOTLB_XEN_H
 #define __LINUX_SWIOTLB_XEN_H
 
<span class="p_del">-#include &lt;linux/dma-direction.h&gt;</span>
<span class="p_add">+#include &lt;linux/dma-mapping.h&gt;</span>
 #include &lt;linux/swiotlb.h&gt;
 
 extern int xen_swiotlb_init(int verbose, bool early);
 
<span class="p_del">-extern void</span>
<span class="p_del">-*xen_swiotlb_alloc_coherent(struct device *hwdev, size_t size,</span>
<span class="p_del">-			    dma_addr_t *dma_handle, gfp_t flags,</span>
<span class="p_del">-			    unsigned long attrs);</span>
<span class="p_add">+extern struct dma_map_ops xen_swiotlb_dma_ops;</span>
 
<span class="p_del">-extern void</span>
<span class="p_del">-xen_swiotlb_free_coherent(struct device *hwdev, size_t size,</span>
<span class="p_del">-			  void *vaddr, dma_addr_t dma_handle,</span>
<span class="p_del">-			  unsigned long attrs);</span>
<span class="p_del">-</span>
<span class="p_del">-extern dma_addr_t xen_swiotlb_map_page(struct device *dev, struct page *page,</span>
<span class="p_del">-				       unsigned long offset, size_t size,</span>
<span class="p_del">-				       enum dma_data_direction dir,</span>
<span class="p_del">-				       unsigned long attrs);</span>
<span class="p_del">-</span>
<span class="p_del">-extern void xen_swiotlb_unmap_page(struct device *hwdev, dma_addr_t dev_addr,</span>
<span class="p_del">-				   size_t size, enum dma_data_direction dir,</span>
<span class="p_del">-				   unsigned long attrs);</span>
<span class="p_del">-extern int</span>
<span class="p_del">-xen_swiotlb_map_sg_attrs(struct device *hwdev, struct scatterlist *sgl,</span>
<span class="p_del">-			 int nelems, enum dma_data_direction dir,</span>
<span class="p_del">-			 unsigned long attrs);</span>
<span class="p_del">-</span>
<span class="p_del">-extern void</span>
<span class="p_del">-xen_swiotlb_unmap_sg_attrs(struct device *hwdev, struct scatterlist *sgl,</span>
<span class="p_del">-			   int nelems, enum dma_data_direction dir,</span>
<span class="p_del">-			   unsigned long attrs);</span>
<span class="p_del">-</span>
<span class="p_del">-extern void</span>
<span class="p_del">-xen_swiotlb_sync_single_for_cpu(struct device *hwdev, dma_addr_t dev_addr,</span>
<span class="p_del">-				size_t size, enum dma_data_direction dir);</span>
<span class="p_del">-</span>
<span class="p_del">-extern void</span>
<span class="p_del">-xen_swiotlb_sync_sg_for_cpu(struct device *hwdev, struct scatterlist *sg,</span>
<span class="p_del">-			    int nelems, enum dma_data_direction dir);</span>
<span class="p_del">-</span>
<span class="p_del">-extern void</span>
<span class="p_del">-xen_swiotlb_sync_single_for_device(struct device *hwdev, dma_addr_t dev_addr,</span>
<span class="p_del">-				   size_t size, enum dma_data_direction dir);</span>
<span class="p_del">-</span>
<span class="p_del">-extern void</span>
<span class="p_del">-xen_swiotlb_sync_sg_for_device(struct device *hwdev, struct scatterlist *sg,</span>
<span class="p_del">-			       int nelems, enum dma_data_direction dir);</span>
<span class="p_del">-</span>
<span class="p_del">-extern int</span>
<span class="p_del">-xen_swiotlb_dma_mapping_error(struct device *hwdev, dma_addr_t dma_addr);</span>
<span class="p_del">-</span>
<span class="p_del">-extern int</span>
<span class="p_del">-xen_swiotlb_dma_supported(struct device *hwdev, u64 mask);</span>
<span class="p_del">-</span>
<span class="p_del">-extern int</span>
<span class="p_del">-xen_swiotlb_set_dma_mask(struct device *dev, u64 dma_mask);</span>
 #endif /* __LINUX_SWIOTLB_XEN_H */

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



