
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC] mm: rework virtual memory accounting - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC] mm: rework virtual memory accounting</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=80221">Konstantin Khlebnikov</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 14, 2015, 8:12 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;145008075795.15926.4661774822205839673.stgit@zurg&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7841991/mbox/"
   >mbox</a>
|
   <a href="/patch/7841991/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7841991/">/patch/7841991/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 0D67FBEEE1
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 14 Dec 2015 08:12:52 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id AD953203AC
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 14 Dec 2015 08:12:50 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 0A591203C3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 14 Dec 2015 08:12:49 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752774AbbLNIMp (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 14 Dec 2015 03:12:45 -0500
Received: from mail-lb0-f182.google.com ([209.85.217.182]:32907 &quot;EHLO
	mail-lb0-f182.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751783AbbLNIMo (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 14 Dec 2015 03:12:44 -0500
Received: by lbbkw15 with SMTP id kw15so101201002lbb.0
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Mon, 14 Dec 2015 00:12:42 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=subject:from:to:date:message-id:in-reply-to:references:user-agent
	:mime-version:content-type:content-transfer-encoding;
	bh=rK6nlob8ThFQA0OfDi3QH2ZxQmOriDygLc5aowtxfRg=;
	b=mkT04EvOKhhGIf0GkBQ6s5myiNDTniXuAEqbEAGSOl+Cc14e44yMDfL2IkYDPMrwxi
	614CakXuhjDM5B4ZXQangaNV/PpiLbYr4RJPtAIpTcQjCRQcWqVwoMDbkq5PC0WpW7bp
	A6DpTk2glVRs8Up8Ag4YeVtGxnhM/M2dzDSrGe2ne/SXLQYDWKBw6wuafNWyS/tI4Cq/
	31xKQQdGLwKN2nOPgzXd4eBBhTRzJuJnwdhmuKDcqFkoB1MuBTeNCLk4roLWeIt6H3xU
	OE5j1bo4h2AWaeUdkzjEBpUfl511R22c0sAvI/ZxTxF5+SRMzUrJS9XtASUrBnn/hst3
	PpFQ==
X-Received: by 10.112.150.102 with SMTP id uh6mr12381923lbb.16.1450080762335;
	Mon, 14 Dec 2015 00:12:42 -0800 (PST)
Received: from localhost (ppp79-139-147-94.pppoe.spdop.ru. [79.139.147.94])
	by smtp.gmail.com with ESMTPSA id
	tm7sm5246537lbb.38.2015.12.14.00.12.40
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Mon, 14 Dec 2015 00:12:41 -0800 (PST)
Subject: [PATCH RFC] mm: rework virtual memory accounting
From: Konstantin Khlebnikov &lt;koct9i@gmail.com&gt;
To: Cyrill Gorcunov &lt;gorcunov@openvz.org&gt;, linux-mm@kvack.org,
	linux-kernel@vger.kernel.org
Date: Mon, 14 Dec 2015 11:12:38 +0300
Message-ID: &lt;145008075795.15926.4661774822205839673.stgit@zurg&gt;
In-Reply-To: &lt;CALYGNiMTkhb1EeojxvarVOh2q4SGqtKuYU_gv4V+vQ1XocPZ8w@mail.gmail.com&gt;
References: &lt;CALYGNiMTkhb1EeojxvarVOh2q4SGqtKuYU_gv4V+vQ1XocPZ8w@mail.gmail.com&gt;
User-Agent: StGit/0.17.1-dirty
MIME-Version: 1.0
Content-Type: text/plain; charset=&quot;utf-8&quot;
Content-Transfer-Encoding: 7bit
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.8 required=5.0 tests=BAYES_00,
	DKIM_ADSP_CUSTOM_MED, 
	DKIM_SIGNED, FREEMAIL_FROM, RCVD_IN_DNSWL_HI, T_DKIM_INVALID,
	T_RP_MATCHES_RCVD, 
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=80221">Konstantin Khlebnikov</a> - Dec. 14, 2015, 8:12 a.m.</div>
<pre class="content">
Here several rated changes bundled together:
* keep vma counting if CONFIG_PROC_FS=n, will be used for limits
* replace mm-&gt;shared_vm with better defined mm-&gt;data_vm
* account anonymous executable areas as executable
* account file-backed growsdown/up areas as stack
* drop struct file* argument from vm_stat_account
* enforce RLIMIT_DATA for size of data areas

This way code looks cleaner: now code/stack/data
classification depends only on vm_flags state:

VM_EXEC &amp; ~VM_WRITE -&gt; code (VmExe + VmLib in proc)
VM_GROWSUP | VM_GROWSDOWN -&gt; stack (VmStk)
VM_WRITE &amp; ~VM_SHARED &amp; !stack -&gt; data (VmData)

The rest (VmSize - VmData - VmStk - VmExe - VmLib) could be called &quot;shared&quot;,
but that might be strange beasts like readonly-private or VM_IO areas.

RLIMIT_AS limits whole address space &quot;VmSize&quot;
RLIMIT_STACK limits stack &quot;VmStk&quot; (but each vma individually)
RLIMIT_DATA now limits &quot;VmData&quot;
<span class="signed-off-by">
Signed-off-by: Konstantin Khlebnikov &lt;koct9i@gmail.com&gt;</span>
---
 arch/ia64/kernel/perfmon.c |    3 +-
 fs/proc/task_mmu.c         |    7 ++---
 include/linux/mm.h         |   13 ++-------
 include/linux/mm_types.h   |    2 +
 kernel/fork.c              |    5 +--
 mm/debug.c                 |    4 +--
 mm/mmap.c                  |   63 ++++++++++++++++++++++----------------------
 mm/mprotect.c              |    8 ++++--
 mm/mremap.c                |    7 +++--
 9 files changed, 53 insertions(+), 59 deletions(-)


--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7">Cyrill Gorcunov</a> - Dec. 14, 2015, 9:08 a.m.</div>
<pre class="content">
On Mon, Dec 14, 2015 at 11:12:38AM +0300, Konstantin Khlebnikov wrote:
<span class="quote">&gt; Here several rated changes bundled together:</span>
<span class="quote">&gt; * keep vma counting if CONFIG_PROC_FS=n, will be used for limits</span>
<span class="quote">&gt; * replace mm-&gt;shared_vm with better defined mm-&gt;data_vm</span>
<span class="quote">&gt; * account anonymous executable areas as executable</span>
<span class="quote">&gt; * account file-backed growsdown/up areas as stack</span>
<span class="quote">&gt; * drop struct file* argument from vm_stat_account</span>
<span class="quote">&gt; * enforce RLIMIT_DATA for size of data areas</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This way code looks cleaner: now code/stack/data</span>
<span class="quote">&gt; classification depends only on vm_flags state:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; VM_EXEC &amp; ~VM_WRITE -&gt; code (VmExe + VmLib in proc)</span>
<span class="quote">&gt; VM_GROWSUP | VM_GROWSDOWN -&gt; stack (VmStk)</span>
<span class="quote">&gt; VM_WRITE &amp; ~VM_SHARED &amp; !stack -&gt; data (VmData)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The rest (VmSize - VmData - VmStk - VmExe - VmLib) could be called &quot;shared&quot;,</span>
<span class="quote">&gt; but that might be strange beasts like readonly-private or VM_IO areas.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; RLIMIT_AS limits whole address space &quot;VmSize&quot;</span>
<span class="quote">&gt; RLIMIT_STACK limits stack &quot;VmStk&quot; (but each vma individually)</span>
<span class="quote">&gt; RLIMIT_DATA now limits &quot;VmData&quot;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Konstantin Khlebnikov &lt;koct9i@gmail.com&gt;</span>

Looks OK to me. Lets wait for Linus&#39; opinion.
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/ia64/kernel/perfmon.c b/arch/ia64/kernel/perfmon.c</span>
<span class="p_header">index 60e02f7747ff..9cd607b06964 100644</span>
<span class="p_header">--- a/arch/ia64/kernel/perfmon.c</span>
<span class="p_header">+++ b/arch/ia64/kernel/perfmon.c</span>
<span class="p_chunk">@@ -2332,8 +2332,7 @@</span> <span class="p_context"> pfm_smpl_buffer_alloc(struct task_struct *task, struct file *filp, pfm_context_t</span>
 	 */
 	insert_vm_struct(mm, vma);
 
<span class="p_del">-	vm_stat_account(vma-&gt;vm_mm, vma-&gt;vm_flags, vma-&gt;vm_file,</span>
<span class="p_del">-							vma_pages(vma));</span>
<span class="p_add">+	vm_stat_account(vma-&gt;vm_mm, vma-&gt;vm_flags, vma_pages(vma));</span>
 	up_write(&amp;task-&gt;mm-&gt;mmap_sem);
 
 	/*
<span class="p_header">diff --git a/fs/proc/task_mmu.c b/fs/proc/task_mmu.c</span>
<span class="p_header">index 187b3b5f242e..58e73af17af9 100644</span>
<span class="p_header">--- a/fs/proc/task_mmu.c</span>
<span class="p_header">+++ b/fs/proc/task_mmu.c</span>
<span class="p_chunk">@@ -22,7 +22,7 @@</span> <span class="p_context"></span>
 
 void task_mem(struct seq_file *m, struct mm_struct *mm)
 {
<span class="p_del">-	unsigned long data, text, lib, swap, ptes, pmds;</span>
<span class="p_add">+	unsigned long text, lib, swap, ptes, pmds;</span>
 	unsigned long hiwater_vm, total_vm, hiwater_rss, total_rss;
 
 	/*
<span class="p_chunk">@@ -39,7 +39,6 @@</span> <span class="p_context"> void task_mem(struct seq_file *m, struct mm_struct *mm)</span>
 	if (hiwater_rss &lt; mm-&gt;hiwater_rss)
 		hiwater_rss = mm-&gt;hiwater_rss;
 
<span class="p_del">-	data = mm-&gt;total_vm - mm-&gt;shared_vm - mm-&gt;stack_vm;</span>
 	text = (PAGE_ALIGN(mm-&gt;end_code) - (mm-&gt;start_code &amp; PAGE_MASK)) &gt;&gt; 10;
 	lib = (mm-&gt;exec_vm &lt;&lt; (PAGE_SHIFT-10)) - text;
 	swap = get_mm_counter(mm, MM_SWAPENTS);
<span class="p_chunk">@@ -65,7 +64,7 @@</span> <span class="p_context"> void task_mem(struct seq_file *m, struct mm_struct *mm)</span>
 		mm-&gt;pinned_vm &lt;&lt; (PAGE_SHIFT-10),
 		hiwater_rss &lt;&lt; (PAGE_SHIFT-10),
 		total_rss &lt;&lt; (PAGE_SHIFT-10),
<span class="p_del">-		data &lt;&lt; (PAGE_SHIFT-10),</span>
<span class="p_add">+		mm-&gt;data_vm &lt;&lt; (PAGE_SHIFT-10),</span>
 		mm-&gt;stack_vm &lt;&lt; (PAGE_SHIFT-10), text, lib,
 		ptes &gt;&gt; 10,
 		pmds &gt;&gt; 10,
<span class="p_chunk">@@ -85,7 +84,7 @@</span> <span class="p_context"> unsigned long task_statm(struct mm_struct *mm,</span>
 	*shared = get_mm_counter(mm, MM_FILEPAGES);
 	*text = (PAGE_ALIGN(mm-&gt;end_code) - (mm-&gt;start_code &amp; PAGE_MASK))
 								&gt;&gt; PAGE_SHIFT;
<span class="p_del">-	*data = mm-&gt;total_vm - mm-&gt;shared_vm;</span>
<span class="p_add">+	*data = mm-&gt;data_vm + mm-&gt;stack_vm;</span>
 	*resident = *shared + get_mm_counter(mm, MM_ANONPAGES);
 	return mm-&gt;total_vm;
 }
<span class="p_header">diff --git a/include/linux/mm.h b/include/linux/mm.h</span>
<span class="p_header">index 00bad7793788..6816a48b6542 100644</span>
<span class="p_header">--- a/include/linux/mm.h</span>
<span class="p_header">+++ b/include/linux/mm.h</span>
<span class="p_chunk">@@ -1898,7 +1898,9 @@</span> <span class="p_context"> extern void mm_drop_all_locks(struct mm_struct *mm);</span>
 extern void set_mm_exe_file(struct mm_struct *mm, struct file *new_exe_file);
 extern struct file *get_mm_exe_file(struct mm_struct *mm);
 
<span class="p_del">-extern int may_expand_vm(struct mm_struct *mm, unsigned long npages);</span>
<span class="p_add">+extern bool may_expand_vm(struct mm_struct *, vm_flags_t, unsigned long npages);</span>
<span class="p_add">+extern void vm_stat_account(struct mm_struct *, vm_flags_t, long npages);</span>
<span class="p_add">+</span>
 extern struct vm_area_struct *_install_special_mapping(struct mm_struct *mm,
 				   unsigned long addr, unsigned long len,
 				   unsigned long flags,
<span class="p_chunk">@@ -2116,15 +2118,6 @@</span> <span class="p_context"> typedef int (*pte_fn_t)(pte_t *pte, pgtable_t token, unsigned long addr,</span>
 extern int apply_to_page_range(struct mm_struct *mm, unsigned long address,
 			       unsigned long size, pte_fn_t fn, void *data);
 
<span class="p_del">-#ifdef CONFIG_PROC_FS</span>
<span class="p_del">-void vm_stat_account(struct mm_struct *, unsigned long, struct file *, long);</span>
<span class="p_del">-#else</span>
<span class="p_del">-static inline void vm_stat_account(struct mm_struct *mm,</span>
<span class="p_del">-			unsigned long flags, struct file *file, long pages)</span>
<span class="p_del">-{</span>
<span class="p_del">-	mm-&gt;total_vm += pages;</span>
<span class="p_del">-}</span>
<span class="p_del">-#endif /* CONFIG_PROC_FS */</span>
 
 #ifdef CONFIG_DEBUG_PAGEALLOC
 extern bool _debug_pagealloc_enabled;
<span class="p_header">diff --git a/include/linux/mm_types.h b/include/linux/mm_types.h</span>
<span class="p_header">index f8d1492a114f..fa114a255b11 100644</span>
<span class="p_header">--- a/include/linux/mm_types.h</span>
<span class="p_header">+++ b/include/linux/mm_types.h</span>
<span class="p_chunk">@@ -426,7 +426,7 @@</span> <span class="p_context"> struct mm_struct {</span>
 	unsigned long total_vm;		/* Total pages mapped */
 	unsigned long locked_vm;	/* Pages that have PG_mlocked set */
 	unsigned long pinned_vm;	/* Refcount permanently increased */
<span class="p_del">-	unsigned long shared_vm;	/* Shared pages (files) */</span>
<span class="p_add">+	unsigned long data_vm;		/* VM_WRITE &amp; ~VM_SHARED/GROWSDOWN */</span>
 	unsigned long exec_vm;		/* VM_EXEC &amp; ~VM_WRITE */
 	unsigned long stack_vm;		/* VM_GROWSUP/DOWN */
 	unsigned long def_flags;
<span class="p_header">diff --git a/kernel/fork.c b/kernel/fork.c</span>
<span class="p_header">index fce002ee3ddf..1205601c2174 100644</span>
<span class="p_header">--- a/kernel/fork.c</span>
<span class="p_header">+++ b/kernel/fork.c</span>
<span class="p_chunk">@@ -413,7 +413,7 @@</span> <span class="p_context"> static int dup_mmap(struct mm_struct *mm, struct mm_struct *oldmm)</span>
 	RCU_INIT_POINTER(mm-&gt;exe_file, get_mm_exe_file(oldmm));
 
 	mm-&gt;total_vm = oldmm-&gt;total_vm;
<span class="p_del">-	mm-&gt;shared_vm = oldmm-&gt;shared_vm;</span>
<span class="p_add">+	mm-&gt;data_vm = oldmm-&gt;data_vm;</span>
 	mm-&gt;exec_vm = oldmm-&gt;exec_vm;
 	mm-&gt;stack_vm = oldmm-&gt;stack_vm;
 
<span class="p_chunk">@@ -432,8 +432,7 @@</span> <span class="p_context"> static int dup_mmap(struct mm_struct *mm, struct mm_struct *oldmm)</span>
 		struct file *file;
 
 		if (mpnt-&gt;vm_flags &amp; VM_DONTCOPY) {
<span class="p_del">-			vm_stat_account(mm, mpnt-&gt;vm_flags, mpnt-&gt;vm_file,</span>
<span class="p_del">-							-vma_pages(mpnt));</span>
<span class="p_add">+			vm_stat_account(mm, mpnt-&gt;vm_flags, -vma_pages(mpnt));</span>
 			continue;
 		}
 		charge = 0;
<span class="p_header">diff --git a/mm/debug.c b/mm/debug.c</span>
<span class="p_header">index 668aa35191ca..5d2072ed8d5e 100644</span>
<span class="p_header">--- a/mm/debug.c</span>
<span class="p_header">+++ b/mm/debug.c</span>
<span class="p_chunk">@@ -175,7 +175,7 @@</span> <span class="p_context"> void dump_mm(const struct mm_struct *mm)</span>
 		&quot;mmap_base %lu mmap_legacy_base %lu highest_vm_end %lu\n&quot;
 		&quot;pgd %p mm_users %d mm_count %d nr_ptes %lu nr_pmds %lu map_count %d\n&quot;
 		&quot;hiwater_rss %lx hiwater_vm %lx total_vm %lx locked_vm %lx\n&quot;
<span class="p_del">-		&quot;pinned_vm %lx shared_vm %lx exec_vm %lx stack_vm %lx\n&quot;</span>
<span class="p_add">+		&quot;pinned_vm %lx data_vm %lx exec_vm %lx stack_vm %lx\n&quot;</span>
 		&quot;start_code %lx end_code %lx start_data %lx end_data %lx\n&quot;
 		&quot;start_brk %lx brk %lx start_stack %lx\n&quot;
 		&quot;arg_start %lx arg_end %lx env_start %lx env_end %lx\n&quot;
<span class="p_chunk">@@ -209,7 +209,7 @@</span> <span class="p_context"> void dump_mm(const struct mm_struct *mm)</span>
 		mm_nr_pmds((struct mm_struct *)mm),
 		mm-&gt;map_count,
 		mm-&gt;hiwater_rss, mm-&gt;hiwater_vm, mm-&gt;total_vm, mm-&gt;locked_vm,
<span class="p_del">-		mm-&gt;pinned_vm, mm-&gt;shared_vm, mm-&gt;exec_vm, mm-&gt;stack_vm,</span>
<span class="p_add">+		mm-&gt;pinned_vm, mm-&gt;data_vm, mm-&gt;exec_vm, mm-&gt;stack_vm,</span>
 		mm-&gt;start_code, mm-&gt;end_code, mm-&gt;start_data, mm-&gt;end_data,
 		mm-&gt;start_brk, mm-&gt;brk, mm-&gt;start_stack,
 		mm-&gt;arg_start, mm-&gt;arg_end, mm-&gt;env_start, mm-&gt;env_end,
<span class="p_header">diff --git a/mm/mmap.c b/mm/mmap.c</span>
<span class="p_header">index 2ce04a649f6b..e38f9d4af9c8 100644</span>
<span class="p_header">--- a/mm/mmap.c</span>
<span class="p_header">+++ b/mm/mmap.c</span>
<span class="p_chunk">@@ -1208,24 +1208,6 @@</span> <span class="p_context"> none:</span>
 	return NULL;
 }
 
<span class="p_del">-#ifdef CONFIG_PROC_FS</span>
<span class="p_del">-void vm_stat_account(struct mm_struct *mm, unsigned long flags,</span>
<span class="p_del">-						struct file *file, long pages)</span>
<span class="p_del">-{</span>
<span class="p_del">-	const unsigned long stack_flags</span>
<span class="p_del">-		= VM_STACK_FLAGS &amp; (VM_GROWSUP|VM_GROWSDOWN);</span>
<span class="p_del">-</span>
<span class="p_del">-	mm-&gt;total_vm += pages;</span>
<span class="p_del">-</span>
<span class="p_del">-	if (file) {</span>
<span class="p_del">-		mm-&gt;shared_vm += pages;</span>
<span class="p_del">-		if ((flags &amp; (VM_EXEC|VM_WRITE)) == VM_EXEC)</span>
<span class="p_del">-			mm-&gt;exec_vm += pages;</span>
<span class="p_del">-	} else if (flags &amp; stack_flags)</span>
<span class="p_del">-		mm-&gt;stack_vm += pages;</span>
<span class="p_del">-}</span>
<span class="p_del">-#endif /* CONFIG_PROC_FS */</span>
<span class="p_del">-</span>
 /*
  * If a hint addr is less than mmap_min_addr change hint to be as
  * low as possible but still greater than mmap_min_addr
<span class="p_chunk">@@ -1544,7 +1526,7 @@</span> <span class="p_context"> unsigned long mmap_region(struct file *file, unsigned long addr,</span>
 	unsigned long charged = 0;
 
 	/* Check against address space limit. */
<span class="p_del">-	if (!may_expand_vm(mm, len &gt;&gt; PAGE_SHIFT)) {</span>
<span class="p_add">+	if (!may_expand_vm(mm, vm_flags, len &gt;&gt; PAGE_SHIFT)) {</span>
 		unsigned long nr_pages;
 
 		/*
<span class="p_chunk">@@ -1556,7 +1538,8 @@</span> <span class="p_context"> unsigned long mmap_region(struct file *file, unsigned long addr,</span>
 
 		nr_pages = count_vma_pages_range(mm, addr, addr + len);
 
<span class="p_del">-		if (!may_expand_vm(mm, (len &gt;&gt; PAGE_SHIFT) - nr_pages))</span>
<span class="p_add">+		if (!may_expand_vm(mm, vm_flags,</span>
<span class="p_add">+					(len &gt;&gt; PAGE_SHIFT) - nr_pages))</span>
 			return -ENOMEM;
 	}
 
<span class="p_chunk">@@ -1655,7 +1638,7 @@</span> <span class="p_context"> unsigned long mmap_region(struct file *file, unsigned long addr,</span>
 out:
 	perf_event_mmap(vma);
 
<span class="p_del">-	vm_stat_account(mm, vm_flags, file, len &gt;&gt; PAGE_SHIFT);</span>
<span class="p_add">+	vm_stat_account(mm, vm_flags, len &gt;&gt; PAGE_SHIFT);</span>
 	if (vm_flags &amp; VM_LOCKED) {
 		if (!((vm_flags &amp; VM_SPECIAL) || is_vm_hugetlb_page(vma) ||
 					vma == get_gate_vma(current-&gt;mm)))
<span class="p_chunk">@@ -2102,7 +2085,7 @@</span> <span class="p_context"> static int acct_stack_growth(struct vm_area_struct *vma, unsigned long size, uns</span>
 	unsigned long new_start, actual_size;
 
 	/* address space limit tests */
<span class="p_del">-	if (!may_expand_vm(mm, grow))</span>
<span class="p_add">+	if (!may_expand_vm(mm, vma-&gt;vm_flags, grow))</span>
 		return -ENOMEM;
 
 	/* Stack limit test */
<span class="p_chunk">@@ -2199,8 +2182,7 @@</span> <span class="p_context"> int expand_upwards(struct vm_area_struct *vma, unsigned long address)</span>
 				spin_lock(&amp;mm-&gt;page_table_lock);
 				if (vma-&gt;vm_flags &amp; VM_LOCKED)
 					mm-&gt;locked_vm += grow;
<span class="p_del">-				vm_stat_account(mm, vma-&gt;vm_flags,</span>
<span class="p_del">-						vma-&gt;vm_file, grow);</span>
<span class="p_add">+				vm_stat_account(mm, vma-&gt;vm_flags, grow);</span>
 				anon_vma_interval_tree_pre_update_vma(vma);
 				vma-&gt;vm_end = address;
 				anon_vma_interval_tree_post_update_vma(vma);
<span class="p_chunk">@@ -2275,8 +2257,7 @@</span> <span class="p_context"> int expand_downwards(struct vm_area_struct *vma,</span>
 				spin_lock(&amp;mm-&gt;page_table_lock);
 				if (vma-&gt;vm_flags &amp; VM_LOCKED)
 					mm-&gt;locked_vm += grow;
<span class="p_del">-				vm_stat_account(mm, vma-&gt;vm_flags,</span>
<span class="p_del">-						vma-&gt;vm_file, grow);</span>
<span class="p_add">+				vm_stat_account(mm, vma-&gt;vm_flags, grow);</span>
 				anon_vma_interval_tree_pre_update_vma(vma);
 				vma-&gt;vm_start = address;
 				vma-&gt;vm_pgoff -= grow;
<span class="p_chunk">@@ -2390,7 +2371,7 @@</span> <span class="p_context"> static void remove_vma_list(struct mm_struct *mm, struct vm_area_struct *vma)</span>
 
 		if (vma-&gt;vm_flags &amp; VM_ACCOUNT)
 			nr_accounted += nrpages;
<span class="p_del">-		vm_stat_account(mm, vma-&gt;vm_flags, vma-&gt;vm_file, -nrpages);</span>
<span class="p_add">+		vm_stat_account(mm, vma-&gt;vm_flags, -nrpages);</span>
 		vma = remove_vma(vma);
 	} while (vma);
 	vm_unacct_memory(nr_accounted);
<span class="p_chunk">@@ -2760,7 +2741,7 @@</span> <span class="p_context"> static unsigned long do_brk(unsigned long addr, unsigned long len)</span>
 	}
 
 	/* Check against address space limits *after* clearing old maps... */
<span class="p_del">-	if (!may_expand_vm(mm, len &gt;&gt; PAGE_SHIFT))</span>
<span class="p_add">+	if (!may_expand_vm(mm, flags, len &gt;&gt; PAGE_SHIFT))</span>
 		return -ENOMEM;
 
 	if (mm-&gt;map_count &gt; sysctl_max_map_count)
<span class="p_chunk">@@ -2795,6 +2776,7 @@</span> <span class="p_context"> static unsigned long do_brk(unsigned long addr, unsigned long len)</span>
 out:
 	perf_event_mmap(vma);
 	mm-&gt;total_vm += len &gt;&gt; PAGE_SHIFT;
<span class="p_add">+	mm-&gt;data_vm += len &gt;&gt; PAGE_SHIFT;</span>
 	if (flags &amp; VM_LOCKED)
 		mm-&gt;locked_vm += (len &gt;&gt; PAGE_SHIFT);
 	vma-&gt;vm_flags |= VM_SOFTDIRTY;
<span class="p_chunk">@@ -2986,7 +2968,7 @@</span> <span class="p_context"> out:</span>
  * Return true if the calling process may expand its vm space by the passed
  * number of pages
  */
<span class="p_del">-int may_expand_vm(struct mm_struct *mm, unsigned long npages)</span>
<span class="p_add">+bool may_expand_vm(struct mm_struct *mm, vm_flags_t flags, unsigned long npages)</span>
 {
 	unsigned long cur = mm-&gt;total_vm;	/* pages */
 	unsigned long lim;
<span class="p_chunk">@@ -2994,8 +2976,25 @@</span> <span class="p_context"> int may_expand_vm(struct mm_struct *mm, unsigned long npages)</span>
 	lim = rlimit(RLIMIT_AS) &gt;&gt; PAGE_SHIFT;
 
 	if (cur + npages &gt; lim)
<span class="p_del">-		return 0;</span>
<span class="p_del">-	return 1;</span>
<span class="p_add">+		return false;</span>
<span class="p_add">+</span>
<span class="p_add">+	if ((flags &amp; (VM_WRITE | VM_SHARED | (VM_STACK_FLAGS &amp;</span>
<span class="p_add">+				(VM_GROWSUP | VM_GROWSDOWN)))) == VM_WRITE)</span>
<span class="p_add">+		return mm-&gt;data_vm + npages &lt;= rlimit(RLIMIT_DATA);</span>
<span class="p_add">+</span>
<span class="p_add">+	return true;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+void vm_stat_account(struct mm_struct *mm, vm_flags_t flags, long npages)</span>
<span class="p_add">+{</span>
<span class="p_add">+	mm-&gt;total_vm += npages;</span>
<span class="p_add">+</span>
<span class="p_add">+	if ((flags &amp; (VM_EXEC | VM_WRITE)) == VM_EXEC)</span>
<span class="p_add">+		mm-&gt;exec_vm += npages;</span>
<span class="p_add">+	else if (flags &amp; (VM_STACK_FLAGS &amp; (VM_GROWSUP | VM_GROWSDOWN)))</span>
<span class="p_add">+		mm-&gt;stack_vm += npages;</span>
<span class="p_add">+	else if ((flags &amp; (VM_WRITE | VM_SHARED)) == VM_WRITE)</span>
<span class="p_add">+		mm-&gt;data_vm += npages;</span>
 }
 
 static int special_mapping_fault(struct vm_area_struct *vma,
<span class="p_chunk">@@ -3077,7 +3076,7 @@</span> <span class="p_context"> static struct vm_area_struct *__install_special_mapping(</span>
 	if (ret)
 		goto out;
 
<span class="p_del">-	mm-&gt;total_vm += len &gt;&gt; PAGE_SHIFT;</span>
<span class="p_add">+	vm_stat_account(mm, vma-&gt;vm_flags, len &gt;&gt; PAGE_SHIFT);</span>
 
 	perf_event_mmap(vma);
 
<span class="p_header">diff --git a/mm/mprotect.c b/mm/mprotect.c</span>
<span class="p_header">index ef5be8eaab00..c764402c464f 100644</span>
<span class="p_header">--- a/mm/mprotect.c</span>
<span class="p_header">+++ b/mm/mprotect.c</span>
<span class="p_chunk">@@ -278,6 +278,10 @@</span> <span class="p_context"> mprotect_fixup(struct vm_area_struct *vma, struct vm_area_struct **pprev,</span>
 	 * even if read-only so there is no need to account for them here
 	 */
 	if (newflags &amp; VM_WRITE) {
<span class="p_add">+		/* Check space limits when area turns into data. */</span>
<span class="p_add">+		if (!may_expand_vm(mm, newflags, nrpages) &amp;&amp;</span>
<span class="p_add">+				may_expand_vm(mm, oldflags, nrpages))</span>
<span class="p_add">+			return -ENOMEM;</span>
 		if (!(oldflags &amp; (VM_ACCOUNT|VM_WRITE|VM_HUGETLB|
 						VM_SHARED|VM_NORESERVE))) {
 			charged = nrpages;
<span class="p_chunk">@@ -334,8 +338,8 @@</span> <span class="p_context"> success:</span>
 		populate_vma_page_range(vma, start, end, NULL);
 	}
 
<span class="p_del">-	vm_stat_account(mm, oldflags, vma-&gt;vm_file, -nrpages);</span>
<span class="p_del">-	vm_stat_account(mm, newflags, vma-&gt;vm_file, nrpages);</span>
<span class="p_add">+	vm_stat_account(mm, oldflags, -nrpages);</span>
<span class="p_add">+	vm_stat_account(mm, newflags, nrpages);</span>
 	perf_event_mmap(vma);
 	return 0;
 
<span class="p_header">diff --git a/mm/mremap.c b/mm/mremap.c</span>
<span class="p_header">index c25bc6268e46..4fe3248426d1 100644</span>
<span class="p_header">--- a/mm/mremap.c</span>
<span class="p_header">+++ b/mm/mremap.c</span>
<span class="p_chunk">@@ -317,7 +317,7 @@</span> <span class="p_context"> static unsigned long move_vma(struct vm_area_struct *vma,</span>
 	 * If this were a serious issue, we&#39;d add a flag to do_munmap().
 	 */
 	hiwater_vm = mm-&gt;hiwater_vm;
<span class="p_del">-	vm_stat_account(mm, vma-&gt;vm_flags, vma-&gt;vm_file, new_len&gt;&gt;PAGE_SHIFT);</span>
<span class="p_add">+	vm_stat_account(mm, vma-&gt;vm_flags, new_len &gt;&gt; PAGE_SHIFT);</span>
 
 	if (do_munmap(mm, old_addr, old_len) &lt; 0) {
 		/* OOM: unable to split vma, just get accounts right */
<span class="p_chunk">@@ -379,7 +379,8 @@</span> <span class="p_context"> static struct vm_area_struct *vma_to_resize(unsigned long addr,</span>
 			return ERR_PTR(-EAGAIN);
 	}
 
<span class="p_del">-	if (!may_expand_vm(mm, (new_len - old_len) &gt;&gt; PAGE_SHIFT))</span>
<span class="p_add">+	if (!may_expand_vm(mm, vma-&gt;vm_flags,</span>
<span class="p_add">+				(new_len - old_len) &gt;&gt; PAGE_SHIFT))</span>
 		return ERR_PTR(-ENOMEM);
 
 	if (vma-&gt;vm_flags &amp; VM_ACCOUNT) {
<span class="p_chunk">@@ -541,7 +542,7 @@</span> <span class="p_context"> SYSCALL_DEFINE5(mremap, unsigned long, addr, unsigned long, old_len,</span>
 				goto out;
 			}
 
<span class="p_del">-			vm_stat_account(mm, vma-&gt;vm_flags, vma-&gt;vm_file, pages);</span>
<span class="p_add">+			vm_stat_account(mm, vma-&gt;vm_flags, pages);</span>
 			if (vma-&gt;vm_flags &amp; VM_LOCKED) {
 				mm-&gt;locked_vm += pages;
 				locked = true;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



