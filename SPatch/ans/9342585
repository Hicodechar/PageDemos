
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[08/10] arch/x86/platform/uv: BAU UV4 fix payload queue setup - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [08/10] arch/x86/platform/uv: BAU UV4 fix payload queue setup</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=148501">Andrew Banman</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 20, 2016, 10:21 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1474410076-178329-9-git-send-email-abanman@sgi.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9342585/mbox/"
   >mbox</a>
|
   <a href="/patch/9342585/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9342585/">/patch/9342585/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	F3CF8601C2 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 20 Sep 2016 22:22:52 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E3F4D29431
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 20 Sep 2016 22:22:52 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D8B1129A56; Tue, 20 Sep 2016 22:22:52 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7B89029431
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 20 Sep 2016 22:22:52 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754835AbcITWWs (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 20 Sep 2016 18:22:48 -0400
Received: from relay3.sgi.com ([192.48.152.1]:44508 &quot;EHLO relay.sgi.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1753810AbcITWVZ (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 20 Sep 2016 18:21:25 -0400
Received: from stormcage.americas.sgi.com (stormcage.americas.sgi.com
	[128.162.236.70])
	by relay3.corp.sgi.com (Postfix) with ESMTP id B34AAAC006;
	Tue, 20 Sep 2016 15:21:22 -0700 (PDT)
Received: by stormcage.americas.sgi.com (Postfix, from userid 200151)
	id A1E99205772A4; Tue, 20 Sep 2016 17:21:21 -0500 (CDT)
From: Andrew Banman &lt;abanman@sgi.com&gt;
To: mingo@redhat.com, akpm@linux-foundation.org
Cc: tglx@linutronix.de, hpa@zytor.com, travis@sgi.com, rja@sgi.com,
	sivanich@sgi.com, x86@kernel.org, linux-kernel@vger.kernel.org,
	abanman@sgi.com
Subject: [PATCH 08/10] arch/x86/platform/uv: BAU UV4 fix payload queue setup
Date: Tue, 20 Sep 2016 17:21:14 -0500
Message-Id: &lt;1474410076-178329-9-git-send-email-abanman@sgi.com&gt;
X-Mailer: git-send-email 1.8.5.6
In-Reply-To: &lt;1474410076-178329-1-git-send-email-abanman@sgi.com&gt;
References: &lt;1474410076-178329-1-git-send-email-abanman@sgi.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=148501">Andrew Banman</a> - Sept. 20, 2016, 10:21 p.m.</div>
<pre class="content">
The BAU on UV4 does not need to maintain the payload queue tail pointer. Do
not initialize the tail pointer MMR on UV4.

Note that write_payload_tail is not an abstracted BAU function since it is
an operation specific to pre-UV4 versions. Then we must switch on the UV
version to control its usage, for which we use uvhub_version rather than
is_uv*_hub because it is quicker/more concise.
<span class="signed-off-by">
Signed-off-by: Andrew Banman &lt;abanman@sgi.com&gt;</span>
<span class="acked-by">Acked-by: Mike Travis &lt;travis@sgi.com&gt;</span>
<span class="acked-by">Acked-by: Dimitri Sivanich &lt;sivanich@sgi.com&gt;</span>
---
 arch/x86/platform/uv/tlb_uv.c | 16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">index bfd03db..56d12eb 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_chunk">@@ -1826,11 +1826,19 @@</span> <span class="p_context"> static void pq_init(int node, int pnode)</span>
 
 	first = ops.bau_gpa_to_offset(uv_gpa(pqp));
 	last = ops.bau_gpa_to_offset(uv_gpa(pqp + (DEST_Q_SIZE - 1)));
<span class="p_del">-	tail = first;</span>
<span class="p_del">-	gnode = uv_gpa_to_gnode(uv_gpa(pqp));</span>
<span class="p_del">-	first = (gnode &lt;&lt; UV_PAYLOADQ_GNODE_SHIFT) | tail;</span>
 
<span class="p_del">-	write_mmr_payload_tail(pnode, tail);</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Pre UV4, the gnode is required to locate the payload queue</span>
<span class="p_add">+	 * and the payload queue tail must be maintained by the kernel.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	bcp = &amp;per_cpu(bau_control, smp_processor_id());</span>
<span class="p_add">+	if (bcp-&gt;uvhub_version &lt;= 3) {</span>
<span class="p_add">+		tail = first;</span>
<span class="p_add">+		gnode = uv_gpa_to_gnode(uv_gpa(pqp));</span>
<span class="p_add">+		first = (gnode &lt;&lt; UV_PAYLOADQ_GNODE_SHIFT) | tail;</span>
<span class="p_add">+		write_mmr_payload_tail(pnode, tail);</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	ops.write_payload_first(pnode, first);
 	ops.write_payload_last(pnode, last);
 	ops.write_g_sw_ack(pnode, 0xffffUL);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



