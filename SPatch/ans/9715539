
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[RFC,01/10] x86/mm: Reimplement flush_tlb_page() using flush_tlb_mm_range() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [RFC,01/10] x86/mm: Reimplement flush_tlb_page() using flush_tlb_mm_range()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=125831">Andrew Lutomirski</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>May 7, 2017, 12:38 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;dbe03b624fb5e785d33ca71c98f113f05d7b12df.1494160201.git.luto@kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9715539/mbox/"
   >mbox</a>
|
   <a href="/patch/9715539/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9715539/">/patch/9715539/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	7458E60380 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun,  7 May 2017 22:06:36 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 65BE5200F5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun,  7 May 2017 22:06:36 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 5ABCA26C9B; Sun,  7 May 2017 22:06:36 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id EB533200F5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sun,  7 May 2017 22:06:35 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1757196AbdEGWG3 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 7 May 2017 18:06:29 -0400
Received: from mail.kernel.org ([198.145.29.136]:51080 &quot;EHLO mail.kernel.org&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1757098AbdEGWG0 (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 7 May 2017 18:06:26 -0400
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 24D6D203B1;
	Sun,  7 May 2017 12:38:49 +0000 (UTC)
Received: from localhost (118-171-175-29.dynamic-ip.hinet.net
	[118.171.175.29])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256
	bits)) (No client certificate requested)
	by mail.kernel.org (Postfix) with ESMTPSA id 6D60A202EB;
	Sun,  7 May 2017 12:38:47 +0000 (UTC)
From: Andy Lutomirski &lt;luto@kernel.org&gt;
To: X86 ML &lt;x86@kernel.org&gt;
Cc: &quot;linux-kernel@vger.kernel.org&quot; &lt;linux-kernel@vger.kernel.org&gt;,
	Borislav Petkov &lt;bpetkov@suse.de&gt;,
	Linus Torvalds &lt;torvalds@linux-foundation.org&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;, Mel Gorman &lt;mgorman@suse.de&gt;,
	&quot;linux-mm@kvack.org&quot; &lt;linux-mm@kvack.org&gt;,
	Andy Lutomirski &lt;luto@kernel.org&gt;, Rik van Riel &lt;riel@redhat.com&gt;,
	Dave Hansen &lt;dave.hansen@intel.com&gt;,
	Nadav Amit &lt;namit@vmware.com&gt;, Michal Hocko &lt;mhocko@suse.com&gt;
Subject: [RFC 01/10] x86/mm: Reimplement flush_tlb_page() using
	flush_tlb_mm_range()
Date: Sun,  7 May 2017 05:38:30 -0700
Message-Id: &lt;dbe03b624fb5e785d33ca71c98f113f05d7b12df.1494160201.git.luto@kernel.org&gt;
X-Mailer: git-send-email 2.9.3
In-Reply-To: &lt;cover.1494160201.git.luto@kernel.org&gt;
References: &lt;cover.1494160201.git.luto@kernel.org&gt;
In-Reply-To: &lt;cover.1494160201.git.luto@kernel.org&gt;
References: &lt;cover.1494160201.git.luto@kernel.org&gt;
X-Virus-Scanned: ClamAV using ClamSMTP
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=125831">Andrew Lutomirski</a> - May 7, 2017, 12:38 p.m.</div>
<pre class="content">
flush_tlb_page() was very similar to flush_tlb_mm_range() except that
it had a couple of issues:

 - It was missing an smp_mb() in the case where
   current-&gt;active_mm != mm.  (This is a longstanding bug reported by
   Nadav Amit.)

 - It was missing tracepoints and vm counter updates.

The only reason that I can see for keeping it at as a separate
function is that it could avoid a few branches that
flush_tlb_mm_range() needs to decide to flush just one page.  This
hardly seems worthwhile.  If we decide we want to get rid of those
branches again, a better way would be to introduce an
__flush_tlb_mm_range() helper and make both flush_tlb_page() and
flush_tlb_mm_range() use it.

Cc: Rik van Riel &lt;riel@redhat.com&gt;
Cc: Dave Hansen &lt;dave.hansen@intel.com&gt;
Cc: Nadav Amit &lt;namit@vmware.com&gt;
Cc: Michal Hocko &lt;mhocko@suse.com&gt;
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;
<span class="signed-off-by">Signed-off-by: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
---
 arch/x86/include/asm/tlbflush.h |  6 +++++-
 arch/x86/mm/tlb.c               | 27 ---------------------------
 2 files changed, 5 insertions(+), 28 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=57321">Borislav Petkov</a> - May 11, 2017, 5:41 p.m.</div>
<pre class="content">
On Sun, May 07, 2017 at 05:38:30AM -0700, Andy Lutomirski wrote:
<span class="quote">&gt; flush_tlb_page() was very similar to flush_tlb_mm_range() except that</span>
<span class="quote">&gt; it had a couple of issues:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  - It was missing an smp_mb() in the case where</span>
<span class="quote">&gt;    current-&gt;active_mm != mm.  (This is a longstanding bug reported by</span>
<span class="quote">&gt;    Nadav Amit.)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  - It was missing tracepoints and vm counter updates.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The only reason that I can see for keeping it at as a separate</span>
<span class="quote">&gt; function is that it could avoid a few branches that</span>
<span class="quote">&gt; flush_tlb_mm_range() needs to decide to flush just one page.  This</span>
<span class="quote">&gt; hardly seems worthwhile.  If we decide we want to get rid of those</span>
<span class="quote">&gt; branches again, a better way would be to introduce an</span>
<span class="quote">&gt; __flush_tlb_mm_range() helper and make both flush_tlb_page() and</span>
<span class="quote">&gt; flush_tlb_mm_range() use it.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Cc: Rik van Riel &lt;riel@redhat.com&gt;</span>
<span class="quote">&gt; Cc: Dave Hansen &lt;dave.hansen@intel.com&gt;</span>
<span class="quote">&gt; Cc: Nadav Amit &lt;namit@vmware.com&gt;</span>
<span class="quote">&gt; Cc: Michal Hocko &lt;mhocko@suse.com&gt;</span>
<span class="quote">&gt; Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;</span>
<span class="quote">&gt; Signed-off-by: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/x86/include/asm/tlbflush.h |  6 +++++-</span>
<span class="quote">&gt;  arch/x86/mm/tlb.c               | 27 ---------------------------</span>
<span class="quote">&gt;  2 files changed, 5 insertions(+), 28 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/arch/x86/include/asm/tlbflush.h b/arch/x86/include/asm/tlbflush.h</span>
<span class="quote">&gt; index 6ed9ea469b48..5ed64cdaf536 100644</span>
<span class="quote">&gt; --- a/arch/x86/include/asm/tlbflush.h</span>
<span class="quote">&gt; +++ b/arch/x86/include/asm/tlbflush.h</span>
<span class="quote">&gt; @@ -307,11 +307,15 @@ static inline void flush_tlb_kernel_range(unsigned long start,</span>
<span class="quote">&gt;  		flush_tlb_mm_range(vma-&gt;vm_mm, start, end, vma-&gt;vm_flags)</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  extern void flush_tlb_all(void);</span>
<span class="quote">&gt; -extern void flush_tlb_page(struct vm_area_struct *, unsigned long);</span>
<span class="quote">&gt;  extern void flush_tlb_mm_range(struct mm_struct *mm, unsigned long start,</span>
<span class="quote">&gt;  				unsigned long end, unsigned long vmflag);</span>
<span class="quote">&gt;  extern void flush_tlb_kernel_range(unsigned long start, unsigned long end);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +static inline void flush_tlb_page(struct vm_area_struct *vma, unsigned long a)</span>
<span class="quote">&gt; +{</span>
<span class="quote">&gt; +	flush_tlb_mm_range(vma-&gt;vm_mm, a, a + PAGE_SIZE, 0);</span>

							 VM_NONE);
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=125831">Andrew Lutomirski</a> - May 12, 2017, 3:35 a.m.</div>
<pre class="content">
On Thu, May 11, 2017 at 10:41 AM, Borislav Petkov &lt;bp@suse.de&gt; wrote:
<span class="quote">&gt;&gt; +{</span>
<span class="quote">&gt;&gt; +     flush_tlb_mm_range(vma-&gt;vm_mm, a, a + PAGE_SIZE, 0);</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;                                                          VM_NONE);</span>
<span class="quote">&gt;</span>

Fixed, although this won&#39;t have any effect.

--Andy
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/tlbflush.h b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">index 6ed9ea469b48..5ed64cdaf536 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_chunk">@@ -307,11 +307,15 @@</span> <span class="p_context"> static inline void flush_tlb_kernel_range(unsigned long start,</span>
 		flush_tlb_mm_range(vma-&gt;vm_mm, start, end, vma-&gt;vm_flags)
 
 extern void flush_tlb_all(void);
<span class="p_del">-extern void flush_tlb_page(struct vm_area_struct *, unsigned long);</span>
 extern void flush_tlb_mm_range(struct mm_struct *mm, unsigned long start,
 				unsigned long end, unsigned long vmflag);
 extern void flush_tlb_kernel_range(unsigned long start, unsigned long end);
 
<span class="p_add">+static inline void flush_tlb_page(struct vm_area_struct *vma, unsigned long a)</span>
<span class="p_add">+{</span>
<span class="p_add">+	flush_tlb_mm_range(vma-&gt;vm_mm, a, a + PAGE_SIZE, 0);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 void native_flush_tlb_others(const struct cpumask *cpumask,
 				struct mm_struct *mm,
 				unsigned long start, unsigned long end);
<span class="p_header">diff --git a/arch/x86/mm/tlb.c b/arch/x86/mm/tlb.c</span>
<span class="p_header">index 6e7bedf69af7..fe6471132ea3 100644</span>
<span class="p_header">--- a/arch/x86/mm/tlb.c</span>
<span class="p_header">+++ b/arch/x86/mm/tlb.c</span>
<span class="p_chunk">@@ -354,33 +354,6 @@</span> <span class="p_context"> void flush_tlb_mm_range(struct mm_struct *mm, unsigned long start,</span>
 	preempt_enable();
 }
 
<span class="p_del">-void flush_tlb_page(struct vm_area_struct *vma, unsigned long start)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct mm_struct *mm = vma-&gt;vm_mm;</span>
<span class="p_del">-</span>
<span class="p_del">-	preempt_disable();</span>
<span class="p_del">-</span>
<span class="p_del">-	if (current-&gt;active_mm == mm) {</span>
<span class="p_del">-		if (current-&gt;mm) {</span>
<span class="p_del">-			/*</span>
<span class="p_del">-			 * Implicit full barrier (INVLPG) that synchronizes</span>
<span class="p_del">-			 * with switch_mm.</span>
<span class="p_del">-			 */</span>
<span class="p_del">-			__flush_tlb_one(start);</span>
<span class="p_del">-		} else {</span>
<span class="p_del">-			leave_mm(smp_processor_id());</span>
<span class="p_del">-</span>
<span class="p_del">-			/* Synchronize with switch_mm. */</span>
<span class="p_del">-			smp_mb();</span>
<span class="p_del">-		}</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	if (cpumask_any_but(mm_cpumask(mm), smp_processor_id()) &lt; nr_cpu_ids)</span>
<span class="p_del">-		flush_tlb_others(mm_cpumask(mm), mm, start, start + PAGE_SIZE);</span>
<span class="p_del">-</span>
<span class="p_del">-	preempt_enable();</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static void do_flush_tlb_all(void *info)
 {
 	count_vm_tlb_event(NR_TLB_REMOTE_FLUSH_RECEIVED);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



