
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/3] ALSA: trident: Use common error handling code in two functions - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/3] ALSA: trident: Use common error handling code in two functions</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=90081">SF Markus Elfring</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 18, 2017, 7:12 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;5fc2dcb3-3016-5a0a-62f4-5e873252677e@users.sourceforge.net&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10064923/mbox/"
   >mbox</a>
|
   <a href="/patch/10064923/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10064923/">/patch/10064923/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	2B87A602B8 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 18 Nov 2017 19:13:27 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1CA2F29CA7
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 18 Nov 2017 19:13:27 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 104A429CB1; Sat, 18 Nov 2017 19:13:27 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=unavailable version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9AFB029CA7
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 18 Nov 2017 19:13:26 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1162060AbdKRTNY (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sat, 18 Nov 2017 14:13:24 -0500
Received: from mout.web.de ([217.72.192.78]:60738 &quot;EHLO mout.web.de&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1161503AbdKRTNP (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sat, 18 Nov 2017 14:13:15 -0500
Received: from [192.168.1.3] ([78.49.245.81]) by smtp.web.de (mrweb102
	[213.165.67.124]) with ESMTPSA (Nemesis) id 0LiCsx-1euTMf2qax-00nSiV;
	Sat, 18 Nov 2017 20:12:34 +0100
Subject: [PATCH 2/3] ALSA: trident: Use common error handling code in two
	functions
From: SF Markus Elfring &lt;elfring@users.sourceforge.net&gt;
To: alsa-devel@alsa-project.org, Arvind Yadav &lt;arvind.yadav.cs@gmail.com&gt;,
	Bhumika Goyal &lt;bhumirks@gmail.com&gt;,
	Jaroslav Kysela &lt;perex@perex.cz&gt;, Takashi Iwai &lt;tiwai@suse.com&gt;
Cc: LKML &lt;linux-kernel@vger.kernel.org&gt;, kernel-janitors@vger.kernel.org
References: &lt;498d6d73-2c62-178a-3c7a-b0fcb092d81e@users.sourceforge.net&gt;
Message-ID: &lt;5fc2dcb3-3016-5a0a-62f4-5e873252677e@users.sourceforge.net&gt;
Date: Sat, 18 Nov 2017 20:12:33 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
	Thunderbird/52.4.0
MIME-Version: 1.0
In-Reply-To: &lt;498d6d73-2c62-178a-3c7a-b0fcb092d81e@users.sourceforge.net&gt;
Content-Type: text/plain; charset=utf-8
Content-Language: en-GB
Content-Transfer-Encoding: 8bit
X-Provags-ID: V03:K0:wHseWI8BEi+U/1NIizPOJpVsELLGzezcHK2CjUku6Nq3YZ3yj46
	QJ1vnZXopby/ijuZs+P8+xHRxaFh53yETxFr+zCk5lIBdFxXXoge/3971BafzfMuiUwN8bq
	dlbuYL6Osn+G/WkvJbpMlVnmF0ATqNj1DMBIYkJDEvEWXgIlyCVIWdvVbJpEtiv0UdNQkx4
	CWcrTS68nd420oOXuFsfg==
X-UI-Out-Filterresults: notjunk:1; V01:K0:pjhMZCY3evE=:YW5AKQRt5QSTNLvuOnEZOd
	dac7HJTBbfyhJ6eRd6hcna1vfKK0wv2OIoNQPvIOxNsWZdTk+/fQdzy3EEdFKMafrS8QNJa0u
	vLfHNtkY4GnK0sbzVtQyrbbIbvIJ3SfkylPH+pwk6cTCnMGMkPPR4NcDpSITvyTQqUWTIK6HD
	mwez8RAPjr9I1dHYYbxj72zRhaDTPQhC9coGQH3ExbwqLfAhVhJctoHqEp+3PM2wIIBviPAUg
	cUYGac3sD5W2bTPhU5r8gFlvFVC4lJVUTElKGQCnDPuqb5pw9BXZT065dG8GlndfEF420Hpnl
	db9yzbJoZKESwL+G14tscDI1LNEF/rry4ERsApUadDm0uuSdwiALIKrjqrrLs3k3besHV4KMb
	UWvnwXX+sXnTgflImSz8WjyBW+aDmzB1tmuUddgmQnqdnPYlaYN+/dhPKghAK8rAQ96n7iiAW
	XI0HGrvG0N+K7FihuOMroVYrOmCsHZhLq1YcnP7vFHUr267EPoojIrs4y7W/FfnQ+oME18amT
	qbEVC7eON9e2AGt9uWSt9kZK2GTrqgt+NK1h8ylY0wyg1MAmvgGWZGv5Sd9++YgWiEF6BeDQ1
	l3uAbwcmonaNuMq+aqogaIQwEtQKoavE8+9i02KVhwtCFiY+VxhDkT7Kn9O/u7//cSOS/oOsN
	YfFQ7ynXhaUHR2EvnhcSEUKDWPm5rEi9SPp1QixkCZgQn6TNBe4fxIVGia4gWWc2qIJ3mztB9
	QKYpyrpvjQkplWY4VQmDut6wmfUCT9v99SAlhRfiXIb269FO9UeGdZ4Fs1JGok9HC593wYxaB
	hiuT8qAdKqQ3ksnQWHDORUpCPyeTEwpPSr/4l+i4d39OFE+Vew=
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=90081">SF Markus Elfring</a> - Nov. 18, 2017, 7:12 p.m.</div>
<pre class="content">
<span class="from">From: Markus Elfring &lt;elfring@users.sourceforge.net&gt;</span>
Date: Sat, 18 Nov 2017 19:29:35 +0100

Add jump targets so that a bit of exception handling can be better reused
at the end of these functions.

This issue was detected by using the Coccinelle software.
<span class="signed-off-by">
Signed-off-by: Markus Elfring &lt;elfring@users.sourceforge.net&gt;</span>
---
 sound/pci/trident/trident.c      | 54 +++++++++++++++++++---------------------
 sound/pci/trident/trident_main.c | 41 +++++++++++++++---------------
 2 files changed, 47 insertions(+), 48 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/sound/pci/trident/trident.c b/sound/pci/trident/trident.c</span>
<span class="p_header">index fd35f7826845..830402c32395 100644</span>
<span class="p_header">--- a/sound/pci/trident/trident.c</span>
<span class="p_header">+++ b/sound/pci/trident/trident.c</span>
<span class="p_chunk">@@ -100,10 +100,9 @@</span> <span class="p_context"> static int snd_trident_probe(struct pci_dev *pci,</span>
 				 == TRIDENT_DEVICE_ID_SI7018 ? 1 : 2,
 				 wavetable_size[dev],
 				 &amp;trident);
<span class="p_del">-	if (err &lt; 0) {</span>
<span class="p_del">-		snd_card_free(card);</span>
<span class="p_del">-		return err;</span>
<span class="p_del">-	}</span>
<span class="p_add">+	if (err &lt; 0)</span>
<span class="p_add">+		goto free_card;</span>
<span class="p_add">+</span>
 	card-&gt;private_data = trident;
 
 	switch (trident-&gt;device) {
<span class="p_chunk">@@ -130,47 +129,46 @@</span> <span class="p_context"> static int snd_trident_probe(struct pci_dev *pci,</span>
 		card-&gt;shortname, trident-&gt;port, trident-&gt;irq);
 
 	err = snd_trident_pcm(trident, pcm_dev++);
<span class="p_del">-	if (err &lt; 0) {</span>
<span class="p_del">-		snd_card_free(card);</span>
<span class="p_del">-		return err;</span>
<span class="p_del">-	}</span>
<span class="p_add">+	if (err &lt; 0)</span>
<span class="p_add">+		goto free_card;</span>
<span class="p_add">+</span>
 	switch (trident-&gt;device) {
 	case TRIDENT_DEVICE_ID_DX:
 	case TRIDENT_DEVICE_ID_NX:
 		err = snd_trident_foldback_pcm(trident, pcm_dev++);
<span class="p_del">-		if (err &lt; 0) {</span>
<span class="p_del">-			snd_card_free(card);</span>
<span class="p_del">-			return err;</span>
<span class="p_del">-		}</span>
<span class="p_add">+		if (err &lt; 0)</span>
<span class="p_add">+			goto free_card;</span>
 		break;
 	}
 	if (trident-&gt;device == TRIDENT_DEVICE_ID_NX || trident-&gt;device == TRIDENT_DEVICE_ID_SI7018) {
 		err = snd_trident_spdif_pcm(trident, pcm_dev++);
<span class="p_del">-		if (err &lt; 0) {</span>
<span class="p_del">-			snd_card_free(card);</span>
<span class="p_del">-			return err;</span>
<span class="p_del">-		}</span>
<span class="p_add">+		if (err &lt; 0)</span>
<span class="p_add">+			goto free_card;</span>
 	}
<span class="p_del">-	if (trident-&gt;device != TRIDENT_DEVICE_ID_SI7018 &amp;&amp;</span>
<span class="p_del">-	    (err = snd_mpu401_uart_new(card, 0, MPU401_HW_TRID4DWAVE,</span>
<span class="p_del">-				       trident-&gt;midi_port,</span>
<span class="p_del">-				       MPU401_INFO_INTEGRATED |</span>
<span class="p_del">-				       MPU401_INFO_IRQ_HOOK,</span>
<span class="p_del">-				       -1, &amp;trident-&gt;rmidi)) &lt; 0) {</span>
<span class="p_del">-		snd_card_free(card);</span>
<span class="p_del">-		return err;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (trident-&gt;device != TRIDENT_DEVICE_ID_SI7018) {</span>
<span class="p_add">+		err = snd_mpu401_uart_new(card, 0, MPU401_HW_TRID4DWAVE,</span>
<span class="p_add">+					  trident-&gt;midi_port,</span>
<span class="p_add">+					  MPU401_INFO_INTEGRATED |</span>
<span class="p_add">+					  MPU401_INFO_IRQ_HOOK,</span>
<span class="p_add">+					  -1, &amp;trident-&gt;rmidi);</span>
<span class="p_add">+		if (err &lt; 0)</span>
<span class="p_add">+			goto free_card;</span>
 	}
 
 	snd_trident_create_gameport(trident);
 
 	err = snd_card_register(card);
<span class="p_del">-	if (err &lt; 0) {</span>
<span class="p_del">-		snd_card_free(card);</span>
<span class="p_del">-		return err;</span>
<span class="p_del">-	}</span>
<span class="p_add">+	if (err &lt; 0)</span>
<span class="p_add">+		goto free_card;</span>
<span class="p_add">+</span>
 	pci_set_drvdata(pci, card);
 	dev++;
 	return 0;
<span class="p_add">+</span>
<span class="p_add">+free_card:</span>
<span class="p_add">+	snd_card_free(card);</span>
<span class="p_add">+	return err;</span>
 }
 
 static void snd_trident_remove(struct pci_dev *pci)
<span class="p_header">diff --git a/sound/pci/trident/trident_main.c b/sound/pci/trident/trident_main.c</span>
<span class="p_header">index 88d666cb3300..9843a61a8ead 100644</span>
<span class="p_header">--- a/sound/pci/trident/trident_main.c</span>
<span class="p_header">+++ b/sound/pci/trident/trident_main.c</span>
<span class="p_chunk">@@ -3587,14 +3587,14 @@</span> <span class="p_context"> int snd_trident_create(struct snd_card *card,</span>
 	    dma_set_coherent_mask(&amp;pci-&gt;dev, DMA_BIT_MASK(30)) &lt; 0) {
 		dev_err(card-&gt;dev,
 			&quot;architecture does not support 30bit PCI busmaster DMA\n&quot;);
<span class="p_del">-		pci_disable_device(pci);</span>
<span class="p_del">-		return -ENXIO;</span>
<span class="p_add">+		err = -ENXIO;</span>
<span class="p_add">+		goto disable_device;</span>
 	}
 	
 	trident = kzalloc(sizeof(*trident), GFP_KERNEL);
 	if (trident == NULL) {
<span class="p_del">-		pci_disable_device(pci);</span>
<span class="p_del">-		return -ENOMEM;</span>
<span class="p_add">+		err = -ENOMEM;</span>
<span class="p_add">+		goto disable_device;</span>
 	}
 	trident-&gt;device = (pci-&gt;vendor &lt;&lt; 16) | pci-&gt;device;
 	trident-&gt;card = card;
<span class="p_chunk">@@ -3617,16 +3617,15 @@</span> <span class="p_context"> int snd_trident_create(struct snd_card *card,</span>
 	err = pci_request_regions(pci, &quot;Trident Audio&quot;);
 	if (err &lt; 0) {
 		kfree(trident);
<span class="p_del">-		pci_disable_device(pci);</span>
<span class="p_del">-		return err;</span>
<span class="p_add">+		goto disable_device;</span>
 	}
 	trident-&gt;port = pci_resource_start(pci, 0);
 
 	if (request_irq(pci-&gt;irq, snd_trident_interrupt, IRQF_SHARED,
 			KBUILD_MODNAME, trident)) {
 		dev_err(card-&gt;dev, &quot;unable to grab IRQ %d\n&quot;, pci-&gt;irq);
<span class="p_del">-		snd_trident_free(trident);</span>
<span class="p_del">-		return -EBUSY;</span>
<span class="p_add">+		err = -EBUSY;</span>
<span class="p_add">+		goto free_sound_chip;</span>
 	}
 	trident-&gt;irq = pci-&gt;irq;
 
<span class="p_chunk">@@ -3635,10 +3634,8 @@</span> <span class="p_context"> int snd_trident_create(struct snd_card *card,</span>
 	trident-&gt;tlb.buffer.area = NULL;
 	if (trident-&gt;device == TRIDENT_DEVICE_ID_NX) {
 		err = snd_trident_tlb_alloc(trident);
<span class="p_del">-		if (err &lt; 0) {</span>
<span class="p_del">-			snd_trident_free(trident);</span>
<span class="p_del">-			return err;</span>
<span class="p_del">-		}</span>
<span class="p_add">+		if (err &lt; 0)</span>
<span class="p_add">+			goto free_sound_chip;</span>
 	}
 
 	trident-&gt;spdif_bits = trident-&gt;spdif_pcm_bits = SNDRV_PCM_DEFAULT_CON_SPDIF;
<span class="p_chunk">@@ -3658,16 +3655,12 @@</span> <span class="p_context"> int snd_trident_create(struct snd_card *card,</span>
 		snd_BUG();
 		break;
 	}
<span class="p_del">-	if (err &lt; 0) {</span>
<span class="p_del">-		snd_trident_free(trident);</span>
<span class="p_del">-		return err;</span>
<span class="p_del">-	}</span>
<span class="p_add">+	if (err &lt; 0)</span>
<span class="p_add">+		goto free_sound_chip;</span>
 
 	err = snd_device_new(card, SNDRV_DEV_LOWLEVEL, trident, &amp;ops);
<span class="p_del">-	if (err &lt; 0) {</span>
<span class="p_del">-		snd_trident_free(trident);</span>
<span class="p_del">-		return err;</span>
<span class="p_del">-	}</span>
<span class="p_add">+	if (err &lt; 0)</span>
<span class="p_add">+		goto free_sound_chip;</span>
 
 	err = snd_trident_mixer(trident, pcm_spdif_device);
 	if (err &lt; 0)
<span class="p_chunk">@@ -3693,6 +3686,14 @@</span> <span class="p_context"> int snd_trident_create(struct snd_card *card,</span>
 	snd_trident_proc_init(trident);
 	*rtrident = trident;
 	return 0;
<span class="p_add">+</span>
<span class="p_add">+disable_device:</span>
<span class="p_add">+	pci_disable_device(pci);</span>
<span class="p_add">+	return err;</span>
<span class="p_add">+</span>
<span class="p_add">+free_sound_chip:</span>
<span class="p_add">+	snd_trident_free(trident);</span>
<span class="p_add">+	return err;</span>
 }
 
 /*---------------------------------------------------------------------------

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



