
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v8,2/4] MIPS: Octeon: Automatically provision CVMSEG space. - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v8,2/4] MIPS: Octeon: Automatically provision CVMSEG space.</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=31592">David Daney</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 22, 2018, 11:07 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180222230716.21442-3-david.daney@cavium.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10236563/mbox/"
   >mbox</a>
|
   <a href="/patch/10236563/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10236563/">/patch/10236563/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	3B12760224 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 22 Feb 2018 23:07:52 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id AF5D928A4D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 22 Feb 2018 23:07:46 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id A2E9D28DFD; Thu, 22 Feb 2018 23:07:46 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4767E28A4D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 22 Feb 2018 23:07:45 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752042AbeBVXHl (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 22 Feb 2018 18:07:41 -0500
Received: from mail-bn3nam01on0071.outbound.protection.outlook.com
	([104.47.33.71]:20512
	&quot;EHLO NAM01-BN3-obe.outbound.protection.outlook.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1751961AbeBVXHf (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 22 Feb 2018 18:07:35 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=CAVIUMNETWORKS.onmicrosoft.com; s=selector1-cavium-com;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version;
	bh=BGELAx8V68W3GT73Fbn48PWc+1/20td+JcTXJ562r7g=;
	b=CCOWVOk9q95U2vGwM+Q9pM3bkGvNz/h9BaKHgseBONcUjjbfxWUgCxTfmINCWNQRnaS1sQ5JAsNjFSElzjIzSXOtwikX/8FaF4wyC9U3uPZxCasJuQ8S51R6MLba3F1ivaCV+G/TPkTwsdG5Xe3BnQ8ywpZ9Fkv1WXDJtYOq9f4=
Authentication-Results: spf=none (sender IP is )
	smtp.mailfrom=David.Daney@cavium.com; 
Received: from ddl.caveonetworks.com (50.233.148.156) by
	DM5PR07MB3180.namprd07.prod.outlook.com (2603:10b6:3:df::14) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P256) id 15.20.527.15;
	Thu, 22 Feb 2018 23:07:32 +0000
From: David Daney &lt;david.daney@cavium.com&gt;
To: linux-mips@linux-mips.org, ralf@linux-mips.org,
	James Hogan &lt;james.hogan@mips.com&gt;
Cc: linux-kernel@vger.kernel.org,
	&quot;Steven J. Hill&quot; &lt;steven.hill@cavium.com&gt;, netdev@vger.kernel.org,
	&quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;,
	David Daney &lt;david.daney@cavium.com&gt;,
	Carlos Munoz &lt;cmunoz@caviumnetworks.com&gt;
Subject: [PATCH v8 2/4] MIPS: Octeon: Automatically provision CVMSEG space.
Date: Thu, 22 Feb 2018 15:07:14 -0800
Message-Id: &lt;20180222230716.21442-3-david.daney@cavium.com&gt;
X-Mailer: git-send-email 2.14.3
In-Reply-To: &lt;20180222230716.21442-1-david.daney@cavium.com&gt;
References: &lt;20180222230716.21442-1-david.daney@cavium.com&gt;
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [50.233.148.156]
X-ClientProxiedBy: CO2PR07CA0064.namprd07.prod.outlook.com
	(2603:10b6:100::32)
	To DM5PR07MB3180.namprd07.prod.outlook.com (2603:10b6:3:df::14)
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 257081d9-f04c-4d64-4dff-08d57a490e00
X-Microsoft-Antispam: UriScan:; BCL:0; PCL:0;
	RULEID:(7020095)(4652020)(4534165)(4627221)(201703031133081)(201702281549075)(5600026)(4604075)(2017052603307)(7153060)(7193020);
	SRVR:DM5PR07MB3180; 
X-Microsoft-Exchange-Diagnostics: 1; DM5PR07MB3180;
	3:0AvP4VMbGk5ETFbBEzbXn29OUkFqFkPwZuNJyIe5pTy7sGyjVVkxKhEOFRKgB7SSHsrnZFF9v2mUNpZfZL1aUqzuVJ8kHQuL1uH8QJqzYtYcEXYkbFBaHLgsT+he8huWxwcUpJxpsYwOYS2ZtdT64QvkCIiWctoOYadzRILcsgrNGQXXUUiubH9NjfYyD5Kqj44da9/GNz7dcz7/Xd3wAMn08ZMm6ut6+9/RC8elPNokd+4sCVBlpEjjkWBn+jYc;
	25:BNdS+bL9AfMFshBzJFIvJr+6ZGYSQSxX6ey5rvowuce4LNPI6ekMUeFAmf0q35MwlS04N2GKj+wHKOKDZyakNjv9ZMzvmtB8LZQ+xOoa5LMzFA92w1LGTsy7/mh9a/XFoMT9g/7sYQgBHoPB2VXech0YJ8pcE14W4iP4sIRZP2rwUQnGqz49TcQ9SufwoEbMeyZUrgqSmhHEg7QS1cvI2vpx9S7q3nL5YQTIAf6/DeJgEaZ4HpLlal+TdvNarXFnS6kiDs4oYrMqYLc55EoEQLTShqPpsiqpB/hXa5hT/db7vm3ngktja5srgeq2sOU8z4KXauydLzGzDVsPowGEdA==;
	31:J7bMlRVfrZmyz8IpN2UTC2//7onlGuUkCain/4IZVzuLv68vEJb1ZFhuvOcywUgYMr9wC1dU62S+d3iFpMXeiup/DzA4LaIhjO6ZumavQRHcfBDTSH3kGxsJYSw43/EMWaLn19XbS+IdfWIJ9lBoa01p2spKs6gPCyVMrURAdksPjREC0EFBFmFqdw57b3fPe7mO9kYdJGjPB/NHmyOIblv5fKaNnZWdKP/KDX0+7J8=
X-MS-TrafficTypeDiagnostic: DM5PR07MB3180:
X-Microsoft-Exchange-Diagnostics: 1; DM5PR07MB3180;
	20:qMte6KGC3FsSzqWHvMUKdaylNG3BtQSC+y4FRNA6XJr3H9J1IUiouWT49q/+N4vgwkJ9ADxLCagqm/gqCsvEMkuBSakozbhSpzw7DzKwISnur0rmznJhF1XHxJ4qwbF8zQCpxFWNsCdOpDKAaMIlUmpG+v70FPaEe1tcmVEC15JZiqhaBQFaUJZzSo0dGHsIDr7tABxC72fCJCXKq5qmAmiQWENcv3fE8o+3s9nJ/DA4BIoIDEgH/xHWEDUGld25LwQq7JIcVtJrpWbopdETMukUB2y0BLq2/Nv54iXkBZGqxsx3JvNMF+jOrBnKV2qsdPlXfFiRRqJGcXhEFGhv7imSR53tKItV4kQj3Rm3oUBUo0TId+fVMphCj2ZLfZo/wvyKd3JtmjaQxLbg9E88xzwWC3KVcQ0KDeb3zNjmSkWjyjSUqsEDOkHY9c3Dyn8hp10kSaKjoyiFi3xP6v9M3fdbGpXP4ZVvr2wPgwtYY2oWn4hf7zSEwm9XzQfeZyFi;
	4:Nqzd++dDGXUFcTEpumJ/Fna7oUg+lt57hyWNIP64AXuTCpIfTarGnUgZ6x2d2PTTZc/RZtYVu45f7OqrCGu/tcS1EDNGmodgjRifElPLheh95cDdENdncS2jKngN4zHZfnYAjRS0DeCfyL6kFpoD3ci4rH9tY9gpxf463NkmFgE8a5oV08JoJ3Y0Urob73Kb6vjDlkOQejR9HRIRfK3d13BRyZXlRfrWO9oz7sKf7fF13IDAOFwvPwLWPqQkhS47xzVxo0fQPD5bB0a2TEhspA==
X-Microsoft-Antispam-PRVS: &lt;DM5PR07MB318079B05E8053E17C87669C97CD0@DM5PR07MB3180.namprd07.prod.outlook.com&gt;
X-Exchange-Antispam-Report-Test: UriScan:;
X-Exchange-Antispam-Report-CFA-Test: BCL:0; PCL:0;
	RULEID:(8211001082)(6040501)(2401047)(5005006)(8121501046)(93006095)(93001095)(10201501046)(3231101)(944501161)(3002001)(6041288)(20161123562045)(20161123560045)(20161123558120)(20161123564045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(6072148)(201708071742011);
	SRVR:DM5PR07MB3180; BCL:0; PCL:0; RULEID:; SRVR:DM5PR07MB3180;
X-Forefront-PRVS: 059185FE08
X-Forefront-Antispam-Report: SFV:NSPM;
	SFS:(10009020)(396003)(376002)(39860400002)(39380400002)(346002)(366004)(189003)(199004)(53936002)(305945005)(53416004)(66066001)(107886003)(6486002)(69596002)(47776003)(6512007)(386003)(59450400001)(6506007)(26005)(5660300001)(50466002)(8676002)(81166006)(16526019)(81156014)(478600001)(316002)(16586007)(54906003)(8936002)(72206003)(48376002)(25786009)(4326008)(105586002)(50226002)(186003)(68736007)(3846002)(6116002)(2950100002)(1076002)(6916009)(6666003)(36756003)(2906002)(7736002)(52116002)(86362001)(76176011)(106356001)(97736004)(51416003);
	DIR:OUT; SFP:1101; SCL:1; SRVR:DM5PR07MB3180;
	H:ddl.caveonetworks.com; FPR:; SPF:None; PTR:InfoNoRecords;
	MX:1; A:1; LANG:en; 
Received-SPF: None (protection.outlook.com: cavium.com does not designate
	permitted sender hosts)
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1; DM5PR07MB3180;
	23:1sS2AGUnHup4J2UDuZ3z4Bve3Akz+27hLXZ6f83AQ?=
	=?us-ascii?Q?Xamih/Nk7as9PqjocRmAhLkqZ9bbHWQngB9X7lgzGkm1Joq5SsEEDW6BhcrN?=
	=?us-ascii?Q?IWf4n1GBgDqwCm/75SUqU2rov7LHtBKQbKJyTi2rkQRoL8vavU/u7+P2djqX?=
	=?us-ascii?Q?aEiF35TV4QjUTsfohA7Of1n6f/r+as/Oc+CZsmV+9Go9cmFyCZGrnAC7OH0i?=
	=?us-ascii?Q?kAh3z2sAwK83AVCFRB9xJyoHl26VN27T5H/32WT5hujKBIkyqLKqMbojfazF?=
	=?us-ascii?Q?hHzAJPO+t+xcO7Mf+tKEcP0p6DXM0tOa3qxXsmIyE4S95nfCYhfami5E4mNE?=
	=?us-ascii?Q?v5ZuQGmwKrgCInv5vU2kyKzjDmBRGFInig+26xv08yT1P2jPSZgc+TitYHSj?=
	=?us-ascii?Q?/vLt1/XWRaeX4evTeACTsEQJt8qPKRqfdgtpQ9AktJoRO27ZLJ4KENudaE73?=
	=?us-ascii?Q?cPrdm49GwDRXQNzqcVTczCBOIT1P7sRzaMsttsomFj39VZvnV2nA8lx99tI5?=
	=?us-ascii?Q?OLb7wii1CJ5IcUviFhBXx68kDULZAn9MM9oHqrLqgSE6U9+9c/UR0hLttZl2?=
	=?us-ascii?Q?xrqfQoe725D43Ptwed3mbydmo7X4fvMiegsm8yTSx+QSjFtjvwDev2v9jaEt?=
	=?us-ascii?Q?BGqKSg7+x+Jpl3Wapisqhm7t4J6xpUX6adcKCnGsZ0DP0JOJdJVv4BeB7awF?=
	=?us-ascii?Q?h1iB3gSCCalKv6lA+WxHYcKU4Y7ZRpqJe1vzm9pXSqQVkxUa8Iv2xCZNC6Nv?=
	=?us-ascii?Q?7YUT0nkm5QZwcWSwD6DL5xE1X1Ufxk0sn/jPbBbIGX1pu/fo/sSzlO+/mA5q?=
	=?us-ascii?Q?MEZToV24RspTGdHRrfBrwdt8GXU2TvSZwpX3fcKZigESHr8UotulkcXzGVeD?=
	=?us-ascii?Q?eFz2kQ8udACyWi4woUXi0zP+0jHYFH9fI4JJpJjclmZqVKwa+sGPzMcFOSu+?=
	=?us-ascii?Q?5Swkv7J3J+W5B+NUYEFQHyYzZzGe8UzGQE0w4/LwT0fMTTX7NvAPjtWTbqAe?=
	=?us-ascii?Q?N4EOyV5zb3ApBU49nsTMzc9PlIf1vAqemaBCmJKeGDogCtM84Kn0HuhPcOOu?=
	=?us-ascii?Q?JJi1rAkvNcWemreQrH7n6e6HdaR7xe+KLqXgkXo4XUv/HwAhjQ3WSEWVxTrh?=
	=?us-ascii?Q?ENw5GPW7FLHlNnVT4LBOkhmfy0nW6Bv7SnyfnoqRD2PzqTYrVKY2cbZtys1i?=
	=?us-ascii?Q?NS/ltd4ApFODDy9NY0MUVjBYPQpN9o0LepOAgSgWqVzHpyjeqfBq2asPTvup?=
	=?us-ascii?Q?B5vdD59aWAzs53E0+g=3D?=
X-Microsoft-Exchange-Diagnostics: 1; DM5PR07MB3180;
	6:Y+9ymqhwlAocxNIPjoT+txbGSdkLuNbttF3knlEdCb3R0LKouBC0DhS6N2YhklUcSA4hRr1BRvIuLSrRo+v5XxIZSOmxPfitwYyhX5bVcr3YpGrCZkQhDclyojOAfs5J+ACAtlc0nxgUrXxDYdD0B59b0KUZmaL3t28SMieIuZBrm3PVESy0vgkqW8S5T6t9Ctn8D8qrZfqOoaYDE2XHSPg3wCxCuksits/58+ywOjSuEJzFkyMYP67Ojc972B4bkJ3dZ3h77OahD2iDP+fcfHJjib393uJgx/d0B0tcfkH9cydfs/YZZDzySjpeCA/oP/GsuL270lbsi2vuksQbYGtW1UAC1PURqxf8p5qOLqc=;
	5:xC4LH4JYouAfrh6QEKScVaDlaayjpkVipw2qE05VzvhA6ggfT5EoFSR3fdW8s4SQsY81UIB6sXI3AOw01azDFKdaDaYEWCd+5bTiqmaWFw7R2ufLB+158k5n0nqvYoLRYndS4JnEwDPCemnKPnU7fBDs0s+lF1v08gFwM12ogzs=;
	24:YW1PyPpx3y0iiIHf4OQGKYHt98kkkX8GomDrSSYD1lrW+da7yFcXHDreLgASywHJKJm741mT2F0ZOZ01Ctkv/rcnra6Q2TMl3I6GFAGTXk4=;
	7:3wJSPtnbZa6Zbd8OkehAU5+970UxczeI82xMTLulwvv8C/a6Lf8xjRFo83Vx13eOn1hKeSY45ekOcisXj8rrv1goyqF/EfuNIYU99xLMu6N5Zgho+NE/qCZFw2G9LwyM+DwFTIa1g3MZouZ2rh/IgYdXVQvKwRcs2kjSGAtWZ1k+zBhkD/fjZdCWJNmummMiurg83fJuMPfiSv9G1kPuqext+ofxUNww/3J9pgZIamprJxte9CntWi+ICmwlH9Sf
SpamDiagnosticOutput: 1:99
SpamDiagnosticMetadata: NSPM
X-OriginatorOrg: cavium.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 22 Feb 2018 23:07:32.2020
	(UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 257081d9-f04c-4d64-4dff-08d57a490e00
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 711e4ccf-2e9b-4bcf-a551-4094005b6194
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM5PR07MB3180
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=31592">David Daney</a> - Feb. 22, 2018, 11:07 p.m.</div>
<pre class="content">
Remove CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE and automatically calculate
the amount of CVMSEG space needed.

1st 128-bytes: Use by IOBDMA
2nd 128-bytes: Reserved by kernel for scratch/TLS emulation.
3rd 128-bytes: OCTEON-III LMTLINE

New config variable CONFIG_CAVIUM_OCTEON_EXTRA_CVMSEG provisions
additional lines, defaults to zero.
<span class="signed-off-by">
Signed-off-by: David Daney &lt;david.daney@cavium.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Carlos Munoz &lt;cmunoz@caviumnetworks.com&gt;</span>
---
 arch/mips/cavium-octeon/Kconfig                    | 27 ++++++++++++--------
 arch/mips/cavium-octeon/setup.c                    | 16 ++++++------
 .../asm/mach-cavium-octeon/kernel-entry-init.h     | 20 +++++++++------
 arch/mips/include/asm/mipsregs.h                   |  2 ++
 arch/mips/include/asm/octeon/octeon.h              |  2 ++
 arch/mips/include/asm/processor.h                  |  2 +-
 arch/mips/kernel/octeon_switch.S                   |  2 --
 arch/mips/mm/tlbex.c                               | 29 ++++++----------------
 drivers/staging/octeon/ethernet-defines.h          |  2 +-
 9 files changed, 50 insertions(+), 52 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=80401">James Hogan</a> - March 2, 2018, 2:10 p.m.</div>
<pre class="content">
On Thu, Feb 22, 2018 at 03:07:14PM -0800, David Daney wrote:
<span class="quote">&gt; diff --git a/arch/mips/cavium-octeon/Kconfig b/arch/mips/cavium-octeon/Kconfig</span>
<span class="quote">&gt; index b5eee1a57d6c..a283b73b7fc6 100644</span>
<span class="quote">&gt; --- a/arch/mips/cavium-octeon/Kconfig</span>
<span class="quote">&gt; +++ b/arch/mips/cavium-octeon/Kconfig</span>
<span class="quote">&gt; @@ -11,21 +11,26 @@ config CAVIUM_CN63XXP1</span>
<span class="quote">&gt;  	  non-CN63XXP1 hardware, so it is recommended to select &quot;n&quot;</span>
<span class="quote">&gt;  	  unless it is known the workarounds are needed.</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -config CAVIUM_OCTEON_CVMSEG_SIZE</span>
<span class="quote">&gt; -	int &quot;Number of L1 cache lines reserved for CVMSEG memory&quot;</span>

This is set to 2 in cavium_octeon_defconfig, which can now be removed (I
presume the default of 0 for CAVIUM_OCTEON_EXTRA_CVMSEG is sufficient).
<span class="quote">
&gt; diff --git a/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h b/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h</span>
<span class="quote">&gt; index c38b38ce5a3d..cdcca60978a2 100644</span>
<span class="quote">&gt; --- a/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h</span>
<span class="quote">&gt; +++ b/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h</span>
<span class="quote">&gt; @@ -26,11 +26,18 @@</span>
<span class="quote">&gt;  	# a3 = address of boot descriptor block</span>
<span class="quote">&gt;  	.set push</span>
<span class="quote">&gt;  	.set arch=octeon</span>
<span class="quote">&gt; +	mfc0	v1, CP0_PRID_REG</span>
<span class="quote">&gt; +	andi	v1, 0xff00</span>
<span class="quote">&gt; +	li	v0, 0x9500		# cn78XX or later</span>
<span class="quote">&gt; +	subu	v1, v1, v0</span>
<span class="quote">&gt; +	li	t2, 2 + CONFIG_CAVIUM_OCTEON_EXTRA_CVMSEG</span>
<span class="quote">&gt; +	bltz	v1, 1f</span>
<span class="quote">&gt; +	addiu	t2, 1			# t2 has cvmseg_size</span>

It&#39;d be nice to clean up this PRID code one day to use the defines in
&lt;asm/mipsregs.h&gt; and &lt;asm/cpu.h&gt;. This is consistent with whats already
here though so it can be done later.
<span class="quote">
&gt; +1:</span>
<span class="quote">&gt;  	# Read the cavium mem control register</span>
<span class="quote">&gt;  	dmfc0	v0, CP0_CVMMEMCTL_REG</span>
<span class="quote">&gt;  	# Clear the lower 6 bits, the CVMSEG size</span>
<span class="quote">&gt; -	dins	v0, $0, 0, 6</span>
<span class="quote">&gt; -	ori	v0, CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE</span>
<span class="quote">&gt; +	dins	v0, t2, 0, 6</span>
<span class="quote">&gt;  	dmtc0	v0, CP0_CVMMEMCTL_REG	# Write the cavium mem control register</span>
<span class="quote">&gt;  	dmfc0	v0, CP0_CVMCTL_REG	# Read the cavium control register</span>
<span class="quote">&gt;  	# Disable unaligned load/store support but leave HW fixup enabled</span>
<span class="quote">&gt; @@ -70,7 +77,7 @@</span>
<span class="quote">&gt;  	# Flush dcache after config change</span>
<span class="quote">&gt;  	cache	9, 0($0)</span>
<span class="quote">&gt;  	# Zero all of CVMSEG to make sure parity is correct</span>
<span class="quote">&gt; -	dli	v0, CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE</span>
<span class="quote">&gt; +	move	v0, t2</span>
<span class="quote">&gt;  	dsll	v0, 7</span>
<span class="quote">&gt;  	beqz	v0, 2f</span>
<span class="quote">&gt;  1:	dsubu	v0, 8</span>
<span class="quote">&gt; @@ -126,12 +133,7 @@</span>
<span class="quote">&gt;  	LONG_L	sp, (t0)</span>
<span class="quote">&gt;  	# Set the SP global variable to zero so the master knows we&#39;ve started</span>
<span class="quote">&gt;  	LONG_S	zero, (t0)</span>
<span class="quote">&gt; -#ifdef __OCTEON__</span>
<span class="quote">&gt; -	syncw</span>
<span class="quote">&gt; -	syncw</span>
<span class="quote">&gt; -#else</span>

Is this directly related? I don&#39;t think I saw it mentioned anywhere.
<span class="quote">
&gt;  	sync</span>
<span class="quote">&gt; -#endif</span>
<span class="quote">&gt;  	# Jump to the normal Linux SMP entry point</span>
<span class="quote">&gt;  	j   smp_bootstrap</span>
<span class="quote">&gt;  	nop</span>
<span class="quote">&gt; @@ -148,6 +150,8 @@</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #endif /* CONFIG_SMP */</span>
<span class="quote">&gt;  octeon_main_processor:</span>
<span class="quote">&gt; +	dla	v0, octeon_cvmseg_lines</span>
<span class="quote">&gt; +	sw	t2, 0(v0)</span>

You would get something equivalent (and slightly more efficient but
using $at) with this?
	sw	t2, octeon_cvmseg_lines

I.e.
lui     v0,0x8190	-&gt;	lui     at,0x8190
daddiu  v0,v0,-19688	-&gt;
sw      t2,0(v0)	-&gt;	sw      t2,-19688(at)
<span class="quote">
&gt; diff --git a/arch/mips/include/asm/mipsregs.h b/arch/mips/include/asm/mipsregs.h</span>
<span class="quote">&gt; index 858752dac337..4e87e4f5247a 100644</span>
<span class="quote">&gt; --- a/arch/mips/include/asm/mipsregs.h</span>
<span class="quote">&gt; +++ b/arch/mips/include/asm/mipsregs.h</span>
<span class="quote">&gt; @@ -1126,6 +1126,8 @@</span>
<span class="quote">&gt;  #define FPU_CSR_RD	0x3	/* towards -Infinity */</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +#define CAVIUM_OCTEON_SCRATCH_OFFSET (2 * 128 - 16 - 32768)</span>

This feels a bit out of place, since its effectively cavium specific
memory mapped scratch register addresses. Would tlbex.h or octeon.h be
more appropriate, or even tlbex.c if it isn&#39;t used elsewhere?

Otherwise this patch looks reasonable I think.

Cheers
James
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/mips/cavium-octeon/Kconfig b/arch/mips/cavium-octeon/Kconfig</span>
<span class="p_header">index b5eee1a57d6c..a283b73b7fc6 100644</span>
<span class="p_header">--- a/arch/mips/cavium-octeon/Kconfig</span>
<span class="p_header">+++ b/arch/mips/cavium-octeon/Kconfig</span>
<span class="p_chunk">@@ -11,21 +11,26 @@</span> <span class="p_context"> config CAVIUM_CN63XXP1</span>
 	  non-CN63XXP1 hardware, so it is recommended to select &quot;n&quot;
 	  unless it is known the workarounds are needed.
 
<span class="p_del">-config CAVIUM_OCTEON_CVMSEG_SIZE</span>
<span class="p_del">-	int &quot;Number of L1 cache lines reserved for CVMSEG memory&quot;</span>
<span class="p_del">-	range 0 54</span>
<span class="p_del">-	default 1</span>
<span class="p_del">-	help</span>
<span class="p_del">-	  CVMSEG LM is a segment that accesses portions of the dcache as a</span>
<span class="p_del">-	  local memory; the larger CVMSEG is, the smaller the cache is.</span>
<span class="p_del">-	  This selects the size of CVMSEG LM, which is in cache blocks. The</span>
<span class="p_del">-	  legally range is from zero to 54 cache blocks (i.e. CVMSEG LM is</span>
<span class="p_del">-	  between zero and 6192 bytes).</span>
<span class="p_del">-</span>
 endif # CPU_CAVIUM_OCTEON
 
 if CAVIUM_OCTEON_SOC
 
<span class="p_add">+config CAVIUM_OCTEON_EXTRA_CVMSEG</span>
<span class="p_add">+	int &quot;Number of extra L1 cache lines reserved for CVMSEG memory&quot;</span>
<span class="p_add">+	range 0 50</span>
<span class="p_add">+	default 0</span>
<span class="p_add">+	help</span>
<span class="p_add">+	  CVMSEG LM is a segment that accesses portions of the dcache</span>
<span class="p_add">+	  as a local memory; the larger CVMSEG is, the smaller the</span>
<span class="p_add">+	  cache is.  The kernel uses two or three blocks (one for TLB</span>
<span class="p_add">+	  exception handlers, one for driver IOBDMA operations, and on</span>
<span class="p_add">+	  models that need it, one for LMTDMA operations). This</span>
<span class="p_add">+	  selects an optional extra number of CVMSEG lines for use by</span>
<span class="p_add">+	  other software.</span>
<span class="p_add">+</span>
<span class="p_add">+	  Normally no extra lines are required, and this parameter</span>
<span class="p_add">+	  should be set to zero.</span>
<span class="p_add">+</span>
 config CAVIUM_OCTEON_LOCK_L2
 	bool &quot;Lock often used kernel code in the L2&quot;
 	default &quot;y&quot;
<span class="p_header">diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c</span>
<span class="p_header">index 99e6a68bc652..51c4d3c3cada 100644</span>
<span class="p_header">--- a/arch/mips/cavium-octeon/setup.c</span>
<span class="p_header">+++ b/arch/mips/cavium-octeon/setup.c</span>
<span class="p_chunk">@@ -68,6 +68,12 @@</span> <span class="p_context"> extern void pci_console_init(const char *arg);</span>
 static unsigned long long max_memory = ULLONG_MAX;
 static unsigned long long reserve_low_mem;
 
<span class="p_add">+/*</span>
<span class="p_add">+ * modified in hernel-entry-init.h, must have an initial value to keep</span>
<span class="p_add">+ * it from being clobbered when bss is zeroed.</span>
<span class="p_add">+ */</span>
<span class="p_add">+u32 octeon_cvmseg_lines = 2;</span>
<span class="p_add">+</span>
 DEFINE_SEMAPHORE(octeon_bootbus_sem);
 EXPORT_SYMBOL(octeon_bootbus_sem);
 
<span class="p_chunk">@@ -604,11 +610,7 @@</span> <span class="p_context"> void octeon_user_io_init(void)</span>
 
 	/* R/W If set, CVMSEG is available for loads/stores in
 	 * kernel/debug mode. */
<span class="p_del">-#if CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0</span>
 	cvmmemctl.s.cvmsegenak = 1;
<span class="p_del">-#else</span>
<span class="p_del">-	cvmmemctl.s.cvmsegenak = 0;</span>
<span class="p_del">-#endif</span>
 	if (OCTEON_IS_OCTEON3()) {
 		/* Enable LMTDMA */
 		cvmmemctl.s.lmtena = 1;
<span class="p_chunk">@@ -626,9 +628,9 @@</span> <span class="p_context"> void octeon_user_io_init(void)</span>
 
 	/* Setup of CVMSEG is done in kernel-entry-init.h */
 	if (smp_processor_id() == 0)
<span class="p_del">-		pr_notice(&quot;CVMSEG size: %d cache lines (%d bytes)\n&quot;,</span>
<span class="p_del">-			  CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE,</span>
<span class="p_del">-			  CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE * 128);</span>
<span class="p_add">+		pr_notice(&quot;CVMSEG size: %u cache lines (%u bytes)\n&quot;,</span>
<span class="p_add">+			  octeon_cvmseg_lines,</span>
<span class="p_add">+			  octeon_cvmseg_lines * 128);</span>
 
 	if (octeon_has_feature(OCTEON_FEATURE_FAU)) {
 		union cvmx_iob_fau_timeout fau_timeout;
<span class="p_header">diff --git a/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h b/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h</span>
<span class="p_header">index c38b38ce5a3d..cdcca60978a2 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h</span>
<span class="p_chunk">@@ -26,11 +26,18 @@</span> <span class="p_context"></span>
 	# a3 = address of boot descriptor block
 	.set push
 	.set arch=octeon
<span class="p_add">+	mfc0	v1, CP0_PRID_REG</span>
<span class="p_add">+	andi	v1, 0xff00</span>
<span class="p_add">+	li	v0, 0x9500		# cn78XX or later</span>
<span class="p_add">+	subu	v1, v1, v0</span>
<span class="p_add">+	li	t2, 2 + CONFIG_CAVIUM_OCTEON_EXTRA_CVMSEG</span>
<span class="p_add">+	bltz	v1, 1f</span>
<span class="p_add">+	addiu	t2, 1			# t2 has cvmseg_size</span>
<span class="p_add">+1:</span>
 	# Read the cavium mem control register
 	dmfc0	v0, CP0_CVMMEMCTL_REG
 	# Clear the lower 6 bits, the CVMSEG size
<span class="p_del">-	dins	v0, $0, 0, 6</span>
<span class="p_del">-	ori	v0, CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE</span>
<span class="p_add">+	dins	v0, t2, 0, 6</span>
 	dmtc0	v0, CP0_CVMMEMCTL_REG	# Write the cavium mem control register
 	dmfc0	v0, CP0_CVMCTL_REG	# Read the cavium control register
 	# Disable unaligned load/store support but leave HW fixup enabled
<span class="p_chunk">@@ -70,7 +77,7 @@</span> <span class="p_context"></span>
 	# Flush dcache after config change
 	cache	9, 0($0)
 	# Zero all of CVMSEG to make sure parity is correct
<span class="p_del">-	dli	v0, CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE</span>
<span class="p_add">+	move	v0, t2</span>
 	dsll	v0, 7
 	beqz	v0, 2f
 1:	dsubu	v0, 8
<span class="p_chunk">@@ -126,12 +133,7 @@</span> <span class="p_context"></span>
 	LONG_L	sp, (t0)
 	# Set the SP global variable to zero so the master knows we&#39;ve started
 	LONG_S	zero, (t0)
<span class="p_del">-#ifdef __OCTEON__</span>
<span class="p_del">-	syncw</span>
<span class="p_del">-	syncw</span>
<span class="p_del">-#else</span>
 	sync
<span class="p_del">-#endif</span>
 	# Jump to the normal Linux SMP entry point
 	j   smp_bootstrap
 	nop
<span class="p_chunk">@@ -148,6 +150,8 @@</span> <span class="p_context"></span>
 
 #endif /* CONFIG_SMP */
 octeon_main_processor:
<span class="p_add">+	dla	v0, octeon_cvmseg_lines</span>
<span class="p_add">+	sw	t2, 0(v0)</span>
 	.set pop
 .endm
 
<span class="p_header">diff --git a/arch/mips/include/asm/mipsregs.h b/arch/mips/include/asm/mipsregs.h</span>
<span class="p_header">index 858752dac337..4e87e4f5247a 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/mipsregs.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/mipsregs.h</span>
<span class="p_chunk">@@ -1126,6 +1126,8 @@</span> <span class="p_context"></span>
 #define FPU_CSR_RD	0x3	/* towards -Infinity */
 
 
<span class="p_add">+#define CAVIUM_OCTEON_SCRATCH_OFFSET (2 * 128 - 16 - 32768)</span>
<span class="p_add">+</span>
 #ifndef __ASSEMBLY__
 
 /*
<span class="p_header">diff --git a/arch/mips/include/asm/octeon/octeon.h b/arch/mips/include/asm/octeon/octeon.h</span>
<span class="p_header">index 92a17d67c1fa..f01af2469874 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/octeon/octeon.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/octeon/octeon.h</span>
<span class="p_chunk">@@ -359,6 +359,8 @@</span> <span class="p_context"> static inline uint32_t octeon_npi_read32(uint64_t address)</span>
 
 extern struct cvmx_bootinfo *octeon_bootinfo;
 
<span class="p_add">+extern u32 octeon_cvmseg_lines;</span>
<span class="p_add">+</span>
 extern uint64_t octeon_bootloader_entry_addr;
 
 extern void (*octeon_irq_setup_secondary)(void);
<span class="p_header">diff --git a/arch/mips/include/asm/processor.h b/arch/mips/include/asm/processor.h</span>
<span class="p_header">index af34afbc32d9..1a20f9c5509f 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/processor.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/processor.h</span>
<span class="p_chunk">@@ -216,7 +216,7 @@</span> <span class="p_context"> struct octeon_cop2_state {</span>
 	.cp2			= {0,},
 
 struct octeon_cvmseg_state {
<span class="p_del">-	unsigned long cvmseg[CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE]</span>
<span class="p_add">+	unsigned long cvmseg[CONFIG_CAVIUM_OCTEON_EXTRA_CVMSEG + 3]</span>
 			    [cpu_dcache_line_size() / sizeof(unsigned long)];
 };
 
<span class="p_header">diff --git a/arch/mips/kernel/octeon_switch.S b/arch/mips/kernel/octeon_switch.S</span>
<span class="p_header">index e42113fe2762..4f56902d5ee7 100644</span>
<span class="p_header">--- a/arch/mips/kernel/octeon_switch.S</span>
<span class="p_header">+++ b/arch/mips/kernel/octeon_switch.S</span>
<span class="p_chunk">@@ -29,7 +29,6 @@</span> <span class="p_context"></span>
 	cpu_save_nonscratch a0
 	LONG_S	ra, THREAD_REG31(a0)
 
<span class="p_del">-#if CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0</span>
 	/* Check if we need to store CVMSEG state */
 	dmfc0	t0, $11,7	/* CvmMemCtl */
 	bbit0	t0, 6, 3f	/* Is user access enabled? */
<span class="p_chunk">@@ -58,7 +57,6 @@</span> <span class="p_context"></span>
 	dmfc0	t0, $11,7	/* CvmMemCtl */
 	xori	t0, t0, 0x40	/* Bit 6 is CVMSEG user enable */
 	dmtc0	t0, $11,7	/* CvmMemCtl */
<span class="p_del">-#endif</span>
 3:
 
 #if defined(CONFIG_CC_STACKPROTECTOR) &amp;&amp; !defined(CONFIG_SMP)
<span class="p_header">diff --git a/arch/mips/mm/tlbex.c b/arch/mips/mm/tlbex.c</span>
<span class="p_header">index 79b9f2ad3ff5..3d3dfba465ae 100644</span>
<span class="p_header">--- a/arch/mips/mm/tlbex.c</span>
<span class="p_header">+++ b/arch/mips/mm/tlbex.c</span>
<span class="p_chunk">@@ -115,33 +115,17 @@</span> <span class="p_context"> static int use_lwx_insns(void)</span>
 		return 0;
 	}
 }
<span class="p_del">-#if defined(CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE) &amp;&amp; \</span>
<span class="p_del">-    CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0</span>
<span class="p_del">-static bool scratchpad_available(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return true;</span>
<span class="p_del">-}</span>
<span class="p_del">-static int scratchpad_offset(int i)</span>
<span class="p_del">-{</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * CVMSEG starts at address -32768 and extends for</span>
<span class="p_del">-	 * CAVIUM_OCTEON_CVMSEG_SIZE 128 byte cache lines.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	i += 1; /* Kernel use starts at the top and works down. */</span>
<span class="p_del">-	return CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE * 128 - (8 * i) - 32768;</span>
<span class="p_del">-}</span>
<span class="p_del">-#else</span>
<span class="p_del">-static bool scratchpad_available(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return false;</span>
<span class="p_del">-}</span>
<span class="p_add">+</span>
 static int scratchpad_offset(int i)
 {
<span class="p_add">+	if (IS_ENABLED(CONFIG_CPU_CAVIUM_OCTEON))</span>
<span class="p_add">+		return (CAVIUM_OCTEON_SCRATCH_OFFSET - (8 * i));</span>
<span class="p_add">+</span>
 	BUG();
 	/* Really unreachable, but evidently some GCC want this. */
 	return 0;
 }
<span class="p_del">-#endif</span>
<span class="p_add">+</span>
 /*
  * Found by experiment: At least some revisions of the 4kc throw under
  * some circumstances a machine check exception, triggered by invalid
<span class="p_chunk">@@ -1302,7 +1286,8 @@</span> <span class="p_context"> static void build_r4000_tlb_refill_handler(void)</span>
 	memset(relocs, 0, sizeof(relocs));
 	memset(final_handler, 0, sizeof(final_handler));
 
<span class="p_del">-	if (IS_ENABLED(CONFIG_64BIT) &amp;&amp; (scratch_reg &gt;= 0 || scratchpad_available()) &amp;&amp; use_bbit_insns()) {</span>
<span class="p_add">+	if (IS_ENABLED(CONFIG_64BIT) &amp;&amp; use_bbit_insns() &amp;&amp;</span>
<span class="p_add">+	   (scratch_reg &gt;= 0 || IS_ENABLED(CONFIG_CPU_CAVIUM_OCTEON))) {</span>
 		htlb_info = build_fast_tlb_refill_handler(&amp;p, &amp;l, &amp;r, K0, K1,
 							  scratch_reg);
 		vmalloc_mode = refill_scratch;
<span class="p_header">diff --git a/drivers/staging/octeon/ethernet-defines.h b/drivers/staging/octeon/ethernet-defines.h</span>
<span class="p_header">index 1e114422993a..33c71f86890b 100644</span>
<span class="p_header">--- a/drivers/staging/octeon/ethernet-defines.h</span>
<span class="p_header">+++ b/drivers/staging/octeon/ethernet-defines.h</span>
<span class="p_chunk">@@ -29,7 +29,7 @@</span> <span class="p_context"></span>
 #define REUSE_SKBUFFS_WITHOUT_FREE  1
 #endif
 
<span class="p_del">-#define USE_ASYNC_IOBDMA            (CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0)</span>
<span class="p_add">+#define USE_ASYNC_IOBDMA	1</span>
 
 /* Maximum number of SKBs to try to free per xmit packet. */
 #define MAX_OUT_QUEUE_DEPTH 1000

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



