
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[5/5] mm: add debugfs interface for parallel free tuning - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [5/5] mm: add debugfs interface for parallel free tuning</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=45931">Aaron Lu</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Feb. 24, 2017, 11:40 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170224114036.15621-6-aaron.lu@intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9589965/mbox/"
   >mbox</a>
|
   <a href="/patch/9589965/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9589965/">/patch/9589965/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	254F860471 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 24 Feb 2017 11:41:32 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D25CF28752
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 24 Feb 2017 11:41:31 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id C747328755; Fri, 24 Feb 2017 11:41:31 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4884E28752
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 24 Feb 2017 11:41:31 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751403AbdBXLlX (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 24 Feb 2017 06:41:23 -0500
Received: from mga05.intel.com ([192.55.52.43]:23805 &quot;EHLO mga05.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751115AbdBXLki (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 24 Feb 2017 06:40:38 -0500
Received: from fmsmga006.fm.intel.com ([10.253.24.20])
	by fmsmga105.fm.intel.com with ESMTP; 24 Feb 2017 03:40:37 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.35,200,1484035200&quot;; d=&quot;scan&#39;208&quot;;a=&quot;69710342&quot;
Received: from aaronlu.sh.intel.com ([10.239.13.44])
	by fmsmga006.fm.intel.com with ESMTP; 24 Feb 2017 03:40:36 -0800
From: Aaron Lu &lt;aaron.lu@intel.com&gt;
To: linux-mm@kvack.org, linux-kernel@vger.kernel.org
Cc: Dave Hansen &lt;dave.hansen@intel.com&gt;, Tim Chen &lt;tim.c.chen@intel.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Ying Huang &lt;ying.huang@intel.com&gt;, Aaron Lu &lt;aaron.lu@intel.com&gt;
Subject: [PATCH 5/5] mm: add debugfs interface for parallel free tuning
Date: Fri, 24 Feb 2017 19:40:36 +0800
Message-Id: &lt;20170224114036.15621-6-aaron.lu@intel.com&gt;
X-Mailer: git-send-email 2.9.3
In-Reply-To: &lt;20170224114036.15621-1-aaron.lu@intel.com&gt;
References: &lt;20170224114036.15621-1-aaron.lu@intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=45931">Aaron Lu</a> - Feb. 24, 2017, 11:40 a.m.</div>
<pre class="content">
Make it possible to set different values for async_free_threshold and
max_gather_batch_count through debugfs.

With this, we can do tests for different purposes:
1 Restore vanilla kernel bahaviour for performance comparison.
  Set max_gather_batch_count to a value like 20 to effectively restore
  the behaviour of vanilla kernel since this will make page gathered
  always smaller than async_free_threshold(effectively disable parallel
  free);
2 Debug purpose.
  Set async_free_threshold to a very small value(like 128) to trigger
  parallel free even on ordinary processes, ideal for debug purpose with
  a virtual machine that doesn&#39;t have much memory assigned to it;
3 Performance tuning.
  Use a different value for async_free_threshold and max_gather_batch_count
  other than the default to test if parallel free performs better or worse.
<span class="signed-off-by">
Signed-off-by: Aaron Lu &lt;aaron.lu@intel.com&gt;</span>
---
 mm/memory.c | 33 +++++++++++++++++++++++++++++++--
 1 file changed, 31 insertions(+), 2 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/memory.c b/mm/memory.c</span>
<span class="p_header">index 7d1fe74084be..9ca07c59e525 100644</span>
<span class="p_header">--- a/mm/memory.c</span>
<span class="p_header">+++ b/mm/memory.c</span>
<span class="p_chunk">@@ -184,6 +184,35 @@</span> <span class="p_context"> static void check_sync_rss_stat(struct task_struct *task)</span>
 
 #ifdef HAVE_GENERIC_MMU_GATHER
 
<span class="p_add">+static unsigned long async_free_threshold = ASYNC_FREE_THRESHOLD;</span>
<span class="p_add">+static unsigned long max_gather_batch_count = MAX_GATHER_BATCH_COUNT;</span>
<span class="p_add">+</span>
<span class="p_add">+#ifdef CONFIG_DEBUG_FS</span>
<span class="p_add">+static int __init tlb_mmu_parallel_free_debugfs(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	umode_t mode = S_IFREG | S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH;</span>
<span class="p_add">+	struct dentry *dir;</span>
<span class="p_add">+</span>
<span class="p_add">+	dir = debugfs_create_dir(&quot;parallel_free&quot;, NULL);</span>
<span class="p_add">+	if (!dir)</span>
<span class="p_add">+		return -ENOMEM;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (!debugfs_create_ulong(&quot;async_free_threshold&quot;, mode, dir,</span>
<span class="p_add">+				&amp;async_free_threshold))</span>
<span class="p_add">+		goto fail;</span>
<span class="p_add">+	if (!debugfs_create_ulong(&quot;max_gather_batch_count&quot;, mode, dir,</span>
<span class="p_add">+				&amp;max_gather_batch_count))</span>
<span class="p_add">+		goto fail;</span>
<span class="p_add">+</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+</span>
<span class="p_add">+fail:</span>
<span class="p_add">+	debugfs_remove_recursive(dir);</span>
<span class="p_add">+	return -ENOMEM;</span>
<span class="p_add">+}</span>
<span class="p_add">+late_initcall(tlb_mmu_parallel_free_debugfs);</span>
<span class="p_add">+#endif</span>
<span class="p_add">+</span>
 static bool tlb_next_batch(struct mmu_gather *tlb)
 {
 	struct mmu_gather_batch *batch;
<span class="p_chunk">@@ -194,7 +223,7 @@</span> <span class="p_context"> static bool tlb_next_batch(struct mmu_gather *tlb)</span>
 		return true;
 	}
 
<span class="p_del">-	if (tlb-&gt;batch_count == MAX_GATHER_BATCH_COUNT)</span>
<span class="p_add">+	if (tlb-&gt;batch_count == max_gather_batch_count)</span>
 		return false;
 
 	batch = (void *)__get_free_pages(GFP_NOWAIT | __GFP_NOWARN, 0);
<span class="p_chunk">@@ -306,7 +335,7 @@</span> <span class="p_context"> static void tlb_flush_mmu_free(struct mmu_gather *tlb)</span>
 {
 	struct batch_free_struct *batch_free = NULL;
 
<span class="p_del">-	if (tlb-&gt;page_nr &gt;= ASYNC_FREE_THRESHOLD)</span>
<span class="p_add">+	if (tlb-&gt;page_nr &gt;= async_free_threshold)</span>
 		batch_free = kmalloc(sizeof(*batch_free), GFP_NOWAIT | __GFP_NOWARN);
 
 	if (batch_free) {

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



