
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[04/04] iommu/ipmmu-vmsa: Replace local utlb code with fwspec ids - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [04/04] iommu/ipmmu-vmsa: Replace local utlb code with fwspec ids</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=19">Magnus Damm</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 15, 2017, 10:29 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;149752258917.21887.4347773581840409774.sendpatchset@little-apple&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9788499/mbox/"
   >mbox</a>
|
   <a href="/patch/9788499/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9788499/">/patch/9788499/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	7D4C46038E for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 15 Jun 2017 10:34:10 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6CA3F284C5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 15 Jun 2017 10:34:10 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 60DE6284DC; Thu, 15 Jun 2017 10:34:10 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,
	DKIM_ADSP_CUSTOM_MED, 
	DKIM_SIGNED, FREEMAIL_FROM, RCVD_IN_DNSWL_HI,
	T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id C1AAD284D2
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 15 Jun 2017 10:34:09 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752523AbdFOKeG (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 15 Jun 2017 06:34:06 -0400
Received: from mail-pg0-f65.google.com ([74.125.83.65]:34022 &quot;EHLO
	mail-pg0-f65.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752427AbdFOKdl (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 15 Jun 2017 06:33:41 -0400
Received: by mail-pg0-f65.google.com with SMTP id j186so1250060pge.1;
	Thu, 15 Jun 2017 03:33:40 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=from:to:cc:date:message-id:in-reply-to:references:subject;
	bh=c0tzq3AhBqzi+R2WpUduYWkbtX3zyh4oO1FUlG53sPg=;
	b=Inc6cFERQOy5PZZMEWpOJ2t2PWgYoW6ZJLFsbHRlwBPDXbCkJAEfv4oWi3bqAy9q1m
	IO7K640ZzakyXaoRHJrmL7WsWFvv98wZ7mXRFLSpuNG7VORtohUh77Z55hJiQlJY42E6
	VP1ORr/MrDEn/8RLVY/0iTqr0/ovSZ+Ylw/TZUjC6FPtxXKmTWr45bD22kWuJRl9PAzz
	wMOAT4uILw5RD3q5C+0WlPL6Y5Myjwe9psARCxrWH++C+sRW9tmaEN8FNwVHuIlp69mu
	/DB2PUh0FEbdh8Fv1yOx7Rvy9PntYK9UPUTnrJMEE0tmQ3dkWB/Mp9Hxk6ARVxai7uJt
	Lx5g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:date:message-id:in-reply-to
	:references:subject;
	bh=c0tzq3AhBqzi+R2WpUduYWkbtX3zyh4oO1FUlG53sPg=;
	b=KAcaBRymyRmQMxPyPPTQMsNePk1srx4Btr/d47Jsd+zmh1MPVo69OBxD2Y1CrsAdTW
	20nTuSLPvJKXhAV1Mu+4zbM51gMLMgo7cs9svkP/8NPGFvmMscRxaYcl3y7YXlyUeKPs
	CWwtqS2aNdF21L9SmfhEAhiqV0gMy8Vhi1QmgX7Sa0Q+qB/GmLNgpKqnPcRxkL/OXVtI
	LLEqxo1uH00c3+BOsWkNhMcz2Pj7mGx/XhXusLwWgJKT2zjRLyFVSieRtIV8J0XzLKmS
	DjYmEY/vC2VhcRz0vSAchJeVgdMMEj+Yupp7GhkWWdEG3XktfPKDk73FHOdt6OFJWgH/
	/jWg==
X-Gm-Message-State: AKS2vOxC2u6etOq03pVATQib8FBKnYfqc97hdI6RVCT9dqwOZf+xfrpt
	+GTNA/O0iT3YiA==
X-Received: by 10.99.178.75 with SMTP id t11mr4617514pgo.34.1497522820436;
	Thu, 15 Jun 2017 03:33:40 -0700 (PDT)
Received: from [127.0.0.1] (s214090.ppp.asahi-net.or.jp. [220.157.214.90])
	by smtp.gmail.com with ESMTPSA id
	22sm4734380pgb.50.2017.06.15.03.33.36
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Thu, 15 Jun 2017 03:33:38 -0700 (PDT)
From: Magnus Damm &lt;magnus.damm@gmail.com&gt;
To: joro@8bytes.org
Cc: laurent.pinchart+renesas@ideasonboard.com, geert+renesas@glider.be,
	sricharan@codeaurora.org, will.deacon@arm.com,
	linux-kernel@vger.kernel.org, linux-renesas-soc@vger.kernel.org,
	iommu@lists.linux-foundation.org, horms+renesas@verge.net.au,
	Magnus Damm &lt;magnus.damm@gmail.com&gt;, robin.murphy@arm.com,
	m.szyprowski@samsung.com
Date: Thu, 15 Jun 2017 19:29:49 +0900
Message-Id: &lt;149752258917.21887.4347773581840409774.sendpatchset@little-apple&gt;
In-Reply-To: &lt;149752254550.21887.15183665699230243235.sendpatchset@little-apple&gt;
References: &lt;149752254550.21887.15183665699230243235.sendpatchset@little-apple&gt;
Subject: [PATCH 04/04] iommu/ipmmu-vmsa: Replace local utlb code with fwspec
	ids
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=19">Magnus Damm</a> - June 15, 2017, 10:29 a.m.</div>
<pre class="content">
<span class="from">From: Magnus Damm &lt;damm+renesas@opensource.se&gt;</span>

Now when both 32-bit and 64-bit code inside the driver is using
fwspec it is possible to replace the utlb handling with fwspec ids
that get populated from -&gt;of_xlate().

Suggested-by: Robin Murphy &lt;robin.murphy@arm.com&gt;
<span class="signed-off-by">Signed-off-by: Magnus Damm &lt;damm+renesas@opensource.se&gt;</span>
---

 drivers/iommu/ipmmu-vmsa.c |  104 ++++++++------------------------------------
 1 file changed, 19 insertions(+), 85 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=70">Geert Uytterhoeven</a> - June 16, 2017, 7:18 a.m.</div>
<pre class="content">
Hi Magnus,

On Thu, Jun 15, 2017 at 12:29 PM, Magnus Damm &lt;magnus.damm@gmail.com&gt; wrote:
<span class="quote">&gt; Now when both 32-bit and 64-bit code inside the driver is using</span>
<span class="quote">&gt; fwspec it is possible to replace the utlb handling with fwspec ids</span>
<span class="quote">&gt; that get populated from -&gt;of_xlate().</span>

Thanks for your patch!
<span class="quote">
&gt; --- 0013/drivers/iommu/ipmmu-vmsa.c</span>
<span class="quote">&gt; +++ work/drivers/iommu/ipmmu-vmsa.c     2017-06-15 18:32:27.580607110 +0900</span>
<span class="quote">
&gt;  static int ipmmu_of_xlate(struct device *dev,</span>
<span class="quote">&gt;                           struct of_phandle_args *spec)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; -       return ipmmu_init_platform_device(dev);</span>
<span class="quote">&gt; +       iommu_fwspec_add_ids(dev, spec-&gt;args, 1);</span>

Does it hurt if iommu_fwspec_add_ids() is called multiple times, as this is
done before the &quot;Initialize once - xlate() will call multiple times&quot; check?
<span class="quote">
&gt; +</span>
<span class="quote">&gt; +       return ipmmu_init_platform_device(dev, spec);</span>
<span class="quote">&gt;  }</span>

Gr{oetje,eeting}s,

                        Geert

--
Geert Uytterhoeven -- There&#39;s lots of Linux beyond ia32 -- geert@linux-m68k.org

In personal conversations with technical people, I call myself a hacker. But
when I&#39;m talking to journalists I just say &quot;programmer&quot; or something like that.
                                -- Linus Torvalds
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=19">Magnus Damm</a> - June 16, 2017, 10:10 a.m.</div>
<pre class="content">
Hi Geert,

On Fri, Jun 16, 2017 at 4:18 PM, Geert Uytterhoeven
&lt;geert@linux-m68k.org&gt; wrote:
<span class="quote">&gt; Hi Magnus,</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; On Thu, Jun 15, 2017 at 12:29 PM, Magnus Damm &lt;magnus.damm@gmail.com&gt; wrote:</span>
<span class="quote">&gt;&gt; Now when both 32-bit and 64-bit code inside the driver is using</span>
<span class="quote">&gt;&gt; fwspec it is possible to replace the utlb handling with fwspec ids</span>
<span class="quote">&gt;&gt; that get populated from -&gt;of_xlate().</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Thanks for your patch!</span>

Thanks for the feedback!
<span class="quote">
&gt;&gt; --- 0013/drivers/iommu/ipmmu-vmsa.c</span>
<span class="quote">&gt;&gt; +++ work/drivers/iommu/ipmmu-vmsa.c     2017-06-15 18:32:27.580607110 +0900</span>
<span class="quote">&gt;</span>
<span class="quote">&gt;&gt;  static int ipmmu_of_xlate(struct device *dev,</span>
<span class="quote">&gt;&gt;                           struct of_phandle_args *spec)</span>
<span class="quote">&gt;&gt;  {</span>
<span class="quote">&gt;&gt; -       return ipmmu_init_platform_device(dev);</span>
<span class="quote">&gt;&gt; +       iommu_fwspec_add_ids(dev, spec-&gt;args, 1);</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Does it hurt if iommu_fwspec_add_ids() is called multiple times, as this is</span>
<span class="quote">&gt; done before the &quot;Initialize once - xlate() will call multiple times&quot; check?</span>

The function needs to be called several times to populate the ids, so
that the &quot;initialize once&quot; check happens later is intentional and
correct. Perhaps a bit unclear though...
<span class="quote">
&gt;&gt; +</span>
<span class="quote">&gt;&gt; +       return ipmmu_init_platform_device(dev, spec);</span>
<span class="quote">&gt;&gt;  }</span>

Cheers,

/ magnus
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- 0013/drivers/iommu/ipmmu-vmsa.c</span>
<span class="p_header">+++ work/drivers/iommu/ipmmu-vmsa.c	2017-06-15 18:32:27.580607110 +0900</span>
<span class="p_chunk">@@ -19,6 +19,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/iommu.h&gt;
 #include &lt;linux/module.h&gt;
 #include &lt;linux/of.h&gt;
<span class="p_add">+#include &lt;linux/of_platform.h&gt;</span>
 #include &lt;linux/platform_device.h&gt;
 #include &lt;linux/sizes.h&gt;
 #include &lt;linux/slab.h&gt;
<span class="p_chunk">@@ -59,8 +60,6 @@</span> <span class="p_context"> struct ipmmu_vmsa_domain {</span>
 
 struct ipmmu_vmsa_iommu_priv {
 	struct ipmmu_vmsa_device *mmu;
<span class="p_del">-	unsigned int *utlbs;</span>
<span class="p_del">-	unsigned int num_utlbs;</span>
 	struct device *dev;
 	struct list_head list;
 };
<span class="p_chunk">@@ -550,13 +549,14 @@</span> <span class="p_context"> static int ipmmu_attach_device(struct io</span>
 			       struct device *dev)
 {
 	struct ipmmu_vmsa_iommu_priv *priv = to_priv(dev);
<span class="p_add">+	struct iommu_fwspec *fwspec = dev-&gt;iommu_fwspec;</span>
 	struct ipmmu_vmsa_device *mmu = priv-&gt;mmu;
 	struct ipmmu_vmsa_domain *domain = to_vmsa_domain(io_domain);
 	unsigned long flags;
 	unsigned int i;
 	int ret = 0;
 
<span class="p_del">-	if (!mmu) {</span>
<span class="p_add">+	if (!priv || !priv-&gt;mmu) {</span>
 		dev_err(dev, &quot;Cannot attach to IPMMU\n&quot;);
 		return -ENXIO;
 	}
<span class="p_chunk">@@ -583,8 +583,8 @@</span> <span class="p_context"> static int ipmmu_attach_device(struct io</span>
 	if (ret &lt; 0)
 		return ret;
 
<span class="p_del">-	for (i = 0; i &lt; priv-&gt;num_utlbs; ++i)</span>
<span class="p_del">-		ipmmu_utlb_enable(domain, priv-&gt;utlbs[i]);</span>
<span class="p_add">+	for (i = 0; i &lt; fwspec-&gt;num_ids; ++i)</span>
<span class="p_add">+		ipmmu_utlb_enable(domain, fwspec-&gt;ids[i]);</span>
 
 	return 0;
 }
<span class="p_chunk">@@ -592,12 +592,12 @@</span> <span class="p_context"> static int ipmmu_attach_device(struct io</span>
 static void ipmmu_detach_device(struct iommu_domain *io_domain,
 				struct device *dev)
 {
<span class="p_del">-	struct ipmmu_vmsa_iommu_priv *priv = to_priv(dev);</span>
<span class="p_add">+	struct iommu_fwspec *fwspec = dev-&gt;iommu_fwspec;</span>
 	struct ipmmu_vmsa_domain *domain = to_vmsa_domain(io_domain);
 	unsigned int i;
 
<span class="p_del">-	for (i = 0; i &lt; priv-&gt;num_utlbs; ++i)</span>
<span class="p_del">-		ipmmu_utlb_disable(domain, priv-&gt;utlbs[i]);</span>
<span class="p_add">+	for (i = 0; i &lt; fwspec-&gt;num_ids; ++i)</span>
<span class="p_add">+		ipmmu_utlb_disable(domain, fwspec-&gt;ids[i]);</span>
 
 	/*
 	 * TODO: Optimize by disabling the context when no device is attached.
<span class="p_chunk">@@ -633,102 +633,36 @@</span> <span class="p_context"> static phys_addr_t ipmmu_iova_to_phys(st</span>
 	return domain-&gt;iop-&gt;iova_to_phys(domain-&gt;iop, iova);
 }
 
<span class="p_del">-static int ipmmu_find_utlbs(struct ipmmu_vmsa_device *mmu, struct device *dev,</span>
<span class="p_del">-			    unsigned int *utlbs, unsigned int num_utlbs)</span>
<span class="p_del">-{</span>
<span class="p_del">-	unsigned int i;</span>
<span class="p_del">-</span>
<span class="p_del">-	for (i = 0; i &lt; num_utlbs; ++i) {</span>
<span class="p_del">-		struct of_phandle_args args;</span>
<span class="p_del">-		int ret;</span>
<span class="p_del">-</span>
<span class="p_del">-		ret = of_parse_phandle_with_args(dev-&gt;of_node, &quot;iommus&quot;,</span>
<span class="p_del">-						 &quot;#iommu-cells&quot;, i, &amp;args);</span>
<span class="p_del">-		if (ret &lt; 0)</span>
<span class="p_del">-			return ret;</span>
<span class="p_del">-</span>
<span class="p_del">-		of_node_put(args.np);</span>
<span class="p_del">-</span>
<span class="p_del">-		if (args.np != mmu-&gt;dev-&gt;of_node || args.args_count != 1)</span>
<span class="p_del">-			return -EINVAL;</span>
<span class="p_del">-</span>
<span class="p_del">-		utlbs[i] = args.args[0];</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static int ipmmu_init_platform_device(struct device *dev)</span>
<span class="p_add">+static int ipmmu_init_platform_device(struct device *dev,</span>
<span class="p_add">+				      struct of_phandle_args *args)</span>
 {
<span class="p_add">+	struct platform_device *ipmmu_pdev;</span>
 	struct ipmmu_vmsa_iommu_priv *priv;
<span class="p_del">-	struct ipmmu_vmsa_device *mmu;</span>
<span class="p_del">-	unsigned int *utlbs;</span>
<span class="p_del">-	unsigned int i;</span>
<span class="p_del">-	int num_utlbs;</span>
<span class="p_del">-	int ret = -ENODEV;</span>
 
 	/* Initialize once - xlate() will call multiple times */
 	if (to_priv(dev))
 		return 0;
 
<span class="p_del">-	/* Find the master corresponding to the device. */</span>
<span class="p_del">-</span>
<span class="p_del">-	num_utlbs = of_count_phandle_with_args(dev-&gt;of_node, &quot;iommus&quot;,</span>
<span class="p_del">-					       &quot;#iommu-cells&quot;);</span>
<span class="p_del">-	if (num_utlbs &lt; 0)</span>
<span class="p_add">+	ipmmu_pdev = of_find_device_by_node(args-&gt;np);</span>
<span class="p_add">+	if (!ipmmu_pdev)</span>
 		return -ENODEV;
 
<span class="p_del">-	utlbs = kcalloc(num_utlbs, sizeof(*utlbs), GFP_KERNEL);</span>
<span class="p_del">-	if (!utlbs)</span>
<span class="p_del">-		return -ENOMEM;</span>
<span class="p_del">-</span>
<span class="p_del">-	spin_lock(&amp;ipmmu_devices_lock);</span>
<span class="p_del">-</span>
<span class="p_del">-	list_for_each_entry(mmu, &amp;ipmmu_devices, list) {</span>
<span class="p_del">-		ret = ipmmu_find_utlbs(mmu, dev, utlbs, num_utlbs);</span>
<span class="p_del">-		if (!ret) {</span>
<span class="p_del">-			/*</span>
<span class="p_del">-			 * TODO Take a reference to the MMU to protect</span>
<span class="p_del">-			 * against device removal.</span>
<span class="p_del">-			 */</span>
<span class="p_del">-			break;</span>
<span class="p_del">-		}</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
<span class="p_del">-	spin_unlock(&amp;ipmmu_devices_lock);</span>
<span class="p_del">-</span>
<span class="p_del">-	if (ret &lt; 0)</span>
<span class="p_del">-		goto error;</span>
<span class="p_del">-</span>
<span class="p_del">-	for (i = 0; i &lt; num_utlbs; ++i) {</span>
<span class="p_del">-		if (utlbs[i] &gt;= mmu-&gt;num_utlbs) {</span>
<span class="p_del">-			ret = -EINVAL;</span>
<span class="p_del">-			goto error;</span>
<span class="p_del">-		}</span>
<span class="p_del">-	}</span>
<span class="p_del">-</span>
 	priv = kzalloc(sizeof(*priv), GFP_KERNEL);
<span class="p_del">-	if (!priv) {</span>
<span class="p_del">-		ret = -ENOMEM;</span>
<span class="p_del">-		goto error;</span>
<span class="p_del">-	}</span>
<span class="p_add">+	if (!priv)</span>
<span class="p_add">+		return -ENOMEM;</span>
 
<span class="p_del">-	priv-&gt;mmu = mmu;</span>
<span class="p_del">-	priv-&gt;utlbs = utlbs;</span>
<span class="p_del">-	priv-&gt;num_utlbs = num_utlbs;</span>
<span class="p_add">+	priv-&gt;mmu = platform_get_drvdata(ipmmu_pdev);</span>
 	priv-&gt;dev = dev;
 	dev-&gt;iommu_fwspec-&gt;iommu_priv = priv;
 	return 0;
<span class="p_del">-</span>
<span class="p_del">-error:</span>
<span class="p_del">-	kfree(utlbs);</span>
<span class="p_del">-	return ret;</span>
 }
 
 static int ipmmu_of_xlate(struct device *dev,
 			  struct of_phandle_args *spec)
 {
<span class="p_del">-	return ipmmu_init_platform_device(dev);</span>
<span class="p_add">+	iommu_fwspec_add_ids(dev, spec-&gt;args, 1);</span>
<span class="p_add">+</span>
<span class="p_add">+	return ipmmu_init_platform_device(dev, spec);</span>
 }
 
 #if defined(CONFIG_ARM) &amp;&amp; !defined(CONFIG_IOMMU_DMA)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



