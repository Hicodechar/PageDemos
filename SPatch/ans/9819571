
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[tip:x86/mm] x86/mm: Don&#39;t reenter flush_tlb_func_common() - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [tip:x86/mm] x86/mm: Don&#39;t reenter flush_tlb_func_common()</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 30, 2017, 1:11 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;tip-bc0d5a89fbe3c83ac45438d7ba88309f4713615d@git.kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9819571/mbox/"
   >mbox</a>
|
   <a href="/patch/9819571/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9819571/">/patch/9819571/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	024EC603F2 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 30 Jun 2017 13:17:37 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E32F31FE84
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 30 Jun 2017 13:17:36 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D797C28472; Fri, 30 Jun 2017 13:17:36 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 51DA41FE84
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 30 Jun 2017 13:17:36 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752553AbdF3NR2 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 30 Jun 2017 09:17:28 -0400
Received: from terminus.zytor.com ([65.50.211.136]:49915 &quot;EHLO
	terminus.zytor.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751951AbdF3NRZ (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 30 Jun 2017 09:17:25 -0400
Received: from terminus.zytor.com (localhost [127.0.0.1])
	by terminus.zytor.com (8.15.2/8.15.2) with ESMTP id v5UDBNlE014787;
	Fri, 30 Jun 2017 06:11:23 -0700
Received: (from tipbot@localhost)
	by terminus.zytor.com (8.15.2/8.15.2/Submit) id v5UDBMLb014784;
	Fri, 30 Jun 2017 06:11:22 -0700
Date: Fri, 30 Jun 2017 06:11:22 -0700
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to
	tipbot@zytor.com using -f
From: tip-bot for Andy Lutomirski &lt;tipbot@zytor.com&gt;
Message-ID: &lt;tip-bc0d5a89fbe3c83ac45438d7ba88309f4713615d@git.kernel.org&gt;
Cc: luto@kernel.org, dave.hansen@intel.com, riel@redhat.com,
	linux-kernel@vger.kernel.org, nadav.amit@gmail.com,
	tglx@linutronix.de, torvalds@linux-foundation.org,
	alexander.levin@verizon.com, akpm@linux-foundation.org,
	mingo@kernel.org, arjan@linux.intel.com, bp@alien8.de,
	mgorman@suse.de, hpa@zytor.com, peterz@infradead.org
Reply-To: hpa@zytor.com, mgorman@suse.de, peterz@infradead.org,
	mingo@kernel.org, arjan@linux.intel.com, bp@alien8.de,
	nadav.amit@gmail.com, tglx@linutronix.de,
	torvalds@linux-foundation.org, alexander.levin@verizon.com,
	akpm@linux-foundation.org, luto@kernel.org,
	dave.hansen@intel.com, linux-kernel@vger.kernel.org,
	riel@redhat.com
In-Reply-To: &lt;855acf733268d521c9f2e191faee2dcc23a29729.1498751203.git.luto@kernel.org&gt;
References: &lt;855acf733268d521c9f2e191faee2dcc23a29729.1498751203.git.luto@kernel.org&gt;
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/mm] x86/mm: Don&#39;t reenter flush_tlb_func_common()
Git-Commit-ID: bc0d5a89fbe3c83ac45438d7ba88309f4713615d
X-Mailer: tip-git-log-daemon
Robot-ID: &lt;tip-bot.git.kernel.org&gt;
Robot-Unsubscribe: Contact &lt;mailto:hpa@kernel.org&gt; to get blacklisted from
	these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a> - June 30, 2017, 1:11 p.m.</div>
<pre class="content">
Commit-ID:  bc0d5a89fbe3c83ac45438d7ba88309f4713615d
Gitweb:     http://git.kernel.org/tip/bc0d5a89fbe3c83ac45438d7ba88309f4713615d
Author:     Andy Lutomirski &lt;luto@kernel.org&gt;
AuthorDate: Thu, 29 Jun 2017 08:53:13 -0700
Committer:  Ingo Molnar &lt;mingo@kernel.org&gt;
CommitDate: Fri, 30 Jun 2017 10:12:35 +0200

x86/mm: Don&#39;t reenter flush_tlb_func_common()

It was historically possible to have two concurrent TLB flushes
targetting the same CPU: one initiated locally and one initiated
remotely.  This can now cause an OOPS in leave_mm() at
arch/x86/mm/tlb.c:47:

        if (this_cpu_read(cpu_tlbstate.state) == TLBSTATE_OK)
                BUG();

with this call trace:
 flush_tlb_func_local arch/x86/mm/tlb.c:239 [inline]
 flush_tlb_mm_range+0x26d/0x370 arch/x86/mm/tlb.c:317

Without reentrancy, this OOPS is impossible: leave_mm() is only
called if we&#39;re not in TLBSTATE_OK, but then we&#39;re unexpectedly
in TLBSTATE_OK in leave_mm().

This can be caused by flush_tlb_func_remote() happening between
the two checks and calling leave_mm(), resulting in two consecutive
leave_mm() calls on the same CPU with no intervening switch_mm()
calls.

We never saw this OOPS before because the old leave_mm()
implementation didn&#39;t put us back in TLBSTATE_OK, so the assertion
didn&#39;t fire.

Nadav noticed the reentrancy issue in a different context, but
neither of us realized that it caused a problem yet.

Reported-by: Levin, Alexander (Sasha Levin) &lt;alexander.levin@verizon.com&gt;
<span class="signed-off-by">Signed-off-by: Andy Lutomirski &lt;luto@kernel.org&gt;</span>
<span class="reviewed-by">Reviewed-by: Nadav Amit &lt;nadav.amit@gmail.com&gt;</span>
<span class="reviewed-by">Reviewed-by: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Arjan van de Ven &lt;arjan@linux.intel.com&gt;
Cc: Borislav Petkov &lt;bp@alien8.de&gt;
Cc: Dave Hansen &lt;dave.hansen@intel.com&gt;
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Mel Gorman &lt;mgorman@suse.de&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: Rik van Riel &lt;riel@redhat.com&gt;
Cc: linux-mm@kvack.org
Fixes: 3d28ebceaffa (&quot;x86/mm: Rework lazy TLB to track the actual loaded mm&quot;)
Link: http://lkml.kernel.org/r/855acf733268d521c9f2e191faee2dcc23a29729.1498751203.git.luto@kernel.org
<span class="signed-off-by">Signed-off-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
---
 arch/x86/mm/tlb.c | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/mm/tlb.c b/arch/x86/mm/tlb.c</span>
<span class="p_header">index b2485d6..1cc4783 100644</span>
<span class="p_header">--- a/arch/x86/mm/tlb.c</span>
<span class="p_header">+++ b/arch/x86/mm/tlb.c</span>
<span class="p_chunk">@@ -192,6 +192,9 @@</span> <span class="p_context"> void switch_mm_irqs_off(struct mm_struct *prev, struct mm_struct *next,</span>
 static void flush_tlb_func_common(const struct flush_tlb_info *f,
 				  bool local, enum tlb_flush_reason reason)
 {
<span class="p_add">+	/* This code cannot presently handle being reentered. */</span>
<span class="p_add">+	VM_WARN_ON(!irqs_disabled());</span>
<span class="p_add">+</span>
 	if (this_cpu_read(cpu_tlbstate.state) != TLBSTATE_OK) {
 		leave_mm(smp_processor_id());
 		return;
<span class="p_chunk">@@ -297,8 +300,13 @@</span> <span class="p_context"> void flush_tlb_mm_range(struct mm_struct *mm, unsigned long start,</span>
 		info.end = TLB_FLUSH_ALL;
 	}
 
<span class="p_del">-	if (mm == this_cpu_read(cpu_tlbstate.loaded_mm))</span>
<span class="p_add">+	if (mm == this_cpu_read(cpu_tlbstate.loaded_mm)) {</span>
<span class="p_add">+		VM_WARN_ON(irqs_disabled());</span>
<span class="p_add">+		local_irq_disable();</span>
 		flush_tlb_func_local(&amp;info, TLB_LOCAL_MM_SHOOTDOWN);
<span class="p_add">+		local_irq_enable();</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	if (cpumask_any_but(mm_cpumask(mm), cpu) &lt; nr_cpu_ids)
 		flush_tlb_others(mm_cpumask(mm), &amp;info);
 	put_cpu();
<span class="p_chunk">@@ -354,8 +362,13 @@</span> <span class="p_context"> void arch_tlbbatch_flush(struct arch_tlbflush_unmap_batch *batch)</span>
 
 	int cpu = get_cpu();
 
<span class="p_del">-	if (cpumask_test_cpu(cpu, &amp;batch-&gt;cpumask))</span>
<span class="p_add">+	if (cpumask_test_cpu(cpu, &amp;batch-&gt;cpumask)) {</span>
<span class="p_add">+		VM_WARN_ON(irqs_disabled());</span>
<span class="p_add">+		local_irq_disable();</span>
 		flush_tlb_func_local(&amp;info, TLB_LOCAL_SHOOTDOWN);
<span class="p_add">+		local_irq_enable();</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
 	if (cpumask_any_but(&amp;batch-&gt;cpumask, cpu) &lt; nr_cpu_ids)
 		flush_tlb_others(&amp;batch-&gt;cpumask, &amp;info);
 	cpumask_clear(&amp;batch-&gt;cpumask);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



