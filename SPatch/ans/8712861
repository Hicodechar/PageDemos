
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[tip:x86/cpu] x86/cpufeature: Remove cpu_has_pge - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [tip:x86/cpu] x86/cpufeature: Remove cpu_has_pge</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 31, 2016, 1:03 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;tip-c109bf95992b391bb40bc37c5d309d13fead99b5@git.kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8712861/mbox/"
   >mbox</a>
|
   <a href="/patch/8712861/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8712861/">/patch/8712861/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id 8E1F9C0553
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 31 Mar 2016 13:04:58 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 3A58220272
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 31 Mar 2016 13:04:54 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 6BDD220221
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 31 Mar 2016 13:04:49 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1756958AbcCaNEp (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 31 Mar 2016 09:04:45 -0400
Received: from terminus.zytor.com ([198.137.202.10]:42794 &quot;EHLO
	terminus.zytor.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1756301AbcCaNEo (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 31 Mar 2016 09:04:44 -0400
Received: from terminus.zytor.com (localhost [127.0.0.1])
	by terminus.zytor.com (8.15.2/8.15.2) with ESMTP id u2VD3wE7001876;
	Thu, 31 Mar 2016 06:04:03 -0700
Received: (from tipbot@localhost)
	by terminus.zytor.com (8.15.2/8.15.2/Submit) id u2VD3wJn001873;
	Thu, 31 Mar 2016 06:03:58 -0700
Date: Thu, 31 Mar 2016 06:03:58 -0700
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to
	tipbot@zytor.com using -f
From: tip-bot for Borislav Petkov &lt;tipbot@zytor.com&gt;
Message-ID: &lt;tip-c109bf95992b391bb40bc37c5d309d13fead99b5@git.kernel.org&gt;
Cc: bp@suse.de, linux-kernel@vger.kernel.org,
	torvalds@linux-foundation.org, tglx@linutronix.de,
	peterz@infradead.org, mingo@kernel.org, hpa@zytor.com
Reply-To: hpa@zytor.com, mingo@kernel.org, tglx@linutronix.de,
	peterz@infradead.org, torvalds@linux-foundation.org,
	linux-kernel@vger.kernel.org, bp@suse.de
In-Reply-To: &lt;1459266123-21878-10-git-send-email-bp@alien8.de&gt;
References: &lt;1459266123-21878-10-git-send-email-bp@alien8.de&gt;
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/cpu] x86/cpufeature: Remove cpu_has_pge
Git-Commit-ID: c109bf95992b391bb40bc37c5d309d13fead99b5
X-Mailer: tip-git-log-daemon
Robot-ID: &lt;tip-bot.git.kernel.org&gt;
Robot-Unsubscribe: Contact &lt;mailto:hpa@kernel.org&gt; to get blacklisted from
	these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
X-Spam-Status: No, score=-7.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a> - March 31, 2016, 1:03 p.m.</div>
<pre class="content">
Commit-ID:  c109bf95992b391bb40bc37c5d309d13fead99b5
Gitweb:     http://git.kernel.org/tip/c109bf95992b391bb40bc37c5d309d13fead99b5
Author:     Borislav Petkov &lt;bp@suse.de&gt;
AuthorDate: Tue, 29 Mar 2016 17:42:02 +0200
Committer:  Ingo Molnar &lt;mingo@kernel.org&gt;
CommitDate: Thu, 31 Mar 2016 13:35:09 +0200

x86/cpufeature: Remove cpu_has_pge

Use static_cpu_has() in __flush_tlb_all() due to the time-sensitivity of
this one.
<span class="signed-off-by">
Signed-off-by: Borislav Petkov &lt;bp@suse.de&gt;</span>
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Peter Zijlstra &lt;peterz@infradead.org&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;
Link: http://lkml.kernel.org/r/1459266123-21878-10-git-send-email-bp@alien8.de
<span class="signed-off-by">Signed-off-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
---
 arch/x86/include/asm/cpufeature.h  | 1 -
 arch/x86/include/asm/tlbflush.h    | 2 +-
 arch/x86/kernel/cpu/intel.c        | 6 +++---
 arch/x86/kernel/cpu/mtrr/cyrix.c   | 4 ++--
 arch/x86/kernel/cpu/mtrr/generic.c | 4 ++--
 arch/x86/mm/init.c                 | 2 +-
 arch/x86/xen/enlighten.c           | 2 +-
 drivers/lguest/x86/core.c          | 2 +-
 8 files changed, 11 insertions(+), 12 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/cpufeature.h b/arch/x86/include/asm/cpufeature.h</span>
<span class="p_header">index 5e02bc2..f97b534 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/cpufeature.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/cpufeature.h</span>
<span class="p_chunk">@@ -121,7 +121,6 @@</span> <span class="p_context"> extern const char * const x86_bug_flags[NBUGINTS*32];</span>
 #define cpu_has_fpu		boot_cpu_has(X86_FEATURE_FPU)
 #define cpu_has_pse		boot_cpu_has(X86_FEATURE_PSE)
 #define cpu_has_tsc		boot_cpu_has(X86_FEATURE_TSC)
<span class="p_del">-#define cpu_has_pge		boot_cpu_has(X86_FEATURE_PGE)</span>
 #define cpu_has_apic		boot_cpu_has(X86_FEATURE_APIC)
 #define cpu_has_fxsr		boot_cpu_has(X86_FEATURE_FXSR)
 #define cpu_has_xmm		boot_cpu_has(X86_FEATURE_XMM)
<span class="p_header">diff --git a/arch/x86/include/asm/tlbflush.h b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">index c24b422..3628e6c 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_chunk">@@ -181,7 +181,7 @@</span> <span class="p_context"> static inline void __native_flush_tlb_single(unsigned long addr)</span>
 
 static inline void __flush_tlb_all(void)
 {
<span class="p_del">-	if (cpu_has_pge)</span>
<span class="p_add">+	if (static_cpu_has(X86_FEATURE_PGE))</span>
 		__flush_tlb_global();
 	else
 		__flush_tlb();
<span class="p_header">diff --git a/arch/x86/kernel/cpu/intel.c b/arch/x86/kernel/cpu/intel.c</span>
<span class="p_header">index 1dba36f..f71a349 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/intel.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/intel.c</span>
<span class="p_chunk">@@ -152,9 +152,9 @@</span> <span class="p_context"> static void early_init_intel(struct cpuinfo_x86 *c)</span>
 	 *  the TLB when any changes are made to any of the page table entries.
 	 *  The operating system must reload CR3 to cause the TLB to be flushed&quot;
 	 *
<span class="p_del">-	 * As a result cpu_has_pge() in arch/x86/include/asm/tlbflush.h should</span>
<span class="p_del">-	 * be false so that __flush_tlb_all() causes CR3 insted of CR4.PGE</span>
<span class="p_del">-	 * to be modified</span>
<span class="p_add">+	 * As a result, boot_cpu_has(X86_FEATURE_PGE) in arch/x86/include/asm/tlbflush.h</span>
<span class="p_add">+	 * should be false so that __flush_tlb_all() causes CR3 insted of CR4.PGE</span>
<span class="p_add">+	 * to be modified.</span>
 	 */
 	if (c-&gt;x86 == 5 &amp;&amp; c-&gt;x86_model == 9) {
 		pr_info(&quot;Disabling PGE capability bit\n&quot;);
<span class="p_header">diff --git a/arch/x86/kernel/cpu/mtrr/cyrix.c b/arch/x86/kernel/cpu/mtrr/cyrix.c</span>
<span class="p_header">index f8c81ba..b1086f7 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/mtrr/cyrix.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/mtrr/cyrix.c</span>
<span class="p_chunk">@@ -137,7 +137,7 @@</span> <span class="p_context"> static void prepare_set(void)</span>
 	u32 cr0;
 
 	/*  Save value of CR4 and clear Page Global Enable (bit 7)  */
<span class="p_del">-	if (cpu_has_pge) {</span>
<span class="p_add">+	if (boot_cpu_has(X86_FEATURE_PGE)) {</span>
 		cr4 = __read_cr4();
 		__write_cr4(cr4 &amp; ~X86_CR4_PGE);
 	}
<span class="p_chunk">@@ -170,7 +170,7 @@</span> <span class="p_context"> static void post_set(void)</span>
 	write_cr0(read_cr0() &amp; ~X86_CR0_CD);
 
 	/* Restore value of CR4 */
<span class="p_del">-	if (cpu_has_pge)</span>
<span class="p_add">+	if (boot_cpu_has(X86_FEATURE_PGE))</span>
 		__write_cr4(cr4);
 }
 
<span class="p_header">diff --git a/arch/x86/kernel/cpu/mtrr/generic.c b/arch/x86/kernel/cpu/mtrr/generic.c</span>
<span class="p_header">index 19f5736..f1bed30 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/mtrr/generic.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/mtrr/generic.c</span>
<span class="p_chunk">@@ -741,7 +741,7 @@</span> <span class="p_context"> static void prepare_set(void) __acquires(set_atomicity_lock)</span>
 	wbinvd();
 
 	/* Save value of CR4 and clear Page Global Enable (bit 7) */
<span class="p_del">-	if (cpu_has_pge) {</span>
<span class="p_add">+	if (boot_cpu_has(X86_FEATURE_PGE)) {</span>
 		cr4 = __read_cr4();
 		__write_cr4(cr4 &amp; ~X86_CR4_PGE);
 	}
<span class="p_chunk">@@ -771,7 +771,7 @@</span> <span class="p_context"> static void post_set(void) __releases(set_atomicity_lock)</span>
 	write_cr0(read_cr0() &amp; ~X86_CR0_CD);
 
 	/* Restore value of CR4 */
<span class="p_del">-	if (cpu_has_pge)</span>
<span class="p_add">+	if (boot_cpu_has(X86_FEATURE_PGE))</span>
 		__write_cr4(cr4);
 	raw_spin_unlock(&amp;set_atomicity_lock);
 }
<span class="p_header">diff --git a/arch/x86/mm/init.c b/arch/x86/mm/init.c</span>
<span class="p_header">index 14377e9..05ff46a 100644</span>
<span class="p_header">--- a/arch/x86/mm/init.c</span>
<span class="p_header">+++ b/arch/x86/mm/init.c</span>
<span class="p_chunk">@@ -166,7 +166,7 @@</span> <span class="p_context"> static void __init probe_page_size_mask(void)</span>
 		cr4_set_bits_and_update_boot(X86_CR4_PSE);
 
 	/* Enable PGE if available */
<span class="p_del">-	if (cpu_has_pge) {</span>
<span class="p_add">+	if (boot_cpu_has(X86_FEATURE_PGE)) {</span>
 		cr4_set_bits_and_update_boot(X86_CR4_PGE);
 		__supported_pte_mask |= _PAGE_GLOBAL;
 	} else
<span class="p_header">diff --git a/arch/x86/xen/enlighten.c b/arch/x86/xen/enlighten.c</span>
<span class="p_header">index 880862c..055f48d 100644</span>
<span class="p_header">--- a/arch/x86/xen/enlighten.c</span>
<span class="p_header">+++ b/arch/x86/xen/enlighten.c</span>
<span class="p_chunk">@@ -1472,7 +1472,7 @@</span> <span class="p_context"> static void xen_pvh_set_cr_flags(int cpu)</span>
 	if (cpu_has_pse)
 		cr4_set_bits_and_update_boot(X86_CR4_PSE);
 
<span class="p_del">-	if (cpu_has_pge)</span>
<span class="p_add">+	if (boot_cpu_has(X86_FEATURE_PGE))</span>
 		cr4_set_bits_and_update_boot(X86_CR4_PGE);
 }
 
<span class="p_header">diff --git a/drivers/lguest/x86/core.c b/drivers/lguest/x86/core.c</span>
<span class="p_header">index 6a4cd77..65f22de 100644</span>
<span class="p_header">--- a/drivers/lguest/x86/core.c</span>
<span class="p_header">+++ b/drivers/lguest/x86/core.c</span>
<span class="p_chunk">@@ -599,7 +599,7 @@</span> <span class="p_context"> void __init lguest_arch_host_init(void)</span>
 	 * doing this.
 	 */
 	get_online_cpus();
<span class="p_del">-	if (cpu_has_pge) { /* We have a broader idea of &quot;global&quot;. */</span>
<span class="p_add">+	if (boot_cpu_has(X86_FEATURE_PGE)) { /* We have a broader idea of &quot;global&quot;. */</span>
 		/* Remember that this was originally set (for cleanup). */
 		cpu_had_pge = 1;
 		/*

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



