
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v6,08/11] arm64/mm: Add support for XPFO to swiotlb - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v6,08/11] arm64/mm: Add support for XPFO to swiotlb</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=173139">Tycho Andersen</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 7, 2017, 5:36 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170907173609.22696-9-tycho@docker.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9942579/mbox/"
   >mbox</a>
|
   <a href="/patch/9942579/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9942579/">/patch/9942579/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	131FC600CB for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  7 Sep 2017 17:38:04 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 03CF4285B5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  7 Sep 2017 17:38:04 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id ECD75285C2; Thu,  7 Sep 2017 17:38:03 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.5 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, RCVD_IN_DNSWL_HI,
	RCVD_IN_SORBS_SPAM autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4CBD2285B7
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  7 Sep 2017 17:38:03 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755756AbdIGRiA (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 7 Sep 2017 13:38:00 -0400
Received: from mail-it0-f53.google.com ([209.85.214.53]:36738 &quot;EHLO
	mail-it0-f53.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1755611AbdIGRhN (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 7 Sep 2017 13:37:13 -0400
Received: by mail-it0-f53.google.com with SMTP id 6so798288itl.1
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Thu, 07 Sep 2017 10:37:13 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=docker.com; s=google;
	h=from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=JMCBTGDY55WOqMORj91u9BjHWM7Qylnek/0SAf/FGhE=;
	b=i+/A39otoNWtDj75EPrAnjZqmKv/rlSuI7WW34lDWDncof4FhFJPkAYy3MaOfJF/us
	Xgn2ZcxHsP3eu/lMcyRp9l6ktosXEbzP8lKuAT0WpEcgahcM6Muvp2ICrQZX1NwnPd3B
	4iepGptW++IpXfXNcapTTncPII+IApw/x1hDI=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
	:references;
	bh=JMCBTGDY55WOqMORj91u9BjHWM7Qylnek/0SAf/FGhE=;
	b=dtfdGzQwQiSDRScAAelNjkARw1hJqIH3zyVLLR/0w9YhcCYB1fPKLPqGOck4KjK0Ek
	kP87cW5pnDUs0/rGsEOQCzT2bMplVVEC5b1X8PaKVYfixXBSi+FAI8KdWnnqhlr7c70K
	l/s6/k77KFriv3kQIovkUn0LaLUKhxAWZB0BXOP1EUxVojzEShcestPibiFhlEYzRxxR
	O1XngjasRhiltw7wIEqyJEoeNgVSkiLDx+Wu0xmL/8dJEd/bdh/WRHdz3WzOoct1HZcR
	lMShw2rpVq6ghz9QMEuKyBOaUHwfnEQXSd7iVLIR8OBdy/GaJHeo8jp5pZSsoXoLuGO2
	VIPg==
X-Gm-Message-State: AHPjjUiW1jOU9RafJWxbdrR1hcw2LehhViKj1+1BfKBu3XDEq9Kdmy06
	YmjMxZu2+m5/5KBQd17WHw==
X-Google-Smtp-Source: AOwi7QC/5FlQYezhD+YOGKYMeIvEYzXWma+syf4lkRWeZ9fmoWSrKJq5F/eAa0Um6xilf6zkmTjVjQ==
X-Received: by 10.36.142.134 with SMTP id h128mr60149ite.129.1504805832342; 
	Thu, 07 Sep 2017 10:37:12 -0700 (PDT)
Received: from localhost.localdomain ([8.24.24.129])
	by smtp.gmail.com with ESMTPSA id
	t127sm94404iod.26.2017.09.07.10.37.11
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Thu, 07 Sep 2017 10:37:11 -0700 (PDT)
From: Tycho Andersen &lt;tycho@docker.com&gt;
To: linux-kernel@vger.kernel.org
Cc: linux-mm@kvack.org, kernel-hardening@lists.openwall.com,
	Marco Benatto &lt;marco.antonio.780@gmail.com&gt;,
	Juerg Haefliger &lt;juerg.haefliger@canonical.com&gt;,
	linux-arm-kernel@lists.infradead.org, Tycho Andersen &lt;tycho@docker.com&gt;
Subject: [PATCH v6 08/11] arm64/mm: Add support for XPFO to swiotlb
Date: Thu,  7 Sep 2017 11:36:06 -0600
Message-Id: &lt;20170907173609.22696-9-tycho@docker.com&gt;
X-Mailer: git-send-email 2.11.0
In-Reply-To: &lt;20170907173609.22696-1-tycho@docker.com&gt;
References: &lt;20170907173609.22696-1-tycho@docker.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=173139">Tycho Andersen</a> - Sept. 7, 2017, 5:36 p.m.</div>
<pre class="content">
<span class="from">From: Juerg Haefliger &lt;juerg.haefliger@canonical.com&gt;</span>

Pages that are unmapped by XPFO need to be mapped before and unmapped
again after (to restore the original state) the __dma_{map,unmap}_area()
operations to prevent fatal page faults.

v6: * use the hoisted out temporary mapping code instead

CC: linux-arm-kernel@lists.infradead.org
<span class="signed-off-by">Signed-off-by: Juerg Haefliger &lt;juerg.haefliger@canonical.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Tycho Andersen &lt;tycho@docker.com&gt;</span>
---
 arch/arm64/include/asm/cacheflush.h | 11 +++++++++++
 arch/arm64/mm/dma-mapping.c         | 32 ++++++++++++++++----------------
 arch/arm64/mm/xpfo.c                | 18 ++++++++++++++++++
 include/linux/xpfo.h                |  2 ++
 4 files changed, 47 insertions(+), 16 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/include/asm/cacheflush.h b/arch/arm64/include/asm/cacheflush.h</span>
<span class="p_header">index d74a284abdc2..b6a462e3b2f9 100644</span>
<span class="p_header">--- a/arch/arm64/include/asm/cacheflush.h</span>
<span class="p_header">+++ b/arch/arm64/include/asm/cacheflush.h</span>
<span class="p_chunk">@@ -93,6 +93,17 @@</span> <span class="p_context"> extern void __dma_map_area(const void *, size_t, int);</span>
 extern void __dma_unmap_area(const void *, size_t, int);
 extern void __dma_flush_area(const void *, size_t);
 
<span class="p_add">+#ifdef CONFIG_XPFO</span>
<span class="p_add">+#include &lt;linux/xpfo.h&gt;</span>
<span class="p_add">+#define _dma_map_area(addr, size, dir) \</span>
<span class="p_add">+	xpfo_dma_map_unmap_area(true, addr, size, dir)</span>
<span class="p_add">+#define _dma_unmap_area(addr, size, dir) \</span>
<span class="p_add">+	xpfo_dma_map_unmap_area(false, addr, size, dir)</span>
<span class="p_add">+#else</span>
<span class="p_add">+#define _dma_map_area(addr, size, dir) __dma_map_area(addr, size, dir)</span>
<span class="p_add">+#define _dma_unmap_area(addr, size, dir) __dma_unmap_area(addr, size, dir)</span>
<span class="p_add">+#endif</span>
<span class="p_add">+</span>
 /*
  * Copy user data from/to a page which is mapped into a different
  * processes address space.  Really, we want to allow our &quot;user
<span class="p_header">diff --git a/arch/arm64/mm/dma-mapping.c b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">index f27d4dd04384..a79f200786ab 100644</span>
<span class="p_header">--- a/arch/arm64/mm/dma-mapping.c</span>
<span class="p_header">+++ b/arch/arm64/mm/dma-mapping.c</span>
<span class="p_chunk">@@ -204,7 +204,7 @@</span> <span class="p_context"> static dma_addr_t __swiotlb_map_page(struct device *dev, struct page *page,</span>
 	dev_addr = swiotlb_map_page(dev, page, offset, size, dir, attrs);
 	if (!is_device_dma_coherent(dev) &amp;&amp;
 	    (attrs &amp; DMA_ATTR_SKIP_CPU_SYNC) == 0)
<span class="p_del">-		__dma_map_area(phys_to_virt(dma_to_phys(dev, dev_addr)), size, dir);</span>
<span class="p_add">+		_dma_map_area(phys_to_virt(dma_to_phys(dev, dev_addr)), size, dir);</span>
 
 	return dev_addr;
 }
<span class="p_chunk">@@ -216,7 +216,7 @@</span> <span class="p_context"> static void __swiotlb_unmap_page(struct device *dev, dma_addr_t dev_addr,</span>
 {
 	if (!is_device_dma_coherent(dev) &amp;&amp;
 	    (attrs &amp; DMA_ATTR_SKIP_CPU_SYNC) == 0)
<span class="p_del">-		__dma_unmap_area(phys_to_virt(dma_to_phys(dev, dev_addr)), size, dir);</span>
<span class="p_add">+		_dma_unmap_area(phys_to_virt(dma_to_phys(dev, dev_addr)), size, dir);</span>
 	swiotlb_unmap_page(dev, dev_addr, size, dir, attrs);
 }
 
<span class="p_chunk">@@ -231,8 +231,8 @@</span> <span class="p_context"> static int __swiotlb_map_sg_attrs(struct device *dev, struct scatterlist *sgl,</span>
 	if (!is_device_dma_coherent(dev) &amp;&amp;
 	    (attrs &amp; DMA_ATTR_SKIP_CPU_SYNC) == 0)
 		for_each_sg(sgl, sg, ret, i)
<span class="p_del">-			__dma_map_area(phys_to_virt(dma_to_phys(dev, sg-&gt;dma_address)),</span>
<span class="p_del">-				       sg-&gt;length, dir);</span>
<span class="p_add">+			_dma_map_area(phys_to_virt(dma_to_phys(dev, sg-&gt;dma_address)),</span>
<span class="p_add">+				      sg-&gt;length, dir);</span>
 
 	return ret;
 }
<span class="p_chunk">@@ -248,8 +248,8 @@</span> <span class="p_context"> static void __swiotlb_unmap_sg_attrs(struct device *dev,</span>
 	if (!is_device_dma_coherent(dev) &amp;&amp;
 	    (attrs &amp; DMA_ATTR_SKIP_CPU_SYNC) == 0)
 		for_each_sg(sgl, sg, nelems, i)
<span class="p_del">-			__dma_unmap_area(phys_to_virt(dma_to_phys(dev, sg-&gt;dma_address)),</span>
<span class="p_del">-					 sg-&gt;length, dir);</span>
<span class="p_add">+			_dma_unmap_area(phys_to_virt(dma_to_phys(dev, sg-&gt;dma_address)),</span>
<span class="p_add">+					sg-&gt;length, dir);</span>
 	swiotlb_unmap_sg_attrs(dev, sgl, nelems, dir, attrs);
 }
 
<span class="p_chunk">@@ -258,7 +258,7 @@</span> <span class="p_context"> static void __swiotlb_sync_single_for_cpu(struct device *dev,</span>
 					  enum dma_data_direction dir)
 {
 	if (!is_device_dma_coherent(dev))
<span class="p_del">-		__dma_unmap_area(phys_to_virt(dma_to_phys(dev, dev_addr)), size, dir);</span>
<span class="p_add">+		_dma_unmap_area(phys_to_virt(dma_to_phys(dev, dev_addr)), size, dir);</span>
 	swiotlb_sync_single_for_cpu(dev, dev_addr, size, dir);
 }
 
<span class="p_chunk">@@ -268,7 +268,7 @@</span> <span class="p_context"> static void __swiotlb_sync_single_for_device(struct device *dev,</span>
 {
 	swiotlb_sync_single_for_device(dev, dev_addr, size, dir);
 	if (!is_device_dma_coherent(dev))
<span class="p_del">-		__dma_map_area(phys_to_virt(dma_to_phys(dev, dev_addr)), size, dir);</span>
<span class="p_add">+		_dma_map_area(phys_to_virt(dma_to_phys(dev, dev_addr)), size, dir);</span>
 }
 
 static void __swiotlb_sync_sg_for_cpu(struct device *dev,
<span class="p_chunk">@@ -280,8 +280,8 @@</span> <span class="p_context"> static void __swiotlb_sync_sg_for_cpu(struct device *dev,</span>
 
 	if (!is_device_dma_coherent(dev))
 		for_each_sg(sgl, sg, nelems, i)
<span class="p_del">-			__dma_unmap_area(phys_to_virt(dma_to_phys(dev, sg-&gt;dma_address)),</span>
<span class="p_del">-					 sg-&gt;length, dir);</span>
<span class="p_add">+			_dma_unmap_area(phys_to_virt(dma_to_phys(dev, sg-&gt;dma_address)),</span>
<span class="p_add">+					sg-&gt;length, dir);</span>
 	swiotlb_sync_sg_for_cpu(dev, sgl, nelems, dir);
 }
 
<span class="p_chunk">@@ -295,8 +295,8 @@</span> <span class="p_context"> static void __swiotlb_sync_sg_for_device(struct device *dev,</span>
 	swiotlb_sync_sg_for_device(dev, sgl, nelems, dir);
 	if (!is_device_dma_coherent(dev))
 		for_each_sg(sgl, sg, nelems, i)
<span class="p_del">-			__dma_map_area(phys_to_virt(dma_to_phys(dev, sg-&gt;dma_address)),</span>
<span class="p_del">-				       sg-&gt;length, dir);</span>
<span class="p_add">+			_dma_map_area(phys_to_virt(dma_to_phys(dev, sg-&gt;dma_address)),</span>
<span class="p_add">+				      sg-&gt;length, dir);</span>
 }
 
 static int __swiotlb_mmap_pfn(struct vm_area_struct *vma,
<span class="p_chunk">@@ -758,7 +758,7 @@</span> <span class="p_context"> static void __iommu_sync_single_for_cpu(struct device *dev,</span>
 		return;
 
 	phys = iommu_iova_to_phys(iommu_get_domain_for_dev(dev), dev_addr);
<span class="p_del">-	__dma_unmap_area(phys_to_virt(phys), size, dir);</span>
<span class="p_add">+	_dma_unmap_area(phys_to_virt(phys), size, dir);</span>
 }
 
 static void __iommu_sync_single_for_device(struct device *dev,
<span class="p_chunk">@@ -771,7 +771,7 @@</span> <span class="p_context"> static void __iommu_sync_single_for_device(struct device *dev,</span>
 		return;
 
 	phys = iommu_iova_to_phys(iommu_get_domain_for_dev(dev), dev_addr);
<span class="p_del">-	__dma_map_area(phys_to_virt(phys), size, dir);</span>
<span class="p_add">+	_dma_map_area(phys_to_virt(phys), size, dir);</span>
 }
 
 static dma_addr_t __iommu_map_page(struct device *dev, struct page *page,
<span class="p_chunk">@@ -811,7 +811,7 @@</span> <span class="p_context"> static void __iommu_sync_sg_for_cpu(struct device *dev,</span>
 		return;
 
 	for_each_sg(sgl, sg, nelems, i)
<span class="p_del">-		__dma_unmap_area(sg_virt(sg), sg-&gt;length, dir);</span>
<span class="p_add">+		_dma_unmap_area(sg_virt(sg), sg-&gt;length, dir);</span>
 }
 
 static void __iommu_sync_sg_for_device(struct device *dev,
<span class="p_chunk">@@ -825,7 +825,7 @@</span> <span class="p_context"> static void __iommu_sync_sg_for_device(struct device *dev,</span>
 		return;
 
 	for_each_sg(sgl, sg, nelems, i)
<span class="p_del">-		__dma_map_area(sg_virt(sg), sg-&gt;length, dir);</span>
<span class="p_add">+		_dma_map_area(sg_virt(sg), sg-&gt;length, dir);</span>
 }
 
 static int __iommu_map_sg_attrs(struct device *dev, struct scatterlist *sgl,
<span class="p_header">diff --git a/arch/arm64/mm/xpfo.c b/arch/arm64/mm/xpfo.c</span>
<span class="p_header">index 678e2be848eb..342a9ccb93c1 100644</span>
<span class="p_header">--- a/arch/arm64/mm/xpfo.c</span>
<span class="p_header">+++ b/arch/arm64/mm/xpfo.c</span>
<span class="p_chunk">@@ -11,8 +11,10 @@</span> <span class="p_context"></span>
  * the Free Software Foundation.
  */
 
<span class="p_add">+#include &lt;linux/highmem.h&gt;</span>
 #include &lt;linux/mm.h&gt;
 #include &lt;linux/module.h&gt;
<span class="p_add">+#include &lt;linux/xpfo.h&gt;</span>
 
 #include &lt;asm/tlbflush.h&gt;
 
<span class="p_chunk">@@ -56,3 +58,19 @@</span> <span class="p_context"> inline void xpfo_flush_kernel_tlb(struct page *page, int order)</span>
 
 	flush_tlb_kernel_range(kaddr, kaddr + (1 &lt;&lt; order) * size);
 }
<span class="p_add">+</span>
<span class="p_add">+void xpfo_dma_map_unmap_area(bool map, const void *addr, size_t size,</span>
<span class="p_add">+				    enum dma_data_direction dir)</span>
<span class="p_add">+{</span>
<span class="p_add">+	unsigned long num_pages = XPFO_NUM_PAGES(addr, size);</span>
<span class="p_add">+	void *mapping[num_pages];</span>
<span class="p_add">+</span>
<span class="p_add">+	xpfo_temp_map(addr, size, mapping, sizeof(mapping[0]) * num_pages);</span>
<span class="p_add">+</span>
<span class="p_add">+	if (map)</span>
<span class="p_add">+		__dma_map_area(addr, size, dir);</span>
<span class="p_add">+	else</span>
<span class="p_add">+		__dma_unmap_area(addr, size, dir);</span>
<span class="p_add">+</span>
<span class="p_add">+	xpfo_temp_unmap(addr, size, mapping, sizeof(mapping[0]) * num_pages);</span>
<span class="p_add">+}</span>
<span class="p_header">diff --git a/include/linux/xpfo.h b/include/linux/xpfo.h</span>
<span class="p_header">index 304b104ec637..d37a06c9d62c 100644</span>
<span class="p_header">--- a/include/linux/xpfo.h</span>
<span class="p_header">+++ b/include/linux/xpfo.h</span>
<span class="p_chunk">@@ -18,6 +18,8 @@</span> <span class="p_context"></span>
 
 #ifdef CONFIG_XPFO
 
<span class="p_add">+#include &lt;linux/dma-mapping.h&gt;</span>
<span class="p_add">+</span>
 extern struct page_ext_operations page_xpfo_ops;
 
 void set_kpte(void *kaddr, struct page *page, pgprot_t prot);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



