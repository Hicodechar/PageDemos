
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/2] sparc: fix fault detection in copy_in_user - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/2] sparc: fix fault detection in copy_in_user</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=553">Mikulas Patocka</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>July 31, 2016, 11:52 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;alpine.LRH.2.02.1607311951040.7784@file01.intranet.prod.int.rdu2.redhat.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9253569/mbox/"
   >mbox</a>
|
   <a href="/patch/9253569/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9253569/">/patch/9253569/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	3952D60865 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  1 Aug 2016 00:04:23 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 28F5F283EF
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  1 Aug 2016 00:04:23 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 1AE2A28414; Mon,  1 Aug 2016 00:04:23 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7F576283EF
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  1 Aug 2016 00:04:22 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752740AbcHAAES (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sun, 31 Jul 2016 20:04:18 -0400
Received: from mx1.redhat.com ([209.132.183.28]:45794 &quot;EHLO mx1.redhat.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752085AbcHAAEL (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sun, 31 Jul 2016 20:04:11 -0400
Received: from int-mx10.intmail.prod.int.phx2.redhat.com
	(int-mx10.intmail.prod.int.phx2.redhat.com [10.5.11.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256
	bits)) (No client certificate requested)
	by mx1.redhat.com (Postfix) with ESMTPS id 18A857DD06;
	Sun, 31 Jul 2016 23:52:40 +0000 (UTC)
Received: from file01.intranet.prod.int.rdu2.redhat.com
	(file01.intranet.prod.int.rdu2.redhat.com [10.11.5.7])
	by int-mx10.intmail.prod.int.phx2.redhat.com (8.14.4/8.14.4) with
	ESMTP id u6VNqdRl022318
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=NO); Sun, 31 Jul 2016 19:52:39 -0400
Received: from file01.intranet.prod.int.rdu2.redhat.com (localhost
	[127.0.0.1])
	by file01.intranet.prod.int.rdu2.redhat.com (8.14.4/8.14.4) with
	ESMTP id u6VNqdTZ015631; Sun, 31 Jul 2016 19:52:39 -0400
Received: from localhost (mpatocka@localhost)
	by file01.intranet.prod.int.rdu2.redhat.com (8.14.4/8.14.4/Submit)
	with ESMTP id u6VNqdGQ015625; Sun, 31 Jul 2016 19:52:39 -0400
X-Authentication-Warning: file01.intranet.prod.int.rdu2.redhat.com: mpatocka
	owned process doing -bs
Date: Sun, 31 Jul 2016 19:52:39 -0400 (EDT)
From: Mikulas Patocka &lt;mpatocka@redhat.com&gt;
X-X-Sender: mpatocka@file01.intranet.prod.int.rdu2.redhat.com
To: David Miller &lt;davem@davemloft.net&gt;
cc: sparclinux@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: [PATCH 2/2] sparc: fix fault detection in copy_in_user
Message-ID: &lt;alpine.LRH.2.02.1607311951040.7784@file01.intranet.prod.int.rdu2.redhat.com&gt;
User-Agent: Alpine 2.02 (LRH 1266 2009-07-14)
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Scanned-By: MIMEDefang 2.68 on 10.5.11.23
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.5.16
	(mx1.redhat.com [10.5.110.26]);
	Sun, 31 Jul 2016 23:52:40 +0000 (UTC)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=553">Mikulas Patocka</a> - July 31, 2016, 11:52 p.m.</div>
<pre class="content">
When a fault happens in the function ___copy_in_user, it returns 1. Then,
we call a function copy_in_user_fixup that determines how much data were
left uncopied and it returns this value.

The function copy_in_user_fixup reads the faulting address from
current_thread_info()-&gt;fault_address and checks if it falls into the
destination or source range. If it falls into one of these ranges, it is
assumed that some data were copied and the residue is returned.

However, the address read from current_thread_info()-&gt;fault_address is not
exact. On UltraSparc processors, the address is obtained from the
TLB_TAG_ACCESS register. Lower 13 bits of the register contain the context
ID, not the faulting address. The address is rounded down to a page
boundary in the TLB fault handler.

This address rounding can cause incorrect calculation in
copy_in_user_fixup because it is not known if the address belongs to the
destination range or source range.

For example, we call copy_in_user(0x1ff0, 0x2800, 0x100) and a fault
happens when reading the first byte at 0x2800. The fault address is
rounded down to a page boundary - the result is 0x2000. The function
copy_in_user_fixup finds out that the address 0x2000 is within the
destination range - thus the function incorrectly assumes that 0x10 bytes
were already copied. In fact, no bytes were copied.

This patch fixes the bug by discriminating read and write faults in
___copy_in_user. We return 1 if a read instruction failed and 2 if a write
instruction failed. The return value is passed to copy_to_user_fixup.
copy_to_user_fixup compares the faulting address against the source range
or destination range depending on this value.
<span class="signed-off-by">
Signed-off-by: Mikulas Patocka &lt;mpatocka@redhat.com&gt;</span>
Cc: stable@vger.kernel.org

---
 arch/sparc/include/asm/uaccess_64.h |    4 ++--
 arch/sparc/kernel/head_64.S         |    6 +++++-
 arch/sparc/lib/copy_in_user.S       |   26 +++++++++++++++++---------
 arch/sparc/lib/user_fixup.c         |    6 +++---
 4 files changed, 27 insertions(+), 15 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">Index: linux-4.4.16/arch/sparc/kernel/head_64.S</span>
===================================================================
<span class="p_header">--- linux-4.4.16.orig/arch/sparc/kernel/head_64.S	2016-07-30 00:26:55.000000000 +0200</span>
<span class="p_header">+++ linux-4.4.16/arch/sparc/kernel/head_64.S	2016-07-30 00:28:15.000000000 +0200</span>
<span class="p_chunk">@@ -922,7 +922,6 @@</span> <span class="p_context"> prom_tba:	.xword	0</span>
 tlb_type:	.word	0	/* Must NOT end up in BSS */
 	.section	&quot;.fixup&quot;,#alloc,#execinstr
 
<span class="p_del">-	.globl	__ret_efault, __retl_efault, __ret_one, __retl_one</span>
 ENTRY(__ret_efault)
 	ret
 	 restore %g0, -EFAULT, %o0
<span class="p_chunk">@@ -963,6 +962,11 @@</span> <span class="p_context"> ENTRY(__retl_one_asi_fp)</span>
 	 mov	1, %o0
 ENDPROC(__retl_one_asi_fp)
 
<span class="p_add">+ENTRY(__retl_two)</span>
<span class="p_add">+	retl</span>
<span class="p_add">+	 mov	2, %o0</span>
<span class="p_add">+ENDPROC(__retl_two)</span>
<span class="p_add">+</span>
 ENTRY(__retl_o1)
 	retl
 	 mov	%o1, %o0
<span class="p_header">Index: linux-4.4.16/arch/sparc/lib/copy_in_user.S</span>
===================================================================
<span class="p_header">--- linux-4.4.16.orig/arch/sparc/lib/copy_in_user.S	2016-07-30 00:25:55.000000000 +0200</span>
<span class="p_header">+++ linux-4.4.16/arch/sparc/lib/copy_in_user.S	2016-07-30 00:30:13.000000000 +0200</span>
<span class="p_chunk">@@ -8,7 +8,7 @@</span> <span class="p_context"></span>
 
 #define XCC xcc
 
<span class="p_del">-#define EX(x,y)			\</span>
<span class="p_add">+#define EX_LD(x,y)		\</span>
 98:	x,y;			\
 	.section __ex_table,&quot;a&quot;;\
 	.align 4;		\
<span class="p_chunk">@@ -16,6 +16,14 @@</span> <span class="p_context"></span>
 	.text;			\
 	.align 4;
 
<span class="p_add">+#define EX_ST(x,y)		\</span>
<span class="p_add">+98:	x,y;			\</span>
<span class="p_add">+	.section __ex_table,&quot;a&quot;;\</span>
<span class="p_add">+	.align 4;		\</span>
<span class="p_add">+	.word 98b, __retl_two;	\</span>
<span class="p_add">+	.text;			\</span>
<span class="p_add">+	.align 4;</span>
<span class="p_add">+</span>
 	.register	%g2,#scratch
 	.register	%g3,#scratch
 
<span class="p_chunk">@@ -44,8 +52,8 @@</span> <span class="p_context"> ENTRY(___copy_in_user)	/* %o0=dst, %o1=s</span>
 	andn		%o2, 0x7, %o4
 	and		%o2, 0x7, %o2
 1:	subcc		%o4, 0x8, %o4
<span class="p_del">-	EX(ldxa [%o1] %asi, %o5)</span>
<span class="p_del">-	EX(stxa %o5, [%o0] %asi)</span>
<span class="p_add">+	EX_LD(ldxa [%o1] %asi, %o5)</span>
<span class="p_add">+	EX_ST(stxa %o5, [%o0] %asi)</span>
 	add		%o1, 0x8, %o1
 	bgu,pt		%XCC, 1b
 	 add		%o0, 0x8, %o0
<span class="p_chunk">@@ -53,8 +61,8 @@</span> <span class="p_context"> ENTRY(___copy_in_user)	/* %o0=dst, %o1=s</span>
 	be,pt		%XCC, 1f
 	 nop
 	sub		%o2, 0x4, %o2
<span class="p_del">-	EX(lduwa [%o1] %asi, %o5)</span>
<span class="p_del">-	EX(stwa %o5, [%o0] %asi)</span>
<span class="p_add">+	EX_LD(lduwa [%o1] %asi, %o5)</span>
<span class="p_add">+	EX_ST(stwa %o5, [%o0] %asi)</span>
 	add		%o1, 0x4, %o1
 	add		%o0, 0x4, %o0
 1:	cmp		%o2, 0
<span class="p_chunk">@@ -70,8 +78,8 @@</span> <span class="p_context"> ENTRY(___copy_in_user)	/* %o0=dst, %o1=s</span>
 
 82:
 	subcc		%o2, 4, %o2
<span class="p_del">-	EX(lduwa [%o1] %asi, %g1)</span>
<span class="p_del">-	EX(stwa %g1, [%o0] %asi)</span>
<span class="p_add">+	EX_LD(lduwa [%o1] %asi, %g1)</span>
<span class="p_add">+	EX_ST(stwa %g1, [%o0] %asi)</span>
 	add		%o1, 4, %o1
 	bgu,pt		%XCC, 82b
 	 add		%o0, 4, %o0
<span class="p_chunk">@@ -82,8 +90,8 @@</span> <span class="p_context"> ENTRY(___copy_in_user)	/* %o0=dst, %o1=s</span>
 	.align	32
 90:
 	subcc		%o2, 1, %o2
<span class="p_del">-	EX(lduba [%o1] %asi, %g1)</span>
<span class="p_del">-	EX(stba %g1, [%o0] %asi)</span>
<span class="p_add">+	EX_LD(lduba [%o1] %asi, %g1)</span>
<span class="p_add">+	EX_ST(stba %g1, [%o0] %asi)</span>
 	add		%o1, 1, %o1
 	bgu,pt		%XCC, 90b
 	 add		%o0, 1, %o0
<span class="p_header">Index: linux-4.4.16/arch/sparc/include/asm/uaccess_64.h</span>
===================================================================
<span class="p_header">--- linux-4.4.16.orig/arch/sparc/include/asm/uaccess_64.h	2016-07-30 00:34:21.000000000 +0200</span>
<span class="p_header">+++ linux-4.4.16/arch/sparc/include/asm/uaccess_64.h	2016-07-30 00:34:37.000000000 +0200</span>
<span class="p_chunk">@@ -279,14 +279,14 @@</span> <span class="p_context"> unsigned long __must_check ___copy_in_us</span>
 					   const void __user *from,
 					   unsigned long size);
 unsigned long copy_in_user_fixup(void __user *to, void __user *from,
<span class="p_del">-				 unsigned long size);</span>
<span class="p_add">+				 unsigned long size, int fault_type);</span>
 static inline unsigned long __must_check
 copy_in_user(void __user *to, void __user *from, unsigned long size)
 {
 	unsigned long ret = ___copy_in_user(to, from, size);
 
 	if (unlikely(ret))
<span class="p_del">-		ret = copy_in_user_fixup(to, from, size);</span>
<span class="p_add">+		ret = copy_in_user_fixup(to, from, size, ret);</span>
 	return ret;
 }
 #define __copy_in_user copy_in_user
<span class="p_header">Index: linux-4.4.16/arch/sparc/lib/user_fixup.c</span>
===================================================================
<span class="p_header">--- linux-4.4.16.orig/arch/sparc/lib/user_fixup.c	2016-07-30 00:32:00.000000000 +0200</span>
<span class="p_header">+++ linux-4.4.16/arch/sparc/lib/user_fixup.c	2016-07-30 00:34:47.000000000 +0200</span>
<span class="p_chunk">@@ -59,18 +59,18 @@</span> <span class="p_context"> unsigned long copy_to_user_fixup(void __</span>
 }
 EXPORT_SYMBOL(copy_to_user_fixup);
 
<span class="p_del">-unsigned long copy_in_user_fixup(void __user *to, void __user *from, unsigned long size)</span>
<span class="p_add">+unsigned long copy_in_user_fixup(void __user *to, void __user *from, unsigned long size, int fault_type)</span>
 {
 	unsigned long fault_addr = current_thread_info()-&gt;fault_address;
 	unsigned long start = (unsigned long) to;
 	unsigned long end = start + size;
 
<span class="p_del">-	if (fault_addr &gt;= start &amp;&amp; fault_addr &lt; end)</span>
<span class="p_add">+	if (fault_type == 2 &amp;&amp; fault_addr &gt;= start &amp;&amp; fault_addr &lt; end)</span>
 		return end - fault_addr;
 
 	start = (unsigned long) from;
 	end = start + size;
<span class="p_del">-	if (fault_addr &gt;= start &amp;&amp; fault_addr &lt; end)</span>
<span class="p_add">+	if (fault_type == 1 &amp;&amp; fault_addr &gt;= start &amp;&amp; fault_addr &lt; end)</span>
 		return end - fault_addr;
 
 	return size;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



