
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[3.12,25/91] x86/setup: Extend low identity map to cover whole kernel range - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [3.12,25/91] x86/setup: Extend low identity map to cover whole kernel range</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=45061">Luis Henriques</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 6, 2016, 2:22 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20160106142237.GA16910@ares&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7968481/mbox/"
   >mbox</a>
|
   <a href="/patch/7968481/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7968481/">/patch/7968481/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id D9D30BEEE5
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  6 Jan 2016 14:22:49 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id E62942012E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  6 Jan 2016 14:22:48 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id C694B2011D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  6 Jan 2016 14:22:47 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752292AbcAFOWp (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 6 Jan 2016 09:22:45 -0500
Received: from youngberry.canonical.com ([91.189.89.112]:56480 &quot;EHLO
	youngberry.canonical.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751717AbcAFOWn (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 6 Jan 2016 09:22:43 -0500
Received: from 1.general.henrix.uk.vpn ([10.172.192.212] helo=localhost)
	by youngberry.canonical.com with esmtpsa
	(TLS1.0:RSA_AES_128_CBC_SHA1:16) (Exim 4.76)
	(envelope-from &lt;luis.henriques@canonical.com&gt;)
	id 1aGoz0-0006tO-Ke; Wed, 06 Jan 2016 14:22:39 +0000
Date: Wed, 6 Jan 2016 14:22:37 +0000
From: Luis Henriques &lt;luis.henriques@canonical.com&gt;
To: Matt Fleming &lt;matt@codeblueprint.co.uk&gt;
Cc: Paolo Bonzini &lt;pbonzini@redhat.com&gt;, Jiri Slaby &lt;jslaby@suse.cz&gt;,
	stable@vger.kernel.org, linux-kernel@vger.kernel.org,
	Borislav Petkov &lt;bp@alien8.de&gt;, &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;, Ingo Molnar &lt;mingo@kernel.org&gt;,
	Andy Lutomirski &lt;luto@amacapital.net&gt;,
	Kamal Mostafa &lt;kamal@canonical.com&gt;,
	Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
Subject: Re: [PATCH 3.12 25/91] x86/setup: Extend low identity map to cover
	whole kernel range
Message-ID: &lt;20160106142237.GA16910@ares&gt;
References: &lt;ba880cfbf85370a46062a2894a70d35260f26f2b.1452015821.git.jslaby@suse.cz&gt;
	&lt;2c131230744f95abdbecffbf19de6bfa8a889253.1452015822.git.jslaby@suse.cz&gt;
	&lt;568CF0B8.7090809@redhat.com&gt;
	&lt;20160106110031.GA2671@codeblueprint.co.uk&gt;
	&lt;20160106112455.GA14364@ares&gt;
	&lt;20160106133155.GD2671@codeblueprint.co.uk&gt;
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary=&quot;UugvWAfsgieZRqgk&quot;
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: &lt;20160106133155.GD2671@codeblueprint.co.uk&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD, T_TVD_MIME_EPI,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=45061">Luis Henriques</a> - Jan. 6, 2016, 2:22 p.m.</div>
<pre class="content">
[ Adding Greg and Kamal ]

On Wed, Jan 06, 2016 at 01:31:55PM +0000, Matt Fleming wrote:
<span class="quote">&gt; On Wed, 06 Jan, at 11:24:55AM, Luis Henriques wrote:</span>
<span class="quote">&gt; &gt; On Wed, Jan 06, 2016 at 11:00:31AM +0000, Matt Fleming wrote:</span>
<span class="quote">&gt; &gt; &gt; On Wed, 06 Jan, at 11:47:20AM, Paolo Bonzini wrote:</span>
<span class="quote">&gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; Without testing the problematic scenario explicitly (32-bit UEFI</span>
<span class="quote">&gt; &gt; &gt; &gt; kernel), I think this patch and 26/91 should not be backported to</span>
<span class="quote">&gt; &gt; &gt; &gt; kernels that do not have 23a0d4e8fa6d.</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; I tend to agree.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; I can see these 2 commits in kernels as old as 3.10 (which definitely do</span>
<span class="quote">&gt; &gt; not include 23a0d4e8fa6d).  Does this mean these should be reverted from</span>
<span class="quote">&gt; &gt; stable kernels that already include these patches?  Or would you rather</span>
<span class="quote">&gt; &gt; recommend to backport 23a0d4e8fa6d?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; That depends on your appetite for risk ;-)</span>
<span class="quote">&gt;</span>

Heh, I guess stable kernels aren&#39;t really about appetite for risk :-)
<span class="quote">
&gt; 23a0d4e8fa6d does fix a legitimate bug, albeit one that no one seems</span>
<span class="quote">&gt; to have ever hit. Personally, I&#39;d go for backporting 23a0d4e8fa6d.</span>

This commit doesn&#39;t seem to be too bad to backport.  I&#39;m attaching 2
backports:

 - one is for the 3.16 stable kernel,
 - the other can be applied to 3.10, 3.12 and 3.13

(For the other kernels, I believe 23a0d4e8fa6d will be a clean
cherry-pick.)

Cheers,
--
Lu√≠s
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=119821">Matt Fleming</a> - Jan. 8, 2016, 11:56 a.m.</div>
<pre class="content">
On Wed, 06 Jan, at 02:22:37PM, Luis Henriques wrote:
<span class="quote">&gt; [ Adding Greg and Kamal ]</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; On Wed, Jan 06, 2016 at 01:31:55PM +0000, Matt Fleming wrote:</span>
<span class="quote">&gt; &gt; On Wed, 06 Jan, at 11:24:55AM, Luis Henriques wrote:</span>
<span class="quote">&gt; &gt; &gt; On Wed, Jan 06, 2016 at 11:00:31AM +0000, Matt Fleming wrote:</span>
<span class="quote">&gt; &gt; &gt; &gt; On Wed, 06 Jan, at 11:47:20AM, Paolo Bonzini wrote:</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; Without testing the problematic scenario explicitly (32-bit UEFI</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; kernel), I think this patch and 26/91 should not be backported to</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; kernels that do not have 23a0d4e8fa6d.</span>
<span class="quote">&gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; I tend to agree.</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; I can see these 2 commits in kernels as old as 3.10 (which definitely do</span>
<span class="quote">&gt; &gt; &gt; not include 23a0d4e8fa6d).  Does this mean these should be reverted from</span>
<span class="quote">&gt; &gt; &gt; stable kernels that already include these patches?  Or would you rather</span>
<span class="quote">&gt; &gt; &gt; recommend to backport 23a0d4e8fa6d?</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; That depends on your appetite for risk ;-)</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Heh, I guess stable kernels aren&#39;t really about appetite for risk :-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; 23a0d4e8fa6d does fix a legitimate bug, albeit one that no one seems</span>
<span class="quote">&gt; &gt; to have ever hit. Personally, I&#39;d go for backporting 23a0d4e8fa6d.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This commit doesn&#39;t seem to be too bad to backport.  I&#39;m attaching 2</span>
<span class="quote">&gt; backports:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  - one is for the 3.16 stable kernel,</span>
<span class="quote">&gt;  - the other can be applied to 3.10, 3.12 and 3.13</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; (For the other kernels, I believe 23a0d4e8fa6d will be a clean</span>
<span class="quote">&gt; cherry-pick.)</span>

FWIW they look OK to me.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=45061">Luis Henriques</a> - Jan. 8, 2016, 1:36 p.m.</div>
<pre class="content">
On Fri, Jan 08, 2016 at 11:56:34AM +0000, Matt Fleming wrote:
<span class="quote">&gt; On Wed, 06 Jan, at 02:22:37PM, Luis Henriques wrote:</span>
<span class="quote">&gt; &gt; [ Adding Greg and Kamal ]</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; On Wed, Jan 06, 2016 at 01:31:55PM +0000, Matt Fleming wrote:</span>
<span class="quote">&gt; &gt; &gt; On Wed, 06 Jan, at 11:24:55AM, Luis Henriques wrote:</span>
<span class="quote">&gt; &gt; &gt; &gt; On Wed, Jan 06, 2016 at 11:00:31AM +0000, Matt Fleming wrote:</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; On Wed, 06 Jan, at 11:47:20AM, Paolo Bonzini wrote:</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt; Without testing the problematic scenario explicitly (32-bit UEFI</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt; kernel), I think this patch and 26/91 should not be backported to</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; &gt; kernels that do not have 23a0d4e8fa6d.</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; I tend to agree.</span>
<span class="quote">&gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; I can see these 2 commits in kernels as old as 3.10 (which definitely do</span>
<span class="quote">&gt; &gt; &gt; &gt; not include 23a0d4e8fa6d).  Does this mean these should be reverted from</span>
<span class="quote">&gt; &gt; &gt; &gt; stable kernels that already include these patches?  Or would you rather</span>
<span class="quote">&gt; &gt; &gt; &gt; recommend to backport 23a0d4e8fa6d?</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; That depends on your appetite for risk ;-)</span>
<span class="quote">&gt; &gt; &gt;</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Heh, I guess stable kernels aren&#39;t really about appetite for risk :-)</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; 23a0d4e8fa6d does fix a legitimate bug, albeit one that no one seems</span>
<span class="quote">&gt; &gt; &gt; to have ever hit. Personally, I&#39;d go for backporting 23a0d4e8fa6d.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; This commit doesn&#39;t seem to be too bad to backport.  I&#39;m attaching 2</span>
<span class="quote">&gt; &gt; backports:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;  - one is for the 3.16 stable kernel,</span>
<span class="quote">&gt; &gt;  - the other can be applied to 3.10, 3.12 and 3.13</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; (For the other kernels, I believe 23a0d4e8fa6d will be a clean</span>
<span class="quote">&gt; &gt; cherry-pick.)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; FWIW they look OK to me.</span>

Awesome, thanks!  I&#39;ll queue it for the next 3.16 release.

Cheers,
--
Lu√≠s
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=887">Jiri Slaby</a> - Jan. 9, 2016, 7:09 a.m.</div>
<pre class="content">
On 01/06/2016, 03:22 PM, Luis Henriques wrote:
<span class="quote">&gt;&gt; 23a0d4e8fa6d does fix a legitimate bug, albeit one that no one seems</span>
<span class="quote">&gt;&gt; to have ever hit. Personally, I&#39;d go for backporting 23a0d4e8fa6d.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This commit doesn&#39;t seem to be too bad to backport.  I&#39;m attaching 2</span>
<span class="quote">&gt; backports:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  - one is for the 3.16 stable kernel,</span>
<span class="quote">&gt;  - the other can be applied to 3.10, 3.12 and 3.13</span>

Now applied to 3.12. Thanks.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7718">Kamal Mostafa</a> - Jan. 14, 2016, 8:51 p.m.</div>
<pre class="content">
On Wed, 2016-01-06 at 14:22 +0000, Luis Henriques wrote:
<span class="quote">&gt; [ Adding Greg and Kamal ]</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; On Wed, Jan 06, 2016 at 01:31:55PM +0000, Matt Fleming wrote:</span>
<span class="quote">&gt; &gt; On Wed, 06 Jan, at 11:24:55AM, Luis Henriques wrote:</span>
<span class="quote">&gt; &gt; &gt; On Wed, Jan 06, 2016 at 11:00:31AM +0000, Matt Fleming wrote:</span>
<span class="quote">&gt; &gt; &gt; &gt; On Wed, 06 Jan, at 11:47:20AM, Paolo Bonzini wrote:</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; Without testing the problematic scenario explicitly (32-bit UEFI</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; kernel), I think this patch and 26/91 should not be backported to</span>
<span class="quote">&gt; &gt; &gt; &gt; &gt; kernels that do not have 23a0d4e8fa6d.</span>
<span class="quote">&gt; &gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; &gt; I tend to agree.</span>
<span class="quote">&gt; &gt; &gt; </span>
<span class="quote">&gt; &gt; &gt; I can see these 2 commits in kernels as old as 3.10 (which definitely do</span>
<span class="quote">&gt; &gt; &gt; not include 23a0d4e8fa6d).  Does this mean these should be reverted from</span>
<span class="quote">&gt; &gt; &gt; stable kernels that already include these patches?  Or would you rather</span>
<span class="quote">&gt; &gt; &gt; recommend to backport 23a0d4e8fa6d?</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; That depends on your appetite for risk ;-)</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Heh, I guess stable kernels aren&#39;t really about appetite for risk :-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; 23a0d4e8fa6d does fix a legitimate bug, albeit one that no one seems</span>
<span class="quote">&gt; &gt; to have ever hit. Personally, I&#39;d go for backporting 23a0d4e8fa6d.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This commit doesn&#39;t seem to be too bad to backport.  I&#39;m attaching 2</span>
<span class="quote">&gt; backports:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  - one is for the 3.16 stable kernel,</span>
<span class="quote">&gt;  - the other can be applied to 3.10, 3.12 and 3.13</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; (For the other kernels, I believe 23a0d4e8fa6d will be a clean</span>
<span class="quote">&gt; cherry-pick.)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Cheers,</span>
<span class="quote">&gt; --</span>
<span class="quote">&gt; Lu√≠s</span>

Queued up for 3.13 and 3.19 -stable.  Thanks, Luis!

 -Kamal
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
From 466b891857a536af2a9b7ad058e1cc00b702a528 Mon Sep 17 00:00:00 2001
From: Ingo Molnar &lt;mingo@kernel.org&gt;
Date: Tue, 3 Mar 2015 07:34:33 +0100
Subject: [PATCH] efi: Disable interrupts around EFI calls, not in the
 epilog/prolog calls

commit 23a0d4e8fa6d3a1d7fb819f79bcc0a3739c30ba9 upstream.

Tapasweni Pathak reported that we do a kmalloc() in efi_call_phys_prolog()
on x86-64 while having interrupts disabled, which is a big no-no, as
kmalloc() can sleep.

Solve this by removing the irq disabling from the prolog/epilog calls
around EFI calls: it&#39;s unnecessary, as in this stage we are single
threaded in the boot thread, and we don&#39;t ever execute this from
interrupt contexts.

Reported-by: Tapasweni Pathak &lt;tapaswenipathak@gmail.com&gt;
Signed-off-by: Ingo Molnar &lt;mingo@kernel.org&gt;
Signed-off-by: Matt Fleming &lt;matt.fleming@intel.com&gt;
[ luis: backported to 3.16: adjusted context ]
Signed-off-by: Luis Henriques &lt;luis.henriques@canonical.com&gt;
<span class="p_del">---</span>
 arch/x86/platform/efi/efi.c    |  7 +++++++
 arch/x86/platform/efi/efi_32.c | 11 +++--------
 arch/x86/platform/efi/efi_64.c |  3 ---
 3 files changed, 10 insertions(+), 11 deletions(-)

<span class="p_header">diff --git a/arch/x86/platform/efi/efi.c b/arch/x86/platform/efi/efi.c</span>
<span class="p_header">index 5bbb477f5c2a..09c8ac286cd5 100644</span>
<span class="p_header">--- a/arch/x86/platform/efi/efi.c</span>
<span class="p_header">+++ b/arch/x86/platform/efi/efi.c</span>
<span class="p_chunk">@@ -236,12 +236,19 @@</span> <span class="p_context"> static efi_status_t __init phys_efi_set_virtual_address_map(</span>
 	efi_memory_desc_t *virtual_map)
 {
 	efi_status_t status;
<span class="p_add">+	unsigned long flags;</span>
 
 	efi_call_phys_prelog();
<span class="p_add">+</span>
<span class="p_add">+	/* Disable interrupts around EFI calls: */</span>
<span class="p_add">+	local_irq_save(flags);</span>
 	status = efi_call_phys(efi_phys.set_virtual_address_map,
 			       memory_map_size, descriptor_size,
 			       descriptor_version, virtual_map);
<span class="p_add">+	local_irq_restore(flags);</span>
<span class="p_add">+</span>
 	efi_call_phys_epilog();
<span class="p_add">+</span>
 	return status;
 }
 
<span class="p_header">diff --git a/arch/x86/platform/efi/efi_32.c b/arch/x86/platform/efi/efi_32.c</span>
<span class="p_header">index 9ee3491e31fb..be4e7eb41674 100644</span>
<span class="p_header">--- a/arch/x86/platform/efi/efi_32.c</span>
<span class="p_header">+++ b/arch/x86/platform/efi/efi_32.c</span>
<span class="p_chunk">@@ -33,11 +33,10 @@</span> <span class="p_context"></span>
 
 /*
  * To make EFI call EFI runtime service in physical addressing mode we need
<span class="p_del">- * prelog/epilog before/after the invocation to disable interrupt, to</span>
<span class="p_del">- * claim EFI runtime service handler exclusively and to duplicate a memory in</span>
<span class="p_del">- * low memory space say 0 - 3G.</span>
<span class="p_add">+ * prolog/epilog before/after the invocation to claim the EFI runtime service</span>
<span class="p_add">+ * handler exclusively and to duplicate a memory mapping in low memory space,</span>
<span class="p_add">+ * say 0 - 3G.</span>
  */
<span class="p_del">-static unsigned long efi_rt_eflags;</span>
 
 void efi_sync_low_kernel_mappings(void) {}
 void __init efi_dump_pagetable(void) {}
<span class="p_chunk">@@ -59,8 +58,6 @@</span> <span class="p_context"> void efi_call_phys_prelog(void)</span>
 {
 	struct desc_ptr gdt_descr;
 
<span class="p_del">-	local_irq_save(efi_rt_eflags);</span>
<span class="p_del">-</span>
 	load_cr3(initial_page_table);
 	__flush_tlb_all();
 
<span class="p_chunk">@@ -79,8 +76,6 @@</span> <span class="p_context"> void efi_call_phys_epilog(void)</span>
 
 	load_cr3(swapper_pg_dir);
 	__flush_tlb_all();
<span class="p_del">-</span>
<span class="p_del">-	local_irq_restore(efi_rt_eflags);</span>
 }
 
 void __init efi_runtime_mkexec(void)
<span class="p_header">diff --git a/arch/x86/platform/efi/efi_64.c b/arch/x86/platform/efi/efi_64.c</span>
<span class="p_header">index 290d397e1dd9..8139b4858403 100644</span>
<span class="p_header">--- a/arch/x86/platform/efi/efi_64.c</span>
<span class="p_header">+++ b/arch/x86/platform/efi/efi_64.c</span>
<span class="p_chunk">@@ -42,7 +42,6 @@</span> <span class="p_context"></span>
 #include &lt;asm/time.h&gt;
 
 static pgd_t *save_pgd __initdata;
<span class="p_del">-static unsigned long efi_flags __initdata;</span>
 
 /*
  * We allocate runtime services regions bottom-up, starting from -4G, i.e.
<span class="p_chunk">@@ -89,7 +88,6 @@</span> <span class="p_context"> void __init efi_call_phys_prelog(void)</span>
 		return;
 
 	early_code_mapping_set_exec(1);
<span class="p_del">-	local_irq_save(efi_flags);</span>
 
 	n_pgds = DIV_ROUND_UP((max_pfn &lt;&lt; PAGE_SHIFT), PGDIR_SIZE);
 	save_pgd = kmalloc(n_pgds * sizeof(pgd_t), GFP_KERNEL);
<span class="p_chunk">@@ -117,7 +115,6 @@</span> <span class="p_context"> void __init efi_call_phys_epilog(void)</span>
 		set_pgd(pgd_offset_k(pgd * PGDIR_SIZE), save_pgd[pgd]);
 	kfree(save_pgd);
 	__flush_tlb_all();
<span class="p_del">-	local_irq_restore(efi_flags);</span>
 	early_code_mapping_set_exec(0);
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



