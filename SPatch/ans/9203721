
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/2] mm, THP: Clean up return value of madvise_free_huge_pmd - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/2] mm, THP: Clean up return value of madvise_free_huge_pmd</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=294">Huang Ying</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 28, 2016, 5:36 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1467135452-16688-2-git-send-email-ying.huang@intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9203721/mbox/"
   >mbox</a>
|
   <a href="/patch/9203721/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9203721/">/patch/9203721/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	1C22F6074E for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 28 Jun 2016 17:40:58 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 0F37F285F0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 28 Jun 2016 17:40:58 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 0343528614; Tue, 28 Jun 2016 17:40:58 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 846C8285F0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 28 Jun 2016 17:40:57 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752592AbcF1Rk0 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 28 Jun 2016 13:40:26 -0400
Received: from mga09.intel.com ([134.134.136.24]:43570 &quot;EHLO mga09.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752046AbcF1Riy (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 28 Jun 2016 13:38:54 -0400
Received: from orsmga002.jf.intel.com ([10.7.209.21])
	by orsmga102.jf.intel.com with ESMTP; 28 Jun 2016 10:38:03 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.26,542,1459839600&quot;; d=&quot;scan&#39;208&quot;;a=&quot;1006872145&quot;
Received: from yhuang-mobile.jf.intel.com ([10.7.198.54])
	by orsmga002.jf.intel.com with ESMTP; 28 Jun 2016 10:38:03 -0700
From: &quot;Huang, Ying&quot; &lt;ying.huang@intel.com&gt;
To: Andrew Morton &lt;akpm@linux-foundation.org&gt;
Cc: Huang Ying &lt;ying.huang@intel.com&gt;, Minchan Kim &lt;minchan@kernel.org&gt;,
	&quot;Kirill A. Shutemov&quot; &lt;kirill.shutemov@linux.intel.com&gt;,
	Jerome Marchand &lt;jmarchan@redhat.com&gt;,
	Matthew Wilcox &lt;willy@linux.intel.com&gt;, Vlastimil Babka &lt;vbabka@suse.cz&gt;,
	Dan Williams &lt;dan.j.williams@intel.com&gt;,
	Mel Gorman &lt;mgorman@techsingularity.net&gt;,
	Andrea Arcangeli &lt;aarcange@redhat.com&gt;,
	Ebru Akagunduz &lt;ebru.akagunduz@gmail.com&gt;,
	linux-kernel@vger.kernel.org, linux-mm@kvack.org
Subject: [PATCH 2/2] mm, THP: Clean up return value of madvise_free_huge_pmd
Date: Tue, 28 Jun 2016 10:36:30 -0700
Message-Id: &lt;1467135452-16688-2-git-send-email-ying.huang@intel.com&gt;
X-Mailer: git-send-email 2.8.1
In-Reply-To: &lt;1467135452-16688-1-git-send-email-ying.huang@intel.com&gt;
References: &lt;1467135452-16688-1-git-send-email-ying.huang@intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=294">Huang Ying</a> - June 28, 2016, 5:36 p.m.</div>
<pre class="content">
<span class="from">From: Huang Ying &lt;ying.huang@intel.com&gt;</span>

The definition of return value of madvise_free_huge_pmd is not clear
before.  According to the suggestion of Minchan Kim, change the type of
return value to bool and return true if we do MADV_FREE successfully on
entire pmd page, otherwise, return false.  Comments are added too.

Cc: Minchan Kim &lt;minchan@kernel.org&gt;
<span class="signed-off-by">Signed-off-by: &quot;Huang, Ying&quot; &lt;ying.huang@intel.com&gt;</span>
---
 include/linux/huge_mm.h |  2 +-
 mm/huge_memory.c        | 15 ++++++++-------
 2 files changed, 9 insertions(+), 8 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=36811">Minchan Kim</a> - June 29, 2016, 7:27 a.m.</div>
<pre class="content">
On Tue, Jun 28, 2016 at 10:36:30AM -0700, Huang, Ying wrote:
<span class="quote">&gt; From: Huang Ying &lt;ying.huang@intel.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; The definition of return value of madvise_free_huge_pmd is not clear</span>
<span class="quote">&gt; before.  According to the suggestion of Minchan Kim, change the type of</span>
<span class="quote">&gt; return value to bool and return true if we do MADV_FREE successfully on</span>
<span class="quote">&gt; entire pmd page, otherwise, return false.  Comments are added too.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Cc: Minchan Kim &lt;minchan@kernel.org&gt;</span>
<span class="quote">&gt; Signed-off-by: &quot;Huang, Ying&quot; &lt;ying.huang@intel.com&gt;</span>
<span class="acked-by">Acked-by: Minchan Kim &lt;minchan@kernel.org&gt;</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/linux/huge_mm.h b/include/linux/huge_mm.h</span>
<span class="p_header">index eb81081..db97784 100644</span>
<span class="p_header">--- a/include/linux/huge_mm.h</span>
<span class="p_header">+++ b/include/linux/huge_mm.h</span>
<span class="p_chunk">@@ -11,7 +11,7 @@</span> <span class="p_context"> extern struct page *follow_trans_huge_pmd(struct vm_area_struct *vma,</span>
 					  unsigned long addr,
 					  pmd_t *pmd,
 					  unsigned int flags);
<span class="p_del">-extern int madvise_free_huge_pmd(struct mmu_gather *tlb,</span>
<span class="p_add">+extern bool madvise_free_huge_pmd(struct mmu_gather *tlb,</span>
 			struct vm_area_struct *vma,
 			pmd_t *pmd, unsigned long addr, unsigned long next);
 extern int zap_huge_pmd(struct mmu_gather *tlb,
<span class="p_header">diff --git a/mm/huge_memory.c b/mm/huge_memory.c</span>
<span class="p_header">index 546cd21..d2a5224 100644</span>
<span class="p_header">--- a/mm/huge_memory.c</span>
<span class="p_header">+++ b/mm/huge_memory.c</span>
<span class="p_chunk">@@ -1249,25 +1249,26 @@</span> <span class="p_context"> out:</span>
 	return 0;
 }
 
<span class="p_del">-int madvise_free_huge_pmd(struct mmu_gather *tlb, struct vm_area_struct *vma,</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Return true if we do MADV_FREE successfully on entire pmd page.</span>
<span class="p_add">+ * Otherwise, return false.</span>
<span class="p_add">+ */</span>
<span class="p_add">+bool madvise_free_huge_pmd(struct mmu_gather *tlb, struct vm_area_struct *vma,</span>
 		pmd_t *pmd, unsigned long addr, unsigned long next)
<span class="p_del">-</span>
 {
 	spinlock_t *ptl;
 	pmd_t orig_pmd;
 	struct page *page;
 	struct mm_struct *mm = tlb-&gt;mm;
<span class="p_del">-	int ret = 0;</span>
<span class="p_add">+	bool ret = false;</span>
 
 	ptl = pmd_trans_huge_lock(pmd, vma);
 	if (!ptl)
 		goto out_unlocked;
 
 	orig_pmd = *pmd;
<span class="p_del">-	if (is_huge_zero_pmd(orig_pmd)) {</span>
<span class="p_del">-		ret = 1;</span>
<span class="p_add">+	if (is_huge_zero_pmd(orig_pmd))</span>
 		goto out;
<span class="p_del">-	}</span>
 
 	page = pmd_page(orig_pmd);
 	/*
<span class="p_chunk">@@ -1309,7 +1310,7 @@</span> <span class="p_context"> int madvise_free_huge_pmd(struct mmu_gather *tlb, struct vm_area_struct *vma,</span>
 		set_pmd_at(mm, addr, pmd, orig_pmd);
 		tlb_remove_pmd_tlb_entry(tlb, pmd, addr);
 	}
<span class="p_del">-	ret = 1;</span>
<span class="p_add">+	ret = true;</span>
 out:
 	spin_unlock(ptl);
 out_unlocked:

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



