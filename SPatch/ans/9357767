
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/3] drm/radeon: clean function declarations up - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/3] drm/radeon: clean function declarations up</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=169865">Baoyou Xie</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 30, 2016, 8:14 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1475223273-19779-1-git-send-email-baoyou.xie@linaro.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9357767/mbox/"
   >mbox</a>
|
   <a href="/patch/9357767/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9357767/">/patch/9357767/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	0EC5F60757 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 30 Sep 2016 08:15:10 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id F252A29EBA
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 30 Sep 2016 08:15:09 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id E6B2729EBE; Fri, 30 Sep 2016 08:15:09 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, HK_RANDOM_FROM,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id CF17429EBA
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 30 Sep 2016 08:15:07 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752500AbcI3IPC (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 30 Sep 2016 04:15:02 -0400
Received: from mail-pf0-f175.google.com ([209.85.192.175]:35028 &quot;EHLO
	mail-pf0-f175.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932254AbcI3IOr (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 30 Sep 2016 04:14:47 -0400
Received: by mail-pf0-f175.google.com with SMTP id s13so37925787pfd.2
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Fri, 30 Sep 2016 01:14:46 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
	h=from:to:cc:subject:date:message-id;
	bh=THtQtIW/IUUbgshPnfwex12R73HL/bWfzJ9YM9vCUjY=;
	b=MRXUeCeSbZpOAujbCgHeiN3uxZVNDfqRxbUM8ssvLpF6FpmAgqCgQneBYZT2nr+aZo
	fcWpqtuJMy7NVsCimD7fCSCsLPL9qPRSyXkJClzln/FDaQQMBV50DyBhcntjegcg4kRd
	On4dvx9jzZZ2fHO878UqOzjYC5/aujv1ZGzhg=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20130820;
	h=x-gm-message-state:from:to:cc:subject:date:message-id;
	bh=THtQtIW/IUUbgshPnfwex12R73HL/bWfzJ9YM9vCUjY=;
	b=BR5VFShkwRexcfxbB0x3Y9hThY2kt/2+x+RfkOe6K5LYRNBggEwOPEvTBobZtvlEJr
	fQzOVWxyouIMF0o5VUPfwPEezWpUS2G71R4CJU7jWjKG5l/9e64FzdeBBXYaazZAjT4q
	yBAZR9zX0zh4ItHDJg8clnrhXuTTmNa8Dfpf0b7YG+8E2wWdpAtzx7ND+XeuQOXI1JUB
	85CHkRP5o4qa7QN9haOBpIc+zfomUG66UpIRzrH31B1mhpUxWrLUUmjByyYTb39F6A7z
	Jy5bUvrAggCR4dfyy0lst+lBO1uy0TKSkXAosnaDiG3R3o7NziDpZaaYuoeEoBaM9axR
	un4w==
X-Gm-Message-State: AA6/9RmF9b7EaKYAaPQQYsBwVy7nod7bijC5fLVG0QxNFnASWNwnY3r8dKTaQhNJC5rlgGf8
X-Received: by 10.98.97.7 with SMTP id v7mr9478241pfb.140.1475223286216;
	Fri, 30 Sep 2016 01:14:46 -0700 (PDT)
Received: from localhost.localdomain ([104.237.91.182])
	by smtp.gmail.com with ESMTPSA id
	25sm25606640pfj.23.2016.09.30.01.14.40
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
	Fri, 30 Sep 2016 01:14:45 -0700 (PDT)
From: Baoyou Xie &lt;baoyou.xie@linaro.org&gt;
To: alexander.deucher@amd.com, christian.koenig@amd.com, airlied@linux.ie
Cc: dri-devel@lists.freedesktop.org, linux-kernel@vger.kernel.org,
	arnd@arndb.de, baoyou.xie@linaro.org, xie.baoyou@zte.com.cn,
	han.fei@zte.com.cn, tang.qiang007@zte.com.cn
Subject: [PATCH 2/3] drm/radeon: clean function declarations up
Date: Fri, 30 Sep 2016 16:14:33 +0800
Message-Id: &lt;1475223273-19779-1-git-send-email-baoyou.xie@linaro.org&gt;
X-Mailer: git-send-email 2.7.4
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=169865">Baoyou Xie</a> - Sept. 30, 2016, 8:14 a.m.</div>
<pre class="content">
We get a few warnings when building kernel with W=1:
drivers/gpu/drm/radeon/radeon_device.c:642:6: warning: no previous prototype for &#39;radeon_device_is_virtual&#39; [-Wmissing-prototypes]
drivers/gpu/drm/radeon/radeon_kms.c:56:5: warning: no previous prototype for &#39;radeon_driver_unload_kms&#39; [-Wmissing-prototypes]
drivers/gpu/drm/radeon/radeon_kms.c:97:5: warning: no previous prototype for &#39;radeon_driver_load_kms&#39; [-Wmissing-prototypes]
drivers/gpu/drm/radeon/radeon_kms.c:612:6: warning: no previous prototype for &#39;radeon_driver_lastclose_kms&#39; [-Wmissing-prototypes]
....

In fact, these functions are declared in some source files,
but should be declared in a header file,
thus can be recognized in other file.

So this patch declares them in drivers/gpu/drm/radeon/radeon.h.
<span class="signed-off-by">
Signed-off-by: Baoyou Xie &lt;baoyou.xie@linaro.org&gt;</span>
---
 drivers/gpu/drm/radeon/atombios_encoders.c |   4 -
 drivers/gpu/drm/radeon/btc_dpm.c           |   4 -
 drivers/gpu/drm/radeon/ci_dpm.c            |  10 --
 drivers/gpu/drm/radeon/cik.c               |  14 --
 drivers/gpu/drm/radeon/cik_sdma.c          |   2 -
 drivers/gpu/drm/radeon/cypress_dpm.c       |   4 -
 drivers/gpu/drm/radeon/evergreen.c         |  11 --
 drivers/gpu/drm/radeon/evergreen_cs.c      |   2 -
 drivers/gpu/drm/radeon/evergreen_dma.c     |   2 -
 drivers/gpu/drm/radeon/kv_dpm.c            |   5 -
 drivers/gpu/drm/radeon/ni.c                |  11 --
 drivers/gpu/drm/radeon/ni_dma.c            |   2 -
 drivers/gpu/drm/radeon/ni_dpm.c            |   3 -
 drivers/gpu/drm/radeon/r600.c              |   2 -
 drivers/gpu/drm/radeon/r600_dma.c          |   2 -
 drivers/gpu/drm/radeon/radeon.h            | 207 +++++++++++++++++++++++++++++
 drivers/gpu/drm/radeon/radeon_acpi.c       |   2 -
 drivers/gpu/drm/radeon/radeon_asic.h       |   9 --
 drivers/gpu/drm/radeon/radeon_atombios.c   |   9 --
 drivers/gpu/drm/radeon/radeon_audio.c      |  63 ---------
 drivers/gpu/drm/radeon/radeon_encoders.c   |   8 --
 drivers/gpu/drm/radeon/radeon_i2c.c        |   4 -
 drivers/gpu/drm/radeon/radeon_kms.c        |   6 +-
 drivers/gpu/drm/radeon/radeon_object.c     |   2 -
 drivers/gpu/drm/radeon/rv730_dpm.c         |   3 -
 drivers/gpu/drm/radeon/rv740_dpm.c         |   2 -
 drivers/gpu/drm/radeon/si.c                |  10 --
 drivers/gpu/drm/radeon/si_dma.c            |   2 -
 drivers/gpu/drm/radeon/si_dpm.c            |   8 --
 drivers/gpu/drm/radeon/sumo_smc.c          |   2 -
 drivers/gpu/drm/radeon/trinity_dpm.c       |   1 -
 31 files changed, 210 insertions(+), 206 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=66951">Christian König</a> - Sept. 30, 2016, 11:59 a.m.</div>
<pre class="content">
Ah! Here is patch #2. I&#39;m indeed not deeply into the atombios stuff, so 
it probably was correct to not CC me :)

Anyway patch is Acked-by: Christian König &lt;christian.koenig@amd.com&gt;.

Cheers,
Christian.

Am 30.09.2016 um 10:14 schrieb Baoyou Xie:
<span class="quote">&gt; We get a few warnings when building kernel with W=1:</span>
<span class="quote">&gt; drivers/gpu/drm/radeon/radeon_device.c:642:6: warning: no previous prototype for &#39;radeon_device_is_virtual&#39; [-Wmissing-prototypes]</span>
<span class="quote">&gt; drivers/gpu/drm/radeon/radeon_kms.c:56:5: warning: no previous prototype for &#39;radeon_driver_unload_kms&#39; [-Wmissing-prototypes]</span>
<span class="quote">&gt; drivers/gpu/drm/radeon/radeon_kms.c:97:5: warning: no previous prototype for &#39;radeon_driver_load_kms&#39; [-Wmissing-prototypes]</span>
<span class="quote">&gt; drivers/gpu/drm/radeon/radeon_kms.c:612:6: warning: no previous prototype for &#39;radeon_driver_lastclose_kms&#39; [-Wmissing-prototypes]</span>
<span class="quote">&gt; ....</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; In fact, these functions are declared in some source files,</span>
<span class="quote">&gt; but should be declared in a header file,</span>
<span class="quote">&gt; thus can be recognized in other file.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; So this patch declares them in drivers/gpu/drm/radeon/radeon.h.</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Signed-off-by: Baoyou Xie &lt;baoyou.xie@linaro.org&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/atombios_encoders.c |   4 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/btc_dpm.c           |   4 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/ci_dpm.c            |  10 --</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/cik.c               |  14 --</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/cik_sdma.c          |   2 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/cypress_dpm.c       |   4 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/evergreen.c         |  11 --</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/evergreen_cs.c      |   2 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/evergreen_dma.c     |   2 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/kv_dpm.c            |   5 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/ni.c                |  11 --</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/ni_dma.c            |   2 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/ni_dpm.c            |   3 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/r600.c              |   2 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/r600_dma.c          |   2 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/radeon.h            | 207 +++++++++++++++++++++++++++++</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/radeon_acpi.c       |   2 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/radeon_asic.h       |   9 --</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/radeon_atombios.c   |   9 --</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/radeon_audio.c      |  63 ---------</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/radeon_encoders.c   |   8 --</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/radeon_i2c.c        |   4 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/radeon_kms.c        |   6 +-</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/radeon_object.c     |   2 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/rv730_dpm.c         |   3 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/rv740_dpm.c         |   2 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/si.c                |  10 --</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/si_dma.c            |   2 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/si_dpm.c            |   8 --</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/sumo_smc.c          |   2 -</span>
<span class="quote">&gt;   drivers/gpu/drm/radeon/trinity_dpm.c       |   1 -</span>
<span class="quote">&gt;   31 files changed, 210 insertions(+), 206 deletions(-)</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/atombios_encoders.c b/drivers/gpu/drm/radeon/atombios_encoders.c</span>
<span class="quote">&gt; index fa4f8f0..2bbb916 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/atombios_encoders.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/atombios_encoders.c</span>
<span class="quote">&gt; @@ -291,10 +291,6 @@ static void radeon_atom_backlight_exit(struct radeon_encoder *encoder)</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   #endif</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -/* evil but including atombios.h is much worse */</span>
<span class="quote">&gt; -bool radeon_atom_get_tv_timings(struct radeon_device *rdev, int index,</span>
<span class="quote">&gt; -				struct drm_display_mode *mode);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   static bool radeon_atom_mode_fixup(struct drm_encoder *encoder,</span>
<span class="quote">&gt;   				   const struct drm_display_mode *mode,</span>
<span class="quote">&gt;   				   struct drm_display_mode *adjusted_mode)</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/btc_dpm.c b/drivers/gpu/drm/radeon/btc_dpm.c</span>
<span class="quote">&gt; index 38e5123..2b08cfd 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/btc_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/btc_dpm.c</span>
<span class="quote">&gt; @@ -47,10 +47,6 @@</span>
<span class="quote">&gt;   #ifndef BTC_MGCG_SEQUENCE</span>
<span class="quote">&gt;   #define BTC_MGCG_SEQUENCE  300</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -struct rv7xx_ps *rv770_get_ps(struct radeon_ps *rps);</span>
<span class="quote">&gt; -struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -struct evergreen_power_info *evergreen_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   extern int ni_mc_load_microcode(struct radeon_device *rdev);</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   //********* BARTS **************//</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/ci_dpm.c b/drivers/gpu/drm/radeon/ci_dpm.c</span>
<span class="quote">&gt; index 7ba4508..57ac808 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/ci_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/ci_dpm.c</span>
<span class="quote">&gt; @@ -165,16 +165,6 @@ static const struct ci_pt_config_reg didt_config_ci[] =</span>
<span class="quote">&gt;   extern u8 rv770_get_memory_module_index(struct radeon_device *rdev);</span>
<span class="quote">&gt;   extern int ni_copy_and_switch_arb_sets(struct radeon_device *rdev,</span>
<span class="quote">&gt;   				       u32 arb_freq_src, u32 arb_freq_dest);</span>
<span class="quote">&gt; -extern u8 si_get_ddr3_mclk_frequency_ratio(u32 memory_clock);</span>
<span class="quote">&gt; -extern u8 si_get_mclk_frequency_ratio(u32 memory_clock, bool strobe_mode);</span>
<span class="quote">&gt; -extern void si_trim_voltage_table_to_fit_state_table(struct radeon_device *rdev,</span>
<span class="quote">&gt; -						     u32 max_voltage_steps,</span>
<span class="quote">&gt; -						     struct atom_voltage_table *voltage_table);</span>
<span class="quote">&gt; -extern void cik_enter_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void cik_exit_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern int ci_mc_load_microcode(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void cik_update_cg(struct radeon_device *rdev,</span>
<span class="quote">&gt; -			  u32 block, bool enable);</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   static int ci_get_std_voltage_value_sidd(struct radeon_device *rdev,</span>
<span class="quote">&gt;   					 struct atom_voltage_table_entry *voltage_table,</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/cik.c b/drivers/gpu/drm/radeon/cik.c</span>
<span class="quote">&gt; index f6ff41a..7f2daf5 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/cik.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/cik.c</span>
<span class="quote">&gt; @@ -118,21 +118,7 @@ MODULE_FIRMWARE(&quot;radeon/mullins_mec.bin&quot;);</span>
<span class="quote">&gt;   MODULE_FIRMWARE(&quot;radeon/mullins_rlc.bin&quot;);</span>
<span class="quote">&gt;   MODULE_FIRMWARE(&quot;radeon/mullins_sdma.bin&quot;);</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -extern int r600_ih_ring_alloc(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void r600_ih_ring_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_mc_stop(struct radeon_device *rdev, struct evergreen_mc_save *save);</span>
<span class="quote">&gt; -extern void evergreen_mc_resume(struct radeon_device *rdev, struct evergreen_mc_save *save);</span>
<span class="quote">&gt; -extern bool evergreen_is_display_hung(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void sumo_rlc_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern int sumo_rlc_init(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void si_vram_gtt_location(struct radeon_device *rdev, struct radeon_mc *mc);</span>
<span class="quote">&gt; -extern void si_rlc_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void si_init_uvd_internal_cg(struct radeon_device *rdev);</span>
<span class="quote">&gt;   static u32 cik_get_cu_active_bitmap(struct radeon_device *rdev, u32 se, u32 sh);</span>
<span class="quote">&gt; -extern int cik_sdma_resume(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void cik_sdma_enable(struct radeon_device *rdev, bool enable);</span>
<span class="quote">&gt; -extern void cik_sdma_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void vce_v2_0_enable_mgcg(struct radeon_device *rdev, bool enable);</span>
<span class="quote">&gt;   static void cik_rlc_stop(struct radeon_device *rdev);</span>
<span class="quote">&gt;   static void cik_pcie_gen3_enable(struct radeon_device *rdev);</span>
<span class="quote">&gt;   static void cik_program_aspm(struct radeon_device *rdev);</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/cik_sdma.c b/drivers/gpu/drm/radeon/cik_sdma.c</span>
<span class="quote">&gt; index 9c351dc..5f0862d 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/cik_sdma.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/cik_sdma.c</span>
<span class="quote">&gt; @@ -33,8 +33,6 @@</span>
<span class="quote">&gt;   #define CIK_SDMA_UCODE_SIZE 1050</span>
<span class="quote">&gt;   #define CIK_SDMA_UCODE_VERSION 64</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -u32 cik_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   /*</span>
<span class="quote">&gt;    * sDMA - System DMA</span>
<span class="quote">&gt;    * Starting with CIK, the GPU has new asynchronous</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/cypress_dpm.c b/drivers/gpu/drm/radeon/cypress_dpm.c</span>
<span class="quote">&gt; index a4edd07..3bdb82e 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/cypress_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/cypress_dpm.c</span>
<span class="quote">&gt; @@ -42,10 +42,6 @@</span>
<span class="quote">&gt;   #define MC_CG_SEQ_YCLK_SUSPEND      0x04</span>
<span class="quote">&gt;   #define MC_CG_SEQ_YCLK_RESUME       0x0a</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -struct rv7xx_ps *rv770_get_ps(struct radeon_ps *rps);</span>
<span class="quote">&gt; -struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -struct evergreen_power_info *evergreen_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   static void cypress_enable_bif_dynamic_pcie_gen2(struct radeon_device *rdev,</span>
<span class="quote">&gt;   						 bool enable)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/evergreen.c b/drivers/gpu/drm/radeon/evergreen.c</span>
<span class="quote">&gt; index 0b6b576..943a696 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/evergreen.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/evergreen.c</span>
<span class="quote">&gt; @@ -205,17 +205,6 @@ static void evergreen_gpu_init(struct radeon_device *rdev);</span>
<span class="quote">&gt;   void evergreen_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt;   void evergreen_pcie_gen2_enable(struct radeon_device *rdev);</span>
<span class="quote">&gt;   void evergreen_program_aspm(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void cayman_cp_int_cntl_setup(struct radeon_device *rdev,</span>
<span class="quote">&gt; -				     int ring, u32 cp_int_cntl);</span>
<span class="quote">&gt; -extern void cayman_vm_decode_fault(struct radeon_device *rdev,</span>
<span class="quote">&gt; -				   u32 status, u32 addr);</span>
<span class="quote">&gt; -void cik_init_cp_pg_table(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -extern u32 si_get_csb_size(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void si_get_csb_buffer(struct radeon_device *rdev, volatile u32 *buffer);</span>
<span class="quote">&gt; -extern u32 cik_get_csb_size(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void cik_get_csb_buffer(struct radeon_device *rdev, volatile u32 *buffer);</span>
<span class="quote">&gt; -extern void rv770_set_clk_bypass_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   static const u32 evergreen_golden_registers[] =</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/evergreen_cs.c b/drivers/gpu/drm/radeon/evergreen_cs.c</span>
<span class="quote">&gt; index f8b0509..cfc4cc9 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/evergreen_cs.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/evergreen_cs.c</span>
<span class="quote">&gt; @@ -37,8 +37,6 @@</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   #define REG_SAFE_BM_SIZE ARRAY_SIZE(evergreen_reg_safe_bm)</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -int r600_dma_cs_next_reloc(struct radeon_cs_parser *p,</span>
<span class="quote">&gt; -			   struct radeon_bo_list **cs_reloc);</span>
<span class="quote">&gt;   struct evergreen_cs_track {</span>
<span class="quote">&gt;   	u32			group_size;</span>
<span class="quote">&gt;   	u32			nbanks;</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/evergreen_dma.c b/drivers/gpu/drm/radeon/evergreen_dma.c</span>
<span class="quote">&gt; index 96535aa..67f350e 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/evergreen_dma.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/evergreen_dma.c</span>
<span class="quote">&gt; @@ -26,8 +26,6 @@</span>
<span class="quote">&gt;   #include &quot;radeon_asic.h&quot;</span>
<span class="quote">&gt;   #include &quot;evergreend.h&quot;</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -u32 evergreen_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   /**</span>
<span class="quote">&gt;    * evergreen_dma_fence_ring_emit - emit a fence on the DMA ring</span>
<span class="quote">&gt;    *</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/kv_dpm.c b/drivers/gpu/drm/radeon/kv_dpm.c</span>
<span class="quote">&gt; index a7e9786..dee537c 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/kv_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/kv_dpm.c</span>
<span class="quote">&gt; @@ -58,11 +58,6 @@ static void kv_dpm_powergate_vce(struct radeon_device *rdev, bool gate);</span>
<span class="quote">&gt;   static void kv_dpm_powergate_samu(struct radeon_device *rdev, bool gate);</span>
<span class="quote">&gt;   static void kv_dpm_powergate_acp(struct radeon_device *rdev, bool gate);</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -extern void cik_enter_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void cik_exit_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void cik_update_cg(struct radeon_device *rdev,</span>
<span class="quote">&gt; -			  u32 block, bool enable);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   static const struct kv_lcac_config_values sx_local_cac_cfg_kv[] =</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	{  0,       4,        1    },</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/ni.c b/drivers/gpu/drm/radeon/ni.c</span>
<span class="quote">&gt; index 103fc86..1a69aa0 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/ni.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/ni.c</span>
<span class="quote">&gt; @@ -187,20 +187,9 @@ static const u32 tn_rlc_save_restore_register_list[] =</span>
<span class="quote">&gt;   	0x802c,</span>
<span class="quote">&gt;   };</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -extern bool evergreen_is_display_hung(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_print_gpu_status_regs(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_mc_stop(struct radeon_device *rdev, struct evergreen_mc_save *save);</span>
<span class="quote">&gt; -extern void evergreen_mc_resume(struct radeon_device *rdev, struct evergreen_mc_save *save);</span>
<span class="quote">&gt;   extern int evergreen_mc_wait_for_idle(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_mc_program(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_irq_suspend(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern int evergreen_mc_init(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_fix_pci_max_read_req_size(struct radeon_device *rdev);</span>
<span class="quote">&gt;   extern void evergreen_pcie_gen2_enable(struct radeon_device *rdev);</span>
<span class="quote">&gt;   extern void evergreen_program_aspm(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void sumo_rlc_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern int sumo_rlc_init(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_gpu_pci_config_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   /* Firmware Names */</span>
<span class="quote">&gt;   MODULE_FIRMWARE(&quot;radeon/BARTS_pfp.bin&quot;);</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/ni_dma.c b/drivers/gpu/drm/radeon/ni_dma.c</span>
<span class="quote">&gt; index ce787a9..62165f9d 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/ni_dma.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/ni_dma.c</span>
<span class="quote">&gt; @@ -27,8 +27,6 @@</span>
<span class="quote">&gt;   #include &quot;radeon_trace.h&quot;</span>
<span class="quote">&gt;   #include &quot;nid.h&quot;</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -u32 cayman_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   /*</span>
<span class="quote">&gt;    * DMA</span>
<span class="quote">&gt;    * Starting with R600, the GPU has an asynchronous</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/ni_dpm.c b/drivers/gpu/drm/radeon/ni_dpm.c</span>
<span class="quote">&gt; index 4a601f9..1ad4bf3 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/ni_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/ni_dpm.c</span>
<span class="quote">&gt; @@ -718,9 +718,6 @@ static const u32 cayman_sysls_enable[] =</span>
<span class="quote">&gt;   };</span>
<span class="quote">&gt;   #define CAYMAN_SYSLS_ENABLE_LENGTH sizeof(cayman_sysls_enable) / (3 * sizeof(u32))</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -struct evergreen_power_info *evergreen_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   extern int ni_mc_load_microcode(struct radeon_device *rdev);</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   struct ni_power_info *ni_get_pi(struct radeon_device *rdev)</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/r600.c b/drivers/gpu/drm/radeon/r600.c</span>
<span class="quote">&gt; index a951881..dceafe5 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/r600.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/r600.c</span>
<span class="quote">&gt; @@ -105,8 +105,6 @@ static void r600_gpu_init(struct radeon_device *rdev);</span>
<span class="quote">&gt;   void r600_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt;   void r600_irq_disable(struct radeon_device *rdev);</span>
<span class="quote">&gt;   static void r600_pcie_gen2_enable(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern int evergreen_rlc_resume(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void rv770_set_clk_bypass_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   /*</span>
<span class="quote">&gt;    * Indirect registers accessor</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/r600_dma.c b/drivers/gpu/drm/radeon/r600_dma.c</span>
<span class="quote">&gt; index fb65e6f..80c1b7a 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/r600_dma.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/r600_dma.c</span>
<span class="quote">&gt; @@ -26,8 +26,6 @@</span>
<span class="quote">&gt;   #include &quot;radeon_asic.h&quot;</span>
<span class="quote">&gt;   #include &quot;r600d.h&quot;</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -u32 r600_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   /*</span>
<span class="quote">&gt;    * DMA</span>
<span class="quote">&gt;    * Starting with R600, the GPU has an asynchronous</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon.h b/drivers/gpu/drm/radeon/radeon.h</span>
<span class="quote">&gt; index 1b0dcad..9c02fbc 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon.h</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon.h</span>
<span class="quote">&gt; @@ -2976,4 +2976,211 @@ int r600_cs_common_vline_parse(struct radeon_cs_parser *p,</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   #include &quot;radeon_object.h&quot;</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; +extern bool radeon_device_is_virtual(void);</span>
<span class="quote">&gt; +extern int radeon_driver_unload_kms(struct drm_device *dev);</span>
<span class="quote">&gt; +extern int radeon_driver_load_kms(struct drm_device *dev, unsigned long flags);</span>
<span class="quote">&gt; +extern void radeon_driver_lastclose_kms(struct drm_device *dev);</span>
<span class="quote">&gt; +extern int</span>
<span class="quote">&gt; +radeon_driver_open_kms(struct drm_device *dev, struct drm_file *file_priv);</span>
<span class="quote">&gt; +extern void radeon_driver_postclose_kms(struct drm_device *dev,</span>
<span class="quote">&gt; +		struct drm_file *file_priv);</span>
<span class="quote">&gt; +extern void radeon_driver_preclose_kms(struct drm_device *dev,</span>
<span class="quote">&gt; +		struct drm_file *file_priv);</span>
<span class="quote">&gt; +extern u32</span>
<span class="quote">&gt; +radeon_get_vblank_counter_kms(struct drm_device *dev, unsigned int pipe);</span>
<span class="quote">&gt; +extern int radeon_enable_vblank_kms(struct drm_device *dev, unsigned int pipe);</span>
<span class="quote">&gt; +extern void</span>
<span class="quote">&gt; +radeon_disable_vblank_kms(struct drm_device *dev, unsigned int pipe);</span>
<span class="quote">&gt; +extern int</span>
<span class="quote">&gt; +radeon_get_vblank_timestamp_kms(struct drm_device *dev, unsigned int pipe,</span>
<span class="quote">&gt; +		int *max_error, struct timeval *vblank_time,</span>
<span class="quote">&gt; +		unsigned int flags);</span>
<span class="quote">&gt; +bool radeon_atom_get_tv_timings(struct radeon_device *rdev, int index,</span>
<span class="quote">&gt; +				struct drm_display_mode *mode);</span>
<span class="quote">&gt; +/* from radeon_object.c */</span>
<span class="quote">&gt; +int radeon_ttm_init(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void radeon_ttm_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +extern int radeon_mmap(struct file *filp, struct vm_area_struct *vma);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +void radeon_legacy_backlight_init(struct radeon_encoder *radeon_encoder,</span>
<span class="quote">&gt; +				  struct drm_connector *drm_connector);</span>
<span class="quote">&gt; +void radeon_add_legacy_encoder(struct drm_device *dev,</span>
<span class="quote">&gt; +		uint32_t encoder_enum, uint32_t supported_device);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +extern void radeon_gem_object_free(struct drm_gem_object *obj);</span>
<span class="quote">&gt; +extern int radeon_gem_object_open(struct drm_gem_object *obj,</span>
<span class="quote">&gt; +				  struct drm_file *file_priv);</span>
<span class="quote">&gt; +extern void radeon_gem_object_close(struct drm_gem_object *obj,</span>
<span class="quote">&gt; +				    struct drm_file *file_priv);</span>
<span class="quote">&gt; +extern irqreturn_t radeon_driver_irq_handler_kms(int irq, void *arg);</span>
<span class="quote">&gt; +extern void radeon_driver_irq_preinstall_kms(struct drm_device *dev);</span>
<span class="quote">&gt; +extern int radeon_driver_irq_postinstall_kms(struct drm_device *dev);</span>
<span class="quote">&gt; +extern void radeon_driver_irq_uninstall_kms(struct drm_device *dev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +u32 r600_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; +int r600_ih_ring_alloc(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void r600_ih_ring_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void rv770_set_clk_bypass_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void radeon_pm_acpi_event_handler(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void r600_hdmi_update_acr(struct drm_encoder *encoder, long offset,</span>
<span class="quote">&gt; +			  const struct radeon_hdmi_acr *acr);</span>
<span class="quote">&gt; +void r600_set_avi_packet(struct radeon_device *rdev, u32 offset,</span>
<span class="quote">&gt; +			 unsigned char *buffer, size_t size);</span>
<span class="quote">&gt; +void r600_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; +			     struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; +void r600_set_vbi_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; +void r600_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; +void r600_set_mute(struct drm_encoder *encoder, u32 offset, bool mute);</span>
<span class="quote">&gt; +void r600_hdmi_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="quote">&gt; +void dce3_2_afmt_hdmi_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="quote">&gt; +					       u8 *sadb, int sad_count);</span>
<span class="quote">&gt; +void dce3_2_afmt_dp_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="quote">&gt; +					     u8 *sadb, int sad_count);</span>
<span class="quote">&gt; +void dce3_2_afmt_write_sad_regs(struct drm_encoder *encoder,</span>
<span class="quote">&gt; +				struct cea_sad *sads, int sad_count);</span>
<span class="quote">&gt; +void dce3_2_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; +			  struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; +void dce3_2_hdmi_update_acr(struct drm_encoder *encoder, long offset,</span>
<span class="quote">&gt; +			    const struct radeon_hdmi_acr *acr);</span>
<span class="quote">&gt; +void dce3_2_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; +void dce3_2_set_mute(struct drm_encoder *encoder, u32 offset, bool mute);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +/*</span>
<span class="quote">&gt; + * evergreen</span>
<span class="quote">&gt; + */</span>
<span class="quote">&gt; +struct evergreen_mc_save {</span>
<span class="quote">&gt; +	u32 vga_render_control;</span>
<span class="quote">&gt; +	u32 vga_hdp_control;</span>
<span class="quote">&gt; +	bool crtc_enabled[RADEON_MAX_CRTCS];</span>
<span class="quote">&gt; +};</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +void evergreen_fix_pci_max_read_req_size(struct radeon_device *rdev);</span>
<span class="quote">&gt; +u32 evergreen_get_number_of_dram_channels(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void</span>
<span class="quote">&gt; +evergreen_mc_stop(struct radeon_device *rdev, struct evergreen_mc_save *save);</span>
<span class="quote">&gt; +void</span>
<span class="quote">&gt; +evergreen_mc_resume(struct radeon_device *rdev, struct evergreen_mc_save *save);</span>
<span class="quote">&gt; +void evergreen_mc_program(struct radeon_device *rdev);</span>
<span class="quote">&gt; +int evergreen_mc_init(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void evergreen_print_gpu_status_regs(struct radeon_device *rdev);</span>
<span class="quote">&gt; +bool evergreen_is_display_hung(struct radeon_device *rdev);</span>
<span class="quote">&gt; +u32 evergreen_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void evergreen_gpu_pci_config_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +void sumo_rlc_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; +int sumo_rlc_init(struct radeon_device *rdev);</span>
<span class="quote">&gt; +int evergreen_rlc_resume(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void evergreen_irq_suspend(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void dce4_audio_enable(struct radeon_device *rdev, struct r600_audio_pin *pin,</span>
<span class="quote">&gt; +		       u8 enable_mask);</span>
<span class="quote">&gt; +void evergreen_hdmi_update_acr(struct drm_encoder *encoder, long offset,</span>
<span class="quote">&gt; +			       const struct radeon_hdmi_acr *acr);</span>
<span class="quote">&gt; +void dce4_afmt_write_latency_fields(struct drm_encoder *encoder,</span>
<span class="quote">&gt; +		struct drm_connector *connector, struct drm_display_mode *mode);</span>
<span class="quote">&gt; +void dce4_afmt_hdmi_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="quote">&gt; +				u8 *sadb, int sad_count);</span>
<span class="quote">&gt; +void dce4_afmt_dp_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="quote">&gt; +				u8 *sadb, int sad_count);</span>
<span class="quote">&gt; +void evergreen_hdmi_write_sad_regs(struct drm_encoder *encoder,</span>
<span class="quote">&gt; +		struct cea_sad *sads, int sad_count);</span>
<span class="quote">&gt; +void evergreen_set_avi_packet(struct radeon_device *rdev, u32 offset,</span>
<span class="quote">&gt; +		unsigned char *buffer, size_t size);</span>
<span class="quote">&gt; +void dce4_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; +		struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; +void dce4_dp_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; +		struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; +void dce4_set_vbi_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; +void dce4_hdmi_set_color_depth(struct drm_encoder *encoder,</span>
<span class="quote">&gt; +		u32 offset, int bpc);</span>
<span class="quote">&gt; +void dce4_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; +void dce4_set_mute(struct drm_encoder *encoder, u32 offset, bool mute);</span>
<span class="quote">&gt; +void cayman_cp_int_cntl_setup(struct radeon_device *rdev,</span>
<span class="quote">&gt; +		int ring, u32 cp_int_cntl);</span>
<span class="quote">&gt; +u32 cayman_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void cayman_vm_decode_fault(struct radeon_device *rdev,</span>
<span class="quote">&gt; +		u32 status, u32 addr);</span>
<span class="quote">&gt; +void evergreen_hdmi_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="quote">&gt; +void evergreen_dp_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +void radeon_atom_backlight_init(struct radeon_encoder *radeon_encoder,</span>
<span class="quote">&gt; +		struct drm_connector *drm_connector);</span>
<span class="quote">&gt; +void radeon_add_atom_encoder(struct drm_device *dev, uint32_t encoder_enum,</span>
<span class="quote">&gt; +		uint32_t supported_device, u16 caps);</span>
<span class="quote">&gt; +int radeon_atom_hw_i2c_xfer(struct i2c_adapter *i2c_adap,</span>
<span class="quote">&gt; +		struct i2c_msg *msgs, int num);</span>
<span class="quote">&gt; +u32 radeon_atom_hw_i2c_func(struct i2c_adapter *adap);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +int si_mc_load_microcode(struct radeon_device *rdev);</span>
<span class="quote">&gt; +u32 si_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void si_vram_gtt_location(struct radeon_device *rdev, struct radeon_mc *mc);</span>
<span class="quote">&gt; +void si_init_uvd_internal_cg(struct radeon_device *rdev);</span>
<span class="quote">&gt; +u32 si_get_csb_size(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void si_get_csb_buffer(struct radeon_device *rdev, volatile u32 *buffer);</span>
<span class="quote">&gt; +void si_rlc_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +extern struct sg_table *</span>
<span class="quote">&gt; +radeon_gem_prime_get_sg_table(struct drm_gem_object *obj);</span>
<span class="quote">&gt; +extern void *radeon_gem_prime_vmap(struct drm_gem_object *obj);</span>
<span class="quote">&gt; +extern void radeon_gem_prime_vunmap(struct drm_gem_object *obj, void *vaddr);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +extern struct drm_gem_object *</span>
<span class="quote">&gt; +radeon_gem_prime_import_sg_table(struct drm_device *dev,</span>
<span class="quote">&gt; +		struct dma_buf_attachment *attach, struct sg_table *sg);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +extern int radeon_gem_prime_pin(struct drm_gem_object *obj);</span>
<span class="quote">&gt; +extern void radeon_gem_prime_unpin(struct drm_gem_object *obj);</span>
<span class="quote">&gt; +extern struct reservation_object *</span>
<span class="quote">&gt; +radeon_gem_prime_res_obj(struct drm_gem_object *obj);</span>
<span class="quote">&gt; +extern struct dma_buf *radeon_gem_prime_export(struct drm_device *dev,</span>
<span class="quote">&gt; +		struct drm_gem_object *gobj, int flags);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +int ci_mc_load_microcode(struct radeon_device *rdev);</span>
<span class="quote">&gt; +u32 cik_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void cik_enter_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void cik_exit_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void cik_update_cg(struct radeon_device *rdev, u32 block, bool enable);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +void cik_init_cp_pg_table(struct radeon_device *rdev);</span>
<span class="quote">&gt; +u32 cik_get_csb_size(struct radeon_device *rdev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +void cik_get_csb_buffer(struct radeon_device *rdev, volatile u32 *buffer);</span>
<span class="quote">&gt; +struct rv7xx_ps *rv770_get_ps(struct radeon_ps *rps);</span>
<span class="quote">&gt; +struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; +struct evergreen_power_info *evergreen_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; +struct sumo_power_info *sumo_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; +struct ni_power_info *ni_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; +struct ni_ps *ni_get_ps(struct radeon_ps *rps);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +u8 si_get_ddr3_mclk_frequency_ratio(u32 memory_clock);</span>
<span class="quote">&gt; +u8 si_get_mclk_frequency_ratio(u32 memory_clock, bool strobe_mode);</span>
<span class="quote">&gt; +void si_trim_voltage_table_to_fit_state_table(struct radeon_device *rdev,</span>
<span class="quote">&gt; +		u32 max_voltage_steps,</span>
<span class="quote">&gt; +		struct atom_voltage_table *voltage_table);</span>
<span class="quote">&gt; +u32 dce6_endpoint_rreg(struct radeon_device *rdev, u32 offset, u32 reg);</span>
<span class="quote">&gt; +void dce6_endpoint_wreg(struct radeon_device *rdev, u32 offset, u32 reg, u32 v);</span>
<span class="quote">&gt; +void dce6_afmt_select_pin(struct drm_encoder *encoder);</span>
<span class="quote">&gt; +void dce6_afmt_write_latency_fields(struct drm_encoder *encoder,</span>
<span class="quote">&gt; +		struct drm_connector *connector, struct drm_display_mode *mode);</span>
<span class="quote">&gt; +void dce6_afmt_hdmi_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="quote">&gt; +		u8 *sadb, int sad_count);</span>
<span class="quote">&gt; +void dce6_afmt_dp_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="quote">&gt; +		u8 *sadb, int sad_count);</span>
<span class="quote">&gt; +void dce6_afmt_write_sad_regs(struct drm_encoder *encoder, struct cea_sad *sads,</span>
<span class="quote">&gt; +		int sad_count);</span>
<span class="quote">&gt; +void dce6_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; +		struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; +void dce6_dp_audio_set_dto(struct radeon_device *rdev, struct radeon_crtc *crtc,</span>
<span class="quote">&gt; +		unsigned int clock);</span>
<span class="quote">&gt; +void cik_sdma_enable(struct radeon_device *rdev, bool enable);</span>
<span class="quote">&gt; +int cik_sdma_resume(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void cik_sdma_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +void vce_v1_0_enable_mgcg(struct radeon_device *rdev, bool enable);</span>
<span class="quote">&gt; +void vce_v2_0_enable_mgcg(struct radeon_device *rdev, bool enable);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +int r600_dma_cs_next_reloc(struct radeon_cs_parser *p,</span>
<span class="quote">&gt; +		struct radeon_bo_list **cs_reloc);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;   #endif</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon_acpi.c b/drivers/gpu/drm/radeon/radeon_acpi.c</span>
<span class="quote">&gt; index 6efbd65..231d01d 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon_acpi.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon_acpi.c</span>
<span class="quote">&gt; @@ -41,8 +41,6 @@ static inline bool radeon_atpx_dgpu_req_power_for_displays(void) { return false;</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   #define ACPI_AC_CLASS           &quot;ac_adapter&quot;</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -extern void radeon_pm_acpi_event_handler(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   struct atif_verify_interface {</span>
<span class="quote">&gt;   	u16 size;		/* structure size in bytes (includes size field) */</span>
<span class="quote">&gt;   	u16 version;		/* version */</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon_asic.h b/drivers/gpu/drm/radeon/radeon_asic.h</span>
<span class="quote">&gt; index e3f036c..48b46fb 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon_asic.h</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon_asic.h</span>
<span class="quote">&gt; @@ -498,15 +498,6 @@ bool rv770_dpm_vblank_too_short(struct radeon_device *rdev);</span>
<span class="quote">&gt;   u32 rv770_dpm_get_current_sclk(struct radeon_device *rdev);</span>
<span class="quote">&gt;   u32 rv770_dpm_get_current_mclk(struct radeon_device *rdev);</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -/*</span>
<span class="quote">&gt; - * evergreen</span>
<span class="quote">&gt; - */</span>
<span class="quote">&gt; -struct evergreen_mc_save {</span>
<span class="quote">&gt; -	u32 vga_render_control;</span>
<span class="quote">&gt; -	u32 vga_hdp_control;</span>
<span class="quote">&gt; -	bool crtc_enabled[RADEON_MAX_CRTCS];</span>
<span class="quote">&gt; -};</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   void evergreen_pcie_gart_tlb_flush(struct radeon_device *rdev);</span>
<span class="quote">&gt;   int evergreen_init(struct radeon_device *rdev);</span>
<span class="quote">&gt;   void evergreen_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon_atombios.c b/drivers/gpu/drm/radeon/radeon_atombios.c</span>
<span class="quote">&gt; index 4134759..4d640de 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon_atombios.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon_atombios.c</span>
<span class="quote">&gt; @@ -31,15 +31,6 @@</span>
<span class="quote">&gt;   #include &quot;atom-bits.h&quot;</span>
<span class="quote">&gt;   #include &quot;radeon_asic.h&quot;</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -extern void</span>
<span class="quote">&gt; -radeon_add_atom_encoder(struct drm_device *dev, uint32_t encoder_enum,</span>
<span class="quote">&gt; -			uint32_t supported_device, u16 caps);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -/* from radeon_legacy_encoder.c */</span>
<span class="quote">&gt; -extern void</span>
<span class="quote">&gt; -radeon_add_legacy_encoder(struct drm_device *dev, uint32_t encoder_enum,</span>
<span class="quote">&gt; -			  uint32_t supported_device);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   union atom_supported_devices {</span>
<span class="quote">&gt;   	struct _ATOM_SUPPORTED_DEVICES_INFO info;</span>
<span class="quote">&gt;   	struct _ATOM_SUPPORTED_DEVICES_INFO_2 info_2;</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon_audio.c b/drivers/gpu/drm/radeon/radeon_audio.c</span>
<span class="quote">&gt; index b214663..0303f07 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon_audio.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon_audio.c</span>
<span class="quote">&gt; @@ -31,77 +31,14 @@</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   void r600_audio_enable(struct radeon_device *rdev, struct r600_audio_pin *pin,</span>
<span class="quote">&gt;   		u8 enable_mask);</span>
<span class="quote">&gt; -void dce4_audio_enable(struct radeon_device *rdev, struct r600_audio_pin *pin,</span>
<span class="quote">&gt; -		u8 enable_mask);</span>
<span class="quote">&gt;   void dce6_audio_enable(struct radeon_device *rdev, struct r600_audio_pin *pin,</span>
<span class="quote">&gt;   		u8 enable_mask);</span>
<span class="quote">&gt; -u32 dce6_endpoint_rreg(struct radeon_device *rdev, u32 offset, u32 reg);</span>
<span class="quote">&gt; -void dce6_endpoint_wreg(struct radeon_device *rdev,</span>
<span class="quote">&gt; -		u32 offset, u32 reg, u32 v);</span>
<span class="quote">&gt; -void dce3_2_afmt_write_sad_regs(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -		struct cea_sad *sads, int sad_count);</span>
<span class="quote">&gt; -void evergreen_hdmi_write_sad_regs(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -		struct cea_sad *sads, int sad_count);</span>
<span class="quote">&gt; -void dce6_afmt_write_sad_regs(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -		struct cea_sad *sads, int sad_count);</span>
<span class="quote">&gt; -void dce3_2_afmt_hdmi_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -		u8 *sadb, int sad_count);</span>
<span class="quote">&gt; -void dce3_2_afmt_dp_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -		u8 *sadb, int sad_count);</span>
<span class="quote">&gt; -void dce4_afmt_hdmi_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -		u8 *sadb, int sad_count);</span>
<span class="quote">&gt; -void dce4_afmt_dp_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -		u8 *sadb, int sad_count);</span>
<span class="quote">&gt; -void dce6_afmt_hdmi_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -		u8 *sadb, int sad_count);</span>
<span class="quote">&gt; -void dce6_afmt_dp_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -		u8 *sadb, int sad_count);</span>
<span class="quote">&gt; -void dce4_afmt_write_latency_fields(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -		struct drm_connector *connector, struct drm_display_mode *mode);</span>
<span class="quote">&gt; -void dce6_afmt_write_latency_fields(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -		struct drm_connector *connector, struct drm_display_mode *mode);</span>
<span class="quote">&gt;   struct r600_audio_pin* r600_audio_get_pin(struct radeon_device *rdev);</span>
<span class="quote">&gt;   struct r600_audio_pin* dce6_audio_get_pin(struct radeon_device *rdev);</span>
<span class="quote">&gt; -void dce6_afmt_select_pin(struct drm_encoder *encoder);</span>
<span class="quote">&gt; -void r600_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; -	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; -void dce3_2_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; -	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; -void dce4_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; -	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; -void dce4_dp_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; -	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; -void dce6_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; -	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; -void dce6_dp_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; -	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; -void r600_set_avi_packet(struct radeon_device *rdev, u32 offset,</span>
<span class="quote">&gt; -	unsigned char *buffer, size_t size);</span>
<span class="quote">&gt; -void evergreen_set_avi_packet(struct radeon_device *rdev, u32 offset,</span>
<span class="quote">&gt; -	unsigned char *buffer, size_t size);</span>
<span class="quote">&gt; -void r600_hdmi_update_acr(struct drm_encoder *encoder, long offset,</span>
<span class="quote">&gt; -	const struct radeon_hdmi_acr *acr);</span>
<span class="quote">&gt; -void dce3_2_hdmi_update_acr(struct drm_encoder *encoder, long offset,</span>
<span class="quote">&gt; -	const struct radeon_hdmi_acr *acr);</span>
<span class="quote">&gt; -void evergreen_hdmi_update_acr(struct drm_encoder *encoder, long offset,</span>
<span class="quote">&gt; -	const struct radeon_hdmi_acr *acr);</span>
<span class="quote">&gt; -void r600_set_vbi_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; -void dce4_set_vbi_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; -void dce4_hdmi_set_color_depth(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -	u32 offset, int bpc);</span>
<span class="quote">&gt; -void r600_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; -void dce3_2_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; -void dce4_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; -void r600_set_mute(struct drm_encoder *encoder, u32 offset, bool mute);</span>
<span class="quote">&gt; -void dce3_2_set_mute(struct drm_encoder *encoder, u32 offset, bool mute);</span>
<span class="quote">&gt; -void dce4_set_mute(struct drm_encoder *encoder, u32 offset, bool mute);</span>
<span class="quote">&gt;   static void radeon_audio_hdmi_mode_set(struct drm_encoder *encoder,</span>
<span class="quote">&gt;   	struct drm_display_mode *mode);</span>
<span class="quote">&gt;   static void radeon_audio_dp_mode_set(struct drm_encoder *encoder,</span>
<span class="quote">&gt;   	struct drm_display_mode *mode);</span>
<span class="quote">&gt; -void r600_hdmi_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="quote">&gt; -void evergreen_hdmi_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="quote">&gt; -void evergreen_dp_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   static const u32 pin_offsets[7] =</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon_encoders.c b/drivers/gpu/drm/radeon/radeon_encoders.c</span>
<span class="quote">&gt; index c6ee802..675153e 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon_encoders.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon_encoders.c</span>
<span class="quote">&gt; @@ -29,14 +29,6 @@</span>
<span class="quote">&gt;   #include &quot;radeon.h&quot;</span>
<span class="quote">&gt;   #include &quot;atom.h&quot;</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -extern void</span>
<span class="quote">&gt; -radeon_legacy_backlight_init(struct radeon_encoder *radeon_encoder,</span>
<span class="quote">&gt; -			     struct drm_connector *drm_connector);</span>
<span class="quote">&gt; -extern void</span>
<span class="quote">&gt; -radeon_atom_backlight_init(struct radeon_encoder *radeon_encoder,</span>
<span class="quote">&gt; -			   struct drm_connector *drm_connector);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   static uint32_t radeon_encoder_clones(struct drm_encoder *encoder)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	struct drm_device *dev = encoder-&gt;dev;</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon_i2c.c b/drivers/gpu/drm/radeon/radeon_i2c.c</span>
<span class="quote">&gt; index 021aa00..3941588 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon_i2c.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon_i2c.c</span>
<span class="quote">&gt; @@ -31,10 +31,6 @@</span>
<span class="quote">&gt;   #include &quot;radeon.h&quot;</span>
<span class="quote">&gt;   #include &quot;atom.h&quot;</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -extern int radeon_atom_hw_i2c_xfer(struct i2c_adapter *i2c_adap,</span>
<span class="quote">&gt; -				   struct i2c_msg *msgs, int num);</span>
<span class="quote">&gt; -extern u32 radeon_atom_hw_i2c_func(struct i2c_adapter *adap);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   /**</span>
<span class="quote">&gt;    * radeon_ddc_probe</span>
<span class="quote">&gt;    *</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon_kms.c b/drivers/gpu/drm/radeon/radeon_kms.c</span>
<span class="quote">&gt; index 4388dde..f089485 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon_kms.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon_kms.c</span>
<span class="quote">&gt; @@ -830,7 +830,7 @@ u32 radeon_get_vblank_counter_kms(struct drm_device *dev, unsigned int pipe)</span>
<span class="quote">&gt;    * Enable the interrupt on the requested crtc (all asics).</span>
<span class="quote">&gt;    * Returns 0 on success, -EINVAL on failure.</span>
<span class="quote">&gt;    */</span>
<span class="quote">&gt; -int radeon_enable_vblank_kms(struct drm_device *dev, int crtc)</span>
<span class="quote">&gt; +int radeon_enable_vblank_kms(struct drm_device *dev, unsigned int crtc)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	struct radeon_device *rdev = dev-&gt;dev_private;</span>
<span class="quote">&gt;   	unsigned long irqflags;</span>
<span class="quote">&gt; @@ -856,7 +856,7 @@ int radeon_enable_vblank_kms(struct drm_device *dev, int crtc)</span>
<span class="quote">&gt;    *</span>
<span class="quote">&gt;    * Disable the interrupt on the requested crtc (all asics).</span>
<span class="quote">&gt;    */</span>
<span class="quote">&gt; -void radeon_disable_vblank_kms(struct drm_device *dev, int crtc)</span>
<span class="quote">&gt; +void radeon_disable_vblank_kms(struct drm_device *dev, unsigned int crtc)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	struct radeon_device *rdev = dev-&gt;dev_private;</span>
<span class="quote">&gt;   	unsigned long irqflags;</span>
<span class="quote">&gt; @@ -885,7 +885,7 @@ void radeon_disable_vblank_kms(struct drm_device *dev, int crtc)</span>
<span class="quote">&gt;    * scanout position.  (all asics).</span>
<span class="quote">&gt;    * Returns postive status flags on success, negative error on failure.</span>
<span class="quote">&gt;    */</span>
<span class="quote">&gt; -int radeon_get_vblank_timestamp_kms(struct drm_device *dev, int crtc,</span>
<span class="quote">&gt; +int radeon_get_vblank_timestamp_kms(struct drm_device *dev, unsigned int crtc,</span>
<span class="quote">&gt;   				    int *max_error,</span>
<span class="quote">&gt;   				    struct timeval *vblank_time,</span>
<span class="quote">&gt;   				    unsigned flags)</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon_object.c b/drivers/gpu/drm/radeon/radeon_object.c</span>
<span class="quote">&gt; index be30861..841aa89 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon_object.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon_object.c</span>
<span class="quote">&gt; @@ -38,8 +38,6 @@</span>
<span class="quote">&gt;   #include &quot;radeon_trace.h&quot;</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -int radeon_ttm_init(struct radeon_device *rdev);</span>
<span class="quote">&gt; -void radeon_ttm_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt;   static void radeon_bo_clear_surface_reg(struct radeon_bo *bo);</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt;   /*</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/rv730_dpm.c b/drivers/gpu/drm/radeon/rv730_dpm.c</span>
<span class="quote">&gt; index d37ba2c..ff203ed 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/rv730_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/rv730_dpm.c</span>
<span class="quote">&gt; @@ -34,9 +34,6 @@</span>
<span class="quote">&gt;   #define MC_CG_ARB_FREQ_F2           0x0c</span>
<span class="quote">&gt;   #define MC_CG_ARB_FREQ_F3           0x0d</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -struct rv7xx_ps *rv770_get_ps(struct radeon_ps *rps);</span>
<span class="quote">&gt; -struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   int rv730_populate_sclk_value(struct radeon_device *rdev,</span>
<span class="quote">&gt;   			      u32 engine_clock,</span>
<span class="quote">&gt;   			      RV770_SMC_SCLK_VALUE *sclk)</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/rv740_dpm.c b/drivers/gpu/drm/radeon/rv740_dpm.c</span>
<span class="quote">&gt; index 4b85082..2b390e1 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/rv740_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/rv740_dpm.c</span>
<span class="quote">&gt; @@ -29,8 +29,6 @@</span>
<span class="quote">&gt;   #include &quot;rv770_dpm.h&quot;</span>
<span class="quote">&gt;   #include &quot;atom.h&quot;</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   u32 rv740_get_decoded_reference_divider(u32 encoded_ref)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	u32 ref = 0;</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/si.c b/drivers/gpu/drm/radeon/si.c</span>
<span class="quote">&gt; index 7ee9aaf..e5ceeb4 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/si.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/si.c</span>
<span class="quote">&gt; @@ -119,16 +119,6 @@ MODULE_FIRMWARE(&quot;radeon/hainan_k_smc.bin&quot;);</span>
<span class="quote">&gt;   static u32 si_get_cu_active_bitmap(struct radeon_device *rdev, u32 se, u32 sh);</span>
<span class="quote">&gt;   static void si_pcie_gen3_enable(struct radeon_device *rdev);</span>
<span class="quote">&gt;   static void si_program_aspm(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void sumo_rlc_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern int sumo_rlc_init(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern int r600_ih_ring_alloc(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void r600_ih_ring_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_fix_pci_max_read_req_size(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_mc_stop(struct radeon_device *rdev, struct evergreen_mc_save *save);</span>
<span class="quote">&gt; -extern void evergreen_mc_resume(struct radeon_device *rdev, struct evergreen_mc_save *save);</span>
<span class="quote">&gt; -extern u32 evergreen_get_number_of_dram_channels(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_print_gpu_status_regs(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern bool evergreen_is_display_hung(struct radeon_device *rdev);</span>
<span class="quote">&gt;   static void si_enable_gui_idle_interrupt(struct radeon_device *rdev,</span>
<span class="quote">&gt;   					 bool enable);</span>
<span class="quote">&gt;   static void si_init_pg(struct radeon_device *rdev);</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/si_dma.c b/drivers/gpu/drm/radeon/si_dma.c</span>
<span class="quote">&gt; index 8320792..afe19f8d 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/si_dma.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/si_dma.c</span>
<span class="quote">&gt; @@ -27,8 +27,6 @@</span>
<span class="quote">&gt;   #include &quot;radeon_trace.h&quot;</span>
<span class="quote">&gt;   #include &quot;sid.h&quot;</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -u32 si_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   /**</span>
<span class="quote">&gt;    * si_dma_is_lockup - Check if the DMA engine is locked up</span>
<span class="quote">&gt;    *</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/si_dpm.c b/drivers/gpu/drm/radeon/si_dpm.c</span>
<span class="quote">&gt; index e6abc09..0a5aff5 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/si_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/si_dpm.c</span>
<span class="quote">&gt; @@ -1734,14 +1734,6 @@ static const struct si_powertune_data powertune_data_hainan =</span>
<span class="quote">&gt;   	true</span>
<span class="quote">&gt;   };</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -struct evergreen_power_info *evergreen_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -struct ni_power_info *ni_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -struct ni_ps *ni_get_ps(struct radeon_ps *rps);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -extern int si_mc_load_microcode(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void vce_v1_0_enable_mgcg(struct radeon_device *rdev, bool enable);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   static int si_populate_voltage_value(struct radeon_device *rdev,</span>
<span class="quote">&gt;   				     const struct atom_voltage_table *table,</span>
<span class="quote">&gt;   				     u16 value, SISLANDS_SMC_VOLTAGE_VALUE *voltage);</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/sumo_smc.c b/drivers/gpu/drm/radeon/sumo_smc.c</span>
<span class="quote">&gt; index fb081d2..05ed103 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/sumo_smc.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/sumo_smc.c</span>
<span class="quote">&gt; @@ -31,8 +31,6 @@</span>
<span class="quote">&gt;   #define SUMO_SMU_SERVICE_ROUTINE_ALTVDDNB_NOTIFY  27</span>
<span class="quote">&gt;   #define SUMO_SMU_SERVICE_ROUTINE_GFX_SRV_ID_20  20</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -struct sumo_power_info *sumo_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;   static void sumo_send_msg_to_smu(struct radeon_device *rdev, u32 id)</span>
<span class="quote">&gt;   {</span>
<span class="quote">&gt;   	u32 gfx_int_req;</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/trinity_dpm.c b/drivers/gpu/drm/radeon/trinity_dpm.c</span>
<span class="quote">&gt; index 6730367..2d423b5 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/trinity_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/trinity_dpm.c</span>
<span class="quote">&gt; @@ -336,7 +336,6 @@ static const u32 trinity_override_mgpg_sequences[] =</span>
<span class="quote">&gt;   	0x00000204, 0x00000000,</span>
<span class="quote">&gt;   };</span>
<span class="quote">&gt;   </span>
<span class="quote">&gt; -extern void vce_v1_0_enable_mgcg(struct radeon_device *rdev, bool enable);</span>
<span class="quote">&gt;   static void trinity_program_clk_gating_hw_sequence(struct radeon_device *rdev,</span>
<span class="quote">&gt;   						   const u32 *seq, u32 count);</span>
<span class="quote">&gt;   static void trinity_override_dynamic_mg_powergating(struct radeon_device *rdev);</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=43071">Deucher, Alexander</a> - Sept. 30, 2016, 1:32 p.m.</div>
<pre class="content">
<span class="quote">&gt; -----Original Message-----</span>
<span class="quote">&gt; From: Baoyou Xie [mailto:baoyou.xie@linaro.org]</span>
<span class="quote">&gt; Sent: Friday, September 30, 2016 4:15 AM</span>
<span class="quote">&gt; To: Deucher, Alexander; Koenig, Christian; airlied@linux.ie</span>
<span class="quote">&gt; Cc: dri-devel@lists.freedesktop.org; linux-kernel@vger.kernel.org;</span>
<span class="quote">&gt; arnd@arndb.de; baoyou.xie@linaro.org; xie.baoyou@zte.com.cn;</span>
<span class="quote">&gt; han.fei@zte.com.cn; tang.qiang007@zte.com.cn</span>
<span class="quote">&gt; Subject: [PATCH 2/3] drm/radeon: clean function declarations up</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; We get a few warnings when building kernel with W=1:</span>
<span class="quote">&gt; drivers/gpu/drm/radeon/radeon_device.c:642:6: warning: no previous</span>
<span class="quote">&gt; prototype for &#39;radeon_device_is_virtual&#39; [-Wmissing-prototypes]</span>
<span class="quote">&gt; drivers/gpu/drm/radeon/radeon_kms.c:56:5: warning: no previous</span>
<span class="quote">&gt; prototype for &#39;radeon_driver_unload_kms&#39; [-Wmissing-prototypes]</span>
<span class="quote">&gt; drivers/gpu/drm/radeon/radeon_kms.c:97:5: warning: no previous</span>
<span class="quote">&gt; prototype for &#39;radeon_driver_load_kms&#39; [-Wmissing-prototypes]</span>
<span class="quote">&gt; drivers/gpu/drm/radeon/radeon_kms.c:612:6: warning: no previous</span>
<span class="quote">&gt; prototype for &#39;radeon_driver_lastclose_kms&#39; [-Wmissing-prototypes]</span>
<span class="quote">&gt; ....</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; In fact, these functions are declared in some source files,</span>
<span class="quote">&gt; but should be declared in a header file,</span>
<span class="quote">&gt; thus can be recognized in other file.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; So this patch declares them in drivers/gpu/drm/radeon/radeon.h.</span>

NACK.  This just shoves a ton of unrelated declarations into radeon.h.  I would prefer to refactor these in some sort of more organized way.

Alex
<span class="quote">
&gt; </span>
<span class="quote">&gt; Signed-off-by: Baoyou Xie &lt;baoyou.xie@linaro.org&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/atombios_encoders.c |   4 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/btc_dpm.c           |   4 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/ci_dpm.c            |  10 --</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/cik.c               |  14 --</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/cik_sdma.c          |   2 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/cypress_dpm.c       |   4 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/evergreen.c         |  11 --</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/evergreen_cs.c      |   2 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/evergreen_dma.c     |   2 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/kv_dpm.c            |   5 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/ni.c                |  11 --</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/ni_dma.c            |   2 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/ni_dpm.c            |   3 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/r600.c              |   2 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/r600_dma.c          |   2 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/radeon.h            | 207</span>
<span class="quote">&gt; +++++++++++++++++++++++++++++</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/radeon_acpi.c       |   2 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/radeon_asic.h       |   9 --</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/radeon_atombios.c   |   9 --</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/radeon_audio.c      |  63 ---------</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/radeon_encoders.c   |   8 --</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/radeon_i2c.c        |   4 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/radeon_kms.c        |   6 +-</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/radeon_object.c     |   2 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/rv730_dpm.c         |   3 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/rv740_dpm.c         |   2 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/si.c                |  10 --</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/si_dma.c            |   2 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/si_dpm.c            |   8 --</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/sumo_smc.c          |   2 -</span>
<span class="quote">&gt;  drivers/gpu/drm/radeon/trinity_dpm.c       |   1 -</span>
<span class="quote">&gt;  31 files changed, 210 insertions(+), 206 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/atombios_encoders.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/atombios_encoders.c</span>
<span class="quote">&gt; index fa4f8f0..2bbb916 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/atombios_encoders.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/atombios_encoders.c</span>
<span class="quote">&gt; @@ -291,10 +291,6 @@ static void radeon_atom_backlight_exit(struct</span>
<span class="quote">&gt; radeon_encoder *encoder)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -/* evil but including atombios.h is much worse */</span>
<span class="quote">&gt; -bool radeon_atom_get_tv_timings(struct radeon_device *rdev, int index,</span>
<span class="quote">&gt; -				struct drm_display_mode *mode);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  static bool radeon_atom_mode_fixup(struct drm_encoder *encoder,</span>
<span class="quote">&gt;  				   const struct drm_display_mode *mode,</span>
<span class="quote">&gt;  				   struct drm_display_mode</span>
<span class="quote">&gt; *adjusted_mode)</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/btc_dpm.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/btc_dpm.c</span>
<span class="quote">&gt; index 38e5123..2b08cfd 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/btc_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/btc_dpm.c</span>
<span class="quote">&gt; @@ -47,10 +47,6 @@</span>
<span class="quote">&gt;  #ifndef BTC_MGCG_SEQUENCE</span>
<span class="quote">&gt;  #define BTC_MGCG_SEQUENCE  300</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -struct rv7xx_ps *rv770_get_ps(struct radeon_ps *rps);</span>
<span class="quote">&gt; -struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -struct evergreen_power_info *evergreen_get_pi(struct radeon_device</span>
<span class="quote">&gt; *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  extern int ni_mc_load_microcode(struct radeon_device *rdev);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  //********* BARTS **************//</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/ci_dpm.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/ci_dpm.c</span>
<span class="quote">&gt; index 7ba4508..57ac808 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/ci_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/ci_dpm.c</span>
<span class="quote">&gt; @@ -165,16 +165,6 @@ static const struct ci_pt_config_reg didt_config_ci[] =</span>
<span class="quote">&gt;  extern u8 rv770_get_memory_module_index(struct radeon_device *rdev);</span>
<span class="quote">&gt;  extern int ni_copy_and_switch_arb_sets(struct radeon_device *rdev,</span>
<span class="quote">&gt;  				       u32 arb_freq_src, u32 arb_freq_dest);</span>
<span class="quote">&gt; -extern u8 si_get_ddr3_mclk_frequency_ratio(u32 memory_clock);</span>
<span class="quote">&gt; -extern u8 si_get_mclk_frequency_ratio(u32 memory_clock, bool</span>
<span class="quote">&gt; strobe_mode);</span>
<span class="quote">&gt; -extern void si_trim_voltage_table_to_fit_state_table(struct radeon_device</span>
<span class="quote">&gt; *rdev,</span>
<span class="quote">&gt; -						     u32 max_voltage_steps,</span>
<span class="quote">&gt; -						     struct atom_voltage_table</span>
<span class="quote">&gt; *voltage_table);</span>
<span class="quote">&gt; -extern void cik_enter_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void cik_exit_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern int ci_mc_load_microcode(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void cik_update_cg(struct radeon_device *rdev,</span>
<span class="quote">&gt; -			  u32 block, bool enable);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  static int ci_get_std_voltage_value_sidd(struct radeon_device *rdev,</span>
<span class="quote">&gt;  					 struct atom_voltage_table_entry</span>
<span class="quote">&gt; *voltage_table,</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/cik.c b/drivers/gpu/drm/radeon/cik.c</span>
<span class="quote">&gt; index f6ff41a..7f2daf5 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/cik.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/cik.c</span>
<span class="quote">&gt; @@ -118,21 +118,7 @@ MODULE_FIRMWARE(&quot;radeon/mullins_mec.bin&quot;);</span>
<span class="quote">&gt;  MODULE_FIRMWARE(&quot;radeon/mullins_rlc.bin&quot;);</span>
<span class="quote">&gt;  MODULE_FIRMWARE(&quot;radeon/mullins_sdma.bin&quot;);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -extern int r600_ih_ring_alloc(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void r600_ih_ring_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_mc_stop(struct radeon_device *rdev, struct</span>
<span class="quote">&gt; evergreen_mc_save *save);</span>
<span class="quote">&gt; -extern void evergreen_mc_resume(struct radeon_device *rdev, struct</span>
<span class="quote">&gt; evergreen_mc_save *save);</span>
<span class="quote">&gt; -extern bool evergreen_is_display_hung(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void sumo_rlc_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern int sumo_rlc_init(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void si_vram_gtt_location(struct radeon_device *rdev, struct</span>
<span class="quote">&gt; radeon_mc *mc);</span>
<span class="quote">&gt; -extern void si_rlc_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void si_init_uvd_internal_cg(struct radeon_device *rdev);</span>
<span class="quote">&gt;  static u32 cik_get_cu_active_bitmap(struct radeon_device *rdev, u32 se,</span>
<span class="quote">&gt; u32 sh);</span>
<span class="quote">&gt; -extern int cik_sdma_resume(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void cik_sdma_enable(struct radeon_device *rdev, bool enable);</span>
<span class="quote">&gt; -extern void cik_sdma_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void vce_v2_0_enable_mgcg(struct radeon_device *rdev, bool</span>
<span class="quote">&gt; enable);</span>
<span class="quote">&gt;  static void cik_rlc_stop(struct radeon_device *rdev);</span>
<span class="quote">&gt;  static void cik_pcie_gen3_enable(struct radeon_device *rdev);</span>
<span class="quote">&gt;  static void cik_program_aspm(struct radeon_device *rdev);</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/cik_sdma.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/cik_sdma.c</span>
<span class="quote">&gt; index 9c351dc..5f0862d 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/cik_sdma.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/cik_sdma.c</span>
<span class="quote">&gt; @@ -33,8 +33,6 @@</span>
<span class="quote">&gt;  #define CIK_SDMA_UCODE_SIZE 1050</span>
<span class="quote">&gt;  #define CIK_SDMA_UCODE_VERSION 64</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -u32 cik_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * sDMA - System DMA</span>
<span class="quote">&gt;   * Starting with CIK, the GPU has new asynchronous</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/cypress_dpm.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/cypress_dpm.c</span>
<span class="quote">&gt; index a4edd07..3bdb82e 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/cypress_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/cypress_dpm.c</span>
<span class="quote">&gt; @@ -42,10 +42,6 @@</span>
<span class="quote">&gt;  #define MC_CG_SEQ_YCLK_SUSPEND      0x04</span>
<span class="quote">&gt;  #define MC_CG_SEQ_YCLK_RESUME       0x0a</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -struct rv7xx_ps *rv770_get_ps(struct radeon_ps *rps);</span>
<span class="quote">&gt; -struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -struct evergreen_power_info *evergreen_get_pi(struct radeon_device</span>
<span class="quote">&gt; *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  static void cypress_enable_bif_dynamic_pcie_gen2(struct radeon_device</span>
<span class="quote">&gt; *rdev,</span>
<span class="quote">&gt;  						 bool enable)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/evergreen.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/evergreen.c</span>
<span class="quote">&gt; index 0b6b576..943a696 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/evergreen.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/evergreen.c</span>
<span class="quote">&gt; @@ -205,17 +205,6 @@ static void evergreen_gpu_init(struct radeon_device</span>
<span class="quote">&gt; *rdev);</span>
<span class="quote">&gt;  void evergreen_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt;  void evergreen_pcie_gen2_enable(struct radeon_device *rdev);</span>
<span class="quote">&gt;  void evergreen_program_aspm(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void cayman_cp_int_cntl_setup(struct radeon_device *rdev,</span>
<span class="quote">&gt; -				     int ring, u32 cp_int_cntl);</span>
<span class="quote">&gt; -extern void cayman_vm_decode_fault(struct radeon_device *rdev,</span>
<span class="quote">&gt; -				   u32 status, u32 addr);</span>
<span class="quote">&gt; -void cik_init_cp_pg_table(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -extern u32 si_get_csb_size(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void si_get_csb_buffer(struct radeon_device *rdev, volatile u32</span>
<span class="quote">&gt; *buffer);</span>
<span class="quote">&gt; -extern u32 cik_get_csb_size(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void cik_get_csb_buffer(struct radeon_device *rdev, volatile u32</span>
<span class="quote">&gt; *buffer);</span>
<span class="quote">&gt; -extern void rv770_set_clk_bypass_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  static const u32 evergreen_golden_registers[] =</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/evergreen_cs.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/evergreen_cs.c</span>
<span class="quote">&gt; index f8b0509..cfc4cc9 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/evergreen_cs.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/evergreen_cs.c</span>
<span class="quote">&gt; @@ -37,8 +37,6 @@</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  #define REG_SAFE_BM_SIZE ARRAY_SIZE(evergreen_reg_safe_bm)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -int r600_dma_cs_next_reloc(struct radeon_cs_parser *p,</span>
<span class="quote">&gt; -			   struct radeon_bo_list **cs_reloc);</span>
<span class="quote">&gt;  struct evergreen_cs_track {</span>
<span class="quote">&gt;  	u32			group_size;</span>
<span class="quote">&gt;  	u32			nbanks;</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/evergreen_dma.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/evergreen_dma.c</span>
<span class="quote">&gt; index 96535aa..67f350e 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/evergreen_dma.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/evergreen_dma.c</span>
<span class="quote">&gt; @@ -26,8 +26,6 @@</span>
<span class="quote">&gt;  #include &quot;radeon_asic.h&quot;</span>
<span class="quote">&gt;  #include &quot;evergreend.h&quot;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -u32 evergreen_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  /**</span>
<span class="quote">&gt;   * evergreen_dma_fence_ring_emit - emit a fence on the DMA ring</span>
<span class="quote">&gt;   *</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/kv_dpm.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/kv_dpm.c</span>
<span class="quote">&gt; index a7e9786..dee537c 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/kv_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/kv_dpm.c</span>
<span class="quote">&gt; @@ -58,11 +58,6 @@ static void kv_dpm_powergate_vce(struct</span>
<span class="quote">&gt; radeon_device *rdev, bool gate);</span>
<span class="quote">&gt;  static void kv_dpm_powergate_samu(struct radeon_device *rdev, bool</span>
<span class="quote">&gt; gate);</span>
<span class="quote">&gt;  static void kv_dpm_powergate_acp(struct radeon_device *rdev, bool gate);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -extern void cik_enter_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void cik_exit_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void cik_update_cg(struct radeon_device *rdev,</span>
<span class="quote">&gt; -			  u32 block, bool enable);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  static const struct kv_lcac_config_values sx_local_cac_cfg_kv[] =</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	{  0,       4,        1    },</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/ni.c b/drivers/gpu/drm/radeon/ni.c</span>
<span class="quote">&gt; index 103fc86..1a69aa0 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/ni.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/ni.c</span>
<span class="quote">&gt; @@ -187,20 +187,9 @@ static const u32 tn_rlc_save_restore_register_list[] =</span>
<span class="quote">&gt;  	0x802c,</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -extern bool evergreen_is_display_hung(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_print_gpu_status_regs(struct radeon_device</span>
<span class="quote">&gt; *rdev);</span>
<span class="quote">&gt; -extern void evergreen_mc_stop(struct radeon_device *rdev, struct</span>
<span class="quote">&gt; evergreen_mc_save *save);</span>
<span class="quote">&gt; -extern void evergreen_mc_resume(struct radeon_device *rdev, struct</span>
<span class="quote">&gt; evergreen_mc_save *save);</span>
<span class="quote">&gt;  extern int evergreen_mc_wait_for_idle(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_mc_program(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_irq_suspend(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern int evergreen_mc_init(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_fix_pci_max_read_req_size(struct radeon_device</span>
<span class="quote">&gt; *rdev);</span>
<span class="quote">&gt;  extern void evergreen_pcie_gen2_enable(struct radeon_device *rdev);</span>
<span class="quote">&gt;  extern void evergreen_program_aspm(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void sumo_rlc_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern int sumo_rlc_init(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_gpu_pci_config_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  /* Firmware Names */</span>
<span class="quote">&gt;  MODULE_FIRMWARE(&quot;radeon/BARTS_pfp.bin&quot;);</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/ni_dma.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/ni_dma.c</span>
<span class="quote">&gt; index ce787a9..62165f9d 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/ni_dma.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/ni_dma.c</span>
<span class="quote">&gt; @@ -27,8 +27,6 @@</span>
<span class="quote">&gt;  #include &quot;radeon_trace.h&quot;</span>
<span class="quote">&gt;  #include &quot;nid.h&quot;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -u32 cayman_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * DMA</span>
<span class="quote">&gt;   * Starting with R600, the GPU has an asynchronous</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/ni_dpm.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/ni_dpm.c</span>
<span class="quote">&gt; index 4a601f9..1ad4bf3 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/ni_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/ni_dpm.c</span>
<span class="quote">&gt; @@ -718,9 +718,6 @@ static const u32 cayman_sysls_enable[] =</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt;  #define CAYMAN_SYSLS_ENABLE_LENGTH sizeof(cayman_sysls_enable) / (3</span>
<span class="quote">&gt; * sizeof(u32))</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -struct evergreen_power_info *evergreen_get_pi(struct radeon_device</span>
<span class="quote">&gt; *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  extern int ni_mc_load_microcode(struct radeon_device *rdev);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  struct ni_power_info *ni_get_pi(struct radeon_device *rdev)</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/r600.c b/drivers/gpu/drm/radeon/r600.c</span>
<span class="quote">&gt; index a951881..dceafe5 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/r600.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/r600.c</span>
<span class="quote">&gt; @@ -105,8 +105,6 @@ static void r600_gpu_init(struct radeon_device</span>
<span class="quote">&gt; *rdev);</span>
<span class="quote">&gt;  void r600_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt;  void r600_irq_disable(struct radeon_device *rdev);</span>
<span class="quote">&gt;  static void r600_pcie_gen2_enable(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern int evergreen_rlc_resume(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void rv770_set_clk_bypass_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * Indirect registers accessor</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/r600_dma.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/r600_dma.c</span>
<span class="quote">&gt; index fb65e6f..80c1b7a 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/r600_dma.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/r600_dma.c</span>
<span class="quote">&gt; @@ -26,8 +26,6 @@</span>
<span class="quote">&gt;  #include &quot;radeon_asic.h&quot;</span>
<span class="quote">&gt;  #include &quot;r600d.h&quot;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -u32 r600_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt;   * DMA</span>
<span class="quote">&gt;   * Starting with R600, the GPU has an asynchronous</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon.h</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/radeon.h</span>
<span class="quote">&gt; index 1b0dcad..9c02fbc 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon.h</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon.h</span>
<span class="quote">&gt; @@ -2976,4 +2976,211 @@ int r600_cs_common_vline_parse(struct</span>
<span class="quote">&gt; radeon_cs_parser *p,</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  #include &quot;radeon_object.h&quot;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; +extern bool radeon_device_is_virtual(void);</span>
<span class="quote">&gt; +extern int radeon_driver_unload_kms(struct drm_device *dev);</span>
<span class="quote">&gt; +extern int radeon_driver_load_kms(struct drm_device *dev, unsigned long</span>
<span class="quote">&gt; flags);</span>
<span class="quote">&gt; +extern void radeon_driver_lastclose_kms(struct drm_device *dev);</span>
<span class="quote">&gt; +extern int</span>
<span class="quote">&gt; +radeon_driver_open_kms(struct drm_device *dev, struct drm_file</span>
<span class="quote">&gt; *file_priv);</span>
<span class="quote">&gt; +extern void radeon_driver_postclose_kms(struct drm_device *dev,</span>
<span class="quote">&gt; +		struct drm_file *file_priv);</span>
<span class="quote">&gt; +extern void radeon_driver_preclose_kms(struct drm_device *dev,</span>
<span class="quote">&gt; +		struct drm_file *file_priv);</span>
<span class="quote">&gt; +extern u32</span>
<span class="quote">&gt; +radeon_get_vblank_counter_kms(struct drm_device *dev, unsigned int</span>
<span class="quote">&gt; pipe);</span>
<span class="quote">&gt; +extern int radeon_enable_vblank_kms(struct drm_device *dev, unsigned</span>
<span class="quote">&gt; int pipe);</span>
<span class="quote">&gt; +extern void</span>
<span class="quote">&gt; +radeon_disable_vblank_kms(struct drm_device *dev, unsigned int pipe);</span>
<span class="quote">&gt; +extern int</span>
<span class="quote">&gt; +radeon_get_vblank_timestamp_kms(struct drm_device *dev, unsigned int</span>
<span class="quote">&gt; pipe,</span>
<span class="quote">&gt; +		int *max_error, struct timeval *vblank_time,</span>
<span class="quote">&gt; +		unsigned int flags);</span>
<span class="quote">&gt; +bool radeon_atom_get_tv_timings(struct radeon_device *rdev, int index,</span>
<span class="quote">&gt; +				struct drm_display_mode *mode);</span>
<span class="quote">&gt; +/* from radeon_object.c */</span>
<span class="quote">&gt; +int radeon_ttm_init(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void radeon_ttm_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +extern int radeon_mmap(struct file *filp, struct vm_area_struct *vma);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +void radeon_legacy_backlight_init(struct radeon_encoder</span>
<span class="quote">&gt; *radeon_encoder,</span>
<span class="quote">&gt; +				  struct drm_connector *drm_connector);</span>
<span class="quote">&gt; +void radeon_add_legacy_encoder(struct drm_device *dev,</span>
<span class="quote">&gt; +		uint32_t encoder_enum, uint32_t supported_device);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +extern void radeon_gem_object_free(struct drm_gem_object *obj);</span>
<span class="quote">&gt; +extern int radeon_gem_object_open(struct drm_gem_object *obj,</span>
<span class="quote">&gt; +				  struct drm_file *file_priv);</span>
<span class="quote">&gt; +extern void radeon_gem_object_close(struct drm_gem_object *obj,</span>
<span class="quote">&gt; +				    struct drm_file *file_priv);</span>
<span class="quote">&gt; +extern irqreturn_t radeon_driver_irq_handler_kms(int irq, void *arg);</span>
<span class="quote">&gt; +extern void radeon_driver_irq_preinstall_kms(struct drm_device *dev);</span>
<span class="quote">&gt; +extern int radeon_driver_irq_postinstall_kms(struct drm_device *dev);</span>
<span class="quote">&gt; +extern void radeon_driver_irq_uninstall_kms(struct drm_device *dev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +u32 r600_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; +int r600_ih_ring_alloc(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void r600_ih_ring_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void rv770_set_clk_bypass_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void radeon_pm_acpi_event_handler(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void r600_hdmi_update_acr(struct drm_encoder *encoder, long offset,</span>
<span class="quote">&gt; +			  const struct radeon_hdmi_acr *acr);</span>
<span class="quote">&gt; +void r600_set_avi_packet(struct radeon_device *rdev, u32 offset,</span>
<span class="quote">&gt; +			 unsigned char *buffer, size_t size);</span>
<span class="quote">&gt; +void r600_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; +			     struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; +void r600_set_vbi_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; +void r600_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; +void r600_set_mute(struct drm_encoder *encoder, u32 offset, bool mute);</span>
<span class="quote">&gt; +void r600_hdmi_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="quote">&gt; +void dce3_2_afmt_hdmi_write_speaker_allocation(struct drm_encoder</span>
<span class="quote">&gt; *encoder,</span>
<span class="quote">&gt; +					       u8 *sadb, int sad_count);</span>
<span class="quote">&gt; +void dce3_2_afmt_dp_write_speaker_allocation(struct drm_encoder</span>
<span class="quote">&gt; *encoder,</span>
<span class="quote">&gt; +					     u8 *sadb, int sad_count);</span>
<span class="quote">&gt; +void dce3_2_afmt_write_sad_regs(struct drm_encoder *encoder,</span>
<span class="quote">&gt; +				struct cea_sad *sads, int sad_count);</span>
<span class="quote">&gt; +void dce3_2_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; +			  struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; +void dce3_2_hdmi_update_acr(struct drm_encoder *encoder, long offset,</span>
<span class="quote">&gt; +			    const struct radeon_hdmi_acr *acr);</span>
<span class="quote">&gt; +void dce3_2_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; +void dce3_2_set_mute(struct drm_encoder *encoder, u32 offset, bool</span>
<span class="quote">&gt; mute);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +/*</span>
<span class="quote">&gt; + * evergreen</span>
<span class="quote">&gt; + */</span>
<span class="quote">&gt; +struct evergreen_mc_save {</span>
<span class="quote">&gt; +	u32 vga_render_control;</span>
<span class="quote">&gt; +	u32 vga_hdp_control;</span>
<span class="quote">&gt; +	bool crtc_enabled[RADEON_MAX_CRTCS];</span>
<span class="quote">&gt; +};</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +void evergreen_fix_pci_max_read_req_size(struct radeon_device *rdev);</span>
<span class="quote">&gt; +u32 evergreen_get_number_of_dram_channels(struct radeon_device</span>
<span class="quote">&gt; *rdev);</span>
<span class="quote">&gt; +void</span>
<span class="quote">&gt; +evergreen_mc_stop(struct radeon_device *rdev, struct</span>
<span class="quote">&gt; evergreen_mc_save *save);</span>
<span class="quote">&gt; +void</span>
<span class="quote">&gt; +evergreen_mc_resume(struct radeon_device *rdev, struct</span>
<span class="quote">&gt; evergreen_mc_save *save);</span>
<span class="quote">&gt; +void evergreen_mc_program(struct radeon_device *rdev);</span>
<span class="quote">&gt; +int evergreen_mc_init(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void evergreen_print_gpu_status_regs(struct radeon_device *rdev);</span>
<span class="quote">&gt; +bool evergreen_is_display_hung(struct radeon_device *rdev);</span>
<span class="quote">&gt; +u32 evergreen_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void evergreen_gpu_pci_config_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +void sumo_rlc_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; +int sumo_rlc_init(struct radeon_device *rdev);</span>
<span class="quote">&gt; +int evergreen_rlc_resume(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void evergreen_irq_suspend(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void dce4_audio_enable(struct radeon_device *rdev, struct</span>
<span class="quote">&gt; r600_audio_pin *pin,</span>
<span class="quote">&gt; +		       u8 enable_mask);</span>
<span class="quote">&gt; +void evergreen_hdmi_update_acr(struct drm_encoder *encoder, long</span>
<span class="quote">&gt; offset,</span>
<span class="quote">&gt; +			       const struct radeon_hdmi_acr *acr);</span>
<span class="quote">&gt; +void dce4_afmt_write_latency_fields(struct drm_encoder *encoder,</span>
<span class="quote">&gt; +		struct drm_connector *connector, struct drm_display_mode</span>
<span class="quote">&gt; *mode);</span>
<span class="quote">&gt; +void dce4_afmt_hdmi_write_speaker_allocation(struct drm_encoder</span>
<span class="quote">&gt; *encoder,</span>
<span class="quote">&gt; +				u8 *sadb, int sad_count);</span>
<span class="quote">&gt; +void dce4_afmt_dp_write_speaker_allocation(struct drm_encoder</span>
<span class="quote">&gt; *encoder,</span>
<span class="quote">&gt; +				u8 *sadb, int sad_count);</span>
<span class="quote">&gt; +void evergreen_hdmi_write_sad_regs(struct drm_encoder *encoder,</span>
<span class="quote">&gt; +		struct cea_sad *sads, int sad_count);</span>
<span class="quote">&gt; +void evergreen_set_avi_packet(struct radeon_device *rdev, u32 offset,</span>
<span class="quote">&gt; +		unsigned char *buffer, size_t size);</span>
<span class="quote">&gt; +void dce4_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; +		struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; +void dce4_dp_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; +		struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; +void dce4_set_vbi_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; +void dce4_hdmi_set_color_depth(struct drm_encoder *encoder,</span>
<span class="quote">&gt; +		u32 offset, int bpc);</span>
<span class="quote">&gt; +void dce4_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; +void dce4_set_mute(struct drm_encoder *encoder, u32 offset, bool</span>
<span class="quote">&gt; mute);</span>
<span class="quote">&gt; +void cayman_cp_int_cntl_setup(struct radeon_device *rdev,</span>
<span class="quote">&gt; +		int ring, u32 cp_int_cntl);</span>
<span class="quote">&gt; +u32 cayman_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void cayman_vm_decode_fault(struct radeon_device *rdev,</span>
<span class="quote">&gt; +		u32 status, u32 addr);</span>
<span class="quote">&gt; +void evergreen_hdmi_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="quote">&gt; +void evergreen_dp_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +void radeon_atom_backlight_init(struct radeon_encoder</span>
<span class="quote">&gt; *radeon_encoder,</span>
<span class="quote">&gt; +		struct drm_connector *drm_connector);</span>
<span class="quote">&gt; +void radeon_add_atom_encoder(struct drm_device *dev, uint32_t</span>
<span class="quote">&gt; encoder_enum,</span>
<span class="quote">&gt; +		uint32_t supported_device, u16 caps);</span>
<span class="quote">&gt; +int radeon_atom_hw_i2c_xfer(struct i2c_adapter *i2c_adap,</span>
<span class="quote">&gt; +		struct i2c_msg *msgs, int num);</span>
<span class="quote">&gt; +u32 radeon_atom_hw_i2c_func(struct i2c_adapter *adap);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +int si_mc_load_microcode(struct radeon_device *rdev);</span>
<span class="quote">&gt; +u32 si_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void si_vram_gtt_location(struct radeon_device *rdev, struct radeon_mc</span>
<span class="quote">&gt; *mc);</span>
<span class="quote">&gt; +void si_init_uvd_internal_cg(struct radeon_device *rdev);</span>
<span class="quote">&gt; +u32 si_get_csb_size(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void si_get_csb_buffer(struct radeon_device *rdev, volatile u32 *buffer);</span>
<span class="quote">&gt; +void si_rlc_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +extern struct sg_table *</span>
<span class="quote">&gt; +radeon_gem_prime_get_sg_table(struct drm_gem_object *obj);</span>
<span class="quote">&gt; +extern void *radeon_gem_prime_vmap(struct drm_gem_object *obj);</span>
<span class="quote">&gt; +extern void radeon_gem_prime_vunmap(struct drm_gem_object *obj,</span>
<span class="quote">&gt; void *vaddr);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +extern struct drm_gem_object *</span>
<span class="quote">&gt; +radeon_gem_prime_import_sg_table(struct drm_device *dev,</span>
<span class="quote">&gt; +		struct dma_buf_attachment *attach, struct sg_table *sg);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +extern int radeon_gem_prime_pin(struct drm_gem_object *obj);</span>
<span class="quote">&gt; +extern void radeon_gem_prime_unpin(struct drm_gem_object *obj);</span>
<span class="quote">&gt; +extern struct reservation_object *</span>
<span class="quote">&gt; +radeon_gem_prime_res_obj(struct drm_gem_object *obj);</span>
<span class="quote">&gt; +extern struct dma_buf *radeon_gem_prime_export(struct drm_device</span>
<span class="quote">&gt; *dev,</span>
<span class="quote">&gt; +		struct drm_gem_object *gobj, int flags);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +int ci_mc_load_microcode(struct radeon_device *rdev);</span>
<span class="quote">&gt; +u32 cik_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void cik_enter_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void cik_exit_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void cik_update_cg(struct radeon_device *rdev, u32 block, bool enable);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +void cik_init_cp_pg_table(struct radeon_device *rdev);</span>
<span class="quote">&gt; +u32 cik_get_csb_size(struct radeon_device *rdev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +void cik_get_csb_buffer(struct radeon_device *rdev, volatile u32 *buffer);</span>
<span class="quote">&gt; +struct rv7xx_ps *rv770_get_ps(struct radeon_ps *rps);</span>
<span class="quote">&gt; +struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; +struct evergreen_power_info *evergreen_get_pi(struct radeon_device</span>
<span class="quote">&gt; *rdev);</span>
<span class="quote">&gt; +struct sumo_power_info *sumo_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; +struct ni_power_info *ni_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; +struct ni_ps *ni_get_ps(struct radeon_ps *rps);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +u8 si_get_ddr3_mclk_frequency_ratio(u32 memory_clock);</span>
<span class="quote">&gt; +u8 si_get_mclk_frequency_ratio(u32 memory_clock, bool strobe_mode);</span>
<span class="quote">&gt; +void si_trim_voltage_table_to_fit_state_table(struct radeon_device *rdev,</span>
<span class="quote">&gt; +		u32 max_voltage_steps,</span>
<span class="quote">&gt; +		struct atom_voltage_table *voltage_table);</span>
<span class="quote">&gt; +u32 dce6_endpoint_rreg(struct radeon_device *rdev, u32 offset, u32 reg);</span>
<span class="quote">&gt; +void dce6_endpoint_wreg(struct radeon_device *rdev, u32 offset, u32 reg,</span>
<span class="quote">&gt; u32 v);</span>
<span class="quote">&gt; +void dce6_afmt_select_pin(struct drm_encoder *encoder);</span>
<span class="quote">&gt; +void dce6_afmt_write_latency_fields(struct drm_encoder *encoder,</span>
<span class="quote">&gt; +		struct drm_connector *connector, struct drm_display_mode</span>
<span class="quote">&gt; *mode);</span>
<span class="quote">&gt; +void dce6_afmt_hdmi_write_speaker_allocation(struct drm_encoder</span>
<span class="quote">&gt; *encoder,</span>
<span class="quote">&gt; +		u8 *sadb, int sad_count);</span>
<span class="quote">&gt; +void dce6_afmt_dp_write_speaker_allocation(struct drm_encoder</span>
<span class="quote">&gt; *encoder,</span>
<span class="quote">&gt; +		u8 *sadb, int sad_count);</span>
<span class="quote">&gt; +void dce6_afmt_write_sad_regs(struct drm_encoder *encoder, struct</span>
<span class="quote">&gt; cea_sad *sads,</span>
<span class="quote">&gt; +		int sad_count);</span>
<span class="quote">&gt; +void dce6_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; +		struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; +void dce6_dp_audio_set_dto(struct radeon_device *rdev, struct</span>
<span class="quote">&gt; radeon_crtc *crtc,</span>
<span class="quote">&gt; +		unsigned int clock);</span>
<span class="quote">&gt; +void cik_sdma_enable(struct radeon_device *rdev, bool enable);</span>
<span class="quote">&gt; +int cik_sdma_resume(struct radeon_device *rdev);</span>
<span class="quote">&gt; +void cik_sdma_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +void vce_v1_0_enable_mgcg(struct radeon_device *rdev, bool enable);</span>
<span class="quote">&gt; +void vce_v2_0_enable_mgcg(struct radeon_device *rdev, bool enable);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +int r600_dma_cs_next_reloc(struct radeon_cs_parser *p,</span>
<span class="quote">&gt; +		struct radeon_bo_list **cs_reloc);</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  #endif</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon_acpi.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/radeon_acpi.c</span>
<span class="quote">&gt; index 6efbd65..231d01d 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon_acpi.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon_acpi.c</span>
<span class="quote">&gt; @@ -41,8 +41,6 @@ static inline bool</span>
<span class="quote">&gt; radeon_atpx_dgpu_req_power_for_displays(void) { return false;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  #define ACPI_AC_CLASS           &quot;ac_adapter&quot;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -extern void radeon_pm_acpi_event_handler(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  struct atif_verify_interface {</span>
<span class="quote">&gt;  	u16 size;		/* structure size in bytes (includes size field)</span>
<span class="quote">&gt; */</span>
<span class="quote">&gt;  	u16 version;		/* version */</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon_asic.h</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/radeon_asic.h</span>
<span class="quote">&gt; index e3f036c..48b46fb 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon_asic.h</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon_asic.h</span>
<span class="quote">&gt; @@ -498,15 +498,6 @@ bool rv770_dpm_vblank_too_short(struct</span>
<span class="quote">&gt; radeon_device *rdev);</span>
<span class="quote">&gt;  u32 rv770_dpm_get_current_sclk(struct radeon_device *rdev);</span>
<span class="quote">&gt;  u32 rv770_dpm_get_current_mclk(struct radeon_device *rdev);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -/*</span>
<span class="quote">&gt; - * evergreen</span>
<span class="quote">&gt; - */</span>
<span class="quote">&gt; -struct evergreen_mc_save {</span>
<span class="quote">&gt; -	u32 vga_render_control;</span>
<span class="quote">&gt; -	u32 vga_hdp_control;</span>
<span class="quote">&gt; -	bool crtc_enabled[RADEON_MAX_CRTCS];</span>
<span class="quote">&gt; -};</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  void evergreen_pcie_gart_tlb_flush(struct radeon_device *rdev);</span>
<span class="quote">&gt;  int evergreen_init(struct radeon_device *rdev);</span>
<span class="quote">&gt;  void evergreen_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon_atombios.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/radeon_atombios.c</span>
<span class="quote">&gt; index 4134759..4d640de 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon_atombios.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon_atombios.c</span>
<span class="quote">&gt; @@ -31,15 +31,6 @@</span>
<span class="quote">&gt;  #include &quot;atom-bits.h&quot;</span>
<span class="quote">&gt;  #include &quot;radeon_asic.h&quot;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -extern void</span>
<span class="quote">&gt; -radeon_add_atom_encoder(struct drm_device *dev, uint32_t</span>
<span class="quote">&gt; encoder_enum,</span>
<span class="quote">&gt; -			uint32_t supported_device, u16 caps);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -/* from radeon_legacy_encoder.c */</span>
<span class="quote">&gt; -extern void</span>
<span class="quote">&gt; -radeon_add_legacy_encoder(struct drm_device *dev, uint32_t</span>
<span class="quote">&gt; encoder_enum,</span>
<span class="quote">&gt; -			  uint32_t supported_device);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  union atom_supported_devices {</span>
<span class="quote">&gt;  	struct _ATOM_SUPPORTED_DEVICES_INFO info;</span>
<span class="quote">&gt;  	struct _ATOM_SUPPORTED_DEVICES_INFO_2 info_2;</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon_audio.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/radeon_audio.c</span>
<span class="quote">&gt; index b214663..0303f07 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon_audio.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon_audio.c</span>
<span class="quote">&gt; @@ -31,77 +31,14 @@</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  void r600_audio_enable(struct radeon_device *rdev, struct r600_audio_pin</span>
<span class="quote">&gt; *pin,</span>
<span class="quote">&gt;  		u8 enable_mask);</span>
<span class="quote">&gt; -void dce4_audio_enable(struct radeon_device *rdev, struct r600_audio_pin</span>
<span class="quote">&gt; *pin,</span>
<span class="quote">&gt; -		u8 enable_mask);</span>
<span class="quote">&gt;  void dce6_audio_enable(struct radeon_device *rdev, struct r600_audio_pin</span>
<span class="quote">&gt; *pin,</span>
<span class="quote">&gt;  		u8 enable_mask);</span>
<span class="quote">&gt; -u32 dce6_endpoint_rreg(struct radeon_device *rdev, u32 offset, u32 reg);</span>
<span class="quote">&gt; -void dce6_endpoint_wreg(struct radeon_device *rdev,</span>
<span class="quote">&gt; -		u32 offset, u32 reg, u32 v);</span>
<span class="quote">&gt; -void dce3_2_afmt_write_sad_regs(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -		struct cea_sad *sads, int sad_count);</span>
<span class="quote">&gt; -void evergreen_hdmi_write_sad_regs(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -		struct cea_sad *sads, int sad_count);</span>
<span class="quote">&gt; -void dce6_afmt_write_sad_regs(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -		struct cea_sad *sads, int sad_count);</span>
<span class="quote">&gt; -void dce3_2_afmt_hdmi_write_speaker_allocation(struct drm_encoder</span>
<span class="quote">&gt; *encoder,</span>
<span class="quote">&gt; -		u8 *sadb, int sad_count);</span>
<span class="quote">&gt; -void dce3_2_afmt_dp_write_speaker_allocation(struct drm_encoder</span>
<span class="quote">&gt; *encoder,</span>
<span class="quote">&gt; -		u8 *sadb, int sad_count);</span>
<span class="quote">&gt; -void dce4_afmt_hdmi_write_speaker_allocation(struct drm_encoder</span>
<span class="quote">&gt; *encoder,</span>
<span class="quote">&gt; -		u8 *sadb, int sad_count);</span>
<span class="quote">&gt; -void dce4_afmt_dp_write_speaker_allocation(struct drm_encoder</span>
<span class="quote">&gt; *encoder,</span>
<span class="quote">&gt; -		u8 *sadb, int sad_count);</span>
<span class="quote">&gt; -void dce6_afmt_hdmi_write_speaker_allocation(struct drm_encoder</span>
<span class="quote">&gt; *encoder,</span>
<span class="quote">&gt; -		u8 *sadb, int sad_count);</span>
<span class="quote">&gt; -void dce6_afmt_dp_write_speaker_allocation(struct drm_encoder</span>
<span class="quote">&gt; *encoder,</span>
<span class="quote">&gt; -		u8 *sadb, int sad_count);</span>
<span class="quote">&gt; -void dce4_afmt_write_latency_fields(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -		struct drm_connector *connector, struct drm_display_mode</span>
<span class="quote">&gt; *mode);</span>
<span class="quote">&gt; -void dce6_afmt_write_latency_fields(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -		struct drm_connector *connector, struct drm_display_mode</span>
<span class="quote">&gt; *mode);</span>
<span class="quote">&gt;  struct r600_audio_pin* r600_audio_get_pin(struct radeon_device *rdev);</span>
<span class="quote">&gt;  struct r600_audio_pin* dce6_audio_get_pin(struct radeon_device *rdev);</span>
<span class="quote">&gt; -void dce6_afmt_select_pin(struct drm_encoder *encoder);</span>
<span class="quote">&gt; -void r600_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; -	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; -void dce3_2_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; -	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; -void dce4_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; -	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; -void dce4_dp_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; -	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; -void dce6_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; -	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; -void dce6_dp_audio_set_dto(struct radeon_device *rdev,</span>
<span class="quote">&gt; -	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="quote">&gt; -void r600_set_avi_packet(struct radeon_device *rdev, u32 offset,</span>
<span class="quote">&gt; -	unsigned char *buffer, size_t size);</span>
<span class="quote">&gt; -void evergreen_set_avi_packet(struct radeon_device *rdev, u32 offset,</span>
<span class="quote">&gt; -	unsigned char *buffer, size_t size);</span>
<span class="quote">&gt; -void r600_hdmi_update_acr(struct drm_encoder *encoder, long offset,</span>
<span class="quote">&gt; -	const struct radeon_hdmi_acr *acr);</span>
<span class="quote">&gt; -void dce3_2_hdmi_update_acr(struct drm_encoder *encoder, long offset,</span>
<span class="quote">&gt; -	const struct radeon_hdmi_acr *acr);</span>
<span class="quote">&gt; -void evergreen_hdmi_update_acr(struct drm_encoder *encoder, long</span>
<span class="quote">&gt; offset,</span>
<span class="quote">&gt; -	const struct radeon_hdmi_acr *acr);</span>
<span class="quote">&gt; -void r600_set_vbi_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; -void dce4_set_vbi_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; -void dce4_hdmi_set_color_depth(struct drm_encoder *encoder,</span>
<span class="quote">&gt; -	u32 offset, int bpc);</span>
<span class="quote">&gt; -void r600_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; -void dce3_2_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; -void dce4_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="quote">&gt; -void r600_set_mute(struct drm_encoder *encoder, u32 offset, bool mute);</span>
<span class="quote">&gt; -void dce3_2_set_mute(struct drm_encoder *encoder, u32 offset, bool</span>
<span class="quote">&gt; mute);</span>
<span class="quote">&gt; -void dce4_set_mute(struct drm_encoder *encoder, u32 offset, bool mute);</span>
<span class="quote">&gt;  static void radeon_audio_hdmi_mode_set(struct drm_encoder *encoder,</span>
<span class="quote">&gt;  	struct drm_display_mode *mode);</span>
<span class="quote">&gt;  static void radeon_audio_dp_mode_set(struct drm_encoder *encoder,</span>
<span class="quote">&gt;  	struct drm_display_mode *mode);</span>
<span class="quote">&gt; -void r600_hdmi_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="quote">&gt; -void evergreen_hdmi_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="quote">&gt; -void evergreen_dp_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  static const u32 pin_offsets[7] =</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon_encoders.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/radeon_encoders.c</span>
<span class="quote">&gt; index c6ee802..675153e 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon_encoders.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon_encoders.c</span>
<span class="quote">&gt; @@ -29,14 +29,6 @@</span>
<span class="quote">&gt;  #include &quot;radeon.h&quot;</span>
<span class="quote">&gt;  #include &quot;atom.h&quot;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -extern void</span>
<span class="quote">&gt; -radeon_legacy_backlight_init(struct radeon_encoder *radeon_encoder,</span>
<span class="quote">&gt; -			     struct drm_connector *drm_connector);</span>
<span class="quote">&gt; -extern void</span>
<span class="quote">&gt; -radeon_atom_backlight_init(struct radeon_encoder *radeon_encoder,</span>
<span class="quote">&gt; -			   struct drm_connector *drm_connector);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  static uint32_t radeon_encoder_clones(struct drm_encoder *encoder)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	struct drm_device *dev = encoder-&gt;dev;</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon_i2c.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/radeon_i2c.c</span>
<span class="quote">&gt; index 021aa00..3941588 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon_i2c.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon_i2c.c</span>
<span class="quote">&gt; @@ -31,10 +31,6 @@</span>
<span class="quote">&gt;  #include &quot;radeon.h&quot;</span>
<span class="quote">&gt;  #include &quot;atom.h&quot;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -extern int radeon_atom_hw_i2c_xfer(struct i2c_adapter *i2c_adap,</span>
<span class="quote">&gt; -				   struct i2c_msg *msgs, int num);</span>
<span class="quote">&gt; -extern u32 radeon_atom_hw_i2c_func(struct i2c_adapter *adap);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  /**</span>
<span class="quote">&gt;   * radeon_ddc_probe</span>
<span class="quote">&gt;   *</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon_kms.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/radeon_kms.c</span>
<span class="quote">&gt; index 4388dde..f089485 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon_kms.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon_kms.c</span>
<span class="quote">&gt; @@ -830,7 +830,7 @@ u32 radeon_get_vblank_counter_kms(struct</span>
<span class="quote">&gt; drm_device *dev, unsigned int pipe)</span>
<span class="quote">&gt;   * Enable the interrupt on the requested crtc (all asics).</span>
<span class="quote">&gt;   * Returns 0 on success, -EINVAL on failure.</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; -int radeon_enable_vblank_kms(struct drm_device *dev, int crtc)</span>
<span class="quote">&gt; +int radeon_enable_vblank_kms(struct drm_device *dev, unsigned int crtc)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	struct radeon_device *rdev = dev-&gt;dev_private;</span>
<span class="quote">&gt;  	unsigned long irqflags;</span>
<span class="quote">&gt; @@ -856,7 +856,7 @@ int radeon_enable_vblank_kms(struct drm_device</span>
<span class="quote">&gt; *dev, int crtc)</span>
<span class="quote">&gt;   *</span>
<span class="quote">&gt;   * Disable the interrupt on the requested crtc (all asics).</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; -void radeon_disable_vblank_kms(struct drm_device *dev, int crtc)</span>
<span class="quote">&gt; +void radeon_disable_vblank_kms(struct drm_device *dev, unsigned int</span>
<span class="quote">&gt; crtc)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	struct radeon_device *rdev = dev-&gt;dev_private;</span>
<span class="quote">&gt;  	unsigned long irqflags;</span>
<span class="quote">&gt; @@ -885,7 +885,7 @@ void radeon_disable_vblank_kms(struct drm_device</span>
<span class="quote">&gt; *dev, int crtc)</span>
<span class="quote">&gt;   * scanout position.  (all asics).</span>
<span class="quote">&gt;   * Returns postive status flags on success, negative error on failure.</span>
<span class="quote">&gt;   */</span>
<span class="quote">&gt; -int radeon_get_vblank_timestamp_kms(struct drm_device *dev, int crtc,</span>
<span class="quote">&gt; +int radeon_get_vblank_timestamp_kms(struct drm_device *dev, unsigned</span>
<span class="quote">&gt; int crtc,</span>
<span class="quote">&gt;  				    int *max_error,</span>
<span class="quote">&gt;  				    struct timeval *vblank_time,</span>
<span class="quote">&gt;  				    unsigned flags)</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/radeon_object.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/radeon_object.c</span>
<span class="quote">&gt; index be30861..841aa89 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/radeon_object.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/radeon_object.c</span>
<span class="quote">&gt; @@ -38,8 +38,6 @@</span>
<span class="quote">&gt;  #include &quot;radeon_trace.h&quot;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -int radeon_ttm_init(struct radeon_device *rdev);</span>
<span class="quote">&gt; -void radeon_ttm_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt;  static void radeon_bo_clear_surface_reg(struct radeon_bo *bo);</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;  /*</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/rv730_dpm.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/rv730_dpm.c</span>
<span class="quote">&gt; index d37ba2c..ff203ed 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/rv730_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/rv730_dpm.c</span>
<span class="quote">&gt; @@ -34,9 +34,6 @@</span>
<span class="quote">&gt;  #define MC_CG_ARB_FREQ_F2           0x0c</span>
<span class="quote">&gt;  #define MC_CG_ARB_FREQ_F3           0x0d</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -struct rv7xx_ps *rv770_get_ps(struct radeon_ps *rps);</span>
<span class="quote">&gt; -struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  int rv730_populate_sclk_value(struct radeon_device *rdev,</span>
<span class="quote">&gt;  			      u32 engine_clock,</span>
<span class="quote">&gt;  			      RV770_SMC_SCLK_VALUE *sclk)</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/rv740_dpm.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/rv740_dpm.c</span>
<span class="quote">&gt; index 4b85082..2b390e1 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/rv740_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/rv740_dpm.c</span>
<span class="quote">&gt; @@ -29,8 +29,6 @@</span>
<span class="quote">&gt;  #include &quot;rv770_dpm.h&quot;</span>
<span class="quote">&gt;  #include &quot;atom.h&quot;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  u32 rv740_get_decoded_reference_divider(u32 encoded_ref)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	u32 ref = 0;</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/si.c b/drivers/gpu/drm/radeon/si.c</span>
<span class="quote">&gt; index 7ee9aaf..e5ceeb4 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/si.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/si.c</span>
<span class="quote">&gt; @@ -119,16 +119,6 @@ MODULE_FIRMWARE(&quot;radeon/hainan_k_smc.bin&quot;);</span>
<span class="quote">&gt;  static u32 si_get_cu_active_bitmap(struct radeon_device *rdev, u32 se, u32</span>
<span class="quote">&gt; sh);</span>
<span class="quote">&gt;  static void si_pcie_gen3_enable(struct radeon_device *rdev);</span>
<span class="quote">&gt;  static void si_program_aspm(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void sumo_rlc_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern int sumo_rlc_init(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern int r600_ih_ring_alloc(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void r600_ih_ring_fini(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_fix_pci_max_read_req_size(struct radeon_device</span>
<span class="quote">&gt; *rdev);</span>
<span class="quote">&gt; -extern void evergreen_mc_stop(struct radeon_device *rdev, struct</span>
<span class="quote">&gt; evergreen_mc_save *save);</span>
<span class="quote">&gt; -extern void evergreen_mc_resume(struct radeon_device *rdev, struct</span>
<span class="quote">&gt; evergreen_mc_save *save);</span>
<span class="quote">&gt; -extern u32 evergreen_get_number_of_dram_channels(struct</span>
<span class="quote">&gt; radeon_device *rdev);</span>
<span class="quote">&gt; -extern void evergreen_print_gpu_status_regs(struct radeon_device</span>
<span class="quote">&gt; *rdev);</span>
<span class="quote">&gt; -extern bool evergreen_is_display_hung(struct radeon_device *rdev);</span>
<span class="quote">&gt;  static void si_enable_gui_idle_interrupt(struct radeon_device *rdev,</span>
<span class="quote">&gt;  					 bool enable);</span>
<span class="quote">&gt;  static void si_init_pg(struct radeon_device *rdev);</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/si_dma.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/si_dma.c</span>
<span class="quote">&gt; index 8320792..afe19f8d 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/si_dma.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/si_dma.c</span>
<span class="quote">&gt; @@ -27,8 +27,6 @@</span>
<span class="quote">&gt;  #include &quot;radeon_trace.h&quot;</span>
<span class="quote">&gt;  #include &quot;sid.h&quot;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -u32 si_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  /**</span>
<span class="quote">&gt;   * si_dma_is_lockup - Check if the DMA engine is locked up</span>
<span class="quote">&gt;   *</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/si_dpm.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/si_dpm.c</span>
<span class="quote">&gt; index e6abc09..0a5aff5 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/si_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/si_dpm.c</span>
<span class="quote">&gt; @@ -1734,14 +1734,6 @@ static const struct si_powertune_data</span>
<span class="quote">&gt; powertune_data_hainan =</span>
<span class="quote">&gt;  	true</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -struct evergreen_power_info *evergreen_get_pi(struct radeon_device</span>
<span class="quote">&gt; *rdev);</span>
<span class="quote">&gt; -struct ni_power_info *ni_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -struct ni_ps *ni_get_ps(struct radeon_ps *rps);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -extern int si_mc_load_microcode(struct radeon_device *rdev);</span>
<span class="quote">&gt; -extern void vce_v1_0_enable_mgcg(struct radeon_device *rdev, bool</span>
<span class="quote">&gt; enable);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  static int si_populate_voltage_value(struct radeon_device *rdev,</span>
<span class="quote">&gt;  				     const struct atom_voltage_table *table,</span>
<span class="quote">&gt;  				     u16 value,</span>
<span class="quote">&gt; SISLANDS_SMC_VOLTAGE_VALUE *voltage);</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/sumo_smc.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/sumo_smc.c</span>
<span class="quote">&gt; index fb081d2..05ed103 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/sumo_smc.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/sumo_smc.c</span>
<span class="quote">&gt; @@ -31,8 +31,6 @@</span>
<span class="quote">&gt;  #define SUMO_SMU_SERVICE_ROUTINE_ALTVDDNB_NOTIFY  27</span>
<span class="quote">&gt;  #define SUMO_SMU_SERVICE_ROUTINE_GFX_SRV_ID_20  20</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -struct sumo_power_info *sumo_get_pi(struct radeon_device *rdev);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  static void sumo_send_msg_to_smu(struct radeon_device *rdev, u32 id)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	u32 gfx_int_req;</span>
<span class="quote">&gt; diff --git a/drivers/gpu/drm/radeon/trinity_dpm.c</span>
<span class="quote">&gt; b/drivers/gpu/drm/radeon/trinity_dpm.c</span>
<span class="quote">&gt; index 6730367..2d423b5 100644</span>
<span class="quote">&gt; --- a/drivers/gpu/drm/radeon/trinity_dpm.c</span>
<span class="quote">&gt; +++ b/drivers/gpu/drm/radeon/trinity_dpm.c</span>
<span class="quote">&gt; @@ -336,7 +336,6 @@ static const u32 trinity_override_mgpg_sequences[] =</span>
<span class="quote">&gt;  	0x00000204, 0x00000000,</span>
<span class="quote">&gt;  };</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; -extern void vce_v1_0_enable_mgcg(struct radeon_device *rdev, bool</span>
<span class="quote">&gt; enable);</span>
<span class="quote">&gt;  static void trinity_program_clk_gating_hw_sequence(struct radeon_device</span>
<span class="quote">&gt; *rdev,</span>
<span class="quote">&gt;  						   const u32 *seq, u32 count);</span>
<span class="quote">&gt;  static void trinity_override_dynamic_mg_powergating(struct radeon_device</span>
<span class="quote">&gt; *rdev);</span>
<span class="quote">&gt; --</span>
<span class="quote">&gt; 2.7.4</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/atombios_encoders.c b/drivers/gpu/drm/radeon/atombios_encoders.c</span>
<span class="p_header">index fa4f8f0..2bbb916 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/atombios_encoders.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/atombios_encoders.c</span>
<span class="p_chunk">@@ -291,10 +291,6 @@</span> <span class="p_context"> static void radeon_atom_backlight_exit(struct radeon_encoder *encoder)</span>
 
 #endif
 
<span class="p_del">-/* evil but including atombios.h is much worse */</span>
<span class="p_del">-bool radeon_atom_get_tv_timings(struct radeon_device *rdev, int index,</span>
<span class="p_del">-				struct drm_display_mode *mode);</span>
<span class="p_del">-</span>
 static bool radeon_atom_mode_fixup(struct drm_encoder *encoder,
 				   const struct drm_display_mode *mode,
 				   struct drm_display_mode *adjusted_mode)
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/btc_dpm.c b/drivers/gpu/drm/radeon/btc_dpm.c</span>
<span class="p_header">index 38e5123..2b08cfd 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/btc_dpm.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/btc_dpm.c</span>
<span class="p_chunk">@@ -47,10 +47,6 @@</span> <span class="p_context"></span>
 #ifndef BTC_MGCG_SEQUENCE
 #define BTC_MGCG_SEQUENCE  300
 
<span class="p_del">-struct rv7xx_ps *rv770_get_ps(struct radeon_ps *rps);</span>
<span class="p_del">-struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="p_del">-struct evergreen_power_info *evergreen_get_pi(struct radeon_device *rdev);</span>
<span class="p_del">-</span>
 extern int ni_mc_load_microcode(struct radeon_device *rdev);
 
 //********* BARTS **************//
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/ci_dpm.c b/drivers/gpu/drm/radeon/ci_dpm.c</span>
<span class="p_header">index 7ba4508..57ac808 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/ci_dpm.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/ci_dpm.c</span>
<span class="p_chunk">@@ -165,16 +165,6 @@</span> <span class="p_context"> static const struct ci_pt_config_reg didt_config_ci[] =</span>
 extern u8 rv770_get_memory_module_index(struct radeon_device *rdev);
 extern int ni_copy_and_switch_arb_sets(struct radeon_device *rdev,
 				       u32 arb_freq_src, u32 arb_freq_dest);
<span class="p_del">-extern u8 si_get_ddr3_mclk_frequency_ratio(u32 memory_clock);</span>
<span class="p_del">-extern u8 si_get_mclk_frequency_ratio(u32 memory_clock, bool strobe_mode);</span>
<span class="p_del">-extern void si_trim_voltage_table_to_fit_state_table(struct radeon_device *rdev,</span>
<span class="p_del">-						     u32 max_voltage_steps,</span>
<span class="p_del">-						     struct atom_voltage_table *voltage_table);</span>
<span class="p_del">-extern void cik_enter_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="p_del">-extern void cik_exit_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="p_del">-extern int ci_mc_load_microcode(struct radeon_device *rdev);</span>
<span class="p_del">-extern void cik_update_cg(struct radeon_device *rdev,</span>
<span class="p_del">-			  u32 block, bool enable);</span>
 
 static int ci_get_std_voltage_value_sidd(struct radeon_device *rdev,
 					 struct atom_voltage_table_entry *voltage_table,
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/cik.c b/drivers/gpu/drm/radeon/cik.c</span>
<span class="p_header">index f6ff41a..7f2daf5 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/cik.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/cik.c</span>
<span class="p_chunk">@@ -118,21 +118,7 @@</span> <span class="p_context"> MODULE_FIRMWARE(&quot;radeon/mullins_mec.bin&quot;);</span>
 MODULE_FIRMWARE(&quot;radeon/mullins_rlc.bin&quot;);
 MODULE_FIRMWARE(&quot;radeon/mullins_sdma.bin&quot;);
 
<span class="p_del">-extern int r600_ih_ring_alloc(struct radeon_device *rdev);</span>
<span class="p_del">-extern void r600_ih_ring_fini(struct radeon_device *rdev);</span>
<span class="p_del">-extern void evergreen_mc_stop(struct radeon_device *rdev, struct evergreen_mc_save *save);</span>
<span class="p_del">-extern void evergreen_mc_resume(struct radeon_device *rdev, struct evergreen_mc_save *save);</span>
<span class="p_del">-extern bool evergreen_is_display_hung(struct radeon_device *rdev);</span>
<span class="p_del">-extern void sumo_rlc_fini(struct radeon_device *rdev);</span>
<span class="p_del">-extern int sumo_rlc_init(struct radeon_device *rdev);</span>
<span class="p_del">-extern void si_vram_gtt_location(struct radeon_device *rdev, struct radeon_mc *mc);</span>
<span class="p_del">-extern void si_rlc_reset(struct radeon_device *rdev);</span>
<span class="p_del">-extern void si_init_uvd_internal_cg(struct radeon_device *rdev);</span>
 static u32 cik_get_cu_active_bitmap(struct radeon_device *rdev, u32 se, u32 sh);
<span class="p_del">-extern int cik_sdma_resume(struct radeon_device *rdev);</span>
<span class="p_del">-extern void cik_sdma_enable(struct radeon_device *rdev, bool enable);</span>
<span class="p_del">-extern void cik_sdma_fini(struct radeon_device *rdev);</span>
<span class="p_del">-extern void vce_v2_0_enable_mgcg(struct radeon_device *rdev, bool enable);</span>
 static void cik_rlc_stop(struct radeon_device *rdev);
 static void cik_pcie_gen3_enable(struct radeon_device *rdev);
 static void cik_program_aspm(struct radeon_device *rdev);
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/cik_sdma.c b/drivers/gpu/drm/radeon/cik_sdma.c</span>
<span class="p_header">index 9c351dc..5f0862d 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/cik_sdma.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/cik_sdma.c</span>
<span class="p_chunk">@@ -33,8 +33,6 @@</span> <span class="p_context"></span>
 #define CIK_SDMA_UCODE_SIZE 1050
 #define CIK_SDMA_UCODE_VERSION 64
 
<span class="p_del">-u32 cik_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="p_del">-</span>
 /*
  * sDMA - System DMA
  * Starting with CIK, the GPU has new asynchronous
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/cypress_dpm.c b/drivers/gpu/drm/radeon/cypress_dpm.c</span>
<span class="p_header">index a4edd07..3bdb82e 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/cypress_dpm.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/cypress_dpm.c</span>
<span class="p_chunk">@@ -42,10 +42,6 @@</span> <span class="p_context"></span>
 #define MC_CG_SEQ_YCLK_SUSPEND      0x04
 #define MC_CG_SEQ_YCLK_RESUME       0x0a
 
<span class="p_del">-struct rv7xx_ps *rv770_get_ps(struct radeon_ps *rps);</span>
<span class="p_del">-struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="p_del">-struct evergreen_power_info *evergreen_get_pi(struct radeon_device *rdev);</span>
<span class="p_del">-</span>
 static void cypress_enable_bif_dynamic_pcie_gen2(struct radeon_device *rdev,
 						 bool enable)
 {
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/evergreen.c b/drivers/gpu/drm/radeon/evergreen.c</span>
<span class="p_header">index 0b6b576..943a696 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/evergreen.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/evergreen.c</span>
<span class="p_chunk">@@ -205,17 +205,6 @@</span> <span class="p_context"> static void evergreen_gpu_init(struct radeon_device *rdev);</span>
 void evergreen_fini(struct radeon_device *rdev);
 void evergreen_pcie_gen2_enable(struct radeon_device *rdev);
 void evergreen_program_aspm(struct radeon_device *rdev);
<span class="p_del">-extern void cayman_cp_int_cntl_setup(struct radeon_device *rdev,</span>
<span class="p_del">-				     int ring, u32 cp_int_cntl);</span>
<span class="p_del">-extern void cayman_vm_decode_fault(struct radeon_device *rdev,</span>
<span class="p_del">-				   u32 status, u32 addr);</span>
<span class="p_del">-void cik_init_cp_pg_table(struct radeon_device *rdev);</span>
<span class="p_del">-</span>
<span class="p_del">-extern u32 si_get_csb_size(struct radeon_device *rdev);</span>
<span class="p_del">-extern void si_get_csb_buffer(struct radeon_device *rdev, volatile u32 *buffer);</span>
<span class="p_del">-extern u32 cik_get_csb_size(struct radeon_device *rdev);</span>
<span class="p_del">-extern void cik_get_csb_buffer(struct radeon_device *rdev, volatile u32 *buffer);</span>
<span class="p_del">-extern void rv770_set_clk_bypass_mode(struct radeon_device *rdev);</span>
 
 static const u32 evergreen_golden_registers[] =
 {
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/evergreen_cs.c b/drivers/gpu/drm/radeon/evergreen_cs.c</span>
<span class="p_header">index f8b0509..cfc4cc9 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/evergreen_cs.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/evergreen_cs.c</span>
<span class="p_chunk">@@ -37,8 +37,6 @@</span> <span class="p_context"></span>
 
 #define REG_SAFE_BM_SIZE ARRAY_SIZE(evergreen_reg_safe_bm)
 
<span class="p_del">-int r600_dma_cs_next_reloc(struct radeon_cs_parser *p,</span>
<span class="p_del">-			   struct radeon_bo_list **cs_reloc);</span>
 struct evergreen_cs_track {
 	u32			group_size;
 	u32			nbanks;
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/evergreen_dma.c b/drivers/gpu/drm/radeon/evergreen_dma.c</span>
<span class="p_header">index 96535aa..67f350e 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/evergreen_dma.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/evergreen_dma.c</span>
<span class="p_chunk">@@ -26,8 +26,6 @@</span> <span class="p_context"></span>
 #include &quot;radeon_asic.h&quot;
 #include &quot;evergreend.h&quot;
 
<span class="p_del">-u32 evergreen_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="p_del">-</span>
 /**
  * evergreen_dma_fence_ring_emit - emit a fence on the DMA ring
  *
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/kv_dpm.c b/drivers/gpu/drm/radeon/kv_dpm.c</span>
<span class="p_header">index a7e9786..dee537c 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/kv_dpm.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/kv_dpm.c</span>
<span class="p_chunk">@@ -58,11 +58,6 @@</span> <span class="p_context"> static void kv_dpm_powergate_vce(struct radeon_device *rdev, bool gate);</span>
 static void kv_dpm_powergate_samu(struct radeon_device *rdev, bool gate);
 static void kv_dpm_powergate_acp(struct radeon_device *rdev, bool gate);
 
<span class="p_del">-extern void cik_enter_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="p_del">-extern void cik_exit_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="p_del">-extern void cik_update_cg(struct radeon_device *rdev,</span>
<span class="p_del">-			  u32 block, bool enable);</span>
<span class="p_del">-</span>
 static const struct kv_lcac_config_values sx_local_cac_cfg_kv[] =
 {
 	{  0,       4,        1    },
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/ni.c b/drivers/gpu/drm/radeon/ni.c</span>
<span class="p_header">index 103fc86..1a69aa0 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/ni.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/ni.c</span>
<span class="p_chunk">@@ -187,20 +187,9 @@</span> <span class="p_context"> static const u32 tn_rlc_save_restore_register_list[] =</span>
 	0x802c,
 };
 
<span class="p_del">-extern bool evergreen_is_display_hung(struct radeon_device *rdev);</span>
<span class="p_del">-extern void evergreen_print_gpu_status_regs(struct radeon_device *rdev);</span>
<span class="p_del">-extern void evergreen_mc_stop(struct radeon_device *rdev, struct evergreen_mc_save *save);</span>
<span class="p_del">-extern void evergreen_mc_resume(struct radeon_device *rdev, struct evergreen_mc_save *save);</span>
 extern int evergreen_mc_wait_for_idle(struct radeon_device *rdev);
<span class="p_del">-extern void evergreen_mc_program(struct radeon_device *rdev);</span>
<span class="p_del">-extern void evergreen_irq_suspend(struct radeon_device *rdev);</span>
<span class="p_del">-extern int evergreen_mc_init(struct radeon_device *rdev);</span>
<span class="p_del">-extern void evergreen_fix_pci_max_read_req_size(struct radeon_device *rdev);</span>
 extern void evergreen_pcie_gen2_enable(struct radeon_device *rdev);
 extern void evergreen_program_aspm(struct radeon_device *rdev);
<span class="p_del">-extern void sumo_rlc_fini(struct radeon_device *rdev);</span>
<span class="p_del">-extern int sumo_rlc_init(struct radeon_device *rdev);</span>
<span class="p_del">-extern void evergreen_gpu_pci_config_reset(struct radeon_device *rdev);</span>
 
 /* Firmware Names */
 MODULE_FIRMWARE(&quot;radeon/BARTS_pfp.bin&quot;);
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/ni_dma.c b/drivers/gpu/drm/radeon/ni_dma.c</span>
<span class="p_header">index ce787a9..62165f9d 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/ni_dma.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/ni_dma.c</span>
<span class="p_chunk">@@ -27,8 +27,6 @@</span> <span class="p_context"></span>
 #include &quot;radeon_trace.h&quot;
 #include &quot;nid.h&quot;
 
<span class="p_del">-u32 cayman_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="p_del">-</span>
 /*
  * DMA
  * Starting with R600, the GPU has an asynchronous
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/ni_dpm.c b/drivers/gpu/drm/radeon/ni_dpm.c</span>
<span class="p_header">index 4a601f9..1ad4bf3 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/ni_dpm.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/ni_dpm.c</span>
<span class="p_chunk">@@ -718,9 +718,6 @@</span> <span class="p_context"> static const u32 cayman_sysls_enable[] =</span>
 };
 #define CAYMAN_SYSLS_ENABLE_LENGTH sizeof(cayman_sysls_enable) / (3 * sizeof(u32))
 
<span class="p_del">-struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="p_del">-struct evergreen_power_info *evergreen_get_pi(struct radeon_device *rdev);</span>
<span class="p_del">-</span>
 extern int ni_mc_load_microcode(struct radeon_device *rdev);
 
 struct ni_power_info *ni_get_pi(struct radeon_device *rdev)
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/r600.c b/drivers/gpu/drm/radeon/r600.c</span>
<span class="p_header">index a951881..dceafe5 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/r600.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/r600.c</span>
<span class="p_chunk">@@ -105,8 +105,6 @@</span> <span class="p_context"> static void r600_gpu_init(struct radeon_device *rdev);</span>
 void r600_fini(struct radeon_device *rdev);
 void r600_irq_disable(struct radeon_device *rdev);
 static void r600_pcie_gen2_enable(struct radeon_device *rdev);
<span class="p_del">-extern int evergreen_rlc_resume(struct radeon_device *rdev);</span>
<span class="p_del">-extern void rv770_set_clk_bypass_mode(struct radeon_device *rdev);</span>
 
 /*
  * Indirect registers accessor
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/r600_dma.c b/drivers/gpu/drm/radeon/r600_dma.c</span>
<span class="p_header">index fb65e6f..80c1b7a 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/r600_dma.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/r600_dma.c</span>
<span class="p_chunk">@@ -26,8 +26,6 @@</span> <span class="p_context"></span>
 #include &quot;radeon_asic.h&quot;
 #include &quot;r600d.h&quot;
 
<span class="p_del">-u32 r600_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="p_del">-</span>
 /*
  * DMA
  * Starting with R600, the GPU has an asynchronous
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/radeon.h b/drivers/gpu/drm/radeon/radeon.h</span>
<span class="p_header">index 1b0dcad..9c02fbc 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/radeon.h</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/radeon.h</span>
<span class="p_chunk">@@ -2976,4 +2976,211 @@</span> <span class="p_context"> int r600_cs_common_vline_parse(struct radeon_cs_parser *p,</span>
 
 #include &quot;radeon_object.h&quot;
 
<span class="p_add">+extern bool radeon_device_is_virtual(void);</span>
<span class="p_add">+extern int radeon_driver_unload_kms(struct drm_device *dev);</span>
<span class="p_add">+extern int radeon_driver_load_kms(struct drm_device *dev, unsigned long flags);</span>
<span class="p_add">+extern void radeon_driver_lastclose_kms(struct drm_device *dev);</span>
<span class="p_add">+extern int</span>
<span class="p_add">+radeon_driver_open_kms(struct drm_device *dev, struct drm_file *file_priv);</span>
<span class="p_add">+extern void radeon_driver_postclose_kms(struct drm_device *dev,</span>
<span class="p_add">+		struct drm_file *file_priv);</span>
<span class="p_add">+extern void radeon_driver_preclose_kms(struct drm_device *dev,</span>
<span class="p_add">+		struct drm_file *file_priv);</span>
<span class="p_add">+extern u32</span>
<span class="p_add">+radeon_get_vblank_counter_kms(struct drm_device *dev, unsigned int pipe);</span>
<span class="p_add">+extern int radeon_enable_vblank_kms(struct drm_device *dev, unsigned int pipe);</span>
<span class="p_add">+extern void</span>
<span class="p_add">+radeon_disable_vblank_kms(struct drm_device *dev, unsigned int pipe);</span>
<span class="p_add">+extern int</span>
<span class="p_add">+radeon_get_vblank_timestamp_kms(struct drm_device *dev, unsigned int pipe,</span>
<span class="p_add">+		int *max_error, struct timeval *vblank_time,</span>
<span class="p_add">+		unsigned int flags);</span>
<span class="p_add">+bool radeon_atom_get_tv_timings(struct radeon_device *rdev, int index,</span>
<span class="p_add">+				struct drm_display_mode *mode);</span>
<span class="p_add">+/* from radeon_object.c */</span>
<span class="p_add">+int radeon_ttm_init(struct radeon_device *rdev);</span>
<span class="p_add">+void radeon_ttm_fini(struct radeon_device *rdev);</span>
<span class="p_add">+</span>
<span class="p_add">+extern int radeon_mmap(struct file *filp, struct vm_area_struct *vma);</span>
<span class="p_add">+</span>
<span class="p_add">+void radeon_legacy_backlight_init(struct radeon_encoder *radeon_encoder,</span>
<span class="p_add">+				  struct drm_connector *drm_connector);</span>
<span class="p_add">+void radeon_add_legacy_encoder(struct drm_device *dev,</span>
<span class="p_add">+		uint32_t encoder_enum, uint32_t supported_device);</span>
<span class="p_add">+</span>
<span class="p_add">+extern void radeon_gem_object_free(struct drm_gem_object *obj);</span>
<span class="p_add">+extern int radeon_gem_object_open(struct drm_gem_object *obj,</span>
<span class="p_add">+				  struct drm_file *file_priv);</span>
<span class="p_add">+extern void radeon_gem_object_close(struct drm_gem_object *obj,</span>
<span class="p_add">+				    struct drm_file *file_priv);</span>
<span class="p_add">+extern irqreturn_t radeon_driver_irq_handler_kms(int irq, void *arg);</span>
<span class="p_add">+extern void radeon_driver_irq_preinstall_kms(struct drm_device *dev);</span>
<span class="p_add">+extern int radeon_driver_irq_postinstall_kms(struct drm_device *dev);</span>
<span class="p_add">+extern void radeon_driver_irq_uninstall_kms(struct drm_device *dev);</span>
<span class="p_add">+</span>
<span class="p_add">+u32 r600_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="p_add">+int r600_ih_ring_alloc(struct radeon_device *rdev);</span>
<span class="p_add">+void r600_ih_ring_fini(struct radeon_device *rdev);</span>
<span class="p_add">+void rv770_set_clk_bypass_mode(struct radeon_device *rdev);</span>
<span class="p_add">+void radeon_pm_acpi_event_handler(struct radeon_device *rdev);</span>
<span class="p_add">+void r600_hdmi_update_acr(struct drm_encoder *encoder, long offset,</span>
<span class="p_add">+			  const struct radeon_hdmi_acr *acr);</span>
<span class="p_add">+void r600_set_avi_packet(struct radeon_device *rdev, u32 offset,</span>
<span class="p_add">+			 unsigned char *buffer, size_t size);</span>
<span class="p_add">+void r600_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="p_add">+			     struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="p_add">+void r600_set_vbi_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="p_add">+void r600_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="p_add">+void r600_set_mute(struct drm_encoder *encoder, u32 offset, bool mute);</span>
<span class="p_add">+void r600_hdmi_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="p_add">+void dce3_2_afmt_hdmi_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="p_add">+					       u8 *sadb, int sad_count);</span>
<span class="p_add">+void dce3_2_afmt_dp_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="p_add">+					     u8 *sadb, int sad_count);</span>
<span class="p_add">+void dce3_2_afmt_write_sad_regs(struct drm_encoder *encoder,</span>
<span class="p_add">+				struct cea_sad *sads, int sad_count);</span>
<span class="p_add">+void dce3_2_audio_set_dto(struct radeon_device *rdev,</span>
<span class="p_add">+			  struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="p_add">+void dce3_2_hdmi_update_acr(struct drm_encoder *encoder, long offset,</span>
<span class="p_add">+			    const struct radeon_hdmi_acr *acr);</span>
<span class="p_add">+void dce3_2_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="p_add">+void dce3_2_set_mute(struct drm_encoder *encoder, u32 offset, bool mute);</span>
<span class="p_add">+</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * evergreen</span>
<span class="p_add">+ */</span>
<span class="p_add">+struct evergreen_mc_save {</span>
<span class="p_add">+	u32 vga_render_control;</span>
<span class="p_add">+	u32 vga_hdp_control;</span>
<span class="p_add">+	bool crtc_enabled[RADEON_MAX_CRTCS];</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+void evergreen_fix_pci_max_read_req_size(struct radeon_device *rdev);</span>
<span class="p_add">+u32 evergreen_get_number_of_dram_channels(struct radeon_device *rdev);</span>
<span class="p_add">+void</span>
<span class="p_add">+evergreen_mc_stop(struct radeon_device *rdev, struct evergreen_mc_save *save);</span>
<span class="p_add">+void</span>
<span class="p_add">+evergreen_mc_resume(struct radeon_device *rdev, struct evergreen_mc_save *save);</span>
<span class="p_add">+void evergreen_mc_program(struct radeon_device *rdev);</span>
<span class="p_add">+int evergreen_mc_init(struct radeon_device *rdev);</span>
<span class="p_add">+void evergreen_print_gpu_status_regs(struct radeon_device *rdev);</span>
<span class="p_add">+bool evergreen_is_display_hung(struct radeon_device *rdev);</span>
<span class="p_add">+u32 evergreen_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="p_add">+void evergreen_gpu_pci_config_reset(struct radeon_device *rdev);</span>
<span class="p_add">+</span>
<span class="p_add">+void sumo_rlc_fini(struct radeon_device *rdev);</span>
<span class="p_add">+int sumo_rlc_init(struct radeon_device *rdev);</span>
<span class="p_add">+int evergreen_rlc_resume(struct radeon_device *rdev);</span>
<span class="p_add">+void evergreen_irq_suspend(struct radeon_device *rdev);</span>
<span class="p_add">+void dce4_audio_enable(struct radeon_device *rdev, struct r600_audio_pin *pin,</span>
<span class="p_add">+		       u8 enable_mask);</span>
<span class="p_add">+void evergreen_hdmi_update_acr(struct drm_encoder *encoder, long offset,</span>
<span class="p_add">+			       const struct radeon_hdmi_acr *acr);</span>
<span class="p_add">+void dce4_afmt_write_latency_fields(struct drm_encoder *encoder,</span>
<span class="p_add">+		struct drm_connector *connector, struct drm_display_mode *mode);</span>
<span class="p_add">+void dce4_afmt_hdmi_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="p_add">+				u8 *sadb, int sad_count);</span>
<span class="p_add">+void dce4_afmt_dp_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="p_add">+				u8 *sadb, int sad_count);</span>
<span class="p_add">+void evergreen_hdmi_write_sad_regs(struct drm_encoder *encoder,</span>
<span class="p_add">+		struct cea_sad *sads, int sad_count);</span>
<span class="p_add">+void evergreen_set_avi_packet(struct radeon_device *rdev, u32 offset,</span>
<span class="p_add">+		unsigned char *buffer, size_t size);</span>
<span class="p_add">+void dce4_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="p_add">+		struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="p_add">+void dce4_dp_audio_set_dto(struct radeon_device *rdev,</span>
<span class="p_add">+		struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="p_add">+void dce4_set_vbi_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="p_add">+void dce4_hdmi_set_color_depth(struct drm_encoder *encoder,</span>
<span class="p_add">+		u32 offset, int bpc);</span>
<span class="p_add">+void dce4_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="p_add">+void dce4_set_mute(struct drm_encoder *encoder, u32 offset, bool mute);</span>
<span class="p_add">+void cayman_cp_int_cntl_setup(struct radeon_device *rdev,</span>
<span class="p_add">+		int ring, u32 cp_int_cntl);</span>
<span class="p_add">+u32 cayman_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="p_add">+void cayman_vm_decode_fault(struct radeon_device *rdev,</span>
<span class="p_add">+		u32 status, u32 addr);</span>
<span class="p_add">+void evergreen_hdmi_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="p_add">+void evergreen_dp_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="p_add">+</span>
<span class="p_add">+void radeon_atom_backlight_init(struct radeon_encoder *radeon_encoder,</span>
<span class="p_add">+		struct drm_connector *drm_connector);</span>
<span class="p_add">+void radeon_add_atom_encoder(struct drm_device *dev, uint32_t encoder_enum,</span>
<span class="p_add">+		uint32_t supported_device, u16 caps);</span>
<span class="p_add">+int radeon_atom_hw_i2c_xfer(struct i2c_adapter *i2c_adap,</span>
<span class="p_add">+		struct i2c_msg *msgs, int num);</span>
<span class="p_add">+u32 radeon_atom_hw_i2c_func(struct i2c_adapter *adap);</span>
<span class="p_add">+</span>
<span class="p_add">+int si_mc_load_microcode(struct radeon_device *rdev);</span>
<span class="p_add">+u32 si_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="p_add">+void si_vram_gtt_location(struct radeon_device *rdev, struct radeon_mc *mc);</span>
<span class="p_add">+void si_init_uvd_internal_cg(struct radeon_device *rdev);</span>
<span class="p_add">+u32 si_get_csb_size(struct radeon_device *rdev);</span>
<span class="p_add">+void si_get_csb_buffer(struct radeon_device *rdev, volatile u32 *buffer);</span>
<span class="p_add">+void si_rlc_reset(struct radeon_device *rdev);</span>
<span class="p_add">+</span>
<span class="p_add">+extern struct sg_table *</span>
<span class="p_add">+radeon_gem_prime_get_sg_table(struct drm_gem_object *obj);</span>
<span class="p_add">+extern void *radeon_gem_prime_vmap(struct drm_gem_object *obj);</span>
<span class="p_add">+extern void radeon_gem_prime_vunmap(struct drm_gem_object *obj, void *vaddr);</span>
<span class="p_add">+</span>
<span class="p_add">+extern struct drm_gem_object *</span>
<span class="p_add">+radeon_gem_prime_import_sg_table(struct drm_device *dev,</span>
<span class="p_add">+		struct dma_buf_attachment *attach, struct sg_table *sg);</span>
<span class="p_add">+</span>
<span class="p_add">+extern int radeon_gem_prime_pin(struct drm_gem_object *obj);</span>
<span class="p_add">+extern void radeon_gem_prime_unpin(struct drm_gem_object *obj);</span>
<span class="p_add">+extern struct reservation_object *</span>
<span class="p_add">+radeon_gem_prime_res_obj(struct drm_gem_object *obj);</span>
<span class="p_add">+extern struct dma_buf *radeon_gem_prime_export(struct drm_device *dev,</span>
<span class="p_add">+		struct drm_gem_object *gobj, int flags);</span>
<span class="p_add">+</span>
<span class="p_add">+int ci_mc_load_microcode(struct radeon_device *rdev);</span>
<span class="p_add">+u32 cik_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="p_add">+void cik_enter_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="p_add">+void cik_exit_rlc_safe_mode(struct radeon_device *rdev);</span>
<span class="p_add">+void cik_update_cg(struct radeon_device *rdev, u32 block, bool enable);</span>
<span class="p_add">+</span>
<span class="p_add">+void cik_init_cp_pg_table(struct radeon_device *rdev);</span>
<span class="p_add">+u32 cik_get_csb_size(struct radeon_device *rdev);</span>
<span class="p_add">+</span>
<span class="p_add">+void cik_get_csb_buffer(struct radeon_device *rdev, volatile u32 *buffer);</span>
<span class="p_add">+struct rv7xx_ps *rv770_get_ps(struct radeon_ps *rps);</span>
<span class="p_add">+struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="p_add">+struct evergreen_power_info *evergreen_get_pi(struct radeon_device *rdev);</span>
<span class="p_add">+struct sumo_power_info *sumo_get_pi(struct radeon_device *rdev);</span>
<span class="p_add">+struct ni_power_info *ni_get_pi(struct radeon_device *rdev);</span>
<span class="p_add">+struct ni_ps *ni_get_ps(struct radeon_ps *rps);</span>
<span class="p_add">+</span>
<span class="p_add">+u8 si_get_ddr3_mclk_frequency_ratio(u32 memory_clock);</span>
<span class="p_add">+u8 si_get_mclk_frequency_ratio(u32 memory_clock, bool strobe_mode);</span>
<span class="p_add">+void si_trim_voltage_table_to_fit_state_table(struct radeon_device *rdev,</span>
<span class="p_add">+		u32 max_voltage_steps,</span>
<span class="p_add">+		struct atom_voltage_table *voltage_table);</span>
<span class="p_add">+u32 dce6_endpoint_rreg(struct radeon_device *rdev, u32 offset, u32 reg);</span>
<span class="p_add">+void dce6_endpoint_wreg(struct radeon_device *rdev, u32 offset, u32 reg, u32 v);</span>
<span class="p_add">+void dce6_afmt_select_pin(struct drm_encoder *encoder);</span>
<span class="p_add">+void dce6_afmt_write_latency_fields(struct drm_encoder *encoder,</span>
<span class="p_add">+		struct drm_connector *connector, struct drm_display_mode *mode);</span>
<span class="p_add">+void dce6_afmt_hdmi_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="p_add">+		u8 *sadb, int sad_count);</span>
<span class="p_add">+void dce6_afmt_dp_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="p_add">+		u8 *sadb, int sad_count);</span>
<span class="p_add">+void dce6_afmt_write_sad_regs(struct drm_encoder *encoder, struct cea_sad *sads,</span>
<span class="p_add">+		int sad_count);</span>
<span class="p_add">+void dce6_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="p_add">+		struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="p_add">+void dce6_dp_audio_set_dto(struct radeon_device *rdev, struct radeon_crtc *crtc,</span>
<span class="p_add">+		unsigned int clock);</span>
<span class="p_add">+void cik_sdma_enable(struct radeon_device *rdev, bool enable);</span>
<span class="p_add">+int cik_sdma_resume(struct radeon_device *rdev);</span>
<span class="p_add">+void cik_sdma_fini(struct radeon_device *rdev);</span>
<span class="p_add">+</span>
<span class="p_add">+void vce_v1_0_enable_mgcg(struct radeon_device *rdev, bool enable);</span>
<span class="p_add">+void vce_v2_0_enable_mgcg(struct radeon_device *rdev, bool enable);</span>
<span class="p_add">+</span>
<span class="p_add">+int r600_dma_cs_next_reloc(struct radeon_cs_parser *p,</span>
<span class="p_add">+		struct radeon_bo_list **cs_reloc);</span>
<span class="p_add">+</span>
<span class="p_add">+</span>
 #endif
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/radeon_acpi.c b/drivers/gpu/drm/radeon/radeon_acpi.c</span>
<span class="p_header">index 6efbd65..231d01d 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/radeon_acpi.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/radeon_acpi.c</span>
<span class="p_chunk">@@ -41,8 +41,6 @@</span> <span class="p_context"> static inline bool radeon_atpx_dgpu_req_power_for_displays(void) { return false;</span>
 
 #define ACPI_AC_CLASS           &quot;ac_adapter&quot;
 
<span class="p_del">-extern void radeon_pm_acpi_event_handler(struct radeon_device *rdev);</span>
<span class="p_del">-</span>
 struct atif_verify_interface {
 	u16 size;		/* structure size in bytes (includes size field) */
 	u16 version;		/* version */
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/radeon_asic.h b/drivers/gpu/drm/radeon/radeon_asic.h</span>
<span class="p_header">index e3f036c..48b46fb 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/radeon_asic.h</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/radeon_asic.h</span>
<span class="p_chunk">@@ -498,15 +498,6 @@</span> <span class="p_context"> bool rv770_dpm_vblank_too_short(struct radeon_device *rdev);</span>
 u32 rv770_dpm_get_current_sclk(struct radeon_device *rdev);
 u32 rv770_dpm_get_current_mclk(struct radeon_device *rdev);
 
<span class="p_del">-/*</span>
<span class="p_del">- * evergreen</span>
<span class="p_del">- */</span>
<span class="p_del">-struct evergreen_mc_save {</span>
<span class="p_del">-	u32 vga_render_control;</span>
<span class="p_del">-	u32 vga_hdp_control;</span>
<span class="p_del">-	bool crtc_enabled[RADEON_MAX_CRTCS];</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
 void evergreen_pcie_gart_tlb_flush(struct radeon_device *rdev);
 int evergreen_init(struct radeon_device *rdev);
 void evergreen_fini(struct radeon_device *rdev);
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/radeon_atombios.c b/drivers/gpu/drm/radeon/radeon_atombios.c</span>
<span class="p_header">index 4134759..4d640de 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/radeon_atombios.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/radeon_atombios.c</span>
<span class="p_chunk">@@ -31,15 +31,6 @@</span> <span class="p_context"></span>
 #include &quot;atom-bits.h&quot;
 #include &quot;radeon_asic.h&quot;
 
<span class="p_del">-extern void</span>
<span class="p_del">-radeon_add_atom_encoder(struct drm_device *dev, uint32_t encoder_enum,</span>
<span class="p_del">-			uint32_t supported_device, u16 caps);</span>
<span class="p_del">-</span>
<span class="p_del">-/* from radeon_legacy_encoder.c */</span>
<span class="p_del">-extern void</span>
<span class="p_del">-radeon_add_legacy_encoder(struct drm_device *dev, uint32_t encoder_enum,</span>
<span class="p_del">-			  uint32_t supported_device);</span>
<span class="p_del">-</span>
 union atom_supported_devices {
 	struct _ATOM_SUPPORTED_DEVICES_INFO info;
 	struct _ATOM_SUPPORTED_DEVICES_INFO_2 info_2;
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/radeon_audio.c b/drivers/gpu/drm/radeon/radeon_audio.c</span>
<span class="p_header">index b214663..0303f07 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/radeon_audio.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/radeon_audio.c</span>
<span class="p_chunk">@@ -31,77 +31,14 @@</span> <span class="p_context"></span>
 
 void r600_audio_enable(struct radeon_device *rdev, struct r600_audio_pin *pin,
 		u8 enable_mask);
<span class="p_del">-void dce4_audio_enable(struct radeon_device *rdev, struct r600_audio_pin *pin,</span>
<span class="p_del">-		u8 enable_mask);</span>
 void dce6_audio_enable(struct radeon_device *rdev, struct r600_audio_pin *pin,
 		u8 enable_mask);
<span class="p_del">-u32 dce6_endpoint_rreg(struct radeon_device *rdev, u32 offset, u32 reg);</span>
<span class="p_del">-void dce6_endpoint_wreg(struct radeon_device *rdev,</span>
<span class="p_del">-		u32 offset, u32 reg, u32 v);</span>
<span class="p_del">-void dce3_2_afmt_write_sad_regs(struct drm_encoder *encoder,</span>
<span class="p_del">-		struct cea_sad *sads, int sad_count);</span>
<span class="p_del">-void evergreen_hdmi_write_sad_regs(struct drm_encoder *encoder,</span>
<span class="p_del">-		struct cea_sad *sads, int sad_count);</span>
<span class="p_del">-void dce6_afmt_write_sad_regs(struct drm_encoder *encoder,</span>
<span class="p_del">-		struct cea_sad *sads, int sad_count);</span>
<span class="p_del">-void dce3_2_afmt_hdmi_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="p_del">-		u8 *sadb, int sad_count);</span>
<span class="p_del">-void dce3_2_afmt_dp_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="p_del">-		u8 *sadb, int sad_count);</span>
<span class="p_del">-void dce4_afmt_hdmi_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="p_del">-		u8 *sadb, int sad_count);</span>
<span class="p_del">-void dce4_afmt_dp_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="p_del">-		u8 *sadb, int sad_count);</span>
<span class="p_del">-void dce6_afmt_hdmi_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="p_del">-		u8 *sadb, int sad_count);</span>
<span class="p_del">-void dce6_afmt_dp_write_speaker_allocation(struct drm_encoder *encoder,</span>
<span class="p_del">-		u8 *sadb, int sad_count);</span>
<span class="p_del">-void dce4_afmt_write_latency_fields(struct drm_encoder *encoder,</span>
<span class="p_del">-		struct drm_connector *connector, struct drm_display_mode *mode);</span>
<span class="p_del">-void dce6_afmt_write_latency_fields(struct drm_encoder *encoder,</span>
<span class="p_del">-		struct drm_connector *connector, struct drm_display_mode *mode);</span>
 struct r600_audio_pin* r600_audio_get_pin(struct radeon_device *rdev);
 struct r600_audio_pin* dce6_audio_get_pin(struct radeon_device *rdev);
<span class="p_del">-void dce6_afmt_select_pin(struct drm_encoder *encoder);</span>
<span class="p_del">-void r600_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="p_del">-	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="p_del">-void dce3_2_audio_set_dto(struct radeon_device *rdev,</span>
<span class="p_del">-	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="p_del">-void dce4_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="p_del">-	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="p_del">-void dce4_dp_audio_set_dto(struct radeon_device *rdev,</span>
<span class="p_del">-	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="p_del">-void dce6_hdmi_audio_set_dto(struct radeon_device *rdev,</span>
<span class="p_del">-	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="p_del">-void dce6_dp_audio_set_dto(struct radeon_device *rdev,</span>
<span class="p_del">-	struct radeon_crtc *crtc, unsigned int clock);</span>
<span class="p_del">-void r600_set_avi_packet(struct radeon_device *rdev, u32 offset,</span>
<span class="p_del">-	unsigned char *buffer, size_t size);</span>
<span class="p_del">-void evergreen_set_avi_packet(struct radeon_device *rdev, u32 offset,</span>
<span class="p_del">-	unsigned char *buffer, size_t size);</span>
<span class="p_del">-void r600_hdmi_update_acr(struct drm_encoder *encoder, long offset,</span>
<span class="p_del">-	const struct radeon_hdmi_acr *acr);</span>
<span class="p_del">-void dce3_2_hdmi_update_acr(struct drm_encoder *encoder, long offset,</span>
<span class="p_del">-	const struct radeon_hdmi_acr *acr);</span>
<span class="p_del">-void evergreen_hdmi_update_acr(struct drm_encoder *encoder, long offset,</span>
<span class="p_del">-	const struct radeon_hdmi_acr *acr);</span>
<span class="p_del">-void r600_set_vbi_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="p_del">-void dce4_set_vbi_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="p_del">-void dce4_hdmi_set_color_depth(struct drm_encoder *encoder,</span>
<span class="p_del">-	u32 offset, int bpc);</span>
<span class="p_del">-void r600_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="p_del">-void dce3_2_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="p_del">-void dce4_set_audio_packet(struct drm_encoder *encoder, u32 offset);</span>
<span class="p_del">-void r600_set_mute(struct drm_encoder *encoder, u32 offset, bool mute);</span>
<span class="p_del">-void dce3_2_set_mute(struct drm_encoder *encoder, u32 offset, bool mute);</span>
<span class="p_del">-void dce4_set_mute(struct drm_encoder *encoder, u32 offset, bool mute);</span>
 static void radeon_audio_hdmi_mode_set(struct drm_encoder *encoder,
 	struct drm_display_mode *mode);
 static void radeon_audio_dp_mode_set(struct drm_encoder *encoder,
 	struct drm_display_mode *mode);
<span class="p_del">-void r600_hdmi_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="p_del">-void evergreen_hdmi_enable(struct drm_encoder *encoder, bool enable);</span>
<span class="p_del">-void evergreen_dp_enable(struct drm_encoder *encoder, bool enable);</span>
 
 static const u32 pin_offsets[7] =
 {
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/radeon_encoders.c b/drivers/gpu/drm/radeon/radeon_encoders.c</span>
<span class="p_header">index c6ee802..675153e 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/radeon_encoders.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/radeon_encoders.c</span>
<span class="p_chunk">@@ -29,14 +29,6 @@</span> <span class="p_context"></span>
 #include &quot;radeon.h&quot;
 #include &quot;atom.h&quot;
 
<span class="p_del">-extern void</span>
<span class="p_del">-radeon_legacy_backlight_init(struct radeon_encoder *radeon_encoder,</span>
<span class="p_del">-			     struct drm_connector *drm_connector);</span>
<span class="p_del">-extern void</span>
<span class="p_del">-radeon_atom_backlight_init(struct radeon_encoder *radeon_encoder,</span>
<span class="p_del">-			   struct drm_connector *drm_connector);</span>
<span class="p_del">-</span>
<span class="p_del">-</span>
 static uint32_t radeon_encoder_clones(struct drm_encoder *encoder)
 {
 	struct drm_device *dev = encoder-&gt;dev;
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/radeon_i2c.c b/drivers/gpu/drm/radeon/radeon_i2c.c</span>
<span class="p_header">index 021aa00..3941588 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/radeon_i2c.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/radeon_i2c.c</span>
<span class="p_chunk">@@ -31,10 +31,6 @@</span> <span class="p_context"></span>
 #include &quot;radeon.h&quot;
 #include &quot;atom.h&quot;
 
<span class="p_del">-extern int radeon_atom_hw_i2c_xfer(struct i2c_adapter *i2c_adap,</span>
<span class="p_del">-				   struct i2c_msg *msgs, int num);</span>
<span class="p_del">-extern u32 radeon_atom_hw_i2c_func(struct i2c_adapter *adap);</span>
<span class="p_del">-</span>
 /**
  * radeon_ddc_probe
  *
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/radeon_kms.c b/drivers/gpu/drm/radeon/radeon_kms.c</span>
<span class="p_header">index 4388dde..f089485 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/radeon_kms.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/radeon_kms.c</span>
<span class="p_chunk">@@ -830,7 +830,7 @@</span> <span class="p_context"> u32 radeon_get_vblank_counter_kms(struct drm_device *dev, unsigned int pipe)</span>
  * Enable the interrupt on the requested crtc (all asics).
  * Returns 0 on success, -EINVAL on failure.
  */
<span class="p_del">-int radeon_enable_vblank_kms(struct drm_device *dev, int crtc)</span>
<span class="p_add">+int radeon_enable_vblank_kms(struct drm_device *dev, unsigned int crtc)</span>
 {
 	struct radeon_device *rdev = dev-&gt;dev_private;
 	unsigned long irqflags;
<span class="p_chunk">@@ -856,7 +856,7 @@</span> <span class="p_context"> int radeon_enable_vblank_kms(struct drm_device *dev, int crtc)</span>
  *
  * Disable the interrupt on the requested crtc (all asics).
  */
<span class="p_del">-void radeon_disable_vblank_kms(struct drm_device *dev, int crtc)</span>
<span class="p_add">+void radeon_disable_vblank_kms(struct drm_device *dev, unsigned int crtc)</span>
 {
 	struct radeon_device *rdev = dev-&gt;dev_private;
 	unsigned long irqflags;
<span class="p_chunk">@@ -885,7 +885,7 @@</span> <span class="p_context"> void radeon_disable_vblank_kms(struct drm_device *dev, int crtc)</span>
  * scanout position.  (all asics).
  * Returns postive status flags on success, negative error on failure.
  */
<span class="p_del">-int radeon_get_vblank_timestamp_kms(struct drm_device *dev, int crtc,</span>
<span class="p_add">+int radeon_get_vblank_timestamp_kms(struct drm_device *dev, unsigned int crtc,</span>
 				    int *max_error,
 				    struct timeval *vblank_time,
 				    unsigned flags)
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/radeon_object.c b/drivers/gpu/drm/radeon/radeon_object.c</span>
<span class="p_header">index be30861..841aa89 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/radeon_object.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/radeon_object.c</span>
<span class="p_chunk">@@ -38,8 +38,6 @@</span> <span class="p_context"></span>
 #include &quot;radeon_trace.h&quot;
 
 
<span class="p_del">-int radeon_ttm_init(struct radeon_device *rdev);</span>
<span class="p_del">-void radeon_ttm_fini(struct radeon_device *rdev);</span>
 static void radeon_bo_clear_surface_reg(struct radeon_bo *bo);
 
 /*
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/rv730_dpm.c b/drivers/gpu/drm/radeon/rv730_dpm.c</span>
<span class="p_header">index d37ba2c..ff203ed 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/rv730_dpm.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/rv730_dpm.c</span>
<span class="p_chunk">@@ -34,9 +34,6 @@</span> <span class="p_context"></span>
 #define MC_CG_ARB_FREQ_F2           0x0c
 #define MC_CG_ARB_FREQ_F3           0x0d
 
<span class="p_del">-struct rv7xx_ps *rv770_get_ps(struct radeon_ps *rps);</span>
<span class="p_del">-struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="p_del">-</span>
 int rv730_populate_sclk_value(struct radeon_device *rdev,
 			      u32 engine_clock,
 			      RV770_SMC_SCLK_VALUE *sclk)
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/rv740_dpm.c b/drivers/gpu/drm/radeon/rv740_dpm.c</span>
<span class="p_header">index 4b85082..2b390e1 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/rv740_dpm.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/rv740_dpm.c</span>
<span class="p_chunk">@@ -29,8 +29,6 @@</span> <span class="p_context"></span>
 #include &quot;rv770_dpm.h&quot;
 #include &quot;atom.h&quot;
 
<span class="p_del">-struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="p_del">-</span>
 u32 rv740_get_decoded_reference_divider(u32 encoded_ref)
 {
 	u32 ref = 0;
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/si.c b/drivers/gpu/drm/radeon/si.c</span>
<span class="p_header">index 7ee9aaf..e5ceeb4 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/si.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/si.c</span>
<span class="p_chunk">@@ -119,16 +119,6 @@</span> <span class="p_context"> MODULE_FIRMWARE(&quot;radeon/hainan_k_smc.bin&quot;);</span>
 static u32 si_get_cu_active_bitmap(struct radeon_device *rdev, u32 se, u32 sh);
 static void si_pcie_gen3_enable(struct radeon_device *rdev);
 static void si_program_aspm(struct radeon_device *rdev);
<span class="p_del">-extern void sumo_rlc_fini(struct radeon_device *rdev);</span>
<span class="p_del">-extern int sumo_rlc_init(struct radeon_device *rdev);</span>
<span class="p_del">-extern int r600_ih_ring_alloc(struct radeon_device *rdev);</span>
<span class="p_del">-extern void r600_ih_ring_fini(struct radeon_device *rdev);</span>
<span class="p_del">-extern void evergreen_fix_pci_max_read_req_size(struct radeon_device *rdev);</span>
<span class="p_del">-extern void evergreen_mc_stop(struct radeon_device *rdev, struct evergreen_mc_save *save);</span>
<span class="p_del">-extern void evergreen_mc_resume(struct radeon_device *rdev, struct evergreen_mc_save *save);</span>
<span class="p_del">-extern u32 evergreen_get_number_of_dram_channels(struct radeon_device *rdev);</span>
<span class="p_del">-extern void evergreen_print_gpu_status_regs(struct radeon_device *rdev);</span>
<span class="p_del">-extern bool evergreen_is_display_hung(struct radeon_device *rdev);</span>
 static void si_enable_gui_idle_interrupt(struct radeon_device *rdev,
 					 bool enable);
 static void si_init_pg(struct radeon_device *rdev);
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/si_dma.c b/drivers/gpu/drm/radeon/si_dma.c</span>
<span class="p_header">index 8320792..afe19f8d 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/si_dma.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/si_dma.c</span>
<span class="p_chunk">@@ -27,8 +27,6 @@</span> <span class="p_context"></span>
 #include &quot;radeon_trace.h&quot;
 #include &quot;sid.h&quot;
 
<span class="p_del">-u32 si_gpu_check_soft_reset(struct radeon_device *rdev);</span>
<span class="p_del">-</span>
 /**
  * si_dma_is_lockup - Check if the DMA engine is locked up
  *
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/si_dpm.c b/drivers/gpu/drm/radeon/si_dpm.c</span>
<span class="p_header">index e6abc09..0a5aff5 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/si_dpm.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/si_dpm.c</span>
<span class="p_chunk">@@ -1734,14 +1734,6 @@</span> <span class="p_context"> static const struct si_powertune_data powertune_data_hainan =</span>
 	true
 };
 
<span class="p_del">-struct rv7xx_power_info *rv770_get_pi(struct radeon_device *rdev);</span>
<span class="p_del">-struct evergreen_power_info *evergreen_get_pi(struct radeon_device *rdev);</span>
<span class="p_del">-struct ni_power_info *ni_get_pi(struct radeon_device *rdev);</span>
<span class="p_del">-struct ni_ps *ni_get_ps(struct radeon_ps *rps);</span>
<span class="p_del">-</span>
<span class="p_del">-extern int si_mc_load_microcode(struct radeon_device *rdev);</span>
<span class="p_del">-extern void vce_v1_0_enable_mgcg(struct radeon_device *rdev, bool enable);</span>
<span class="p_del">-</span>
 static int si_populate_voltage_value(struct radeon_device *rdev,
 				     const struct atom_voltage_table *table,
 				     u16 value, SISLANDS_SMC_VOLTAGE_VALUE *voltage);
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/sumo_smc.c b/drivers/gpu/drm/radeon/sumo_smc.c</span>
<span class="p_header">index fb081d2..05ed103 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/sumo_smc.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/sumo_smc.c</span>
<span class="p_chunk">@@ -31,8 +31,6 @@</span> <span class="p_context"></span>
 #define SUMO_SMU_SERVICE_ROUTINE_ALTVDDNB_NOTIFY  27
 #define SUMO_SMU_SERVICE_ROUTINE_GFX_SRV_ID_20  20
 
<span class="p_del">-struct sumo_power_info *sumo_get_pi(struct radeon_device *rdev);</span>
<span class="p_del">-</span>
 static void sumo_send_msg_to_smu(struct radeon_device *rdev, u32 id)
 {
 	u32 gfx_int_req;
<span class="p_header">diff --git a/drivers/gpu/drm/radeon/trinity_dpm.c b/drivers/gpu/drm/radeon/trinity_dpm.c</span>
<span class="p_header">index 6730367..2d423b5 100644</span>
<span class="p_header">--- a/drivers/gpu/drm/radeon/trinity_dpm.c</span>
<span class="p_header">+++ b/drivers/gpu/drm/radeon/trinity_dpm.c</span>
<span class="p_chunk">@@ -336,7 +336,6 @@</span> <span class="p_context"> static const u32 trinity_override_mgpg_sequences[] =</span>
 	0x00000204, 0x00000000,
 };
 
<span class="p_del">-extern void vce_v1_0_enable_mgcg(struct radeon_device *rdev, bool enable);</span>
 static void trinity_program_clk_gating_hw_sequence(struct radeon_device *rdev,
 						   const u32 *seq, u32 count);
 static void trinity_override_dynamic_mg_powergating(struct radeon_device *rdev);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



