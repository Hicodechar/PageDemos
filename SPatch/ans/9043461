
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[2/5] iommu/mediatek: move the common struct into header file - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [2/5] iommu/mediatek: move the common struct into header file</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=166241">honghui.zhang@mediatek.com</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>May 9, 2016, 8 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1462780816-5288-3-git-send-email-honghui.zhang@mediatek.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9043461/mbox/"
   >mbox</a>
|
   <a href="/patch/9043461/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9043461/">/patch/9043461/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork2.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork2.web.kernel.org (Postfix) with ESMTP id DAF56BF29F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  9 May 2016 08:01:59 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 5C27E20115
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  9 May 2016 08:01:58 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 7C491200FE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon,  9 May 2016 08:01:57 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751877AbcEIIBy (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 9 May 2016 04:01:54 -0400
Received: from mailgw02.mediatek.com ([210.61.82.184]:38567 &quot;EHLO
	mailgw02.mediatek.com&quot; rhost-flags-OK-FAIL-OK-FAIL) by
	vger.kernel.org with ESMTP id S1752211AbcEIIAv (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 9 May 2016 04:00:51 -0400
Received: from mtkhts07.mediatek.inc [(172.21.101.69)] by
	mailgw02.mediatek.com (envelope-from &lt;honghui.zhang@mediatek.com&gt;)
	(mhqrelay.mediatek.com ESMTP with TLS)
	with ESMTP id 354973395; Mon, 09 May 2016 16:00:47 +0800
Received: from mhfsdcap03.localdomain (10.17.3.153) by mtkhts07.mediatek.inc
	(172.21.101.73) with Microsoft SMTP Server id 14.3.266.1;
	Mon, 9 May 2016 16:00:46 +0800
From: &lt;honghui.zhang@mediatek.com&gt;
To: &lt;joro@8bytes.org&gt;, &lt;treding@nvidia.com&gt;, &lt;mark.rutland@arm.com&gt;,
	&lt;matthias.bgg@gmail.com&gt;
CC: &lt;p.zabel@pengutronix.de&gt;, &lt;devicetree@vger.kernel.org&gt;,
	&lt;pebolle@tiscali.nl&gt;, &lt;kendrick.hsu@mediatek.com&gt;, &lt;arnd@arndb.de&gt;,
	&lt;srv_heupstream@mediatek.com&gt;, &lt;catalin.marinas@arm.com&gt;,
	&lt;will.deacon@arm.com&gt;, &lt;linux-kernel@vger.kernel.org&gt;,
	&lt;tfiga@google.com&gt;, &lt;iommu@lists.linux-foundation.org&gt;,
	&lt;robh+dt@kernel.org&gt;, &lt;djkurtz@google.com&gt;,
	&lt;kernel@pengutronix.de&gt;, &lt;linux-mediatek@lists.infradead.org&gt;,
	&lt;linux-arm-kernel@lists.infradead.org&gt;, &lt;l.stach@pengutronix.de&gt;,
	&lt;yingjoe.chen@mediatek.com&gt;, &lt;eddie.huang@mediatek.com&gt;,
	&lt;youlin.pei@mediatek.com&gt;, &lt;erin.lo@mediatek.com&gt;,
	Honghui Zhang &lt;honghui.zhang@mediatek.com&gt;
Subject: [PATCH 2/5] iommu/mediatek: move the common struct into header file
Date: Mon, 9 May 2016 16:00:13 +0800
Message-ID: &lt;1462780816-5288-3-git-send-email-honghui.zhang@mediatek.com&gt;
X-Mailer: git-send-email 1.8.1.1.dirty
In-Reply-To: &lt;1462780816-5288-1-git-send-email-honghui.zhang@mediatek.com&gt;
References: &lt;1462780816-5288-1-git-send-email-honghui.zhang@mediatek.com&gt;
MIME-Version: 1.0
Content-Type: text/plain
X-MTK: N
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-9.0 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=166241">honghui.zhang@mediatek.com</a> - May 9, 2016, 8 a.m.</div>
<pre class="content">
<span class="from">From: Honghui Zhang &lt;honghui.zhang@mediatek.com&gt;</span>

Move the struct defines of mtk iommu into a new header files for
common use.
<span class="signed-off-by">
Signed-off-by: Honghui Zhang &lt;honghui.zhang@mediatek.com&gt;</span>
---
 drivers/iommu/mtk_iommu.c | 62 +-------------------------------
 drivers/iommu/mtk_iommu.h | 90 +++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 91 insertions(+), 61 deletions(-)
 create mode 100644 drivers/iommu/mtk_iommu.h
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/drivers/iommu/mtk_iommu.c b/drivers/iommu/mtk_iommu.c</span>
<span class="p_header">index db74553..a6b7846 100644</span>
<span class="p_header">--- a/drivers/iommu/mtk_iommu.c</span>
<span class="p_header">+++ b/drivers/iommu/mtk_iommu.c</span>
<span class="p_chunk">@@ -34,7 +34,7 @@</span> <span class="p_context"></span>
 #include &lt;dt-bindings/memory/mt8173-larb-port.h&gt;
 #include &lt;soc/mediatek/smi.h&gt;
 
<span class="p_del">-#include &quot;io-pgtable.h&quot;</span>
<span class="p_add">+#include &quot;mtk_iommu.h&quot;</span>
 
 #define REG_MMU_PT_BASE_ADDR			0x000
 
<span class="p_chunk">@@ -93,49 +93,8 @@</span> <span class="p_context"></span>
 
 #define MTK_PROTECT_PA_ALIGN			128
 
<span class="p_del">-struct mtk_iommu_suspend_reg {</span>
<span class="p_del">-	u32				standard_axi_mode;</span>
<span class="p_del">-	u32				dcm_dis;</span>
<span class="p_del">-	u32				ctrl_reg;</span>
<span class="p_del">-	u32				int_control0;</span>
<span class="p_del">-	u32				int_main_control;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-struct mtk_iommu_client_priv {</span>
<span class="p_del">-	struct list_head		client;</span>
<span class="p_del">-	unsigned int			mtk_m4u_id;</span>
<span class="p_del">-	struct device			*m4udev;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-struct mtk_iommu_domain {</span>
<span class="p_del">-	spinlock_t			pgtlock; /* lock for page table */</span>
<span class="p_del">-</span>
<span class="p_del">-	struct io_pgtable_cfg		cfg;</span>
<span class="p_del">-	struct io_pgtable_ops		*iop;</span>
<span class="p_del">-</span>
<span class="p_del">-	struct iommu_domain		domain;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-struct mtk_iommu_data {</span>
<span class="p_del">-	void __iomem			*base;</span>
<span class="p_del">-	int				irq;</span>
<span class="p_del">-	struct device			*dev;</span>
<span class="p_del">-	struct clk			*bclk;</span>
<span class="p_del">-	phys_addr_t			protect_base; /* protect memory base */</span>
<span class="p_del">-	struct mtk_iommu_suspend_reg	reg;</span>
<span class="p_del">-	struct mtk_iommu_domain		*m4u_dom;</span>
<span class="p_del">-	struct iommu_group		*m4u_group;</span>
<span class="p_del">-	struct mtk_smi_iommu		smi_imu;      /* SMI larb iommu info */</span>
<span class="p_del">-	bool                            enable_4GB;</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
 static struct iommu_ops mtk_iommu_ops;
 
<span class="p_del">-static struct mtk_iommu_domain *to_mtk_domain(struct iommu_domain *dom)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return container_of(dom, struct mtk_iommu_domain, domain);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static void mtk_iommu_tlb_flush_all(void *cookie)
 {
 	struct mtk_iommu_data *data = cookie;
<span class="p_chunk">@@ -552,25 +511,6 @@</span> <span class="p_context"> static int mtk_iommu_hw_init(const struct mtk_iommu_data *data)</span>
 	return 0;
 }
 
<span class="p_del">-static int compare_of(struct device *dev, void *data)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return dev-&gt;of_node == data;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static int mtk_iommu_bind(struct device *dev)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct mtk_iommu_data *data = dev_get_drvdata(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	return component_bind_all(dev, &amp;data-&gt;smi_imu);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static void mtk_iommu_unbind(struct device *dev)</span>
<span class="p_del">-{</span>
<span class="p_del">-	struct mtk_iommu_data *data = dev_get_drvdata(dev);</span>
<span class="p_del">-</span>
<span class="p_del">-	component_unbind_all(dev, &amp;data-&gt;smi_imu);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static const struct component_master_ops mtk_iommu_com_ops = {
 	.bind		= mtk_iommu_bind,
 	.unbind		= mtk_iommu_unbind,
<span class="p_header">diff --git a/drivers/iommu/mtk_iommu.h b/drivers/iommu/mtk_iommu.h</span>
new file mode 100644
<span class="p_header">index 0000000..5656355</span>
<span class="p_header">--- /dev/null</span>
<span class="p_header">+++ b/drivers/iommu/mtk_iommu.h</span>
<span class="p_chunk">@@ -0,0 +1,90 @@</span> <span class="p_context"></span>
<span class="p_add">+/*</span>
<span class="p_add">+ * Copyright (c) 2015-2016 MediaTek Inc.</span>
<span class="p_add">+ * Author: Yong Wu &lt;yong.wu@mediatek.com&gt;</span>
<span class="p_add">+ *       : Honghui Zhang &lt;honghui.zhang@mediatek.com&gt;</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * This program is free software; you can redistribute it and/or modify</span>
<span class="p_add">+ * it under the terms of the GNU General Public License version 2 as</span>
<span class="p_add">+ * published by the Free Software Foundation.</span>
<span class="p_add">+ *</span>
<span class="p_add">+ * This program is distributed in the hope that it will be useful,</span>
<span class="p_add">+ * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<span class="p_add">+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<span class="p_add">+ * GNU General Public License for more details.</span>
<span class="p_add">+ */</span>
<span class="p_add">+</span>
<span class="p_add">+#ifndef _MTK_IOMMU_H_</span>
<span class="p_add">+#define _MTK_IOMMU_H_</span>
<span class="p_add">+</span>
<span class="p_add">+#include &lt;linux/clk.h&gt;</span>
<span class="p_add">+#include &lt;linux/component.h&gt;</span>
<span class="p_add">+#include &lt;linux/device.h&gt;</span>
<span class="p_add">+#include &lt;linux/io.h&gt;</span>
<span class="p_add">+#include &lt;linux/iommu.h&gt;</span>
<span class="p_add">+#include &lt;linux/list.h&gt;</span>
<span class="p_add">+#include &lt;linux/spinlock.h&gt;</span>
<span class="p_add">+#include &lt;soc/mediatek/smi.h&gt;</span>
<span class="p_add">+</span>
<span class="p_add">+#include &quot;io-pgtable.h&quot;</span>
<span class="p_add">+</span>
<span class="p_add">+struct mtk_iommu_suspend_reg {</span>
<span class="p_add">+	u32				standard_axi_mode;</span>
<span class="p_add">+	u32				dcm_dis;</span>
<span class="p_add">+	u32				ctrl_reg;</span>
<span class="p_add">+	u32				int_control0;</span>
<span class="p_add">+	u32				int_main_control;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+struct mtk_iommu_client_priv {</span>
<span class="p_add">+	struct list_head		client;</span>
<span class="p_add">+	unsigned int			mtk_m4u_id;</span>
<span class="p_add">+	struct device			*m4udev;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+struct mtk_iommu_domain {</span>
<span class="p_add">+	spinlock_t			pgtlock; /* lock for page table */</span>
<span class="p_add">+</span>
<span class="p_add">+	struct io_pgtable_cfg		cfg;</span>
<span class="p_add">+	struct io_pgtable_ops		*iop;</span>
<span class="p_add">+</span>
<span class="p_add">+	struct iommu_domain		domain;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+struct mtk_iommu_data {</span>
<span class="p_add">+	void __iomem			*base;</span>
<span class="p_add">+	int				irq;</span>
<span class="p_add">+	struct device			*dev;</span>
<span class="p_add">+	struct clk			*bclk;</span>
<span class="p_add">+	phys_addr_t			protect_base; /* protect memory base */</span>
<span class="p_add">+	struct mtk_iommu_suspend_reg	reg;</span>
<span class="p_add">+	struct mtk_iommu_domain		*m4u_dom;</span>
<span class="p_add">+	struct iommu_group		*m4u_group;</span>
<span class="p_add">+	struct mtk_smi_iommu		smi_imu;      /* SMI larb iommu info */</span>
<span class="p_add">+	bool                            enable_4GB;</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+static struct mtk_iommu_domain *to_mtk_domain(struct iommu_domain *dom)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return container_of(dom, struct mtk_iommu_domain, domain);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static int compare_of(struct device *dev, void *data)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return dev-&gt;of_node == data;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static int mtk_iommu_bind(struct device *dev)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct mtk_iommu_data *data = dev_get_drvdata(dev);</span>
<span class="p_add">+</span>
<span class="p_add">+	return component_bind_all(dev, &amp;data-&gt;smi_imu);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static void mtk_iommu_unbind(struct device *dev)</span>
<span class="p_add">+{</span>
<span class="p_add">+	struct mtk_iommu_data *data = dev_get_drvdata(dev);</span>
<span class="p_add">+</span>
<span class="p_add">+	component_unbind_all(dev, &amp;data-&gt;smi_imu);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+#endif</span>

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



