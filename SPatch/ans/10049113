
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[20/30] x86, mm: remove hard-coded ASID limit checks - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [20/30] x86, mm: remove hard-coded ASID limit checks</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=64071">Dave Hansen</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 8, 2017, 7:47 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171108194724.C0167D83@viggo.jf.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10049113/mbox/"
   >mbox</a>
|
   <a href="/patch/10049113/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10049113/">/patch/10049113/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	40F2F603FA for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  8 Nov 2017 19:50:49 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3161A294DB
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  8 Nov 2017 19:50:49 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 264BC2A235; Wed,  8 Nov 2017 19:50:49 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 067B2294DB
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  8 Nov 2017 19:50:48 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752991AbdKHTuo (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 8 Nov 2017 14:50:44 -0500
Received: from mga03.intel.com ([134.134.136.65]:62618 &quot;EHLO mga03.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752826AbdKHTrg (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 8 Nov 2017 14:47:36 -0500
Received: from orsmga004.jf.intel.com ([10.7.209.38])
	by orsmga103.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
	08 Nov 2017 11:47:35 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.44,365,1505804400&quot;; d=&quot;scan&#39;208&quot;;a=&quot;147592240&quot;
Received: from viggo.jf.intel.com (HELO localhost.localdomain)
	([10.54.39.119])
	by orsmga004.jf.intel.com with ESMTP; 08 Nov 2017 11:47:35 -0800
Subject: [PATCH 20/30] x86, mm: remove hard-coded ASID limit checks
To: linux-kernel@vger.kernel.org
Cc: linux-mm@kvack.org, dave.hansen@linux.intel.com,
	moritz.lipp@iaik.tugraz.at, daniel.gruss@iaik.tugraz.at,
	michael.schwarz@iaik.tugraz.at, richard.fellner@student.tugraz.at,
	luto@kernel.org, torvalds@linux-foundation.org,
	keescook@google.com, hughd@google.com, x86@kernel.org
From: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;
Date: Wed, 08 Nov 2017 11:47:24 -0800
References: &lt;20171108194646.907A1942@viggo.jf.intel.com&gt;
In-Reply-To: &lt;20171108194646.907A1942@viggo.jf.intel.com&gt;
Message-Id: &lt;20171108194724.C0167D83@viggo.jf.intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=64071">Dave Hansen</a> - Nov. 8, 2017, 7:47 p.m.</div>
<pre class="content">
<span class="from">From: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;</span>

First, it&#39;s nice to remove the magic numbers.

Second, KAISER is going to eat up half of the available ASID
space.  We do not use it today, but we need to at least spell
out this new restriction.
<span class="signed-off-by">
Signed-off-by: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;</span>
Cc: Moritz Lipp &lt;moritz.lipp@iaik.tugraz.at&gt;
Cc: Daniel Gruss &lt;daniel.gruss@iaik.tugraz.at&gt;
Cc: Michael Schwarz &lt;michael.schwarz@iaik.tugraz.at&gt;
Cc: Richard Fellner &lt;richard.fellner@student.tugraz.at&gt;
Cc: Andy Lutomirski &lt;luto@kernel.org&gt;
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Kees Cook &lt;keescook@google.com&gt;
Cc: Hugh Dickins &lt;hughd@google.com&gt;
Cc: x86@kernel.org
---

 b/arch/x86/include/asm/tlbflush.h |   16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a> - Nov. 10, 2017, 12:20 p.m.</div>
<pre class="content">
On Wed, Nov 08, 2017 at 11:47:24AM -0800, Dave Hansen wrote:
<span class="quote">&gt; +#define CR3_HW_ASID_BITS 12</span>
<span class="quote">&gt; +#define NR_AVAIL_ASIDS ((1&lt;&lt;CR3_AVAIL_ASID_BITS) - 1)</span>

That evaluates to 4095
<span class="quote">
&gt; -		VM_WARN_ON_ONCE(asid &gt; 4094);</span>
<span class="quote">&gt; +		VM_WARN_ON_ONCE(asid &gt; NR_AVAIL_ASIDS);</span>

Not the same number
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=64071">Dave Hansen</a> - Nov. 10, 2017, 6:41 p.m.</div>
<pre class="content">
On 11/10/2017 04:20 AM, Peter Zijlstra wrote:
<span class="quote">&gt; On Wed, Nov 08, 2017 at 11:47:24AM -0800, Dave Hansen wrote:</span>
<span class="quote">&gt;&gt; +#define CR3_HW_ASID_BITS 12</span>
<span class="quote">&gt;&gt; +#define NR_AVAIL_ASIDS ((1&lt;&lt;CR3_AVAIL_ASID_BITS) - 1)</span>
<span class="quote">&gt; That evaluates to 4095</span>
<span class="quote">&gt; </span>
<span class="quote">&gt;&gt; -		VM_WARN_ON_ONCE(asid &gt; 4094);</span>
<span class="quote">&gt;&gt; +		VM_WARN_ON_ONCE(asid &gt; NR_AVAIL_ASIDS);</span>
<span class="quote">&gt; Not the same number</span>

I think this got fixed up in the next patch (the check becomes a &gt;=),
but I&#39;ll fix this to make it more clean and fix the intermediate breakage.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff -puN arch/x86/include/asm/tlbflush.h~kaiser-pcid-pre-build-asids-macros arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">--- a/arch/x86/include/asm/tlbflush.h~kaiser-pcid-pre-build-asids-macros	2017-11-08 10:45:36.780681376 -0800</span>
<span class="p_header">+++ b/arch/x86/include/asm/tlbflush.h	2017-11-08 10:45:36.784681376 -0800</span>
<span class="p_chunk">@@ -74,6 +74,18 @@</span> <span class="p_context"> static inline u64 inc_mm_tlb_gen(struct</span>
 	return new_tlb_gen;
 }
 
<span class="p_add">+/* There are 12 bits of space for ASIDS in CR3 */</span>
<span class="p_add">+#define CR3_HW_ASID_BITS 12</span>
<span class="p_add">+/* When enabled, KAISER consumes a single bit for user/kernel switches */</span>
<span class="p_add">+#define KAISER_CONSUMED_ASID_BITS 0</span>
<span class="p_add">+</span>
<span class="p_add">+#define CR3_AVAIL_ASID_BITS (CR3_HW_ASID_BITS-KAISER_CONSUMED_ASID_BITS)</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * We lose a single extra ASID because 0 is reserved for use</span>
<span class="p_add">+ * by non-PCID-aware users.</span>
<span class="p_add">+ */</span>
<span class="p_add">+#define NR_AVAIL_ASIDS ((1&lt;&lt;CR3_AVAIL_ASID_BITS) - 1)</span>
<span class="p_add">+</span>
 /*
  * If PCID is on, ASID-aware code paths put the ASID+1 into the PCID
  * bits.  This serves two purposes.  It prevents a nasty situation in
<span class="p_chunk">@@ -87,7 +99,7 @@</span> <span class="p_context"> struct pgd_t;</span>
 static inline unsigned long build_cr3(pgd_t *pgd, u16 asid)
 {
 	if (static_cpu_has(X86_FEATURE_PCID)) {
<span class="p_del">-		VM_WARN_ON_ONCE(asid &gt; 4094);</span>
<span class="p_add">+		VM_WARN_ON_ONCE(asid &gt; NR_AVAIL_ASIDS);</span>
 		return __sme_pa(pgd) | (asid + 1);
 	} else {
 		VM_WARN_ON_ONCE(asid != 0);
<span class="p_chunk">@@ -97,7 +109,7 @@</span> <span class="p_context"> static inline unsigned long build_cr3(pg</span>
 
 static inline unsigned long build_cr3_noflush(pgd_t *pgd, u16 asid)
 {
<span class="p_del">-	VM_WARN_ON_ONCE(asid &gt; 4094);</span>
<span class="p_add">+	VM_WARN_ON_ONCE(asid &gt; NR_AVAIL_ASIDS);</span>
 	return __sme_pa(pgd) | (asid + 1) | CR3_NOFLUSH;
 }
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



