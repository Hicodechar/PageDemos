
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.4,37/42] ARM: 8613/1: Fix the uaccess crash on PB11MPCore - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.4,37/42] ARM: 8613/1: Fix the uaccess crash on PB11MPCore</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 24, 2017, 7:55 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170124075510.839861497@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9534475/mbox/"
   >mbox</a>
|
   <a href="/patch/9534475/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9534475/">/patch/9534475/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	3C9776046A for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 24 Jan 2017 08:33:33 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 313A11FF1E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 24 Jan 2017 08:33:33 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 2623922701; Tue, 24 Jan 2017 08:33:33 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E32051FF1E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue, 24 Jan 2017 08:33:31 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751382AbdAXId3 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 24 Jan 2017 03:33:29 -0500
Received: from mail.linuxfoundation.org ([140.211.169.12]:39964 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1750781AbdAXH6E (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 24 Jan 2017 02:58:04 -0500
Received: from localhost (unknown [78.192.101.3])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id 01C83958;
	Tue, 24 Jan 2017 07:57:58 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, Russell King &lt;linux@armlinux.org.uk&gt;,
	Will Deacon &lt;will.deacon@arm.com&gt;,
	Neil Armstrong &lt;narmstrong@baylibre.com&gt;,
	Linus Walleij &lt;linus.walleij@linaro.org&gt;,
	Russell King &lt;rmk+kernel@arm.linux.org.uk&gt;
Subject: [PATCH 4.4 37/42] ARM: 8613/1: Fix the uaccess crash on PB11MPCore
Date: Tue, 24 Jan 2017 08:55:47 +0100
Message-Id: &lt;20170124075510.839861497@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.11.0
In-Reply-To: &lt;20170124075509.299412838@linuxfoundation.org&gt;
References: &lt;20170124075509.299412838@linuxfoundation.org&gt;
User-Agent: quilt/0.65
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Jan. 24, 2017, 7:55 a.m.</div>
<pre class="content">
4.4-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: Linus Walleij &lt;linus.walleij@linaro.org&gt;</span>

commit 90f92c631b210c1e97080b53a9d863783281a932 upstream.

The following patch was sketched by Russell in response to my
crashes on the PB11MPCore after the patch for software-based
priviledged no access support for ARMv8.1. See this thread:
http://marc.info/?l=linux-arm-kernel&amp;m=144051749807214&amp;w=2

I am unsure what is going on, I suspect everyone involved in
the discussion is. I just want to repost this to get the
discussion restarted, as I still have to apply this patch
with every kernel iteration to get my PB11MPCore Realview
running.

Testing by Neil Armstrong on the Oxnas NAS has revealed that
this bug exist also on that widely deployed hardware, so
we are probably currently regressing all ARM11MPCore systems.

Cc: Russell King &lt;linux@armlinux.org.uk&gt;
Cc: Will Deacon &lt;will.deacon@arm.com&gt;
Fixes: a5e090acbf54 (&quot;ARM: software-based priviledged-no-access support&quot;)
<span class="tested-by">Tested-by: Neil Armstrong &lt;narmstrong@baylibre.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Linus Walleij &lt;linus.walleij@linaro.org&gt;</span>
<span class="signed-off-by">Signed-off-by: Russell King &lt;rmk+kernel@arm.linux.org.uk&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>

---
 arch/arm/kernel/smp_tlb.c |    7 +++++++
 1 file changed, 7 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/arch/arm/kernel/smp_tlb.c</span>
<span class="p_header">+++ b/arch/arm/kernel/smp_tlb.c</span>
<span class="p_chunk">@@ -9,6 +9,7 @@</span> <span class="p_context"></span>
  */
 #include &lt;linux/preempt.h&gt;
 #include &lt;linux/smp.h&gt;
<span class="p_add">+#include &lt;linux/uaccess.h&gt;</span>
 
 #include &lt;asm/smp_plat.h&gt;
 #include &lt;asm/tlbflush.h&gt;
<span class="p_chunk">@@ -40,8 +41,11 @@</span> <span class="p_context"> static inline void ipi_flush_tlb_mm(void</span>
 static inline void ipi_flush_tlb_page(void *arg)
 {
 	struct tlb_args *ta = (struct tlb_args *)arg;
<span class="p_add">+	unsigned int __ua_flags = uaccess_save_and_enable();</span>
 
 	local_flush_tlb_page(ta-&gt;ta_vma, ta-&gt;ta_start);
<span class="p_add">+</span>
<span class="p_add">+	uaccess_restore(__ua_flags);</span>
 }
 
 static inline void ipi_flush_tlb_kernel_page(void *arg)
<span class="p_chunk">@@ -54,8 +58,11 @@</span> <span class="p_context"> static inline void ipi_flush_tlb_kernel_</span>
 static inline void ipi_flush_tlb_range(void *arg)
 {
 	struct tlb_args *ta = (struct tlb_args *)arg;
<span class="p_add">+	unsigned int __ua_flags = uaccess_save_and_enable();</span>
 
 	local_flush_tlb_range(ta-&gt;ta_vma, ta-&gt;ta_start, ta-&gt;ta_end);
<span class="p_add">+</span>
<span class="p_add">+	uaccess_restore(__ua_flags);</span>
 }
 
 static inline void ipi_flush_tlb_kernel_range(void *arg)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



