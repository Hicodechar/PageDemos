
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>linux-next: manual merge of the akpm-current tree with the tip tree - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    linux-next: manual merge of the akpm-current tree with the tip tree</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Aug. 11, 2017, 10:48 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170811104832.cvunth3rbo75atzl@hirez.programming.kicks-ass.net&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9895441/mbox/"
   >mbox</a>
|
   <a href="/patch/9895441/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9895441/">/patch/9895441/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	E6D97602DA for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 11 Aug 2017 10:49:01 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D6EB128BA6
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 11 Aug 2017 10:49:01 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id CB64D28BF2; Fri, 11 Aug 2017 10:49:01 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1B07528C1E
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 11 Aug 2017 10:49:01 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752869AbdHKKss (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 11 Aug 2017 06:48:48 -0400
Received: from merlin.infradead.org ([205.233.59.134]:47788 &quot;EHLO
	merlin.infradead.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752154AbdHKKsr (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 11 Aug 2017 06:48:47 -0400
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=infradead.org; s=merlin.20170209;
	h=In-Reply-To:Content-Type:MIME-Version:
	References:Message-ID:Subject:Cc:To:From:Date:Sender:Reply-To:
	Content-Transfer-Encoding:Content-ID:Content-Description:Resent-Date:
	Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:
	List-Help:List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
	bh=59iIN+kCVYkAh/WhT59RZrbCbZRmmq2mGGgkzPa4pwY=;
	b=uzI4z0R2XxtE/6Kx4xg7AZSZ4
	d506VATSHqF+qEWu544HLIBhZqXhd9F/+gIv34nwqMXEVPKeC+l9Nka1r2MEDux+Bqg8NJumRLlev
	U3WvjBHBwc5RLLEM6qVREtyOPoNbB5Fhy41/JVWjWFo+g8cd9beq/DnraUZo3De9hdWqT3dFaTH51
	VdRghIEQsq9tDmt0Sxti65hsG7ecD1yKGwQMcmdYkFOvynghPMkTNvppLHWANf8uLBYEJKq6/957i
	6p4oKGfhx3P7EmurO3MTgUNA+EDL6WUoG6fiEPEyesvWFe1mIsDSzWGCjrH+j/xZcgk4QWm6vJxa3
	CJ1HDdL/g==;
Received: from j217100.upc-j.chello.nl ([24.132.217.100]
	helo=hirez.programming.kicks-ass.net)
	by merlin.infradead.org with esmtpsa (Exim 4.87 #1 (Red Hat Linux))
	id 1dg7UZ-0008Sm-2O; Fri, 11 Aug 2017 10:48:35 +0000
Received: by hirez.programming.kicks-ass.net (Postfix, from userid 1000)
	id 0F1FB201F52A1; Fri, 11 Aug 2017 12:48:32 +0200 (CEST)
Date: Fri, 11 Aug 2017 12:48:32 +0200
From: Peter Zijlstra &lt;peterz@infradead.org&gt;
To: Stephen Rothwell &lt;sfr@canb.auug.org.au&gt;
Cc: Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Thomas Gleixner &lt;tglx@linutronix.de&gt;,
	Ingo Molnar &lt;mingo@elte.hu&gt;, &quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;,
	Linux-Next Mailing List &lt;linux-next@vger.kernel.org&gt;,
	Linux Kernel Mailing List &lt;linux-kernel@vger.kernel.org&gt;,
	Nadav Amit &lt;namit@vmware.com&gt;, Linus &lt;torvalds@linux-foundation.org&gt;
Subject: Re: linux-next: manual merge of the akpm-current tree with the tip
	tree
Message-ID: &lt;20170811104832.cvunth3rbo75atzl@hirez.programming.kicks-ass.net&gt;
References: &lt;20170811175326.36d546dc@canb.auug.org.au&gt;
	&lt;20170811093449.w5wttpulmwfykjzm@hirez.programming.kicks-ass.net&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: &lt;20170811093449.w5wttpulmwfykjzm@hirez.programming.kicks-ass.net&gt;
User-Agent: NeoMutt/20170609 (1.8.3)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a> - Aug. 11, 2017, 10:48 a.m.</div>
<pre class="content">
On Fri, Aug 11, 2017 at 11:34:49AM +0200, Peter Zijlstra wrote:
<span class="quote">&gt; On Fri, Aug 11, 2017 at 05:53:26PM +1000, Stephen Rothwell wrote:</span>
<span class="quote">&gt; &gt; Hi all,</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Today&#39;s linux-next merge of the akpm-current tree got conflicts in:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;   include/linux/mm_types.h</span>
<span class="quote">&gt; &gt;   mm/huge_memory.c</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; between commit:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;   8b1b436dd1cc (&quot;mm, locking: Rework {set,clear,mm}_tlb_flush_pending()&quot;)</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; from the tip tree and commits:</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;   16af97dc5a89 (&quot;mm: migrate: prevent racy access to tlb_flush_pending&quot;)</span>
<span class="quote">&gt; &gt;   a9b802500ebb (&quot;Revert &quot;mm: numa: defer TLB flush for THP migration as long as possible&quot;&quot;)</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; from the akpm-current tree.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; The latter 2 are now in Linus&#39; tree as well (but were not when I started</span>
<span class="quote">&gt; &gt; the day).</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; The only way forward I could see was to revert</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;   8b1b436dd1cc (&quot;mm, locking: Rework {set,clear,mm}_tlb_flush_pending()&quot;)</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; and the three following commits</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt;   ff7a5fb0f1d5 (&quot;overlayfs, locking: Remove smp_mb__before_spinlock() usage&quot;)</span>
<span class="quote">&gt; &gt;   d89e588ca408 (&quot;locking: Introduce smp_mb__after_spinlock()&quot;)</span>
<span class="quote">&gt; &gt;   a9668cd6ee28 (&quot;locking: Remove smp_mb__before_spinlock()&quot;)</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; before merging the akpm-current tree again.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Here&#39;s two patches that apply on top of tip.</span>
<span class="quote">&gt; </span>


And here&#39;s one to fix the PPC ordering issue I found while doing those
patches.


---
Subject: mm: Fix barrier for inc_tlb_flush_pending() for PPC
<span class="from">From: Peter Zijlstra &lt;peterz@infradead.org&gt;</span>
Date: Fri Aug 11 12:43:33 CEST 2017

When we have SPLIT_PTE_PTLOCKS and have RCpc locks (PPC) the UNLOCK of
one does not in fact order against the LOCK of another lock. Therefore
the documented scheme does not work.

Add an explicit smp_mb__after_atomic() to cure things.

Also update the comment to reflect the new inc/dec thing.
<span class="signed-off-by">
Signed-off-by: Peter Zijlstra (Intel) &lt;peterz@infradead.org&gt;</span>
---
 include/linux/mm_types.h |   34 ++++++++++++++++++++++++----------
 1 file changed, 24 insertions(+), 10 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/include/linux/mm_types.h</span>
<span class="p_header">+++ b/include/linux/mm_types.h</span>
<span class="p_chunk">@@ -533,7 +533,7 @@</span> <span class="p_context"> static inline bool mm_tlb_flush_pending(</span>
 {
 	/*
 	 * Must be called with PTL held; such that our PTL acquire will have
<span class="p_del">-	 * observed the store from set_tlb_flush_pending().</span>
<span class="p_add">+	 * observed the increment from inc_tlb_flush_pending().</span>
 	 */
 	return atomic_read(&amp;mm-&gt;tlb_flush_pending);
 }
<span class="p_chunk">@@ -547,13 +547,11 @@</span> <span class="p_context"> static inline void inc_tlb_flush_pending</span>
 {
 	atomic_inc(&amp;mm-&gt;tlb_flush_pending);
 	/*
<span class="p_del">-	 * The only time this value is relevant is when there are indeed pages</span>
<span class="p_del">-	 * to flush. And we&#39;ll only flush pages after changing them, which</span>
<span class="p_del">-	 * requires the PTL.</span>
<span class="p_del">-	 *</span>
 	 * So the ordering here is:
 	 *
<span class="p_del">-	 *	mm-&gt;tlb_flush_pending = true;</span>
<span class="p_add">+	 *	atomic_inc(&amp;mm-&gt;tlb_flush_pending)</span>
<span class="p_add">+	 *	smp_mb__after_atomic();</span>
<span class="p_add">+	 *</span>
 	 *	spin_lock(&amp;ptl);
 	 *	...
 	 *	set_pte_at();
<span class="p_chunk">@@ -565,17 +563,33 @@</span> <span class="p_context"> static inline void inc_tlb_flush_pending</span>
 	 *				spin_unlock(&amp;ptl);
 	 *
 	 *	flush_tlb_range();
<span class="p_del">-	 *	mm-&gt;tlb_flush_pending = false;</span>
<span class="p_add">+	 *	atomic_dec(&amp;mm-&gt;tlb_flush_pending);</span>
 	 *
<span class="p_del">-	 * So the =true store is constrained by the PTL unlock, and the =false</span>
<span class="p_del">-	 * store is constrained by the TLB invalidate.</span>
<span class="p_add">+	 * Where we order the increment against the PTE modification with the</span>
<span class="p_add">+	 * smp_mb__after_atomic(). It would appear that the spin_unlock(&amp;ptl)</span>
<span class="p_add">+	 * is sufficient to constrain the inc, because we only care about the</span>
<span class="p_add">+	 * value if there is indeed a pending PTE modification. However with</span>
<span class="p_add">+	 * SPLIT_PTE_PTLOCKS and RCpc locks (PPC) the UNLOCK of one lock does</span>
<span class="p_add">+	 * not order against the LOCK of another lock.</span>
<span class="p_add">+	 *</span>
<span class="p_add">+	 * The decrement is ordered by the flush_tlb_range(), such that</span>
<span class="p_add">+	 * mm_tlb_flush_pending() will not return false unless all flushes have</span>
<span class="p_add">+	 * completed.</span>
 	 */
<span class="p_add">+	smp_mb__after_atomic();</span>
 }
 
 /* Clearing is done after a TLB flush, which also provides a barrier. */
 static inline void dec_tlb_flush_pending(struct mm_struct *mm)
 {
<span class="p_del">-	/* see set_tlb_flush_pending */</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * See inc_tlb_flush_pending().</span>
<span class="p_add">+	 *</span>
<span class="p_add">+	 * This cannot be smp_mb__before_atomic() because smp_mb() simply does</span>
<span class="p_add">+	 * not order against TLB invalidate completion, which is what we need.</span>
<span class="p_add">+	 *</span>
<span class="p_add">+	 * Therefore we must rely on tlb_flush_*() to guarantee order.</span>
<span class="p_add">+	 */</span>
 	atomic_dec(&amp;mm-&gt;tlb_flush_pending);
 }
 #else

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



