
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.2,113/134] iommu/tegra-smmu: Parameterize number of TLB lines - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.2,113/134] iommu/tegra-smmu: Parameterize number of TLB lines</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 26, 2015, 8:56 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20150926205318.670163957@linuxfoundation.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/7272071/mbox/"
   >mbox</a>
|
   <a href="/patch/7272071/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/7272071/">/patch/7272071/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 741B09F39B
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 26 Sep 2015 22:03:03 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 8458E207BE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 26 Sep 2015 22:03:02 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 8B838207DF
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 26 Sep 2015 22:03:01 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932508AbbIZWC5 (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Sat, 26 Sep 2015 18:02:57 -0400
Received: from mail.linuxfoundation.org ([140.211.169.12]:57121 &quot;EHLO
	mail.linuxfoundation.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932092AbbIZVHH (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Sat, 26 Sep 2015 17:07:07 -0400
Received: from localhost (c-50-170-35-168.hsd1.wa.comcast.net
	[50.170.35.168])
	by mail.linuxfoundation.org (Postfix) with ESMTPSA id C925CCE9;
	Sat, 26 Sep 2015 21:07:06 +0000 (UTC)
From: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;
To: linux-kernel@vger.kernel.org
Cc: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;,
	stable@vger.kernel.org, Thierry Reding &lt;treding@nvidia.com&gt;
Subject: [PATCH 4.2 113/134] iommu/tegra-smmu: Parameterize number of TLB
	lines
Date: Sat, 26 Sep 2015 13:56:05 -0700
Message-Id: &lt;20150926205318.670163957@linuxfoundation.org&gt;
X-Mailer: git-send-email 2.5.3
In-Reply-To: &lt;20150926205311.819185658@linuxfoundation.org&gt;
References: &lt;20150926205311.819185658@linuxfoundation.org&gt;
User-Agent: quilt/0.64
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-15
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.9 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=37061">gregkh@linuxfoundation.org</a> - Sept. 26, 2015, 8:56 p.m.</div>
<pre class="content">
4.2-stable review patch.  If anyone has any objections, please let me know.

------------------
<span class="from">
From: Thierry Reding &lt;treding@nvidia.com&gt;</span>

commit 11cec15bf3fb498206ef63b1fa26c27689e02d0e upstream.

The number of TLB lines was increased from 16 on Tegra30 to 32 on
Tegra114 and later. Parameterize the value so that the initial default
can be set accordingly.

On Tegra30, initializing the value to 32 would effectively disable the
TLB and hence cause massive latencies for memory accesses translated
through the SMMU. This is especially noticeable for isochronuous clients
such as display, whose FIFOs would continuously underrun.

Fixes: 891846516317 (&quot;memory: Add NVIDIA Tegra memory controller support&quot;)
<span class="signed-off-by">Signed-off-by: Thierry Reding &lt;treding@nvidia.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>

---
 drivers/iommu/tegra-smmu.c      |    9 +++++++--
 drivers/memory/tegra/tegra114.c |    1 +
 drivers/memory/tegra/tegra124.c |    1 +
 drivers/memory/tegra/tegra30.c  |    1 +
 include/soc/tegra/mc.h          |    1 +
 5 files changed, 11 insertions(+), 2 deletions(-)



--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">--- a/drivers/iommu/tegra-smmu.c</span>
<span class="p_header">+++ b/drivers/iommu/tegra-smmu.c</span>
<span class="p_chunk">@@ -27,6 +27,7 @@</span> <span class="p_context"> struct tegra_smmu {</span>
 	const struct tegra_smmu_soc *soc;
 
 	unsigned long pfn_mask;
<span class="p_add">+	unsigned long tlb_mask;</span>
 
 	unsigned long *asids;
 	struct mutex lock;
<span class="p_chunk">@@ -68,7 +69,8 @@</span> <span class="p_context"> static inline u32 smmu_readl(struct tegr</span>
 #define SMMU_TLB_CONFIG 0x14
 #define  SMMU_TLB_CONFIG_HIT_UNDER_MISS (1 &lt;&lt; 29)
 #define  SMMU_TLB_CONFIG_ROUND_ROBIN_ARBITRATION (1 &lt;&lt; 28)
<span class="p_del">-#define  SMMU_TLB_CONFIG_ACTIVE_LINES(x) ((x) &amp; 0x3f)</span>
<span class="p_add">+#define  SMMU_TLB_CONFIG_ACTIVE_LINES(smmu) \</span>
<span class="p_add">+	((smmu)-&gt;soc-&gt;num_tlb_lines &amp; (smmu)-&gt;tlb_mask)</span>
 
 #define SMMU_PTC_CONFIG 0x18
 #define  SMMU_PTC_CONFIG_ENABLE (1 &lt;&lt; 29)
<span class="p_chunk">@@ -816,6 +818,9 @@</span> <span class="p_context"> struct tegra_smmu *tegra_smmu_probe(stru</span>
 	smmu-&gt;pfn_mask = BIT_MASK(mc-&gt;soc-&gt;num_address_bits - PAGE_SHIFT) - 1;
 	dev_dbg(dev, &quot;address bits: %u, PFN mask: %#lx\n&quot;,
 		mc-&gt;soc-&gt;num_address_bits, smmu-&gt;pfn_mask);
<span class="p_add">+	smmu-&gt;tlb_mask = (smmu-&gt;soc-&gt;num_tlb_lines &lt;&lt; 1) - 1;</span>
<span class="p_add">+	dev_dbg(dev, &quot;TLB lines: %u, mask: %#lx\n&quot;, smmu-&gt;soc-&gt;num_tlb_lines,</span>
<span class="p_add">+		smmu-&gt;tlb_mask);</span>
 
 	value = SMMU_PTC_CONFIG_ENABLE | SMMU_PTC_CONFIG_INDEX_MAP(0x3f);
 
<span class="p_chunk">@@ -825,7 +830,7 @@</span> <span class="p_context"> struct tegra_smmu *tegra_smmu_probe(stru</span>
 	smmu_writel(smmu, value, SMMU_PTC_CONFIG);
 
 	value = SMMU_TLB_CONFIG_HIT_UNDER_MISS |
<span class="p_del">-		SMMU_TLB_CONFIG_ACTIVE_LINES(0x20);</span>
<span class="p_add">+		SMMU_TLB_CONFIG_ACTIVE_LINES(smmu);</span>
 
 	if (soc-&gt;supports_round_robin_arbitration)
 		value |= SMMU_TLB_CONFIG_ROUND_ROBIN_ARBITRATION;
<span class="p_header">--- a/drivers/memory/tegra/tegra114.c</span>
<span class="p_header">+++ b/drivers/memory/tegra/tegra114.c</span>
<span class="p_chunk">@@ -935,6 +935,7 @@</span> <span class="p_context"> static const struct tegra_smmu_soc tegra</span>
 	.num_swgroups = ARRAY_SIZE(tegra114_swgroups),
 	.supports_round_robin_arbitration = false,
 	.supports_request_limit = false,
<span class="p_add">+	.num_tlb_lines = 32,</span>
 	.num_asids = 4,
 	.ops = &amp;tegra114_smmu_ops,
 };
<span class="p_header">--- a/drivers/memory/tegra/tegra124.c</span>
<span class="p_header">+++ b/drivers/memory/tegra/tegra124.c</span>
<span class="p_chunk">@@ -1023,6 +1023,7 @@</span> <span class="p_context"> static const struct tegra_smmu_soc tegra</span>
 	.num_swgroups = ARRAY_SIZE(tegra124_swgroups),
 	.supports_round_robin_arbitration = true,
 	.supports_request_limit = true,
<span class="p_add">+	.num_tlb_lines = 32,</span>
 	.num_asids = 128,
 	.ops = &amp;tegra124_smmu_ops,
 };
<span class="p_header">--- a/drivers/memory/tegra/tegra30.c</span>
<span class="p_header">+++ b/drivers/memory/tegra/tegra30.c</span>
<span class="p_chunk">@@ -957,6 +957,7 @@</span> <span class="p_context"> static const struct tegra_smmu_soc tegra</span>
 	.num_swgroups = ARRAY_SIZE(tegra30_swgroups),
 	.supports_round_robin_arbitration = false,
 	.supports_request_limit = false,
<span class="p_add">+	.num_tlb_lines = 16,</span>
 	.num_asids = 4,
 	.ops = &amp;tegra30_smmu_ops,
 };
<span class="p_header">--- a/include/soc/tegra/mc.h</span>
<span class="p_header">+++ b/include/soc/tegra/mc.h</span>
<span class="p_chunk">@@ -66,6 +66,7 @@</span> <span class="p_context"> struct tegra_smmu_soc {</span>
 	bool supports_round_robin_arbitration;
 	bool supports_request_limit;
 
<span class="p_add">+	unsigned int num_tlb_lines;</span>
 	unsigned int num_asids;
 
 	const struct tegra_smmu_ops *ops;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



