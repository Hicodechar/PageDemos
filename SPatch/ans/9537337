
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v4,3/4] arm64: Use __tlbi() macros in KVM code - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v4,3/4] arm64: Use __tlbi() macros in KVM code</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=41311">Christopher Covington</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 25, 2017, 3:52 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170125155232.10277-3-cov@codeaurora.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9537337/mbox/"
   >mbox</a>
|
   <a href="/patch/9537337/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9537337/">/patch/9537337/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	5E3BC6046A for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 25 Jan 2017 15:53:03 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4E88926E96
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 25 Jan 2017 15:53:03 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 4274427F9F; Wed, 25 Jan 2017 15:53:03 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B523226E96
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 25 Jan 2017 15:53:02 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751940AbdAYPwy (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 25 Jan 2017 10:52:54 -0500
Received: from smtp.codeaurora.org ([198.145.29.96]:40934 &quot;EHLO
	smtp.codeaurora.org&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751887AbdAYPwu (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 25 Jan 2017 10:52:50 -0500
Received: by smtp.codeaurora.org (Postfix, from userid 1000)
	id 0F79F609C1; Wed, 25 Jan 2017 15:52:48 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
	s=default; t=1485359569;
	bh=ktikwK2o9WudZGgbPjVsrkpBvsZ86lt4YTtwIdyDlfY=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=NbgIlFZ/Wa4jiQRMYglxB+Rs7oNC5xNstLckLvBwGb6SIE3XwKWhwonpXwXgiX/7x
	tL/WLqxCmM/CvQTlb29YcNP8s+JPgCQc9S/4onqSTxNJgq31ZAbXhx2leoNr60v+/M
	eIae5//eD63jvyNwtRoIxtIPGPh4jIzex+V3jYKM=
Received: from illium.qualcomm.com (global_nat1_iad_fw.qualcomm.com
	[129.46.232.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
	(No client certificate requested)
	(Authenticated sender: cov@smtp.codeaurora.org)
	by smtp.codeaurora.org (Postfix) with ESMTPSA id 49D326084B;
	Wed, 25 Jan 2017 15:52:45 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=codeaurora.org;
	s=default; t=1485359567;
	bh=ktikwK2o9WudZGgbPjVsrkpBvsZ86lt4YTtwIdyDlfY=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=F4FyZDQBflG3Vtp+cbZ/agnDwFfnZzeNyrsNjED6rw6YmbkWQbkpGool7U+2Sn87N
	fqXyIx8Yw73/jdtbv2BbKqM+X8TkoM9ek94hQV5sFawfOZsmO+P1xeUACIZ0qZBw2S
	9a2OjaCHunYCbEq31cWRfSjDXE4uBdZA2+JWX2Ns=
DMARC-Filter: OpenDMARC Filter v1.3.2 smtp.codeaurora.org 49D326084B
Authentication-Results: pdx-caf-mail.web.codeaurora.org;
	dmarc=none (p=none dis=none)
	header.from=codeaurora.org
Authentication-Results: pdx-caf-mail.web.codeaurora.org;
	spf=none smtp.mailfrom=cov@codeaurora.org
From: Christopher Covington &lt;cov@codeaurora.org&gt;
To: Paolo Bonzini &lt;pbonzini@redhat.com&gt;,
	=?UTF-8?q?Radim=20Kr=C4=8Dm=C3=A1=C5=99?= &lt;rkrcmar@redhat.com&gt;,
	Christoffer Dall &lt;christoffer.dall@linaro.org&gt;,
	Marc Zyngier &lt;marc.zyngier@arm.com&gt;,
	Catalin Marinas &lt;catalin.marinas@arm.com&gt;,
	Will Deacon &lt;will.deacon@arm.com&gt;, kvm@vger.kernel.org,
	linux-arm-kernel@lists.infradead.org, kvmarm@lists.cs.columbia.edu,
	linux-kernel@vger.kernel.org, shankerd@codeaurora.org,
	timur@codeaurora.org
Cc: Mark Langsdorf &lt;mlangsdo@redhat.com&gt;,
	Mark Salter &lt;msalter@redhat.com&gt;, Jon Masters &lt;jcm@redhat.com&gt;,
	Neil Leeder &lt;nleeder@codeaurora.org&gt;,
	Christopher Covington &lt;cov@codeaurora.org&gt;
Subject: [PATCH v4 3/4] arm64: Use __tlbi() macros in KVM code
Date: Wed, 25 Jan 2017 10:52:31 -0500
Message-Id: &lt;20170125155232.10277-3-cov@codeaurora.org&gt;
X-Mailer: git-send-email 2.9.3
In-Reply-To: &lt;20170125155232.10277-1-cov@codeaurora.org&gt;
References: &lt;20170125155232.10277-1-cov@codeaurora.org&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=41311">Christopher Covington</a> - Jan. 25, 2017, 3:52 p.m.</div>
<pre class="content">
Refactor the KVM code to use the __tlbi macros, which will allow an errata
workaround that repeats tlbi dsb sequences to only change one location.
This is not intended to change the generated assembly and comparing before
and after vmlinux objdump shows no functional changes.
<span class="signed-off-by">
Signed-off-by: Christopher Covington &lt;cov@codeaurora.org&gt;</span>
---
 arch/arm64/kvm/hyp/tlb.c | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=68151">Christoffer Dall</a> - Jan. 25, 2017, 7:39 p.m.</div>
<pre class="content">
On Wed, Jan 25, 2017 at 10:52:31AM -0500, Christopher Covington wrote:
<span class="quote">&gt; Refactor the KVM code to use the __tlbi macros, which will allow an errata</span>
<span class="quote">&gt; workaround that repeats tlbi dsb sequences to only change one location.</span>
<span class="quote">&gt; This is not intended to change the generated assembly and comparing before</span>
<span class="quote">&gt; and after vmlinux objdump shows no functional changes.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Christopher Covington &lt;cov@codeaurora.org&gt;</span>
<span class="acked-by">
Acked-by: Christoffer Dall &lt;christoffer.dall@linaro.org&gt;</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7096">Will Deacon</a> - Jan. 27, 2017, 1:53 p.m.</div>
<pre class="content">
On Wed, Jan 25, 2017 at 08:39:43PM +0100, Christoffer Dall wrote:
<span class="quote">&gt; On Wed, Jan 25, 2017 at 10:52:31AM -0500, Christopher Covington wrote:</span>
<span class="quote">&gt; &gt; Refactor the KVM code to use the __tlbi macros, which will allow an errata</span>
<span class="quote">&gt; &gt; workaround that repeats tlbi dsb sequences to only change one location.</span>
<span class="quote">&gt; &gt; This is not intended to change the generated assembly and comparing before</span>
<span class="quote">&gt; &gt; and after vmlinux objdump shows no functional changes.</span>
<span class="quote">&gt; &gt; </span>
<span class="quote">&gt; &gt; Signed-off-by: Christopher Covington &lt;cov@codeaurora.org&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Acked-by: Christoffer Dall &lt;christoffer.dall@linaro.org&gt;</span>

Thanks, I&#39;ll queue this one via arm64.

Will
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7096">Will Deacon</a> - Jan. 27, 2017, 3:03 p.m.</div>
<pre class="content">
On Wed, Jan 25, 2017 at 10:52:31AM -0500, Christopher Covington wrote:
<span class="quote">&gt; Refactor the KVM code to use the __tlbi macros, which will allow an errata</span>
<span class="quote">&gt; workaround that repeats tlbi dsb sequences to only change one location.</span>
<span class="quote">&gt; This is not intended to change the generated assembly and comparing before</span>
<span class="quote">&gt; and after vmlinux objdump shows no functional changes.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Christopher Covington &lt;cov@codeaurora.org&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/arm64/kvm/hyp/tlb.c | 13 +++++++------</span>
<span class="quote">&gt;  1 file changed, 7 insertions(+), 6 deletions(-)</span>

[...]
<span class="quote">
&gt; @@ -82,7 +83,7 @@ void __hyp_text __kvm_tlb_flush_local_vmid(struct kvm_vcpu *vcpu)</span>
<span class="quote">&gt;  void __hyp_text __kvm_flush_vm_context(void)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	dsb(ishst);</span>
<span class="quote">&gt; -	asm volatile(&quot;tlbi alle1is	\n&quot;</span>
<span class="quote">&gt; -		     &quot;ic ialluis	  &quot;: : );</span>
<span class="quote">&gt; +	__tlbi(alle1is);</span>
<span class="quote">&gt; +	asm volatile(&quot;ic ialluis&quot; : : );</span>
<span class="quote">&gt;  	dsb(ish);</span>

Should be a separate patch, but this can now be a __flush_icache_all instead
of the open-coded asm.

Will
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=58591">Punit Agrawal</a> - Feb. 1, 2017, 5:02 p.m.</div>
<pre class="content">
Will Deacon &lt;will.deacon@arm.com&gt; writes:
<span class="quote">
&gt; On Wed, Jan 25, 2017 at 08:39:43PM +0100, Christoffer Dall wrote:</span>
<span class="quote">&gt;&gt; On Wed, Jan 25, 2017 at 10:52:31AM -0500, Christopher Covington wrote:</span>
<span class="quote">&gt;&gt; &gt; Refactor the KVM code to use the __tlbi macros, which will allow an errata</span>
<span class="quote">&gt;&gt; &gt; workaround that repeats tlbi dsb sequences to only change one location.</span>
<span class="quote">&gt;&gt; &gt; This is not intended to change the generated assembly and comparing before</span>
<span class="quote">&gt;&gt; &gt; and after vmlinux objdump shows no functional changes.</span>
<span class="quote">&gt;&gt; &gt; </span>
<span class="quote">&gt;&gt; &gt; Signed-off-by: Christopher Covington &lt;cov@codeaurora.org&gt;</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; Acked-by: Christoffer Dall &lt;christoffer.dall@linaro.org&gt;</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Thanks, I&#39;ll queue this one via arm64.</span>

I just noticed this patch but there&#39;s been a similar patch from Mark
that I&#39;ve been carrying as part of the KVM TLB monitoring series[0].

[0] http://www.mail-archive.com/kvmarm@lists.cs.columbia.edu/msg09359.html
<span class="quote">
&gt;</span>
<span class="quote">&gt; Will</span>
<span class="quote">&gt; _______________________________________________</span>
<span class="quote">&gt; kvmarm mailing list</span>
<span class="quote">&gt; kvmarm@lists.cs.columbia.edu</span>
<span class="quote">&gt; https://lists.cs.columbia.edu/mailman/listinfo/kvmarm</span>
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7096">Will Deacon</a> - Feb. 1, 2017, 5:08 p.m.</div>
<pre class="content">
On Wed, Feb 01, 2017 at 05:02:43PM +0000, Punit Agrawal wrote:
<span class="quote">&gt; Will Deacon &lt;will.deacon@arm.com&gt; writes:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; &gt; On Wed, Jan 25, 2017 at 08:39:43PM +0100, Christoffer Dall wrote:</span>
<span class="quote">&gt; &gt;&gt; On Wed, Jan 25, 2017 at 10:52:31AM -0500, Christopher Covington wrote:</span>
<span class="quote">&gt; &gt;&gt; &gt; Refactor the KVM code to use the __tlbi macros, which will allow an errata</span>
<span class="quote">&gt; &gt;&gt; &gt; workaround that repeats tlbi dsb sequences to only change one location.</span>
<span class="quote">&gt; &gt;&gt; &gt; This is not intended to change the generated assembly and comparing before</span>
<span class="quote">&gt; &gt;&gt; &gt; and after vmlinux objdump shows no functional changes.</span>
<span class="quote">&gt; &gt;&gt; &gt; </span>
<span class="quote">&gt; &gt;&gt; &gt; Signed-off-by: Christopher Covington &lt;cov@codeaurora.org&gt;</span>
<span class="quote">&gt; &gt;&gt; </span>
<span class="quote">&gt; &gt;&gt; Acked-by: Christoffer Dall &lt;christoffer.dall@linaro.org&gt;</span>
<span class="quote">&gt; &gt;</span>
<span class="quote">&gt; &gt; Thanks, I&#39;ll queue this one via arm64.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; I just noticed this patch but there&#39;s been a similar patch from Mark</span>
<span class="quote">&gt; that I&#39;ve been carrying as part of the KVM TLB monitoring series[0].</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; [0] http://www.mail-archive.com/kvmarm@lists.cs.columbia.edu/msg09359.html</span>

Well I&#39;ve already queued the one from Christopher. It&#39;s weird that Mark&#39;s
version appears to miss the local VMID case (but it does have the
flush_icache_all I wanted :).

Anyway, I&#39;m not reverting anything, so you&#39;ll need to rebase when this
lot lands in mainline.

Will
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=58591">Punit Agrawal</a> - Feb. 1, 2017, 5:14 p.m.</div>
<pre class="content">
Will Deacon &lt;will.deacon@arm.com&gt; writes:
<span class="quote">
&gt; On Wed, Feb 01, 2017 at 05:02:43PM +0000, Punit Agrawal wrote:</span>
<span class="quote">&gt;&gt; Will Deacon &lt;will.deacon@arm.com&gt; writes:</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; &gt; On Wed, Jan 25, 2017 at 08:39:43PM +0100, Christoffer Dall wrote:</span>
<span class="quote">&gt;&gt; &gt;&gt; On Wed, Jan 25, 2017 at 10:52:31AM -0500, Christopher Covington wrote:</span>
<span class="quote">&gt;&gt; &gt;&gt; &gt; Refactor the KVM code to use the __tlbi macros, which will allow an errata</span>
<span class="quote">&gt;&gt; &gt;&gt; &gt; workaround that repeats tlbi dsb sequences to only change one location.</span>
<span class="quote">&gt;&gt; &gt;&gt; &gt; This is not intended to change the generated assembly and comparing before</span>
<span class="quote">&gt;&gt; &gt;&gt; &gt; and after vmlinux objdump shows no functional changes.</span>
<span class="quote">&gt;&gt; &gt;&gt; &gt; </span>
<span class="quote">&gt;&gt; &gt;&gt; &gt; Signed-off-by: Christopher Covington &lt;cov@codeaurora.org&gt;</span>
<span class="quote">&gt;&gt; &gt;&gt; </span>
<span class="quote">&gt;&gt; &gt;&gt; Acked-by: Christoffer Dall &lt;christoffer.dall@linaro.org&gt;</span>
<span class="quote">&gt;&gt; &gt;</span>
<span class="quote">&gt;&gt; &gt; Thanks, I&#39;ll queue this one via arm64.</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; I just noticed this patch but there&#39;s been a similar patch from Mark</span>
<span class="quote">&gt;&gt; that I&#39;ve been carrying as part of the KVM TLB monitoring series[0].</span>
<span class="quote">&gt;&gt; </span>
<span class="quote">&gt;&gt; [0] http://www.mail-archive.com/kvmarm@lists.cs.columbia.edu/msg09359.html</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Well I&#39;ve already queued the one from Christopher. It&#39;s weird that Mark&#39;s</span>
<span class="quote">&gt; version appears to miss the local VMID case (but it does have the</span>
<span class="quote">&gt; flush_icache_all I wanted :).</span>
<span class="quote">&gt;</span>
<span class="quote">&gt; Anyway, I&#39;m not reverting anything, so you&#39;ll need to rebase when this</span>
<span class="quote">&gt; lot lands in mainline.</span>

Sure. I&#39;ll drop the patch the next time around.

The patch is unrelated to that series and should&#39;ve gone in when
we introduced the __tlbi() macro but got left out somehow.
<span class="quote">
&gt;</span>
<span class="quote">&gt; Will</span>
<span class="quote">&gt; _______________________________________________</span>
<span class="quote">&gt; kvmarm mailing list</span>
<span class="quote">&gt; kvmarm@lists.cs.columbia.edu</span>
<span class="quote">&gt; https://lists.cs.columbia.edu/mailman/listinfo/kvmarm</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/arm64/kvm/hyp/tlb.c b/arch/arm64/kvm/hyp/tlb.c</span>
<span class="p_header">index 88e2f2b938f0..e8e7ba2bc11f 100644</span>
<span class="p_header">--- a/arch/arm64/kvm/hyp/tlb.c</span>
<span class="p_header">+++ b/arch/arm64/kvm/hyp/tlb.c</span>
<span class="p_chunk">@@ -16,6 +16,7 @@</span> <span class="p_context"></span>
  */
 
 #include &lt;asm/kvm_hyp.h&gt;
<span class="p_add">+#include &lt;asm/tlbflush.h&gt;</span>
 
 void __hyp_text __kvm_tlb_flush_vmid_ipa(struct kvm *kvm, phys_addr_t ipa)
 {
<span class="p_chunk">@@ -32,7 +33,7 @@</span> <span class="p_context"> void __hyp_text __kvm_tlb_flush_vmid_ipa(struct kvm *kvm, phys_addr_t ipa)</span>
 	 * whole of Stage-1. Weep...
 	 */
 	ipa &gt;&gt;= 12;
<span class="p_del">-	asm volatile(&quot;tlbi ipas2e1is, %0&quot; : : &quot;r&quot; (ipa));</span>
<span class="p_add">+	__tlbi(ipas2e1is, ipa);</span>
 
 	/*
 	 * We have to ensure completion of the invalidation at Stage-2,
<span class="p_chunk">@@ -41,7 +42,7 @@</span> <span class="p_context"> void __hyp_text __kvm_tlb_flush_vmid_ipa(struct kvm *kvm, phys_addr_t ipa)</span>
 	 * the Stage-1 invalidation happened first.
 	 */
 	dsb(ish);
<span class="p_del">-	asm volatile(&quot;tlbi vmalle1is&quot; : : );</span>
<span class="p_add">+	__tlbi(vmalle1is);</span>
 	dsb(ish);
 	isb();
 
<span class="p_chunk">@@ -57,7 +58,7 @@</span> <span class="p_context"> void __hyp_text __kvm_tlb_flush_vmid(struct kvm *kvm)</span>
 	write_sysreg(kvm-&gt;arch.vttbr, vttbr_el2);
 	isb();
 
<span class="p_del">-	asm volatile(&quot;tlbi vmalls12e1is&quot; : : );</span>
<span class="p_add">+	__tlbi(vmalls12e1is);</span>
 	dsb(ish);
 	isb();
 
<span class="p_chunk">@@ -72,7 +73,7 @@</span> <span class="p_context"> void __hyp_text __kvm_tlb_flush_local_vmid(struct kvm_vcpu *vcpu)</span>
 	write_sysreg(kvm-&gt;arch.vttbr, vttbr_el2);
 	isb();
 
<span class="p_del">-	asm volatile(&quot;tlbi vmalle1&quot; : : );</span>
<span class="p_add">+	__tlbi(vmalle1);</span>
 	dsb(nsh);
 	isb();
 
<span class="p_chunk">@@ -82,7 +83,7 @@</span> <span class="p_context"> void __hyp_text __kvm_tlb_flush_local_vmid(struct kvm_vcpu *vcpu)</span>
 void __hyp_text __kvm_flush_vm_context(void)
 {
 	dsb(ishst);
<span class="p_del">-	asm volatile(&quot;tlbi alle1is	\n&quot;</span>
<span class="p_del">-		     &quot;ic ialluis	  &quot;: : );</span>
<span class="p_add">+	__tlbi(alle1is);</span>
<span class="p_add">+	asm volatile(&quot;ic ialluis&quot; : : );</span>
 	dsb(ish);
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



