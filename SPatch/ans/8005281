
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[GIT,PULL] x86/mm changes for v4.5 - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [GIT,PULL] x86/mm changes for v4.5</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Jan. 11, 2016, 3:05 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20160111150543.GA27318@gmail.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/8005281/mbox/"
   >mbox</a>
|
   <a href="/patch/8005281/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/8005281/">/patch/8005281/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 2480F9F1C0
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 11 Jan 2016 15:05:56 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id BF473201FE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 11 Jan 2016 15:05:54 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id D8666202FE
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 11 Jan 2016 15:05:52 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1760326AbcAKPFt (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 11 Jan 2016 10:05:49 -0500
Received: from mail-wm0-f68.google.com ([74.125.82.68]:36030 &quot;EHLO
	mail-wm0-f68.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1757521AbcAKPFr (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 11 Jan 2016 10:05:47 -0500
Received: by mail-wm0-f68.google.com with SMTP id l65so26669983wmf.3
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Mon, 11 Jan 2016 07:05:47 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20120113;
	h=sender:date:from:to:cc:subject:message-id:mime-version:content-type
	:content-disposition:user-agent;
	bh=sBDIuVkG4CV3R2frknA1WUvgulPbvEt2uWTlzteyFCk=;
	b=ztpMuWhSeoKcg2TVNITNHW4nUiod618jszi9tUja0z6/TChoFj3PdBcfIEEk7Ro7XQ
	uHLH+QiCtZiaDqMvZJAH/dABRETdjzqUjpz3NSI/SftNjO0ipqT4vee3REmca9ksTDW4
	PaWSHf2AmBtLBdxHh12etO7wYc7D2ZdXiZe47s3kOqSSWneZvQ3UUg5SwoB3M3pD62yF
	Taz1fbD0fFP+GufEdA05U3Qy1nHd6rMGyeipaJFIkTUSJ2ySbZeUXPiZ2pgyIHr+E5fC
	Nb+jsZNQbFZpk7rI08KOn1Vd5YpnVdEhkjqBWvINxKBvaBxrhFCp1URCnainFBhsn/Ru
	ddLg==
X-Received: by 10.28.111.194 with SMTP id c63mr14586695wmi.90.1452524746451; 
	Mon, 11 Jan 2016 07:05:46 -0800 (PST)
Received: from gmail.com (54033495.catv.pool.telekom.hu. [84.3.52.149])
	by smtp.gmail.com with ESMTPSA id
	v82sm13250230wmv.12.2016.01.11.07.05.45
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Mon, 11 Jan 2016 07:05:45 -0800 (PST)
Date: Mon, 11 Jan 2016 16:05:43 +0100
From: Ingo Molnar &lt;mingo@kernel.org&gt;
To: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: linux-kernel@vger.kernel.org, Thomas Gleixner &lt;tglx@linutronix.de&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;,
	Peter Zijlstra &lt;a.p.zijlstra@chello.nl&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;
Subject: [GIT PULL] x86/mm changes for v4.5
Message-ID: &lt;20160111150543.GA27318@gmail.com&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.23 (2014-03-12)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-6.8 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI,RP_MATCHES_RCVD,T_DKIM_INVALID,UNPARSEABLE_RELAY
	autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=35552">Ingo Molnar</a> - Jan. 11, 2016, 3:05 p.m.</div>
<pre class="content">
Linus,

Please pull the latest x86-mm-for-linus git tree from:

   git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git x86-mm-for-linus

   # HEAD: 1f1a89ac05f6e88aa341e86e57435fdbb1177c0c x86/mm: Micro-optimise clflush_cache_range()

The main changes in this cycle were:

 - make the debugfs &#39;kernel_page_tables&#39; file read-only, as it only has read ops. 
   (Borislav Petkov)

 - micro-optimize clflush_cache_range() (Chris Wilson)

 - swiotlb enhancements, which fixes certain KVM emulated devices (Igor Mammedov)

 - fix an LDT related debug message (Jan Beulich)

 - modularize CONFIG_X86_PTDUMP (Kees Cook)

 - tone down an overly alarming warning (Laura Abbott)

 - Mark variable __initdata (Rasmus Villemoes)

 - PAT additions (Toshi Kani)

  out-of-topic modifications in x86-mm-for-linus:
  -------------------------------------------------
  include/asm-generic/pgtable.h      # d9fe4fab1197: x86/mm/pat: Add untrack_pfn_
  include/linux/bootmem.h            # 8dd330300197: x86/mm: Introduce max_possib
  mm/bootmem.c                       # 8dd330300197: x86/mm: Introduce max_possib
  mm/mremap.c                        # d9fe4fab1197: x86/mm/pat: Add untrack_pfn_
  mm/nobootmem.c                     # 8dd330300197: x86/mm: Introduce max_possib

 Thanks,

	Ingo

------------------&gt;
Borislav Petkov (1):
      x86/mm/ptdump: Make (debugfs)/kernel_page_tables read-only

Chris Wilson (1):
      x86/mm: Micro-optimise clflush_cache_range()

Igor Mammedov (2):
      x86/mm: Introduce max_possible_pfn
      x86/mm/64: Enable SWIOTLB if system has SRAT memory regions above MAX_DMA32_PFN

Jan Beulich (1):
      x86/LDT: Print the real LDT base address

Kees Cook (1):
      x86/mm: Turn CONFIG_X86_PTDUMP into a module

Laura Abbott (1):
      x86/mm: Drop WARN from multi-BAR check

Rasmus Villemoes (1):
      x86/mm/mtrr: Mark the &#39;range_new&#39; static variable in mtrr_calc_range_state() as __initdata

Toshi Kani (2):
      x86/mm/pat: Add untrack_pfn_moved for mremap
      x86/mm/pat: Change free_memtype() to support shrinking case


 arch/x86/Kconfig.debug             |  2 +-
 arch/x86/kernel/cpu/mtrr/cleanup.c | 11 ++++++--
 arch/x86/kernel/pci-swiotlb.c      |  2 +-
 arch/x86/kernel/process_64.c       |  2 +-
 arch/x86/kernel/setup.c            |  2 ++
 arch/x86/mm/Makefile               |  1 +
 arch/x86/mm/debug_pagetables.c     | 46 +++++++++++++++++++++++++++++++++
 arch/x86/mm/dump_pagetables.c      | 34 ++-----------------------
 arch/x86/mm/ioremap.c              |  4 +--
 arch/x86/mm/pageattr.c             | 10 +++++---
 arch/x86/mm/pat.c                  | 12 ++++++++-
 arch/x86/mm/pat_rbtree.c           | 52 +++++++++++++++++++++++++++++++-------
 arch/x86/mm/srat.c                 |  2 ++
 include/asm-generic/pgtable.h      | 10 +++++++-
 include/linux/bootmem.h            |  4 +++
 mm/bootmem.c                       |  1 +
 mm/mremap.c                        |  4 +++
 mm/nobootmem.c                     |  1 +
 18 files changed, 146 insertions(+), 54 deletions(-)
 create mode 100644 arch/x86/mm/debug_pagetables.c
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/Kconfig.debug b/arch/x86/Kconfig.debug</span>
<span class="p_header">index 137dfa96aa14..110253ce83af 100644</span>
<span class="p_header">--- a/arch/x86/Kconfig.debug</span>
<span class="p_header">+++ b/arch/x86/Kconfig.debug</span>
<span class="p_chunk">@@ -69,7 +69,7 @@</span> <span class="p_context"> config X86_PTDUMP_CORE</span>
 	def_bool n
 
 config X86_PTDUMP
<span class="p_del">-	bool &quot;Export kernel pagetable layout to userspace via debugfs&quot;</span>
<span class="p_add">+	tristate &quot;Export kernel pagetable layout to userspace via debugfs&quot;</span>
 	depends on DEBUG_KERNEL
 	select DEBUG_FS
 	select X86_PTDUMP_CORE
<span class="p_header">diff --git a/arch/x86/kernel/cpu/mtrr/cleanup.c b/arch/x86/kernel/cpu/mtrr/cleanup.c</span>
<span class="p_header">index 70d7c93f4550..0d98503c2245 100644</span>
<span class="p_header">--- a/arch/x86/kernel/cpu/mtrr/cleanup.c</span>
<span class="p_header">+++ b/arch/x86/kernel/cpu/mtrr/cleanup.c</span>
<span class="p_chunk">@@ -593,9 +593,16 @@</span> <span class="p_context"> mtrr_calc_range_state(u64 chunk_size, u64 gran_size,</span>
 		      unsigned long x_remove_base,
 		      unsigned long x_remove_size, int i)
 {
<span class="p_del">-	static struct range range_new[RANGE_NUM];</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * range_new should really be an automatic variable, but</span>
<span class="p_add">+	 * putting 4096 bytes on the stack is frowned upon, to put it</span>
<span class="p_add">+	 * mildly. It is safe to make it a static __initdata variable,</span>
<span class="p_add">+	 * since mtrr_calc_range_state is only called during init and</span>
<span class="p_add">+	 * there&#39;s no way it will call itself recursively.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	static struct range range_new[RANGE_NUM] __initdata;</span>
 	unsigned long range_sums_new;
<span class="p_del">-	static int nr_range_new;</span>
<span class="p_add">+	int nr_range_new;</span>
 	int num_reg;
 
 	/* Convert ranges to var ranges state: */
<span class="p_header">diff --git a/arch/x86/kernel/pci-swiotlb.c b/arch/x86/kernel/pci-swiotlb.c</span>
<span class="p_header">index adf0392d549a..7c577a178859 100644</span>
<span class="p_header">--- a/arch/x86/kernel/pci-swiotlb.c</span>
<span class="p_header">+++ b/arch/x86/kernel/pci-swiotlb.c</span>
<span class="p_chunk">@@ -88,7 +88,7 @@</span> <span class="p_context"> int __init pci_swiotlb_detect_4gb(void)</span>
 {
 	/* don&#39;t initialize swiotlb if iommu=off (no_iommu=1) */
 #ifdef CONFIG_X86_64
<span class="p_del">-	if (!no_iommu &amp;&amp; max_pfn &gt; MAX_DMA32_PFN)</span>
<span class="p_add">+	if (!no_iommu &amp;&amp; max_possible_pfn &gt; MAX_DMA32_PFN)</span>
 		swiotlb = 1;
 #endif
 	return swiotlb;
<span class="p_header">diff --git a/arch/x86/kernel/process_64.c b/arch/x86/kernel/process_64.c</span>
<span class="p_header">index e835d263a33b..b9d99e0f82c4 100644</span>
<span class="p_header">--- a/arch/x86/kernel/process_64.c</span>
<span class="p_header">+++ b/arch/x86/kernel/process_64.c</span>
<span class="p_chunk">@@ -125,7 +125,7 @@</span> <span class="p_context"> void release_thread(struct task_struct *dead_task)</span>
 		if (dead_task-&gt;mm-&gt;context.ldt) {
 			pr_warn(&quot;WARNING: dead process %s still has LDT? &lt;%p/%d&gt;\n&quot;,
 				dead_task-&gt;comm,
<span class="p_del">-				dead_task-&gt;mm-&gt;context.ldt,</span>
<span class="p_add">+				dead_task-&gt;mm-&gt;context.ldt-&gt;entries,</span>
 				dead_task-&gt;mm-&gt;context.ldt-&gt;size);
 			BUG();
 		}
<span class="p_header">diff --git a/arch/x86/kernel/setup.c b/arch/x86/kernel/setup.c</span>
<span class="p_header">index 29db25f9a745..16a846548ece 100644</span>
<span class="p_header">--- a/arch/x86/kernel/setup.c</span>
<span class="p_header">+++ b/arch/x86/kernel/setup.c</span>
<span class="p_chunk">@@ -1048,6 +1048,8 @@</span> <span class="p_context"> void __init setup_arch(char **cmdline_p)</span>
 	if (mtrr_trim_uncached_memory(max_pfn))
 		max_pfn = e820_end_of_ram_pfn();
 
<span class="p_add">+	max_possible_pfn = max_pfn;</span>
<span class="p_add">+</span>
 #ifdef CONFIG_X86_32
 	/* max_low_pfn get updated here */
 	find_low_pfn_range();
<span class="p_header">diff --git a/arch/x86/mm/Makefile b/arch/x86/mm/Makefile</span>
<span class="p_header">index 65c47fda26fc..f9d38a48e3c8 100644</span>
<span class="p_header">--- a/arch/x86/mm/Makefile</span>
<span class="p_header">+++ b/arch/x86/mm/Makefile</span>
<span class="p_chunk">@@ -15,6 +15,7 @@</span> <span class="p_context"> obj-$(CONFIG_X86_32)		+= pgtable_32.o iomap_32.o</span>
 
 obj-$(CONFIG_HUGETLB_PAGE)	+= hugetlbpage.o
 obj-$(CONFIG_X86_PTDUMP_CORE)	+= dump_pagetables.o
<span class="p_add">+obj-$(CONFIG_X86_PTDUMP)	+= debug_pagetables.o</span>
 
 obj-$(CONFIG_HIGHMEM)		+= highmem_32.o
 
<span class="p_header">diff --git a/arch/x86/mm/debug_pagetables.c b/arch/x86/mm/debug_pagetables.c</span>
new file mode 100644
<span class="p_header">index 000000000000..bfcffdf6c577</span>
<span class="p_header">--- /dev/null</span>
<span class="p_header">+++ b/arch/x86/mm/debug_pagetables.c</span>
<span class="p_chunk">@@ -0,0 +1,46 @@</span> <span class="p_context"></span>
<span class="p_add">+#include &lt;linux/debugfs.h&gt;</span>
<span class="p_add">+#include &lt;linux/module.h&gt;</span>
<span class="p_add">+#include &lt;linux/seq_file.h&gt;</span>
<span class="p_add">+#include &lt;asm/pgtable.h&gt;</span>
<span class="p_add">+</span>
<span class="p_add">+static int ptdump_show(struct seq_file *m, void *v)</span>
<span class="p_add">+{</span>
<span class="p_add">+	ptdump_walk_pgd_level(m, NULL);</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static int ptdump_open(struct inode *inode, struct file *filp)</span>
<span class="p_add">+{</span>
<span class="p_add">+	return single_open(filp, ptdump_show, NULL);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static const struct file_operations ptdump_fops = {</span>
<span class="p_add">+	.owner		= THIS_MODULE,</span>
<span class="p_add">+	.open		= ptdump_open,</span>
<span class="p_add">+	.read		= seq_read,</span>
<span class="p_add">+	.llseek		= seq_lseek,</span>
<span class="p_add">+	.release	= single_release,</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+static struct dentry *pe;</span>
<span class="p_add">+</span>
<span class="p_add">+static int __init pt_dump_debug_init(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	pe = debugfs_create_file(&quot;kernel_page_tables&quot;, S_IRUSR, NULL, NULL,</span>
<span class="p_add">+				 &amp;ptdump_fops);</span>
<span class="p_add">+	if (!pe)</span>
<span class="p_add">+		return -ENOMEM;</span>
<span class="p_add">+</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static void __exit pt_dump_debug_exit(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	debugfs_remove_recursive(pe);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+module_init(pt_dump_debug_init);</span>
<span class="p_add">+module_exit(pt_dump_debug_exit);</span>
<span class="p_add">+MODULE_LICENSE(&quot;GPL&quot;);</span>
<span class="p_add">+MODULE_AUTHOR(&quot;Arjan van de Ven &lt;arjan@linux.intel.com&gt;&quot;);</span>
<span class="p_add">+MODULE_DESCRIPTION(&quot;Kernel debugging helper that dumps pagetables&quot;);</span>
<span class="p_header">diff --git a/arch/x86/mm/dump_pagetables.c b/arch/x86/mm/dump_pagetables.c</span>
<span class="p_header">index a035c2aa7801..90a1dc054873 100644</span>
<span class="p_header">--- a/arch/x86/mm/dump_pagetables.c</span>
<span class="p_header">+++ b/arch/x86/mm/dump_pagetables.c</span>
<span class="p_chunk">@@ -426,38 +426,15 @@</span> <span class="p_context"> void ptdump_walk_pgd_level(struct seq_file *m, pgd_t *pgd)</span>
 {
 	ptdump_walk_pgd_level_core(m, pgd, false);
 }
<span class="p_add">+EXPORT_SYMBOL_GPL(ptdump_walk_pgd_level);</span>
 
 void ptdump_walk_pgd_level_checkwx(void)
 {
 	ptdump_walk_pgd_level_core(NULL, NULL, true);
 }
 
<span class="p_del">-#ifdef CONFIG_X86_PTDUMP</span>
<span class="p_del">-static int ptdump_show(struct seq_file *m, void *v)</span>
<span class="p_add">+static int __init pt_dump_init(void)</span>
 {
<span class="p_del">-	ptdump_walk_pgd_level(m, NULL);</span>
<span class="p_del">-	return 0;</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static int ptdump_open(struct inode *inode, struct file *filp)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return single_open(filp, ptdump_show, NULL);</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
<span class="p_del">-static const struct file_operations ptdump_fops = {</span>
<span class="p_del">-	.open		= ptdump_open,</span>
<span class="p_del">-	.read		= seq_read,</span>
<span class="p_del">-	.llseek		= seq_lseek,</span>
<span class="p_del">-	.release	= single_release,</span>
<span class="p_del">-};</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
<span class="p_del">-static int pt_dump_init(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-#ifdef CONFIG_X86_PTDUMP</span>
<span class="p_del">-	struct dentry *pe;</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
 #ifdef CONFIG_X86_32
 	/* Not a compile-time constant on x86-32 */
 	address_markers[VMALLOC_START_NR].start_address = VMALLOC_START;
<span class="p_chunk">@@ -468,13 +445,6 @@</span> <span class="p_context"> static int pt_dump_init(void)</span>
 	address_markers[FIXADDR_START_NR].start_address = FIXADDR_START;
 #endif
 
<span class="p_del">-#ifdef CONFIG_X86_PTDUMP</span>
<span class="p_del">-	pe = debugfs_create_file(&quot;kernel_page_tables&quot;, 0600, NULL, NULL,</span>
<span class="p_del">-				 &amp;ptdump_fops);</span>
<span class="p_del">-	if (!pe)</span>
<span class="p_del">-		return -ENOMEM;</span>
<span class="p_del">-#endif</span>
<span class="p_del">-</span>
 	return 0;
 }
 
<span class="p_header">diff --git a/arch/x86/mm/ioremap.c b/arch/x86/mm/ioremap.c</span>
<span class="p_header">index b9c78f3bcd67..0d8d53d1f5cc 100644</span>
<span class="p_header">--- a/arch/x86/mm/ioremap.c</span>
<span class="p_header">+++ b/arch/x86/mm/ioremap.c</span>
<span class="p_chunk">@@ -194,8 +194,8 @@</span> <span class="p_context"> static void __iomem *__ioremap_caller(resource_size_t phys_addr,</span>
 	 * Check if the request spans more than any BAR in the iomem resource
 	 * tree.
 	 */
<span class="p_del">-	WARN_ONCE(iomem_map_sanity_check(unaligned_phys_addr, unaligned_size),</span>
<span class="p_del">-		  KERN_INFO &quot;Info: mapping multiple BARs. Your kernel is fine.&quot;);</span>
<span class="p_add">+	if (iomem_map_sanity_check(unaligned_phys_addr, unaligned_size))</span>
<span class="p_add">+		pr_warn(&quot;caller %pS mapping multiple BARs\n&quot;, caller);</span>
 
 	return ret_addr;
 err_free_area:
<span class="p_header">diff --git a/arch/x86/mm/pageattr.c b/arch/x86/mm/pageattr.c</span>
<span class="p_header">index a3137a4feed1..6000ad7f560c 100644</span>
<span class="p_header">--- a/arch/x86/mm/pageattr.c</span>
<span class="p_header">+++ b/arch/x86/mm/pageattr.c</span>
<span class="p_chunk">@@ -129,14 +129,16 @@</span> <span class="p_context"> within(unsigned long addr, unsigned long start, unsigned long end)</span>
  */
 void clflush_cache_range(void *vaddr, unsigned int size)
 {
<span class="p_del">-	unsigned long clflush_mask = boot_cpu_data.x86_clflush_size - 1;</span>
<span class="p_add">+	const unsigned long clflush_size = boot_cpu_data.x86_clflush_size;</span>
<span class="p_add">+	void *p = (void *)((unsigned long)vaddr &amp; ~(clflush_size - 1));</span>
 	void *vend = vaddr + size;
<span class="p_del">-	void *p;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (p &gt;= vend)</span>
<span class="p_add">+		return;</span>
 
 	mb();
 
<span class="p_del">-	for (p = (void *)((unsigned long)vaddr &amp; ~clflush_mask);</span>
<span class="p_del">-	     p &lt; vend; p += boot_cpu_data.x86_clflush_size)</span>
<span class="p_add">+	for (; p &lt; vend; p += clflush_size)</span>
 		clflushopt(p);
 
 	mb();
<span class="p_header">diff --git a/arch/x86/mm/pat.c b/arch/x86/mm/pat.c</span>
<span class="p_header">index 188e3e07eeeb..031782e74231 100644</span>
<span class="p_header">--- a/arch/x86/mm/pat.c</span>
<span class="p_header">+++ b/arch/x86/mm/pat.c</span>
<span class="p_chunk">@@ -586,7 +586,7 @@</span> <span class="p_context"> int free_memtype(u64 start, u64 end)</span>
 	entry = rbt_memtype_erase(start, end);
 	spin_unlock(&amp;memtype_lock);
 
<span class="p_del">-	if (!entry) {</span>
<span class="p_add">+	if (IS_ERR(entry)) {</span>
 		pr_info(&quot;x86/PAT: %s:%d freeing invalid memtype [mem %#010Lx-%#010Lx]\n&quot;,
 			current-&gt;comm, current-&gt;pid, start, end - 1);
 		return -EINVAL;
<span class="p_chunk">@@ -992,6 +992,16 @@</span> <span class="p_context"> void untrack_pfn(struct vm_area_struct *vma, unsigned long pfn,</span>
 	vma-&gt;vm_flags &amp;= ~VM_PAT;
 }
 
<span class="p_add">+/*</span>
<span class="p_add">+ * untrack_pfn_moved is called, while mremapping a pfnmap for a new region,</span>
<span class="p_add">+ * with the old vma after its pfnmap page table has been removed.  The new</span>
<span class="p_add">+ * vma has a new pfnmap to the same pfn &amp; cache type with VM_PAT set.</span>
<span class="p_add">+ */</span>
<span class="p_add">+void untrack_pfn_moved(struct vm_area_struct *vma)</span>
<span class="p_add">+{</span>
<span class="p_add">+	vma-&gt;vm_flags &amp;= ~VM_PAT;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 pgprot_t pgprot_writecombine(pgprot_t prot)
 {
 	return __pgprot(pgprot_val(prot) |
<span class="p_header">diff --git a/arch/x86/mm/pat_rbtree.c b/arch/x86/mm/pat_rbtree.c</span>
<span class="p_header">index 63931080366a..2f7702253ccf 100644</span>
<span class="p_header">--- a/arch/x86/mm/pat_rbtree.c</span>
<span class="p_header">+++ b/arch/x86/mm/pat_rbtree.c</span>
<span class="p_chunk">@@ -98,8 +98,13 @@</span> <span class="p_context"> static struct memtype *memtype_rb_lowest_match(struct rb_root *root,</span>
 	return last_lower; /* Returns NULL if there is no overlap */
 }
 
<span class="p_del">-static struct memtype *memtype_rb_exact_match(struct rb_root *root,</span>
<span class="p_del">-				u64 start, u64 end)</span>
<span class="p_add">+enum {</span>
<span class="p_add">+	MEMTYPE_EXACT_MATCH	= 0,</span>
<span class="p_add">+	MEMTYPE_END_MATCH	= 1</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+static struct memtype *memtype_rb_match(struct rb_root *root,</span>
<span class="p_add">+				u64 start, u64 end, int match_type)</span>
 {
 	struct memtype *match;
 
<span class="p_chunk">@@ -107,7 +112,12 @@</span> <span class="p_context"> static struct memtype *memtype_rb_exact_match(struct rb_root *root,</span>
 	while (match != NULL &amp;&amp; match-&gt;start &lt; end) {
 		struct rb_node *node;
 
<span class="p_del">-		if (match-&gt;start == start &amp;&amp; match-&gt;end == end)</span>
<span class="p_add">+		if ((match_type == MEMTYPE_EXACT_MATCH) &amp;&amp;</span>
<span class="p_add">+		    (match-&gt;start == start) &amp;&amp; (match-&gt;end == end))</span>
<span class="p_add">+			return match;</span>
<span class="p_add">+</span>
<span class="p_add">+		if ((match_type == MEMTYPE_END_MATCH) &amp;&amp;</span>
<span class="p_add">+		    (match-&gt;start &lt; start) &amp;&amp; (match-&gt;end == end))</span>
 			return match;
 
 		node = rb_next(&amp;match-&gt;rb);
<span class="p_chunk">@@ -117,7 +127,7 @@</span> <span class="p_context"> static struct memtype *memtype_rb_exact_match(struct rb_root *root,</span>
 			match = NULL;
 	}
 
<span class="p_del">-	return NULL; /* Returns NULL if there is no exact match */</span>
<span class="p_add">+	return NULL; /* Returns NULL if there is no match */</span>
 }
 
 static int memtype_rb_check_conflict(struct rb_root *root,
<span class="p_chunk">@@ -210,12 +220,36 @@</span> <span class="p_context"> struct memtype *rbt_memtype_erase(u64 start, u64 end)</span>
 {
 	struct memtype *data;
 
<span class="p_del">-	data = memtype_rb_exact_match(&amp;memtype_rbroot, start, end);</span>
<span class="p_del">-	if (!data)</span>
<span class="p_del">-		goto out;</span>
<span class="p_add">+	/*</span>
<span class="p_add">+	 * Since the memtype_rbroot tree allows overlapping ranges,</span>
<span class="p_add">+	 * rbt_memtype_erase() checks with EXACT_MATCH first, i.e. free</span>
<span class="p_add">+	 * a whole node for the munmap case.  If no such entry is found,</span>
<span class="p_add">+	 * it then checks with END_MATCH, i.e. shrink the size of a node</span>
<span class="p_add">+	 * from the end for the mremap case.</span>
<span class="p_add">+	 */</span>
<span class="p_add">+	data = memtype_rb_match(&amp;memtype_rbroot, start, end,</span>
<span class="p_add">+				MEMTYPE_EXACT_MATCH);</span>
<span class="p_add">+	if (!data) {</span>
<span class="p_add">+		data = memtype_rb_match(&amp;memtype_rbroot, start, end,</span>
<span class="p_add">+					MEMTYPE_END_MATCH);</span>
<span class="p_add">+		if (!data)</span>
<span class="p_add">+			return ERR_PTR(-EINVAL);</span>
<span class="p_add">+	}</span>
<span class="p_add">+</span>
<span class="p_add">+	if (data-&gt;start == start) {</span>
<span class="p_add">+		/* munmap: erase this node */</span>
<span class="p_add">+		rb_erase_augmented(&amp;data-&gt;rb, &amp;memtype_rbroot,</span>
<span class="p_add">+					&amp;memtype_rb_augment_cb);</span>
<span class="p_add">+	} else {</span>
<span class="p_add">+		/* mremap: update the end value of this node */</span>
<span class="p_add">+		rb_erase_augmented(&amp;data-&gt;rb, &amp;memtype_rbroot,</span>
<span class="p_add">+					&amp;memtype_rb_augment_cb);</span>
<span class="p_add">+		data-&gt;end = start;</span>
<span class="p_add">+		data-&gt;subtree_max_end = data-&gt;end;</span>
<span class="p_add">+		memtype_rb_insert(&amp;memtype_rbroot, data);</span>
<span class="p_add">+		return NULL;</span>
<span class="p_add">+	}</span>
 
<span class="p_del">-	rb_erase_augmented(&amp;data-&gt;rb, &amp;memtype_rbroot, &amp;memtype_rb_augment_cb);</span>
<span class="p_del">-out:</span>
 	return data;
 }
 
<span class="p_header">diff --git a/arch/x86/mm/srat.c b/arch/x86/mm/srat.c</span>
<span class="p_header">index c2aea63bee20..b5f821881465 100644</span>
<span class="p_header">--- a/arch/x86/mm/srat.c</span>
<span class="p_header">+++ b/arch/x86/mm/srat.c</span>
<span class="p_chunk">@@ -203,6 +203,8 @@</span> <span class="p_context"> acpi_numa_memory_affinity_init(struct acpi_srat_mem_affinity *ma)</span>
 		pr_warn(&quot;SRAT: Failed to mark hotplug range [mem %#010Lx-%#010Lx] in memblock\n&quot;,
 			(unsigned long long)start, (unsigned long long)end - 1);
 
<span class="p_add">+	max_possible_pfn = max(max_possible_pfn, PFN_UP(end - 1));</span>
<span class="p_add">+</span>
 	return 0;
 out_err_bad_srat:
 	bad_srat();
<span class="p_header">diff --git a/include/asm-generic/pgtable.h b/include/asm-generic/pgtable.h</span>
<span class="p_header">index 14b0ff32fb9f..3a6803cb0ec9 100644</span>
<span class="p_header">--- a/include/asm-generic/pgtable.h</span>
<span class="p_header">+++ b/include/asm-generic/pgtable.h</span>
<span class="p_chunk">@@ -569,7 +569,7 @@</span> <span class="p_context"> static inline int track_pfn_copy(struct vm_area_struct *vma)</span>
 }
 
 /*
<span class="p_del">- * untrack_pfn_vma is called while unmapping a pfnmap for a region.</span>
<span class="p_add">+ * untrack_pfn is called while unmapping a pfnmap for a region.</span>
  * untrack can be called for a specific region indicated by pfn and size or
  * can be for the entire vma (in which case pfn, size are zero).
  */
<span class="p_chunk">@@ -577,6 +577,13 @@</span> <span class="p_context"> static inline void untrack_pfn(struct vm_area_struct *vma,</span>
 			       unsigned long pfn, unsigned long size)
 {
 }
<span class="p_add">+</span>
<span class="p_add">+/*</span>
<span class="p_add">+ * untrack_pfn_moved is called while mremapping a pfnmap for a new region.</span>
<span class="p_add">+ */</span>
<span class="p_add">+static inline void untrack_pfn_moved(struct vm_area_struct *vma)</span>
<span class="p_add">+{</span>
<span class="p_add">+}</span>
 #else
 extern int track_pfn_remap(struct vm_area_struct *vma, pgprot_t *prot,
 			   unsigned long pfn, unsigned long addr,
<span class="p_chunk">@@ -586,6 +593,7 @@</span> <span class="p_context"> extern int track_pfn_insert(struct vm_area_struct *vma, pgprot_t *prot,</span>
 extern int track_pfn_copy(struct vm_area_struct *vma);
 extern void untrack_pfn(struct vm_area_struct *vma, unsigned long pfn,
 			unsigned long size);
<span class="p_add">+extern void untrack_pfn_moved(struct vm_area_struct *vma);</span>
 #endif
 
 #ifdef __HAVE_COLOR_ZERO_PAGE
<span class="p_header">diff --git a/include/linux/bootmem.h b/include/linux/bootmem.h</span>
<span class="p_header">index f589222bfa87..35b22f94d2d2 100644</span>
<span class="p_header">--- a/include/linux/bootmem.h</span>
<span class="p_header">+++ b/include/linux/bootmem.h</span>
<span class="p_chunk">@@ -19,6 +19,10 @@</span> <span class="p_context"> extern unsigned long min_low_pfn;</span>
  * highest page
  */
 extern unsigned long max_pfn;
<span class="p_add">+/*</span>
<span class="p_add">+ * highest possible page</span>
<span class="p_add">+ */</span>
<span class="p_add">+extern unsigned long long max_possible_pfn;</span>
 
 #ifndef CONFIG_NO_BOOTMEM
 /*
<span class="p_header">diff --git a/mm/bootmem.c b/mm/bootmem.c</span>
<span class="p_header">index 3b6380784c28..91e32bc8517f 100644</span>
<span class="p_header">--- a/mm/bootmem.c</span>
<span class="p_header">+++ b/mm/bootmem.c</span>
<span class="p_chunk">@@ -33,6 +33,7 @@</span> <span class="p_context"> EXPORT_SYMBOL(contig_page_data);</span>
 unsigned long max_low_pfn;
 unsigned long min_low_pfn;
 unsigned long max_pfn;
<span class="p_add">+unsigned long long max_possible_pfn;</span>
 
 bootmem_data_t bootmem_node_data[MAX_NUMNODES] __initdata;
 
<span class="p_header">diff --git a/mm/mremap.c b/mm/mremap.c</span>
<span class="p_header">index c25bc6268e46..de824e72c3e8 100644</span>
<span class="p_header">--- a/mm/mremap.c</span>
<span class="p_header">+++ b/mm/mremap.c</span>
<span class="p_chunk">@@ -319,6 +319,10 @@</span> <span class="p_context"> static unsigned long move_vma(struct vm_area_struct *vma,</span>
 	hiwater_vm = mm-&gt;hiwater_vm;
 	vm_stat_account(mm, vma-&gt;vm_flags, vma-&gt;vm_file, new_len&gt;&gt;PAGE_SHIFT);
 
<span class="p_add">+	/* Tell pfnmap has moved from this vma */</span>
<span class="p_add">+	if (unlikely(vma-&gt;vm_flags &amp; VM_PFNMAP))</span>
<span class="p_add">+		untrack_pfn_moved(vma);</span>
<span class="p_add">+</span>
 	if (do_munmap(mm, old_addr, old_len) &lt; 0) {
 		/* OOM: unable to split vma, just get accounts right */
 		vm_unacct_memory(excess &gt;&gt; PAGE_SHIFT);
<span class="p_header">diff --git a/mm/nobootmem.c b/mm/nobootmem.c</span>
<span class="p_header">index e57cf24babd6..99feb2b07fc5 100644</span>
<span class="p_header">--- a/mm/nobootmem.c</span>
<span class="p_header">+++ b/mm/nobootmem.c</span>
<span class="p_chunk">@@ -31,6 +31,7 @@</span> <span class="p_context"> EXPORT_SYMBOL(contig_page_data);</span>
 unsigned long max_low_pfn;
 unsigned long min_low_pfn;
 unsigned long max_pfn;
<span class="p_add">+unsigned long long max_possible_pfn;</span>
 
 static void * __init __alloc_memory_core_early(int nid, u64 size, u64 align,
 					u64 goal, u64 limit)

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



