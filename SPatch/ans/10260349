
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[4.1,56/65] kaiser: kaiser_flush_tlb_on_return_to_user() check PCID - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [4.1,56/65] kaiser: kaiser_flush_tlb_on_return_to_user() check PCID</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=173041">Pavel Tatashin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 6, 2018, 12:25 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20180306002538.1761-57-pasha.tatashin@oracle.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10260349/mbox/"
   >mbox</a>
|
   <a href="/patch/10260349/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10260349/">/patch/10260349/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	6D53560134 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  6 Mar 2018 00:30:09 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5D31E28D1D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  6 Mar 2018 00:30:09 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 4ED6A28D1E; Tue,  6 Mar 2018 00:30:09 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, DKIM_VALID_AU, RCVD_IN_DNSWL_HI,
	UNPARSEABLE_RELAY autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id A458F28D19
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  6 Mar 2018 00:30:08 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S933747AbeCFA3u (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 5 Mar 2018 19:29:50 -0500
Received: from userp2120.oracle.com ([156.151.31.85]:43088 &quot;EHLO
	userp2120.oracle.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S933501AbeCFA0z (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 5 Mar 2018 19:26:55 -0500
Received: from pps.filterd (userp2120.oracle.com [127.0.0.1])
	by userp2120.oracle.com (8.16.0.22/8.16.0.22) with SMTP id
	w260LpFd073979; Tue, 6 Mar 2018 00:26:50 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com;
	h=from : to : subject :
	date : message-id : in-reply-to : references; s=corp-2017-10-26;
	bh=7COaSwNHM8GwD2NOErSCYZCtyklx2L6JRnEBSdfk9CY=;
	b=JUNqkWs+S4W0a1H9TcFFiZrv4PymnWsSvyK1SKsThi8Yy9jI1NH7zhxgY3e7HaBEg+TC
	BxomyAAqw5r4GndUPYVzx8btpHnenPeLUsVUA2vE3OlCehGkb3+iVSSLYTHSQM45eBqj
	CLPCjj1y3oyH+akdEWi6Mdr3qiWy5fyqjpjHvuTlD989uTUEyxn9GFCAG4+apd9eKuaS
	3aOw8tqepGVY3+OeyLjHp5Je+p356Hp53vj3wUJA6u1lYtk8TaiZX8jQAwd9V48T1/38
	BoVADYOM5853Mz5V+WsP8S7/IK97/n8MJ1zLeJXxKuoKmXnWwbdFGXvvIwiOCY6A4DMl
	oQ== 
Received: from userv0022.oracle.com (userv0022.oracle.com [156.151.31.74])
	by userp2120.oracle.com with ESMTP id 2ghe5xgf1m-1
	(version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
	verify=OK); Tue, 06 Mar 2018 00:26:50 +0000
Received: from aserv0121.oracle.com (aserv0121.oracle.com [141.146.126.235])
	by userv0022.oracle.com (8.14.4/8.14.4) with ESMTP id
	w260QnEa012151
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
	verify=FAIL); Tue, 6 Mar 2018 00:26:49 GMT
Received: from abhmp0008.oracle.com (abhmp0008.oracle.com [141.146.116.14])
	by aserv0121.oracle.com (8.14.4/8.13.8) with ESMTP id
	w260QnBT000546; Tue, 6 Mar 2018 00:26:49 GMT
Received: from localhost.localdomain (/98.216.35.41)
	by default (Oracle Beehive Gateway v4.0)
	with ESMTP ; Mon, 05 Mar 2018 16:26:48 -0800
From: Pavel Tatashin &lt;pasha.tatashin@oracle.com&gt;
To: steven.sistare@oracle.com, daniel.m.jordan@oracle.com,
	linux-kernel@vger.kernel.org, Alexander.Levin@microsoft.com,
	dan.j.williams@intel.com, sathyanarayanan.kuppuswamy@intel.com,
	pankaj.laxminarayan.bharadiya@intel.com, akuster@mvista.com,
	cminyard@mvista.com, pasha.tatashin@oracle.com,
	gregkh@linuxfoundation.org, stable@vger.kernel.org
Subject: [PATCH 4.1 56/65] kaiser: kaiser_flush_tlb_on_return_to_user()
	check PCID
Date: Mon,  5 Mar 2018 19:25:29 -0500
Message-Id: &lt;20180306002538.1761-57-pasha.tatashin@oracle.com&gt;
X-Mailer: git-send-email 2.16.2
In-Reply-To: &lt;20180306002538.1761-1-pasha.tatashin@oracle.com&gt;
References: &lt;20180306002538.1761-1-pasha.tatashin@oracle.com&gt;
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=8823
	signatures=668683
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0
	suspectscore=0 malwarescore=0
	phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=815
	adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
	engine=8.0.1-1711220000 definitions=main-1803060003
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=173041">Pavel Tatashin</a> - March 6, 2018, 12:25 a.m.</div>
<pre class="content">
<span class="from">From: Hugh Dickins &lt;hughd@google.com&gt;</span>

Let kaiser_flush_tlb_on_return_to_user() do the X86_FEATURE_PCID
check, instead of each caller doing it inline first: nobody needs
to optimize for the noPCID case, it&#39;s clearer this way, and better
suits later changes.  Replace those no-op X86_CR3_PCID_KERN_FLUSH lines
by a BUILD_BUG_ON() in load_new_mm_cr3(), in case something changes.
<span class="signed-off-by">
Signed-off-by: Hugh Dickins &lt;hughd@google.com&gt;</span>
<span class="acked-by">Acked-by: Jiri Kosina &lt;jkosina@suse.cz&gt;</span>
<span class="signed-off-by">Signed-off-by: Greg Kroah-Hartman &lt;gregkh@linuxfoundation.org&gt;</span>
(cherry picked from commit 8eaca4c7d9f167209a9cc568ff028c0a3b0deb2d)
<span class="signed-off-by">Signed-off-by: Pavel Tatashin &lt;pasha.tatashin@oracle.com&gt;</span>
---
 arch/x86/include/asm/tlbflush.h | 4 ++--
 arch/x86/mm/kaiser.c            | 6 +++---
 arch/x86/mm/tlb.c               | 8 ++++----
 3 files changed, 9 insertions(+), 9 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/tlbflush.h b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">index 6fdc8c399601..73865b174090 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/tlbflush.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/tlbflush.h</span>
<span class="p_chunk">@@ -157,7 +157,7 @@</span> <span class="p_context"> static inline void __native_flush_tlb(void)</span>
 	 * back:
 	 */
 	preempt_disable();
<span class="p_del">-	if (kaiser_enabled &amp;&amp; this_cpu_has(X86_FEATURE_PCID))</span>
<span class="p_add">+	if (kaiser_enabled)</span>
 		kaiser_flush_tlb_on_return_to_user();
 	native_write_cr3(native_read_cr3());
 	preempt_enable();
<span class="p_chunk">@@ -216,7 +216,7 @@</span> <span class="p_context"> static inline void __native_flush_tlb_single(unsigned long addr)</span>
 	 */
 
 	if (!this_cpu_has(X86_FEATURE_INVPCID_SINGLE)) {
<span class="p_del">-		if (kaiser_enabled &amp;&amp; this_cpu_has(X86_FEATURE_PCID))</span>
<span class="p_add">+		if (kaiser_enabled)</span>
 			kaiser_flush_tlb_on_return_to_user();
 		asm volatile(&quot;invlpg (%0)&quot; ::&quot;r&quot; (addr) : &quot;memory&quot;);
 		return;
<span class="p_header">diff --git a/arch/x86/mm/kaiser.c b/arch/x86/mm/kaiser.c</span>
<span class="p_header">index c64bfef99ee8..9d6b7517fca5 100644</span>
<span class="p_header">--- a/arch/x86/mm/kaiser.c</span>
<span class="p_header">+++ b/arch/x86/mm/kaiser.c</span>
<span class="p_chunk">@@ -436,12 +436,12 @@</span> <span class="p_context"> void kaiser_setup_pcid(void)</span>
 
 /*
  * Make a note that this cpu will need to flush USER tlb on return to user.
<span class="p_del">- * Caller checks whether this_cpu_has(X86_FEATURE_PCID) before calling:</span>
<span class="p_del">- * if cpu does not, then the NOFLUSH bit will never have been set.</span>
<span class="p_add">+ * If cpu does not have PCID, then the NOFLUSH bit will never have been set.</span>
  */
 void kaiser_flush_tlb_on_return_to_user(void)
 {
<span class="p_del">-	this_cpu_write(x86_cr3_pcid_user,</span>
<span class="p_add">+	if (this_cpu_has(X86_FEATURE_PCID))</span>
<span class="p_add">+		this_cpu_write(x86_cr3_pcid_user,</span>
 			X86_CR3_PCID_USER_FLUSH | KAISER_SHADOW_PGD_OFFSET);
 }
 EXPORT_SYMBOL(kaiser_flush_tlb_on_return_to_user);
<span class="p_header">diff --git a/arch/x86/mm/tlb.c b/arch/x86/mm/tlb.c</span>
<span class="p_header">index 5539d613c263..5939c549905f 100644</span>
<span class="p_header">--- a/arch/x86/mm/tlb.c</span>
<span class="p_header">+++ b/arch/x86/mm/tlb.c</span>
<span class="p_chunk">@@ -39,7 +39,7 @@</span> <span class="p_context"> static void load_new_mm_cr3(pgd_t *pgdir)</span>
 {
 	unsigned long new_mm_cr3 = __pa(pgdir);
 
<span class="p_del">-	if (kaiser_enabled &amp;&amp; this_cpu_has(X86_FEATURE_PCID)) {</span>
<span class="p_add">+	if (kaiser_enabled) {</span>
 		/*
 		 * We reuse the same PCID for different tasks, so we must
 		 * flush all the entries for the PCID out when we change tasks.
<span class="p_chunk">@@ -50,10 +50,10 @@</span> <span class="p_context"> static void load_new_mm_cr3(pgd_t *pgdir)</span>
 		 * do it here, but can only be used if X86_FEATURE_INVPCID is
 		 * available - and many machines support pcid without invpcid.
 		 *
<span class="p_del">-		 * The line below is a no-op: X86_CR3_PCID_KERN_FLUSH is now 0;</span>
<span class="p_del">-		 * but keep that line in there in case something changes.</span>
<span class="p_add">+		 * If X86_CR3_PCID_KERN_FLUSH actually added something, then it</span>
<span class="p_add">+		 * would be needed in the write_cr3() below - if PCIDs enabled.</span>
 		 */
<span class="p_del">-		new_mm_cr3 |= X86_CR3_PCID_KERN_FLUSH;</span>
<span class="p_add">+		BUILD_BUG_ON(X86_CR3_PCID_KERN_FLUSH);</span>
 		kaiser_flush_tlb_on_return_to_user();
 	}
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



