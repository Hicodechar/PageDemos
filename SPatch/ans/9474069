
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>arch: x86: kernel: fixed unused label issue - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    arch: x86: kernel: fixed unused label issue</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=171705">Piotr Gregor</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Dec. 14, 2016, 11:15 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20161214111510.GA23861@westernst&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9474069/mbox/"
   >mbox</a>
|
   <a href="/patch/9474069/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9474069/">/patch/9474069/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	73886607EE for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 14 Dec 2016 11:24:26 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6B7322871D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 14 Dec 2016 11:24:26 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 608DF28720; Wed, 14 Dec 2016 11:24:26 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.4 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID, RCVD_IN_DNSWL_HI,
	RCVD_IN_SORBS_SPAM autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9B7F02871D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed, 14 Dec 2016 11:24:25 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932538AbcLNLYN (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 14 Dec 2016 06:24:13 -0500
Received: from mail-wj0-f181.google.com ([209.85.210.181]:34534 &quot;EHLO
	mail-wj0-f181.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S932242AbcLNLYJ (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 14 Dec 2016 06:24:09 -0500
Received: by mail-wj0-f181.google.com with SMTP id tg4so28653779wjb.1
	for &lt;linux-kernel@vger.kernel.org&gt;;
	Wed, 14 Dec 2016 03:24:08 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=rsyncme-org.20150623.gappssmtp.com; s=20150623;
	h=date:from:to:cc:subject:message-id:mime-version:content-disposition
	:user-agent; bh=o3gCNZCetM42AEuTXA2h42mry/RLgUHBHLZDv+X6Lxg=;
	b=QDKAA3+8RvN7CPnohYt5vNh2AkuZW4vuTSFOG6j0+c53UYI3DzFRJYIZ4apOCQBf4N
	4RhgaiMdtm/PReVcnj1mHdFC+8kRgJEzL7dQwKHnYB/G/h7g2DOezwJ8ILvTmKEv8kSF
	VQI7EBB9hRmTjYENryR8tkBqrK7nwSlWbvXcQ80z2SFhBwTPyLCv9XuxEkdFJ8cvGMn/
	bktADWIFd8bZeGqYIksDHSeyVNPPvQaRsNyN//TUu6WTrh/1EVphcyYk367/fIKMC4ES
	9Kvg1Cp9KO4NLzmOWfXfCtzYSTaWQulAWAkm3JigxvBA4XlmvPBrmgcBZ3N7HIEDcK/6
	LiTg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:date:from:to:cc:subject:message-id:mime-version
	:content-disposition:user-agent;
	bh=o3gCNZCetM42AEuTXA2h42mry/RLgUHBHLZDv+X6Lxg=;
	b=CVL8iRxsL6jjJuWhz3poBXzTkOWp+9X9Rl5TgNyR5m56V+vdSb9eOcihBA1wPGeQF/
	PCfDBRIGjzADXxv3+p22lDouAc87T6IRRf/302Ji85P11MhJrFEhP9L6kwTRraN5n3h3
	kT/d/YYK6SVrW7So9FE5Hft8L7A3mSfMol1fcAWMOGM5YZ88sg7BBOqVf7Io3kkCY8+b
	7WZIrm6w71dUtGb47GN+aZvbxSKWn6jVZTJM7uqlzvYanmhyD6Bb7odBmiO05wt4KeZX
	mekInJVdJeIAJBm5omGwaQ0GcnJ6882khdcD8AWI0uyGScGS8q0FAHVuku0nB57VtysN
	RLKw==
X-Gm-Message-State: AKaTC01liogECLeecXu+0uNsbxrz7GoR5nQPKfeLuG3lpyr9C74itQtS65tiXQgz1s4k7g==
X-Received: by 10.28.234.85 with SMTP id i82mr6727689wmh.6.1481714232463;
	Wed, 14 Dec 2016 03:17:12 -0800 (PST)
Received: from westernst (host86-162-27-146.range86-162.btcentralplus.com.
	[86.162.27.146]) by smtp.gmail.com with ESMTPSA id
	m145sm7104626wma.3.2016.12.14.03.17.11
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Wed, 14 Dec 2016 03:17:12 -0800 (PST)
Date: Wed, 14 Dec 2016 11:15:13 +0000
From: Piotr Gregor &lt;piotrgregor@rsyncme.org&gt;
To: tglx@linutronix.de
Cc: mingo@redhat.com, hpa@zytor.com, x86@kernel.org,
	virtualization@lists.linux-foundation.org,
	linux-kernel@vger.kernel.org, jeremy@goop.org, akataria@vmware.com,
	rusty@rustcorp.com.au
Subject: [PATCH] arch: x86: kernel: fixed unused label issue
Message-ID: &lt;20161214111510.GA23861@westernst&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.23 (2014-03-12)
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=171705">Piotr Gregor</a> - Dec. 14, 2016, 11:15 a.m.</div>
<pre class="content">
The patch_default label is only used from within
	case PARAVIRT_PATCH(pv_lock_ops.queued_spin_unlock)
and
	case PARAVIRT_PATCH(pv_lock_ops.vcpu_is_preempted)
i.e. when #if defined(CONFIG_PARAVIRT_SPINLOCKS) is true.
Therefore no code jumps to this label in case CONFIG_PARAVIRT_SPINLOCKS
is not defined and label should be removed in that case.
Moving #endif directive just after that label fixes the issue.

In addition,there are three errors reported by checkpatch script
on this file. This commit fixes two of them. The last one is
	ERROR: Macros with multiple statements should be enclosed
	in a do - while loop
which probably is a false alarm here as PATCH_SITE macro defines
a case in switch local to native_patch function not meant to be used
in other places.
<span class="signed-off-by">
Signed-off-by: Piotr Gregor &lt;piotrgregor@rsyncme.org&gt;</span>
---
 arch/x86/kernel/paravirt_patch_64.c | 67 +++++++++++++++++++------------------
 1 file changed, 34 insertions(+), 33 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137">Peter Zijlstra</a> - Dec. 14, 2016, 5:06 p.m.</div>
<pre class="content">
On Wed, Dec 14, 2016 at 11:15:13AM +0000, Piotr Gregor wrote:
<span class="quote">&gt; The patch_default label is only used from within</span>
<span class="quote">&gt; 	case PARAVIRT_PATCH(pv_lock_ops.queued_spin_unlock)</span>
<span class="quote">&gt; and</span>
<span class="quote">&gt; 	case PARAVIRT_PATCH(pv_lock_ops.vcpu_is_preempted)</span>
<span class="quote">&gt; i.e. when #if defined(CONFIG_PARAVIRT_SPINLOCKS) is true.</span>
<span class="quote">&gt; Therefore no code jumps to this label in case CONFIG_PARAVIRT_SPINLOCKS</span>
<span class="quote">&gt; is not defined and label should be removed in that case.</span>
<span class="quote">&gt; Moving #endif directive just after that label fixes the issue.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; In addition,there are three errors reported by checkpatch script</span>
<span class="quote">&gt; on this file. This commit fixes two of them. The last one is</span>
<span class="quote">&gt; 	ERROR: Macros with multiple statements should be enclosed</span>
<span class="quote">&gt; 	in a do - while loop</span>
<span class="quote">&gt; which probably is a false alarm here as PATCH_SITE macro defines</span>
<span class="quote">&gt; a case in switch local to native_patch function not meant to be used</span>
<span class="quote">&gt; in other places.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Piotr Gregor &lt;piotrgregor@rsyncme.org&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/x86/kernel/paravirt_patch_64.c | 67 +++++++++++++++++++------------------</span>
<span class="quote">&gt;  1 file changed, 34 insertions(+), 33 deletions(-)</span>

*urgh*

So you forgot to look up the patch that caused it, which made you fail
to Cc the author of the patch that caused it (me).

That also made you miss the fact that you&#39;re only fixing half the
problem, namely you failed to touch arch/x86/kernel/paravirt_patch_32.c
which has identical code in.

Thirdly you used checkpatch and moved muck about creating a trainwreck
of a patch.

Anyway, you can use __maybe_unused on a label, I&#39;m not sure which I
prefer, this way you jump into the previous case block and use
fall-through, while with the variant I did you jump into the right case.

Its a shame you cannot jump to the default label itself.
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/kernel/paravirt_patch_64.c b/arch/x86/kernel/paravirt_patch_64.c</span>
<span class="p_header">index f4fcf26..7ce2848 100644</span>
<span class="p_header">--- a/arch/x86/kernel/paravirt_patch_64.c</span>
<span class="p_header">+++ b/arch/x86/kernel/paravirt_patch_64.c</span>
<span class="p_chunk">@@ -44,43 +44,44 @@</span> <span class="p_context"> unsigned native_patch(u8 type, u16 clobbers, void *ibuf,</span>
 	const unsigned char *start, *end;
 	unsigned ret;
 
<span class="p_del">-#define PATCH_SITE(ops, x)					\</span>
<span class="p_del">-		case PARAVIRT_PATCH(ops.x):			\</span>
<span class="p_del">-			start = start_##ops##_##x;		\</span>
<span class="p_del">-			end = end_##ops##_##x;			\</span>
<span class="p_del">-			goto patch_site</span>
<span class="p_del">-	switch(type) {</span>
<span class="p_del">-		PATCH_SITE(pv_irq_ops, restore_fl);</span>
<span class="p_del">-		PATCH_SITE(pv_irq_ops, save_fl);</span>
<span class="p_del">-		PATCH_SITE(pv_irq_ops, irq_enable);</span>
<span class="p_del">-		PATCH_SITE(pv_irq_ops, irq_disable);</span>
<span class="p_del">-		PATCH_SITE(pv_cpu_ops, usergs_sysret64);</span>
<span class="p_del">-		PATCH_SITE(pv_cpu_ops, swapgs);</span>
<span class="p_del">-		PATCH_SITE(pv_mmu_ops, read_cr2);</span>
<span class="p_del">-		PATCH_SITE(pv_mmu_ops, read_cr3);</span>
<span class="p_del">-		PATCH_SITE(pv_mmu_ops, write_cr3);</span>
<span class="p_del">-		PATCH_SITE(pv_mmu_ops, flush_tlb_single);</span>
<span class="p_del">-		PATCH_SITE(pv_cpu_ops, wbinvd);</span>
<span class="p_add">+#define PATCH_SITE(ops, x)				\</span>
<span class="p_add">+	case PARAVIRT_PATCH(ops.x):			\</span>
<span class="p_add">+		start = start_##ops##_##x;		\</span>
<span class="p_add">+		end = end_##ops##_##x;			\</span>
<span class="p_add">+		goto patch_site</span>
<span class="p_add">+</span>
<span class="p_add">+	switch (type) {</span>
<span class="p_add">+	PATCH_SITE(pv_irq_ops, restore_fl);</span>
<span class="p_add">+	PATCH_SITE(pv_irq_ops, save_fl);</span>
<span class="p_add">+	PATCH_SITE(pv_irq_ops, irq_enable);</span>
<span class="p_add">+	PATCH_SITE(pv_irq_ops, irq_disable);</span>
<span class="p_add">+	PATCH_SITE(pv_cpu_ops, usergs_sysret64);</span>
<span class="p_add">+	PATCH_SITE(pv_cpu_ops, swapgs);</span>
<span class="p_add">+	PATCH_SITE(pv_mmu_ops, read_cr2);</span>
<span class="p_add">+	PATCH_SITE(pv_mmu_ops, read_cr3);</span>
<span class="p_add">+	PATCH_SITE(pv_mmu_ops, write_cr3);</span>
<span class="p_add">+	PATCH_SITE(pv_mmu_ops, flush_tlb_single);</span>
<span class="p_add">+	PATCH_SITE(pv_cpu_ops, wbinvd);</span>
 #if defined(CONFIG_PARAVIRT_SPINLOCKS)
<span class="p_del">-		case PARAVIRT_PATCH(pv_lock_ops.queued_spin_unlock):</span>
<span class="p_del">-			if (pv_is_native_spin_unlock()) {</span>
<span class="p_del">-				start = start_pv_lock_ops_queued_spin_unlock;</span>
<span class="p_del">-				end   = end_pv_lock_ops_queued_spin_unlock;</span>
<span class="p_del">-				goto patch_site;</span>
<span class="p_del">-			}</span>
<span class="p_del">-			goto patch_default;</span>
<span class="p_add">+	case PARAVIRT_PATCH(pv_lock_ops.queued_spin_unlock):</span>
<span class="p_add">+		if (pv_is_native_spin_unlock()) {</span>
<span class="p_add">+			start = start_pv_lock_ops_queued_spin_unlock;</span>
<span class="p_add">+			end   = end_pv_lock_ops_queued_spin_unlock;</span>
<span class="p_add">+			goto patch_site;</span>
<span class="p_add">+		}</span>
<span class="p_add">+		goto patch_default;</span>
 
<span class="p_del">-		case PARAVIRT_PATCH(pv_lock_ops.vcpu_is_preempted):</span>
<span class="p_del">-			if (pv_is_native_vcpu_is_preempted()) {</span>
<span class="p_del">-				start = start_pv_lock_ops_vcpu_is_preempted;</span>
<span class="p_del">-				end   = end_pv_lock_ops_vcpu_is_preempted;</span>
<span class="p_del">-				goto patch_site;</span>
<span class="p_del">-			}</span>
<span class="p_del">-			goto patch_default;</span>
<span class="p_del">-#endif</span>
<span class="p_add">+	case PARAVIRT_PATCH(pv_lock_ops.vcpu_is_preempted):</span>
<span class="p_add">+		if (pv_is_native_vcpu_is_preempted()) {</span>
<span class="p_add">+			start = start_pv_lock_ops_vcpu_is_preempted;</span>
<span class="p_add">+			end   = end_pv_lock_ops_vcpu_is_preempted;</span>
<span class="p_add">+			goto patch_site;</span>
<span class="p_add">+		}</span>
<span class="p_add">+		goto patch_default;</span>
 
<span class="p_del">-	default:</span>
 patch_default:
<span class="p_add">+#endif</span>
<span class="p_add">+	default:</span>
 		ret = paravirt_patch_default(type, clobbers, ibuf, addr, len);
 		break;
 

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



