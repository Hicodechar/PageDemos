
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[tip:x86/platform] x86/platform/uv/BAU: Cleanup bau_operations declaration and instances - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [tip:x86/platform] x86/platform/uv/BAU: Cleanup bau_operations declaration and instances</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>March 13, 2017, 1:40 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;tip-8e3b21b6dbf0318d5b3a598572acc23f07189c40@git.kernel.org&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9620899/mbox/"
   >mbox</a>
|
   <a href="/patch/9620899/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9620899/">/patch/9620899/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	22DFC604A9 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 13 Mar 2017 13:41:22 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 12F76284A3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 13 Mar 2017 13:41:22 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 06B4C284CC; Mon, 13 Mar 2017 13:41:22 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5B3D3284A3
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Mon, 13 Mar 2017 13:41:21 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752525AbdCMNlU (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Mon, 13 Mar 2017 09:41:20 -0400
Received: from terminus.zytor.com ([65.50.211.136]:57874 &quot;EHLO
	terminus.zytor.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751486AbdCMNlK (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Mon, 13 Mar 2017 09:41:10 -0400
Received: from terminus.zytor.com (localhost [127.0.0.1])
	by terminus.zytor.com (8.15.2/8.15.2) with ESMTP id v2DDetA5029406;
	Mon, 13 Mar 2017 06:40:55 -0700
Received: (from tipbot@localhost)
	by terminus.zytor.com (8.15.2/8.15.2/Submit) id v2DDesGK029389;
	Mon, 13 Mar 2017 06:40:54 -0700
Date: Mon, 13 Mar 2017 06:40:54 -0700
X-Authentication-Warning: terminus.zytor.com: tipbot set sender to
	tipbot@zytor.com using -f
From: tip-bot for Andrew Banman &lt;tipbot@zytor.com&gt;
Message-ID: &lt;tip-8e3b21b6dbf0318d5b3a598572acc23f07189c40@git.kernel.org&gt;
Cc: linux-kernel@vger.kernel.org, mingo@kernel.org, abanman@hpe.com,
	mike.travis@hpe.com, tglx@linutronix.de, hpa@zytor.com
Reply-To: mike.travis@hpe.com, tglx@linutronix.de, abanman@hpe.com,
	hpa@zytor.com, mingo@kernel.org, linux-kernel@vger.kernel.org
In-Reply-To: &lt;1489077734-111753-4-git-send-email-abanman@hpe.com&gt;
References: &lt;1489077734-111753-4-git-send-email-abanman@hpe.com&gt;
To: linux-tip-commits@vger.kernel.org
Subject: [tip:x86/platform] x86/platform/uv/BAU: Cleanup bau_operations
	declaration and instances
Git-Commit-ID: 8e3b21b6dbf0318d5b3a598572acc23f07189c40
X-Mailer: tip-git-log-daemon
Robot-ID: &lt;tip-bot.git.kernel.org&gt;
Robot-Unsubscribe: Contact &lt;mailto:hpa@kernel.org&gt; to get blacklisted from
	these emails
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=UTF-8
Content-Disposition: inline
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=60001">tip-bot for Jacob Shin</a> - March 13, 2017, 1:40 p.m.</div>
<pre class="content">
Commit-ID:  8e3b21b6dbf0318d5b3a598572acc23f07189c40
Gitweb:     http://git.kernel.org/tip/8e3b21b6dbf0318d5b3a598572acc23f07189c40
Author:     Andrew Banman &lt;abanman@hpe.com&gt;
AuthorDate: Thu, 9 Mar 2017 10:42:11 -0600
Committer:  Thomas Gleixner &lt;tglx@linutronix.de&gt;
CommitDate: Mon, 13 Mar 2017 14:26:28 +0100

x86/platform/uv/BAU: Cleanup bau_operations declaration and instances

Move the bau_operations declaration after bau struct declarations so the
bau structs can be referenced when adding new functions to
bau_operations. That way we avoid forward declarations of the bau
structs.

Likewise, move uv*_bau_ops structs down to avoid forward declarations of
new functions defined in the same file. Declare these structs __initconst
since they are only used during initialization. Similarly, declare the
bau_operations ops instance __ro_after_init as it is read-only after
initialization.

This is a preparatory patch for adding wait_completion to bau_operations.
<span class="signed-off-by">
Signed-off-by: Andrew Banman &lt;abanman@hpe.com&gt;</span>
<span class="acked-by">Acked-by: Ingo Molnar &lt;mingo@kernel.org&gt;</span>
<span class="acked-by">Acked-by: Mike Travis &lt;mike.travis@hpe.com&gt;</span>
Cc: sivanich@hpe.com
Cc: rja@hpe.com
Cc: akpm@linux-foundation.org
Link: http://lkml.kernel.org/r/1489077734-111753-4-git-send-email-abanman@hpe.com
<span class="signed-off-by">Signed-off-by: Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>

---
 arch/x86/include/asm/uv/uv_bau.h | 22 ++++++++++----------
 arch/x86/platform/uv/tlb_uv.c    | 43 ++++++++++++++++++++--------------------
 2 files changed, 32 insertions(+), 33 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/include/asm/uv/uv_bau.h b/arch/x86/include/asm/uv/uv_bau.h</span>
<span class="p_header">index dcd63ed..695b873 100644</span>
<span class="p_header">--- a/arch/x86/include/asm/uv/uv_bau.h</span>
<span class="p_header">+++ b/arch/x86/include/asm/uv/uv_bau.h</span>
<span class="p_chunk">@@ -406,17 +406,6 @@</span> <span class="p_context"> struct uv2_3_bau_msg_header {</span>
 	/* bits 127:120 */
 };
 
<span class="p_del">-/* Abstracted BAU functions */</span>
<span class="p_del">-struct bau_operations {</span>
<span class="p_del">-	unsigned long (*read_l_sw_ack)(void);</span>
<span class="p_del">-	unsigned long (*read_g_sw_ack)(int pnode);</span>
<span class="p_del">-	unsigned long (*bau_gpa_to_offset)(unsigned long vaddr);</span>
<span class="p_del">-	void (*write_l_sw_ack)(unsigned long mmr);</span>
<span class="p_del">-	void (*write_g_sw_ack)(int pnode, unsigned long mmr);</span>
<span class="p_del">-	void (*write_payload_first)(int pnode, unsigned long mmr);</span>
<span class="p_del">-	void (*write_payload_last)(int pnode, unsigned long mmr);</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
 /*
  * The activation descriptor:
  * The format of the message to send, plus all accompanying control
<span class="p_chunk">@@ -668,6 +657,17 @@</span> <span class="p_context"> struct bau_control {</span>
 	struct hub_and_pnode	*thp;
 };
 
<span class="p_add">+/* Abstracted BAU functions */</span>
<span class="p_add">+struct bau_operations {</span>
<span class="p_add">+	unsigned long	(*read_l_sw_ack)(void);</span>
<span class="p_add">+	unsigned long	(*read_g_sw_ack)(int pnode);</span>
<span class="p_add">+	unsigned long	(*bau_gpa_to_offset)(unsigned long vaddr);</span>
<span class="p_add">+	void		(*write_l_sw_ack)(unsigned long mmr);</span>
<span class="p_add">+	void		(*write_g_sw_ack)(int pnode, unsigned long mmr);</span>
<span class="p_add">+	void		(*write_payload_first)(int pnode, unsigned long mmr);</span>
<span class="p_add">+	void		(*write_payload_last)(int pnode, unsigned long mmr);</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 static inline void write_mmr_data_broadcast(int pnode, unsigned long mmr_image)
 {
 	write_gmmr(pnode, UVH_BAU_DATA_BROADCAST, mmr_image);
<span class="p_header">diff --git a/arch/x86/platform/uv/tlb_uv.c b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">index 70721c4..e6994fd 100644</span>
<span class="p_header">--- a/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_header">+++ b/arch/x86/platform/uv/tlb_uv.c</span>
<span class="p_chunk">@@ -23,28 +23,7 @@</span> <span class="p_context"></span>
 #include &lt;asm/irq_vectors.h&gt;
 #include &lt;asm/timer.h&gt;
 
<span class="p_del">-static struct bau_operations ops;</span>
<span class="p_del">-</span>
<span class="p_del">-static struct bau_operations uv123_bau_ops = {</span>
<span class="p_del">-	.bau_gpa_to_offset       = uv_gpa_to_offset,</span>
<span class="p_del">-	.read_l_sw_ack           = read_mmr_sw_ack,</span>
<span class="p_del">-	.read_g_sw_ack           = read_gmmr_sw_ack,</span>
<span class="p_del">-	.write_l_sw_ack          = write_mmr_sw_ack,</span>
<span class="p_del">-	.write_g_sw_ack          = write_gmmr_sw_ack,</span>
<span class="p_del">-	.write_payload_first     = write_mmr_payload_first,</span>
<span class="p_del">-	.write_payload_last      = write_mmr_payload_last,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_del">-static struct bau_operations uv4_bau_ops = {</span>
<span class="p_del">-	.bau_gpa_to_offset       = uv_gpa_to_soc_phys_ram,</span>
<span class="p_del">-	.read_l_sw_ack           = read_mmr_proc_sw_ack,</span>
<span class="p_del">-	.read_g_sw_ack           = read_gmmr_proc_sw_ack,</span>
<span class="p_del">-	.write_l_sw_ack          = write_mmr_proc_sw_ack,</span>
<span class="p_del">-	.write_g_sw_ack          = write_gmmr_proc_sw_ack,</span>
<span class="p_del">-	.write_payload_first     = write_mmr_proc_payload_first,</span>
<span class="p_del">-	.write_payload_last      = write_mmr_proc_payload_last,</span>
<span class="p_del">-};</span>
<span class="p_del">-</span>
<span class="p_add">+static struct bau_operations ops __ro_after_init;</span>
 
 /* timeouts in nanoseconds (indexed by UVH_AGING_PRESCALE_SEL urgency7 30:28) */
 static int timeout_base_ns[] = {
<span class="p_chunk">@@ -2158,6 +2137,26 @@</span> <span class="p_context"> fail:</span>
 	return 1;
 }
 
<span class="p_add">+static const struct bau_operations uv123_bau_ops __initconst = {</span>
<span class="p_add">+	.bau_gpa_to_offset       = uv_gpa_to_offset,</span>
<span class="p_add">+	.read_l_sw_ack           = read_mmr_sw_ack,</span>
<span class="p_add">+	.read_g_sw_ack           = read_gmmr_sw_ack,</span>
<span class="p_add">+	.write_l_sw_ack          = write_mmr_sw_ack,</span>
<span class="p_add">+	.write_g_sw_ack          = write_gmmr_sw_ack,</span>
<span class="p_add">+	.write_payload_first     = write_mmr_payload_first,</span>
<span class="p_add">+	.write_payload_last      = write_mmr_payload_last,</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+static const struct bau_operations uv4_bau_ops __initconst = {</span>
<span class="p_add">+	.bau_gpa_to_offset       = uv_gpa_to_soc_phys_ram,</span>
<span class="p_add">+	.read_l_sw_ack           = read_mmr_proc_sw_ack,</span>
<span class="p_add">+	.read_g_sw_ack           = read_gmmr_proc_sw_ack,</span>
<span class="p_add">+	.write_l_sw_ack          = write_mmr_proc_sw_ack,</span>
<span class="p_add">+	.write_g_sw_ack          = write_gmmr_proc_sw_ack,</span>
<span class="p_add">+	.write_payload_first     = write_mmr_proc_payload_first,</span>
<span class="p_add">+	.write_payload_last      = write_mmr_proc_payload_last,</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
 /*
  * Initialization of BAU-related structures
  */

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



