
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v2,5/9] mm/hugetlb: Introduce set_huge_swap_pte_at() helper - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v2,5/9] mm/hugetlb: Introduce set_huge_swap_pte_at() helper</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=58591">Punit Agrawal</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>April 5, 2017, 1:37 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20170405133722.6406-6-punit.agrawal@arm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9664113/mbox/"
   >mbox</a>
|
   <a href="/patch/9664113/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9664113/">/patch/9664113/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	9A1E9602B5 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  5 Apr 2017 13:39:23 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 84457284DB
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  5 Apr 2017 13:39:23 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 78C052852E; Wed,  5 Apr 2017 13:39:23 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id DB139284DB
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Wed,  5 Apr 2017 13:39:22 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753868AbdDENjQ (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 5 Apr 2017 09:39:16 -0400
Received: from foss.arm.com ([217.140.101.70]:58876 &quot;EHLO foss.arm.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1751665AbdDENiP (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 5 Apr 2017 09:38:15 -0400
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.72.51.249])
	by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 8253A165C;
	Wed,  5 Apr 2017 06:38:14 -0700 (PDT)
Received: from localhost (e105922-lin.cambridge.arm.com [10.1.195.42])
	by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id
	53C823F3E1; Wed,  5 Apr 2017 06:38:14 -0700 (PDT)
From: Punit Agrawal &lt;punit.agrawal@arm.com&gt;
To: catalin.marinas@arm.com, will.deacon@arm.com,
	akpm@linux-foundation.org, mark.rutland@arm.com
Cc: Punit Agrawal &lt;punit.agrawal@arm.com&gt;, linux-mm@kvack.org,
	linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
	tbaicar@codeaurora.org, kirill.shutemov@linux.intel.com,
	mike.kravetz@oracle.com, hillf.zj@alibaba-inc.com, steve.capper@arm.com,
	&quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;
Subject: [PATCH v2 5/9] mm/hugetlb: Introduce set_huge_swap_pte_at() helper
Date: Wed,  5 Apr 2017 14:37:18 +0100
Message-Id: &lt;20170405133722.6406-6-punit.agrawal@arm.com&gt;
X-Mailer: git-send-email 2.11.0
In-Reply-To: &lt;20170405133722.6406-1-punit.agrawal@arm.com&gt;
References: &lt;20170405133722.6406-1-punit.agrawal@arm.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=58591">Punit Agrawal</a> - April 5, 2017, 1:37 p.m.</div>
<pre class="content">
set_huge_pte_at(), an architecture callback to populate hugepage ptes,
does not provide the range of virtual memory that is targetted. This
leads to ambiguity when dealing with swap entries on architectures that
support hugepages consisting of contiguous ptes.

Fix the problem by introducing an overridable helper that is called when
populating the page tables with swap entries. The size of the targetted
region is provided to the helper to help determine the number of entries
to be updated.

Provide a default implementation that maintains the current behaviour.
<span class="signed-off-by">
Signed-off-by: Punit Agrawal &lt;punit.agrawal@arm.com&gt;</span>
Cc: Mike Kravetz &lt;mike.kravetz@oracle.com&gt;
Cc: &quot;Aneesh Kumar K.V&quot; &lt;aneesh.kumar@linux.vnet.ibm.com&gt;
---
 include/linux/hugetlb.h |  2 ++
 mm/hugetlb.c            | 14 +++++++++++---
 2 files changed, 13 insertions(+), 3 deletions(-)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/include/linux/hugetlb.h b/include/linux/hugetlb.h</span>
<span class="p_header">index 23010a3b2047..fa65ad73a65f 100644</span>
<span class="p_header">--- a/include/linux/hugetlb.h</span>
<span class="p_header">+++ b/include/linux/hugetlb.h</span>
<span class="p_chunk">@@ -127,6 +127,8 @@</span> <span class="p_context"> int pud_huge(pud_t pud);</span>
 unsigned long hugetlb_change_protection(struct vm_area_struct *vma,
 		unsigned long address, unsigned long end, pgprot_t newprot);
 
<span class="p_add">+void set_huge_swap_pte_at(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_add">+			  pte_t *ptep, pte_t pte, unsigned long sz);</span>
 #else /* !CONFIG_HUGETLB_PAGE */
 
 static inline void reset_vma_resv_huge_pages(struct vm_area_struct *vma)
<span class="p_header">diff --git a/mm/hugetlb.c b/mm/hugetlb.c</span>
<span class="p_header">index 2b0f6f96f2c1..a27e926913f4 100644</span>
<span class="p_header">--- a/mm/hugetlb.c</span>
<span class="p_header">+++ b/mm/hugetlb.c</span>
<span class="p_chunk">@@ -3211,6 +3211,12 @@</span> <span class="p_context"> static int is_hugetlb_entry_hwpoisoned(pte_t pte)</span>
 		return 0;
 }
 
<span class="p_add">+void __weak set_huge_swap_pte_at(struct mm_struct *mm, unsigned long addr,</span>
<span class="p_add">+				 pte_t *ptep, pte_t pte, unsigned long sz)</span>
<span class="p_add">+{</span>
<span class="p_add">+	set_huge_pte_at(mm, addr, ptep, pte);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
 int copy_hugetlb_page_range(struct mm_struct *dst, struct mm_struct *src,
 			    struct vm_area_struct *vma)
 {
<span class="p_chunk">@@ -3263,9 +3269,10 @@</span> <span class="p_context"> int copy_hugetlb_page_range(struct mm_struct *dst, struct mm_struct *src,</span>
 				 */
 				make_migration_entry_read(&amp;swp_entry);
 				entry = swp_entry_to_pte(swp_entry);
<span class="p_del">-				set_huge_pte_at(src, addr, src_pte, entry);</span>
<span class="p_add">+				set_huge_swap_pte_at(src, addr, src_pte,</span>
<span class="p_add">+						     entry, sz);</span>
 			}
<span class="p_del">-			set_huge_pte_at(dst, addr, dst_pte, entry);</span>
<span class="p_add">+			set_huge_swap_pte_at(dst, addr, dst_pte, entry, sz);</span>
 		} else {
 			if (cow) {
 				huge_ptep_set_wrprotect(src, addr, src_pte);
<span class="p_chunk">@@ -4283,7 +4290,8 @@</span> <span class="p_context"> unsigned long hugetlb_change_protection(struct vm_area_struct *vma,</span>
 
 				make_migration_entry_read(&amp;entry);
 				newpte = swp_entry_to_pte(entry);
<span class="p_del">-				set_huge_pte_at(mm, address, ptep, newpte);</span>
<span class="p_add">+				set_huge_swap_pte_at(mm, address, ptep,</span>
<span class="p_add">+						     newpte, huge_page_size(h));</span>
 				pages++;
 			}
 			spin_unlock(ptl);

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



