
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[v6,1/1] x86_64: fix KASan shadow region page tables - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [v6,1/1] x86_64: fix KASan shadow region page tables</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=86891">Andrey Ryabinin</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>June 18, 2015, 12:22 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;5582B801.80705@samsung.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/6636591/mbox/"
   >mbox</a>
|
   <a href="/patch/6636591/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/6636591/">/patch/6636591/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
X-Original-To: patchwork-LKML@patchwork.kernel.org
Delivered-To: patchwork-parsemail@patchwork1.web.kernel.org
Received: from mail.kernel.org (mail.kernel.org [198.145.29.136])
	by patchwork1.web.kernel.org (Postfix) with ESMTP id 503F79F358
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 18 Jun 2015 12:22:55 +0000 (UTC)
Received: from mail.kernel.org (localhost [127.0.0.1])
	by mail.kernel.org (Postfix) with ESMTP id 30B252081F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 18 Jun 2015 12:22:54 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id DFB622082F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu, 18 Jun 2015 12:22:52 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932616AbbFRMWr (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Thu, 18 Jun 2015 08:22:47 -0400
Received: from mailout1.w1.samsung.com ([210.118.77.11]:43179 &quot;EHLO
	mailout1.w1.samsung.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754870AbbFRMWi (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Thu, 18 Jun 2015 08:22:38 -0400
Received: from eucpsbgm1.samsung.com (unknown [203.254.199.244])
	by mailout1.w1.samsung.com
	(Oracle Communications Messaging Server 7.0.5.31.0 64bit (built May 5
	2014)) with ESMTP id &lt;0NQ5004M13POGM10@mailout1.w1.samsung.com&gt; for
	linux-kernel@vger.kernel.org; Thu, 18 Jun 2015 13:22:36 +0100 (BST)
X-AuditID: cbfec7f4-f79c56d0000012ee-7e-5582b80cdfe9
Received: from eusync3.samsung.com ( [203.254.199.213])
	by eucpsbgm1.samsung.com (EUCPMTA) with SMTP id E8.8A.04846.C08B2855;
	Thu, 18 Jun 2015 13:22:36 +0100 (BST)
Received: from a.ryabinin ([106.109.129.143])
	by eusync3.samsung.com (Oracle Communications Messaging Server
	7.0.5.31.0 64bit (built May  5 2014))
	with ESMTPA id &lt;0NQ500K083PDS570@eusync3.samsung.com&gt;; Thu,
	18 Jun 2015 13:22:36 +0100 (BST)
Message-id: &lt;5582B801.80705@samsung.com&gt;
Date: Thu, 18 Jun 2015 15:22:25 +0300
From: Andrey Ryabinin &lt;a.ryabinin@samsung.com&gt;
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:31.0) Gecko/20100101
	Thunderbird/31.7.0
MIME-version: 1.0
To: Borislav Petkov &lt;bp@alien8.de&gt;, Alexander Popov &lt;alpopov@ptsecurity.com&gt;
Cc: Thomas Gleixner &lt;tglx@linutronix.de&gt;, Ingo Molnar &lt;mingo@redhat.com&gt;,
	&quot;H. Peter Anvin&quot; &lt;hpa@zytor.com&gt;, Andrey Konovalov &lt;adech.fo@gmail.com&gt;,
	Andrew Morton &lt;akpm@linux-foundation.org&gt;,
	Andy Lutomirski &lt;luto@kernel.org&gt;,
	Alexander Kuleshov &lt;kuleshovmail@gmail.com&gt;,
	Denys Vlasenko &lt;dvlasenk@redhat.com&gt;,
	Peter Zijlstra &lt;peterz@infradead.org&gt;,
	Kees Cook &lt;keescook@chromium.org&gt;, x86@kernel.org,
	linux-kernel@vger.kernel.org
Subject: Re: [PATCH v6 1/1] x86_64: fix KASan shadow region page tables
References: &lt;1434613012-16046-1-git-send-email-alpopov@ptsecurity.com&gt;
	&lt;20150618090857.GB1385@pd.tnic&gt;
In-reply-to: &lt;20150618090857.GB1385@pd.tnic&gt;
Content-type: text/plain; charset=utf-8
Content-transfer-encoding: 7bit
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFprBIsWRmVeSWpSXmKPExsVy+t/xq7o8O5pCDdpW81r83juT1WLO+jVs
	FtN39LFbfN7wj83i/PdD7BbTNopbnOnOtVi/8zO7xeVdc4DCu9ayWlw6sIDJ4njvASaLzZum
	Mlv82PCY1YHP43trH4vH7IaLLB47Z91l99i8Qstj06pONo93586xe5yY8ZvFY/ujqSwe7/dd
	ZfP4vEnO40TLF9YA7igum5TUnMyy1CJ9uwSujJvTz7IWHLWsmHD+A1MD42W9LkZODgkBE4nf
	z5+wQthiEhfurWfrYuTiEBJYyijx9vsWKOc7o0T7jwUsXYwcHLwCGhKLF8WCNLAIqEq82PQD
	rJlNQE/i36ztbCC2qECExNvLJ5lAbF4BQYkfk++xgNgiAj4Sy1Y3gc1kFtjCLHH1YitYkbCA
	u8S8qbeZQWwhgQyJBf1z2UFsTgEdiVdLZrOB7GUWUJeYMiUXJMwsIC+xec1b5gmMArOQrJiF
	UDULSdUCRuZVjKKppckFxUnpuYZ6xYm5xaV56XrJ+bmbGCHx9WUH4+JjVocYBTgYlXh4Gbia
	QoVYE8uKK3MPMUpwMCuJ8NZuBArxpiRWVqUW5ccXleakFh9ilOZgURLnnbvrfYiQQHpiSWp2
	ampBahFMlomDU6qB0VVXKe7shs3XRLmyJ5xZe2/e+UY+7Y2Hq8tOpN10z/rdtN32hU7/ao6E
	4Mc7p3ke9J6+KLM5Rki9aaVLa7NQQ475ZC8pY6PdVWse9Hn0mKl4fJ6YXf7zR3jP9rPvFQRN
	Drh+/3IuNvJU7b6pK1qn3vObGTqjx/zX8ajatT79n9t3L53cpS4jp8RSnJFoqMVcVJwIAOdz
	3fyrAgAA
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Spam-Status: No, score=-7.2 required=5.0 tests=BAYES_00, RCVD_IN_DNSWL_HI, 
	RP_MATCHES_RCVD,
	UNPARSEABLE_RELAY autolearn=unavailable version=3.3.1
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on mail.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=86891">Andrey Ryabinin</a> - June 18, 2015, 12:22 p.m.</div>
<pre class="content">
On 06/18/2015 12:08 PM, Borislav Petkov wrote:
<span class="quote">&gt; On Thu, Jun 18, 2015 at 10:36:52AM +0300, Alexander Popov wrote:</span>
<span class="quote">&gt;&gt; Physical addresses in KASan shadow region page tables need fixup similarly</span>
<span class="quote">&gt;&gt; to the other page tables. Current code doesn&#39;t do it which causes</span>
<span class="quote">&gt;&gt; kernel halt if phys_base is not zero.</span>
<span class="quote">&gt;&gt; So let&#39;s initialize KASan shadow region page tables in kasan_early_init()</span>
<span class="quote">&gt;&gt; using __pa_nodebug() which considers phys_base.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Signed-off-by: Alexander Popov &lt;alpopov@ptsecurity.com&gt;</span>
<span class="quote">&gt;&gt; ---</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Notes:</span>
<span class="quote">&gt;&gt;     Changes from v2:</span>
<span class="quote">&gt;&gt;     - move KASan shadow region page tables to BSS;</span>
<span class="quote">&gt;&gt;     - use __PAGE_KERNEL flags for describing kasan_zero_page in kasan_zero_pte.</span>
<span class="quote">&gt;&gt;     </span>
<span class="quote">&gt;&gt;     Changes from v3:</span>
<span class="quote">&gt;&gt;     - improve commit message.</span>
<span class="quote">&gt;&gt;     </span>
<span class="quote">&gt;&gt;     Changes from v4:</span>
<span class="quote">&gt;&gt;     - add Andrey&#39;s patch which removes faulty clear_page(init_level4_pgt);</span>
<span class="quote">&gt;&gt;     - call kasan_map_early_shadow() for early_level4_pgt and init_level4_pgt</span>
<span class="quote">&gt;&gt;         in kasan_early_init().</span>
<span class="quote">&gt;&gt;     </span>
<span class="quote">&gt;&gt;     Changes from v5:</span>
<span class="quote">&gt;&gt;     - restore clear_page(init_level4_pgt), but put it just after clear_bss()</span>
<span class="quote">&gt;&gt;         to consolidate early KASan initialization;</span>
<span class="quote">&gt;&gt;     - remove the comment which stopped bringing much profit to the code</span>
<span class="quote">&gt;&gt;         readability. Otherwise describing all the new order dependences</span>
<span class="quote">&gt;&gt;         would be too verbose.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt;  arch/x86/include/asm/kasan.h |  8 ++------</span>
<span class="quote">&gt;&gt;  arch/x86/kernel/head64.c     | 10 ++++------</span>
<span class="quote">&gt;&gt;  arch/x86/kernel/head_64.S    | 29 -----------------------------</span>
<span class="quote">&gt;&gt;  arch/x86/mm/kasan_init_64.c  | 36 ++++++++++++++++++++++++++++++++++--</span>
<span class="quote">&gt;&gt;  4 files changed, 40 insertions(+), 43 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; So I applied it ontop of rc8 and did enable KASAN, see attached .config.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Build log contains:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; scripts/Makefile.kasan:23: CONFIG_KASAN: compiler does not support all options. Trying minimal configuration</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; and the guest booted up to here:</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; ...</span>
<span class="quote">&gt; [    0.000000] e820: [mem 0x80000000-0xfeffbfff] available for PCI devices</span>
<span class="quote">&gt; [    0.000000] clocksource refined-jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 7645519600211568 ns</span>
<span class="quote">&gt; [    0.000000] setup_percpu: NR_CPUS:8 nr_cpumask_bits:8 nr_cpu_ids:8 nr_node_ids:1</span>
<span class="quote">&gt; [    0.000000] PERCPU: Embedded 490 pages/cpu @ffff88006b400000 s1970136 r8192 d28712 u2097152</span>
<span class="quote">&gt; [    0.000000] pcpu-alloc: s1970136 r8192 d28712 u2097152 alloc=1*2097152</span>
<span class="quote">&gt; [    0.000000] pcpu-alloc: [0] 0 [0] 1 [0] 2 [0] 3 [0] 4 [0] 5 [0] 6 [0] 7 </span>
<span class="quote">&gt; [    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 515944</span>
<span class="quote">&gt; [    0.000000] Kernel command line: root=/dev/sda1 resume=/dev/sdb1 debug ignore_loglevel log_buf_len=16M earlyprintk=ttyS0,115200 console=ttyS0,115200 console=tty0 </span>
<span class="quote">&gt; [    0.000000] PID hash table entries: 4096 (order: 3, 32768 bytes)</span>
<span class="quote">&gt; [    0.000000] Dentry cache hash table entries: 262144 (order: 9, 2097152 bytes)</span>
<span class="quote">&gt; [    0.000000] Inode-cache hash table entries: 131072 (order: 8, 1048576 bytes)</span>
<span class="quote">&gt; [    0.000000] xsave: enabled xstate_bv 0x7, cntxt size 0x340 using standard form</span>
<span class="quote">&gt; [    0.000000] BUG: unable to handle kernel paging request at fffff94000000083</span>
<span class="quote">&gt; [    0.000000] IP: [&lt;ffffffff81219c2b&gt;] __asan_store4+0x2b/0xb0</span>
<span class="quote">&gt; [    0.000000] PGD 800000000208b161 PUD 208a063 PMD 2089063 PTE 8000000002088163</span>
<span class="quote">&gt; [    0.000000] Oops: 0009 [#1] PREEMPT SMP KASAN</span>
<span class="quote">&gt; [    0.000000] Modules linked in:</span>
<span class="quote">&gt; [    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 4.1.0-rc8+ #3</span>
<span class="quote">&gt; [    0.000000] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.7.5-20140531_083030-gandalf 04/01/2014</span>
<span class="quote">&gt; [    0.000000] task: ffffffff81cbd580 ti: ffffffff81ca8000 task.ti: ffffffff81ca8000</span>
<span class="quote">&gt; [    0.000000] RIP: 0010:[&lt;ffffffff81219c2b&gt;]  [&lt;ffffffff81219c2b&gt;] __asan_store4+0x2b/0xb0</span>
<span class="quote">&gt; [    0.000000] RSP: 0000:ffffffff81cafe18  EFLAGS: 00010082</span>
<span class="quote">&gt; [    0.000000] RAX: fffff94000000083 RBX: ffffea0000000440 RCX: 0000000000000004</span>
<span class="quote">&gt; [    0.000000] RDX: dffffc0000000000 RSI: 0000000000000004 RDI: ffffea000000041c</span>
<span class="quote">&gt; [    0.000000] RBP: ffffffff81cafe48 R08: ffffffff82030ce8 R09: ffffffff81cafee8</span>
<span class="quote">&gt; [    0.000000] R10: 0000000000000001 R11: 0000000000000001 R12: 000000000000000f</span>
<span class="quote">&gt; [    0.000000] R13: ffffea0000000400 R14: 0000000000000010 R15: 0000000000000001</span>
<span class="quote">&gt; [    0.000000] FS:  0000000000000000(0000) GS:ffff88006b400000(0000) knlGS:0000000000000000</span>
<span class="quote">&gt; [    0.000000] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b</span>
<span class="quote">&gt; [    0.000000] CR2: fffff94000000083 CR3: 0000000001cb8000 CR4: 00000000000406b0</span>
<span class="quote">&gt; [    0.000000] Stack:</span>
<span class="quote">&gt; [    0.000000]  ffffffff81cafeb8 ffffffff81fcacc0 ffffffff81cafee8 ffffffff81cafee0</span>
<span class="quote">&gt; [    0.000000]  ffffffff81cafef0 ffffffff82030ce8 ffffffff81cafe98 ffffffff81f942f8</span>
<span class="quote">&gt; [    0.000000]  ffffffff82030cd0 0000000482030d40 0000000000099000 0000000000000099</span>
<span class="quote">&gt; [    0.000000] Call Trace:</span>
<span class="quote">&gt; [    0.000000]  [&lt;ffffffff81fcacc0&gt;] ? __next_mem_range+0x2cf/0x309</span>
<span class="quote">&gt; [    0.000000]  [&lt;ffffffff81f942f8&gt;] __free_pages_bootmem+0x4d/0x10a</span>
<span class="quote">&gt; [    0.000000]  [&lt;ffffffff81f98fab&gt;] __free_memory_core+0x79/0x8d</span>
<span class="quote">&gt; [    0.000000]  [&lt;ffffffff81f991fe&gt;] free_all_bootmem+0x5f/0xe3</span>
<span class="quote">&gt; [    0.000000]  [&lt;ffffffff81f892fc&gt;] mem_init+0xe/0x4a</span>
<span class="quote">&gt; [    0.000000]  [&lt;ffffffff81f6ff90&gt;] start_kernel+0x2bb/0x500</span>
<span class="quote">&gt; [    0.000000]  [&lt;ffffffff81f6f120&gt;] ? early_idt_handler_array+0x120/0x120</span>
<span class="quote">&gt; [    0.000000]  [&lt;ffffffff81f6f4a8&gt;] x86_64_start_reservations+0x2a/0x2c</span>
<span class="quote">&gt; [    0.000000]  [&lt;ffffffff81f6f5e3&gt;] x86_64_start_kernel+0x139/0x148</span>
<span class="quote">&gt; [    0.000000] Code: 55 48 b8 ff ff ff ff ff 7f ff ff 48 89 e5 48 83 ec 30 48 39 c7 76 59 48 89 f8 48 ba 00 00 00 00 00 fc ff df 48 c1 e8 03 48 01 d0 &lt;66&gt; 83 38 00 75 07 c9 c3 0f 1f 44 00 00 48 8d 4f 03 48 89 ce 48 </span>
<span class="quote">&gt; [    0.000000] RIP  [&lt;ffffffff81219c2b&gt;] __asan_store4+0x2b/0xb0</span>
<span class="quote">&gt; [    0.000000]  RSP &lt;ffffffff81cafe18&gt;</span>
<span class="quote">&gt; [    0.000000] CR2: fffff94000000083</span>
<span class="quote">&gt; [    0.000000] ---[ end trace 1e56b2b303866485 ]---</span>
<span class="quote">&gt; [    0.000000] Kernel panic - not syncing: Attempted to kill the idle task!</span>
<span class="quote">&gt; [    0.000000] ---[ end Kernel panic - not syncing: Attempted to kill the idle task!</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Now, if this really is caused by a compiler shortcoming, I think the</span>
<span class="quote">&gt; build should be failed in the scripts/Makefile.kasan check instead of</span>
<span class="quote">&gt; continuing.</span>
<span class="quote">&gt; </span>

Whatever compiler you use, it shouldn&#39;t crash.
I see on problem which should be fixed by patch below.
Could you please try it?

---
<span class="from">From: Andrey Ryabinin &lt;a.ryabinin@samsung.com&gt;</span>
Subject: [PATCH] x86_64: kasan: flush tlbs after switching cr3

load_cr3() doesn&#39;t cause tlb_flush if PGE enabled.
This may cause tons of false positive reports or kernel crash.
To fix this __flush_tlb_all() should be called explicitly
after cr3 changed.
<span class="signed-off-by">
Signed-off-by: Andrey Ryabinin &lt;a.ryabinin@samsung.com&gt;</span>
---
 arch/x86/mm/kasan_init_64.c | 2 ++
 1 file changed, 2 insertions(+)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7500">Borislav Petkov</a> - June 18, 2015, 2:55 p.m.</div>
<pre class="content">
On Thu, Jun 18, 2015 at 03:22:25PM +0300, Andrey Ryabinin wrote:
<span class="quote">&gt; Whatever compiler you use, it shouldn&#39;t crash. I see on problem which</span>
<span class="quote">&gt; should be fixed by patch below. Could you please try it?</span>

Just did. No change.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=86891">Andrey Ryabinin</a> - June 18, 2015, 4:05 p.m.</div>
<pre class="content">
On 06/18/2015 05:55 PM, Borislav Petkov wrote:
<span class="quote">&gt; On Thu, Jun 18, 2015 at 03:22:25PM +0300, Andrey Ryabinin wrote:</span>
<span class="quote">&gt;&gt; Whatever compiler you use, it shouldn&#39;t crash. I see on problem which</span>
<span class="quote">&gt;&gt; should be fixed by patch below. Could you please try it?</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Just did. No change.</span>
<span class="quote">&gt; </span>

So this is a separate issue and unfortunately I can&#39;t reproduce it.
What qemu version do you use and how you run it (qemu&#39;s command line options)?
--
To unsubscribe from this list: send the line &quot;unsubscribe linux-kernel&quot; in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
Please read the FAQ at  http://www.tux.org/lkml/
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=7500">Borislav Petkov</a> - June 18, 2015, 4:38 p.m.</div>
<pre class="content">
On Thu, Jun 18, 2015 at 07:05:04PM +0300, Andrey Ryabinin wrote:
<span class="quote">&gt; What qemu version do you use and how you run it (qemu&#39;s command line</span>
<span class="quote">&gt; options)?</span>

Here it is:

qemu-system-x86_64
 -enable-kvm
 -gdb tcp::1234
 -cpu Opteron_G5
 -m 2048
 -hda /home/boris/kvm/x86_64.img
 -hdb /home/boris/kvm/swap.img
 -boot menu=off,order=c
 -localtime
 -net nic,model=rtl8139
 -net user,hostfwd=tcp::1235-:22
 -usbdevice tablet
 -kernel /home/boris/kernel/linux-2.6/arch/x86/boot/bzImage
 -append &quot;root=/dev/sda1 resume=/dev/sdb1 debug ignore_loglevel log_buf_len=16M earlyprintk=ttyS0,115200 console=ttyS0,115200 console=tty0&quot;
 -monitor pty
 -virtfs local,path=/tmp,mount_tag=tmp,security_model=none
 -serial file:/home/boris/kvm/test-x86_64-1235.log
 -snapshot
 -smp 8
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/mm/kasan_init_64.c b/arch/x86/mm/kasan_init_64.c</span>
<span class="p_header">index 0e4a05f..5d26642 100644</span>
<span class="p_header">--- a/arch/x86/mm/kasan_init_64.c</span>
<span class="p_header">+++ b/arch/x86/mm/kasan_init_64.c</span>
<span class="p_chunk">@@ -208,6 +208,7 @@</span> <span class="p_context"> void __init kasan_init(void)</span>

 	memcpy(early_level4_pgt, init_level4_pgt, sizeof(early_level4_pgt));
 	load_cr3(early_level4_pgt);
<span class="p_add">+	__flush_tlb_all();</span>

 	clear_pgds(KASAN_SHADOW_START, KASAN_SHADOW_END);

<span class="p_chunk">@@ -234,5 +235,6 @@</span> <span class="p_context"> void __init kasan_init(void)</span>
 	memset(kasan_zero_page, 0, PAGE_SIZE);

 	load_cr3(init_level4_pgt);
<span class="p_add">+	__flush_tlb_all();</span>
 	init_task.kasan_depth = 0;
 }

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



