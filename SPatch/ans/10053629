
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[25/30] x86, kaiser: add debugfs file to turn KAISER on/off at runtime - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [25/30] x86, kaiser: add debugfs file to turn KAISER on/off at runtime</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=64071">Dave Hansen</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 10, 2017, 7:31 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171110193153.D45596C9@viggo.jf.intel.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10053629/mbox/"
   >mbox</a>
|
   <a href="/patch/10053629/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10053629/">/patch/10053629/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	ECB5C60365 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 10 Nov 2017 19:33:59 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id DE79F2B43A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 10 Nov 2017 19:33:59 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D321F2B43D; Fri, 10 Nov 2017 19:33:59 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4C4F92B43A
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Fri, 10 Nov 2017 19:33:59 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754664AbdKJTdz (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 10 Nov 2017 14:33:55 -0500
Received: from mga05.intel.com ([192.55.52.43]:10120 &quot;EHLO mga05.intel.com&quot;
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753721AbdKJTcM (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 10 Nov 2017 14:32:12 -0500
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
	by fmsmga105.fm.intel.com with ESMTP; 10 Nov 2017 11:32:12 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i=&quot;5.44,375,1505804400&quot;; d=&quot;scan&#39;208&quot;;a=&quot;1302062&quot;
Received: from viggo.jf.intel.com (HELO localhost.localdomain)
	([10.54.39.119])
	by fmsmga001.fm.intel.com with ESMTP; 10 Nov 2017 11:32:11 -0800
Subject: [PATCH 25/30] x86,
	kaiser: add debugfs file to turn KAISER on/off at runtime
To: linux-kernel@vger.kernel.org
Cc: linux-mm@kvack.org, dave.hansen@linux.intel.com,
	moritz.lipp@iaik.tugraz.at, daniel.gruss@iaik.tugraz.at,
	michael.schwarz@iaik.tugraz.at, richard.fellner@student.tugraz.at,
	luto@kernel.org, torvalds@linux-foundation.org,
	keescook@google.com, hughd@google.com, x86@kernel.org
From: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;
Date: Fri, 10 Nov 2017 11:31:53 -0800
References: &lt;20171110193058.BECA7D88@viggo.jf.intel.com&gt;
In-Reply-To: &lt;20171110193058.BECA7D88@viggo.jf.intel.com&gt;
Message-Id: &lt;20171110193153.D45596C9@viggo.jf.intel.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=64071">Dave Hansen</a> - Nov. 10, 2017, 7:31 p.m.</div>
<pre class="content">
<span class="from">From: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;</span>

This will be used in a few patches.  Right now, it&#39;s not wired up
to do anything useful.
<span class="signed-off-by">
Signed-off-by: Dave Hansen &lt;dave.hansen@linux.intel.com&gt;</span>
Cc: Moritz Lipp &lt;moritz.lipp@iaik.tugraz.at&gt;
Cc: Daniel Gruss &lt;daniel.gruss@iaik.tugraz.at&gt;
Cc: Michael Schwarz &lt;michael.schwarz@iaik.tugraz.at&gt;
Cc: Richard Fellner &lt;richard.fellner@student.tugraz.at&gt;
Cc: Andy Lutomirski &lt;luto@kernel.org&gt;
Cc: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;
Cc: Kees Cook &lt;keescook@google.com&gt;
Cc: Hugh Dickins &lt;hughd@google.com&gt;
Cc: x86@kernel.org
---

 b/arch/x86/mm/kaiser.c |   48 ++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 48 insertions(+)
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff -puN arch/x86/mm/kaiser.c~kaiser-dynamic-debugfs arch/x86/mm/kaiser.c</span>
<span class="p_header">--- a/arch/x86/mm/kaiser.c~kaiser-dynamic-debugfs	2017-11-10 11:22:18.900244925 -0800</span>
<span class="p_header">+++ b/arch/x86/mm/kaiser.c	2017-11-10 11:22:18.904244925 -0800</span>
<span class="p_chunk">@@ -29,6 +29,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/string.h&gt;
 #include &lt;linux/types.h&gt;
 #include &lt;linux/bug.h&gt;
<span class="p_add">+#include &lt;linux/debugfs.h&gt;</span>
 #include &lt;linux/init.h&gt;
 #include &lt;linux/interrupt.h&gt;
 #include &lt;linux/spinlock.h&gt;
<span class="p_chunk">@@ -457,3 +458,50 @@</span> <span class="p_context"> void kaiser_remove_mapping(unsigned long</span>
 	 */
 	__native_flush_tlb_global();
 }
<span class="p_add">+</span>
<span class="p_add">+int kaiser_enabled = 1;</span>
<span class="p_add">+static ssize_t kaiser_enabled_read_file(struct file *file, char __user *user_buf,</span>
<span class="p_add">+			     size_t count, loff_t *ppos)</span>
<span class="p_add">+{</span>
<span class="p_add">+	char buf[32];</span>
<span class="p_add">+	unsigned int len;</span>
<span class="p_add">+</span>
<span class="p_add">+	len = sprintf(buf, &quot;%d\n&quot;, kaiser_enabled);</span>
<span class="p_add">+	return simple_read_from_buffer(user_buf, count, ppos, buf, len);</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static ssize_t kaiser_enabled_write_file(struct file *file,</span>
<span class="p_add">+		 const char __user *user_buf, size_t count, loff_t *ppos)</span>
<span class="p_add">+{</span>
<span class="p_add">+	char buf[32];</span>
<span class="p_add">+	ssize_t len;</span>
<span class="p_add">+	unsigned int enable;</span>
<span class="p_add">+</span>
<span class="p_add">+	len = min(count, sizeof(buf) - 1);</span>
<span class="p_add">+	if (copy_from_user(buf, user_buf, len))</span>
<span class="p_add">+		return -EFAULT;</span>
<span class="p_add">+</span>
<span class="p_add">+	buf[len] = &#39;\0&#39;;</span>
<span class="p_add">+	if (kstrtoint(buf, 0, &amp;enable))</span>
<span class="p_add">+		return -EINVAL;</span>
<span class="p_add">+</span>
<span class="p_add">+	if (enable &gt; 1)</span>
<span class="p_add">+		return -EINVAL;</span>
<span class="p_add">+</span>
<span class="p_add">+	WRITE_ONCE(kaiser_enabled, enable);</span>
<span class="p_add">+	return count;</span>
<span class="p_add">+}</span>
<span class="p_add">+</span>
<span class="p_add">+static const struct file_operations fops_kaiser_enabled = {</span>
<span class="p_add">+	.read = kaiser_enabled_read_file,</span>
<span class="p_add">+	.write = kaiser_enabled_write_file,</span>
<span class="p_add">+	.llseek = default_llseek,</span>
<span class="p_add">+};</span>
<span class="p_add">+</span>
<span class="p_add">+static int __init create_kaiser_enabled(void)</span>
<span class="p_add">+{</span>
<span class="p_add">+	debugfs_create_file(&quot;kaiser-enabled&quot;, S_IRUSR | S_IWUSR,</span>
<span class="p_add">+			    arch_debugfs_dir, NULL, &amp;fops_kaiser_enabled);</span>
<span class="p_add">+	return 0;</span>
<span class="p_add">+}</span>
<span class="p_add">+late_initcall(create_kaiser_enabled);</span>

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



