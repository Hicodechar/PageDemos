
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[5/7] MIPS: Octeon: Automatically provision CVMSEG space. - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [5/7] MIPS: Octeon: Automatically provision CVMSEG space.</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=31592">David Daney</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Nov. 2, 2017, 12:36 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;20171102003606.19913-6-david.daney@cavium.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/10037741/mbox/"
   >mbox</a>
|
   <a href="/patch/10037741/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/10037741/">/patch/10037741/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	7E9F6602A0 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  2 Nov 2017 00:36:52 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6EA3528C22
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  2 Nov 2017 00:36:52 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 6382028C4A; Thu,  2 Nov 2017 00:36:52 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9512E28C22
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Thu,  2 Nov 2017 00:36:51 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S934079AbdKBAgu (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Wed, 1 Nov 2017 20:36:50 -0400
Received: from mail-sn1nam02on0046.outbound.protection.outlook.com
	([104.47.36.46]:43314
	&quot;EHLO NAM02-SN1-obe.outbound.protection.outlook.com&quot;
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S934037AbdKBAgq (ORCPT &lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Wed, 1 Nov 2017 20:36:46 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=CAVIUMNETWORKS.onmicrosoft.com; s=selector1-cavium-com;
	h=From:Date:Subject:Message-ID:Content-Type:MIME-Version;
	bh=64hUgxWJO3gISBjk7i4oHGumBGNP5aRyGeiOcLNk4zk=;
	b=YkfgUdwEoetIrmAXidePbXNfdwwEt2VmEOir0Kxwa7QRMsiyBsy7SYInzfW9POTFaPgfY5X975qLyeWqt5H2yvfAFpteu+DfwCrFGjFXdA5joQFMR131QavLeg6rjXDntBIyqDCwqBjXFUXxpOGggdMDc4DDNf+91LWh9DtNLYU=
Authentication-Results: spf=none (sender IP is )
	smtp.mailfrom=David.Daney@cavium.com; 
Received: from ddl.caveonetworks.com (50.233.148.156) by
	CY4PR07MB3496.namprd07.prod.outlook.com (10.171.252.153) with
	Microsoft SMTP Server (version=TLS1_2,
	cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P256) id
	15.20.178.6; Thu, 2 Nov 2017 00:36:42 +0000
From: David Daney &lt;david.daney@cavium.com&gt;
To: linux-mips@linux-mips.org, ralf@linux-mips.org,
	James Hogan &lt;james.hogan@mips.com&gt;, netdev@vger.kernel.org,
	&quot;David S. Miller&quot; &lt;davem@davemloft.net&gt;,
	Rob Herring &lt;robh+dt@kernel.org&gt;, Mark Rutland &lt;mark.rutland@arm.com&gt;
Cc: linux-kernel@vger.kernel.org, &quot;Steven J. Hill&quot; &lt;steven.hill@cavium.com&gt;,
	devicetree@vger.kernel.org, David Daney &lt;david.daney@cavium.com&gt;,
	Carlos Munoz &lt;cmunoz@caviumnetworks.com&gt;
Subject: [PATCH 5/7] MIPS: Octeon: Automatically provision CVMSEG space.
Date: Wed,  1 Nov 2017 17:36:04 -0700
Message-Id: &lt;20171102003606.19913-6-david.daney@cavium.com&gt;
X-Mailer: git-send-email 2.13.6
In-Reply-To: &lt;20171102003606.19913-1-david.daney@cavium.com&gt;
References: &lt;20171102003606.19913-1-david.daney@cavium.com&gt;
MIME-Version: 1.0
Content-Type: text/plain
X-Originating-IP: [50.233.148.156]
X-ClientProxiedBy: CO2PR07CA0072.namprd07.prod.outlook.com (10.174.192.40) To
	CY4PR07MB3496.namprd07.prod.outlook.com (10.171.252.153)
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: c5081ad2-6914-423b-10f0-08d52189cab5
X-Microsoft-Antispam: UriScan:; BCL:0; PCL:0;
	RULEID:(22001)(4534020)(4602075)(2017052603199);
	SRVR:CY4PR07MB3496; 
X-Microsoft-Exchange-Diagnostics: 1; CY4PR07MB3496;
	3:Ja98L5VVD9O21ea0Ji4JRSerrUYni3hIMXHHnqIked6MCXntURSWNYMDelYk7KOf3lUx+CCmScfEvjoakAPruv+NEIjbms5TrLC3sjssH6PqxeIkdzT9D+NDLoY0Ptt+4JNv1m3QBXqKQWK+yArUlMFQdLCq5cx8JkEqknt7pZ0SwIo8Rc9yNZwPN6MwOmpuUQ+WmaxxDXEox5xteRjS8gbvSp+m95xyTpaBplAlb8OdoEVW7rnyRNijEd7bNDVg;
	25:Hc1w6K75buBrQEk9gbDAL0QsqB6mCx80VPytGs6Edra/QbRhUkO2rNzMv3xNngbR+hgHDJKb8IgzGlHZslmYJ34JP7dozfoHD6J93DK2iwP78FC3+s7Z9ZnF95/87omTM/bb/4Q8peMNLqGvNMvFRot+LHu1qRIvJAipKEJukC0xlKo8DnuLzQcnOfI7rs6FDsEsSNC1YX2cYqBW/2c3Xqwj9PJ/WDDjmcZCJlc7kGcJsoQO7bW+BHRjjsAZTlsdRUBqTQd4lV1VtNxPJPGRNHUr/jNDmcNb17C/HNN3yelGMZfsVg2casQRUpyaGioOWI0eUzLDEKIZUPOsL0JSYA==;
	31:a7XyrzpqBcChYx4HHOF9Z7KN9k37BtHOAnT9/sfUQvkUEwCoSi/ejC2kxyhOOfcHWnaMw9BcrJKp6wfMn3AYNfBfBw9znjkrCDE9pz1YMM5Vu7a/52ujS3HciKEmT9M5KSDIdcFFgzfF3y4gs8Y8E3eFHKAuHrhHZpA6azPxMZPO8KuwxWLsd40emneOUTrJpyh/sdMWg9d5MtBfVaCeDMzKpP5WXSrlBBbV64ngz5g=
X-MS-TrafficTypeDiagnostic: CY4PR07MB3496:
X-Microsoft-Exchange-Diagnostics: 1; CY4PR07MB3496;
	20:6Id30a7veR0fRBSiwx74a+1qLi/rdESHqXAInULIU04OqmuiB1+VeGNnxnNt9lEireHRU0w8Fs0Sur5w1+QPxuLHs3G8rYyn126HaXpnbI0Qa88aHDk9CBRHTks/GKwL0/wenZjxtuoIkk1S4ovLVwZFFG1Hmg6XoXg7wZz+s+1mjCzlYOWCRtGWRJsvh4a+SJ+/NLNLlsfB9ey2wZHSnjitxaPxb7wmSRmg0/xhfX5FsB4789IWLKWhFPsIgpPb/b5lCgUsEADwb01q1pep/eBoJuqDyRq9MTLaiRHayrwj5z5fwJ6g+xnUwb+b0oDjS6Wn2qc2UQNAmEy49YyjNjDHYYrCpCi6Tu721YOut/cbY3qalgBHJer8rkZTckkda/1kHmPcf2xE2/SBYLt7HjXlSsnFX2vzYtilGvcvChlfAx6ykE93/8HBbh2UZsTCypexxCy2OdVq771NBgQl6gFaAJw19eeYmNUCWAqaq0zyxFACuYJUjzin5NND1qiL;
	4:/ldzQ5FKZmgydmTto57SyagAmlKO7mPEoRF3EUXF+J9j0po7CmE77Rg4xCoe9BRlvlcmsD6I5e+9wU7f8eToX0Q8FA2RbK8mhwAaoCjmQiWwsRdlj4p1YgVgmOtGSwQxFuV2uwPXM//s8wKZNpKu8l6Jt8ZPlkj1tbxAp3TlRhDKAQeP5lS6zfFbgEGOcFJtOI6DBIM5inAISBJQqYnE/hUF6twlNAa5cBjEgpGAufaYw2gfnU3qvsxivKpyTqJyPwDmVPk8CoLpeFQ3ZlA6RQ==
X-Exchange-Antispam-Report-Test: UriScan:;
X-Microsoft-Antispam-PRVS: &lt;CY4PR07MB34965036E8E845D0508722B7975C0@CY4PR07MB3496.namprd07.prod.outlook.com&gt;
X-Exchange-Antispam-Report-CFA-Test: BCL:0; PCL:0;
	RULEID:(100000700101)(100105000095)(100000701101)(100105300095)(100000702101)(100105100095)(6040450)(2401047)(5005006)(8121501046)(10201501046)(93006095)(93001095)(3002001)(100000703101)(100105400095)(3231020)(6041248)(20161123555025)(20161123560025)(20161123562025)(20161123564025)(20161123558100)(201703131423075)(201702281528075)(201703061421075)(201703061406153)(6072148)(201708071742011)(100000704101)(100105200095)(100000705101)(100105500095);
	SRVR:CY4PR07MB3496; BCL:0; PCL:0;
	RULEID:(100000800101)(100110000095)(100000801101)(100110300095)(100000802101)(100110100095)(100000803101)(100110400095)(100000804101)(100110200095)(100000805101)(100110500095);
	SRVR:CY4PR07MB3496; 
X-Forefront-PRVS: 047999FF16
X-Forefront-Antispam-Report: SFV:NSPM;
	SFS:(10009020)(6009001)(346002)(376002)(189002)(199003)(25786009)(72206003)(16526018)(50226002)(53416004)(7736002)(105586002)(305945005)(101416001)(48376002)(478600001)(50986999)(6506006)(76176999)(50466002)(33646002)(47776003)(5003940100001)(106356001)(107886003)(68736007)(2906002)(4326008)(6666003)(6486002)(2950100002)(6512007)(316002)(110136005)(97736004)(16586007)(54906003)(5660300001)(53936002)(189998001)(3846002)(36756003)(6116002)(8936002)(66066001)(1076002)(8676002)(575784001)(81166006)(81156014)(86362001)(69596002);
	DIR:OUT; SFP:1101; SCL:1; SRVR:CY4PR07MB3496;
	H:ddl.caveonetworks.com; FPR:; SPF:None; PTR:InfoNoRecords;
	MX:1; A:1; LANG:en; 
Received-SPF: None (protection.outlook.com: cavium.com does not designate
	permitted sender hosts)
X-Microsoft-Exchange-Diagnostics: =?us-ascii?Q?1; CY4PR07MB3496;
	23:d9660yZK5vSBT8+vutbD12ifhB4HJSSPwJ+k+nCiG?=
	=?us-ascii?Q?l6V6O2A/83t5AGeX7WhuWvLvMWleRx2Km5CWkOdPyoaNVaOZA95zquf0d6Eo?=
	=?us-ascii?Q?unfMgg9qlKP6lYhk1tJ0ISI+Ppr0r1GyfIWBXR8kOEBfpi9mhvWxP6q/q8Fe?=
	=?us-ascii?Q?JsICuCyqOor2nwSMgdw+0FeTJd+DrGd+qC5rIb5mJHAUt6ogHOZN/NFONNnn?=
	=?us-ascii?Q?Eph3sU+sh6SCFU20DbXmDnqGD/PrB6yAzba0nBCgN+kAqM6ebQMCbZjYBVxT?=
	=?us-ascii?Q?pvN8x3ORcotScsr8JY1+N4DLymU3FhYUemBW0wJe6t+aodpNqlIHDtOh6rej?=
	=?us-ascii?Q?tiZD3D0iMUdeNmMG6WMIfFXoeWiGYSH+y+oC7eiTCG0oSPKQPIYvioCzOmJW?=
	=?us-ascii?Q?CB1206vkX90RsP2le3Z46Tkx+BAqhxVB6WKzqHWy7fO7MpKbeQkGIFeKjOT0?=
	=?us-ascii?Q?Yl6A/IIeV+EI1FeX2/e1aAuYuG5YPLU2Fm66TrvPdvQqBKOxLPf+HV/7raJ7?=
	=?us-ascii?Q?yhvpVvYZqiYt3qWV8cT44CJYiAj+i8yqLglZG8r5DURvkWRADIgfeFOJSyRE?=
	=?us-ascii?Q?RjnkRlkTwjEZXqMiN5oqyBq301GL9cIXIUla04LMXx8rRBBaVUTKT2rD9LV8?=
	=?us-ascii?Q?IqnVUQsN5t9hRzV6KaKorsJRO4ToDcVtHfIszMMMrSrE7XaaNwJxZovVHbGC?=
	=?us-ascii?Q?hFae56CgtBZ6kaCDjPzinm04pXiTWCFyhaaMUDZn501c9c/XaTzjFUE9aw6+?=
	=?us-ascii?Q?I3gXvME84nP9LUDX2ukDTQUj6AOtQp8hha3izaMkSHGZ90wu1ruonR1Ng6si?=
	=?us-ascii?Q?2wfawlmpw+tog++VxykPtxK3lU8Xk3+KPJlZoiSWT3wkqFrODcADtnHtSJn7?=
	=?us-ascii?Q?CKJJCmI/ss7N1zqs8WVT196Rl6q9k/LRGE3OYBiAk2Li0D/T3lJ0eSIGkQyx?=
	=?us-ascii?Q?QuajpkZeGcWyTu+Lf7fXxg0eObxVyacqINiANKkIo9R5encKv16Wk7QPXV/R?=
	=?us-ascii?Q?lQZCVZ3mV0PE8leqHQ3bbopoax+SE4sSmQprb9d4U7myMKhGp7GAX9GEDk6e?=
	=?us-ascii?Q?hTOjLmiAVojA3ihEDX9beR1VKovba2T69+b62ewlsf+78OZ2yHwEWB4IXFhi?=
	=?us-ascii?Q?UzWRM3cC7MUvFW1RE9xztQ2IQVvmBVuAPEvLcNeiFth5QlVCaRTOuNlzwCBV?=
	=?us-ascii?Q?tL/9XZzO8upd0bTmzkBPxlRnYexDt2CdSX+?=
X-Microsoft-Exchange-Diagnostics: 1; CY4PR07MB3496;
	6:Kxp2GclyEfEna5AQ8E/rj1MEpwqIYzpNUf7uI8qJ9ZnOJ/MB7spcFxDkGQmgMsW3lLKzsuvkJmX7sxKYuJkrpUVNzB+cMRgpm1LT75rPRjiAI+mpXMU4BDwp006bfHWg8qQ5+RCAw1LFXpuKhZoT5pmnQPYr8D4JL1AYBZAt1V7OuXjPIgkShFXlr1S9SwqND4hPN7qnkP1wl263ryO5E6OxInKw0I1FYrVwwd4i9ptI/Jdl9VC8pE/HLFy8K3zwSqkSthQT/IXzde2Jp0JFR0sNF29s12Tq/Sy9fhQVBuKEjjKgALP5qL0pMuUdOI1E4oW5j4UOTUenHssM+WjQCSY656PG7UM/Icypc9lhLXU=;
	5:3YkrLIkU6xnF6AH/1Txx6RCLMw/yLt4Xr8Nj9W4Mq/s13cF6VpYGN/S3sNP9JQEs/FSF1S+ll/adJx3visqEH7uZk3nOHGkgYs64Vvgw6BL6sYyD3GKmUe6uEWAhP/6CNeDW9r+trllYuzSKpinKzh6a01Q1fOrvs50ujdbVEIs=;
	24:CFY2RMrzADRTISFxutHku8ZP7f5Iz6Gt1XD6CrzBw6OR3PH3WUSAo8l61u/O9KkZWFEaI+ptFfArylMGm/PrrKxioB6QMyijRWhZICResLg=;
	7:w+d769Ao8QPJ+jGkiyzrHeluRcnHIDfG5cVxT+RjMYfj+vQQto5bWChP2nj5nj/uz6skrKC1IYl7XDWZejzUDXHS+eB9nHcteygVaXW23FE2yeauverNH/roC3lPwWOnOINY7PdU3B19UxFRs4tx8rTS2naq1OFdhpDi5nQu1+dl4nfxrJeWMWuVgfykKTMGK/I7/bVZvdlGJPl+zsEUIB57hJYUNWnI6MsqNHTrpffHJ7jSjU5VAqbqqO6PwGrS
SpamDiagnosticOutput: 1:99
SpamDiagnosticMetadata: NSPM
X-OriginatorOrg: cavium.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 02 Nov 2017 00:36:42.9299
	(UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: c5081ad2-6914-423b-10f0-08d52189cab5
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 711e4ccf-2e9b-4bcf-a551-4094005b6194
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CY4PR07MB3496
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=31592">David Daney</a> - Nov. 2, 2017, 12:36 a.m.</div>
<pre class="content">
Remove CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE and automatically calculate
the amount of CVMSEG space needed.

1st 128-bytes: Use by IOBDMA
2nd 128-bytes: Reserved by kernel for scratch/TLS emulation.
3rd 128-bytes: OCTEON-III LMTLINE

New config variable CONFIG_CAVIUM_OCTEON_EXTRA_CVMSEG provisions
additional lines, defaults to zero.
<span class="signed-off-by">
Signed-off-by: David Daney &lt;david.daney@cavium.com&gt;</span>
<span class="signed-off-by">Signed-off-by: Carlos Munoz &lt;cmunoz@caviumnetworks.com&gt;</span>
---
 arch/mips/cavium-octeon/Kconfig                    | 27 ++++++++++++--------
 arch/mips/cavium-octeon/setup.c                    | 16 ++++++------
 .../asm/mach-cavium-octeon/kernel-entry-init.h     | 20 +++++++++------
 arch/mips/include/asm/mipsregs.h                   |  2 ++
 arch/mips/include/asm/octeon/octeon.h              |  2 ++
 arch/mips/include/asm/processor.h                  |  2 +-
 arch/mips/kernel/octeon_switch.S                   |  2 --
 arch/mips/kernel/unaligned.c                       |  3 +++
 arch/mips/mm/tlbex.c                               | 29 ++++++----------------
 9 files changed, 52 insertions(+), 51 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=143191">kbuild test robot</a> - Nov. 5, 2017, 7:45 a.m.</div>
<pre class="content">
Hi David,

I love your patch! Yet something to improve:

[auto build test ERROR on linus/master]
[also build test ERROR on v4.14-rc7]
[if your patch is applied to the wrong git tree, please drop us a note to help improve the system]

url:    https://github.com/0day-ci/linux/commits/David-Daney/Cavium-OCTEON-III-network-driver/20171105-012026
config: mips-cavium_octeon_defconfig (attached as .config)
compiler: mips64-linux-gnuabi64-gcc (Debian 6.1.1-9) 6.1.1 20160705
reproduce:
        wget https://raw.githubusercontent.com/intel/lkp-tests/master/sbin/make.cross -O ~/bin/make.cross
        chmod +x ~/bin/make.cross
        # save the attached .config to linux build tree
        make.cross ARCH=mips 

All error/warnings (new ones prefixed by &gt;&gt;):

   In file included from drivers/staging/octeon/ethernet-rx.c:31:0:
   drivers/staging/octeon/ethernet-rx.c: In function &#39;cvm_oct_poll&#39;:
<span class="quote">&gt;&gt; drivers/staging/octeon/ethernet-defines.h:35:38: error: &#39;CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE&#39; undeclared (first use in this function)</span>
    #define USE_ASYNC_IOBDMA            (CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0)
                                         ^
<span class="quote">&gt;&gt; drivers/staging/octeon/ethernet-rx.c:204:6: note: in expansion of macro &#39;USE_ASYNC_IOBDMA&#39;</span>
     if (USE_ASYNC_IOBDMA) {
         ^~~~~~~~~~~~~~~~
   drivers/staging/octeon/ethernet-defines.h:35:38: note: each undeclared identifier is reported only once for each function it appears in
    #define USE_ASYNC_IOBDMA            (CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0)
                                         ^
<span class="quote">&gt;&gt; drivers/staging/octeon/ethernet-rx.c:204:6: note: in expansion of macro &#39;USE_ASYNC_IOBDMA&#39;</span>
     if (USE_ASYNC_IOBDMA) {
         ^~~~~~~~~~~~~~~~
--
   In file included from drivers/staging/octeon/ethernet-tx.c:30:0:
   drivers/staging/octeon/ethernet-tx.c: In function &#39;cvm_oct_xmit&#39;:
<span class="quote">&gt;&gt; drivers/staging/octeon/ethernet-defines.h:35:38: error: &#39;CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE&#39; undeclared (first use in this function)</span>
    #define USE_ASYNC_IOBDMA            (CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0)
                                         ^
<span class="quote">&gt;&gt; drivers/staging/octeon/ethernet-tx.c:182:6: note: in expansion of macro &#39;USE_ASYNC_IOBDMA&#39;</span>
     if (USE_ASYNC_IOBDMA) {
         ^~~~~~~~~~~~~~~~
   drivers/staging/octeon/ethernet-defines.h:35:38: note: each undeclared identifier is reported only once for each function it appears in
    #define USE_ASYNC_IOBDMA            (CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0)
                                         ^
<span class="quote">&gt;&gt; drivers/staging/octeon/ethernet-tx.c:182:6: note: in expansion of macro &#39;USE_ASYNC_IOBDMA&#39;</span>
     if (USE_ASYNC_IOBDMA) {
         ^~~~~~~~~~~~~~~~

vim +/CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE +35 drivers/staging/octeon/ethernet-defines.h

80ff0fd3 David Daney 2009-05-05  34  
80ff0fd3 David Daney 2009-05-05 @35  #define USE_ASYNC_IOBDMA            (CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0)
80ff0fd3 David Daney 2009-05-05  36  

:::::: The code at line 35 was first introduced by commit
:::::: 80ff0fd3ab6451407a20c19b80c1643c4a6d6434 Staging: Add octeon-ethernet driver files.

:::::: TO: David Daney &lt;ddaney@caviumnetworks.com&gt;
:::::: CC: Ralf Baechle &lt;ralf@linux-mips.org&gt;

---
0-DAY kernel test infrastructure                Open Source Technology Center
https://lists.01.org/pipermail/kbuild-all                   Intel Corporation
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/mips/cavium-octeon/Kconfig b/arch/mips/cavium-octeon/Kconfig</span>
<span class="p_header">index 211ef5b57214..fc6a1b44605b 100644</span>
<span class="p_header">--- a/arch/mips/cavium-octeon/Kconfig</span>
<span class="p_header">+++ b/arch/mips/cavium-octeon/Kconfig</span>
<span class="p_chunk">@@ -10,21 +10,26 @@</span> <span class="p_context"> config CAVIUM_CN63XXP1</span>
 	  non-CN63XXP1 hardware, so it is recommended to select &quot;n&quot;
 	  unless it is known the workarounds are needed.
 
<span class="p_del">-config CAVIUM_OCTEON_CVMSEG_SIZE</span>
<span class="p_del">-	int &quot;Number of L1 cache lines reserved for CVMSEG memory&quot;</span>
<span class="p_del">-	range 0 54</span>
<span class="p_del">-	default 1</span>
<span class="p_del">-	help</span>
<span class="p_del">-	  CVMSEG LM is a segment that accesses portions of the dcache as a</span>
<span class="p_del">-	  local memory; the larger CVMSEG is, the smaller the cache is.</span>
<span class="p_del">-	  This selects the size of CVMSEG LM, which is in cache blocks. The</span>
<span class="p_del">-	  legally range is from zero to 54 cache blocks (i.e. CVMSEG LM is</span>
<span class="p_del">-	  between zero and 6192 bytes).</span>
<span class="p_del">-</span>
 endif # CPU_CAVIUM_OCTEON
 
 if CAVIUM_OCTEON_SOC
 
<span class="p_add">+config CAVIUM_OCTEON_EXTRA_CVMSEG</span>
<span class="p_add">+	int &quot;Number of extra L1 cache lines reserved for CVMSEG memory&quot;</span>
<span class="p_add">+	range 0 50</span>
<span class="p_add">+	default 0</span>
<span class="p_add">+	help</span>
<span class="p_add">+	  CVMSEG LM is a segment that accesses portions of the dcache</span>
<span class="p_add">+	  as a local memory; the larger CVMSEG is, the smaller the</span>
<span class="p_add">+	  cache is.  The kernel uses two or three blocks (one for TLB</span>
<span class="p_add">+	  exception handlers, one for driver IOBDMA operations, and on</span>
<span class="p_add">+	  models that need it, one for LMTDMA operations). This</span>
<span class="p_add">+	  selects an optional extra number of CVMSEG lines for use by</span>
<span class="p_add">+	  other software.</span>
<span class="p_add">+</span>
<span class="p_add">+	  Normally no extra lines are required, and this parameter</span>
<span class="p_add">+	  should be set to zero.</span>
<span class="p_add">+</span>
 config CAVIUM_OCTEON_LOCK_L2
 	bool &quot;Lock often used kernel code in the L2&quot;
 	default &quot;y&quot;
<span class="p_header">diff --git a/arch/mips/cavium-octeon/setup.c b/arch/mips/cavium-octeon/setup.c</span>
<span class="p_header">index 99e6a68bc652..51c4d3c3cada 100644</span>
<span class="p_header">--- a/arch/mips/cavium-octeon/setup.c</span>
<span class="p_header">+++ b/arch/mips/cavium-octeon/setup.c</span>
<span class="p_chunk">@@ -68,6 +68,12 @@</span> <span class="p_context"> extern void pci_console_init(const char *arg);</span>
 static unsigned long long max_memory = ULLONG_MAX;
 static unsigned long long reserve_low_mem;
 
<span class="p_add">+/*</span>
<span class="p_add">+ * modified in hernel-entry-init.h, must have an initial value to keep</span>
<span class="p_add">+ * it from being clobbered when bss is zeroed.</span>
<span class="p_add">+ */</span>
<span class="p_add">+u32 octeon_cvmseg_lines = 2;</span>
<span class="p_add">+</span>
 DEFINE_SEMAPHORE(octeon_bootbus_sem);
 EXPORT_SYMBOL(octeon_bootbus_sem);
 
<span class="p_chunk">@@ -604,11 +610,7 @@</span> <span class="p_context"> void octeon_user_io_init(void)</span>
 
 	/* R/W If set, CVMSEG is available for loads/stores in
 	 * kernel/debug mode. */
<span class="p_del">-#if CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0</span>
 	cvmmemctl.s.cvmsegenak = 1;
<span class="p_del">-#else</span>
<span class="p_del">-	cvmmemctl.s.cvmsegenak = 0;</span>
<span class="p_del">-#endif</span>
 	if (OCTEON_IS_OCTEON3()) {
 		/* Enable LMTDMA */
 		cvmmemctl.s.lmtena = 1;
<span class="p_chunk">@@ -626,9 +628,9 @@</span> <span class="p_context"> void octeon_user_io_init(void)</span>
 
 	/* Setup of CVMSEG is done in kernel-entry-init.h */
 	if (smp_processor_id() == 0)
<span class="p_del">-		pr_notice(&quot;CVMSEG size: %d cache lines (%d bytes)\n&quot;,</span>
<span class="p_del">-			  CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE,</span>
<span class="p_del">-			  CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE * 128);</span>
<span class="p_add">+		pr_notice(&quot;CVMSEG size: %u cache lines (%u bytes)\n&quot;,</span>
<span class="p_add">+			  octeon_cvmseg_lines,</span>
<span class="p_add">+			  octeon_cvmseg_lines * 128);</span>
 
 	if (octeon_has_feature(OCTEON_FEATURE_FAU)) {
 		union cvmx_iob_fau_timeout fau_timeout;
<span class="p_header">diff --git a/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h b/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h</span>
<span class="p_header">index c38b38ce5a3d..cdcca60978a2 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/mach-cavium-octeon/kernel-entry-init.h</span>
<span class="p_chunk">@@ -26,11 +26,18 @@</span> <span class="p_context"></span>
 	# a3 = address of boot descriptor block
 	.set push
 	.set arch=octeon
<span class="p_add">+	mfc0	v1, CP0_PRID_REG</span>
<span class="p_add">+	andi	v1, 0xff00</span>
<span class="p_add">+	li	v0, 0x9500		# cn78XX or later</span>
<span class="p_add">+	subu	v1, v1, v0</span>
<span class="p_add">+	li	t2, 2 + CONFIG_CAVIUM_OCTEON_EXTRA_CVMSEG</span>
<span class="p_add">+	bltz	v1, 1f</span>
<span class="p_add">+	addiu	t2, 1			# t2 has cvmseg_size</span>
<span class="p_add">+1:</span>
 	# Read the cavium mem control register
 	dmfc0	v0, CP0_CVMMEMCTL_REG
 	# Clear the lower 6 bits, the CVMSEG size
<span class="p_del">-	dins	v0, $0, 0, 6</span>
<span class="p_del">-	ori	v0, CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE</span>
<span class="p_add">+	dins	v0, t2, 0, 6</span>
 	dmtc0	v0, CP0_CVMMEMCTL_REG	# Write the cavium mem control register
 	dmfc0	v0, CP0_CVMCTL_REG	# Read the cavium control register
 	# Disable unaligned load/store support but leave HW fixup enabled
<span class="p_chunk">@@ -70,7 +77,7 @@</span> <span class="p_context"></span>
 	# Flush dcache after config change
 	cache	9, 0($0)
 	# Zero all of CVMSEG to make sure parity is correct
<span class="p_del">-	dli	v0, CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE</span>
<span class="p_add">+	move	v0, t2</span>
 	dsll	v0, 7
 	beqz	v0, 2f
 1:	dsubu	v0, 8
<span class="p_chunk">@@ -126,12 +133,7 @@</span> <span class="p_context"></span>
 	LONG_L	sp, (t0)
 	# Set the SP global variable to zero so the master knows we&#39;ve started
 	LONG_S	zero, (t0)
<span class="p_del">-#ifdef __OCTEON__</span>
<span class="p_del">-	syncw</span>
<span class="p_del">-	syncw</span>
<span class="p_del">-#else</span>
 	sync
<span class="p_del">-#endif</span>
 	# Jump to the normal Linux SMP entry point
 	j   smp_bootstrap
 	nop
<span class="p_chunk">@@ -148,6 +150,8 @@</span> <span class="p_context"></span>
 
 #endif /* CONFIG_SMP */
 octeon_main_processor:
<span class="p_add">+	dla	v0, octeon_cvmseg_lines</span>
<span class="p_add">+	sw	t2, 0(v0)</span>
 	.set pop
 .endm
 
<span class="p_header">diff --git a/arch/mips/include/asm/mipsregs.h b/arch/mips/include/asm/mipsregs.h</span>
<span class="p_header">index a6810923b3f0..df7654d7333d 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/mipsregs.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/mipsregs.h</span>
<span class="p_chunk">@@ -1126,6 +1126,8 @@</span> <span class="p_context"></span>
 #define FPU_CSR_RD	0x3	/* towards -Infinity */
 
 
<span class="p_add">+#define CAVIUM_OCTEON_SCRATCH_OFFSET (2 * 128 - 16 - 32768)</span>
<span class="p_add">+</span>
 #ifndef __ASSEMBLY__
 
 /*
<span class="p_header">diff --git a/arch/mips/include/asm/octeon/octeon.h b/arch/mips/include/asm/octeon/octeon.h</span>
<span class="p_header">index d184592e6515..02eb194b2cdc 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/octeon/octeon.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/octeon/octeon.h</span>
<span class="p_chunk">@@ -392,6 +392,8 @@</span> <span class="p_context"> static inline uint32_t octeon_npi_read32(uint64_t address)</span>
 
 extern struct cvmx_bootinfo *octeon_bootinfo;
 
<span class="p_add">+extern u32 octeon_cvmseg_lines;</span>
<span class="p_add">+</span>
 extern uint64_t octeon_bootloader_entry_addr;
 
 extern void (*octeon_irq_setup_secondary)(void);
<span class="p_header">diff --git a/arch/mips/include/asm/processor.h b/arch/mips/include/asm/processor.h</span>
<span class="p_header">index 95b8c471f572..3d264008afcb 100644</span>
<span class="p_header">--- a/arch/mips/include/asm/processor.h</span>
<span class="p_header">+++ b/arch/mips/include/asm/processor.h</span>
<span class="p_chunk">@@ -216,7 +216,7 @@</span> <span class="p_context"> struct octeon_cop2_state {</span>
 	.cp2			= {0,},
 
 struct octeon_cvmseg_state {
<span class="p_del">-	unsigned long cvmseg[CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE]</span>
<span class="p_add">+	unsigned long cvmseg[CONFIG_CAVIUM_OCTEON_EXTRA_CVMSEG + 3]</span>
 			    [cpu_dcache_line_size() / sizeof(unsigned long)];
 };
 
<span class="p_header">diff --git a/arch/mips/kernel/octeon_switch.S b/arch/mips/kernel/octeon_switch.S</span>
<span class="p_header">index e42113fe2762..4f56902d5ee7 100644</span>
<span class="p_header">--- a/arch/mips/kernel/octeon_switch.S</span>
<span class="p_header">+++ b/arch/mips/kernel/octeon_switch.S</span>
<span class="p_chunk">@@ -29,7 +29,6 @@</span> <span class="p_context"></span>
 	cpu_save_nonscratch a0
 	LONG_S	ra, THREAD_REG31(a0)
 
<span class="p_del">-#if CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0</span>
 	/* Check if we need to store CVMSEG state */
 	dmfc0	t0, $11,7	/* CvmMemCtl */
 	bbit0	t0, 6, 3f	/* Is user access enabled? */
<span class="p_chunk">@@ -58,7 +57,6 @@</span> <span class="p_context"></span>
 	dmfc0	t0, $11,7	/* CvmMemCtl */
 	xori	t0, t0, 0x40	/* Bit 6 is CVMSEG user enable */
 	dmtc0	t0, $11,7	/* CvmMemCtl */
<span class="p_del">-#endif</span>
 3:
 
 #if defined(CONFIG_CC_STACKPROTECTOR) &amp;&amp; !defined(CONFIG_SMP)
<span class="p_header">diff --git a/arch/mips/kernel/unaligned.c b/arch/mips/kernel/unaligned.c</span>
<span class="p_header">index 2d0b912f9e3e..610f9b4ccdae 100644</span>
<span class="p_header">--- a/arch/mips/kernel/unaligned.c</span>
<span class="p_header">+++ b/arch/mips/kernel/unaligned.c</span>
<span class="p_chunk">@@ -2281,6 +2281,9 @@</span> <span class="p_context"> static void emulate_load_store_MIPS16e(struct pt_regs *regs, void __user * addr)</span>
 	force_sig(SIGILL, current);
 }
 
<span class="p_add">+#ifdef CONFIG_CPU_CAVIUM_OCTEON</span>
<span class="p_add">+#include &lt;asm/octeon/octeon.h&gt;</span>
<span class="p_add">+#endif</span>
 asmlinkage void do_ade(struct pt_regs *regs)
 {
 	enum ctx_state prev_state;
<span class="p_header">diff --git a/arch/mips/mm/tlbex.c b/arch/mips/mm/tlbex.c</span>
<span class="p_header">index 79b9f2ad3ff5..3d3dfba465ae 100644</span>
<span class="p_header">--- a/arch/mips/mm/tlbex.c</span>
<span class="p_header">+++ b/arch/mips/mm/tlbex.c</span>
<span class="p_chunk">@@ -115,33 +115,17 @@</span> <span class="p_context"> static int use_lwx_insns(void)</span>
 		return 0;
 	}
 }
<span class="p_del">-#if defined(CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE) &amp;&amp; \</span>
<span class="p_del">-    CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE &gt; 0</span>
<span class="p_del">-static bool scratchpad_available(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return true;</span>
<span class="p_del">-}</span>
<span class="p_del">-static int scratchpad_offset(int i)</span>
<span class="p_del">-{</span>
<span class="p_del">-	/*</span>
<span class="p_del">-	 * CVMSEG starts at address -32768 and extends for</span>
<span class="p_del">-	 * CAVIUM_OCTEON_CVMSEG_SIZE 128 byte cache lines.</span>
<span class="p_del">-	 */</span>
<span class="p_del">-	i += 1; /* Kernel use starts at the top and works down. */</span>
<span class="p_del">-	return CONFIG_CAVIUM_OCTEON_CVMSEG_SIZE * 128 - (8 * i) - 32768;</span>
<span class="p_del">-}</span>
<span class="p_del">-#else</span>
<span class="p_del">-static bool scratchpad_available(void)</span>
<span class="p_del">-{</span>
<span class="p_del">-	return false;</span>
<span class="p_del">-}</span>
<span class="p_add">+</span>
 static int scratchpad_offset(int i)
 {
<span class="p_add">+	if (IS_ENABLED(CONFIG_CPU_CAVIUM_OCTEON))</span>
<span class="p_add">+		return (CAVIUM_OCTEON_SCRATCH_OFFSET - (8 * i));</span>
<span class="p_add">+</span>
 	BUG();
 	/* Really unreachable, but evidently some GCC want this. */
 	return 0;
 }
<span class="p_del">-#endif</span>
<span class="p_add">+</span>
 /*
  * Found by experiment: At least some revisions of the 4kc throw under
  * some circumstances a machine check exception, triggered by invalid
<span class="p_chunk">@@ -1302,7 +1286,8 @@</span> <span class="p_context"> static void build_r4000_tlb_refill_handler(void)</span>
 	memset(relocs, 0, sizeof(relocs));
 	memset(final_handler, 0, sizeof(final_handler));
 
<span class="p_del">-	if (IS_ENABLED(CONFIG_64BIT) &amp;&amp; (scratch_reg &gt;= 0 || scratchpad_available()) &amp;&amp; use_bbit_insns()) {</span>
<span class="p_add">+	if (IS_ENABLED(CONFIG_64BIT) &amp;&amp; use_bbit_insns() &amp;&amp;</span>
<span class="p_add">+	   (scratch_reg &gt;= 0 || IS_ENABLED(CONFIG_CPU_CAVIUM_OCTEON))) {</span>
 		htlb_info = build_fast_tlb_refill_handler(&amp;p, &amp;l, &amp;r, K0, K1,
 							  scratch_reg);
 		vmalloc_mode = refill_scratch;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



