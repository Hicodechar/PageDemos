
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>mm: Fix mem_cgroup_oom_disable() call missing - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    mm: Fix mem_cgroup_oom_disable() call missing</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=89031">Laurent Dufour</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 5, 2017, 3:30 p.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1504625439-31313-1-git-send-email-ldufour@linux.vnet.ibm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9939225/mbox/"
   >mbox</a>
|
   <a href="/patch/9939225/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9939225/">/patch/9939225/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	D932B60350 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  5 Sep 2017 15:30:56 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id CB4832898D
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  5 Sep 2017 15:30:56 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id BE871289CA; Tue,  5 Sep 2017 15:30:56 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.9 required=2.0 tests=BAYES_00,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 55EC628995
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Tue,  5 Sep 2017 15:30:56 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752017AbdIEPar (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Tue, 5 Sep 2017 11:30:47 -0400
Received: from mx0b-001b2d01.pphosted.com ([148.163.158.5]:51002 &quot;EHLO
	mx0a-001b2d01.pphosted.com&quot; rhost-flags-OK-OK-OK-FAIL)
	by vger.kernel.org with ESMTP id S1751276AbdIEPaq (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Tue, 5 Sep 2017 11:30:46 -0400
Received: from pps.filterd (m0098421.ppops.net [127.0.0.1])
	by mx0a-001b2d01.pphosted.com (8.16.0.21/8.16.0.21) with SMTP id
	v85FSarx140784
	for &lt;linux-kernel@vger.kernel.org&gt;; Tue, 5 Sep 2017 11:30:46 -0400
Received: from e06smtp13.uk.ibm.com (e06smtp13.uk.ibm.com [195.75.94.109])
	by mx0a-001b2d01.pphosted.com with ESMTP id 2csweqc242-1
	(version=TLSv1.2 cipher=AES256-SHA bits=256 verify=NOT)
	for &lt;linux-kernel@vger.kernel.org&gt;; Tue, 05 Sep 2017 11:30:46 -0400
Received: from localhost
	by e06smtp13.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use
	Only! Violators will be prosecuted
	for &lt;linux-kernel@vger.kernel.org&gt; from &lt;ldufour@linux.vnet.ibm.com&gt;; 
	Tue, 5 Sep 2017 16:30:44 +0100
Received: from b06cxnps3074.portsmouth.uk.ibm.com (9.149.109.194)
	by e06smtp13.uk.ibm.com (192.168.101.143) with IBM ESMTP SMTP
	Gateway: Authorized Use Only! Violators will be prosecuted; 
	Tue, 5 Sep 2017 16:30:41 +0100
Received: from d06av22.portsmouth.uk.ibm.com (d06av22.portsmouth.uk.ibm.com
	[9.149.105.58])
	by b06cxnps3074.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with
	ESMTP id v85FUeS312189710; Tue, 5 Sep 2017 15:30:40 GMT
Received: from d06av22.portsmouth.uk.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 34B424C046;
	Tue,  5 Sep 2017 16:27:24 +0100 (BST)
Received: from d06av22.portsmouth.uk.ibm.com (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 71DCD4C044;
	Tue,  5 Sep 2017 16:27:23 +0100 (BST)
Received: from nimbus.lab.toulouse-stg.fr.ibm.com (unknown [9.145.53.197])
	by d06av22.portsmouth.uk.ibm.com (Postfix) with ESMTP;
	Tue,  5 Sep 2017 16:27:23 +0100 (BST)
From: Laurent Dufour &lt;ldufour@linux.vnet.ibm.com&gt;
To: linux-mm@kvack.org, akpm@linux-foundation.org,
	kirill@shutemov.name, linux-kernel@vger.kernel.org
Subject: [PATCH] mm: Fix mem_cgroup_oom_disable() call missing
Date: Tue,  5 Sep 2017 17:30:39 +0200
X-Mailer: git-send-email 2.7.4
X-TM-AS-GCONF: 00
x-cbid: 17090515-0012-0000-0000-00000574CC69
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 17090515-0013-0000-0000-000018ED03E6
Message-Id: &lt;1504625439-31313-1-git-send-email-ldufour@linux.vnet.ibm.com&gt;
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10432:, ,
	definitions=2017-09-05_07:, , signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
	spamscore=0 suspectscore=0
	malwarescore=0 phishscore=0 adultscore=0 bulkscore=0 classifier=spam
	adjust=0 reason=mlx scancount=1 engine=8.0.1-1707230000
	definitions=main-1709050221
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=89031">Laurent Dufour</a> - Sept. 5, 2017, 3:30 p.m.</div>
<pre class="content">
Seen while reading the code, in handle_mm_fault(), in the case
arch_vma_access_permitted() is failing the call to mem_cgroup_oom_disable()
is not made.

To fix that, move the call to mem_cgroup_oom_enable() after calling
arch_vma_access_permitted() as it should not have entered the memcg OOM.

Fixes: bae473a423f6 (&quot;mm: introduce fault_env&quot;)
<span class="signed-off-by">Signed-off-by: Laurent Dufour &lt;ldufour@linux.vnet.ibm.com&gt;</span>
---
 mm/memory.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=874">Kirill A. Shutemov</a> - Sept. 5, 2017, 3:46 p.m.</div>
<pre class="content">
On Tue, Sep 05, 2017 at 05:30:39PM +0200, Laurent Dufour wrote:
<span class="quote">&gt; Seen while reading the code, in handle_mm_fault(), in the case</span>
<span class="quote">&gt; arch_vma_access_permitted() is failing the call to mem_cgroup_oom_disable()</span>
<span class="quote">&gt; is not made.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; To fix that, move the call to mem_cgroup_oom_enable() after calling</span>
<span class="quote">&gt; arch_vma_access_permitted() as it should not have entered the memcg OOM.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Fixes: bae473a423f6 (&quot;mm: introduce fault_env&quot;)</span>
<span class="quote">&gt; Signed-off-by: Laurent Dufour &lt;ldufour@linux.vnet.ibm.com&gt;</span>

Ouch. Sorry for this.
<span class="acked-by">
Acked-by: Kirill A. Shutemov &lt;kirill@shutemov.name&gt;</span>

Cc: stable@ is needed too.

It&#39;s strange we haven&#39;t seen reports of warning from
mem_cgroup_oom_enable().
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=89031">Laurent Dufour</a> - Sept. 5, 2017, 3:54 p.m.</div>
<pre class="content">
On 05/09/2017 17:46, Kirill A. Shutemov wrote:
<span class="quote">&gt; On Tue, Sep 05, 2017 at 05:30:39PM +0200, Laurent Dufour wrote:</span>
<span class="quote">&gt;&gt; Seen while reading the code, in handle_mm_fault(), in the case</span>
<span class="quote">&gt;&gt; arch_vma_access_permitted() is failing the call to mem_cgroup_oom_disable()</span>
<span class="quote">&gt;&gt; is not made.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; To fix that, move the call to mem_cgroup_oom_enable() after calling</span>
<span class="quote">&gt;&gt; arch_vma_access_permitted() as it should not have entered the memcg OOM.</span>
<span class="quote">&gt;&gt;</span>
<span class="quote">&gt;&gt; Fixes: bae473a423f6 (&quot;mm: introduce fault_env&quot;)</span>
<span class="quote">&gt;&gt; Signed-off-by: Laurent Dufour &lt;ldufour@linux.vnet.ibm.com&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Ouch. Sorry for this.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Acked-by: Kirill A. Shutemov &lt;kirill@shutemov.name&gt;</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Cc: stable@ is needed too.</span>

Andrew, should I resent it with stable in copy ?
<span class="quote">
&gt; </span>
<span class="quote">&gt; It&#39;s strange we haven&#39;t seen reports of warning from</span>
<span class="quote">&gt; mem_cgroup_oom_enable().</span>

AFAIU, arch_vma_access_permitted() is only defined for x86 and it is
failing only in the case of the protection key mismatch, not so much used
for now...

Cheers,
Laurent.
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=137061">Michal Hocko</a> - Sept. 5, 2017, 4:43 p.m.</div>
<pre class="content">
On Tue 05-09-17 17:30:39, Laurent Dufour wrote:
<span class="quote">&gt; Seen while reading the code, in handle_mm_fault(), in the case</span>
<span class="quote">&gt; arch_vma_access_permitted() is failing the call to mem_cgroup_oom_disable()</span>
<span class="quote">&gt; is not made.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; To fix that, move the call to mem_cgroup_oom_enable() after calling</span>
<span class="quote">&gt; arch_vma_access_permitted() as it should not have entered the memcg OOM.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Fixes: bae473a423f6 (&quot;mm: introduce fault_env&quot;)</span>
<span class="quote">&gt; Signed-off-by: Laurent Dufour &lt;ldufour@linux.vnet.ibm.com&gt;</span>
<span class="acked-by">
Acked-by: Michal Hocko &lt;mhocko@suse.com&gt;</span>
<span class="quote">
&gt; ---</span>
<span class="quote">&gt;  mm/memory.c | 10 +++++-----</span>
<span class="quote">&gt;  1 file changed, 5 insertions(+), 5 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/mm/memory.c b/mm/memory.c</span>
<span class="quote">&gt; index 56e48e4593cb..274547075486 100644</span>
<span class="quote">&gt; --- a/mm/memory.c</span>
<span class="quote">&gt; +++ b/mm/memory.c</span>
<span class="quote">&gt; @@ -3888,6 +3888,11 @@ int handle_mm_fault(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt;  	/* do counter updates before entering really critical section. */</span>
<span class="quote">&gt;  	check_sync_rss_stat(current);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; +	if (!arch_vma_access_permitted(vma, flags &amp; FAULT_FLAG_WRITE,</span>
<span class="quote">&gt; +					    flags &amp; FAULT_FLAG_INSTRUCTION,</span>
<span class="quote">&gt; +					    flags &amp; FAULT_FLAG_REMOTE))</span>
<span class="quote">&gt; +		return VM_FAULT_SIGSEGV;</span>
<span class="quote">&gt; +</span>
<span class="quote">&gt;  	/*</span>
<span class="quote">&gt;  	 * Enable the memcg OOM handling for faults triggered in user</span>
<span class="quote">&gt;  	 * space.  Kernel faults are handled more gracefully.</span>
<span class="quote">&gt; @@ -3895,11 +3900,6 @@ int handle_mm_fault(struct vm_area_struct *vma, unsigned long address,</span>
<span class="quote">&gt;  	if (flags &amp; FAULT_FLAG_USER)</span>
<span class="quote">&gt;  		mem_cgroup_oom_enable();</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -	if (!arch_vma_access_permitted(vma, flags &amp; FAULT_FLAG_WRITE,</span>
<span class="quote">&gt; -					    flags &amp; FAULT_FLAG_INSTRUCTION,</span>
<span class="quote">&gt; -					    flags &amp; FAULT_FLAG_REMOTE))</span>
<span class="quote">&gt; -		return VM_FAULT_SIGSEGV;</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  	if (unlikely(is_vm_hugetlb_page(vma)))</span>
<span class="quote">&gt;  		ret = hugetlb_fault(vma-&gt;vm_mm, vma, address, flags);</span>
<span class="quote">&gt;  	else</span>
<span class="quote">&gt; -- </span>
<span class="quote">&gt; 2.7.4</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; --</span>
<span class="quote">&gt; To unsubscribe, send a message with &#39;unsubscribe linux-mm&#39; in</span>
<span class="quote">&gt; the body to majordomo@kvack.org.  For more info on Linux MM,</span>
<span class="quote">&gt; see: http://www.linux-mm.org/ .</span>
<span class="quote">&gt; Don&#39;t email: &lt;a href=mailto:&quot;dont@kvack.org&quot;&gt; email@kvack.org &lt;/a&gt;</span>
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/mm/memory.c b/mm/memory.c</span>
<span class="p_header">index 56e48e4593cb..274547075486 100644</span>
<span class="p_header">--- a/mm/memory.c</span>
<span class="p_header">+++ b/mm/memory.c</span>
<span class="p_chunk">@@ -3888,6 +3888,11 @@</span> <span class="p_context"> int handle_mm_fault(struct vm_area_struct *vma, unsigned long address,</span>
 	/* do counter updates before entering really critical section. */
 	check_sync_rss_stat(current);
 
<span class="p_add">+	if (!arch_vma_access_permitted(vma, flags &amp; FAULT_FLAG_WRITE,</span>
<span class="p_add">+					    flags &amp; FAULT_FLAG_INSTRUCTION,</span>
<span class="p_add">+					    flags &amp; FAULT_FLAG_REMOTE))</span>
<span class="p_add">+		return VM_FAULT_SIGSEGV;</span>
<span class="p_add">+</span>
 	/*
 	 * Enable the memcg OOM handling for faults triggered in user
 	 * space.  Kernel faults are handled more gracefully.
<span class="p_chunk">@@ -3895,11 +3900,6 @@</span> <span class="p_context"> int handle_mm_fault(struct vm_area_struct *vma, unsigned long address,</span>
 	if (flags &amp; FAULT_FLAG_USER)
 		mem_cgroup_oom_enable();
 
<span class="p_del">-	if (!arch_vma_access_permitted(vma, flags &amp; FAULT_FLAG_WRITE,</span>
<span class="p_del">-					    flags &amp; FAULT_FLAG_INSTRUCTION,</span>
<span class="p_del">-					    flags &amp; FAULT_FLAG_REMOTE))</span>
<span class="p_del">-		return VM_FAULT_SIGSEGV;</span>
<span class="p_del">-</span>
 	if (unlikely(is_vm_hugetlb_page(vma)))
 		ret = hugetlb_fault(vma-&gt;vm_mm, vma, address, flags);
 	else

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



