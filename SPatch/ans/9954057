
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
  <title>[3/6] mm: display pkey in smaps if arch_pkeys_enabled() is true - Patchwork</title>
  <link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
  <script type="text/javascript" src="/static/js/common.js"></script>
  <script type="text/javascript" src="/static/js/jquery-1.10.1.min.js"></script>

 </head>
 <body>
  <div id="title">
  <h1 style="float: left;">
     <a
      href="/">Patchwork</a>
    [3/6] mm: display pkey in smaps if arch_pkeys_enabled() is true</h1>
  <div id="auth">

     <a href="/user/login/">login</a>
     <br/>
     <a href="/register/">register</a>
     <br/>
     <a href="/mail/">mail settings</a>

   </div>
   <div style="clear: both;"></div>
  </div>
  <div id="nav">
   <div id="navleft">
   
    <strong>Project</strong>: LKML
     :
     <a href="/project/LKML/list/"
      >patches</a>
     :
     <a href="/project/LKML/"
      >project info</a>
    
     :
     <a href="/"
     >other projects</a>
     
    
   </div>
   <div id="navright">
    <a href="/help/about/">about</a>
   </div>
   <div style="clear: both"></div>
  </div>

  <div id="content">

<script language="JavaScript" type="text/javascript">
function toggle_headers(link_id, headers_id)
{
    var link = document.getElementById(link_id)
    var headers = document.getElementById(headers_id)

    var hidden = headers.style['display'] == 'none';

    if (hidden) {
        link.innerHTML = 'hide';
        headers.style['display'] = 'block';
    } else {
        link.innerHTML = 'show';
        headers.style['display'] = 'none';
    }

}
</script>

<table class="patchmeta">
 <tr>
  <th>Submitter</th>
  <td><a href="/project/LKML/list/?submitter=2448">Ram Pai</a></td>
 </tr>
 <tr>
  <th>Date</th>
  <td>Sept. 16, 2017, 1:21 a.m.</td>
 </tr>
 <tr>
  <th>Message ID</th>
  <td>&lt;1505524870-4783-4-git-send-email-linuxram@us.ibm.com&gt;</td>
 </tr>
 <tr>
  <th>Download</th>
  <td>
   <a href="/patch/9954057/mbox/"
   >mbox</a>
|
   <a href="/patch/9954057/raw/"
   >patch</a>

   </td>
 </tr>
 <tr>
  <th>Permalink</th>
  <td><a href="/patch/9954057/">/patch/9954057/</a>
 </tr>
  <tr>
   <th>State</th>
   <td>New</td>
  </tr>


 <tr>
  <th>Headers</th>
  <td><a id="togglepatchheaders"
   href="javascript:toggle_headers('togglepatchheaders', 'patchheaders')"
   >show</a>
   <div id="patchheaders" class="patchheaders" style="display:none;">
    <pre>Return-Path: &lt;linux-kernel-owner@kernel.org&gt;
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
	[172.30.200.125])
	by pdx-korg-patchwork.web.codeaurora.org (Postfix) with ESMTP id
	2569E60208 for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 16 Sep 2017 01:22:16 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 11B0D2875F
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 16 Sep 2017 01:22:16 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 0665E28789; Sat, 16 Sep 2017 01:22:16 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.3 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	RCVD_IN_DNSWL_HI, RCVD_IN_SORBS_SPAM,
	T_DKIM_INVALID autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3195929515
	for &lt;patchwork-LKML@patchwork.kernel.org&gt;;
	Sat, 16 Sep 2017 01:22:05 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751549AbdIPBVn (ORCPT
	&lt;rfc822;patchwork-LKML@patchwork.kernel.org&gt;);
	Fri, 15 Sep 2017 21:21:43 -0400
Received: from mail-qk0-f195.google.com ([209.85.220.195]:33150 &quot;EHLO
	mail-qk0-f195.google.com&quot; rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751466AbdIPBVj (ORCPT
	&lt;rfc822;linux-kernel@vger.kernel.org&gt;);
	Fri, 15 Sep 2017 21:21:39 -0400
Received: by mail-qk0-f195.google.com with SMTP id g128so2445589qke.0;
	Fri, 15 Sep 2017 18:21:38 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=gmail.com; s=20161025;
	h=sender:from:to:cc:subject:date:message-id:in-reply-to:references;
	bh=OAiSEmvn0GP1+sSc+27UEPpLNHrQY1TXNfuMlFlyRZc=;
	b=o8DtqYLyYPQmsKvq0DczP0bg8JKXSyOnfEr+xPO6gV1TLzoepa6c1UzJ/fsd7XaHOs
	6ny+nxFrnJ7/F4b4z3dq4fuXcrRgO69qSWYLDdYgweJBf8Ph9PhRLpk5dUzMSKcbN/gR
	w5S65FxAD3bgzICQnTIFolhSa3WUwv5OdSykKG704S+O0fhUoFsytj3dnfgnuqUcxhIf
	SOmSCpRx4ptBvSkB3knKHbza9B72Qw4TbFhn9G8r06bq6tZDeX/S6Zb36gWV4gML1omy
	8akpg8ylturlcr09onRUkY/L4IPiE1/mXICJdmV1u+IDuabIBGC9gsBzad5sLS3NPTfX
	pYsA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=1e100.net; s=20161025;
	h=x-gm-message-state:sender:from:to:cc:subject:date:message-id
	:in-reply-to:references;
	bh=OAiSEmvn0GP1+sSc+27UEPpLNHrQY1TXNfuMlFlyRZc=;
	b=Y30OnFrKAfym2w1h87W84Asm66GO17jvu8khvPnqF7Aa8UhpPRG+S5IwMVa4YTyIbR
	vD8tlqiL+93cYhKLN905gTKhOBagHfGlk0Q5gjD2hdbX/W1PzQfRthN5xKAJMHXqelYM
	qcJGOIM7u1278aQzadEHFaXcdduQJIWryUYYJPzfu16lW9AzVWyfFnfTwt1yPUJqQJ2S
	y26nCfScBjzTWnbrUvUTAS17hDdu9F+Q8GMyBzZcv3iQb9lMYpruKf7+RUQvZwjlKyCw
	JnwKNImI+7kbV/fX5LK8qBaEy7rY6dhORBv5u+blYjbEMHiCHX1ctfLcS5ZEF2C8wbHn
	0iHg==
X-Gm-Message-State: AHPjjUi+dfH5F5bDXZrS3BXkTGOtqE8XHvIz3cQ5zPfn2UO6ARDOyV0J
	AtNl7GlB1GUFrQ==
X-Google-Smtp-Source: AOwi7QA6mdi6ljhoGKTQ/WCiZy72WZPKZ+DqX72M+hwU+mHG01gssiD8MvHLjDE7foMs7sv4I0zQzg==
X-Received: by 10.55.140.69 with SMTP id o66mr10481789qkd.312.1505524898234; 
	Fri, 15 Sep 2017 18:21:38 -0700 (PDT)
Received: from localhost.localdomain (50-39-103-96.bvtn.or.frontiernet.net.
	[50.39.103.96]) by smtp.gmail.com with ESMTPSA id
	v11sm1493189qkl.45.2017.09.15.18.21.35
	(version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
	Fri, 15 Sep 2017 18:21:37 -0700 (PDT)
From: Ram Pai &lt;linuxram@us.ibm.com&gt;
To: mpe@ellerman.id.au, linuxppc-dev@lists.ozlabs.org,
	linux-kernel@vger.kernel.org, linux-arch@vger.kernel.org,
	linux-mm@kvack.org, x86@kernel.org, linux-doc@vger.kernel.org
Cc: arnd@arndb.de, akpm@linux-foundation.org, corbet@lwn.net,
	mingo@redhat.com, benh@kernel.crashing.org, paulus@samba.org,
	khandual@linux.vnet.ibm.com, aneesh.kumar@linux.vnet.ibm.com,
	bsingharora@gmail.com, hbabu@us.ibm.com, mhocko@kernel.org,
	bauerman@linux.vnet.ibm.com, ebiederm@xmission.com, linuxram@us.ibm.com
Subject: [PATCH 3/6] mm: display pkey in smaps if arch_pkeys_enabled() is
	true
Date: Fri, 15 Sep 2017 18:21:07 -0700
Message-Id: &lt;1505524870-4783-4-git-send-email-linuxram@us.ibm.com&gt;
X-Mailer: git-send-email 1.7.1
In-Reply-To: &lt;1505524870-4783-1-git-send-email-linuxram@us.ibm.com&gt;
References: &lt;1505524870-4783-1-git-send-email-linuxram@us.ibm.com&gt;
Sender: linux-kernel-owner@vger.kernel.org
Precedence: bulk
List-ID: &lt;linux-kernel.vger.kernel.org&gt;
X-Mailing-List: linux-kernel@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP
</pre>
   </div>
  </td>
 </tr>
</table>

<div class="patchforms">





 <div style="clear: both;">
 </div>
</div>



<h2>Comments</h2>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=2448">Ram Pai</a> - Sept. 16, 2017, 1:21 a.m.</div>
<pre class="content">
Currently the  architecture  specific code is expected to
display  the  protection  keys  in  smap  for a given vma.
This can lead to redundant code and possibly to divergent
formats in which the key gets displayed.

This  patch  changes  the implementation. It displays the
pkey only if the architecture support pkeys.

x86 arch_show_smap() function is not needed anymore.
Delete it.
<span class="signed-off-by">
Signed-off-by: Ram Pai &lt;linuxram@us.ibm.com&gt;</span>
---
 arch/x86/kernel/setup.c |    8 --------
 fs/proc/task_mmu.c      |   11 ++++++-----
 2 files changed, 6 insertions(+), 13 deletions(-)
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=4745">Balbir Singh</a> - Sept. 22, 2017, 6:02 a.m.</div>
<pre class="content">
On Fri, 15 Sep 2017 18:21:07 -0700
Ram Pai &lt;linuxram@us.ibm.com&gt; wrote:
<span class="quote">
&gt; Currently the  architecture  specific code is expected to</span>
<span class="quote">&gt; display  the  protection  keys  in  smap  for a given vma.</span>
<span class="quote">&gt; This can lead to redundant code and possibly to divergent</span>
<span class="quote">&gt; formats in which the key gets displayed.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; This  patch  changes  the implementation. It displays the</span>
<span class="quote">&gt; pkey only if the architecture support pkeys.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; x86 arch_show_smap() function is not needed anymore.</span>
<span class="quote">&gt; Delete it.</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; Signed-off-by: Ram Pai &lt;linuxram@us.ibm.com&gt;</span>
<span class="quote">&gt; ---</span>
<span class="quote">&gt;  arch/x86/kernel/setup.c |    8 --------</span>
<span class="quote">&gt;  fs/proc/task_mmu.c      |   11 ++++++-----</span>
<span class="quote">&gt;  2 files changed, 6 insertions(+), 13 deletions(-)</span>
<span class="quote">&gt; </span>
<span class="quote">&gt; diff --git a/arch/x86/kernel/setup.c b/arch/x86/kernel/setup.c</span>
<span class="quote">&gt; index 3486d04..1953bce 100644</span>
<span class="quote">&gt; --- a/arch/x86/kernel/setup.c</span>
<span class="quote">&gt; +++ b/arch/x86/kernel/setup.c</span>
<span class="quote">&gt; @@ -1340,11 +1340,3 @@ static int __init register_kernel_offset_dumper(void)</span>
<span class="quote">&gt;  	return 0;</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  __initcall(register_kernel_offset_dumper);</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -void arch_show_smap(struct seq_file *m, struct vm_area_struct *vma)</span>
<span class="quote">&gt; -{</span>
<span class="quote">&gt; -	if (!boot_cpu_has(X86_FEATURE_OSPKE))</span>
<span class="quote">&gt; -		return;</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt; -	seq_printf(m, &quot;ProtectionKey:  %8u\n&quot;, vma_pkey(vma));</span>
<span class="quote">&gt; -}</span>
<span class="quote">&gt; diff --git a/fs/proc/task_mmu.c b/fs/proc/task_mmu.c</span>
<span class="quote">&gt; index cf25306..667d44a 100644</span>
<span class="quote">&gt; --- a/fs/proc/task_mmu.c</span>
<span class="quote">&gt; +++ b/fs/proc/task_mmu.c</span>
<span class="quote">&gt; @@ -16,6 +16,7 @@</span>
<span class="quote">&gt;  #include &lt;linux/mmu_notifier.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/page_idle.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/shmem_fs.h&gt;</span>
<span class="quote">&gt; +#include &lt;linux/pkeys.h&gt;</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt;  #include &lt;asm/elf.h&gt;</span>
<span class="quote">&gt;  #include &lt;linux/uaccess.h&gt;</span>
<span class="quote">&gt; @@ -714,10 +715,6 @@ static int smaps_hugetlb_range(pte_t *pte, unsigned long hmask,</span>
<span class="quote">&gt;  }</span>
<span class="quote">&gt;  #endif /* HUGETLB_PAGE */</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -void __weak arch_show_smap(struct seq_file *m, struct vm_area_struct *vma)</span>
<span class="quote">&gt; -{</span>
<span class="quote">&gt; -}</span>
<span class="quote">&gt; -</span>
<span class="quote">&gt;  static int show_smap(struct seq_file *m, void *v, int is_pid)</span>
<span class="quote">&gt;  {</span>
<span class="quote">&gt;  	struct vm_area_struct *vma = v;</span>
<span class="quote">&gt; @@ -803,7 +800,11 @@ static int show_smap(struct seq_file *m, void *v, int is_pid)</span>
<span class="quote">&gt;  		   (vma-&gt;vm_flags &amp; VM_LOCKED) ?</span>
<span class="quote">&gt;  			(unsigned long)(mss.pss &gt;&gt; (10 + PSS_SHIFT)) : 0);</span>
<span class="quote">&gt;  </span>
<span class="quote">&gt; -	arch_show_smap(m, vma);</span>
<span class="quote">&gt; +#ifdef CONFIG_ARCH_HAS_PKEYS</span>
<span class="quote">&gt; +	if (arch_pkeys_enabled())</span>
<span class="quote">&gt; +		seq_printf(m, &quot;ProtectionKey:  %8u\n&quot;, vma_pkey(vma));</span>
<span class="quote">&gt; +#endif</span>

Can CONFIG_ARCH_HAS_PKEYS be true, but the kernel compiled without
support for them or it&#39;s just not enabled? I think the
earlier per_arch function was better

Balbir
</pre>
</div>

<div class="comment">
<div class="meta"><a href="/project/LKML/list/?submitter=4745">Balbir Singh</a> - Sept. 22, 2017, 6:08 a.m.</div>
<pre class="content">
On Fri, 15 Sep 2017 18:21:07 -0700
Ram Pai &lt;linuxram@us.ibm.com&gt; wrote:
<span class="quote">
&gt; +#ifdef CONFIG_ARCH_HAS_PKEYS</span>
<span class="quote">&gt; +	if (arch_pkeys_enabled())</span>

Sorry, I missed this bit in my previous review
the patch makes sense
<span class="quote">
&gt; +		seq_printf(m, &quot;ProtectionKey:  %8u\n&quot;, vma_pkey(vma));</span>
<span class="quote">&gt; +#endif</span>
<span class="quote">&gt; +</span>

Balbir
</pre>
</div>



<h2>Patch</h2>
<div class="patch">
<pre class="content">
<span class="p_header">diff --git a/arch/x86/kernel/setup.c b/arch/x86/kernel/setup.c</span>
<span class="p_header">index 3486d04..1953bce 100644</span>
<span class="p_header">--- a/arch/x86/kernel/setup.c</span>
<span class="p_header">+++ b/arch/x86/kernel/setup.c</span>
<span class="p_chunk">@@ -1340,11 +1340,3 @@</span> <span class="p_context"> static int __init register_kernel_offset_dumper(void)</span>
 	return 0;
 }
 __initcall(register_kernel_offset_dumper);
<span class="p_del">-</span>
<span class="p_del">-void arch_show_smap(struct seq_file *m, struct vm_area_struct *vma)</span>
<span class="p_del">-{</span>
<span class="p_del">-	if (!boot_cpu_has(X86_FEATURE_OSPKE))</span>
<span class="p_del">-		return;</span>
<span class="p_del">-</span>
<span class="p_del">-	seq_printf(m, &quot;ProtectionKey:  %8u\n&quot;, vma_pkey(vma));</span>
<span class="p_del">-}</span>
<span class="p_header">diff --git a/fs/proc/task_mmu.c b/fs/proc/task_mmu.c</span>
<span class="p_header">index cf25306..667d44a 100644</span>
<span class="p_header">--- a/fs/proc/task_mmu.c</span>
<span class="p_header">+++ b/fs/proc/task_mmu.c</span>
<span class="p_chunk">@@ -16,6 +16,7 @@</span> <span class="p_context"></span>
 #include &lt;linux/mmu_notifier.h&gt;
 #include &lt;linux/page_idle.h&gt;
 #include &lt;linux/shmem_fs.h&gt;
<span class="p_add">+#include &lt;linux/pkeys.h&gt;</span>
 
 #include &lt;asm/elf.h&gt;
 #include &lt;linux/uaccess.h&gt;
<span class="p_chunk">@@ -714,10 +715,6 @@</span> <span class="p_context"> static int smaps_hugetlb_range(pte_t *pte, unsigned long hmask,</span>
 }
 #endif /* HUGETLB_PAGE */
 
<span class="p_del">-void __weak arch_show_smap(struct seq_file *m, struct vm_area_struct *vma)</span>
<span class="p_del">-{</span>
<span class="p_del">-}</span>
<span class="p_del">-</span>
 static int show_smap(struct seq_file *m, void *v, int is_pid)
 {
 	struct vm_area_struct *vma = v;
<span class="p_chunk">@@ -803,7 +800,11 @@</span> <span class="p_context"> static int show_smap(struct seq_file *m, void *v, int is_pid)</span>
 		   (vma-&gt;vm_flags &amp; VM_LOCKED) ?
 			(unsigned long)(mss.pss &gt;&gt; (10 + PSS_SHIFT)) : 0);
 
<span class="p_del">-	arch_show_smap(m, vma);</span>
<span class="p_add">+#ifdef CONFIG_ARCH_HAS_PKEYS</span>
<span class="p_add">+	if (arch_pkeys_enabled())</span>
<span class="p_add">+		seq_printf(m, &quot;ProtectionKey:  %8u\n&quot;, vma_pkey(vma));</span>
<span class="p_add">+#endif</span>
<span class="p_add">+</span>
 	show_smap_vma_flags(m, vma);
 	m_cache_vma(m, vma);
 	return 0;

</pre>
</div>




  </div>
  <div id="footer">
   <a href="http://jk.ozlabs.org/projects/patchwork/">patchwork</a>
   patch tracking system
  </div>
 </body>
</html>



